public class org.bouncycastle.jce.provider.X509CertificateObject extends java.security.cert.X509Certificate implements org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier
{
    private org.bouncycastle.asn1.x509.X509CertificateStructure c;
    private org.bouncycastle.asn1.x509.BasicConstraints basicConstraints;
    private boolean[] keyUsage;
    private boolean hashValueSet;
    private int hashValue;
    private org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier;

    public void <init>(org.bouncycastle.asn1.x509.X509CertificateStructure) throws java.security.cert.CertificateParsingException
    {
        byte[] $r3, $r4, $r7;
        org.bouncycastle.asn1.x509.BasicConstraints $r11;
        org.bouncycastle.asn1.DERBitString $r6;
        byte $b7;
        org.bouncycastle.asn1.ASN1Object $r5, $r10;
        boolean $z0;
        java.lang.Exception $r12, $r18;
        org.bouncycastle.asn1.x509.X509CertificateStructure r2;
        java.lang.StringBuilder $r15, $r16, $r21, $r22, $r25, $r27;
        java.security.cert.CertificateParsingException $r26, $r28;
        org.bouncycastle.jce.provider.PKCS12BagAttributeCarrierImpl $r24;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i8, $i9, $i10, i11, $i12;
        java.lang.String $r17, $r23;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        boolean[] $r8, $r9;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r2 := @parameter0: org.bouncycastle.asn1.x509.X509CertificateStructure;

        specialinvoke r0.<java.security.cert.X509Certificate: void <init>()>();

        $r24 = new org.bouncycastle.jce.provider.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r24.<org.bouncycastle.jce.provider.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier> = $r24;

        r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c> = r2;

     label01:
        $r3 = specialinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: byte[] getExtensionBytes(java.lang.String)>("2.5.29.19");

        if $r3 == null goto label02;

        $r10 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r3);

        $r11 = staticinvoke <org.bouncycastle.asn1.x509.BasicConstraints: org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r10);

        r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.BasicConstraints basicConstraints> = $r11;

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

        $r26 = new java.security.cert.CertificateParsingException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot construct BasicConstraints: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r23);

        throw $r26;

     label04:
        $r4 = specialinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: byte[] getExtensionBytes(java.lang.String)>("2.5.29.15");

        if $r4 == null goto label11;

        $r5 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r4);

        $r6 = staticinvoke <org.bouncycastle.asn1.DERBitString: org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $i0 = lengthof $r7;

        $i1 = $i0 * 8;

        $i2 = virtualinvoke $r6.<org.bouncycastle.asn1.DERBitString: int getPadBits()>();

        i3 = $i1 - $i2;

        if i3 >= 9 goto label05;

        $i10 = 9;

        goto label06;

     label05:
        $i10 = i3;

     label06:
        $r8 = newarray (boolean)[$i10];

        r0.<org.bouncycastle.jce.provider.X509CertificateObject: boolean[] keyUsage> = $r8;

        i11 = 0;

     label07:
        if i11 == i3 goto label10;

        $r9 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: boolean[] keyUsage>;

        $i9 = i11;

        $i4 = i11 / 8;

        $b7 = $r7[$i4];

        $i5 = i11 % 8;

        $i6 = 128 >>> $i5;

        $i12 = (int) $b7;

        $i8 = $i12 & $i6;

        if $i8 == 0 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        $r9[$i9] = $z0;

        i11 = i11 + 1;

        goto label07;

     label10:
        goto label12;

     label11:
        r0.<org.bouncycastle.jce.provider.X509CertificateObject: boolean[] keyUsage> = null;

     label12:
        goto label14;

     label13:
        $r12 := @caughtexception;

        $r28 = new java.security.cert.CertificateParsingException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot construct KeyUsage: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r17);

        throw $r28;

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label12 with label13;
    }

    public void checkValidity() throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException
    {
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        java.util.Date $r1;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        virtualinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: void checkValidity(java.util.Date)>($r1);

        return;
    }

    public void checkValidity(java.util.Date) throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException
    {
        java.util.Date r0, $r2, $r3;
        java.security.cert.CertificateNotYetValidException $r23;
        long $l0, $l1, $l3, $l4;
        java.security.cert.CertificateExpiredException $r21;
        byte $b2, $b5;
        int $i6, $i7;
        java.lang.String $r9, $r11, $r17, $r19;
        org.bouncycastle.jce.provider.X509CertificateObject r1;
        org.bouncycastle.asn1.x509.Time $r8, $r16;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r7, $r15;
        java.lang.StringBuilder $r6, $r10, $r14, $r18, $r20, $r22;

        r1 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r0 := @parameter0: java.util.Date;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $r2 = virtualinvoke r1.<org.bouncycastle.jce.provider.X509CertificateObject: java.util.Date getNotAfter()>();

        $l1 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        $i6 = (int) $b2;

        if $i6 <= 0 goto label1;

        $r21 = new java.security.cert.CertificateExpiredException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certificate expired on ");

        $r15 = r1.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r16 = virtualinvoke $r15.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.Time getEndDate()>();

        $r17 = virtualinvoke $r16.<org.bouncycastle.asn1.x509.Time: java.lang.String getTime()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.security.cert.CertificateExpiredException: void <init>(java.lang.String)>($r19);

        throw $r21;

     label1:
        $l3 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $r3 = virtualinvoke r1.<org.bouncycastle.jce.provider.X509CertificateObject: java.util.Date getNotBefore()>();

        $l4 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $b5 = $l3 cmp $l4;

        $i7 = (int) $b5;

        if $i7 >= 0 goto label2;

        $r23 = new java.security.cert.CertificateNotYetValidException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certificate not valid till ");

        $r7 = r1.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.Time getStartDate()>();

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.x509.Time: java.lang.String getTime()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.security.cert.CertificateNotYetValidException: void <init>(java.lang.String)>($r11);

        throw $r23;

     label2:
        return;
    }

    public int getVersion()
    {
        int $i0;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        org.bouncycastle.jce.provider.X509CertificateObject r0;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: int getVersion()>();

        return $i0;
    }

    public java.math.BigInteger getSerialNumber()
    {
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.math.BigInteger $r3;
        org.bouncycastle.asn1.DERInteger $r2;
        org.bouncycastle.jce.provider.X509CertificateObject r0;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.DERInteger getSerialNumber()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        return $r3;
    }

    public java.security.Principal getIssuerDN()
    {
        org.bouncycastle.jce.X509Principal $r0;
        org.bouncycastle.asn1.x509.X509Name $r3;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r2;
        org.bouncycastle.jce.provider.X509CertificateObject r1;

        r1 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r0 = new org.bouncycastle.jce.X509Principal;

        $r2 = r1.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.X509Name getIssuer()>();

        specialinvoke $r0.<org.bouncycastle.jce.X509Principal: void <init>(org.bouncycastle.asn1.x509.X509Name)>($r3);

        return $r0;
    }

    public javax.security.auth.x500.X500Principal getIssuerX500Principal()
    {
        byte[] $r6;
        java.lang.IllegalStateException $r8;
        org.bouncycastle.asn1.ASN1OutputStream $r1;
        javax.security.auth.x500.X500Principal $r5;
        java.io.ByteArrayOutputStream $r0;
        org.bouncycastle.asn1.x509.X509Name $r4;
        java.io.IOException $r7;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r3;
        org.bouncycastle.jce.provider.X509CertificateObject r2;

        r2 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r0);

        $r3 = r2.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.X509Name getIssuer()>();

        virtualinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r4);

        $r5 = new javax.security.auth.x500.X500Principal;

        $r6 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r6);

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t encode issuer DN");

        throw $r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.security.Principal getSubjectDN()
    {
        org.bouncycastle.jce.X509Principal $r0;
        org.bouncycastle.asn1.x509.X509Name $r3;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r2;
        org.bouncycastle.jce.provider.X509CertificateObject r1;

        r1 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r0 = new org.bouncycastle.jce.X509Principal;

        $r2 = r1.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.X509Name getSubject()>();

        specialinvoke $r0.<org.bouncycastle.jce.X509Principal: void <init>(org.bouncycastle.asn1.x509.X509Name)>($r3);

        return $r0;
    }

    public javax.security.auth.x500.X500Principal getSubjectX500Principal()
    {
        byte[] $r6;
        java.lang.IllegalStateException $r8;
        org.bouncycastle.asn1.ASN1OutputStream $r1;
        javax.security.auth.x500.X500Principal $r5;
        java.io.ByteArrayOutputStream $r0;
        org.bouncycastle.asn1.x509.X509Name $r4;
        java.io.IOException $r7;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r3;
        org.bouncycastle.jce.provider.X509CertificateObject r2;

        r2 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r0);

        $r3 = r2.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.X509Name getSubject()>();

        virtualinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r4);

        $r5 = new javax.security.auth.x500.X500Principal;

        $r6 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r6);

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t encode issuer DN");

        throw $r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.Date getNotBefore()
    {
        java.util.Date $r3;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.x509.Time $r2;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.Time getStartDate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;
    }

    public java.util.Date getNotAfter()
    {
        java.util.Date $r3;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.x509.Time $r2;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.Time getEndDate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;
    }

    public byte[] getTBSCertificate() throws java.security.cert.CertificateEncodingException
    {
        byte[] $r3;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r2;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.io.IOException $r4;
        java.lang.String $r6;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        java.security.cert.CertificateEncodingException $r5;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.TBSCertificateStructure: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.security.cert.CertificateEncodingException;

        $r6 = virtualinvoke $r4.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r5.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public byte[] getSignature()
    {
        byte[] $r3;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        org.bouncycastle.asn1.DERBitString $r2;
        org.bouncycastle.jce.provider.X509CertificateObject r0;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.DERBitString getSignature()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r3;
    }

    public java.lang.String getSigAlgName()
    {
        int i0, $i1;
        java.lang.String $r3, $r7, $r9, $r10, $r13, $r15, $r16;
        org.bouncycastle.jce.provider.X509CertificateObject r2;
        java.security.Provider $r0, $r5;
        java.lang.StringBuilder $r4, $r6, $r8, $r11, $r12, $r14;
        java.security.Provider[] $r1;

        r2 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r0 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>("BC");

        if $r0 == null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.Signature.");

        $r13 = virtualinvoke r2.<org.bouncycastle.jce.provider.X509CertificateObject: java.lang.String getSigAlgOID()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke $r0.<java.security.Provider: java.lang.String getProperty(java.lang.String)>($r15);

        if $r16 == null goto label1;

        return $r16;

     label1:
        $r1 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if i0 == $i1 goto label4;

        $r5 = $r1[i0];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.Signature.");

        $r7 = virtualinvoke r2.<org.bouncycastle.jce.provider.X509CertificateObject: java.lang.String getSigAlgOID()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r5.<java.security.Provider: java.lang.String getProperty(java.lang.String)>($r9);

        if $r10 == null goto label3;

        return $r10;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r3 = virtualinvoke r2.<org.bouncycastle.jce.provider.X509CertificateObject: java.lang.String getSigAlgOID()>();

        return $r3;
    }

    public java.lang.String getSigAlgOID()
    {
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.lang.String $r4;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.bouncycastle.asn1.DERObjectIdentifier $r3;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        return $r4;
    }

    public byte[] getSigAlgParams()
    {
        byte[] $r8;
        org.bouncycastle.asn1.DERObject $r7;
        org.bouncycastle.asn1.DEREncodable $r3, $r6;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1, $r4;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2, $r5;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        if $r3 == null goto label1;

        $r4 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r7 = interfaceinvoke $r6.<org.bouncycastle.asn1.DEREncodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.DERObject: byte[] getDEREncoded()>();

        return $r8;

     label1:
        return null;
    }

    public boolean[] getIssuerUniqueID()
    {
        byte[] $r4;
        org.bouncycastle.asn1.DERBitString $r3;
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i11, $i12;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        boolean $z0;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r2;
        boolean[] r5;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.DERBitString getIssuerUniqueId()>();

        if $r3 == null goto label5;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $i0 = lengthof $r4;

        $i1 = $i0 * 8;

        $i2 = virtualinvoke $r3.<org.bouncycastle.asn1.DERBitString: int getPadBits()>();

        $i3 = $i1 - $i2;

        r5 = newarray (boolean)[$i3];

        i11 = 0;

     label1:
        $i4 = lengthof r5;

        if i11 == $i4 goto label4;

        $i10 = i11;

        $i5 = i11 / 8;

        $b8 = $r4[$i5];

        $i6 = i11 % 8;

        $i7 = 128 >>> $i6;

        $i12 = (int) $b8;

        $i9 = $i12 & $i7;

        if $i9 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r5[$i10] = $z0;

        i11 = i11 + 1;

        goto label1;

     label4:
        return r5;

     label5:
        return null;
    }

    public boolean[] getSubjectUniqueID()
    {
        byte[] $r4;
        org.bouncycastle.asn1.DERBitString $r3;
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i11, $i12;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        boolean $z0;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r2;
        boolean[] r5;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.DERBitString getSubjectUniqueId()>();

        if $r3 == null goto label5;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $i0 = lengthof $r4;

        $i1 = $i0 * 8;

        $i2 = virtualinvoke $r3.<org.bouncycastle.asn1.DERBitString: int getPadBits()>();

        $i3 = $i1 - $i2;

        r5 = newarray (boolean)[$i3];

        i11 = 0;

     label1:
        $i4 = lengthof r5;

        if i11 == $i4 goto label4;

        $i10 = i11;

        $i5 = i11 / 8;

        $b8 = $r4[$i5];

        $i6 = i11 % 8;

        $i7 = 128 >>> $i6;

        $i12 = (int) $b8;

        $i9 = $i12 & $i7;

        if $i9 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r5[$i10] = $z0;

        i11 = i11 + 1;

        goto label1;

     label4:
        return r5;

     label5:
        return null;
    }

    public boolean[] getKeyUsage()
    {
        boolean[] $r1;
        org.bouncycastle.jce.provider.X509CertificateObject r0;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: boolean[] keyUsage>;

        return $r1;
    }

    public java.util.List getExtendedKeyUsage() throws java.security.cert.CertificateParsingException
    {
        byte[] $r1;
        org.bouncycastle.asn1.ASN1Sequence r4;
        org.bouncycastle.asn1.DERObject $r3;
        org.bouncycastle.asn1.DEREncodable $r7;
        java.security.cert.CertificateParsingException $r11;
        org.bouncycastle.asn1.ASN1InputStream $r2;
        java.lang.Exception $r10;
        java.util.ArrayList $r5;
        java.util.List $r6;
        int $i0, i1;
        java.lang.String $r9;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r8;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = specialinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: byte[] getExtensionBytes(java.lang.String)>("2.5.29.37");

        if $r1 == null goto label6;

     label1:
        $r2 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r2.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r1);

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        r4 = (org.bouncycastle.asn1.ASN1Sequence) $r3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label2:
        $i0 = virtualinvoke r4.<org.bouncycastle.asn1.ASN1Sequence: int size()>();

        if i1 == $i0 goto label3;

        $r7 = virtualinvoke r4.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(i1);

        $r8 = (org.bouncycastle.asn1.DERObjectIdentifier) $r7;

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

     label4:
        return $r6;

     label5:
        $r10 := @caughtexception;

        $r11 = new java.security.cert.CertificateParsingException;

        specialinvoke $r11.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("error processing extended key usage extension");

        throw $r11;

     label6:
        return null;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public int getBasicConstraints()
    {
        org.bouncycastle.asn1.x509.BasicConstraints $r1, $r2, $r3, $r5;
        int $i0, $i2, $i4;
        java.math.BigInteger $r4, $r6;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.BasicConstraints basicConstraints>;

        if $r1 == null goto label3;

        $r2 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.BasicConstraints basicConstraints>;

        $z0 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.BasicConstraints basicConstraints>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.BasicConstraints: java.math.BigInteger getPathLenConstraint()>();

        if $r4 != null goto label1;

        return 2147483647;

     label1:
        $r5 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.BasicConstraints basicConstraints>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.x509.BasicConstraints: java.math.BigInteger getPathLenConstraint()>();

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        return $i0;

     label2:
        $i2 = (int) -1;

        return $i2;

     label3:
        $i4 = (int) -1;

        return $i4;
    }

    public java.util.Set getCriticalExtensionOIDs()
    {
        java.util.Enumeration $r5;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r3;
        org.bouncycastle.asn1.x509.X509Extensions $r4;
        org.bouncycastle.asn1.x509.X509Extension $r8;
        java.util.HashSet $r1;
        int $i0;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r2;
        java.lang.Object $r6;
        java.lang.String $r9;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        boolean $z0, $z1;
        org.bouncycastle.asn1.DERObjectIdentifier r7;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $i0 = virtualinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: int getVersion()>();

        if $i0 != 3 goto label4;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r4 == null goto label4;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509Extensions: java.util.Enumeration oids()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (org.bouncycastle.asn1.DERObjectIdentifier) $r6;

        $r8 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>(r7);

        $z1 = virtualinvoke $r8.<org.bouncycastle.asn1.x509.X509Extension: boolean isCritical()>();

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r7.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        return $r1;

     label4:
        return null;
    }

    private byte[] getExtensionBytes(java.lang.String)
    {
        byte[] $r8;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r2;
        org.bouncycastle.asn1.x509.X509Extensions $r3;
        org.bouncycastle.asn1.x509.X509Extension $r6;
        org.bouncycastle.asn1.ASN1OctetString $r7;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.lang.String r5;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r4;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r3 == null goto label1;

        $r4 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r4.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r5);

        $r6 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>($r4);

        if $r6 == null goto label1;

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.X509Extension: org.bouncycastle.asn1.ASN1OctetString getValue()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r8;

     label1:
        return null;
    }

    public byte[] getExtensionValue(java.lang.String)
    {
        byte[] $r8;
        java.lang.IllegalStateException $r10;
        org.bouncycastle.asn1.x509.X509Extensions $r3;
        org.bouncycastle.asn1.x509.X509Extension $r6;
        org.bouncycastle.asn1.ASN1OctetString $r7;
        java.lang.String r5, $r13, $r15;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r4;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r2;
        java.lang.Exception $r9;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r3 == null goto label4;

        $r4 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r4.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r5);

        $r6 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>($r4);

        if $r6 == null goto label4;

     label1:
        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.X509Extension: org.bouncycastle.asn1.ASN1OctetString getValue()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.ASN1OctetString: byte[] getEncoded()>();

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing ");

        $r13 = virtualinvoke $r9.<java.lang.Exception: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.util.Set getNonCriticalExtensionOIDs()
    {
        java.util.Enumeration $r5;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r3;
        org.bouncycastle.asn1.x509.X509Extensions $r4;
        org.bouncycastle.asn1.x509.X509Extension $r8;
        java.util.HashSet $r1;
        int $i0;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r2;
        java.lang.Object $r6;
        java.lang.String $r9;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        boolean $z0, $z1;
        org.bouncycastle.asn1.DERObjectIdentifier r7;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $i0 = virtualinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: int getVersion()>();

        if $i0 != 3 goto label4;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r4 == null goto label4;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509Extensions: java.util.Enumeration oids()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (org.bouncycastle.asn1.DERObjectIdentifier) $r6;

        $r8 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>(r7);

        $z1 = virtualinvoke $r8.<org.bouncycastle.asn1.x509.X509Extension: boolean isCritical()>();

        if $z1 != 0 goto label2;

        $r9 = virtualinvoke r7.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        return $r1;

     label4:
        return null;
    }

    public boolean hasUnsupportedCriticalExtension()
    {
        java.util.Enumeration $r4;
        org.bouncycastle.asn1.DERObjectIdentifier r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        org.bouncycastle.asn1.x509.X509Extensions $r3;
        org.bouncycastle.asn1.x509.X509Extension $r19;
        int $i0;
        java.lang.String $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r2;
        java.lang.Object $r5;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $i0 = virtualinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: int getVersion()>();

        if $i0 != 3 goto label4;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509Extensions: java.util.Enumeration oids()>();

     label1:
        $z12 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z12 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (org.bouncycastle.asn1.DERObjectIdentifier) $r5;

        $r7 = virtualinvoke r6.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r8 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String KEY_USAGE>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r9 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label1;

        $r10 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label1;

        $r11 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY>;

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 != 0 goto label1;

        $r12 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 != 0 goto label1;

        $r13 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z5 != 0 goto label1;

        $r14 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z6 != 0 goto label1;

        $r15 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        $z7 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z7 != 0 goto label1;

        $r16 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        $z8 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z8 != 0 goto label1;

        $r17 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        $z9 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z9 != 0 goto label1;

        $r18 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS>;

        $z10 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z10 == 0 goto label2;

        goto label1;

     label2:
        $r19 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>(r6);

        $z11 = virtualinvoke $r19.<org.bouncycastle.asn1.x509.X509Extension: boolean isCritical()>();

        if $z11 == 0 goto label3;

        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    public java.security.PublicKey getPublicKey()
    {
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r2;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.security.PublicKey $r3;
        org.bouncycastle.jce.provider.X509CertificateObject r0;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        $r3 = staticinvoke <org.bouncycastle.jce.provider.JDKKeyFactory: java.security.PublicKey createPublicKeyFromPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r2);

        return $r3;
    }

    public byte[] getEncoded() throws java.security.cert.CertificateEncodingException
    {
        byte[] $r2;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.io.IOException $r3;
        java.lang.String $r5;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        java.security.cert.CertificateEncodingException $r4;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.security.cert.CertificateEncodingException;

        $r5 = virtualinvoke $r3.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r4.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r3, $r4;
        java.security.cert.Certificate r2;
        java.lang.Object r0;
        org.bouncycastle.jce.provider.X509CertificateObject r1;
        boolean $z0, $z1;
        java.security.cert.CertificateEncodingException $r5;

        r1 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof java.security.cert.Certificate;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.security.cert.Certificate) r0;

     label3:
        $r3 = virtualinvoke r1.<org.bouncycastle.jce.provider.X509CertificateObject: byte[] getEncoded()>();

        $r4 = virtualinvoke r2.<java.security.cert.Certificate: byte[] getEncoded()>();

        $z1 = staticinvoke <org.bouncycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r4);

     label4:
        return $z1;

     label5:
        $r5 := @caughtexception;

        return 0;

        catch java.security.cert.CertificateEncodingException from label3 to label4 with label5;
    }

    public synchronized int hashCode()
    {
        int $i0, $i1;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $z0 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: boolean hashValueSet>;

        if $z0 != 0 goto label1;

        $i1 = specialinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: int calculateHashCode()>();

        r0.<org.bouncycastle.jce.provider.X509CertificateObject: int hashValue> = $i1;

        r0.<org.bouncycastle.jce.provider.X509CertificateObject: boolean hashValueSet> = 1;

     label1:
        $i0 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: int hashValue>;

        return $i0;
    }

    private int calculateHashCode()
    {
        byte[] $r1;
        int $i0;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        java.security.cert.CertificateEncodingException $r2;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

     label1:
        $r1 = virtualinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: byte[] getEncoded()>();

        $i0 = staticinvoke <org.bouncycastle.util.Arrays: int hashCode(byte[])>($r1);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label3;
    }

    public void setBagAttribute(org.bouncycastle.asn1.DERObjectIdentifier, org.bouncycastle.asn1.DEREncodable)
    {
        org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier $r3;
        org.bouncycastle.asn1.DEREncodable r2;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.DERObjectIdentifier r1;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r1 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        r2 := @parameter1: org.bouncycastle.asn1.DEREncodable;

        $r3 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier>;

        interfaceinvoke $r3.<org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>(r1, r2);

        return;
    }

    public org.bouncycastle.asn1.DEREncodable getBagAttribute(org.bouncycastle.asn1.DERObjectIdentifier)
    {
        org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier $r2;
        org.bouncycastle.asn1.DEREncodable $r3;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.DERObjectIdentifier r1;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r1 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        $r2 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.bouncycastle.asn1.DEREncodable getBagAttribute(org.bouncycastle.asn1.DERObjectIdentifier)>(r1);

        return $r3;
    }

    public java.util.Enumeration getBagAttributeKeys()
    {
        org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier $r1;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        java.util.Enumeration $r2;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier>;

        $r2 = interfaceinvoke $r1.<org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier: java.util.Enumeration getBagAttributeKeys()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        byte[] $r26, $r29, $r41, $r77, $r81;
        org.bouncycastle.asn1.ASN1Sequence $r73;
        org.bouncycastle.asn1.x509.BasicConstraints $r71;
        java.util.Enumeration $r35;
        org.bouncycastle.asn1.ASN1OctetString $r39, $r40;
        java.math.BigInteger $r6;
        java.lang.Exception $r83;
        org.bouncycastle.asn1.misc.NetscapeCertType $r63;
        org.bouncycastle.asn1.misc.NetscapeRevocationURL $r59;
        org.bouncycastle.asn1.DERObject $r52, $r56, $r60, $r64, $r68, $r72;
        org.bouncycastle.asn1.x509.X509Extensions $r33;
        java.lang.StringBuffer $r0, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r27, $r30, $r43, $r44, $r51, $r54, $r58, $r62, $r66, $r70, $r74, $r75, $r78, $r79, $r82, $r85, $r86;
        java.lang.String $r1, $r24, $r28, $r34, $r50, $r53, $r76, $r80, $r84;
        java.util.Date $r12, $r15;
        org.bouncycastle.asn1.DERBitString $r65, $r69;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.bouncycastle.asn1.DERObjectIdentifier r37, $r45, $r46, $r47, $r48, $r49;
        java.security.Principal $r9, $r18;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r31;
        org.bouncycastle.asn1.x509.KeyUsage $r67;
        org.bouncycastle.asn1.x509.X509Extension $r38;
        org.bouncycastle.asn1.ASN1InputStream $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.bouncycastle.asn1.misc.VerisignCzagExtension $r55;
        org.bouncycastle.jce.provider.X509CertificateObject r3;
        org.bouncycastle.asn1.DERIA5String $r57, $r61;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r32;
        java.security.PublicKey $r21;
        java.lang.Object $r36;

        r3 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  [0]         Version: ");

        $i0 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: int getVersion()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         SerialNumber: ");

        $r6 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: java.math.BigInteger getSerialNumber()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("             IssuerDN: ");

        $r9 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: java.security.Principal getIssuerDN()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("           Start Date: ");

        $r12 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: java.util.Date getNotBefore()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("           Final Date: ");

        $r15 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: java.util.Date getNotAfter()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r17 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            SubjectDN: ");

        $r18 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: java.security.Principal getSubjectDN()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r20 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("           Public Key: ");

        $r21 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: java.security.PublicKey getPublicKey()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r23 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Signature Algorithm: ");

        $r24 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: java.lang.String getSigAlgName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r26 = virtualinvoke r3.<org.bouncycastle.jce.provider.X509CertificateObject: byte[] getSignature()>();

        $r27 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            Signature: ");

        $r28 = new java.lang.String;

        $r29 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r26, 0, 20);

        specialinvoke $r28.<java.lang.String: void <init>(byte[])>($r29);

        $r30 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        i6 = 20;

     label01:
        $i1 = lengthof $r26;

        if i6 >= $i1 goto label04;

        $i2 = lengthof $r26;

        $i3 = $i2 - 20;

        if i6 >= $i3 goto label02;

        $r79 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       ");

        $r80 = new java.lang.String;

        $r81 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r26, i6, 20);

        specialinvoke $r80.<java.lang.String: void <init>(byte[])>($r81);

        $r82 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r80);

        virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        goto label03;

     label02:
        $r75 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       ");

        $r76 = new java.lang.String;

        $i4 = lengthof $r26;

        $i5 = $i4 - i6;

        $r77 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r26, i6, $i5);

        specialinvoke $r76.<java.lang.String: void <init>(byte[])>($r77);

        $r78 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);

        virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label03:
        i6 = i6 + 20;

        goto label01;

     label04:
        $r31 = r3.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r32 = virtualinvoke $r31.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r33 = virtualinvoke $r32.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r33 == null goto label17;

        $r35 = virtualinvoke $r33.<org.bouncycastle.asn1.x509.X509Extensions: java.util.Enumeration oids()>();

        $z0 = interfaceinvoke $r35.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("       Extensions: \n");

     label05:
        $z7 = interfaceinvoke $r35.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z7 == 0 goto label17;

        $r36 = interfaceinvoke $r35.<java.util.Enumeration: java.lang.Object nextElement()>();

        r37 = (org.bouncycastle.asn1.DERObjectIdentifier) $r36;

        $r38 = virtualinvoke $r33.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>(r37);

        $r39 = virtualinvoke $r38.<org.bouncycastle.asn1.x509.X509Extension: org.bouncycastle.asn1.ASN1OctetString getValue()>();

        if $r39 == null goto label15;

        $r40 = virtualinvoke $r38.<org.bouncycastle.asn1.x509.X509Extension: org.bouncycastle.asn1.ASN1OctetString getValue()>();

        $r41 = virtualinvoke $r40.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r42 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r42.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r41);

        $r43 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       critical(");

        $z1 = virtualinvoke $r38.<org.bouncycastle.asn1.x509.X509Extension: boolean isCritical()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

     label06:
        $r45 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier BasicConstraints>;

        $z2 = virtualinvoke r37.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r45);

        if $z2 == 0 goto label07;

        $r71 = new org.bouncycastle.asn1.x509.BasicConstraints;

        $r72 = virtualinvoke $r42.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r73 = (org.bouncycastle.asn1.ASN1Sequence) $r72;

        specialinvoke $r71.<org.bouncycastle.asn1.x509.BasicConstraints: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r73);

        $r74 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r71);

        virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        goto label12;

     label07:
        $r46 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier KeyUsage>;

        $z3 = virtualinvoke r37.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r46);

        if $z3 == 0 goto label08;

        $r67 = new org.bouncycastle.asn1.x509.KeyUsage;

        $r68 = virtualinvoke $r42.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r69 = (org.bouncycastle.asn1.DERBitString) $r68;

        specialinvoke $r67.<org.bouncycastle.asn1.x509.KeyUsage: void <init>(org.bouncycastle.asn1.DERBitString)>($r69);

        $r70 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r67);

        virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        goto label12;

     label08:
        $r47 = <org.bouncycastle.asn1.misc.MiscObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier netscapeCertType>;

        $z4 = virtualinvoke r37.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r47);

        if $z4 == 0 goto label09;

        $r63 = new org.bouncycastle.asn1.misc.NetscapeCertType;

        $r64 = virtualinvoke $r42.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r65 = (org.bouncycastle.asn1.DERBitString) $r64;

        specialinvoke $r63.<org.bouncycastle.asn1.misc.NetscapeCertType: void <init>(org.bouncycastle.asn1.DERBitString)>($r65);

        $r66 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r63);

        virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        goto label12;

     label09:
        $r48 = <org.bouncycastle.asn1.misc.MiscObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier netscapeRevocationURL>;

        $z5 = virtualinvoke r37.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r48);

        if $z5 == 0 goto label10;

        $r59 = new org.bouncycastle.asn1.misc.NetscapeRevocationURL;

        $r60 = virtualinvoke $r42.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r61 = (org.bouncycastle.asn1.DERIA5String) $r60;

        specialinvoke $r59.<org.bouncycastle.asn1.misc.NetscapeRevocationURL: void <init>(org.bouncycastle.asn1.DERIA5String)>($r61);

        $r62 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r59);

        virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        goto label12;

     label10:
        $r49 = <org.bouncycastle.asn1.misc.MiscObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier verisignCzagExtension>;

        $z6 = virtualinvoke r37.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r49);

        if $z6 == 0 goto label11;

        $r55 = new org.bouncycastle.asn1.misc.VerisignCzagExtension;

        $r56 = virtualinvoke $r42.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r57 = (org.bouncycastle.asn1.DERIA5String) $r56;

        specialinvoke $r55.<org.bouncycastle.asn1.misc.VerisignCzagExtension: void <init>(org.bouncycastle.asn1.DERIA5String)>($r57);

        $r58 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r55);

        virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        goto label12;

     label11:
        $r50 = virtualinvoke r37.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r51 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value = ");

        $r52 = virtualinvoke $r42.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r53 = staticinvoke <org.bouncycastle.asn1.util.ASN1Dump: java.lang.String dumpAsString(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label12:
        goto label14;

     label13:
        $r83 := @caughtexception;

        $r84 = virtualinvoke r37.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r84);

        $r85 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value = ");

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("*****");

        virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label14:
        goto label16;

     label15:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label16:
        goto label05;

     label17:
        $r34 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r34;

        catch java.lang.Exception from label06 to label12 with label13;
    }

    public final void verify(java.security.PublicKey) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        java.security.Signature r6;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.security.PublicKey r4;
        java.lang.String $r3;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.lang.Exception $r5;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r4 := @parameter0: java.security.PublicKey;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = staticinvoke <org.bouncycastle.jce.provider.X509SignatureUtil: java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>($r2);

     label1:
        r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, "BC");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r3);

     label4:
        specialinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>(r4, r6);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        java.security.Signature $r5;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1;
        java.security.PublicKey r6;
        java.lang.String $r3, r4;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r6 := @parameter0: java.security.PublicKey;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = staticinvoke <org.bouncycastle.jce.provider.X509SignatureUtil: java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>($r2);

        $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, r4);

        specialinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>(r6, $r5);

        return;
    }

    private void checkSignature(java.security.PublicKey, java.security.Signature) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        byte[] $r11, $r12;
        org.bouncycastle.asn1.DEREncodable $r8;
        org.bouncycastle.jce.provider.X509CertificateObject r0;
        boolean $z0, $z1;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r4;
        java.security.Signature r9;
        java.security.PublicKey r10;
        java.security.cert.CertificateException $r14;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r1, $r3, $r6;
        java.security.InvalidKeyException $r13;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2, $r5, $r7;

        r0 := @this: org.bouncycastle.jce.provider.X509CertificateObject;

        r10 := @parameter0: java.security.PublicKey;

        r9 := @parameter1: java.security.Signature;

        $r1 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignature()>();

        $z0 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r14 = new java.security.cert.CertificateException;

        specialinvoke $r14.<java.security.cert.CertificateException: void <init>(java.lang.String)>("signature algorithm in TBS cert not same as outer cert");

        throw $r14;

     label1:
        $r6 = r0.<org.bouncycastle.jce.provider.X509CertificateObject: org.bouncycastle.asn1.x509.X509CertificateStructure c>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        staticinvoke <org.bouncycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.DEREncodable)>(r9, $r8);

        virtualinvoke r9.<java.security.Signature: void initVerify(java.security.PublicKey)>(r10);

        $r11 = virtualinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: byte[] getTBSCertificate()>();

        virtualinvoke r9.<java.security.Signature: void update(byte[])>($r11);

        $r12 = virtualinvoke r0.<org.bouncycastle.jce.provider.X509CertificateObject: byte[] getSignature()>();

        $z1 = virtualinvoke r9.<java.security.Signature: boolean verify(byte[])>($r12);

        if $z1 != 0 goto label2;

        $r13 = new java.security.InvalidKeyException;

        specialinvoke $r13.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Public key presented not for certificate signature");

        throw $r13;

     label2:
        return;
    }
}
