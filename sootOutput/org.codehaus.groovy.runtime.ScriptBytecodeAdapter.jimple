public class org.codehaus.groovy.runtime.ScriptBytecodeAdapter extends java.lang.Object
{
    public static final java.lang.Object[] EMPTY_ARGS;
    private static final java.lang.Integer ZERO;
    private static final java.lang.Integer MINUS_ONE;
    private static final java.lang.Integer ONE;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;

    public void <init>()
    {
        org.codehaus.groovy.runtime.ScriptBytecodeAdapter r0;

        r0 := @this: org.codehaus.groovy.runtime.ScriptBytecodeAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)
    {
        java.lang.Throwable $r1, $r3, $r4, r14;
        java.lang.Object[] $r8;
        org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack r12;
        java.lang.String $r6, $r10;
        groovy.lang.MissingPropertyException $r9;
        boolean $z0, $z1, $z2, $z3;
        groovy.lang.GroovyRuntimeException r0, $r2;
        groovy.lang.MissingMethodException $r5;
        org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack r13;
        java.lang.Class $r7, $r11;

        r0 := @parameter0: groovy.lang.GroovyRuntimeException;

        $z0 = r0 instanceof org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack;

        if $z0 == 0 goto label1;

        r12 = (org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack) r0;

        $r9 = new groovy.lang.MissingPropertyException;

        $r10 = virtualinvoke r12.<org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack: java.lang.String getProperty()>();

        $r11 = virtualinvoke r12.<org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack: java.lang.Class getType()>();

        specialinvoke $r9.<groovy.lang.MissingPropertyException: void <init>(java.lang.String,java.lang.Class)>($r10, $r11);

        return $r9;

     label1:
        $z1 = r0 instanceof org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack;

        if $z1 == 0 goto label2;

        r13 = (org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack) r0;

        $r5 = new groovy.lang.MissingMethodException;

        $r6 = virtualinvoke r13.<org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack: java.lang.String getMethod()>();

        $r7 = virtualinvoke r13.<org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack: java.lang.Class getType()>();

        $r8 = virtualinvoke r13.<org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack: java.lang.Object[] getArguments()>();

        $z3 = virtualinvoke r13.<org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack: boolean isStatic()>();

        specialinvoke $r5.<groovy.lang.MissingMethodException: void <init>(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>($r6, $r7, $r8, $z3);

        return $r5;

     label2:
        r14 = r0;

        $r1 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 == null goto label3;

        $r4 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r4 == r0 goto label3;

        r14 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label3:
        if r14 == r0 goto label4;

        $z2 = r14 instanceof groovy.lang.GroovyRuntimeException;

        if $z2 == 0 goto label4;

        $r2 = (groovy.lang.GroovyRuntimeException) r14;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r2);

        return $r3;

     label4:
        return r14;
    }

    public static java.lang.Object invokeMethodOnCurrentN(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Throwable $r6, $r11;
        java.lang.Object[] r4;
        groovy.lang.GroovyObject r0;
        java.lang.String r3, $r10;
        boolean z0, $z1, $z2;
        groovy.lang.MetaClass $r1;
        groovy.lang.GroovyRuntimeException $r5;
        groovy.lang.MissingMethodException $r7;
        java.lang.Class r2, $r8, $r9;
        java.lang.Object r12;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        z0 = r0 instanceof groovy.lang.GroovyInterceptable;

     label1:
        if z0 == 0 goto label2;

        r12 = interfaceinvoke r0.<groovy.lang.GroovyObject: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r3, r4);

        goto label3;

     label2:
        $r1 = interfaceinvoke r0.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        r12 = interfaceinvoke $r1.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean,boolean)>(r2, r0, r3, r4, 0, 1);

     label3:
        goto label7;

     label4:
        $r7 := @caughtexception;

        $z1 = $r7 instanceof org.codehaus.groovy.runtime.metaclass.MissingMethodExecutionFailed;

        if $z1 == 0 goto label5;

        $r11 = virtualinvoke $r7.<groovy.lang.MissingMethodException: java.lang.Throwable getCause()>();

        throw $r11;

     label5:
        if z0 != 0 goto label6;

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r7.<groovy.lang.MissingMethodException: java.lang.Class getType()>();

        if $r8 != $r9 goto label6;

        $r10 = virtualinvoke $r7.<groovy.lang.MissingMethodException: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label6;

        r12 = interfaceinvoke r0.<groovy.lang.GroovyObject: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r3, r4);

        goto label7;

     label6:
        throw $r7;

     label7:
        goto label9;

     label8:
        $r5 := @caughtexception;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r5);

        throw $r6;

     label9:
        return r12;

        catch groovy.lang.MissingMethodException from label1 to label3 with label4;
        catch groovy.lang.GroovyRuntimeException from label1 to label7 with label8;
    }

    public static java.lang.Object invokeMethodOnCurrentNSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] r3;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, r2, r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodOnCurrentNSpreadSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r6;
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        groovy.lang.GroovyObject r0;
        java.lang.Class r3;
        java.lang.Object $r4, $r7, $r8;
        java.lang.String r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.Object[];

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r0, r5, r6);

        return $r8;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodNSafe(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r3, $r4, r5, r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        return $r1;
    }

    public static java.lang.Object invokeMethodOnCurrent0(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] $r3;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodOnCurrent0Safe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] $r3, r5;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Object[];

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentNSafe(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodOnCurrent0SpreadSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] $r3, r5;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Object[];

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentNSpreadSafe(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodOnSuperN(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Throwable $r7;
        groovy.lang.MetaClass $r1;
        java.lang.Object[] r4;
        groovy.lang.GroovyRuntimeException $r6;
        groovy.lang.GroovyObject r0;
        java.lang.Class r2;
        java.lang.Object $r5;
        java.lang.String r3;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        $r1 = interfaceinvoke r0.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

     label1:
        $r5 = interfaceinvoke $r1.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean,boolean)>(r2, r0, r3, r4, 1, 1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r6);

        throw $r7;

     label4:
        return $r5;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static java.lang.Object invokeMethodOnSuperNSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] r3;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, r2, r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodOnSuperNSpreadSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r6;
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        groovy.lang.GroovyObject r0;
        java.lang.Class r3;
        java.lang.Object $r4, $r7, $r8;
        java.lang.String r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.Object[];

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r0, r5, r6);

        return $r8;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodNSafe(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r3, $r4, r5, r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        return $r1;
    }

    public static java.lang.Object invokeMethodOnSuper0(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] $r3;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodOnSuper0Safe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] $r3, r5;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Object[];

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperNSafe(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodOnSuper0SpreadSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] $r3, r5;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Object[];

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperNSpreadSafe(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodN(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Throwable $r5;
        java.lang.Object[] r2;
        groovy.lang.GroovyRuntimeException $r4;
        java.lang.Object r0, $r3;
        java.lang.Class r6;
        java.lang.String r1;

        r6 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.Object[];

     label1:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r1, r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r4);

        throw $r5;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static java.lang.Object invokeMethodNSafe(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r3;
        java.lang.Object r0, $r4;
        java.lang.Class r1;
        java.lang.String r2;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        if r0 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r0, r2, r3);

        return $r4;
    }

    public static java.lang.Object invokeMethodNSpreadSafe(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r6;
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        java.lang.Object r0, $r4, $r7, $r8;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.Object[];

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r3, r0, r5, r6);

        return $r8;

     label2:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label3:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodNSafe(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r3, $r4, r5, r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label3;

     label4:
        return $r1;
    }

    private static java.lang.Object[] getBoxedItems(java.lang.Object)
    {
        java.lang.Object r0;
        java.util.List $r1;
        java.lang.Object[] $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.List primitiveArrayToList(java.lang.Object)>(r0);

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r2;
    }

    public static java.lang.Object invokeMethod0(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object[] $r3;
        java.lang.Class r0;
        java.lang.Object r1, $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeMethod0Safe(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object[] $r3;
        java.lang.Object r0, $r4;
        java.lang.Class r1;
        java.lang.String r2;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodNSafe(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r0, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeMethod0SpreadSafe(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object[] $r3;
        java.lang.Class r0;
        java.lang.Object r1, $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodNSpreadSafe(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeStaticMethodN(java.lang.Class, java.lang.Class, java.lang.String, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Throwable $r5;
        java.lang.Object[] r2;
        groovy.lang.GroovyRuntimeException $r4;
        java.lang.Class r0, r6;
        java.lang.Object $r3;
        java.lang.String r1;

        r6 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.Object[];

     label1:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object)>(r0, r1, r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r4);

        throw $r5;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static java.lang.Object invokeStaticMethod0(java.lang.Class, java.lang.Class, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object[] $r3;
        java.lang.Class r0, r1;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.Object invokeNewN(java.lang.Class, java.lang.Class, java.lang.Object) throws java.lang.Throwable
    {
        java.lang.Throwable $r4;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Class r0, r5;
        java.lang.Object r1, $r2;

        r5 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.Object;

     label1:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeConstructorOf(java.lang.Class,java.lang.Object)>(r0, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static java.lang.Object invokeNew0(java.lang.Class, java.lang.Class) throws java.lang.Throwable
    {
        java.lang.Object[] $r2;
        java.lang.Class r0, r1;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        $r2 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r0, r1, $r2);

        return $r3;
    }

    public static int selectConstructorAndTransformArguments(java.lang.Object[], int, java.lang.Class)
    {
        groovy.lang.MetaClass $r2;
        groovy.lang.MetaClassRegistry $r0;
        java.lang.Object[] r3;
        int i0, $i1;
        java.lang.Class r1;

        r3 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        $r0 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        $r2 = interfaceinvoke $r0.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r1);

        $i1 = interfaceinvoke $r2.<groovy.lang.MetaClass: int selectConstructorAndTransformArguments(int,java.lang.Object[])>(i0, r3);

        return $i1;
    }

    public static java.lang.Object getFieldOnSuper(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Throwable $r8;
        groovy.lang.MetaClass $r2;
        groovy.lang.GroovyRuntimeException $r7;
        groovy.lang.GroovyObject $r1;
        java.lang.Object r0, $r5, $r6;
        java.lang.Class r3;
        java.lang.String r4;
        boolean $z0;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.String;

     label1:
        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label3;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getAttribute(java.lang.Object,java.lang.String)>(r0, r4);

     label2:
        return $r6;

     label3:
        $r1 = (groovy.lang.GroovyObject) r0;

        $r2 = interfaceinvoke $r1.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r2.<groovy.lang.MetaClass: java.lang.Object getAttribute(java.lang.Class,java.lang.Object,java.lang.String,boolean)>(r3, r0, r4, 1);

     label4:
        return $r5;

     label5:
        $r7 := @caughtexception;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r7);

        throw $r8;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label5;
        catch groovy.lang.GroovyRuntimeException from label3 to label4 with label5;
    }

    public static java.lang.Object getFieldOnSuperSafe(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Class r0;
        java.lang.Object r1, $r3;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getFieldOnSuper(java.lang.Class,java.lang.Object,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    public static java.lang.Object getFieldOnSuperSpreadSafe(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        java.lang.Object r0, $r4, $r6, $r7;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.String;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getFieldOnSuper(java.lang.Class,java.lang.Object,java.lang.String)>(r3, r0, r5);

        return $r7;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getFieldOnSuper(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r4, r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        return $r1;
    }

    public static void setFieldOnSuper(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Throwable $r7;
        groovy.lang.MetaClass $r2;
        groovy.lang.GroovyRuntimeException $r6;
        groovy.lang.GroovyObject $r1;
        java.lang.Object r0, r5;
        java.lang.Class r3;
        java.lang.String r4;
        boolean $z0;

        r5 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.String;

     label1:
        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label2;

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void setAttribute(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r4, r5);

        goto label3;

     label2:
        $r1 = (groovy.lang.GroovyObject) r0;

        $r2 = interfaceinvoke $r1.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r2.<groovy.lang.MetaClass: void setAttribute(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object,boolean,boolean)>(r3, r0, r4, r5, 1, 1);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r6);

        throw $r7;

     label5:
        return;

        catch groovy.lang.GroovyRuntimeException from label1 to label3 with label4;
    }

    public static void setFieldOnSuperSafe(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object r0, r2;
        java.lang.Class r1;
        java.lang.String r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.String;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setFieldOnSuper(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r0, r1, r2, r3);

        return;
    }

    public static void setFieldOnSuperSpreadSafe(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r1;
        java.lang.Object r0, r2, $r4;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.String;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setFieldOnSuper(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, r0, r5);

        return;

     label1:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label2:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setFieldOnSuper(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, $r4, r5);

        goto label2;

     label3:
        return;
    }

    public static java.lang.Object getField(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Throwable $r4;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object r0, $r2;
        java.lang.Class r5;
        java.lang.String r1;

        r5 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getAttribute(java.lang.Object,java.lang.String)>(r0, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static java.lang.Object getFieldSafe(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object r0, $r3;
        java.lang.Class r1;
        java.lang.String r2;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getField(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r0, r2);

        return $r3;
    }

    public static java.lang.Object getFieldSpreadSafe(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r2;
        java.util.List r1;
        java.lang.Object r0, $r5, $r7, $r8;
        java.lang.Class r4;
        java.lang.String r6;
        boolean $z0, $z1;

        r4 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getField(java.lang.Class,java.lang.Object,java.lang.String)>(r4, r0, r6);

        return $r8;

     label2:
        r1 = (java.util.List) r0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getFieldSafe(java.lang.Class,java.lang.Object,java.lang.String)>(r4, $r5, r6);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label3;

     label4:
        return $r2;
    }

    public static void setField(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Throwable $r4;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object r0, r2;
        java.lang.Class r5;
        java.lang.String r1;

        r2 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.Object;

        r1 := @parameter3: java.lang.String;

     label1:
        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void setAttribute(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r1, r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

     label4:
        return;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static void setFieldSafe(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object r0, r1;
        java.lang.Class r2;
        java.lang.String r3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setField(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r1, r2, r0, r3);

        return;
    }

    public static void setFieldSpreadSafe(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r1;
        java.lang.Object r0, r2, $r4;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setField(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, r0, r5);

        return;

     label2:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label3:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setFieldSafe(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, $r4, r5);

        goto label3;

     label4:
        return;
    }

    public static java.lang.Object getGroovyObjectField(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        groovy.lang.MetaClass $r1;
        java.lang.Object $r3;
        java.lang.Class r4;
        java.lang.String r2;

        r4 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke r0.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        $r3 = interfaceinvoke $r1.<groovy.lang.MetaClass: java.lang.Object getAttribute(java.lang.Object,java.lang.String)>(r0, r2);

        return $r3;
    }

    public static java.lang.Object getGroovyObjectFieldSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        groovy.lang.MetaClass $r1;
        java.lang.Object $r3;
        java.lang.Class r4;
        java.lang.String r2;

        r4 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        $r3 = interfaceinvoke $r1.<groovy.lang.MetaClass: java.lang.Object getAttribute(java.lang.Object,java.lang.String)>(r0, r2);

        return $r3;
    }

    public static java.lang.Object getGroovyObjectFieldSpreadSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        groovy.lang.GroovyObject r0;
        java.lang.Class r3;
        java.lang.Object $r4, $r6, $r7;
        java.lang.String r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r5 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectField(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r0, r5);

        return $r7;

     label2:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label3:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getFieldSafe(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r4, r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label3;

     label4:
        return $r1;
    }

    public static void setGroovyObjectField(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        groovy.lang.MetaClass $r1;
        java.lang.Object r3;
        java.lang.Class r4;
        java.lang.String r2;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Class;

        r0 := @parameter2: groovy.lang.GroovyObject;

        r2 := @parameter3: java.lang.String;

        $r1 = interfaceinvoke r0.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r1.<groovy.lang.MetaClass: void setAttribute(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r2, r3);

        return;
    }

    public static void setGroovyObjectFieldSafe(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        groovy.lang.MetaClass $r1;
        java.lang.Object r3;
        java.lang.Class r4;
        java.lang.String r2;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Class;

        r0 := @parameter2: groovy.lang.GroovyObject;

        r2 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = interfaceinvoke r0.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r1.<groovy.lang.MetaClass: void setAttribute(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r2, r3);

        return;
    }

    public static void setGroovyObjectFieldSpreadSafe(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r1;
        groovy.lang.GroovyObject r0;
        java.lang.Object r2, $r4;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: groovy.lang.GroovyObject;

        r5 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setGroovyObjectField(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r2, r3, r0, r5);

        return;

     label2:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label3:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setFieldSafe(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, $r4, r5);

        goto label3;

     label4:
        return;
    }

    public static java.lang.Object getPropertyOnSuper(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] $r2;
        java.lang.Class r0;
        java.lang.Object $r4;
        java.lang.String r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r3 := @parameter2: java.lang.String;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r0, r1, "getProperty", $r2);

        return $r4;
    }

    public static java.lang.Object getPropertyOnSuperSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r1;
        java.lang.Class r0;
        java.lang.Object $r3;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getPropertyOnSuper(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    public static java.lang.Object getPropertyOnSuperSpreadSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        groovy.lang.GroovyObject r0;
        java.lang.Class r3;
        java.lang.Object $r4, $r6, $r7;
        java.lang.String r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r5 := @parameter2: java.lang.String;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getPropertyOnSuper(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r0, r5);

        return $r7;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getPropertySafe(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r4, r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        return $r1;
    }

    public static void setPropertyOnSuper(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        java.lang.Throwable $r4;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object r2;
        java.lang.Class r5;
        java.lang.String r1;

        r2 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Class;

        r0 := @parameter2: groovy.lang.GroovyObject;

        r1 := @parameter3: java.lang.String;

     label1:
        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void setAttribute(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r1, r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

     label4:
        return;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static void setPropertyOnSuperSafe(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r2;
        java.lang.Object r0;
        java.lang.Class r1;
        java.lang.String r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: groovy.lang.GroovyObject;

        r3 := @parameter3: java.lang.String;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setPropertyOnSuper(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r0, r1, r2, r3);

        return;
    }

    public static void setPropertyOnSuperSpreadSafe(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r1;
        groovy.lang.GroovyObject r0;
        java.lang.Object r2, $r4;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: groovy.lang.GroovyObject;

        r5 := @parameter3: java.lang.String;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setPropertyOnSuper(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r2, r3, r0, r5);

        return;

     label1:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label2:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setPropertySafe(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, $r4, r5);

        goto label2;

     label3:
        return;
    }

    public static java.lang.Object getProperty(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Throwable $r4;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object r0, $r2;
        java.lang.Class r5;
        java.lang.String r1;

        r5 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r0, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static java.lang.Object getPropertySafe(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object r0, $r3;
        java.lang.Class r1;
        java.lang.String r2;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r0, r2);

        return $r3;
    }

    public static java.lang.Object getPropertySpreadSafe(java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        java.lang.Object r0, $r4, $r6, $r7;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r3, r0, r5);

        return $r7;

     label2:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label3:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getPropertySafe(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r4, r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label3;

     label4:
        return $r1;
    }

    public static void setProperty(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Throwable $r4;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object r0, r2;
        java.lang.Class r5;
        java.lang.String r1;

        r2 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.Object;

        r1 := @parameter3: java.lang.String;

     label1:
        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r1, r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

     label4:
        return;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static void setPropertySafe(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.lang.Object r0, r1;
        java.lang.Class r2;
        java.lang.String r3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r1, r2, r0, r3);

        return;
    }

    public static void setPropertySpreadSafe(java.lang.Object, java.lang.Class, java.lang.Object, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r1;
        java.lang.Object r0, r2, $r4;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, r0, r5);

        return;

     label2:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label3:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setPropertySafe(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, $r4, r5);

        goto label3;

     label4:
        return;
    }

    public static java.lang.Object getGroovyObjectProperty(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        java.lang.Throwable $r4;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object $r2;
        java.lang.Class r5;
        java.lang.String r1;

        r5 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = interfaceinvoke r0.<groovy.lang.GroovyObject: java.lang.Object getProperty(java.lang.String)>(r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static java.lang.Object getGroovyObjectPropertySafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.String r2;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r0, r2);

        return $r3;
    }

    public static java.lang.Object getGroovyObjectPropertySpreadSafe(java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        groovy.lang.GroovyObject r0;
        java.lang.Class r3;
        java.lang.Object $r4, $r6, $r7;
        java.lang.String r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r5 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r0, r5);

        return $r7;

     label2:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label3:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getPropertySafe(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r4, r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label3;

     label4:
        return $r1;
    }

    public static void setGroovyObjectProperty(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        java.lang.Object r2;
        java.lang.Class r3;
        java.lang.String r1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: groovy.lang.GroovyObject;

        r1 := @parameter3: java.lang.String;

        interfaceinvoke r0.<groovy.lang.GroovyObject: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public static void setGroovyObjectPropertySafe(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        groovy.lang.GroovyObject r0;
        java.lang.Object r2;
        java.lang.Class r3;
        java.lang.String r1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: groovy.lang.GroovyObject;

        r1 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        interfaceinvoke r0.<groovy.lang.GroovyObject: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public static void setGroovyObjectPropertySpreadSafe(java.lang.Object, java.lang.Class, groovy.lang.GroovyObject, java.lang.String) throws java.lang.Throwable
    {
        java.util.Iterator $r1;
        groovy.lang.GroovyObject r0;
        java.lang.Object r2, $r4;
        java.lang.Class r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: groovy.lang.GroovyObject;

        r5 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isSpreadable(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, r0, r5);

        return;

     label2:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Iterator asIterator(java.lang.Object)>(r0);

     label3:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setPropertySafe(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, $r4, r5);

        goto label3;

     label4:
        return;
    }

    public static groovy.lang.Closure getMethodPointer(java.lang.Object, java.lang.String)
    {
        groovy.lang.Closure $r2;
        java.lang.Object r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.Closure getMethodPointer(java.lang.Object,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static java.lang.Object invokeClosure(java.lang.Object, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r2;
        java.lang.Object r0, $r3;
        java.lang.Class $r1;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r1, r0, "call", r2);

        return $r3;
    }

    public static java.lang.Object asType(java.lang.Object, java.lang.Class) throws java.lang.Throwable
    {
        java.lang.Object[] $r1;
        java.lang.Class $r0, r2;
        java.lang.Object $r3, r4;

        r4 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        if r4 != null goto label1;

        r4 = staticinvoke <org.codehaus.groovy.runtime.NullObject: org.codehaus.groovy.runtime.NullObject getNullObject()>();

     label1:
        $r0 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r0, r4, "asType", $r1);

        return $r3;
    }

    public static java.lang.Object castToType(java.lang.Object, java.lang.Class) throws java.lang.Throwable
    {
        java.lang.Throwable $r4;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object r0, $r2;
        java.lang.Class r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

     label1:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r0, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static groovy.lang.Tuple createTuple(java.lang.Object[])
    {
        groovy.lang.Tuple $r0;
        java.lang.Object[] r1;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new groovy.lang.Tuple;

        specialinvoke $r0.<groovy.lang.Tuple: void <init>(java.lang.Object[])>(r1);

        return $r0;
    }

    public static java.util.List createList(java.lang.Object[])
    {
        java.util.List $r1;
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.List createList(java.lang.Object[])>(r0);

        return $r1;
    }

    public static org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object, java.lang.Class)
    {
        java.lang.Object r1;
        java.lang.Class r2;
        org.codehaus.groovy.runtime.wrappers.PojoWrapper $r0;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r0 = new org.codehaus.groovy.runtime.wrappers.PojoWrapper;

        specialinvoke $r0.<org.codehaus.groovy.runtime.wrappers.PojoWrapper: void <init>(java.lang.Object,java.lang.Class)>(r1, r2);

        return $r0;
    }

    public static org.codehaus.groovy.runtime.wrappers.Wrapper createGroovyObjectWrapper(groovy.lang.GroovyObject, java.lang.Class)
    {
        org.codehaus.groovy.runtime.wrappers.GroovyObjectWrapper $r0;
        groovy.lang.GroovyObject r1;
        java.lang.Class r2;

        r1 := @parameter0: groovy.lang.GroovyObject;

        r2 := @parameter1: java.lang.Class;

        $r0 = new org.codehaus.groovy.runtime.wrappers.GroovyObjectWrapper;

        specialinvoke $r0.<org.codehaus.groovy.runtime.wrappers.GroovyObjectWrapper: void <init>(groovy.lang.GroovyObject,java.lang.Class)>(r1, r2);

        return $r0;
    }

    public static java.util.Map createMap(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.Map $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.Map createMap(java.lang.Object[])>(r0);

        return $r1;
    }

    public static java.util.List createRange(java.lang.Object, java.lang.Object, boolean) throws java.lang.Throwable
    {
        groovy.lang.ObjectRange $r1;
        int $i0, $i1;
        boolean z0, $z1, $z2, $z3, $z4;
        groovy.lang.IntRange $r4;
        groovy.lang.EmptyRange $r7;
        java.lang.Object r0, r9;
        java.lang.Comparable $r2, $r3, $r8;
        java.lang.Class $r5, $r6, $r10, $r11;

        r0 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label7;

        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r0, r9);

        if $z2 == 0 goto label1;

        $r7 = new groovy.lang.EmptyRange;

        $r8 = (java.lang.Comparable) r0;

        specialinvoke $r7.<groovy.lang.EmptyRange: void <init>(java.lang.Comparable)>($r8);

        return $r7;

     label1:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>(r0, r9);

        if $z3 == 0 goto label4;

        $r6 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r6 != null goto label2;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r10;

        goto label3;

     label2:
        $r10 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label3:
        r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r10, r9, "next");

        goto label7;

     label4:
        $r5 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r5 != null goto label5;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r11;

        goto label6;

     label5:
        $r11 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r11, r9, "previous");

     label7:
        $z4 = r0 instanceof java.lang.Integer;

        if $z4 == 0 goto label8;

        $z1 = r9 instanceof java.lang.Integer;

        if $z1 == 0 goto label8;

        $r4 = new groovy.lang.IntRange;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>(r0);

        $i1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>(r9);

        specialinvoke $r4.<groovy.lang.IntRange: void <init>(int,int)>($i0, $i1);

        return $r4;

     label8:
        $r1 = new groovy.lang.ObjectRange;

        $r3 = (java.lang.Comparable) r0;

        $r2 = (java.lang.Comparable) r9;

        specialinvoke $r1.<groovy.lang.ObjectRange: void <init>(java.lang.Comparable,java.lang.Comparable)>($r3, $r2);

        return $r1;
    }

    public static void assertFailed(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void assertFailed(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static boolean isCase(java.lang.Object, java.lang.Object) throws java.lang.Throwable
    {
        java.lang.Object[] $r2;
        java.lang.Object r0, r3, $r4;
        java.lang.Class $r1;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label3;

        if r3 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r1, r0, "isCase", $r2);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean castToBoolean(java.lang.Object)>($r4);

        return $z0;
    }

    public static boolean compareIdentical(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean compareEqual(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>(r0, r1);

        return $z0;
    }

    public static boolean compareNotEqual(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r0, r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static java.lang.Integer compareTo(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r0, r1;
        java.lang.Integer $r2, $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int compareTo(java.lang.Object,java.lang.Object)>(r0, r1);

        if $i0 != 0 goto label1;

        $r2 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer ZERO>;

        return $r2;

     label1:
        if $i0 <= 0 goto label2;

        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer ONE>;

        goto label3;

     label2:
        $r3 = <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer MINUS_ONE>;

     label3:
        return $r3;
    }

    public static boolean compareLessThan(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r0, r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer compareTo(java.lang.Object,java.lang.Object)>(r0, r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean compareLessThanEqual(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r0, r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer compareTo(java.lang.Object,java.lang.Object)>(r0, r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean compareGreaterThan(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r0, r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer compareTo(java.lang.Object,java.lang.Object)>(r0, r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean compareGreaterThanEqual(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r0, r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer compareTo(java.lang.Object,java.lang.Object)>(r0, r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.util.regex.Pattern regexPattern(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.regex.Pattern bitwiseNegate(java.lang.String)>($r1);

        return $r2;
    }

    public static java.util.regex.Matcher findRegex(java.lang.Object, java.lang.Object) throws java.lang.Throwable
    {
        java.lang.Throwable $r4;
        java.util.regex.Matcher $r2;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object r0, r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

     label1:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.regex.Matcher findRegex(java.lang.Object,java.lang.Object)>(r0, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r3);

        throw $r4;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static boolean matchRegex(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: boolean matchRegex(java.lang.Object,java.lang.Object)>(r0, r1);

        return $z0;
    }

    public static java.lang.Object[] despreadList(java.lang.Object[], java.lang.Object[], int[])
    {
        java.lang.Object[] r2, $r3, r5;
        java.util.ArrayList $r0;
        int[] r1;
        java.lang.StringBuffer $r9, $r10, $r13, $r14, $r15;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.String $r12, $r16;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r8;
        java.util.List $r17, $r18;
        java.lang.Object $r4, r6, $r19;
        java.lang.Class $r7, $r11;

        r2 := @parameter0: java.lang.Object[];

        r5 := @parameter1: java.lang.Object[];

        r1 := @parameter2: int[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i3 = 0;

        i4 = 0;

        i5 = 0;

     label1:
        $i0 = lengthof r1;

        if i5 >= $i0 goto label8;

     label2:
        $i2 = r1[i5];

        if i3 >= $i2 goto label3;

        $r19 = r2[i3];

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r19);

        i3 = i3 + 1;

        goto label2;

     label3:
        r6 = r5[i4];

        if r6 != null goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label7;

     label4:
        $z0 = r6 instanceof java.util.List;

        if $z0 == 0 goto label5;

        $r18 = (java.util.List) r6;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r18);

        goto label7;

     label5:
        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r7.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label6;

        $r17 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.List primitiveArrayToList(java.lang.Object)>(r6);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r17);

        goto label7;

     label6:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cannot spread the type ");

        $r11 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with value ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label7:
        i4 = i4 + 1;

        i5 = i5 + 1;

        goto label1;

     label8:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label9;

        $r4 = r2[i3];

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label8;

     label9:
        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray()>();

        return $r3;
    }

    public static java.lang.Object spreadMap(java.lang.Object)
    {
        java.lang.Object r0;
        groovy.lang.SpreadMap $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.SpreadMap spreadMap(java.lang.Object)>(r0);

        return $r1;
    }

    public static java.lang.Object unaryMinus(java.lang.Object) throws java.lang.Throwable
    {
        java.lang.Throwable $r3;
        groovy.lang.GroovyRuntimeException $r2;
        java.lang.Object r0, $r1;

        r0 := @parameter0: java.lang.Object;

     label1:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object unaryMinus(java.lang.Object)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Throwable unwrap(groovy.lang.GroovyRuntimeException)>($r2);

        throw $r3;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public static java.lang.Object unaryPlus(java.lang.Object)
    {
        java.lang.Object r0, $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object unaryPlus(java.lang.Object)>(r0);

        return $r1;
    }

    public static java.lang.Object bitwiseNegate(java.lang.Object)
    {
        java.lang.Object r0, $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object bitwiseNegate(java.lang.Object)>(r0);

        return $r1;
    }

    public static groovy.lang.MetaClass initMetaClass(java.lang.Object)
    {
        groovy.lang.MetaClass $r1;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClass getMetaClass(java.lang.Object)>(r0);

        return $r1;
    }

    private static boolean isSpreadable(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof java.util.Map;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof java.util.Iterator;

        if $z2 != 0 goto label1;

        $z3 = r0 instanceof java.util.Enumeration;

        if $z3 != 0 goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;
        int $i1;
        java.lang.Integer $r4, $r5, $r6;

        $r0 = newarray (java.lang.Object)[0];

        <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object[] EMPTY_ARGS> = $r0;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(0);

        <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer ZERO> = $r4;

        $r5 = new java.lang.Integer;

        $i1 = (int) -1;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i1);

        <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer MINUS_ONE> = $r5;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(1);

        <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Integer ONE> = $r6;

        return;
    }
}
