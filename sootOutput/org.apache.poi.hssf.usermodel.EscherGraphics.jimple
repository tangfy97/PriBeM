public class org.apache.poi.hssf.usermodel.EscherGraphics extends java.awt.Graphics
{
    private org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup;
    private org.apache.poi.hssf.usermodel.HSSFWorkbook workbook;
    private float verticalPointsPerPixel;
    private float verticalPixelsPerPoint;
    private java.awt.Color foreground;
    private java.awt.Color background;
    private java.awt.Font font;
    private static org.apache.poi.util.POILogger logger;

    public void <init>(org.apache.poi.hssf.usermodel.HSSFShapeGroup, org.apache.poi.hssf.usermodel.HSSFWorkbook, java.awt.Color, float)
    {
        java.awt.Color $r1, r5;
        java.awt.Font $r4;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup r2;
        float f0, $f1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r2 := @parameter0: org.apache.poi.hssf.usermodel.HSSFShapeGroup;

        r3 := @parameter1: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        r5 := @parameter2: java.awt.Color;

        f0 := @parameter3: float;

        specialinvoke r0.<java.awt.Graphics: void <init>()>();

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPointsPerPixel> = 1.0F;

        $r1 = <java.awt.Color: java.awt.Color white>;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color background> = $r1;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup> = r2;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFWorkbook workbook> = r3;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPointsPerPixel> = f0;

        $f1 = 1.0F / f0;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPixelsPerPoint> = $f1;

        $r4 = new java.awt.Font;

        specialinvoke $r4.<java.awt.Font: void <init>(java.lang.String,int,int)>("Arial", 0, 10);

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font> = $r4;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground> = r5;

        return;
    }

    void <init>(org.apache.poi.hssf.usermodel.HSSFShapeGroup, org.apache.poi.hssf.usermodel.HSSFWorkbook, java.awt.Color, java.awt.Font, float)
    {
        java.awt.Color $r1, r4;
        java.awt.Font r5;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup r2;
        float f0, $f1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r2 := @parameter0: org.apache.poi.hssf.usermodel.HSSFShapeGroup;

        r3 := @parameter1: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        r4 := @parameter2: java.awt.Color;

        r5 := @parameter3: java.awt.Font;

        f0 := @parameter4: float;

        specialinvoke r0.<java.awt.Graphics: void <init>()>();

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPointsPerPixel> = 1.0F;

        $r1 = <java.awt.Color: java.awt.Color white>;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color background> = $r1;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup> = r2;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFWorkbook workbook> = r3;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground> = r4;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font> = r5;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPointsPerPixel> = f0;

        $f1 = 1.0F / f0;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPixelsPerPoint> = $f1;

        return;
    }

    public void clearRect(int, int, int, int)
    {
        java.awt.Color r1, $r2;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color background>;

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: void setColor(java.awt.Color)>($r2);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: void fillRect(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: void setColor(java.awt.Color)>(r1);

        return;
    }

    public void clipRect(int, int, int, int)
    {
        org.apache.poi.util.POILogger $r0, $r1;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "clipRect not supported");

     label1:
        return;
    }

    public void copyArea(int, int, int, int, int, int)
    {
        org.apache.poi.util.POILogger $r0, $r1;
        int i0, i1, i2, i3, i4, i5;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "copyArea not supported");

     label1:
        return;
    }

    public java.awt.Graphics create()
    {
        java.awt.Color $r3;
        java.awt.Font $r2;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r5;
        float $f0;
        org.apache.poi.hssf.usermodel.EscherGraphics $r0, r1;
        org.apache.poi.hssf.usermodel.HSSFWorkbook $r4;

        r1 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        $r0 = new org.apache.poi.hssf.usermodel.EscherGraphics;

        $r5 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        $r4 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFWorkbook workbook>;

        $r3 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $r2 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $f0 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPointsPerPixel>;

        specialinvoke $r0.<org.apache.poi.hssf.usermodel.EscherGraphics: void <init>(org.apache.poi.hssf.usermodel.HSSFShapeGroup,org.apache.poi.hssf.usermodel.HSSFWorkbook,java.awt.Color,java.awt.Font,float)>($r5, $r4, $r3, $r2, $f0);

        return $r0;
    }

    public void dispose()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        return;
    }

    public void drawArc(int, int, int, int, int, int)
    {
        org.apache.poi.util.POILogger $r0, $r1;
        int i0, i1, i2, i3, i4, i5;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawArc not supported");

     label1:
        return;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)
    {
        java.awt.Color r4;
        java.awt.Image r3;
        org.apache.poi.util.POILogger $r0, $r1;
        java.awt.image.ImageObserver r5;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r3 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        r4 := @parameter9: java.awt.Color;

        r5 := @parameter10: java.awt.image.ImageObserver;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawImage not supported");

     label1:
        return 1;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver)
    {
        java.awt.Image r3;
        org.apache.poi.util.POILogger $r0, $r1;
        java.awt.image.ImageObserver r4;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r3 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        r4 := @parameter9: java.awt.image.ImageObserver;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawImage not supported");

     label1:
        return 1;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)
    {
        java.awt.Color r3;
        java.awt.Image r1;
        java.awt.image.ImageObserver r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r3 := @parameter5: java.awt.Color;

        r2 := @parameter6: java.awt.image.ImageObserver;

        $i4 = i0 + i2;

        $i5 = i1 + i3;

        $i6 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(r2);

        $i7 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(r2);

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>(r1, i0, i1, $i4, $i5, 0, 0, $i6, $i7, r3, r2);

        return $z0;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver)
    {
        java.awt.Image r1;
        java.awt.image.ImageObserver r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: java.awt.image.ImageObserver;

        $i4 = i0 + i2;

        $i5 = i1 + i3;

        $i6 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(r2);

        $i7 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(r2);

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(r1, i0, i1, $i4, $i5, 0, 0, $i6, $i7, r2);

        return $z0;
    }

    public boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)
    {
        java.awt.Color r3;
        java.awt.Image r1;
        java.awt.image.ImageObserver r2;
        int i0, i1, $i2, $i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: java.awt.Color;

        r2 := @parameter4: java.awt.image.ImageObserver;

        $i2 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(r2);

        $i3 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(r2);

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>(r1, i0, i1, $i2, $i3, r3, r2);

        return $z0;
    }

    public boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver)
    {
        java.awt.Image r1;
        java.awt.image.ImageObserver r2;
        int i0, i1, $i2, $i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.awt.image.ImageObserver;

        $i2 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(r2);

        $i3 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(r2);

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>(r1, i0, i1, $i2, $i3, r2);

        return $z0;
    }

    public void drawLine(int, int, int, int)
    {
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawLine(int,int,int,int,int)>(i0, i1, i2, i3, 0);

        return;
    }

    public void drawLine(int, int, int, int, int)
    {
        java.awt.Color $r4, $r5, $r6;
        org.apache.poi.hssf.usermodel.HSSFSimpleShape $r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r2;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        org.apache.poi.hssf.usermodel.HSSFChildAnchor $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        $r1 = new org.apache.poi.hssf.usermodel.HSSFChildAnchor;

        specialinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFChildAnchor: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        $r3 = virtualinvoke $r2.<org.apache.poi.hssf.usermodel.HSSFShapeGroup: org.apache.poi.hssf.usermodel.HSSFSimpleShape createShape(org.apache.poi.hssf.usermodel.HSSFChildAnchor)>($r1);

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setShapeType(int)>(20);

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setLineWidth(int)>(i4);

        $r4 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i5 = virtualinvoke $r4.<java.awt.Color: int getRed()>();

        $r5 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i6 = virtualinvoke $r5.<java.awt.Color: int getGreen()>();

        $r6 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i7 = virtualinvoke $r6.<java.awt.Color: int getBlue()>();

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setLineStyleColor(int,int,int)>($i5, $i6, $i7);

        return;
    }

    public void drawOval(int, int, int, int)
    {
        java.awt.Color $r4, $r5, $r6;
        org.apache.poi.hssf.usermodel.HSSFSimpleShape $r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        org.apache.poi.hssf.usermodel.HSSFChildAnchor $r1;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        $r1 = new org.apache.poi.hssf.usermodel.HSSFChildAnchor;

        $i5 = i0 + i2;

        $i4 = i1 + i3;

        specialinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFChildAnchor: void <init>(int,int,int,int)>(i0, i1, $i5, $i4);

        $r3 = virtualinvoke $r2.<org.apache.poi.hssf.usermodel.HSSFShapeGroup: org.apache.poi.hssf.usermodel.HSSFSimpleShape createShape(org.apache.poi.hssf.usermodel.HSSFChildAnchor)>($r1);

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setShapeType(int)>(3);

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setLineWidth(int)>(0);

        $r4 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i6 = virtualinvoke $r4.<java.awt.Color: int getRed()>();

        $r5 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i7 = virtualinvoke $r5.<java.awt.Color: int getGreen()>();

        $r6 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i8 = virtualinvoke $r6.<java.awt.Color: int getBlue()>();

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setLineStyleColor(int,int,int)>($i6, $i7, $i8);

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setNoFill(boolean)>(1);

        return;
    }

    public void drawPolygon(int[], int[], int)
    {
        java.awt.Color $r8, $r9, $r10;
        int[] r1, r2, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        org.apache.poi.hssf.usermodel.HSSFChildAnchor $r3;
        org.apache.poi.hssf.usermodel.HSSFPolygon $r5;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r4;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i11 := @parameter2: int;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int findBiggest(int[])>(r1);

        $i1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int findBiggest(int[])>(r2);

        $i2 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int findSmallest(int[])>(r1);

        $i3 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int findSmallest(int[])>(r2);

        $r4 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        $r3 = new org.apache.poi.hssf.usermodel.HSSFChildAnchor;

        specialinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFChildAnchor: void <init>(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r5 = virtualinvoke $r4.<org.apache.poi.hssf.usermodel.HSSFShapeGroup: org.apache.poi.hssf.usermodel.HSSFPolygon createPolygon(org.apache.poi.hssf.usermodel.HSSFChildAnchor)>($r3);

        $i5 = $i0 - $i2;

        $i4 = $i1 - $i3;

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setPolygonDrawArea(int,int)>($i5, $i4);

        $i6 = neg $i2;

        $r6 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int[] addToAll(int[],int)>(r1, $i6);

        $i7 = neg $i3;

        $r7 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int[] addToAll(int[],int)>(r2, $i7);

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setPoints(int[],int[])>($r6, $r7);

        $r8 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i8 = virtualinvoke $r8.<java.awt.Color: int getRed()>();

        $r9 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i9 = virtualinvoke $r9.<java.awt.Color: int getGreen()>();

        $r10 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i10 = virtualinvoke $r10.<java.awt.Color: int getBlue()>();

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setLineStyleColor(int,int,int)>($i8, $i9, $i10);

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setLineWidth(int)>(0);

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setNoFill(boolean)>(1);

        return;
    }

    private int[] addToAll(int[], int)
    {
        int[] r0, r1;
        int $i0, $i1, i2, $i3, $i4, i5;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r0 := @parameter0: int[];

        i2 := @parameter1: int;

        $i0 = lengthof r0;

        r1 = newarray (int)[$i0];

        i5 = 0;

     label1:
        $i1 = lengthof r0;

        if i5 >= $i1 goto label2;

        $i3 = r0[i5];

        $i4 = $i3 + i2;

        r1[i5] = $i4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void drawPolyline(int[], int[], int)
    {
        int[] r3, r4;
        int i0;
        org.apache.poi.util.POILogger $r0, $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r3 := @parameter0: int[];

        r4 := @parameter1: int[];

        i0 := @parameter2: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawPolyline not supported");

     label1:
        return;
    }

    public void drawRect(int, int, int, int)
    {
        org.apache.poi.util.POILogger $r0, $r1;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawRect not supported");

     label1:
        return;
    }

    public void drawRoundRect(int, int, int, int, int, int)
    {
        org.apache.poi.util.POILogger $r0, $r1;
        int i0, i1, i2, i3, i4, i5;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawRoundRect not supported");

     label1:
        return;
    }

    public void drawString(java.lang.String, int, int)
    {
        org.apache.poi.hssf.usermodel.HSSFChildAnchor $r23;
        boolean $z0, $z1;
        java.awt.Font $r2, $r5, $r7, $r8, $r10, $r11, $r18, $r19, r20, $r21, $r22;
        org.apache.poi.hssf.usermodel.HSSFRichTextString $r24;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        org.apache.poi.hssf.usermodel.HSSFFont $r16;
        org.apache.poi.hssf.usermodel.HSSFTextbox $r14;
        org.apache.poi.hssf.usermodel.FontDetails $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i19;
        java.lang.String r0, $r3, $r6;
        org.apache.poi.hssf.usermodel.EscherGraphics r1;

        r1 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r0 := @parameter0: java.lang.String;

        i8 := @parameter1: int;

        i17 := @parameter2: int;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $r3 = virtualinvoke $r2.<java.awt.Font: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("SansSerif");

        if $z1 == 0 goto label3;

        $r21 = new java.awt.Font;

        $r18 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $i11 = virtualinvoke $r18.<java.awt.Font: int getStyle()>();

        $r19 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $i12 = virtualinvoke $r19.<java.awt.Font: int getSize()>();

        $f16 = (float) $i12;

        $f15 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPixelsPerPoint>;

        $f17 = $f16 / $f15;

        $i13 = (int) $f17;

        specialinvoke $r21.<java.awt.Font: void <init>(java.lang.String,int,int)>("Arial", $i11, $i13);

        r20 = $r21;

        goto label4;

     label3:
        $r22 = new java.awt.Font;

        $r5 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $r6 = virtualinvoke $r5.<java.awt.Font: java.lang.String getName()>();

        $r7 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $i0 = virtualinvoke $r7.<java.awt.Font: int getStyle()>();

        $r8 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $i1 = virtualinvoke $r8.<java.awt.Font: int getSize()>();

        $f1 = (float) $i1;

        $f0 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPixelsPerPoint>;

        $f2 = $f1 / $f0;

        $i2 = (int) $f2;

        specialinvoke $r22.<java.awt.Font: void <init>(java.lang.String,int,int)>($r6, $i0, $i2);

        r20 = $r22;

     label4:
        $r9 = staticinvoke <org.apache.poi.hssf.usermodel.StaticFontMetrics: org.apache.poi.hssf.usermodel.FontDetails getFontDetails(java.awt.Font)>(r20);

        $i3 = virtualinvoke $r9.<org.apache.poi.hssf.usermodel.FontDetails: int getStringWidth(java.lang.String)>(r0);

        $i4 = $i3 * 8;

        $i14 = $i4 + 12;

        $r10 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $i5 = virtualinvoke $r10.<java.awt.Font: int getSize()>();

        $f4 = (float) $i5;

        $f3 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPixelsPerPoint>;

        $f5 = $f4 / $f3;

        $f6 = $f5 + 6.0F;

        $i6 = (int) $f6;

        $i15 = $i6 * 2;

        $f7 = (float) i17;

        $r11 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        $i7 = virtualinvoke $r11.<java.awt.Font: int getSize()>();

        $f9 = (float) $i7;

        $f8 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPixelsPerPoint>;

        $f12 = $f9 / $f8;

        $f10 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: float verticalPixelsPerPoint>;

        $f11 = 2.0F * $f10;

        $f13 = $f12 + $f11;

        $f14 = $f7 - $f13;

        $i16 = (int) $f14;

        $r13 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        $r23 = new org.apache.poi.hssf.usermodel.HSSFChildAnchor;

        $i10 = i8 + $i14;

        $i9 = $i16 + $i15;

        specialinvoke $r23.<org.apache.poi.hssf.usermodel.HSSFChildAnchor: void <init>(int,int,int,int)>(i8, $i16, $i10, $i9);

        $r14 = virtualinvoke $r13.<org.apache.poi.hssf.usermodel.HSSFShapeGroup: org.apache.poi.hssf.usermodel.HSSFTextbox createTextbox(org.apache.poi.hssf.usermodel.HSSFChildAnchor)>($r23);

        virtualinvoke $r14.<org.apache.poi.hssf.usermodel.HSSFTextbox: void setNoFill(boolean)>(1);

        $i19 = (int) -1;

        virtualinvoke $r14.<org.apache.poi.hssf.usermodel.HSSFTextbox: void setLineStyle(int)>($i19);

        $r24 = new org.apache.poi.hssf.usermodel.HSSFRichTextString;

        specialinvoke $r24.<org.apache.poi.hssf.usermodel.HSSFRichTextString: void <init>(java.lang.String)>(r0);

        $r16 = specialinvoke r1.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFFont matchFont(java.awt.Font)>(r20);

        virtualinvoke $r24.<org.apache.poi.hssf.usermodel.HSSFRichTextString: void applyFont(org.apache.poi.ss.usermodel.Font)>($r16);

        virtualinvoke $r14.<org.apache.poi.hssf.usermodel.HSSFTextbox: void setString(org.apache.poi.ss.usermodel.RichTextString)>($r24);

        return;
    }

    private org.apache.poi.hssf.usermodel.HSSFFont matchFont(java.awt.Font)
    {
        java.awt.Color $r3, $r4, $r5, $r16, $r17, $r18;
        org.apache.poi.hssf.util.HSSFColor $r6, r19;
        byte $b1, $b3, $b5, $b19, $b21, $b23;
        boolean z0, z1, $z2, $z3;
        java.awt.Font r7;
        org.apache.poi.hssf.usermodel.HSSFFont $r10, $r12, r20;
        org.apache.poi.hssf.usermodel.HSSFWorkbook $r1, $r8, $r11, $r14;
        short $s10, $s13, $s14, $s17, $s24, $s25;
        int $i0, $i2, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i15, $i16, $i18, $i20, $i22;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        java.lang.String $r9, $r13;
        org.apache.poi.hssf.usermodel.HSSFPalette $r2, $r15;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r7 := @parameter0: java.awt.Font;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFWorkbook workbook>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFPalette getCustomPalette()>();

        $r3 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i0 = virtualinvoke $r3.<java.awt.Color: int getRed()>();

        $b1 = (byte) $i0;

        $r4 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i2 = virtualinvoke $r4.<java.awt.Color: int getGreen()>();

        $b3 = (byte) $i2;

        $r5 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i4 = virtualinvoke $r5.<java.awt.Color: int getBlue()>();

        $b5 = (byte) $i4;

        $r6 = virtualinvoke $r2.<org.apache.poi.hssf.usermodel.HSSFPalette: org.apache.poi.hssf.util.HSSFColor findColor(byte,byte,byte)>($b1, $b3, $b5);

        r19 = $r6;

        if $r6 != null goto label01;

        $r14 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFWorkbook workbook>;

        $r15 = virtualinvoke $r14.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFPalette getCustomPalette()>();

        $r16 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i18 = virtualinvoke $r16.<java.awt.Color: int getRed()>();

        $b19 = (byte) $i18;

        $r17 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i20 = virtualinvoke $r17.<java.awt.Color: int getGreen()>();

        $b21 = (byte) $i20;

        $r18 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i22 = virtualinvoke $r18.<java.awt.Color: int getBlue()>();

        $b23 = (byte) $i22;

        r19 = virtualinvoke $r15.<org.apache.poi.hssf.usermodel.HSSFPalette: org.apache.poi.hssf.util.HSSFColor findSimilarColor(byte,byte,byte)>($b19, $b21, $b23);

     label01:
        $i6 = virtualinvoke r7.<java.awt.Font: int getStyle()>();

        $i7 = $i6 & 1;

        if $i7 == 0 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z0 = $z2;

        $i8 = virtualinvoke r7.<java.awt.Font: int getStyle()>();

        $i9 = $i8 & 2;

        if $i9 == 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        z1 = $z3;

        $r8 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFWorkbook workbook>;

        if z0 == 0 goto label06;

        $s24 = 700;

        goto label07;

     label06:
        $s24 = 0;

     label07:
        $s10 = virtualinvoke r19.<org.apache.poi.hssf.util.HSSFColor: short getIndex()>();

        $i11 = virtualinvoke r7.<java.awt.Font: int getSize()>();

        $i12 = $i11 * 20;

        $s13 = (short) $i12;

        $r9 = virtualinvoke r7.<java.awt.Font: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFFont findFont(short,short,short,java.lang.String,boolean,boolean,short,byte)>($s24, $s10, $s13, $r9, z1, 0, 0, 0);

        r20 = $r10;

        if $r10 != null goto label10;

        $r11 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFWorkbook workbook>;

        $r12 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFFont createFont()>();

        r20 = $r12;

        if z0 == 0 goto label08;

        $s25 = 700;

        goto label09;

     label08:
        $s25 = 0;

     label09:
        virtualinvoke $r12.<org.apache.poi.hssf.usermodel.HSSFFont: void setBoldweight(short)>($s25);

        $s14 = virtualinvoke r19.<org.apache.poi.hssf.util.HSSFColor: short getIndex()>();

        virtualinvoke $r12.<org.apache.poi.hssf.usermodel.HSSFFont: void setColor(short)>($s14);

        $i15 = virtualinvoke r7.<java.awt.Font: int getSize()>();

        $i16 = $i15 * 20;

        $s17 = (short) $i16;

        virtualinvoke $r12.<org.apache.poi.hssf.usermodel.HSSFFont: void setFontHeight(short)>($s17);

        $r13 = virtualinvoke r7.<java.awt.Font: java.lang.String getName()>();

        virtualinvoke $r12.<org.apache.poi.hssf.usermodel.HSSFFont: void setFontName(java.lang.String)>($r13);

        virtualinvoke $r12.<org.apache.poi.hssf.usermodel.HSSFFont: void setItalic(boolean)>(z1);

        virtualinvoke $r12.<org.apache.poi.hssf.usermodel.HSSFFont: void setStrikeout(boolean)>(0);

        virtualinvoke $r12.<org.apache.poi.hssf.usermodel.HSSFFont: void setTypeOffset(short)>(0);

        virtualinvoke $r12.<org.apache.poi.hssf.usermodel.HSSFFont: void setUnderline(byte)>(0);

     label10:
        return r20;
    }

    public void drawString(java.text.AttributedCharacterIterator, int, int)
    {
        java.text.AttributedCharacterIterator r3;
        int i0, i1;
        org.apache.poi.util.POILogger $r0, $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r3 := @parameter0: java.text.AttributedCharacterIterator;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawString not supported");

     label1:
        return;
    }

    public void fillArc(int, int, int, int, int, int)
    {
        org.apache.poi.util.POILogger $r0, $r1;
        int i0, i1, i2, i3, i4, i5;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "fillArc not supported");

     label1:
        return;
    }

    public void fillOval(int, int, int, int)
    {
        java.awt.Color $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.poi.hssf.usermodel.HSSFSimpleShape $r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        org.apache.poi.hssf.usermodel.HSSFChildAnchor $r10;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        $r10 = new org.apache.poi.hssf.usermodel.HSSFChildAnchor;

        $i5 = i0 + i2;

        $i4 = i1 + i3;

        specialinvoke $r10.<org.apache.poi.hssf.usermodel.HSSFChildAnchor: void <init>(int,int,int,int)>(i0, i1, $i5, $i4);

        $r3 = virtualinvoke $r2.<org.apache.poi.hssf.usermodel.HSSFShapeGroup: org.apache.poi.hssf.usermodel.HSSFSimpleShape createShape(org.apache.poi.hssf.usermodel.HSSFChildAnchor)>($r10);

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setShapeType(int)>(3);

        $i13 = (int) -1;

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setLineStyle(int)>($i13);

        $r4 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i6 = virtualinvoke $r4.<java.awt.Color: int getRed()>();

        $r5 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i7 = virtualinvoke $r5.<java.awt.Color: int getGreen()>();

        $r6 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i8 = virtualinvoke $r6.<java.awt.Color: int getBlue()>();

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setFillColor(int,int,int)>($i6, $i7, $i8);

        $r7 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i9 = virtualinvoke $r7.<java.awt.Color: int getRed()>();

        $r8 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i10 = virtualinvoke $r8.<java.awt.Color: int getGreen()>();

        $r9 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i11 = virtualinvoke $r9.<java.awt.Color: int getBlue()>();

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setLineStyleColor(int,int,int)>($i9, $i10, $i11);

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setNoFill(boolean)>(0);

        return;
    }

    public void fillPolygon(int[], int[], int)
    {
        java.awt.Color $r8, $r9, $r10, $r11, $r12, $r13;
        int[] r1, r2, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        org.apache.poi.hssf.usermodel.HSSFChildAnchor $r3;
        org.apache.poi.hssf.usermodel.HSSFPolygon $r5;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r4;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i14 := @parameter2: int;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int findBiggest(int[])>(r1);

        $i1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int findBiggest(int[])>(r2);

        $i2 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int findSmallest(int[])>(r1);

        $i3 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int findSmallest(int[])>(r2);

        $r4 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        $r3 = new org.apache.poi.hssf.usermodel.HSSFChildAnchor;

        specialinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFChildAnchor: void <init>(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r5 = virtualinvoke $r4.<org.apache.poi.hssf.usermodel.HSSFShapeGroup: org.apache.poi.hssf.usermodel.HSSFPolygon createPolygon(org.apache.poi.hssf.usermodel.HSSFChildAnchor)>($r3);

        $i5 = $i0 - $i2;

        $i4 = $i1 - $i3;

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setPolygonDrawArea(int,int)>($i5, $i4);

        $i6 = neg $i2;

        $r6 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int[] addToAll(int[],int)>(r1, $i6);

        $i7 = neg $i3;

        $r7 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: int[] addToAll(int[],int)>(r2, $i7);

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setPoints(int[],int[])>($r6, $r7);

        $r8 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i8 = virtualinvoke $r8.<java.awt.Color: int getRed()>();

        $r9 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i9 = virtualinvoke $r9.<java.awt.Color: int getGreen()>();

        $r10 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i10 = virtualinvoke $r10.<java.awt.Color: int getBlue()>();

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setLineStyleColor(int,int,int)>($i8, $i9, $i10);

        $r11 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i11 = virtualinvoke $r11.<java.awt.Color: int getRed()>();

        $r12 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i12 = virtualinvoke $r12.<java.awt.Color: int getGreen()>();

        $r13 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i13 = virtualinvoke $r13.<java.awt.Color: int getBlue()>();

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFPolygon: void setFillColor(int,int,int)>($i11, $i12, $i13);

        return;
    }

    private int findBiggest(int[])
    {
        int[] r0;
        int $i0, $i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r1;

        r1 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r0 := @parameter0: int[];

        i2 = -2147483648;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label3;

        $i1 = r0[i3];

        if $i1 <= i2 goto label2;

        i2 = r0[i3];

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    private int findSmallest(int[])
    {
        int[] r0;
        int $i0, $i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r1;

        r1 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r0 := @parameter0: int[];

        i2 = 2147483647;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label3;

        $i1 = r0[i3];

        if $i1 >= i2 goto label2;

        i2 = r0[i3];

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public void fillRect(int, int, int, int)
    {
        java.awt.Color $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.poi.hssf.usermodel.HSSFSimpleShape $r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        org.apache.poi.hssf.usermodel.HSSFChildAnchor $r10;
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        $r10 = new org.apache.poi.hssf.usermodel.HSSFChildAnchor;

        $i5 = i0 + i2;

        $i4 = i1 + i3;

        specialinvoke $r10.<org.apache.poi.hssf.usermodel.HSSFChildAnchor: void <init>(int,int,int,int)>(i0, i1, $i5, $i4);

        $r3 = virtualinvoke $r2.<org.apache.poi.hssf.usermodel.HSSFShapeGroup: org.apache.poi.hssf.usermodel.HSSFSimpleShape createShape(org.apache.poi.hssf.usermodel.HSSFChildAnchor)>($r10);

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setShapeType(int)>(1);

        $i13 = (int) -1;

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setLineStyle(int)>($i13);

        $r4 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i6 = virtualinvoke $r4.<java.awt.Color: int getRed()>();

        $r5 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i7 = virtualinvoke $r5.<java.awt.Color: int getGreen()>();

        $r6 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i8 = virtualinvoke $r6.<java.awt.Color: int getBlue()>();

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setFillColor(int,int,int)>($i6, $i7, $i8);

        $r7 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i9 = virtualinvoke $r7.<java.awt.Color: int getRed()>();

        $r8 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i10 = virtualinvoke $r8.<java.awt.Color: int getGreen()>();

        $r9 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        $i11 = virtualinvoke $r9.<java.awt.Color: int getBlue()>();

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFSimpleShape: void setLineStyleColor(int,int,int)>($i9, $i10, $i11);

        return;
    }

    public void fillRoundRect(int, int, int, int, int, int)
    {
        org.apache.poi.util.POILogger $r0, $r1;
        int i0, i1, i2, i3, i4, i5;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "fillRoundRect not supported");

     label1:
        return;
    }

    public java.awt.Shape getClip()
    {
        java.awt.Rectangle $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Rectangle getClipBounds()>();

        return $r1;
    }

    public java.awt.Rectangle getClipBounds()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        return null;
    }

    public java.awt.Rectangle getClipRect()
    {
        java.awt.Rectangle $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Rectangle getClipBounds()>();

        return $r1;
    }

    public java.awt.Color getColor()
    {
        java.awt.Color $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground>;

        return $r1;
    }

    public java.awt.Font getFont()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        java.awt.Font $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font>;

        return $r1;
    }

    public java.awt.FontMetrics getFontMetrics(java.awt.Font)
    {
        java.awt.FontMetrics $r2;
        java.awt.Font r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r3;
        java.awt.Toolkit $r0;

        r3 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Font;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r2 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r1);

        return $r2;
    }

    public void setClip(int, int, int, int)
    {
        java.awt.Rectangle $r1;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics: void setClip(java.awt.Shape)>($r1);

        return;
    }

    public void setClip(java.awt.Shape)
    {
        java.awt.Shape r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Shape;

        return;
    }

    public void setColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Color;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color foreground> = r1;

        return;
    }

    public void setFont(java.awt.Font)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics r0;
        java.awt.Font r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Font;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font font> = r1;

        return;
    }

    public void setPaintMode()
    {
        org.apache.poi.util.POILogger $r0, $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "setPaintMode not supported");

     label1:
        return;
    }

    public void setXORMode(java.awt.Color)
    {
        java.awt.Color r3;
        org.apache.poi.util.POILogger $r0, $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r3 := @parameter0: java.awt.Color;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "setXORMode not supported");

     label1:
        return;
    }

    public void translate(int, int)
    {
        int i0, i1;
        org.apache.poi.util.POILogger $r0, $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r2;
        boolean $z0;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r0.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r1.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "translate not supported");

     label1:
        return;
    }

    public java.awt.Color getBackground()
    {
        java.awt.Color $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color background>;

        return $r1;
    }

    public void setBackground(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        r1 := @parameter0: java.awt.Color;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color background> = r1;

        return;
    }

    org.apache.poi.hssf.usermodel.HSSFShapeGroup getEscherGraphics()
    {
        org.apache.poi.hssf.usermodel.HSSFShapeGroup $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics r0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.hssf.usermodel.HSSFShapeGroup escherGroup>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hssf/usermodel/EscherGraphics;");

        <org.apache.poi.hssf.usermodel.EscherGraphics: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
