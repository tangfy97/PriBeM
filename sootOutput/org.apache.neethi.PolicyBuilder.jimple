public class org.apache.neethi.PolicyBuilder extends java.lang.Object
{
    protected org.apache.neethi.AssertionBuilderFactory factory;
    protected org.apache.neethi.PolicyRegistry defaultPolicyRegistry;

    public void <init>()
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.AssertionBuilderFactoryImpl $r1;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.neethi.AssertionBuilderFactoryImpl;

        specialinvoke $r1.<org.apache.neethi.AssertionBuilderFactoryImpl: void <init>(org.apache.neethi.PolicyBuilder)>(r0);

        r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory> = $r1;

        return;
    }

    public void <init>(org.apache.neethi.AssertionBuilderFactory)
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.AssertionBuilderFactory r1;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: org.apache.neethi.AssertionBuilderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory> = r1;

        return;
    }

    public void registerBuilder(javax.xml.namespace.QName, org.apache.neethi.builders.AssertionBuilder)
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.AssertionBuilderFactory $r3;
        org.apache.neethi.builders.AssertionBuilder r2;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: org.apache.neethi.builders.AssertionBuilder;

        $r3 = r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        interfaceinvoke $r3.<org.apache.neethi.AssertionBuilderFactory: void registerBuilder(javax.xml.namespace.QName,org.apache.neethi.builders.AssertionBuilder)>(r1, r2);

        return;
    }

    public org.apache.neethi.PolicyRegistry getPolicyRegistry()
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.PolicyRegistry $r1;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        $r1 = r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyRegistry defaultPolicyRegistry>;

        return $r1;
    }

    public void setPolicyRegistry(org.apache.neethi.PolicyRegistry)
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.PolicyRegistry r1;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: org.apache.neethi.PolicyRegistry;

        r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyRegistry defaultPolicyRegistry> = r1;

        return;
    }

    public org.apache.neethi.AssertionBuilderFactory getAssertionBuilderFactory()
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.AssertionBuilderFactory $r1;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        $r1 = r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        return $r1;
    }

    public org.apache.neethi.Policy getPolicy(java.io.InputStream)
    {
        org.apache.neethi.PolicyBuilder r3;
        javax.xml.stream.XMLInputFactory $r0;
        java.lang.RuntimeException $r6, $r7;
        org.apache.neethi.Policy $r4;
        java.lang.Exception $r5;
        javax.xml.stream.XMLStreamReader $r2;
        java.io.InputStream r1;

        r3 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: java.io.InputStream;

     label1:
        $r0 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();

        $r2 = virtualinvoke $r0.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r1);

        $r4 = virtualinvoke r3.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicy(javax.xml.stream.XMLStreamReader)>($r2);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not load policy.", $r5);

        throw $r6;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public org.apache.neethi.Policy getPolicy(org.w3c.dom.Element)
    {
        org.apache.neethi.PolicyBuilder r0;
        org.w3c.dom.Element r1;
        org.apache.neethi.Policy $r2;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: org.w3c.dom.Element;

        $r2 = specialinvoke r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicyOperator(java.lang.Object)>(r1);

        return $r2;
    }

    public org.apache.neethi.Policy getPolicy(javax.xml.stream.XMLStreamReader)
    {
        org.apache.neethi.PolicyBuilder r0;
        javax.xml.stream.XMLStreamReader r1;
        org.apache.neethi.Policy $r2;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r2 = specialinvoke r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicyOperator(java.lang.Object)>(r1);

        return $r2;
    }

    public org.apache.neethi.Policy getPolicy(java.lang.Object)
    {
        org.apache.neethi.PolicyBuilder r0;
        java.lang.Object r1;
        org.apache.neethi.Policy $r2;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicyOperator(java.lang.Object)>(r1);

        return $r2;
    }

    public org.apache.neethi.PolicyReference getPolicyReference(java.io.InputStream)
    {
        org.apache.neethi.PolicyBuilder r3;
        javax.xml.stream.XMLInputFactory $r0;
        org.apache.neethi.PolicyReference $r4;
        java.lang.RuntimeException $r6, $r7;
        java.lang.Exception $r5;
        javax.xml.stream.XMLStreamReader $r2;
        java.io.InputStream r1;

        r3 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: java.io.InputStream;

     label1:
        $r0 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();

        $r2 = virtualinvoke $r0.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r1);

        $r4 = virtualinvoke r3.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyReference getPolicyReference(java.lang.Object)>($r2);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not load policy reference.", $r5);

        throw $r6;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public org.apache.neethi.PolicyReference getPolicyReference(java.lang.Object)
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.AssertionBuilderFactory $r1, $r6;
        org.apache.neethi.PolicyReference $r5;
        java.lang.RuntimeException $r12;
        java.util.Map $r8;
        org.apache.neethi.builders.converters.ConverterRegistry $r2, $r7;
        java.lang.Object r3, $r10;
        javax.xml.namespace.QName $r4, $r9;
        java.lang.String $r11;
        boolean $z0;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        $r2 = interfaceinvoke $r1.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.builders.converters.ConverterRegistry getConverterRegistry()>();

        $r4 = virtualinvoke $r2.<org.apache.neethi.builders.converters.ConverterRegistry: javax.xml.namespace.QName findQName(java.lang.Object)>(r3);

        $z0 = staticinvoke <org.apache.neethi.Constants: boolean isPolicyRef(javax.xml.namespace.QName)>($r4);

        if $z0 != 0 goto label1;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("Specified element is not a <wsp:PolicyReference .. />  element");

        throw $r12;

     label1:
        $r5 = new org.apache.neethi.PolicyReference;

        specialinvoke $r5.<org.apache.neethi.PolicyReference: void <init>(org.apache.neethi.PolicyBuilder)>(r0);

        $r6 = r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        $r7 = interfaceinvoke $r6.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.builders.converters.ConverterRegistry getConverterRegistry()>();

        $r8 = virtualinvoke $r7.<org.apache.neethi.builders.converters.ConverterRegistry: java.util.Map getAttributes(java.lang.Object)>(r3);

        $r9 = new javax.xml.namespace.QName;

        specialinvoke $r9.<javax.xml.namespace.QName: void <init>(java.lang.String)>("URI");

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.String) $r10;

        virtualinvoke $r5.<org.apache.neethi.PolicyReference: void setURI(java.lang.String)>($r11);

        return $r5;
    }

    private org.apache.neethi.Policy getPolicyOperator(java.lang.Object)
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.PolicyOperator $r13;
        org.apache.neethi.PolicyRegistry $r12;
        java.lang.String $r9, $r10;
        boolean $z0;
        org.apache.neethi.AssertionBuilderFactory $r1;
        java.lang.IllegalArgumentException $r5;
        org.apache.neethi.Policy $r11, $r14;
        org.apache.neethi.builders.converters.ConverterRegistry $r2;
        java.lang.Object r3;
        java.lang.StringBuilder $r6, $r7, $r8;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        $r2 = interfaceinvoke $r1.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.builders.converters.ConverterRegistry getConverterRegistry()>();

        $r4 = virtualinvoke $r2.<org.apache.neethi.builders.converters.ConverterRegistry: javax.xml.namespace.QName findQName(java.lang.Object)>(r3);

        $z0 = staticinvoke <org.apache.neethi.Constants: boolean isPolicyElement(javax.xml.namespace.QName)>($r4);

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r11 = new org.apache.neethi.Policy;

        $r12 = r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyRegistry defaultPolicyRegistry>;

        specialinvoke $r11.<org.apache.neethi.Policy: void <init>(org.apache.neethi.PolicyRegistry,java.lang.String)>($r12, $r10);

        $r13 = specialinvoke r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyOperator processOperationElement(java.lang.Object,org.apache.neethi.PolicyOperator)>(r3, $r11);

        $r14 = (org.apache.neethi.Policy) $r13;

        return $r14;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a <wsp:Policy> element.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    private org.apache.neethi.ExactlyOne getExactlyOneOperator(java.lang.Object)
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.PolicyOperator $r3;
        java.lang.Object r1;
        org.apache.neethi.ExactlyOne $r2, $r4;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.neethi.ExactlyOne;

        specialinvoke $r2.<org.apache.neethi.ExactlyOne: void <init>()>();

        $r3 = specialinvoke r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyOperator processOperationElement(java.lang.Object,org.apache.neethi.PolicyOperator)>(r1, $r2);

        $r4 = (org.apache.neethi.ExactlyOne) $r3;

        return $r4;
    }

    private org.apache.neethi.All getAllOperator(java.lang.Object)
    {
        org.apache.neethi.PolicyBuilder r0;
        org.apache.neethi.All $r2, $r4;
        org.apache.neethi.PolicyOperator $r3;
        java.lang.Object r1;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.neethi.All;

        specialinvoke $r2.<org.apache.neethi.All: void <init>()>();

        $r3 = specialinvoke r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyOperator processOperationElement(java.lang.Object,org.apache.neethi.PolicyOperator)>(r1, $r2);

        $r4 = (org.apache.neethi.All) $r3;

        return $r4;
    }

    private org.apache.neethi.PolicyOperator processOperationElement(java.lang.Object, org.apache.neethi.PolicyOperator)
    {
        org.apache.neethi.PolicyBuilder r1;
        java.util.Map $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.neethi.AssertionBuilderFactory $r2, $r7, $r11, $r21, $r27;
        java.util.Set $r30;
        org.apache.neethi.Assertion $r12, $r22;
        org.apache.neethi.ExactlyOne $r25;
        javax.xml.namespace.QName $r9, $r35;
        org.apache.neethi.PolicyReference $r23;
        org.apache.neethi.PolicyOperator r0;
        short $s0;
        java.lang.String $r10, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r37;
        java.util.Map$Entry r33;
        java.util.Iterator $r5, $r31;
        org.apache.neethi.All $r24;
        org.apache.neethi.Policy $r26, r38;
        org.apache.neethi.builders.converters.ConverterRegistry $r3, $r8, $r28;
        java.lang.Object r4, $r6, $r32, $r34, $r36;

        r1 := @this: org.apache.neethi.PolicyBuilder;

        r4 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.apache.neethi.PolicyOperator;

        $s0 = interfaceinvoke r0.<org.apache.neethi.PolicyOperator: short getType()>();

        if 1 != $s0 goto label02;

        r38 = (org.apache.neethi.Policy) r0;

        $r27 = r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        $r28 = interfaceinvoke $r27.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.builders.converters.ConverterRegistry getConverterRegistry()>();

        $r29 = virtualinvoke $r28.<org.apache.neethi.builders.converters.ConverterRegistry: java.util.Map getAttributes(java.lang.Object)>(r4);

        $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Set entrySet()>();

        $r31 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label02;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.util.Map$Entry) $r32;

        $r34 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r35 = (javax.xml.namespace.QName) $r34;

        $r36 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r37 = (java.lang.String) $r36;

        virtualinvoke r38.<org.apache.neethi.Policy: void addAttribute(javax.xml.namespace.QName,java.lang.String)>($r35, $r37);

        goto label01;

     label02:
        $r2 = r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        $r3 = interfaceinvoke $r2.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.builders.converters.ConverterRegistry getConverterRegistry()>();

        $r5 = virtualinvoke $r3.<org.apache.neethi.builders.converters.ConverterRegistry: java.util.Iterator getChildElements(java.lang.Object)>(r4);

     label03:
        $z6 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label12;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        $r8 = interfaceinvoke $r7.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.builders.converters.ConverterRegistry getConverterRegistry()>();

        $r9 = virtualinvoke $r8.<org.apache.neethi.builders.converters.ConverterRegistry: javax.xml.namespace.QName findQName(java.lang.Object)>($r6);

        if $r6 == null goto label04;

        if $r9 == null goto label04;

        $r10 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r10 != null goto label05;

     label04:
        virtualinvoke r1.<org.apache.neethi.PolicyBuilder: void notifyUnknownPolicyElement(java.lang.Object)>($r6);

        goto label11;

     label05:
        $z0 = staticinvoke <org.apache.neethi.Constants: boolean isInPolicyNS(javax.xml.namespace.QName)>($r9);

        if $z0 == 0 goto label10;

        $r13 = "Policy";

        $r14 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label06;

        $r26 = specialinvoke r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicyOperator(java.lang.Object)>($r6);

        interfaceinvoke r0.<org.apache.neethi.PolicyOperator: void addPolicyComponent(org.apache.neethi.PolicyComponent)>($r26);

        goto label11;

     label06:
        $r15 = "ExactlyOne";

        $r16 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 == 0 goto label07;

        $r25 = specialinvoke r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.ExactlyOne getExactlyOneOperator(java.lang.Object)>($r6);

        interfaceinvoke r0.<org.apache.neethi.PolicyOperator: void addPolicyComponent(org.apache.neethi.PolicyComponent)>($r25);

        goto label11;

     label07:
        $r17 = "All";

        $r18 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z3 == 0 goto label08;

        $r24 = specialinvoke r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.All getAllOperator(java.lang.Object)>($r6);

        interfaceinvoke r0.<org.apache.neethi.PolicyOperator: void addPolicyComponent(org.apache.neethi.PolicyComponent)>($r24);

        goto label11;

     label08:
        $r19 = "PolicyReference";

        $r20 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z4 == 0 goto label09;

        $r23 = virtualinvoke r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyReference getPolicyReference(java.lang.Object)>($r6);

        interfaceinvoke r0.<org.apache.neethi.PolicyOperator: void addPolicyComponent(org.apache.neethi.PolicyComponent)>($r23);

        goto label11;

     label09:
        $r21 = r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        $r22 = interfaceinvoke $r21.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.Assertion build(java.lang.Object)>($r6);

        interfaceinvoke r0.<org.apache.neethi.PolicyOperator: void addPolicyComponent(org.apache.neethi.PolicyComponent)>($r22);

        goto label11;

     label10:
        $r11 = r1.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory factory>;

        $r12 = interfaceinvoke $r11.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.Assertion build(java.lang.Object)>($r6);

        interfaceinvoke r0.<org.apache.neethi.PolicyOperator: void addPolicyComponent(org.apache.neethi.PolicyComponent)>($r12);

     label11:
        goto label03;

     label12:
        return r0;
    }

    protected void notifyUnknownPolicyElement(java.lang.Object)
    {
        org.apache.neethi.PolicyBuilder r0;
        java.lang.Object r1;

        r0 := @this: org.apache.neethi.PolicyBuilder;

        r1 := @parameter0: java.lang.Object;

        return;
    }
}
