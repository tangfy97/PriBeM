public final class org.apache.cxf.common.classloader.JAXBClassLoaderUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.common.classloader.JAXBClassLoaderUtils r0;

        r0 := @this: org.apache.cxf.common.classloader.JAXBClassLoaderUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object createTypeReference(javax.xml.namespace.QName, java.lang.Class)
    {
        java.lang.Throwable $r9, $r10, $r11;
        java.lang.Object[] $r4;
        java.lang.Class[] $r0;
        java.lang.'annotation'.Annotation[] $r1, $r7;
        java.lang.reflect.Constructor $r3;
        java.lang.Class $r2, r6, r12;
        java.lang.Object $r8;
        javax.xml.namespace.QName r5;

        r5 := @parameter0: javax.xml.namespace.QName;

        r6 := @parameter1: java.lang.Class;

        r12 = null;

     label01:
        r12 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("com.sun.xml.bind.api.TypeReference", class "Lorg/apache/cxf/common/classloader/JAXBClassLoaderUtils;");

     label02:
        goto label07;

     label03:
        $r11 := @caughtexception;

     label04:
        r12 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("com.sun.xml.internal.bind.api.TypeReference", class "Lorg/apache/cxf/common/classloader/JAXBClassLoaderUtils;");

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

     label07:
        if r12 == null goto label11;

     label08:
        $r0 = newarray (java.lang.Class)[3];

        $r0[0] = class "Ljavax/xml/namespace/QName;";

        $r0[1] = class "Ljava/lang/reflect/Type;";

        $r1 = newarray (java.lang.'annotation'.Annotation)[0];

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r0[2] = $r2;

        $r3 = virtualinvoke r12.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r0);

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r5;

        $r4[1] = r6;

        $r7 = newarray (java.lang.'annotation'.Annotation)[0];

        $r4[2] = $r7;

        $r8 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

     label09:
        return $r8;

     label10:
        $r9 := @caughtexception;

     label11:
        return null;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
