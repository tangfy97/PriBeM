class org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5 extends org.apache.lucene.queries.function.FunctionValues$ValueFiller
{
    private final org.apache.lucene.util.mutable.MutableValueDouble mval;
    final org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 this$1;

    void <init>(org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1)
    {
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 r1;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5 r0;
        org.apache.lucene.util.mutable.MutableValueDouble $r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1;

        r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 this$1> = r1;

        specialinvoke r0.<org.apache.lucene.queries.function.FunctionValues$ValueFiller: void <init>()>();

        $r2 = new org.apache.lucene.util.mutable.MutableValueDouble;

        specialinvoke $r2.<org.apache.lucene.util.mutable.MutableValueDouble: void <init>()>();

        r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5: org.apache.lucene.util.mutable.MutableValueDouble mval> = $r2;

        return;
    }

    public org.apache.lucene.util.mutable.MutableValue getValue()
    {
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5 r0;
        org.apache.lucene.util.mutable.MutableValueDouble $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5: org.apache.lucene.util.mutable.MutableValueDouble mval>;

        return $r1;
    }

    public void fillValue(int)
    {
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 $r1, $r4;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5 r0;
        org.apache.lucene.search.FieldCache$Doubles $r2;
        int i0;
        org.apache.lucene.util.Bits $r5;
        org.apache.lucene.util.mutable.MutableValueDouble $r3, $r6;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5;

        i0 := @parameter0: int;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5: org.apache.lucene.util.mutable.MutableValueDouble mval>;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 this$1>;

        $r2 = $r1.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1: org.apache.lucene.search.FieldCache$Doubles val$arr>;

        $d0 = virtualinvoke $r2.<org.apache.lucene.search.FieldCache$Doubles: double get(int)>(i0);

        $r3.<org.apache.lucene.util.mutable.MutableValueDouble: double value> = $d0;

        $r6 = r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5: org.apache.lucene.util.mutable.MutableValueDouble mval>;

        $r4 = r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 this$1>;

        $r5 = $r4.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1: org.apache.lucene.util.Bits val$valid>;

        $z0 = interfaceinvoke $r5.<org.apache.lucene.util.Bits: boolean get(int)>(i0);

        $r6.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists> = $z0;

        return;
    }
}
