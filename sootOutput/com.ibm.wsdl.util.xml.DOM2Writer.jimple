public class com.ibm.wsdl.util.xml.DOM2Writer extends java.lang.Object
{
    private static java.lang.String NS_URI_XMLNS;
    private static java.lang.String NS_URI_XML;
    private static java.util.Map xmlEncodingMap;

    public void <init>()
    {
        com.ibm.wsdl.util.xml.DOM2Writer r0;

        r0 := @this: com.ibm.wsdl.util.xml.DOM2Writer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String nodeToString(org.w3c.dom.Node)
    {
        java.util.HashMap $r1;
        java.lang.String $r2;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String nodeToString(org.w3c.dom.Node,java.util.Map)>(r0, $r1);

        return $r2;
    }

    public static java.lang.String nodeToString(org.w3c.dom.Node, java.util.Map)
    {
        java.io.StringWriter $r0;
        org.w3c.dom.Node r1;
        java.util.Map r2;
        java.lang.String $r3;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.util.Map;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void serializeAsXML(org.w3c.dom.Node,java.util.Map,java.io.Writer)>(r1, r2, $r0);

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public static void serializeElementAsDocument(org.w3c.dom.Element, java.io.Writer)
    {
        java.io.Writer r2;
        java.util.HashMap $r1;
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.io.Writer;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void serializeElementAsDocument(org.w3c.dom.Element,java.util.Map,java.io.Writer)>(r0, $r1, r2);

        return;
    }

    public static void serializeElementAsDocument(org.w3c.dom.Element, java.util.Map, java.io.Writer)
    {
        java.io.PrintWriter $r0;
        org.w3c.dom.Element r3;
        java.util.Map r4;
        java.io.Writer r1;
        java.io.OutputStreamWriter $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r2, $r9, $r11;
        boolean $z0;

        r3 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: java.util.Map;

        r1 := @parameter2: java.io.Writer;

        $r0 = new java.io.PrintWriter;

        specialinvoke $r0.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        $z0 = r1 instanceof java.io.OutputStreamWriter;

        if $z0 == 0 goto label1;

        $r10 = (java.io.OutputStreamWriter) r1;

        $r11 = virtualinvoke $r10.<java.io.OutputStreamWriter: java.lang.String getEncoding()>();

        goto label2;

     label1:
        $r11 = null;

     label2:
        $r2 = staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String java2XMLEncoding(java.lang.String)>($r11);

        if $r2 == null goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\"1.0\" encoding=\"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"?>");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        goto label4;

     label3:
        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>("<?xml version=\"1.0\"?>");

     label4:
        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void serializeAsXML(org.w3c.dom.Node,java.util.Map,java.io.Writer)>(r3, r4, r1);

        return;
    }

    public static void serializeAsXML(org.w3c.dom.Node, java.io.Writer)
    {
        java.io.Writer r2;
        java.util.HashMap $r1;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.io.Writer;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void serializeAsXML(org.w3c.dom.Node,java.util.Map,java.io.Writer)>(r0, $r1, r2);

        return;
    }

    public static void serializeAsXML(org.w3c.dom.Node, java.util.Map, java.io.Writer)
    {
        java.io.PrintWriter $r3;
        com.ibm.wsdl.util.ObjectRegistry $r0;
        java.util.Map r1;
        org.w3c.dom.Node r5;
        java.io.Writer r4;
        java.io.OutputStreamWriter $r7;
        java.lang.String $r2, $r6, $r8;
        boolean $z0;

        r5 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: java.util.Map;

        r4 := @parameter2: java.io.Writer;

        $r0 = new com.ibm.wsdl.util.ObjectRegistry;

        specialinvoke $r0.<com.ibm.wsdl.util.ObjectRegistry: void <init>(java.util.Map)>(r1);

        $r2 = <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String NS_URI_XML>;

        virtualinvoke $r0.<com.ibm.wsdl.util.ObjectRegistry: void register(java.lang.String,java.lang.Object)>("xml", $r2);

        $r3 = new java.io.PrintWriter;

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.Writer)>(r4);

        $z0 = r4 instanceof java.io.OutputStreamWriter;

        if $z0 == 0 goto label1;

        $r7 = (java.io.OutputStreamWriter) r4;

        $r8 = virtualinvoke $r7.<java.io.OutputStreamWriter: java.lang.String getEncoding()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        $r6 = staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String java2XMLEncoding(java.lang.String)>($r8);

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void print(org.w3c.dom.Node,com.ibm.wsdl.util.ObjectRegistry,java.io.PrintWriter,java.lang.String)>(r5, $r0, $r3, $r6);

        return;
    }

    private static void print(org.w3c.dom.Node, com.ibm.wsdl.util.ObjectRegistry, java.io.PrintWriter, java.lang.String)
    {
        boolean $z0, $z1, z2, z3, z4;
        java.io.PrintWriter r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r18, $r20, $r28, $r30, $r31, $r34, $r35, $r49, $r51, $r52;
        org.w3c.dom.Attr r26;
        com.ibm.wsdl.util.ObjectRegistry r43, $r50;
        short $s0;
        org.w3c.dom.Node r0, $r24, $r25, r44, r48;
        int $i1, $i2, i3, i4, $i5;
        org.w3c.dom.NamedNodeMap $r46;
        java.lang.String r1, $r3, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r19, $r21, $r22, $r23, $r29, $r32, $r33, $r36, $r37, $r38, r45, r47;
        java.lang.IllegalArgumentException $r41, $r42;
        java.lang.Object $r39, $r40;

        r0 := @parameter0: org.w3c.dom.Node;

        r43 := @parameter1: com.ibm.wsdl.util.ObjectRegistry;

        r2 := @parameter2: java.io.PrintWriter;

        r1 := @parameter3: java.lang.String;

        if r0 != null goto label01;

        return;

     label01:
        z2 = 0;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i5 = (int) $s0;

        tableswitch($i5)
        {
            case 1: goto label06;
            case 2: goto label29;
            case 3: goto label25;
            case 4: goto label24;
            case 5: goto label23;
            case 6: goto label29;
            case 7: goto label27;
            case 8: goto label26;
            case 9: goto label02;
            default: goto label29;
        };

     label02:
        if r1 == null goto label03;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\"1.0\" encoding=\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"?>");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        goto label04;

     label03:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("<?xml version=\"1.0\"?>");

     label04:
        r44 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label05:
        if r44 == null goto label29;

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void print(org.w3c.dom.Node,com.ibm.wsdl.util.ObjectRegistry,java.io.PrintWriter,java.lang.String)>(r44, r43, r2, r1);

        r44 = interfaceinvoke r44.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label05;

     label06:
        $r50 = new com.ibm.wsdl.util.ObjectRegistry;

        specialinvoke $r50.<com.ibm.wsdl.util.ObjectRegistry: void <init>(com.ibm.wsdl.util.ObjectRegistry)>(r43);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        $r19 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        $r22 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        $r23 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r22 == null goto label11;

        if $r23 == null goto label11;

        z3 = 0;

     label07:
        $r40 = virtualinvoke $r50.<com.ibm.wsdl.util.ObjectRegistry: java.lang.Object lookup(java.lang.String)>($r22);

        r45 = (java.lang.String) $r40;

        $z1 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r45);

        if $z1 == 0 goto label08;

        z3 = 1;

     label08:
        goto label10;

     label09:
        $r42 := @caughtexception;

     label10:
        if z3 != 0 goto label11;

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void printNamespaceDecl(org.w3c.dom.Node,com.ibm.wsdl.util.ObjectRegistry,java.io.PrintWriter)>(r0, $r50, r2);

     label11:
        $r46 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        if $r46 == null goto label12;

        $i2 = interfaceinvoke $r46.<org.w3c.dom.NamedNodeMap: int getLength()>();

        goto label13;

     label12:
        $i2 = 0;

     label13:
        i3 = $i2;

        i4 = 0;

     label14:
        if i4 >= i3 goto label20;

        $r25 = interfaceinvoke $r46.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i4);

        r26 = (org.w3c.dom.Attr) $r25;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r29 = interfaceinvoke r26.<org.w3c.dom.Attr: java.lang.String getNodeName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r32 = interfaceinvoke r26.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $r33 = staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String normalize(java.lang.String)>($r32);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r36);

        $r37 = interfaceinvoke r26.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        $r38 = interfaceinvoke r26.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        if $r37 == null goto label19;

        if $r38 == null goto label19;

        z4 = 0;

     label15:
        $r39 = virtualinvoke $r50.<com.ibm.wsdl.util.ObjectRegistry: java.lang.Object lookup(java.lang.String)>($r37);

        r47 = (java.lang.String) $r39;

        $z0 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z0 == 0 goto label16;

        z4 = 1;

     label16:
        goto label18;

     label17:
        $r41 := @caughtexception;

     label18:
        if z4 != 0 goto label19;

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void printNamespaceDecl(org.w3c.dom.Node,com.ibm.wsdl.util.ObjectRegistry,java.io.PrintWriter)>(r26, $r50, r2);

     label19:
        i4 = i4 + 1;

        goto label14;

     label20:
        $r24 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        r48 = $r24;

        if $r24 == null goto label22;

        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(62);

     label21:
        if r48 == null goto label29;

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void print(org.w3c.dom.Node,com.ibm.wsdl.util.ObjectRegistry,java.io.PrintWriter,java.lang.String)>(r48, $r50, r2, r1);

        r48 = interfaceinvoke r48.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label21;

     label22:
        z2 = 0;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("/>");

        goto label29;

     label23:
        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(38);

        $r12 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(59);

        goto label29;

     label24:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("<![CDATA[");

        $r13 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r13);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("]]>");

        goto label29;

     label25:
        $r14 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r15 = staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String normalize(java.lang.String)>($r14);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        goto label29;

     label26:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("<!--");

        $r9 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("-->");

        goto label29;

     label27:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("<?");

        $r10 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        $r11 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if $r11 == null goto label28;

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i1 <= 0 goto label28;

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(32);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r11);

     label28:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("?>");

        goto label29;

     label29:
        if $s0 != 1 goto label30;

        if z2 != 1 goto label30;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("</");

        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(62);

     label30:
        return;

        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalArgumentException from label15 to label16 with label17;
    }

    public static java.lang.String java2XMLEncoding(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    private static void printNamespaceDecl(org.w3c.dom.Node, com.ibm.wsdl.util.ObjectRegistry, java.io.PrintWriter)
    {
        java.io.PrintWriter r4;
        org.w3c.dom.Attr $r1;
        com.ibm.wsdl.util.ObjectRegistry r3;
        short $s0;
        org.w3c.dom.Element $r2, $r5;
        org.w3c.dom.Node r0;
        int $i1;

        r0 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: com.ibm.wsdl.util.ObjectRegistry;

        r4 := @parameter2: java.io.PrintWriter;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        $r1 = (org.w3c.dom.Attr) r0;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Attr: org.w3c.dom.Element getOwnerElement()>();

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void printNamespaceDecl(org.w3c.dom.Element,org.w3c.dom.Node,com.ibm.wsdl.util.ObjectRegistry,java.io.PrintWriter)>($r2, r0, r3, r4);

        goto label3;

     label2:
        $r5 = (org.w3c.dom.Element) r0;

        staticinvoke <com.ibm.wsdl.util.xml.DOM2Writer: void printNamespaceDecl(org.w3c.dom.Element,org.w3c.dom.Node,com.ibm.wsdl.util.ObjectRegistry,java.io.PrintWriter)>($r5, r0, r3, r4);

     label3:
        return;
    }

    private static void printNamespaceDecl(org.w3c.dom.Element, org.w3c.dom.Node, com.ibm.wsdl.util.ObjectRegistry, java.io.PrintWriter)
    {
        com.ibm.wsdl.util.ObjectRegistry r7;
        org.w3c.dom.Node r0;
        java.lang.String $r1, $r2, $r3, $r5, $r6, $r15, r16, r17;
        boolean $z0, $z1;
        java.io.PrintWriter r8;
        org.w3c.dom.Element r4;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14;

        r4 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.w3c.dom.Node;

        r7 := @parameter2: com.ibm.wsdl.util.ObjectRegistry;

        r8 := @parameter3: java.io.PrintWriter;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        r16 = $r1;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        r17 = $r2;

        $r3 = <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String NS_URI_XMLNS>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 != 0 goto label2;

     label1:
        $r5 = <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String NS_URI_XMLNS>;

        $r6 = staticinvoke <com.ibm.wsdl.util.xml.DOMUtils: java.lang.String getAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r4, $r5, $r2);

        if $r6 != null goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" xmlns:");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        goto label3;

     label2:
        r17 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        r16 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label3:
        virtualinvoke r7.<com.ibm.wsdl.util.ObjectRegistry: void register(java.lang.String,java.lang.Object)>(r17, r16);

        return;
    }

    private static java.lang.String normalize(java.lang.String)
    {
        char $c1, $c4;
        java.lang.StringBuffer $r5;
        int i0, $i2, $i3, $i5, i6, $i7, $i8;
        java.lang.String r1, $r2, $r3, $r4;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        if r1 == null goto label01;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        goto label02;

     label01:
        $i5 = 0;

     label02:
        i0 = $i5;

        i6 = 0;

     label03:
        if i6 >= i0 goto label14;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c1;

        lookupswitch($i7)
        {
            case 10: goto label08;
            case 34: goto label07;
            case 38: goto label06;
            case 60: goto label04;
            case 62: goto label05;
            default: goto label12;
        };

     label04:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&lt;");

        goto label13;

     label05:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&gt;");

        goto label13;

     label06:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&amp;");

        goto label13;

     label07:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&quot;");

        goto label13;

     label08:
        if i6 <= 0 goto label11;

        $i2 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        $i3 = $i2 - 1;

        $c4 = virtualinvoke $r5.<java.lang.StringBuffer: char charAt(int)>($i3);

        $i8 = (int) $c4;

        if $i8 == 13 goto label09;

        $r4 = <com.ibm.wsdl.util.StringUtils: java.lang.String lineSeparator>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label10;

     label09:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label10:
        goto label13;

     label11:
        $r3 = <com.ibm.wsdl.util.StringUtils: java.lang.String lineSeparator>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label13;

     label12:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label13:
        i6 = i6 + 1;

        goto label03;

     label14:
        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r3;

        <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String NS_URI_XMLNS> = "http://www.w3.org/2000/xmlns/";

        <com.ibm.wsdl.util.xml.DOM2Writer: java.lang.String NS_URI_XML> = "http://www.w3.org/XML/1998/namespace";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap> = $r0;

        $r1 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, "UTF-8");

        $r2 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "UTF-8");

        $r4 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("UTF8", "UTF-8");

        $r5 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("UTF-16", "UTF-16");

        $r6 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("UnicodeBig", "UTF-16");

        $r7 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("UnicodeLittle", "UTF-16");

        $r8 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ASCII", "US-ASCII");

        $r9 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_1", "ISO-8859-1");

        $r10 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_2", "ISO-8859-2");

        $r11 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_3", "ISO-8859-3");

        $r12 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_4", "ISO-8859-4");

        $r13 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_5", "ISO-8859-5");

        $r14 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_6", "ISO-8859-6");

        $r15 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_7", "ISO-8859-7");

        $r16 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_8", "ISO-8859-8");

        $r17 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_9", "ISO-8859-9");

        $r18 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_13", "ISO-8859-13");

        $r19 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO8859_15_FDIS", "ISO-8859-15");

        $r20 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("GBK", "GBK");

        $r21 = <com.ibm.wsdl.util.xml.DOM2Writer: java.util.Map xmlEncodingMap>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Big5", "Big5");

        return;
    }
}
