public class org.apache.cxf.jaxrs.provider.XMLBeanStreamSerializer extends java.lang.Object
{

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.XMLBeanStreamSerializer r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeanStreamSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void serialize(org.apache.xmlbeans.XmlObject, javax.xml.stream.XMLStreamWriter) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.Throwable $r11;
        javax.xml.stream.XMLStreamReader $r4;
        int $i0, $i1, $i2, i3;
        org.apache.cxf.jaxrs.provider.XMLBeanStreamSerializer r12;
        javax.xml.stream.XMLStreamWriter r5;
        org.apache.xmlbeans.XmlObject r0;
        java.lang.String $r1, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.FileInputStream $r3;
        java.io.File $r2, r13;

        r12 := @this: org.apache.cxf.jaxrs.provider.XMLBeanStreamSerializer;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        r5 := @parameter1: javax.xml.stream.XMLStreamWriter;

        r13 = null;

     label01:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>($r1, ".xml");

        r13 = $r2;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: void save(java.io.File)>($r2);

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        $r4 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>($r3);

     label02:
        $z0 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $i1 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: int next()>();

        tableswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label10;
            case 3: goto label13;
            case 4: goto label12;
            case 5: goto label13;
            case 6: goto label13;
            case 7: goto label03;
            case 8: goto label04;
            case 9: goto label13;
            case 10: goto label11;
            default: goto label13;
        };

     label03:
        interfaceinvoke r5.<javax.xml.stream.XMLStreamWriter: void writeStartDocument()>();

        goto label13;

     label04:
        interfaceinvoke r5.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        goto label13;

     label05:
        $r7 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        interfaceinvoke r5.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String)>($r7);

        $i2 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: int getAttributeCount()>();

        i3 = 0;

     label06:
        if i3 >= $i2 goto label09;

        $r8 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeLocalName(int)>(i3);

        $r9 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeNamespace(int)>(i3);

        $r10 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i3);

        if $r9 != null goto label07;

        interfaceinvoke r5.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r8, $r10);

        goto label08;

     label07:
        interfaceinvoke r5.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>($r9, $r8, $r10);

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        goto label13;

     label10:
        interfaceinvoke r5.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        goto label13;

     label11:
        goto label13;

     label12:
        $r6 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke r5.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r6);

        goto label13;

     label13:
        goto label02;

     label14:
        goto label19;

     label15:
        goto label18;

     label16:
        $r11 := @caughtexception;

        goto label21;

     label17:
        throw $r11;

     label18:
        return;

     label19:
        if $r2 == null goto label20;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label20;

        $z2 = virtualinvoke $r2.<java.io.File: boolean canWrite()>();

        if $z2 == 0 goto label20;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label20:
        goto label15;

     label21:
        if r13 == null goto label22;

        $z3 = virtualinvoke r13.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label22;

        $z4 = virtualinvoke r13.<java.io.File: boolean canWrite()>();

        if $z4 == 0 goto label22;

        virtualinvoke r13.<java.io.File: boolean delete()>();

     label22:
        goto label17;

        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }
}
