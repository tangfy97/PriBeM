public abstract class org.apache.lucene.analysis.ReusableAnalyzerBase extends org.apache.lucene.analysis.Analyzer
{

    public void <init>()
    {
        org.apache.lucene.analysis.ReusableAnalyzerBase r0;

        r0 := @this: org.apache.lucene.analysis.ReusableAnalyzerBase;

        specialinvoke r0.<org.apache.lucene.analysis.Analyzer: void <init>()>();

        return;
    }

    protected abstract org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents createComponents(java.lang.String, java.io.Reader);

    public final org.apache.lucene.analysis.TokenStream reusableTokenStream(java.lang.String, java.io.Reader) throws java.io.IOException
    {
        org.apache.lucene.analysis.TokenStream $r7;
        java.io.Reader r2, $r3;
        org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents $r5, r6;
        org.apache.lucene.analysis.ReusableAnalyzerBase r0;
        java.lang.Object $r1;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.ReusableAnalyzerBase;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Reader;

        $r1 = virtualinvoke r0.<org.apache.lucene.analysis.ReusableAnalyzerBase: java.lang.Object getPreviousTokenStream()>();

        r6 = (org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents) $r1;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.ReusableAnalyzerBase: java.io.Reader initReader(java.io.Reader)>(r2);

        if r6 == null goto label1;

        $z0 = virtualinvoke r6.<org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents: boolean reset(java.io.Reader)>($r3);

        if $z0 != 0 goto label2;

     label1:
        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.ReusableAnalyzerBase: org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents createComponents(java.lang.String,java.io.Reader)>(r4, $r3);

        r6 = $r5;

        virtualinvoke r0.<org.apache.lucene.analysis.ReusableAnalyzerBase: void setPreviousTokenStream(java.lang.Object)>($r5);

     label2:
        $r7 = virtualinvoke r6.<org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents: org.apache.lucene.analysis.TokenStream getTokenStream()>();

        return $r7;
    }

    public final org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String, java.io.Reader)
    {
        org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents $r4;
        org.apache.lucene.analysis.TokenStream $r5;
        org.apache.lucene.analysis.ReusableAnalyzerBase r0;
        java.lang.String r1;
        java.io.Reader r2, $r3;

        r0 := @this: org.apache.lucene.analysis.ReusableAnalyzerBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Reader;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.ReusableAnalyzerBase: java.io.Reader initReader(java.io.Reader)>(r2);

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.ReusableAnalyzerBase: org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents createComponents(java.lang.String,java.io.Reader)>(r1, $r3);

        $r5 = virtualinvoke $r4.<org.apache.lucene.analysis.ReusableAnalyzerBase$TokenStreamComponents: org.apache.lucene.analysis.TokenStream getTokenStream()>();

        return $r5;
    }

    protected java.io.Reader initReader(java.io.Reader)
    {
        org.apache.lucene.analysis.ReusableAnalyzerBase r1;
        java.io.Reader r0;

        r1 := @this: org.apache.lucene.analysis.ReusableAnalyzerBase;

        r0 := @parameter0: java.io.Reader;

        return r0;
    }
}
