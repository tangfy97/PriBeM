class org.apache.cxf.io.CachedOutputStream$3 extends javax.crypto.CipherOutputStream
{
    boolean closed;
    final org.apache.cxf.io.CachedOutputStream this$0;

    void <init>(org.apache.cxf.io.CachedOutputStream, java.io.OutputStream, javax.crypto.Cipher)
    {
        java.io.OutputStream r2;
        javax.crypto.Cipher r3;
        org.apache.cxf.io.CachedOutputStream r1;
        org.apache.cxf.io.CachedOutputStream$3 r0;

        r0 := @this: org.apache.cxf.io.CachedOutputStream$3;

        r1 := @parameter0: org.apache.cxf.io.CachedOutputStream;

        r2 := @parameter1: java.io.OutputStream;

        r3 := @parameter2: javax.crypto.Cipher;

        r0.<org.apache.cxf.io.CachedOutputStream$3: org.apache.cxf.io.CachedOutputStream this$0> = r1;

        specialinvoke r0.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r2, r3);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.cxf.io.CachedOutputStream$3 r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.io.CachedOutputStream$3;

        $z0 = r0.<org.apache.cxf.io.CachedOutputStream$3: boolean closed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<javax.crypto.CipherOutputStream: void close()>();

        r0.<org.apache.cxf.io.CachedOutputStream$3: boolean closed> = 1;

     label1:
        return;
    }
}
