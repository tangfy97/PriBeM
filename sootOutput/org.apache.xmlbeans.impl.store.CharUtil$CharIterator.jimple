public final class org.apache.xmlbeans.impl.store.CharUtil$CharIterator extends java.lang.Object
{
    private java.lang.Object _srcRoot;
    private int _offRoot;
    private int _cchRoot;
    private int _pos;
    private int _minPos;
    private int _maxPos;
    private int _offLeaf;
    private java.lang.String _srcLeafString;
    private char[] _srcLeafChars;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(java.lang.Object, int, int)
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void init(java.lang.Object,int,int,int)>(r1, i0, i1, 0);

        return;
    }

    public void init(java.lang.Object, int, int, int)
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;
        int i0, i1, i2, $i4, $i6;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r1, i0, i1);

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void release()>();

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: java.lang.Object _srcRoot> = r1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _offRoot> = i0;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _cchRoot> = i1;

        $i4 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _maxPos> = $i4;

        $i6 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _minPos> = $i6;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void movePos(int)>(i2);

        return;
    }

    public void release()
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: java.lang.Object _srcRoot> = null;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: java.lang.String _srcLeafString> = null;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char[] _srcLeafChars> = null;

        return;
    }

    public boolean hasNext()
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        $i1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _pos>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _cchRoot>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasPrev()
    {
        int $i0;
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        $i0 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _pos>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public char next()
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;
        int $i1, $i2;
        char $c0;
        java.lang.AssertionError $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $c0 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char currentChar()>();

        $i1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _pos>;

        $i2 = $i1 + 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void movePos(int)>($i2);

        return $c0;
    }

    public char prev()
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;
        int $i0, $i1;
        char $c2;
        java.lang.AssertionError $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean hasPrev()>();

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _pos>;

        $i1 = $i0 - 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void movePos(int)>($i1);

        $c2 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char currentChar()>();

        return $c2;
    }

    public void movePos(int)
    {
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r5;
        java.lang.AssertionError $r2, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;
        java.lang.String $r1;
        char[] $r3, $r4;
        java.lang.Object r7;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        if i0 < 0 goto label01;

        $i23 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _cchRoot>;

        if i0 <= $i23 goto label02;

     label01:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label02:
        $i1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _minPos>;

        if i0 < $i1 goto label03;

        $i22 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _maxPos>;

        if i0 <= $i22 goto label12;

     label03:
        r7 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: java.lang.Object _srcRoot>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _offRoot>;

        i24 = $i2 + i0;

        i25 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _cchRoot>;

        $i3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _offRoot>;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _offLeaf> = $i3;

     label04:
        $z3 = r7 instanceof org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        if $z3 == 0 goto label07;

        r5 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r7;

        $i14 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        if i24 >= $i14 goto label05;

        r7 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcLeft>;

        $i20 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offLeft>;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _offLeaf> = $i20;

        $i21 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offLeft>;

        i24 = i24 + $i21;

        i25 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        goto label06;

     label05:
        r7 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $i15 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _offLeaf> = $i15;

        $i17 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        $i16 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        $i18 = $i17 - $i16;

        i24 = i24 - $i18;

        $i19 = r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        i25 = i25 - $i19;

     label06:
        goto label04;

     label07:
        $i4 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _offLeaf>;

        $i5 = i24 - $i4;

        $i6 = i0 - $i5;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _minPos> = $i6;

        $i7 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _minPos>;

        $i8 = $i7 + i25;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _maxPos> = $i8;

        $i9 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _cchRoot>;

        if i0 >= $i9 goto label08;

        $i12 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _maxPos>;

        $i13 = $i12 - 1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _maxPos> = $i13;

     label08:
        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char[] _srcLeafChars> = null;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: java.lang.String _srcLeafString> = null;

        $z1 = r7 instanceof char[];

        if $z1 == 0 goto label09;

        $r3 = (char[]) r7;

        $r4 = (char[]) $r3;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char[] _srcLeafChars> = $r4;

        goto label10;

     label09:
        $r1 = (java.lang.String) r7;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: java.lang.String _srcLeafString> = $r1;

     label10:
        $z2 = <org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean $assertionsDisabled>;

        if $z2 != 0 goto label12;

        $i10 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _minPos>;

        if i0 < $i10 goto label11;

        $i11 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _maxPos>;

        if i0 <= $i11 goto label12;

     label11:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label12:
        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _pos> = i0;

        return;
    }

    private char currentChar()
    {
        char $c5;
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator r0;
        int $i0, $i1, $i2, $i3, i4;
        char[] $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        $i1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _offLeaf>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _pos>;

        $i3 = $i1 + $i0;

        $i2 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: int _minPos>;

        i4 = $i3 - $i2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char[] _srcLeafChars>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: java.lang.String _srcLeafString>;

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i4);

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char[] _srcLeafChars>;

        $c5 = $r2[i4];

     label2:
        return $c5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.CharUtil");

        <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
