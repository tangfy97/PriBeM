public abstract class org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase extends org.codehaus.jackson.map.TypeDeserializer
{
    protected final org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver;
    protected final org.codehaus.jackson.type.JavaType _baseType;
    protected final org.codehaus.jackson.map.BeanProperty _property;
    protected final org.codehaus.jackson.type.JavaType _defaultImpl;
    protected final java.util.HashMap _deserializers;
    protected org.codehaus.jackson.map.JsonDeserializer _defaultImplDeserializer;

    protected void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.map.jsontype.TypeIdResolver r2;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.BeanProperty r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.Class)>(r1, r2, r3, null);

        return;
    }

    protected void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty, java.lang.Class)
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.map.jsontype.TypeIdResolver r2;
        org.codehaus.jackson.type.JavaType r1, $r6;
        java.util.HashMap $r4;
        java.lang.Class r5;
        org.codehaus.jackson.map.BeanProperty r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        r5 := @parameter3: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.TypeDeserializer: void <init>()>();

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType> = r1;

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver> = r2;

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.BeanProperty _property> = r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.util.HashMap _deserializers> = $r4;

        if r5 != null goto label1;

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _defaultImpl> = null;

        goto label2;

     label1:
        $r6 = virtualinvoke r1.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class)>(r5);

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _defaultImpl> = $r6;

     label2:
        return;
    }

    public abstract org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion();

    public java.lang.String baseTypeName()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    public java.lang.String getPropertyName()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        return null;
    }

    public org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r1;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        return $r1;
    }

    public java.lang.Class getDefaultImpl()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.type.JavaType $r1, $r2;
        java.lang.Class $r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _defaultImpl>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _defaultImpl>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

     label2:
        return $r3;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r2;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r8;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.StringBuilder $r0, $r1, $r5, $r7;
        java.lang.Class $r3;
        java.lang.String $r4, $r9;

        r2 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; base-type:");

        $r6 = r2.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; id-resolver: ");

        $r8 = r2.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    protected final org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext, java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Throwable $r17;
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        java.util.HashMap $r1, $r3, $r23;
        org.codehaus.jackson.map.DeserializationConfig $r21;
        org.codehaus.jackson.map.DeserializationContext r8;
        org.codehaus.jackson.map.JsonMappingException $r16;
        org.codehaus.jackson.type.JavaType $r6, $r7, $r9, $r12, $r14, $r15, r19;
        org.codehaus.jackson.map.JsonDeserializer r18;
        java.lang.String r2;
        org.codehaus.jackson.map.DeserializerProvider $r20;
        org.codehaus.jackson.map.BeanProperty $r22;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r5;
        java.lang.Object $r4;
        java.lang.Class $r10, $r11, $r13;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        r8 := @parameter0: org.codehaus.jackson.map.DeserializationContext;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.util.HashMap _deserializers>;

        entermonitor $r1;

     label01:
        $r3 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.util.HashMap _deserializers>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r18 = (org.codehaus.jackson.map.JsonDeserializer) $r4;

        if r18 != null goto label06;

        $r5 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r6 = interfaceinvoke $r5.<org.codehaus.jackson.map.jsontype.TypeIdResolver: org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>(r2);

        r19 = $r6;

        if $r6 != null goto label03;

        $r14 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _defaultImpl>;

        if $r14 != null goto label02;

        $r15 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r16 = virtualinvoke r8.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String)>($r15, r2);

        throw $r16;

     label02:
        r18 = virtualinvoke r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.JsonDeserializer _findDefaultImplDeserializer(org.codehaus.jackson.map.DeserializationContext)>(r8);

        goto label05;

     label03:
        $r7 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        if $r7 == null goto label04;

        $r9 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        if $r10 != $r11 goto label04;

        $r12 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r13 = virtualinvoke $r6.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        r19 = virtualinvoke $r12.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class)>($r13);

     label04:
        $r20 = virtualinvoke r8.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()>();

        $r21 = virtualinvoke r8.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig getConfig()>();

        $r22 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.BeanProperty _property>;

        r18 = virtualinvoke $r20.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r21, r19, $r22);

     label05:
        $r23 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.util.HashMap _deserializers>;

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r18);

     label06:
        exitmonitor $r1;

     label07:
        goto label10;

     label08:
        $r17 := @caughtexception;

        exitmonitor $r1;

     label09:
        throw $r17;

     label10:
        return r18;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected final org.codehaus.jackson.map.JsonDeserializer _findDefaultImplDeserializer(org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Throwable $r11;
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.map.DeserializerProvider $r6;
        org.codehaus.jackson.map.DeserializationConfig $r7;
        org.codehaus.jackson.map.DeserializationContext r5;
        org.codehaus.jackson.map.BeanProperty $r8;
        org.codehaus.jackson.type.JavaType $r1, $r2, $r9;
        org.codehaus.jackson.map.JsonDeserializer $r3, $r4, $r10;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        r5 := @parameter0: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _defaultImpl>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _defaultImpl>;

        entermonitor $r2;

     label2:
        $r3 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.JsonDeserializer _defaultImplDeserializer>;

        if $r3 != null goto label3;

        $r6 = virtualinvoke r5.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()>();

        $r7 = virtualinvoke r5.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig getConfig()>();

        $r9 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _defaultImpl>;

        $r8 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.BeanProperty _property>;

        $r10 = virtualinvoke $r6.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r7, $r9, $r8);

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.JsonDeserializer _defaultImplDeserializer> = $r10;

     label3:
        $r4 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.JsonDeserializer _defaultImplDeserializer>;

        exitmonitor $r2;

     label4:
        return $r4;

     label5:
        $r11 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r11;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
