class org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList extends java.lang.Object
{
    private java.util.List theList;
    private java.util.Map seen;

    private void <init>()
    {
        java.util.IdentityHashMap $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: java.util.List theList> = $r1;

        $r2 = new java.util.IdentityHashMap;

        specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: java.util.Map seen> = $r2;

        return;
    }

    private boolean add(org.apache.xmlbeans.SchemaTypeLoader)
    {
        java.util.List $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList r0;
        org.apache.xmlbeans.SchemaTypeLoader r1;
        java.util.Map $r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList;

        r1 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: java.util.Map seen>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: java.util.List theList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: java.util.Map seen>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, null);

        return 1;
    }

    private org.apache.xmlbeans.SchemaTypeLoader[] toArray()
    {
        org.apache.xmlbeans.SchemaTypeLoader[] $r2, $r4, $r5;
        java.util.List $r1;
        java.lang.Object[] $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: java.util.List theList>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] access$400()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (org.apache.xmlbeans.SchemaTypeLoader[]) $r3;

        $r5 = (org.apache.xmlbeans.SchemaTypeLoader[]) $r4;

        return $r5;
    }

    void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$1)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$1 r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: void <init>()>();

        return;
    }

    static boolean access$200(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList, org.apache.xmlbeans.SchemaTypeLoader)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList r0;
        org.apache.xmlbeans.SchemaTypeLoader r1;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList;

        r1 := @parameter1: org.apache.xmlbeans.SchemaTypeLoader;

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: boolean add(org.apache.xmlbeans.SchemaTypeLoader)>(r1);

        return $z0;
    }

    static org.apache.xmlbeans.SchemaTypeLoader[] access$300(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList)
    {
        org.apache.xmlbeans.SchemaTypeLoader[] $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: org.apache.xmlbeans.SchemaTypeLoader[] toArray()>();

        return $r1;
    }
}
