class org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    private final java.lang.String subPattern;
    private final org.springframework.util.PathMatcher pathMatcher;
    private final java.lang.String rootPath;
    private final java.util.Set resources;

    public void <init>(java.lang.String, java.lang.String, org.springframework.util.PathMatcher)
    {
        org.springframework.util.PathMatcher r3;
        int $i0;
        java.lang.StringBuilder $r5, $r7;
        java.lang.String r2, r4, $r6, $r8;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor r0;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.springframework.util.PathMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.util.Set resources> = $r1;

        r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String subPattern> = r2;

        r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: org.springframework.util.PathMatcher pathMatcher> = r3;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label2;

     label1:
        $r8 = r4;

        goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String rootPath> = $r8;

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.IllegalStateException $r7;
        java.lang.Object[] r13;
        java.lang.Integer $r17;
        int $i0;
        java.lang.Boolean $r19, $r20;
        java.lang.String $r1, $r4, $r5, $r6, $r10, $r12;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Class $r2, $r3;
        java.lang.StringBuilder $r8, $r9;
        java.lang.Object $r14, $r15, r16, $r18;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor r11;

        r11 := @this: org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor;

        r16 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r13 := @parameter2: java.lang.Object[];

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r2 = class "Ljava/lang/Object;";

        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("equals");

        if $z4 == 0 goto label2;

        $r18 = r13[0];

        if r16 != $r18 goto label1;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r20;

     label1:
        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r19;

     label2:
        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("hashCode");

        if $z5 == 0 goto label6;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r16);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r17;

     label3:
        $r4 = "getAttributes";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label4;

        $r15 = virtualinvoke r11.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.Object getAttributes()>();

        return $r15;

     label4:
        $r5 = "visit";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label5;

        $r14 = r13[0];

        virtualinvoke r11.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: void visit(java.lang.Object)>($r14);

        return null;

     label5:
        $r6 = "toString";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label6;

        $r12 = virtualinvoke r11.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String toString()>();

        return $r12;

     label6:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unexpected method invocation: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r7;
    }

    public void visit(java.lang.Object)
    {
        org.springframework.util.PathMatcher $r2;
        java.util.Set $r8;
        int $i0;
        java.lang.Object r1;
        org.springframework.core.io.VfsResource $r7;
        java.lang.String $r3, $r4, $r5, $r6;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor r0;
        boolean $z0;

        r0 := @this: org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: org.springframework.util.PathMatcher pathMatcher>;

        $r3 = r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String subPattern>;

        $r4 = staticinvoke <org.springframework.core.io.support.VfsPatternUtils: java.lang.String getPath(java.lang.Object)>(r1);

        $r5 = r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String rootPath>;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = interfaceinvoke $r2.<org.springframework.util.PathMatcher: boolean match(java.lang.String,java.lang.String)>($r3, $r6);

        if $z0 == 0 goto label1;

        $r8 = r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.util.Set resources>;

        $r7 = new org.springframework.core.io.VfsResource;

        specialinvoke $r7.<org.springframework.core.io.VfsResource: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label1:
        return;
    }

    public java.lang.Object getAttributes()
    {
        java.lang.Object $r0;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor r1;

        r1 := @this: org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor;

        $r0 = staticinvoke <org.springframework.core.io.support.VfsPatternUtils: java.lang.Object getVisitorAttribute()>();

        return $r0;
    }

    public java.util.Set getResources()
    {
        java.util.Set $r1;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor r0;

        r0 := @this: org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor;

        $r1 = r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.util.Set resources>;

        return $r1;
    }

    public int size()
    {
        int $i0;
        java.util.Set $r1;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor r0;

        r0 := @this: org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor;

        $r1 = r0.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.util.Set resources>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.Set $r5;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r6;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor r2;

        r2 := @this: org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sub-pattern: ");

        $r3 = r2.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String subPattern>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", resources: ");

        $r5 = r2.<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.util.Set resources>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
