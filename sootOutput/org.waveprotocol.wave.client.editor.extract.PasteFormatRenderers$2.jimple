final class org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$2 extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.NiceHtmlRenderer
{

    void <init>()
    {
        org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$2 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode renderSequence(org.waveprotocol.wave.model.document.util.ReadableDocumentView, org.waveprotocol.wave.client.editor.content.ContentNode, org.waveprotocol.wave.client.editor.content.ContentNode, com.google.gwt.dom.client.Element, org.waveprotocol.wave.client.editor.extract.SelectionMatcher)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0, r7;
        org.waveprotocol.wave.client.editor.extract.SelectionMatcher r3;
        org.waveprotocol.wave.model.document.util.ReadableDocumentView r5;
        com.google.gwt.dom.client.Element r4, r9;
        com.google.gwt.dom.client.Node $r1, r2, $r8;
        org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$2 r6;
        boolean $z0, $z1;

        r6 := @this: org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$2;

        r5 := @parameter0: org.waveprotocol.wave.model.document.util.ReadableDocumentView;

        r0 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentNode;

        r7 := @parameter2: org.waveprotocol.wave.client.editor.content.ContentNode;

        r4 := @parameter3: com.google.gwt.dom.client.Element;

        r3 := @parameter4: org.waveprotocol.wave.client.editor.extract.SelectionMatcher;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: com.google.gwt.dom.client.Node getImplNodelet()>();

        if $r1 == null goto label1;

        $r8 = virtualinvoke $r1.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node cloneNode(boolean)>(0);

        goto label2;

     label1:
        $r8 = null;

     label2:
        r2 = $r8;

        if $r8 == null goto label3;

        virtualinvoke r4.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node appendChild(com.google.gwt.dom.client.Node)>($r8);

        virtualinvoke r3.<org.waveprotocol.wave.client.editor.extract.SelectionMatcher: void maybeNoteHtml(org.waveprotocol.wave.client.editor.content.ContentNode,com.google.gwt.dom.client.Node)>(r0, $r8);

        goto label4;

     label3:
        virtualinvoke r3.<org.waveprotocol.wave.client.editor.extract.SelectionMatcher: void noteSelectionInNode(org.waveprotocol.wave.client.editor.content.ContentNode,com.google.gwt.dom.client.Element,boolean)>(r0, r4, 0);

     label4:
        $z0 = r0 instanceof org.waveprotocol.wave.client.editor.content.ContentElement;

        if $z0 == 0 goto label7;

        if r2 == null goto label5;

        $z1 = r2 instanceof com.google.gwt.dom.client.Element;

        if $z1 == 0 goto label5;

        r9 = (com.google.gwt.dom.client.Element) r2;

        goto label6;

     label5:
        r9 = r4;

     label6:
        staticinvoke <org.waveprotocol.wave.client.editor.extract.PasteFormatRenderer: void renderChildren(org.waveprotocol.wave.model.document.util.ReadableDocumentView,com.google.gwt.dom.client.Element,org.waveprotocol.wave.client.editor.content.ContentNode,org.waveprotocol.wave.client.editor.extract.SelectionMatcher)>(r5, r9, r0, r3);

     label7:
        return r0;
    }
}
