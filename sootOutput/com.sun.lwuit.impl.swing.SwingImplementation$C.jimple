class com.sun.lwuit.impl.swing.SwingImplementation$C extends javax.swing.JComponent implements java.awt.event.KeyListener, java.awt.event.MouseListener, java.awt.event.MouseMotionListener
{
    private java.awt.image.BufferedImage buffer;
    private int bufferedImageType;
    final com.sun.lwuit.impl.swing.SwingImplementation this$0;

    void <init>(com.sun.lwuit.impl.swing.SwingImplementation)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        com.sun.lwuit.impl.swing.SwingImplementation r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r1 := @parameter0: com.sun.lwuit.impl.swing.SwingImplementation;

        r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: com.sun.lwuit.impl.swing.SwingImplementation this$0> = r1;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: int bufferedImageType> = 1;

        virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: void addKeyListener(java.awt.event.KeyListener)>(r0);

        virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: void addMouseListener(java.awt.event.MouseListener)>(r0);

        virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: void addMouseMotionListener(java.awt.event.MouseMotionListener)>(r0);

        virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: void setFocusable(boolean)>(1);

        virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: void requestFocus()>();

        return;
    }

    public void setBufferedImageType(int)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.image.BufferedImage $r1;
        int i0, $i1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        i0 := @parameter0: int;

        $i1 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: int bufferedImageType>;

        if i0 == $i1 goto label1;

        r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: int bufferedImageType> = i0;

        $r1 = specialinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage createBufferedImage()>();

        r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer> = $r1;

     label1:
        return;
    }

    public int getBufferedImageType()
    {
        int $i0;
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        $i0 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: int bufferedImageType>;

        return $i0;
    }

    public void paint(java.awt.Graphics)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.image.BufferedImage $r1, $r3, $r5, $r6, $r7;
        java.awt.Dimension $r4;
        java.awt.Graphics r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r2 := @parameter0: java.awt.Graphics;

        $r1 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        if $r1 == null goto label2;

        $r3 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        virtualinvoke r2.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r3, 0, 0, null);

        $r4 = virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Dimension getPreferredSize()>();

        $r5 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        $i0 = virtualinvoke $r5.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = $r4.<java.awt.Dimension: int width>;

        if $i0 != $i1 goto label1;

        $r7 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        $i2 = virtualinvoke $r7.<java.awt.image.BufferedImage: int getHeight()>();

        $i3 = $r4.<java.awt.Dimension: int height>;

        if $i2 == $i3 goto label2;

     label1:
        $r6 = specialinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage createBufferedImage()>();

        r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer> = $r6;

     label2:
        return;
    }

    public java.awt.font.FontRenderContext getFRC()
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.font.FontRenderContext $r2;
        java.awt.Graphics2D $r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        $r1 = virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Graphics2D getGraphics2D()>();

        $r2 = virtualinvoke $r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        return $r2;
    }

    public java.awt.Graphics2D getGraphics2D()
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.image.BufferedImage $r1, $r2, $r4;
        java.awt.Graphics2D $r3;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        $r1 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage createBufferedImage()>();

        r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer> = $r4;

     label1:
        $r2 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        $r3 = virtualinvoke $r2.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        return $r3;
    }

    private java.awt.image.BufferedImage createBufferedImage()
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r1;
        java.awt.image.BufferedImage $r0;
        java.awt.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r1 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        $r0 = new java.awt.image.BufferedImage;

        $r2 = virtualinvoke r1.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Dimension getPreferredSize()>();

        $i0 = $r2.<java.awt.Dimension: int width>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(20, $i0);

        $r3 = virtualinvoke r1.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Dimension getPreferredSize()>();

        $i2 = $r3.<java.awt.Dimension: int height>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(20, $i2);

        $i4 = r1.<com.sun.lwuit.impl.swing.SwingImplementation$C: int bufferedImageType>;

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, $i4);

        return $r0;
    }

    public void validate()
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        com.sun.lwuit.geom.Dimension $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.awt.image.BufferedImage $r2, $r9, $r10, $r11;
        com.sun.lwuit.Form $r13;
        java.awt.Dimension $r1, $r4, $r5, $r7, $r8;
        com.sun.lwuit.impl.swing.SwingImplementation $r6, $r12;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        $r1 = virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Dimension getPreferredSize()>();

        $r2 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        if $r2 == null goto label1;

        $i8 = $r1.<java.awt.Dimension: int width>;

        $r9 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        $i9 = virtualinvoke $r9.<java.awt.image.BufferedImage: int getWidth()>();

        if $i8 != $i9 goto label1;

        $i10 = $r1.<java.awt.Dimension: int height>;

        $r10 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer>;

        $i11 = virtualinvoke $r10.<java.awt.image.BufferedImage: int getHeight()>();

        if $i10 == $i11 goto label2;

     label1:
        $r11 = specialinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage createBufferedImage()>();

        r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.image.BufferedImage buffer> = $r11;

     label2:
        $r12 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: com.sun.lwuit.impl.swing.SwingImplementation this$0>;

        $r13 = virtualinvoke $r12.<com.sun.lwuit.impl.swing.SwingImplementation: com.sun.lwuit.Form getCurrentForm()>();

        if $r13 != null goto label3;

        return;

     label3:
        $i0 = $r1.<java.awt.Dimension: int width>;

        $i1 = virtualinvoke $r13.<com.sun.lwuit.Form: int getWidth()>();

        if $i0 != $i1 goto label4;

        $i6 = $r1.<java.awt.Dimension: int height>;

        $i7 = virtualinvoke $r13.<com.sun.lwuit.Form: int getHeight()>();

        if $i6 == $i7 goto label5;

     label4:
        $r3 = new com.sun.lwuit.geom.Dimension;

        $r4 = virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Dimension getPreferredSize()>();

        $i2 = $r4.<java.awt.Dimension: int width>;

        $r5 = virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Dimension getPreferredSize()>();

        $i3 = $r5.<java.awt.Dimension: int height>;

        specialinvoke $r3.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i2, $i3);

        virtualinvoke $r13.<com.sun.lwuit.Form: void setSize(com.sun.lwuit.geom.Dimension)>($r3);

        virtualinvoke $r13.<com.sun.lwuit.Form: void revalidate()>();

        virtualinvoke $r13.<com.sun.lwuit.Form: void repaint()>();

        $r6 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: com.sun.lwuit.impl.swing.SwingImplementation this$0>;

        $r7 = virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Dimension getPreferredSize()>();

        $i4 = $r7.<java.awt.Dimension: int width>;

        $r8 = virtualinvoke r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: java.awt.Dimension getPreferredSize()>();

        $i5 = $r8.<java.awt.Dimension: int height>;

        staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: void access$000(com.sun.lwuit.impl.swing.SwingImplementation,int,int)>($r6, $i4, $i5);

     label5:
        virtualinvoke $r13.<com.sun.lwuit.Form: void repaint()>();

        return;
    }

    public void keyTyped(java.awt.event.KeyEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.event.KeyEvent r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    public void keyPressed(java.awt.event.KeyEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        int $i0;
        com.sun.lwuit.impl.swing.SwingImplementation $r2;
        java.awt.event.KeyEvent r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r1 := @parameter0: java.awt.event.KeyEvent;

        $r2 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: com.sun.lwuit.impl.swing.SwingImplementation this$0>;

        $i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();

        staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: void access$100(com.sun.lwuit.impl.swing.SwingImplementation,int)>($r2, $i0);

        return;
    }

    public void keyReleased(java.awt.event.KeyEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        int $i0;
        com.sun.lwuit.impl.swing.SwingImplementation $r2;
        java.awt.event.KeyEvent r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r1 := @parameter0: java.awt.event.KeyEvent;

        $r2 = r0.<com.sun.lwuit.impl.swing.SwingImplementation$C: com.sun.lwuit.impl.swing.SwingImplementation this$0>;

        $i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();

        staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: void access$200(com.sun.lwuit.impl.swing.SwingImplementation,int)>($r2, $i0);

        return;
    }

    public void mouseClicked(java.awt.event.MouseEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mousePressed(java.awt.event.MouseEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r1;
        int $i0, $i1;
        com.sun.lwuit.impl.swing.SwingImplementation $r2;
        java.awt.event.MouseEvent r0;
        boolean $z0;

        r1 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $z0 = staticinvoke <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>(r0);

        if $z0 == 0 goto label1;

        $r2 = r1.<com.sun.lwuit.impl.swing.SwingImplementation$C: com.sun.lwuit.impl.swing.SwingImplementation this$0>;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getX()>();

        $i1 = virtualinvoke r0.<java.awt.event.MouseEvent: int getY()>();

        staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: void access$300(com.sun.lwuit.impl.swing.SwingImplementation,int,int)>($r2, $i0, $i1);

     label1:
        return;
    }

    public void mouseReleased(java.awt.event.MouseEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r1;
        int $i0, $i1;
        com.sun.lwuit.impl.swing.SwingImplementation $r2;
        java.awt.event.MouseEvent r0;
        boolean $z0;

        r1 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $z0 = staticinvoke <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>(r0);

        if $z0 == 0 goto label1;

        $r2 = r1.<com.sun.lwuit.impl.swing.SwingImplementation$C: com.sun.lwuit.impl.swing.SwingImplementation this$0>;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getX()>();

        $i1 = virtualinvoke r0.<java.awt.event.MouseEvent: int getY()>();

        staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: void access$400(com.sun.lwuit.impl.swing.SwingImplementation,int,int)>($r2, $i0, $i1);

     label1:
        return;
    }

    public void mouseEntered(java.awt.event.MouseEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseExited(java.awt.event.MouseEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseDragged(java.awt.event.MouseEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r1;
        int $i0, $i1;
        com.sun.lwuit.impl.swing.SwingImplementation $r2;
        java.awt.event.MouseEvent r0;
        boolean $z0;

        r1 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $z0 = staticinvoke <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>(r0);

        if $z0 == 0 goto label1;

        $r2 = r1.<com.sun.lwuit.impl.swing.SwingImplementation$C: com.sun.lwuit.impl.swing.SwingImplementation this$0>;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getX()>();

        $i1 = virtualinvoke r0.<java.awt.event.MouseEvent: int getY()>();

        staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: void access$500(com.sun.lwuit.impl.swing.SwingImplementation,int,int)>($r2, $i0, $i1);

     label1:
        return;
    }

    public void mouseMoved(java.awt.event.MouseEvent)
    {
        com.sun.lwuit.impl.swing.SwingImplementation$C r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.sun.lwuit.impl.swing.SwingImplementation$C;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }
}
