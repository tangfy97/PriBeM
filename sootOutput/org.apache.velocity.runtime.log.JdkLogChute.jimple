public class org.apache.velocity.runtime.log.JdkLogChute extends java.lang.Object implements org.apache.velocity.runtime.log.LogChute
{
    public static final java.lang.String RUNTIME_LOG_JDK_LOGGER;
    public static final java.lang.String RUNTIME_LOG_JDK_LOGGER_LEVEL;
    public static final java.lang.String DEFAULT_LOG_NAME;
    protected java.util.logging.Logger logger;

    public void <init>()
    {
        org.apache.velocity.runtime.log.JdkLogChute r0;

        r0 := @this: org.apache.velocity.runtime.log.JdkLogChute;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.log.JdkLogChute: java.util.logging.Logger logger> = null;

        return;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices)
    {
        org.apache.velocity.runtime.log.JdkLogChute r2;
        java.util.logging.Level $r5;
        org.apache.velocity.runtime.RuntimeServices r0;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r4, $r14, r15;
        java.util.logging.Logger $r3, $r6;
        java.lang.Object $r1;

        r2 := @this: org.apache.velocity.runtime.log.JdkLogChute;

        r0 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        $r1 = interfaceinvoke r0.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object getProperty(java.lang.String)>("runtime.log.logsystem.jdk.logger");

        r15 = (java.lang.String) $r1;

        if r15 != null goto label1;

        r15 = "org.apache.velocity";

     label1:
        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(r15);

        r2.<org.apache.velocity.runtime.log.JdkLogChute: java.util.logging.Logger logger> = $r3;

        $r4 = interfaceinvoke r0.<org.apache.velocity.runtime.RuntimeServices: java.lang.String getString(java.lang.String)>("runtime.log.logsystem.jdk.logger.level");

        if $r4 == null goto label2;

        $r5 = staticinvoke <java.util.logging.Level: java.util.logging.Level parse(java.lang.String)>($r4);

        $r6 = r2.<org.apache.velocity.runtime.log.JdkLogChute: java.util.logging.Logger logger>;

        virtualinvoke $r6.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r5);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JdkLogChute will use logger \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at level \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.velocity.runtime.log.JdkLogChute: void log(int,java.lang.String)>(0, $r14);

     label2:
        return;
    }

    protected java.util.logging.Level getJdkLevel(int)
    {
        org.apache.velocity.runtime.log.JdkLogChute r6;
        java.util.logging.Level $r0, $r1, $r2, $r3, $r4, $r5;
        int i0;

        r6 := @this: org.apache.velocity.runtime.log.JdkLogChute;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label4;
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        return $r1;

     label2:
        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        return $r2;

     label3:
        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        return $r3;

     label4:
        $r4 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        return $r4;

     label5:
        $r0 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        return $r0;

     label6:
        $r5 = <java.util.logging.Level: java.util.logging.Level FINER>;

        return $r5;
    }

    public void log(int, java.lang.String)
    {
        int i0;
        org.apache.velocity.runtime.log.JdkLogChute r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.runtime.log.JdkLogChute;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.velocity.runtime.log.JdkLogChute: void log(int,java.lang.String,java.lang.Throwable)>(i0, r1, null);

        return;
    }

    public void log(int, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        int i0;
        org.apache.velocity.runtime.log.JdkLogChute r0;
        java.lang.String r3;
        java.util.logging.Logger $r4, $r5;
        java.util.logging.Level $r1;

        r0 := @this: org.apache.velocity.runtime.log.JdkLogChute;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.log.JdkLogChute: java.util.logging.Level getJdkLevel(int)>(i0);

        if r2 != null goto label1;

        $r5 = r0.<org.apache.velocity.runtime.log.JdkLogChute: java.util.logging.Logger logger>;

        virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r1, r3);

        goto label2;

     label1:
        $r4 = r0.<org.apache.velocity.runtime.log.JdkLogChute: java.util.logging.Logger logger>;

        virtualinvoke $r4.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r1, r3, r2);

     label2:
        return;
    }

    public boolean isLevelEnabled(int)
    {
        int i0;
        org.apache.velocity.runtime.log.JdkLogChute r0;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.log.JdkLogChute;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.log.JdkLogChute: java.util.logging.Level getJdkLevel(int)>(i0);

        $r2 = r0.<org.apache.velocity.runtime.log.JdkLogChute: java.util.logging.Logger logger>;

        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.velocity.runtime.log.JdkLogChute: java.lang.String DEFAULT_LOG_NAME> = "org.apache.velocity";

        <org.apache.velocity.runtime.log.JdkLogChute: java.lang.String RUNTIME_LOG_JDK_LOGGER_LEVEL> = "runtime.log.logsystem.jdk.logger.level";

        <org.apache.velocity.runtime.log.JdkLogChute: java.lang.String RUNTIME_LOG_JDK_LOGGER> = "runtime.log.logsystem.jdk.logger";

        return;
    }
}
