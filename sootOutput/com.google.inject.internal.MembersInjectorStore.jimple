final class com.google.inject.internal.MembersInjectorStore extends java.lang.Object
{
    private final com.google.inject.internal.InjectorImpl injector;
    private final com.google.inject.internal.util.$ImmutableList typeListenerBindings;
    private final com.google.inject.internal.FailableCache cache;

    void <init>(com.google.inject.internal.InjectorImpl, java.util.List)
    {
        java.util.List r3;
        com.google.inject.internal.InjectorImpl r2;
        com.google.inject.internal.util.$ImmutableList $r4;
        com.google.inject.internal.MembersInjectorStore r0;
        com.google.inject.internal.MembersInjectorStore$1 $r1;

        r0 := @this: com.google.inject.internal.MembersInjectorStore;

        r2 := @parameter0: com.google.inject.internal.InjectorImpl;

        r3 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.inject.internal.MembersInjectorStore$1;

        specialinvoke $r1.<com.google.inject.internal.MembersInjectorStore$1: void <init>(com.google.inject.internal.MembersInjectorStore)>(r0);

        r0.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.FailableCache cache> = $r1;

        r0.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.InjectorImpl injector> = r2;

        $r4 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOf(java.lang.Iterable)>(r3);

        r0.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.util.$ImmutableList typeListenerBindings> = $r4;

        return;
    }

    public boolean hasTypeListeners()
    {
        com.google.inject.internal.util.$ImmutableList $r1;
        com.google.inject.internal.MembersInjectorStore r0;
        boolean $z0, $z1;

        r0 := @this: com.google.inject.internal.MembersInjectorStore;

        $r1 = r0.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.util.$ImmutableList typeListenerBindings>;

        $z0 = virtualinvoke $r1.<com.google.inject.internal.util.$ImmutableList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public com.google.inject.internal.MembersInjectorImpl get(com.google.inject.TypeLiteral, com.google.inject.internal.Errors) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.Errors r2;
        com.google.inject.internal.MembersInjectorImpl $r5;
        com.google.inject.internal.MembersInjectorStore r0;
        java.lang.Object $r4;
        com.google.inject.internal.FailableCache $r3;
        com.google.inject.TypeLiteral r1;

        r0 := @this: com.google.inject.internal.MembersInjectorStore;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        r2 := @parameter1: com.google.inject.internal.Errors;

        $r3 = r0.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.FailableCache cache>;

        $r4 = virtualinvoke $r3.<com.google.inject.internal.FailableCache: java.lang.Object get(java.lang.Object,com.google.inject.internal.Errors)>(r1, r2);

        $r5 = (com.google.inject.internal.MembersInjectorImpl) $r4;

        return $r5;
    }

    boolean remove(com.google.inject.TypeLiteral)
    {
        com.google.inject.internal.MembersInjectorStore r0;
        com.google.inject.internal.FailableCache $r2;
        com.google.inject.TypeLiteral r1;
        boolean $z0;

        r0 := @this: com.google.inject.internal.MembersInjectorStore;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = r0.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.FailableCache cache>;

        $z0 = virtualinvoke $r2.<com.google.inject.internal.FailableCache: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    private com.google.inject.internal.MembersInjectorImpl createWithListeners(com.google.inject.TypeLiteral, com.google.inject.internal.Errors) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.Lookups $r6;
        com.google.inject.spi.TypeListenerBinding r12;
        com.google.inject.internal.MembersInjectorImpl $r9;
        com.google.inject.internal.MembersInjectorStore r2;
        int $i0;
        boolean $z0, $z1;
        com.google.inject.internal.util.$ImmutableList $r3, $r7;
        java.util.Iterator $r8;
        java.util.Collection $r17;
        com.google.inject.ConfigurationException $r16;
        java.util.Set r19;
        java.lang.RuntimeException $r15;
        com.google.inject.internal.Errors r0;
        com.google.inject.internal.InjectorImpl $r5, $r10;
        java.lang.Object $r11, $r18;
        com.google.inject.internal.EncounterImpl $r4;
        com.google.inject.matcher.Matcher $r13;
        com.google.inject.spi.TypeListener $r14;
        com.google.inject.TypeLiteral r1;

        r2 := @this: com.google.inject.internal.MembersInjectorStore;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        r0 := @parameter1: com.google.inject.internal.Errors;

        $i0 = virtualinvoke r0.<com.google.inject.internal.Errors: int size()>();

     label01:
        r19 = staticinvoke <com.google.inject.spi.InjectionPoint: java.util.Set forInstanceMethodsAndFields(com.google.inject.TypeLiteral)>(r1);

     label02:
        goto label04;

     label03:
        $r16 := @caughtexception;

        $r17 = virtualinvoke $r16.<com.google.inject.ConfigurationException: java.util.Collection getErrorMessages()>();

        virtualinvoke r0.<com.google.inject.internal.Errors: com.google.inject.internal.Errors merge(java.util.Collection)>($r17);

        $r18 = virtualinvoke $r16.<com.google.inject.ConfigurationException: java.lang.Object getPartialValue()>();

        r19 = (java.util.Set) $r18;

     label04:
        $r3 = virtualinvoke r2.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.util.$ImmutableList getInjectors(java.util.Set,com.google.inject.internal.Errors)>(r19, r0);

        virtualinvoke r0.<com.google.inject.internal.Errors: void throwIfNewErrors(int)>($i0);

        $r4 = new com.google.inject.internal.EncounterImpl;

        $r5 = r2.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.InjectorImpl injector>;

        $r6 = $r5.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.Lookups lookups>;

        specialinvoke $r4.<com.google.inject.internal.EncounterImpl: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.Lookups)>(r0, $r6);

        $r7 = r2.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.util.$ImmutableList typeListenerBindings>;

        $r8 = virtualinvoke $r7.<com.google.inject.internal.util.$ImmutableList: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r11 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.google.inject.spi.TypeListenerBinding) $r11;

        $r13 = virtualinvoke r12.<com.google.inject.spi.TypeListenerBinding: com.google.inject.matcher.Matcher getTypeMatcher()>();

        $z0 = interfaceinvoke $r13.<com.google.inject.matcher.Matcher: boolean matches(java.lang.Object)>(r1);

        if $z0 == 0 goto label09;

     label06:
        $r14 = virtualinvoke r12.<com.google.inject.spi.TypeListenerBinding: com.google.inject.spi.TypeListener getListener()>();

        interfaceinvoke $r14.<com.google.inject.spi.TypeListener: void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter)>(r1, $r4);

     label07:
        goto label09;

     label08:
        $r15 := @caughtexception;

        virtualinvoke r0.<com.google.inject.internal.Errors: com.google.inject.internal.Errors errorNotifyingTypeListener(com.google.inject.spi.TypeListenerBinding,com.google.inject.TypeLiteral,java.lang.Throwable)>(r12, r1, $r15);

     label09:
        goto label05;

     label10:
        virtualinvoke $r4.<com.google.inject.internal.EncounterImpl: void invalidate()>();

        virtualinvoke r0.<com.google.inject.internal.Errors: void throwIfNewErrors(int)>($i0);

        $r9 = new com.google.inject.internal.MembersInjectorImpl;

        $r10 = r2.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.InjectorImpl injector>;

        specialinvoke $r9.<com.google.inject.internal.MembersInjectorImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.TypeLiteral,com.google.inject.internal.EncounterImpl,com.google.inject.internal.util.$ImmutableList)>($r10, r1, $r4, $r3);

        return $r9;

        catch com.google.inject.ConfigurationException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label06 to label07 with label08;
    }

    com.google.inject.internal.util.$ImmutableList getInjectors(java.util.Set, com.google.inject.internal.Errors)
    {
        com.google.inject.internal.SingleMemberInjector $r13;
        com.google.inject.internal.MembersInjectorStore r8;
        java.util.ArrayList $r0;
        com.google.inject.internal.ErrorsException $r11;
        com.google.inject.internal.SingleFieldInjector $r15;
        boolean $z0, $z1, $z2;
        com.google.inject.internal.util.$ImmutableList $r3;
        java.util.Iterator $r2;
        java.lang.reflect.Member $r7;
        java.util.Set r1;
        com.google.inject.internal.Errors r6, $r12, $r14;
        com.google.inject.internal.InjectorImpl $r9, $r10;
        com.google.inject.spi.InjectionPoint r5;
        com.google.inject.internal.SingleMethodInjector $r16;
        java.lang.Object $r4;

        r8 := @this: com.google.inject.internal.MembersInjectorStore;

        r1 := @parameter0: java.util.Set;

        r6 := @parameter1: com.google.inject.internal.Errors;

        $r0 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.inject.spi.InjectionPoint) $r4;

     label02:
        $z1 = virtualinvoke r5.<com.google.inject.spi.InjectionPoint: boolean isOptional()>();

        if $z1 == 0 goto label03;

        $r14 = new com.google.inject.internal.Errors;

        $r12 = $r14;

        specialinvoke $r14.<com.google.inject.internal.Errors: void <init>(java.lang.Object)>(r5);

        goto label04;

     label03:
        $r12 = virtualinvoke r6.<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>(r5);

     label04:
        $r7 = virtualinvoke r5.<com.google.inject.spi.InjectionPoint: java.lang.reflect.Member getMember()>();

        $z2 = $r7 instanceof java.lang.reflect.Field;

        if $z2 == 0 goto label05;

        $r15 = new com.google.inject.internal.SingleFieldInjector;

        $r13 = $r15;

        $r10 = r8.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.InjectorImpl injector>;

        specialinvoke $r15.<com.google.inject.internal.SingleFieldInjector: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>($r10, r5, $r12);

        goto label06;

     label05:
        $r16 = new com.google.inject.internal.SingleMethodInjector;

        $r13 = $r16;

        $r9 = r8.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.InjectorImpl injector>;

        specialinvoke $r16.<com.google.inject.internal.SingleMethodInjector: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>($r9, r5, $r12);

     label06:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

     label07:
        goto label09;

     label08:
        $r11 := @caughtexception;

     label09:
        goto label01;

     label10:
        $r3 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOf(java.lang.Iterable)>($r0);

        return $r3;

        catch com.google.inject.internal.ErrorsException from label02 to label07 with label08;
    }

    static com.google.inject.internal.MembersInjectorImpl access$000(com.google.inject.internal.MembersInjectorStore, com.google.inject.TypeLiteral, com.google.inject.internal.Errors) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.Errors r2;
        com.google.inject.internal.MembersInjectorImpl $r3;
        com.google.inject.internal.MembersInjectorStore r0;
        com.google.inject.TypeLiteral r1;

        r0 := @parameter0: com.google.inject.internal.MembersInjectorStore;

        r1 := @parameter1: com.google.inject.TypeLiteral;

        r2 := @parameter2: com.google.inject.internal.Errors;

        $r3 = specialinvoke r0.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.MembersInjectorImpl createWithListeners(com.google.inject.TypeLiteral,com.google.inject.internal.Errors)>(r1, r2);

        return $r3;
    }
}
