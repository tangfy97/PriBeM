final class org.apache.jena.riot.process.normalize.NormalizeValue$2 extends java.lang.Object implements org.apache.jena.riot.process.normalize.DatatypeHandler
{

    void <init>()
    {
        org.apache.jena.riot.process.normalize.NormalizeValue$2 r0;

        r0 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.graph.Node handle(com.hp.hpl.jena.graph.Node, java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.graph.Node $r9, r12;
        org.apache.jena.riot.process.normalize.NormalizeValue$2 r14;
        int $i0, $i1, $i2, $i3, $i4, i6, $i7, $i9;
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r13;
        com.hp.hpl.jena.sparql.util.DateTimeStruct $r1;
        char $c5;
        com.hp.hpl.jena.datatypes.RDFDatatype r8;

        r14 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$2;

        r12 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: java.lang.String;

        r8 := @parameter2: com.hp.hpl.jena.datatypes.RDFDatatype;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        if $i0 >= 0 goto label1;

        return r12;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.sparql.util.DateTimeStruct: com.hp.hpl.jena.sparql.util.DateTimeStruct parseDateTime(java.lang.String)>(r0);

        $r2 = $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String second>;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(46);

        $r3 = $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String second>;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        i6 = $i2 - 1;

     label2:
        if i6 <= $i1 goto label4;

        $r13 = $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String second>;

        $c5 = virtualinvoke $r13.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c5;

        if $i7 == 48 goto label3;

        goto label4;

     label3:
        $i9 = (int) -1;

        i6 = i6 + $i9;

        goto label2;

     label4:
        $r4 = $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String second>;

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i6 != $i3 goto label5;

        return r12;

     label5:
        if i6 != $i1 goto label6;

        $r10 = $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String second>;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String second> = $r11;

        goto label7;

     label6:
        $r5 = $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String second>;

        $i4 = i6 + 1;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String second> = $r6;

     label7:
        $r7 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.DateTimeStruct: java.lang.String toString()>();

        $r9 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r7, null, r8);

        return $r9;
    }
}
