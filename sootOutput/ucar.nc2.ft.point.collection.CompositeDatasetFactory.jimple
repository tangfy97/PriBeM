public class ucar.nc2.ft.point.collection.CompositeDatasetFactory extends java.lang.Object
{
    public static final java.lang.String SCHEME;
    private static org.slf4j.Logger log;
    static boolean debug;

    public void <init>()
    {
        ucar.nc2.ft.point.collection.CompositeDatasetFactory r0;

        r0 := @this: ucar.nc2.ft.point.collection.CompositeDatasetFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static ucar.nc2.ft.FeatureDataset factory(java.lang.String, ucar.nc2.constants.FeatureType, thredds.inventory.DatasetCollectionManager, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r2;
        thredds.inventory.DatasetCollectionManager r1;
        int[] $r5;
        ucar.nc2.ft.point.collection.CompositeDatasetFactory$CompositePointDataset $r8;
        int $i0, $i1, $i2;
        java.lang.String $r7, r9, $r11, $r14, $r20;
        ucar.nc2.constants.FeatureType $r4, $r13, r21;
        ucar.nc2.ft.point.collection.CompositeStationCollection $r6;
        thredds.inventory.TimedCollection $r0;
        java.io.FileNotFoundException $r16;
        java.util.List $r3;
        ucar.nc2.ft.FeatureCollection r23;
        ucar.nc2.ft.FeatureDatasetPoint r22;
        java.lang.StringBuilder $r17, $r18, $r19;
        thredds.inventory.TimedCollection$Dataset $r12;
        ucar.nc2.ft.point.collection.CompositePointCollection $r10;
        ucar.nc2.ft.FeatureDataset $r15;

        r9 := @parameter0: java.lang.String;

        r21 := @parameter1: ucar.nc2.constants.FeatureType;

        r1 := @parameter2: thredds.inventory.DatasetCollectionManager;

        r2 := @parameter3: java.util.Formatter;

        $r0 = new thredds.inventory.TimedCollection;

        specialinvoke $r0.<thredds.inventory.TimedCollection: void <init>(thredds.inventory.DatasetCollectionManager,java.util.Formatter)>(r1, r2);

        $r3 = virtualinvoke $r0.<thredds.inventory.TimedCollection: java.util.List getDatasets()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r16 = new java.io.FileNotFoundException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collection is empty; spec=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label1:
        $r4 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY_POINT>;

        if r21 != $r4 goto label2;

        $r12 = virtualinvoke $r0.<thredds.inventory.TimedCollection: thredds.inventory.TimedCollection$Dataset getPrototype()>();

        $r13 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY_POINT>;

        $r14 = virtualinvoke $r12.<thredds.inventory.TimedCollection$Dataset: java.lang.String getLocation()>();

        $r15 = staticinvoke <ucar.nc2.ft.FeatureDatasetFactoryManager: ucar.nc2.ft.FeatureDataset open(ucar.nc2.constants.FeatureType,java.lang.String,ucar.nc2.util.CancelTask,java.util.Formatter)>($r13, $r14, null, r2);

        r22 = (ucar.nc2.ft.FeatureDatasetPoint) $r15;

        r21 = interfaceinvoke r22.<ucar.nc2.ft.FeatureDatasetPoint: ucar.nc2.constants.FeatureType getFeatureType()>();

        interfaceinvoke r22.<ucar.nc2.ft.FeatureDatasetPoint: void close()>();

     label2:
        $r5 = <ucar.nc2.ft.point.collection.CompositeDatasetFactory$1: int[] $SwitchMap$ucar$nc2$constants$FeatureType>;

        $i1 = virtualinvoke r21.<ucar.nc2.constants.FeatureType: int ordinal()>();

        $i2 = $r5[$i1];

        lookupswitch($i2)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label3:
        $r10 = new ucar.nc2.ft.point.collection.CompositePointCollection;

        $r11 = virtualinvoke r1.<thredds.inventory.DatasetCollectionManager: java.lang.String getCollectionName()>();

        specialinvoke $r10.<ucar.nc2.ft.point.collection.CompositePointCollection: void <init>(java.lang.String,thredds.inventory.TimedCollection)>($r11, $r0);

        r23 = $r10;

        goto label6;

     label4:
        $r6 = new ucar.nc2.ft.point.collection.CompositeStationCollection;

        $r7 = virtualinvoke r1.<thredds.inventory.DatasetCollectionManager: java.lang.String getCollectionName()>();

        specialinvoke $r6.<ucar.nc2.ft.point.collection.CompositeStationCollection: void <init>(java.lang.String,thredds.inventory.TimedCollection,java.util.List,java.util.List)>($r7, $r0, null, null);

        r23 = $r6;

        goto label6;

     label5:
        return null;

     label6:
        $r8 = new ucar.nc2.ft.point.collection.CompositeDatasetFactory$CompositePointDataset;

        specialinvoke $r8.<ucar.nc2.ft.point.collection.CompositeDatasetFactory$CompositePointDataset: void <init>(java.lang.String,ucar.nc2.constants.FeatureType,ucar.nc2.ft.FeatureCollection,thredds.inventory.TimedCollection,ucar.unidata.geoloc.LatLonRect)>(r9, r21, r23, $r0, null);

        return $r8;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.ft.point.collection.CompositeDatasetFactory: org.slf4j.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <ucar.nc2.ft.point.collection.CompositeDatasetFactory: java.lang.String SCHEME> = "collection:";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ft/point/collection/CompositeDatasetFactory;");

        <ucar.nc2.ft.point.collection.CompositeDatasetFactory: org.slf4j.Logger log> = $r0;

        <ucar.nc2.ft.point.collection.CompositeDatasetFactory: boolean debug> = 1;

        return;
    }
}
