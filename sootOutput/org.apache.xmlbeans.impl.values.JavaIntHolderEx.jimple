public abstract class org.apache.xmlbeans.impl.values.JavaIntHolderEx extends org.apache.xmlbeans.impl.values.JavaIntHolder
{
    private org.apache.xmlbeans.SchemaType _schemaType;

    public void <init>(org.apache.xmlbeans.SchemaType, boolean)
    {
        org.apache.xmlbeans.impl.values.JavaIntHolderEx r0;
        org.apache.xmlbeans.SchemaType r1;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaIntHolderEx;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaIntHolder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.SchemaType _schemaType> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: void initComplexType(boolean,boolean)>(z0, 0);

        return;
    }

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.impl.values.JavaIntHolderEx r0;
        org.apache.xmlbeans.SchemaType $r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaIntHolderEx;

        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        return $r1;
    }

    protected void set_text(java.lang.String)
    {
        org.apache.xmlbeans.impl.values.JavaIntHolderEx r1;
        java.lang.Exception $r6;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r7;
        org.apache.xmlbeans.impl.common.ValidationContext $r2, $r4;
        int $i0;
        java.lang.String r0;
        org.apache.xmlbeans.SchemaType $r3, $r5;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.values.JavaIntHolderEx;

        r0 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: int lexInt(java.lang.CharSequence)>(r0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r7.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r7;

     label4:
        $z0 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: boolean _validateOnSet()>();

        if $z0 == 0 goto label5;

        $r3 = r1.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r2 = <org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: void validateValue(int,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>($i0, $r3, $r2);

        $r5 = r1.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r4 = <org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, $r5, $r4);

     label5:
        specialinvoke r1.<org.apache.xmlbeans.impl.values.JavaIntHolder: void set_int(int)>($i0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void set_int(int)
    {
        org.apache.xmlbeans.impl.values.JavaIntHolderEx r0;
        org.apache.xmlbeans.impl.common.ValidationContext $r1;
        int i0;
        org.apache.xmlbeans.SchemaType $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaIntHolderEx;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: boolean _validateOnSet()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r1 = <org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: void validateValue(int,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(i0, $r2, $r1);

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaIntHolder: void set_int(int)>(i0);

        return;
    }

    public static void validateLexical(java.lang.String, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Object[] $r3;
        org.apache.xmlbeans.impl.common.ValidationContext r1;
        java.lang.String r0, $r4;
        org.apache.xmlbeans.SchemaType r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        r1 := @parameter2: org.apache.xmlbeans.impl.common.ValidationContext;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolder: void validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, r1);

        $z0 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean hasPatternFacet()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean matchPatternFacet(java.lang.String)>(r0);

        if $z1 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = "int";

        $r3[1] = r0;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r2);

        $r3[2] = $r4;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.1", $r3);

     label1:
        return;
    }

    private static void validateValue(int, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Integer $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43;
        org.apache.xmlbeans.SchemaType r0;
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2, $r3, $r4, $r5, $r11;
        java.lang.Object[] $r8, $r12, $r16, $r20, $r24, $r29;
        org.apache.xmlbeans.XmlAnySimpleType[] $r6;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, $i11, i12, $i13, $i15;
        java.lang.String $r10, $r15, $r19, $r23, $r27, $r28, $r32;
        char $c9;
        org.apache.xmlbeans.impl.common.ValidationContext r7;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.xmlbeans.SchemaType;

        r7 := @parameter2: org.apache.xmlbeans.impl.common.ValidationContext;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(7);

        if $r1 == null goto label02;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $i7 = virtualinvoke $r28.<java.lang.String: int length()>();

        i10 = $i7;

        if $i7 <= 0 goto label01;

        $c9 = virtualinvoke $r28.<java.lang.String: char charAt(int)>(0);

        $i13 = (int) $c9;

        if $i13 != 45 goto label01;

        $i15 = (int) -1;

        i10 = $i7 + $i15;

     label01:
        $i11 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: int getIntValue(org.apache.xmlbeans.XmlObject)>($r1);

        if i10 <= $i11 goto label02;

        $r29 = newarray (java.lang.Object)[4];

        $r33 = new java.lang.Integer;

        specialinvoke $r33.<java.lang.Integer: void <init>(int)>(i10);

        $r29[0] = $r33;

        $r29[1] = $r28;

        $r34 = new java.lang.Integer;

        $i8 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: int getIntValue(org.apache.xmlbeans.XmlObject)>($r1);

        specialinvoke $r34.<java.lang.Integer: void <init>(int)>($i8);

        $r29[2] = $r34;

        $r32 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r29[3] = $r32;

        interfaceinvoke r7.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-totalDigits-valid", $r29);

        return;

     label02:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(3);

        if $r2 == null goto label03;

        $i6 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: int getIntValue(org.apache.xmlbeans.XmlObject)>($r2);

        if i1 > $i6 goto label03;

        $r24 = newarray (java.lang.Object)[4];

        $r24[0] = "int";

        $r35 = new java.lang.Integer;

        specialinvoke $r35.<java.lang.Integer: void <init>(int)>(i1);

        $r24[1] = $r35;

        $r36 = new java.lang.Integer;

        specialinvoke $r36.<java.lang.Integer: void <init>(int)>($i6);

        $r24[2] = $r36;

        $r27 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r24[3] = $r27;

        interfaceinvoke r7.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-minExclusive-valid", $r24);

        return;

     label03:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(4);

        if $r3 == null goto label04;

        $i5 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: int getIntValue(org.apache.xmlbeans.XmlObject)>($r3);

        if i1 >= $i5 goto label04;

        $r20 = newarray (java.lang.Object)[4];

        $r20[0] = "int";

        $r37 = new java.lang.Integer;

        specialinvoke $r37.<java.lang.Integer: void <init>(int)>(i1);

        $r20[1] = $r37;

        $r38 = new java.lang.Integer;

        specialinvoke $r38.<java.lang.Integer: void <init>(int)>($i5);

        $r20[2] = $r38;

        $r23 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r20[3] = $r23;

        interfaceinvoke r7.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-minInclusive-valid", $r20);

        return;

     label04:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(5);

        if $r4 == null goto label05;

        $i4 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: int getIntValue(org.apache.xmlbeans.XmlObject)>($r4);

        if i1 <= $i4 goto label05;

        $r16 = newarray (java.lang.Object)[4];

        $r16[0] = "int";

        $r39 = new java.lang.Integer;

        specialinvoke $r39.<java.lang.Integer: void <init>(int)>(i1);

        $r16[1] = $r39;

        $r40 = new java.lang.Integer;

        specialinvoke $r40.<java.lang.Integer: void <init>(int)>($i4);

        $r16[2] = $r40;

        $r19 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r16[3] = $r19;

        interfaceinvoke r7.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-maxExclusive-valid", $r16);

        return;

     label05:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(6);

        if $r5 == null goto label06;

        $i3 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: int getIntValue(org.apache.xmlbeans.XmlObject)>($r5);

        if i1 < $i3 goto label06;

        $r12 = newarray (java.lang.Object)[4];

        $r12[0] = "int";

        $r41 = new java.lang.Integer;

        specialinvoke $r41.<java.lang.Integer: void <init>(int)>(i1);

        $r12[1] = $r41;

        $r42 = new java.lang.Integer;

        specialinvoke $r42.<java.lang.Integer: void <init>(int)>($i3);

        $r12[2] = $r42;

        $r15 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r12[3] = $r15;

        interfaceinvoke r7.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-maxExclusive-valid", $r12);

        return;

     label06:
        $r6 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType[] getEnumerationValues()>();

        if $r6 == null goto label10;

        i12 = 0;

     label07:
        $i0 = lengthof $r6;

        if i12 >= $i0 goto label09;

        $r11 = $r6[i12];

        $i2 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: int getIntValue(org.apache.xmlbeans.XmlObject)>($r11);

        if i1 != $i2 goto label08;

        return;

     label08:
        i12 = i12 + 1;

        goto label07;

     label09:
        $r8 = newarray (java.lang.Object)[3];

        $r8[0] = "int";

        $r43 = new java.lang.Integer;

        specialinvoke $r43.<java.lang.Integer: void <init>(int)>(i1);

        $r8[1] = $r43;

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r8[2] = $r10;

        interfaceinvoke r7.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-enumeration-valid", $r8);

     label10:
        return;
    }

    private static int getIntValue(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r2, $r4, $r6, $r7;
        long $l3;
        java.math.BigDecimal $r3;
        int $i0, $i1, $i2, $i4, $i5;
        java.math.BigInteger $r5;
        org.apache.xmlbeans.XmlObject r0;
        org.apache.xmlbeans.SchemaType $r1;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: int getDecimalSize()>();

        lookupswitch($i0)
        {
            case 64: goto label3;
            case 1000000: goto label2;
            case 1000001: goto label1;
            default: goto label4;
        };

     label1:
        $r2 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal getBigDecimalValue()>();

        $i1 = virtualinvoke $r3.<java.math.BigDecimal: int intValue()>();

        return $i1;

     label2:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigInteger getBigIntegerValue()>();

        $i2 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        return $i2;

     label3:
        $r6 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $l3 = virtualinvoke $r6.<org.apache.xmlbeans.impl.values.XmlObjectBase: long getLongValue()>();

        $i4 = (int) $l3;

        return $i4;

     label4:
        $r7 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $i5 = virtualinvoke $r7.<org.apache.xmlbeans.impl.values.XmlObjectBase: int getIntValue()>();

        return $i5;
    }

    protected void validate_simpleval(java.lang.String, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        org.apache.xmlbeans.impl.values.JavaIntHolderEx r1;
        org.apache.xmlbeans.impl.common.ValidationContext r3;
        int $i0;
        java.lang.String r0;
        org.apache.xmlbeans.SchemaType $r2, $r4;

        r1 := @this: org.apache.xmlbeans.impl.values.JavaIntHolderEx;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xmlbeans.impl.common.ValidationContext;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, $r2, r3);

        $i0 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: int getIntValue()>();

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaIntHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntHolderEx: void validateValue(int,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>($i0, $r4, r3);

        return;
    }
}
