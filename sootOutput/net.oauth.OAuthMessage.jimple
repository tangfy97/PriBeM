public class net.oauth.OAuthMessage extends java.lang.Object
{
    public java.lang.String method;
    public java.lang.String URL;
    private final java.util.List parameters;
    private java.util.Map parameterMap;
    private boolean parametersAreComplete;
    private final java.util.List headers;
    private final java.io.InputStream bodyAsStream;
    public static final java.lang.String AUTH_SCHEME;
    public static final java.lang.String GET;
    public static final java.lang.String POST;
    public static final java.lang.String PUT;
    public static final java.lang.String DELETE;
    private static final java.util.regex.Pattern AUTHORIZATION;
    private static final java.util.regex.Pattern NVP;

    public void <init>(java.lang.String, java.lang.String, java.util.Collection)
    {
        net.oauth.OAuthMessage r0;
        java.util.Collection r3;
        java.lang.String r1, r2;

        r0 := @this: net.oauth.OAuthMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Collection;

        specialinvoke r0.<net.oauth.OAuthMessage: void <init>(java.lang.String,java.lang.String,java.util.Collection,java.io.InputStream)>(r1, r2, r3, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.util.Collection, java.io.InputStream)
    {
        java.util.ArrayList $r1, $r6, $r16;
        int $i0;
        java.lang.String r2, r3, $r13, $r15;
        net.oauth.OAuth$Parameter $r10;
        boolean $z0;
        java.util.Map$Entry r9;
        java.util.Iterator $r7;
        java.util.Collection r5;
        java.util.List $r11;
        net.oauth.OAuthMessage r0;
        java.lang.Object $r8, $r12, $r14;
        java.io.InputStream r4;

        r0 := @this: net.oauth.OAuthMessage;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.util.Collection;

        r4 := @parameter3: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.oauth.OAuthMessage: boolean parametersAreComplete> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.oauth.OAuthMessage: java.util.List headers> = $r1;

        r0.<net.oauth.OAuthMessage: java.lang.String method> = r2;

        r0.<net.oauth.OAuthMessage: java.lang.String URL> = r3;

        r0.<net.oauth.OAuthMessage: java.io.InputStream bodyAsStream> = r4;

        if r5 != null goto label1;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<net.oauth.OAuthMessage: java.util.List parameters> = $r16;

        goto label3;

     label1:
        $r6 = new java.util.ArrayList;

        $i0 = interfaceinvoke r5.<java.util.Collection: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<net.oauth.OAuthMessage: java.util.List parameters> = $r6;

        $r7 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r11 = r0.<net.oauth.OAuthMessage: java.util.List parameters>;

        $r10 = new net.oauth.OAuth$Parameter;

        $r12 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = staticinvoke <net.oauth.OAuthMessage: java.lang.String toString(java.lang.Object)>($r12);

        $r14 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = staticinvoke <net.oauth.OAuthMessage: java.lang.String toString(java.lang.Object)>($r14);

        specialinvoke $r10.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>($r13, $r15);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        return;
    }

    public java.lang.String toString()
    {
        java.util.List $r9;
        net.oauth.OAuthMessage r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r3, $r6, $r12;

        r2 := @this: net.oauth.OAuthMessage;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OAuthMessage(");

        $r3 = r2.<net.oauth.OAuthMessage: java.lang.String method>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = r2.<net.oauth.OAuthMessage: java.lang.String URL>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = r2.<net.oauth.OAuthMessage: java.util.List parameters>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private void beforeGetParameter() throws java.io.IOException
    {
        net.oauth.OAuthMessage r0;
        boolean $z0;

        r0 := @this: net.oauth.OAuthMessage;

        $z0 = r0.<net.oauth.OAuthMessage: boolean parametersAreComplete>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<net.oauth.OAuthMessage: void completeParameters()>();

        r0.<net.oauth.OAuthMessage: boolean parametersAreComplete> = 1;

     label1:
        return;
    }

    protected void completeParameters() throws java.io.IOException
    {
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        return;
    }

    public java.util.List getParameters() throws java.io.IOException
    {
        java.util.List $r1, $r2;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        specialinvoke r0.<net.oauth.OAuthMessage: void beforeGetParameter()>();

        $r1 = r0.<net.oauth.OAuthMessage: java.util.List parameters>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void addParameter(java.lang.String, java.lang.String)
    {
        net.oauth.OAuthMessage r0;
        java.lang.String r2, r3;
        net.oauth.OAuth$Parameter $r1;

        r0 := @this: net.oauth.OAuthMessage;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = new net.oauth.OAuth$Parameter;

        specialinvoke $r1.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        virtualinvoke r0.<net.oauth.OAuthMessage: void addParameter(java.util.Map$Entry)>($r1);

        return;
    }

    public void addParameter(java.util.Map$Entry)
    {
        java.util.Map$Entry r1;
        java.util.List $r2;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = r0.<net.oauth.OAuthMessage: java.util.List parameters>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        r0.<net.oauth.OAuthMessage: java.util.Map parameterMap> = null;

        return;
    }

    public void addParameters(java.util.Collection)
    {
        java.util.List $r2;
        net.oauth.OAuthMessage r0;
        java.util.Collection r1;

        r0 := @this: net.oauth.OAuthMessage;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<net.oauth.OAuthMessage: java.util.List parameters>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        r0.<net.oauth.OAuthMessage: java.util.Map parameterMap> = null;

        return;
    }

    public java.lang.String getParameter(java.lang.String) throws java.io.IOException
    {
        net.oauth.OAuthMessage r0;
        java.util.Map $r1;
        java.lang.Object $r3;
        java.lang.String r2, $r4;

        r0 := @this: net.oauth.OAuthMessage;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.util.Map getParameterMap()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getConsumerKey() throws java.io.IOException
    {
        java.lang.String $r1;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_consumer_key");

        return $r1;
    }

    public java.lang.String getToken() throws java.io.IOException
    {
        java.lang.String $r1;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_token");

        return $r1;
    }

    public java.lang.String getSignatureMethod() throws java.io.IOException
    {
        java.lang.String $r1;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_signature_method");

        return $r1;
    }

    public java.lang.String getSignature() throws java.io.IOException
    {
        java.lang.String $r1;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_signature");

        return $r1;
    }

    protected java.util.Map getParameterMap() throws java.io.IOException
    {
        java.util.List $r3;
        net.oauth.OAuthMessage r0;
        java.util.Map $r1, $r2, $r4;

        r0 := @this: net.oauth.OAuthMessage;

        specialinvoke r0.<net.oauth.OAuthMessage: void beforeGetParameter()>();

        $r1 = r0.<net.oauth.OAuthMessage: java.util.Map parameterMap>;

        if $r1 != null goto label1;

        $r3 = r0.<net.oauth.OAuthMessage: java.util.List parameters>;

        $r4 = staticinvoke <net.oauth.OAuth: java.util.Map newMap(java.lang.Iterable)>($r3);

        r0.<net.oauth.OAuthMessage: java.util.Map parameterMap> = $r4;

     label1:
        $r2 = r0.<net.oauth.OAuthMessage: java.util.Map parameterMap>;

        return $r2;
    }

    public java.lang.String getBodyType()
    {
        java.lang.String $r1;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.lang.String getHeader(java.lang.String)>("Content-Type");

        return $r1;
    }

    public java.lang.String getBodyEncoding()
    {
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        return "ISO-8859-1";
    }

    public final java.lang.String getHeader(java.lang.String)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.List $r1;
        net.oauth.OAuthMessage r0;
        java.lang.Object $r3, $r6, $r8;
        java.lang.String r5, $r7, r9;
        boolean $z0, $z1;

        r0 := @this: net.oauth.OAuthMessage;

        r5 := @parameter0: java.lang.String;

        r9 = null;

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.util.List getHeaders()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.lang.String) $r8;

     label2:
        goto label1;

     label3:
        return r9;
    }

    public final java.util.List getHeaders()
    {
        java.util.List $r1;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        $r1 = r0.<net.oauth.OAuthMessage: java.util.List headers>;

        return $r1;
    }

    public final java.lang.String readBodyAsString() throws java.io.IOException
    {
        net.oauth.OAuthMessage r0;
        java.lang.String $r2, $r3;
        java.io.InputStream $r1;

        r0 := @this: net.oauth.OAuthMessage;

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.io.InputStream getBodyAsStream()>();

        $r2 = virtualinvoke r0.<net.oauth.OAuthMessage: java.lang.String getBodyEncoding()>();

        $r3 = staticinvoke <net.oauth.OAuthMessage: java.lang.String readAll(java.io.InputStream,java.lang.String)>($r1, $r2);

        return $r3;
    }

    public java.io.InputStream getBodyAsStream() throws java.io.IOException
    {
        net.oauth.OAuthMessage r0;
        java.io.InputStream $r1;

        r0 := @this: net.oauth.OAuthMessage;

        $r1 = r0.<net.oauth.OAuthMessage: java.io.InputStream bodyAsStream>;

        return $r1;
    }

    public java.util.Map getDump() throws java.io.IOException
    {
        java.util.HashMap $r0;
        net.oauth.OAuthMessage r1;

        r1 := @this: net.oauth.OAuthMessage;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        virtualinvoke r1.<net.oauth.OAuthMessage: void dump(java.util.Map)>($r0);

        return $r0;
    }

    protected void dump(java.util.Map) throws java.io.IOException
    {
        java.util.Map r0, $r3;
        net.oauth.OAuthMessage r1;
        java.lang.String $r2;
        java.lang.Exception $r4;
        boolean $z0;

        r1 := @this: net.oauth.OAuthMessage;

        r0 := @parameter0: java.util.Map;

        $r2 = r1.<net.oauth.OAuthMessage: java.lang.String URL>;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("URL", $r2);

        $z0 = r1.<net.oauth.OAuthMessage: boolean parametersAreComplete>;

        if $z0 == 0 goto label4;

     label1:
        $r3 = virtualinvoke r1.<net.oauth.OAuthMessage: java.util.Map getParameterMap()>();

        interfaceinvoke r0.<java.util.Map: void putAll(java.util.Map)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public transient void requireParameters(java.lang.String[]) throws net.oauth.OAuthProblemException, java.io.IOException
    {
        java.util.Set $r2;
        java.lang.String[] r4;
        net.oauth.OAuthProblemException $r5;
        java.util.ArrayList $r3;
        net.oauth.OAuthMessage r0;
        java.util.Map $r1;
        int i0, i1;
        java.lang.String $r6, r7;
        boolean $z0, $z1;

        r0 := @this: net.oauth.OAuthMessage;

        r4 := @parameter0: java.lang.String[];

        $r1 = virtualinvoke r0.<net.oauth.OAuthMessage: java.util.Map getParameterMap()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r7 = r4[i1];

        $z1 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r7);

        if $z1 != 0 goto label2;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r7);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r5 = new net.oauth.OAuthProblemException;

        specialinvoke $r5.<net.oauth.OAuthProblemException: void <init>(java.lang.String)>("parameter_absent");

        $r6 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.Iterable)>($r3);

        virtualinvoke $r5.<net.oauth.OAuthProblemException: void setParameter(java.lang.String,java.lang.Object)>("oauth_parameters_absent", $r6);

        throw $r5;

     label4:
        return;
    }

    public void addRequiredParameters(net.oauth.OAuthAccessor) throws net.oauth.OAuthException, java.io.IOException, java.net.URISyntaxException
    {
        long $l0, $l1, $l2;
        java.util.Map $r2;
        java.lang.String $r11, $r15, $r17, $r18, $r19, $r20, r23;
        java.util.List $r1;
        net.oauth.OAuthAccessor r4;
        net.oauth.OAuthMessage r0;
        net.oauth.OAuthConsumer $r21;
        java.lang.Object $r3, $r5, $r6, $r7, $r16, $r22, $r24;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r14;

        r0 := @this: net.oauth.OAuthMessage;

        r4 := @parameter0: net.oauth.OAuthAccessor;

        $r1 = r0.<net.oauth.OAuthMessage: java.util.List parameters>;

        $r2 = staticinvoke <net.oauth.OAuth: java.util.Map newMap(java.lang.Iterable)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("oauth_token");

        if $r3 != null goto label1;

        $r19 = r4.<net.oauth.OAuthAccessor: java.lang.String accessToken>;

        if $r19 == null goto label1;

        $r20 = r4.<net.oauth.OAuthAccessor: java.lang.String accessToken>;

        virtualinvoke r0.<net.oauth.OAuthMessage: void addParameter(java.lang.String,java.lang.String)>("oauth_token", $r20);

     label1:
        $r21 = r4.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r22 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("oauth_consumer_key");

        if $r22 != null goto label2;

        $r17 = $r21.<net.oauth.OAuthConsumer: java.lang.String consumerKey>;

        virtualinvoke r0.<net.oauth.OAuthMessage: void addParameter(java.lang.String,java.lang.String)>("oauth_consumer_key", $r17);

     label2:
        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("oauth_signature_method");

        $r18 = (java.lang.String) $r5;

        if $r18 != null goto label4;

        $r16 = virtualinvoke $r21.<net.oauth.OAuthConsumer: java.lang.Object getProperty(java.lang.String)>("oauth_signature_method");

        r23 = (java.lang.String) $r16;

        if r23 != null goto label3;

        r23 = "HMAC-SHA1";

     label3:
        virtualinvoke r0.<net.oauth.OAuthMessage: void addParameter(java.lang.String,java.lang.String)>("oauth_signature_method", r23);

     label4:
        $r24 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("oauth_timestamp");

        if $r24 != null goto label5;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 / 1000L;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<net.oauth.OAuthMessage: void addParameter(java.lang.String,java.lang.String)>("oauth_timestamp", $r15);

     label5:
        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("oauth_nonce");

        if $r6 != null goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<net.oauth.OAuthMessage: void addParameter(java.lang.String,java.lang.String)>("oauth_nonce", $r11);

     label6:
        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("oauth_version");

        if $r7 != null goto label7;

        virtualinvoke r0.<net.oauth.OAuthMessage: void addParameter(java.lang.String,java.lang.String)>("oauth_version", "1.0");

     label7:
        virtualinvoke r0.<net.oauth.OAuthMessage: void sign(net.oauth.OAuthAccessor)>(r4);

        return;
    }

    public void sign(net.oauth.OAuthAccessor) throws java.io.IOException, net.oauth.OAuthException, java.net.URISyntaxException
    {
        net.oauth.OAuthAccessor r1;
        net.oauth.signature.OAuthSignatureMethod $r2;
        net.oauth.OAuthMessage r0;

        r0 := @this: net.oauth.OAuthMessage;

        r1 := @parameter0: net.oauth.OAuthAccessor;

        $r2 = staticinvoke <net.oauth.signature.OAuthSignatureMethod: net.oauth.signature.OAuthSignatureMethod newSigner(net.oauth.OAuthMessage,net.oauth.OAuthAccessor)>(r0, r1);

        virtualinvoke $r2.<net.oauth.signature.OAuthSignatureMethod: void sign(net.oauth.OAuthMessage)>(r0);

        return;
    }

    public net.oauth.http.HttpMessage toHttpRequest(net.oauth.client.OAuthClient$ParameterStyle) throws java.io.IOException
    {
        net.oauth.client.OAuthClient$ParameterStyle r1;
        net.oauth.http.HttpMessage $r3;
        net.oauth.OAuthMessage r0;
        net.oauth.ParameterStyle $r2;

        r0 := @this: net.oauth.OAuthMessage;

        r1 := @parameter0: net.oauth.client.OAuthClient$ParameterStyle;

        $r2 = virtualinvoke r1.<net.oauth.client.OAuthClient$ParameterStyle: net.oauth.ParameterStyle getReplacement()>();

        $r3 = staticinvoke <net.oauth.http.HttpMessage: net.oauth.http.HttpMessage newRequest(net.oauth.OAuthMessage,net.oauth.ParameterStyle)>(r0, $r2);

        return $r3;
    }

    public void validateMessage(net.oauth.OAuthAccessor, net.oauth.OAuthValidator) throws net.oauth.OAuthException, java.io.IOException, java.net.URISyntaxException
    {
        net.oauth.OAuthValidator r0;
        net.oauth.OAuthAccessor r2;
        net.oauth.OAuthMessage r1;

        r1 := @this: net.oauth.OAuthMessage;

        r2 := @parameter0: net.oauth.OAuthAccessor;

        r0 := @parameter1: net.oauth.OAuthValidator;

        interfaceinvoke r0.<net.oauth.OAuthValidator: void validateMessage(net.oauth.OAuthMessage,net.oauth.OAuthAccessor)>(r1, r2);

        return;
    }

    public java.lang.String getAuthorizationHeader(java.lang.String) throws java.io.IOException
    {
        int $i0;
        java.lang.String r1, $r6, $r8, $r14, $r15, $r18, $r19, $r22;
        boolean $z0, $z1;
        java.util.Map$Entry r12;
        java.util.Iterator $r10;
        java.util.List $r3, $r9;
        net.oauth.OAuthMessage r2;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r16, $r20, $r21, $r23;
        java.lang.Object $r11, $r13, $r17;

        r2 := @this: net.oauth.OAuthMessage;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        if r1 == null goto label1;

        $r21 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" realm=\"");

        $r22 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)>(r1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label1:
        specialinvoke r2.<net.oauth.OAuthMessage: void beforeGetParameter()>();

        $r3 = r2.<net.oauth.OAuthMessage: java.util.List parameters>;

        if $r3 == null goto label5;

        $r9 = r2.<net.oauth.OAuthMessage: java.util.List parameters>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r11;

        $r13 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = staticinvoke <net.oauth.OAuthMessage: java.lang.String toString(java.lang.Object)>($r13);

        $z1 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("oauth_");

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)>($r14);

        $r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r17 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = staticinvoke <net.oauth.OAuthMessage: java.lang.String toString(java.lang.Object)>($r17);

        $r19 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)>($r18);

        $r20 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label4:
        goto label2;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OAuth");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String readAll(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        java.io.InputStreamReader $r2;
        int $i0;
        char[] r4;
        java.lang.StringBuilder $r1;
        java.lang.String r3, $r5;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r0, r3);

        r4 = newarray (char)[512];

     label2:
        $i0 = virtualinvoke $r2.<java.io.Reader: int read(char[])>(r4);

        if 0 >= $i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r4, 0, $i0);

        goto label2;

     label3:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        virtualinvoke r0.<java.io.InputStream: void close()>();

        return $r5;

     label5:
        $r6 := @caughtexception;

     label6:
        virtualinvoke r0.<java.io.InputStream: void close()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static java.util.List decodeAuthorization(java.lang.String)
    {
        java.lang.String[] $r7;
        java.util.ArrayList $r0;
        java.util.regex.Matcher $r3, $r10;
        int i0, i1;
        java.lang.String r1, $r4, $r5, $r6, r8, $r11, $r12, $r13, $r14;
        net.oauth.OAuth$Parameter $r15;
        boolean $z0, $z1, $z2;
        java.util.regex.Pattern $r2, $r9;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        if r1 == null goto label3;

        $r2 = <net.oauth.OAuthMessage: java.util.regex.Pattern AUTHORIZATION>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label3;

        $r4 = "OAuth";

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s*,\\s*");

        i0 = lengthof $r7;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r8 = $r7[i1];

        $r9 = <net.oauth.OAuthMessage: java.util.regex.Pattern NVP>;

        $r10 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r8);

        $z2 = virtualinvoke $r10.<java.util.regex.Matcher: boolean matches()>();

        if $z2 == 0 goto label2;

        $r11 = virtualinvoke $r10.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r12 = staticinvoke <net.oauth.OAuth: java.lang.String decodePercent(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r14 = staticinvoke <net.oauth.OAuth: java.lang.String decodePercent(java.lang.String)>($r13);

        $r15 = new net.oauth.OAuth$Parameter;

        specialinvoke $r15.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>($r12, $r14);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r15);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    private static final java.lang.String toString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r1;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        <net.oauth.OAuthMessage: java.lang.String DELETE> = "DELETE";

        <net.oauth.OAuthMessage: java.lang.String PUT> = "PUT";

        <net.oauth.OAuthMessage: java.lang.String POST> = "POST";

        <net.oauth.OAuthMessage: java.lang.String GET> = "GET";

        <net.oauth.OAuthMessage: java.lang.String AUTH_SCHEME> = "OAuth";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*(\\w*)\\s+(.*)");

        <net.oauth.OAuthMessage: java.util.regex.Pattern AUTHORIZATION> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S*)\\s*\\=\\s*\"([^\"]*)\"");

        <net.oauth.OAuthMessage: java.util.regex.Pattern NVP> = $r1;

        return;
    }
}
