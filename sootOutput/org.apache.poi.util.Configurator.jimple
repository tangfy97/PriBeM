public class org.apache.poi.util.Configurator extends java.lang.Object
{
    private static org.apache.poi.util.POILogger logger;

    public void <init>()
    {
        org.apache.poi.util.Configurator r0;

        r0 := @this: org.apache.poi.util.Configurator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getIntValue(java.lang.String, int)
    {
        org.apache.poi.util.POILogger $r5;
        java.lang.Integer $r2;
        java.lang.Exception $r3;
        int i0, i1;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.lang.String r0, $r1, $r10;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = i0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r5 = <org.apache.poi.util.Configurator: org.apache.poi.util.POILogger logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System property -D");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" do not contains a valid integer ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r10);

     label4:
        return i1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/util/Configurator;");

        <org.apache.poi.util.Configurator: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
