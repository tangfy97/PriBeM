public abstract class org.eclipse.jetty.server.handler.AbstractHandlerContainer extends org.eclipse.jetty.server.handler.AbstractHandler implements org.eclipse.jetty.server.HandlerContainer
{

    public void <init>()
    {
        org.eclipse.jetty.server.handler.AbstractHandlerContainer r0;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandlerContainer;

        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandler: void <init>()>();

        return;
    }

    public org.eclipse.jetty.server.Handler[] getChildHandlers()
    {
        org.eclipse.jetty.server.handler.AbstractHandlerContainer r0;
        java.lang.Object $r1, $r2;
        org.eclipse.jetty.server.Handler[] $r3, $r4;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandlerContainer;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: java.lang.Object expandChildren(java.lang.Object,java.lang.Class)>(null, null);

        $r2 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r1, class "Lorg/eclipse/jetty/server/Handler;");

        $r3 = (org.eclipse.jetty.server.Handler[]) $r2;

        $r4 = (org.eclipse.jetty.server.Handler[]) $r3;

        return $r4;
    }

    public org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class)
    {
        org.eclipse.jetty.server.handler.AbstractHandlerContainer r0;
        java.lang.Class r1;
        java.lang.Object $r2, $r3;
        org.eclipse.jetty.server.Handler[] $r4, $r5;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandlerContainer;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: java.lang.Object expandChildren(java.lang.Object,java.lang.Class)>(null, r1);

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r2, r1);

        $r4 = (org.eclipse.jetty.server.Handler[]) $r3;

        $r5 = (org.eclipse.jetty.server.Handler[]) $r4;

        return $r5;
    }

    public org.eclipse.jetty.server.Handler getChildHandlerByClass(java.lang.Class)
    {
        org.eclipse.jetty.server.Handler $r4;
        org.eclipse.jetty.server.handler.AbstractHandlerContainer r0;
        java.lang.Class r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandlerContainer;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: java.lang.Object expandChildren(java.lang.Object,java.lang.Class)>(null, r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r2, 0);

        $r4 = (org.eclipse.jetty.server.Handler) $r3;

        return $r4;
    }

    protected java.lang.Object expandChildren(java.lang.Object, java.lang.Class)
    {
        org.eclipse.jetty.server.handler.AbstractHandlerContainer r1;
        java.lang.Object r0;
        java.lang.Class r2;

        r1 := @this: org.eclipse.jetty.server.handler.AbstractHandlerContainer;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        return r0;
    }

    protected java.lang.Object expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)
    {
        org.eclipse.jetty.server.Handler r0;
        org.eclipse.jetty.server.handler.AbstractHandlerContainer $r3, r5;
        org.eclipse.jetty.server.Handler[] $r7;
        java.lang.Class r1, $r4;
        java.lang.Object r6;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.server.HandlerContainer r2;

        r5 := @this: org.eclipse.jetty.server.handler.AbstractHandlerContainer;

        r0 := @parameter0: org.eclipse.jetty.server.Handler;

        r6 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Class;

        if r0 != null goto label1;

        return r6;

     label1:
        if r1 == null goto label2;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z1 == 0 goto label3;

     label2:
        r6 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r6, r0);

     label3:
        $z2 = r0 instanceof org.eclipse.jetty.server.handler.AbstractHandlerContainer;

        if $z2 == 0 goto label4;

        $r3 = (org.eclipse.jetty.server.handler.AbstractHandlerContainer) r0;

        r6 = virtualinvoke $r3.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: java.lang.Object expandChildren(java.lang.Object,java.lang.Class)>(r6, r1);

        goto label7;

     label4:
        $z0 = r0 instanceof org.eclipse.jetty.server.HandlerContainer;

        if $z0 == 0 goto label7;

        r2 = (org.eclipse.jetty.server.HandlerContainer) r0;

        if r1 != null goto label5;

        $r7 = interfaceinvoke r2.<org.eclipse.jetty.server.HandlerContainer: org.eclipse.jetty.server.Handler[] getChildHandlers()>();

        goto label6;

     label5:
        $r7 = interfaceinvoke r2.<org.eclipse.jetty.server.HandlerContainer: org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class)>(r1);

     label6:
        r6 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object addArray(java.lang.Object,java.lang.Object[])>(r6, $r7);

     label7:
        return r6;
    }

    public static org.eclipse.jetty.server.HandlerContainer findContainerOf(org.eclipse.jetty.server.HandlerContainer, java.lang.Class, org.eclipse.jetty.server.Handler)
    {
        org.eclipse.jetty.server.Handler r1, r4, r8;
        org.eclipse.jetty.server.Handler[] $r3, $r7;
        int i0, i1, i2, i3;
        java.lang.Class r2, $r6;
        org.eclipse.jetty.server.HandlerContainer r0, r5;

        r0 := @parameter0: org.eclipse.jetty.server.HandlerContainer;

        r2 := @parameter1: java.lang.Class;

        r1 := @parameter2: org.eclipse.jetty.server.Handler;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r3 = interfaceinvoke r0.<org.eclipse.jetty.server.HandlerContainer: org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class)>(r2);

        if $r3 == null goto label7;

        i0 = lengthof $r3;

        i2 = 0;

     label3:
        if i2 >= i0 goto label7;

        r4 = $r3[i2];

        r5 = (org.eclipse.jetty.server.HandlerContainer) r4;

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = interfaceinvoke r5.<org.eclipse.jetty.server.HandlerContainer: org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class)>($r6);

        if $r7 == null goto label6;

        i1 = lengthof $r7;

        i3 = 0;

     label4:
        if i3 >= i1 goto label6;

        r8 = $r7[i3];

        if r8 != r1 goto label5;

        return r5;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        i2 = i2 + 1;

        goto label3;

     label7:
        return null;
    }

    public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException
    {
        java.util.List $r6;
        java.lang.Appendable r1;
        java.util.Collection $r4;
        java.util.Collection[] $r3;
        org.eclipse.jetty.server.handler.AbstractHandlerContainer r0;
        java.lang.String r2;
        org.eclipse.jetty.server.Handler[] $r5;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandlerContainer;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void dumpThis(java.lang.Appendable)>(r1);

        $r3 = newarray (java.util.Collection)[2];

        $r4 = virtualinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: java.util.Collection getBeans()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: org.eclipse.jetty.server.Handler[] getHandlers()>();

        $r6 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r5);

        $r3[1] = $r6;

        staticinvoke <org.eclipse.jetty.server.handler.AbstractHandlerContainer: void dump(java.lang.Appendable,java.lang.String,java.util.Collection[])>(r1, r2, $r3);

        return;
    }
}
