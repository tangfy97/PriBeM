public final class org.apache.poi.openxml4j.opc.internal.ZipHelper extends java.lang.Object
{
    private static final java.lang.String FORWARD_SLASH;
    public static final int READ_WRITE_FILE_BUFFER_SIZE;

    private void <init>()
    {
        org.apache.poi.openxml4j.opc.internal.ZipHelper r0;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.ZipHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.zip.ZipEntry getCorePropertiesZipEntry(org.apache.poi.openxml4j.opc.ZipPackage)
    {
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r1;
        java.net.URI $r4;
        java.lang.String $r5;
        org.apache.poi.openxml4j.opc.ZipPackage r0;
        org.apache.poi.openxml4j.opc.PackageRelationship $r2;
        java.util.zip.ZipEntry $r3;

        r0 := @parameter0: org.apache.poi.openxml4j.opc.ZipPackage;

        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.ZipPackage: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>("http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties");

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(int)>(0);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new java.util.zip.ZipEntry;

        $r4 = virtualinvoke $r2.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r5 = virtualinvoke $r4.<java.net.URI: java.lang.String getPath()>();

        specialinvoke $r3.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r5);

        return $r3;
    }

    public static java.util.zip.ZipEntry getContentTypeZipEntry(org.apache.poi.openxml4j.opc.ZipPackage)
    {
        java.util.Enumeration $r2;
        org.apache.poi.openxml4j.util.ZipEntrySource $r1;
        java.lang.Object $r3;
        java.lang.String $r5;
        org.apache.poi.openxml4j.opc.ZipPackage r0;
        java.util.zip.ZipEntry r4;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.openxml4j.opc.ZipPackage;

        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.ZipPackage: org.apache.poi.openxml4j.util.ZipEntrySource getZipArchive()>();

        $r2 = interfaceinvoke $r1.<org.apache.poi.openxml4j.util.ZipEntrySource: java.util.Enumeration getEntries()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.util.zip.ZipEntry) $r3;

        $r5 = virtualinvoke r4.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("[Content_Types].xml");

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public static java.lang.String getOPCNameFromZipItemName(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String r0, $r4;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("zipItemName");

        throw $r5;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String getZipItemNameFromOPCName(java.lang.String)
    {
        java.lang.String r0, r2;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("opcItemName");

        throw $r1;

     label1:
        r2 = r0;

     label2:
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label3;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

        goto label2;

     label3:
        return r2;
    }

    public static java.net.URI getZipURIFromOPCName(java.lang.String)
    {
        java.net.URISyntaxException $r3;
        java.lang.String r0, r4;
        java.net.URI $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("opcItemName");

        throw $r2;

     label1:
        r4 = r0;

     label2:
        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label3;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(1);

        goto label2;

     label3:
        $r1 = new java.net.URI;

        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>(r4);

     label4:
        return $r1;

     label5:
        $r3 := @caughtexception;

        return null;

        catch java.net.URISyntaxException from label3 to label4 with label5;
    }

    public static java.util.zip.ZipFile openZipFile(java.io.File) throws java.io.IOException
    {
        java.util.zip.ZipFile $r1;
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = new java.util.zip.ZipFile;

        specialinvoke $r1.<java.util.zip.ZipFile: void <init>(java.io.File)>(r0);

        return $r1;
    }

    public static java.util.zip.ZipFile openZipFile(java.lang.String) throws java.io.IOException
    {
        java.util.zip.ZipFile $r2;
        java.lang.String r1;
        java.io.File $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.zip.ZipFile;

        specialinvoke $r2.<java.util.zip.ZipFile: void <init>(java.io.File)>($r0);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.poi.openxml4j.opc.internal.ZipHelper: int READ_WRITE_FILE_BUFFER_SIZE> = 8192;

        <org.apache.poi.openxml4j.opc.internal.ZipHelper: java.lang.String FORWARD_SLASH> = "/";

        return;
    }
}
