public final class com.ctc.wstx.api.ReaderConfig extends com.ctc.wstx.api.CommonConfig implements com.ctc.wstx.cfg.InputConfigFlags
{
    static final int PROP_COALESCE_TEXT;
    static final int PROP_NAMESPACE_AWARE;
    static final int PROP_REPLACE_ENTITY_REFS;
    static final int PROP_SUPPORT_EXTERNAL_ENTITIES;
    static final int PROP_VALIDATE_AGAINST_DTD;
    static final int PROP_SUPPORT_DTD;
    public static final int PROP_EVENT_ALLOCATOR;
    static final int PROP_WARNING_REPORTER;
    static final int PROP_XML_RESOLVER;
    static final int PROP_INTERN_NS_URIS;
    static final int PROP_INTERN_NAMES;
    static final int PROP_REPORT_CDATA;
    static final int PROP_REPORT_PROLOG_WS;
    static final int PROP_PRESERVE_LOCATION;
    static final int PROP_AUTO_CLOSE_INPUT;
    static final int PROP_SUPPORT_XMLID;
    static final int PROP_NORMALIZE_LFS;
    static final int PROP_NORMALIZE_ATTR_VALUES;
    static final int PROP_CACHE_DTDS;
    static final int PROP_CACHE_DTDS_BY_PUBLIC_ID;
    static final int PROP_LAZY_PARSING;
    static final int PROP_SUPPORT_DTDPP;
    static final int PROP_INPUT_BUFFER_LENGTH;
    static final int PROP_MIN_TEXT_SEGMENT;
    static final int PROP_CUSTOM_INTERNAL_ENTITIES;
    static final int PROP_DTD_RESOLVER;
    static final int PROP_ENTITY_RESOLVER;
    static final int PROP_UNDECLARED_ENTITY_RESOLVER;
    static final int PROP_BASE_URL;
    static final int PROP_INPUT_PARSING_MODE;
    static final int MIN_INPUT_BUFFER_LENGTH;
    static final int DTD_CACHE_SIZE_J2SE;
    static final int DTD_CACHE_SIZE_J2ME;
    static final int DEFAULT_SHORTEST_TEXT_SEGMENT;
    static final int DEFAULT_FLAGS_FULL;
    static final int DEFAULT_FLAGS_J2ME;
    static final java.util.HashMap sProperties;
    final boolean mIsJ2MESubset;
    final com.ctc.wstx.util.SymbolTable mSymbols;
    int mConfigFlags;
    int mInputBufferLen;
    int mMinTextSegmentLen;
    java.net.URL mBaseURL;
    com.ctc.wstx.api.WstxInputProperties$ParsingMode mParsingMode;
    boolean mXml11;
    javax.xml.stream.XMLReporter mReporter;
    javax.xml.stream.XMLResolver mDtdResolver;
    javax.xml.stream.XMLResolver mEntityResolver;
    java.lang.Object[] mSpecialProperties;
    private static final int SPEC_PROC_COUNT;
    private static final int SP_IX_CUSTOM_ENTITIES;
    private static final int SP_IX_UNDECL_ENT_RESOLVER;
    private static final int SP_IX_DTD_EVENT_LISTENER;
    static final java.lang.ThreadLocal mRecyclerRef;
    com.ctc.wstx.io.BufferRecycler mCurrRecycler;
    static int Counter;

    private void <init>(boolean, com.ctc.wstx.util.SymbolTable, int, int, int)
    {
        java.lang.ThreadLocal $r3;
        com.ctc.wstx.api.ReaderConfig r0;
        com.ctc.wstx.api.WstxInputProperties$ParsingMode $r1;
        com.ctc.wstx.io.BufferRecycler $r7;
        com.ctc.wstx.util.SymbolTable r2;
        int i0, i1, i2;
        java.lang.Object $r4, $r6;
        java.lang.ref.SoftReference r5;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        r2 := @parameter1: com.ctc.wstx.util.SymbolTable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<com.ctc.wstx.api.CommonConfig: void <init>()>();

        r0.<com.ctc.wstx.api.ReaderConfig: java.net.URL mBaseURL> = null;

        $r1 = <com.ctc.wstx.api.WstxInputProperties: com.ctc.wstx.api.WstxInputProperties$ParsingMode PARSING_MODE_DOCUMENT>;

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.WstxInputProperties$ParsingMode mParsingMode> = $r1;

        r0.<com.ctc.wstx.api.ReaderConfig: boolean mXml11> = 0;

        r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mDtdResolver> = null;

        r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mEntityResolver> = null;

        r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties> = null;

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = null;

        r0.<com.ctc.wstx.api.ReaderConfig: boolean mIsJ2MESubset> = z0;

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.util.SymbolTable mSymbols> = r2;

        r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags> = i0;

        r0.<com.ctc.wstx.api.ReaderConfig: int mInputBufferLen> = i1;

        r0.<com.ctc.wstx.api.ReaderConfig: int mMinTextSegmentLen> = i2;

        $r3 = <com.ctc.wstx.api.ReaderConfig: java.lang.ThreadLocal mRecyclerRef>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (java.lang.ref.SoftReference) $r4;

        if r5 == null goto label1;

        $r6 = virtualinvoke r5.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r7 = (com.ctc.wstx.io.BufferRecycler) $r6;

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r7;

     label1:
        return;
    }

    public static com.ctc.wstx.api.ReaderConfig createJ2MEDefaults()
    {
        com.ctc.wstx.api.ReaderConfig $r0;

        $r0 = new com.ctc.wstx.api.ReaderConfig;

        specialinvoke $r0.<com.ctc.wstx.api.ReaderConfig: void <init>(boolean,com.ctc.wstx.util.SymbolTable,int,int,int)>(1, null, 2977567, 2000, 64);

        return $r0;
    }

    public static com.ctc.wstx.api.ReaderConfig createFullDefaults()
    {
        com.ctc.wstx.api.ReaderConfig $r0;

        $r0 = new com.ctc.wstx.api.ReaderConfig;

        specialinvoke $r0.<com.ctc.wstx.api.ReaderConfig: void <init>(boolean,com.ctc.wstx.util.SymbolTable,int,int,int)>(0, null, 2977567, 4000, 64);

        return $r0;
    }

    public com.ctc.wstx.api.ReaderConfig createNonShared(com.ctc.wstx.util.SymbolTable)
    {
        java.lang.Object[] $r8, $r9, r10, $r11;
        java.net.URL $r6;
        com.ctc.wstx.api.ReaderConfig $r0, r1;
        com.ctc.wstx.api.WstxInputProperties$ParsingMode $r7;
        int $i0, $i1, $i2, i3;
        javax.xml.stream.XMLResolver $r4, $r5;
        javax.xml.stream.XMLReporter $r3;
        boolean $z0;
        com.ctc.wstx.util.SymbolTable r2;

        r1 := @this: com.ctc.wstx.api.ReaderConfig;

        r2 := @parameter0: com.ctc.wstx.util.SymbolTable;

        $r0 = new com.ctc.wstx.api.ReaderConfig;

        $z0 = r1.<com.ctc.wstx.api.ReaderConfig: boolean mIsJ2MESubset>;

        $i2 = r1.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags>;

        $i1 = r1.<com.ctc.wstx.api.ReaderConfig: int mInputBufferLen>;

        $i0 = r1.<com.ctc.wstx.api.ReaderConfig: int mMinTextSegmentLen>;

        specialinvoke $r0.<com.ctc.wstx.api.ReaderConfig: void <init>(boolean,com.ctc.wstx.util.SymbolTable,int,int,int)>($z0, r2, $i2, $i1, $i0);

        $r3 = r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter mReporter>;

        $r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter mReporter> = $r3;

        $r4 = r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mDtdResolver>;

        $r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mDtdResolver> = $r4;

        $r5 = r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mEntityResolver>;

        $r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mEntityResolver> = $r5;

        $r6 = r1.<com.ctc.wstx.api.ReaderConfig: java.net.URL mBaseURL>;

        $r0.<com.ctc.wstx.api.ReaderConfig: java.net.URL mBaseURL> = $r6;

        $r7 = r1.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.WstxInputProperties$ParsingMode mParsingMode>;

        $r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.WstxInputProperties$ParsingMode mParsingMode> = $r7;

        $r8 = r1.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties>;

        if $r8 == null goto label1;

        $r9 = r1.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties>;

        i3 = lengthof $r9;

        r10 = newarray (java.lang.Object)[i3];

        $r11 = r1.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r10, 0, i3);

        $r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties> = r10;

     label1:
        return $r0;
    }

    public void resetState()
    {
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r0.<com.ctc.wstx.api.ReaderConfig: boolean mXml11> = 0;

        return;
    }

    protected int findPropertyId(java.lang.String)
    {
        int $i0, $i2;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String r0;
        java.lang.Integer r3;
        com.ctc.wstx.api.ReaderConfig r4;

        r4 := @this: com.ctc.wstx.api.ReaderConfig;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Integer) $r2;

        if r3 != null goto label1;

        $i2 = (int) -1;

        $i0 = $i2;

        goto label2;

     label1:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;
    }

    public com.ctc.wstx.util.SymbolTable getSymbols()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        com.ctc.wstx.util.SymbolTable $r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.util.SymbolTable mSymbols>;

        return $r1;
    }

    public int getDtdCacheSize()
    {
        byte $b0;
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = r0.<com.ctc.wstx.api.ReaderConfig: boolean mIsJ2MESubset>;

        if $z0 == 0 goto label1;

        $b0 = 5;

        goto label2;

     label1:
        $b0 = 12;

     label2:
        return $b0;
    }

    public int getConfigFlags()
    {
        int $i0;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $i0 = r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags>;

        return $i0;
    }

    public boolean hasConfigFlags(int)
    {
        int i0, $i1, $i2;
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        $i1 = r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags>;

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean willCoalesceText()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(2);

        return $z0;
    }

    public boolean willSupportNamespaces()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(1);

        return $z0;
    }

    public boolean willReplaceEntityRefs()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(4);

        return $z0;
    }

    public boolean willSupportExternalEntities()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(8);

        return $z0;
    }

    public boolean willSupportDTDs()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(16);

        return $z0;
    }

    public boolean willValidateWithDTD()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(32);

        return $z0;
    }

    public boolean willNormalizeLFs()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(8192);

        return $z0;
    }

    public boolean willNormalizeAttrValues()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(16384);

        return $z0;
    }

    public boolean willInternNames()
    {
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        return 1;
    }

    public boolean willInternNsURIs()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(1024);

        return $z0;
    }

    public boolean willReportCData()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(512);

        return $z0;
    }

    public boolean willReportPrologWhitespace()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(256);

        return $z0;
    }

    public boolean willCacheDTDs()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(65536);

        return $z0;
    }

    public boolean willCacheDTDsByPublicId()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(131072);

        return $z0;
    }

    public boolean willParseLazily()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(262144);

        return $z0;
    }

    public boolean willDoXmlIdTyping()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(2097152);

        return $z0;
    }

    public boolean willDoXmlIdUniqChecks()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(4194304);

        return $z0;
    }

    public boolean willPreserveLocation()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(2048);

        return $z0;
    }

    public boolean willAutoCloseInput()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(4096);

        return $z0;
    }

    public boolean willSupportDTDPP()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(524288);

        return $z0;
    }

    public int getInputBufferLength()
    {
        int $i0;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $i0 = r0.<com.ctc.wstx.api.ReaderConfig: int mInputBufferLen>;

        return $i0;
    }

    public int getShortestReportedTextSegment()
    {
        int $i0;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $i0 = r0.<com.ctc.wstx.api.ReaderConfig: int mMinTextSegmentLen>;

        return $i0;
    }

    public java.util.Map getCustomInternalEntities()
    {
        java.util.HashMap $r3;
        com.ctc.wstx.api.ReaderConfig r0;
        com.ctc.wstx.ent.EntityDecl $r10;
        com.ctc.wstx.compat.JdkImpl $r11;
        java.util.Map r2, $r12;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r1, $r6, $r8, $r9;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object getSpecialProperty(int)>(0);

        r2 = (java.util.Map) $r1;

        if r2 != null goto label1;

        $r11 = staticinvoke <com.ctc.wstx.compat.JdkFeatures: com.ctc.wstx.compat.JdkImpl getInstance()>();

        $r12 = virtualinvoke $r11.<com.ctc.wstx.compat.JdkImpl: java.util.Map getEmptyMap()>();

        return $r12;

     label1:
        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        $r3 = new java.util.HashMap;

        $i1 = $i0 >> 2;

        $i2 = $i0 + $i1;

        specialinvoke $r3.<java.util.HashMap: void <init>(int,float)>($i2, 0.81F);

        $r4 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (com.ctc.wstx.ent.EntityDecl) $r9;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r10);

        goto label2;

     label3:
        return $r3;
    }

    public javax.xml.stream.XMLReporter getXMLReporter()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLReporter $r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter mReporter>;

        return $r1;
    }

    public javax.xml.stream.XMLResolver getXMLResolver()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLResolver $r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mEntityResolver>;

        return $r1;
    }

    public javax.xml.stream.XMLResolver getDtdResolver()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLResolver $r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mDtdResolver>;

        return $r1;
    }

    public javax.xml.stream.XMLResolver getEntityResolver()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLResolver $r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mEntityResolver>;

        return $r1;
    }

    public javax.xml.stream.XMLResolver getUndeclaredEntityResolver()
    {
        java.lang.Object $r1;
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLResolver $r2;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object getSpecialProperty(int)>(1);

        $r2 = (javax.xml.stream.XMLResolver) $r1;

        return $r2;
    }

    public java.net.URL getBaseURL()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        java.net.URL $r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: java.net.URL mBaseURL>;

        return $r1;
    }

    public com.ctc.wstx.api.WstxInputProperties$ParsingMode getInputParsingMode()
    {
        com.ctc.wstx.api.WstxInputProperties$ParsingMode $r1;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.WstxInputProperties$ParsingMode mParsingMode>;

        return $r1;
    }

    public boolean inputParsingModeDocuments()
    {
        com.ctc.wstx.api.WstxInputProperties$ParsingMode $r1, $r2;
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r2 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.WstxInputProperties$ParsingMode mParsingMode>;

        $r1 = <com.ctc.wstx.api.WstxInputProperties: com.ctc.wstx.api.WstxInputProperties$ParsingMode PARSING_MODE_DOCUMENTS>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean inputParsingModeFragment()
    {
        com.ctc.wstx.api.WstxInputProperties$ParsingMode $r1, $r2;
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r2 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.WstxInputProperties$ParsingMode mParsingMode>;

        $r1 = <com.ctc.wstx.api.WstxInputProperties: com.ctc.wstx.api.WstxInputProperties$ParsingMode PARSING_MODE_FRAGMENT>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isXml11()
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $z0 = r0.<com.ctc.wstx.api.ReaderConfig: boolean mXml11>;

        return $z0;
    }

    public com.ctc.wstx.dtd.DTDEventListener getDTDEventListener()
    {
        java.lang.Object $r1;
        com.ctc.wstx.api.ReaderConfig r0;
        com.ctc.wstx.dtd.DTDEventListener $r2;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        $r1 = specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object getSpecialProperty(int)>(2);

        $r2 = (com.ctc.wstx.dtd.DTDEventListener) $r1;

        return $r2;
    }

    public void setConfigFlags(int)
    {
        int i0;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags> = i0;

        return;
    }

    public void setConfigFlag(int)
    {
        int i0, $i1, $i2;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        $i1 = r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags>;

        $i2 = $i1 | i0;

        r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags> = $i2;

        return;
    }

    public void clearConfigFlag(int)
    {
        int i0, $i1, $i2, $i3, $i5;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        $i2 = r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags>;

        $i5 = (int) -1;

        $i1 = i0 ^ $i5;

        $i3 = $i2 & $i1;

        r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags> = $i3;

        return;
    }

    public void doCoalesceText(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(2, z0);

        return;
    }

    public void doSupportNamespaces(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(1, z0);

        return;
    }

    public void doReplaceEntityRefs(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(4, z0);

        return;
    }

    public void doSupportExternalEntities(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(8, z0);

        return;
    }

    public void doSupportDTDs(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(16, z0);

        return;
    }

    public void doValidateWithDTD(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(32, z0);

        return;
    }

    public void doNormalizeLFs(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(8192, z0);

        return;
    }

    public void doNormalizeAttrValues(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(16384, z0);

        return;
    }

    public void doInternNames(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        return;
    }

    public void doInternNsURIs(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(1024, z0);

        return;
    }

    public void doReportPrologWhitespace(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(256, z0);

        return;
    }

    public void doReportCData(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(512, z0);

        return;
    }

    public void doCacheDTDs(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(65536, z0);

        return;
    }

    public void doCacheDTDsByPublicId(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(131072, z0);

        return;
    }

    public void doParseLazily(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(262144, z0);

        return;
    }

    public void doXmlIdTyping(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(2097152, z0);

        return;
    }

    public void doXmlIdUniqChecks(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(4194304, z0);

        return;
    }

    public void doPreserveLocation(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(2048, z0);

        return;
    }

    public void doAutoCloseInput(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(4096, z0);

        return;
    }

    public void doSupportDTDPP(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(524288, z0);

        return;
    }

    public void setInputBufferLength(int)
    {
        int i0;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        if i0 >= 8 goto label1;

        i0 = 8;

     label1:
        r0.<com.ctc.wstx.api.ReaderConfig: int mInputBufferLen> = i0;

        return;
    }

    public void setShortestReportedTextSegment(int)
    {
        int i0;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        r0.<com.ctc.wstx.api.ReaderConfig: int mMinTextSegmentLen> = i0;

        return;
    }

    public void setCustomInternalEntities(java.util.Map)
    {
        com.ctc.wstx.ent.IntEntity $r14;
        java.util.HashMap $r3;
        com.ctc.wstx.api.ReaderConfig r2;
        com.ctc.wstx.compat.JdkImpl $r1;
        java.util.Map r0, r10;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r9, $r13;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        char[] r11;
        java.lang.Object $r6, $r8, $r12;

        r2 := @this: com.ctc.wstx.api.ReaderConfig;

        r0 := @parameter0: java.util.Map;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        if $i0 >= 1 goto label2;

     label1:
        $r1 = staticinvoke <com.ctc.wstx.compat.JdkFeatures: com.ctc.wstx.compat.JdkImpl getInstance()>();

        r10 = virtualinvoke $r1.<com.ctc.wstx.compat.JdkImpl: java.util.Map getEmptyMap()>();

        goto label7;

     label2:
        $i1 = interfaceinvoke r0.<java.util.Map: int size()>();

        $r3 = new java.util.HashMap;

        $i2 = $i1 >> 1;

        $i3 = $i1 + $i2;

        specialinvoke $r3.<java.util.HashMap: void <init>(int,float)>($i3, 0.75F);

        r10 = $r3;

        $r4 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r8 != null goto label4;

        r11 = staticinvoke <com.ctc.wstx.util.EmptyIterator: char[] getEmptyCharArray()>();

        goto label6;

     label4:
        $z1 = $r8 instanceof char[];

        if $z1 == 0 goto label5;

        r11 = (char[]) $r8;

        goto label6;

     label5:
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        r11 = virtualinvoke $r9.<java.lang.String: char[] toCharArray()>();

     label6:
        $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        $r14 = staticinvoke <com.ctc.wstx.ent.IntEntity: com.ctc.wstx.ent.IntEntity create(java.lang.String,char[])>($r13, r11);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        goto label3;

     label7:
        specialinvoke r2.<com.ctc.wstx.api.ReaderConfig: void setSpecialProperty(int,java.lang.Object)>(0, r10);

        return;
    }

    public void setXMLReporter(javax.xml.stream.XMLReporter)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLReporter r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter0: javax.xml.stream.XMLReporter;

        r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter mReporter> = r1;

        return;
    }

    public void setXMLResolver(javax.xml.stream.XMLResolver)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLResolver r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter0: javax.xml.stream.XMLResolver;

        r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mEntityResolver> = r1;

        r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mDtdResolver> = r1;

        return;
    }

    public void setDtdResolver(javax.xml.stream.XMLResolver)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLResolver r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter0: javax.xml.stream.XMLResolver;

        r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mDtdResolver> = r1;

        return;
    }

    public void setEntityResolver(javax.xml.stream.XMLResolver)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLResolver r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter0: javax.xml.stream.XMLResolver;

        r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver mEntityResolver> = r1;

        return;
    }

    public void setUndeclaredEntityResolver(javax.xml.stream.XMLResolver)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        javax.xml.stream.XMLResolver r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter0: javax.xml.stream.XMLResolver;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setSpecialProperty(int,java.lang.Object)>(1, r1);

        return;
    }

    public void setBaseURL(java.net.URL)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        java.net.URL r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter0: java.net.URL;

        r0.<com.ctc.wstx.api.ReaderConfig: java.net.URL mBaseURL> = r1;

        return;
    }

    public void setInputParsingMode(com.ctc.wstx.api.WstxInputProperties$ParsingMode)
    {
        com.ctc.wstx.api.WstxInputProperties$ParsingMode r1;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter0: com.ctc.wstx.api.WstxInputProperties$ParsingMode;

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.WstxInputProperties$ParsingMode mParsingMode> = r1;

        return;
    }

    public void enableXml11(boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter0: boolean;

        r0.<com.ctc.wstx.api.ReaderConfig: boolean mXml11> = z0;

        return;
    }

    public void setDTDEventListener(com.ctc.wstx.dtd.DTDEventListener)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        com.ctc.wstx.dtd.DTDEventListener r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter0: com.ctc.wstx.dtd.DTDEventListener;

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setSpecialProperty(int,java.lang.Object)>(2, r1);

        return;
    }

    public void configureForXmlConformance()
    {
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doSupportNamespaces(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doSupportDTDs(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doSupportExternalEntities(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReplaceEntityRefs(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doXmlIdTyping(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doXmlIdUniqChecks(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doNormalizeLFs(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doNormalizeAttrValues(boolean)>(1);

        return;
    }

    public void configureForConvenience()
    {
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCoalesceText(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReplaceEntityRefs(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReportCData(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReportPrologWhitespace(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doPreserveLocation(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doParseLazily(boolean)>(0);

        return;
    }

    public void configureForSpeed()
    {
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCoalesceText(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doPreserveLocation(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReportPrologWhitespace(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doInternNsURIs(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doXmlIdUniqChecks(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doNormalizeLFs(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doNormalizeAttrValues(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCacheDTDs(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doParseLazily(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setShortestReportedTextSegment(int)>(16);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setInputBufferLength(int)>(8000);

        return;
    }

    public void configureForLowMemUsage()
    {
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCoalesceText(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doPreserveLocation(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCacheDTDs(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doParseLazily(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doXmlIdUniqChecks(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setShortestReportedTextSegment(int)>(64);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setInputBufferLength(int)>(512);

        return;
    }

    public void configureForRoundTripping()
    {
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCoalesceText(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReplaceEntityRefs(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReportCData(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReportPrologWhitespace(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doNormalizeLFs(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doNormalizeAttrValues(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setShortestReportedTextSegment(int)>(2147483647);

        return;
    }

    public char[] allocSmallCBuffer(int)
    {
        com.ctc.wstx.io.BufferRecycler $r1, $r3;
        int i0;
        char[] $r2, $r4;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: char[] getSmallCBuffer(int)>(i0);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r2 = newarray (char)[i0];

        return $r2;
    }

    public void freeSmallCBuffer(char[])
    {
        com.ctc.wstx.io.BufferRecycler $r1, $r3, $r4;
        char[] r2;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r2 := @parameter0: char[];

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler createRecycler()>();

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: void returnSmallCBuffer(char[])>(r2);

        return;
    }

    public char[] allocMediumCBuffer(int)
    {
        com.ctc.wstx.io.BufferRecycler $r1, $r3;
        int i0;
        char[] $r2, $r4;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: char[] getMediumCBuffer(int)>(i0);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r2 = newarray (char)[i0];

        return $r2;
    }

    public void freeMediumCBuffer(char[])
    {
        com.ctc.wstx.io.BufferRecycler $r1, $r3, $r4;
        char[] r2;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r2 := @parameter0: char[];

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler createRecycler()>();

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: void returnMediumCBuffer(char[])>(r2);

        return;
    }

    public char[] allocFullCBuffer(int)
    {
        com.ctc.wstx.io.BufferRecycler $r1, $r3;
        int i0;
        char[] $r2, $r4;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: char[] getFullCBuffer(int)>(i0);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r2 = newarray (char)[i0];

        return $r2;
    }

    public void freeFullCBuffer(char[])
    {
        com.ctc.wstx.io.BufferRecycler $r1, $r3, $r4;
        char[] r2;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r2 := @parameter0: char[];

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler createRecycler()>();

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: void returnFullCBuffer(char[])>(r2);

        return;
    }

    public byte[] allocFullBBuffer(int)
    {
        byte[] $r2, $r4;
        com.ctc.wstx.io.BufferRecycler $r1, $r3;
        int i0;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: byte[] getFullBBuffer(int)>(i0);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r2 = newarray (byte)[i0];

        return $r2;
    }

    public void freeFullBBuffer(byte[])
    {
        byte[] r2;
        com.ctc.wstx.io.BufferRecycler $r1, $r3, $r4;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r2 := @parameter0: byte[];

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler createRecycler()>();

        r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: void returnFullBBuffer(byte[])>(r2);

        return;
    }

    private com.ctc.wstx.io.BufferRecycler createRecycler()
    {
        java.lang.ThreadLocal $r2;
        com.ctc.wstx.io.BufferRecycler $r0;
        java.lang.ref.SoftReference $r1;
        com.ctc.wstx.api.ReaderConfig r3;

        r3 := @this: com.ctc.wstx.api.ReaderConfig;

        $r0 = new com.ctc.wstx.io.BufferRecycler;

        specialinvoke $r0.<com.ctc.wstx.io.BufferRecycler: void <init>()>();

        $r2 = <com.ctc.wstx.api.ReaderConfig: java.lang.ThreadLocal mRecyclerRef>;

        $r1 = new java.lang.ref.SoftReference;

        specialinvoke $r1.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r0);

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>($r1);

        return $r0;
    }

    private void setConfigFlag(int, boolean)
    {
        com.ctc.wstx.api.ReaderConfig r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i4 = r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags>;

        $i5 = $i4 | i0;

        r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags> = $i5;

        goto label2;

     label1:
        $i2 = r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags>;

        $i7 = (int) -1;

        $i1 = i0 ^ $i7;

        $i3 = $i2 & $i1;

        r0.<com.ctc.wstx.api.ReaderConfig: int mConfigFlags> = $i3;

     label2:
        return;
    }

    public java.lang.Object getProperty(int)
    {
        java.net.URL $r2;
        com.ctc.wstx.api.ReaderConfig r0;
        java.lang.Integer $r7, $r8;
        com.ctc.wstx.api.WstxInputProperties$ParsingMode $r1;
        java.util.Map $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.lang.Error $r11;
        java.lang.StringBuffer $r12, $r13, $r14, $r15;
        int i0, $i1, $i2;
        java.lang.Boolean $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        java.lang.String $r16, $r34;
        javax.xml.stream.XMLResolver $r3, $r4, $r5, $r9;
        javax.xml.stream.XMLReporter $r10;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label10;
            case 5: goto label13;
            case 6: goto label16;
            case 7: goto label21;
            case 8: goto label19;
            case 9: goto label20;
            case 10: goto label67;
            case 11: goto label67;
            case 12: goto label67;
            case 13: goto label67;
            case 14: goto label67;
            case 15: goto label67;
            case 16: goto label67;
            case 17: goto label67;
            case 18: goto label67;
            case 19: goto label67;
            case 20: goto label31;
            case 21: goto label28;
            case 22: goto label25;
            case 23: goto label22;
            case 24: goto label34;
            case 25: goto label37;
            case 26: goto label55;
            case 27: goto label67;
            case 28: goto label67;
            case 29: goto label67;
            case 30: goto label67;
            case 31: goto label67;
            case 32: goto label67;
            case 33: goto label67;
            case 34: goto label67;
            case 35: goto label67;
            case 36: goto label67;
            case 37: goto label67;
            case 38: goto label67;
            case 39: goto label67;
            case 40: goto label40;
            case 41: goto label43;
            case 42: goto label46;
            case 43: goto label49;
            case 44: goto label52;
            case 45: goto label67;
            case 46: goto label67;
            case 47: goto label67;
            case 48: goto label67;
            case 49: goto label67;
            case 50: goto label59;
            case 51: goto label67;
            case 52: goto label60;
            case 53: goto label61;
            case 54: goto label62;
            case 55: goto label63;
            case 56: goto label64;
            case 57: goto label65;
            case 58: goto label66;
            default: goto label67;
        };

     label01:
        $z18 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willCoalesceText()>();

        if $z18 == 0 goto label02;

        $r17 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label03;

     label02:
        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label03:
        return $r17;

     label04:
        $z17 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willSupportNamespaces()>();

        if $z17 == 0 goto label05;

        $r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label06;

     label05:
        $r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label06:
        return $r18;

     label07:
        $z16 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willReplaceEntityRefs()>();

        if $z16 == 0 goto label08;

        $r19 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label09;

     label08:
        $r19 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label09:
        return $r19;

     label10:
        $z15 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willSupportExternalEntities()>();

        if $z15 == 0 goto label11;

        $r20 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label12;

     label11:
        $r20 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label12:
        return $r20;

     label13:
        $z14 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willValidateWithDTD()>();

        if $z14 == 0 goto label14;

        $r21 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label15;

     label14:
        $r21 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label15:
        return $r21;

     label16:
        $z13 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willSupportDTDs()>();

        if $z13 == 0 goto label17;

        $r22 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label18;

     label17:
        $r22 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label18:
        return $r22;

     label19:
        $r10 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        return $r10;

     label20:
        $r9 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver getXMLResolver()>();

        return $r9;

     label21:
        return null;

     label22:
        $z9 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willReportPrologWhitespace()>();

        if $z9 == 0 goto label23;

        $r23 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label24;

     label23:
        $r23 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label24:
        return $r23;

     label25:
        $z10 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willReportCData()>();

        if $z10 == 0 goto label26;

        $r24 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label27;

     label26:
        $r24 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label27:
        return $r24;

     label28:
        $z11 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willInternNames()>();

        if $z11 == 0 goto label29;

        $r25 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label30;

     label29:
        $r25 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label30:
        return $r25;

     label31:
        $z12 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willInternNsURIs()>();

        if $z12 == 0 goto label32;

        $r26 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label33;

     label32:
        $r26 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label33:
        return $r26;

     label34:
        $z8 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willPreserveLocation()>();

        if $z8 == 0 goto label35;

        $r27 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label36;

     label35:
        $r27 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label36:
        return $r27;

     label37:
        $z7 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willAutoCloseInput()>();

        if $z7 == 0 goto label38;

        $r28 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label39;

     label38:
        $r28 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label39:
        return $r28;

     label40:
        $z4 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willNormalizeLFs()>();

        if $z4 == 0 goto label41;

        $r29 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label42;

     label41:
        $r29 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label42:
        return $r29;

     label43:
        $z3 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willNormalizeAttrValues()>();

        if $z3 == 0 goto label44;

        $r30 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label45;

     label44:
        $r30 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label45:
        return $r30;

     label46:
        $z2 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willCacheDTDs()>();

        if $z2 == 0 goto label47;

        $r31 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label48;

     label47:
        $r31 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label48:
        return $r31;

     label49:
        $z1 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willCacheDTDsByPublicId()>();

        if $z1 == 0 goto label50;

        $r32 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label51;

     label50:
        $r32 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label51:
        return $r32;

     label52:
        $z0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean willParseLazily()>();

        if $z0 == 0 goto label53;

        $r33 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label54;

     label53:
        $r33 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label54:
        return $r33;

     label55:
        $z5 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(2097152);

        if $z5 != 0 goto label56;

        return "disable";

     label56:
        $z6 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(4194304);

        if $z6 == 0 goto label57;

        $r34 = "xmlidFull";

        goto label58;

     label57:
        $r34 = "xmlidTyping";

     label58:
        return $r34;

     label59:
        $r8 = new java.lang.Integer;

        $i2 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: int getInputBufferLength()>();

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i2);

        return $r8;

     label60:
        $r7 = new java.lang.Integer;

        $i1 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: int getShortestReportedTextSegment()>();

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>($i1);

        return $r7;

     label61:
        $r6 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: java.util.Map getCustomInternalEntities()>();

        return $r6;

     label62:
        $r5 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver getDtdResolver()>();

        return $r5;

     label63:
        $r4 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver getEntityResolver()>();

        return $r4;

     label64:
        $r3 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver getUndeclaredEntityResolver()>();

        return $r3;

     label65:
        $r2 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: java.net.URL getBaseURL()>();

        return $r2;

     label66:
        $r1 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.WstxInputProperties$ParsingMode getInputParsingMode()>();

        return $r1;

     label67:
        $r11 = new java.lang.Error;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: no handler for property with internal id ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>($r16);

        throw $r11;
    }

    public boolean setProperty(java.lang.String, int, java.lang.Object)
    {
        java.net.URL $r3;
        com.ctc.wstx.api.ReaderConfig r0;
        com.ctc.wstx.api.WstxInputProperties$ParsingMode $r2;
        java.util.Map $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, z20, z21;
        java.lang.Error $r28;
        java.lang.StringBuffer $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r29, $r30, $r31, $r32;
        int i0, $i1, $i2;
        java.lang.String r8, $r9, $r10, $r11, $r25, $r33;
        javax.xml.stream.XMLResolver $r4, $r5, $r6, $r26;
        javax.xml.stream.XMLReporter $r27;
        java.lang.IllegalArgumentException $r12;
        java.lang.Object r1;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label09;
            case 8: goto label07;
            case 9: goto label08;
            case 10: goto label34;
            case 11: goto label34;
            case 12: goto label34;
            case 13: goto label34;
            case 14: goto label34;
            case 15: goto label34;
            case 16: goto label34;
            case 17: goto label34;
            case 18: goto label34;
            case 19: goto label34;
            case 20: goto label13;
            case 21: goto label12;
            case 22: goto label25;
            case 23: goto label14;
            case 24: goto label23;
            case 25: goto label24;
            case 26: goto label18;
            case 27: goto label34;
            case 28: goto label34;
            case 29: goto label34;
            case 30: goto label34;
            case 31: goto label34;
            case 32: goto label34;
            case 33: goto label34;
            case 34: goto label34;
            case 35: goto label34;
            case 36: goto label34;
            case 37: goto label34;
            case 38: goto label34;
            case 39: goto label34;
            case 40: goto label10;
            case 41: goto label11;
            case 42: goto label15;
            case 43: goto label16;
            case 44: goto label17;
            case 45: goto label34;
            case 46: goto label34;
            case 47: goto label34;
            case 48: goto label34;
            case 49: goto label34;
            case 50: goto label26;
            case 51: goto label34;
            case 52: goto label27;
            case 53: goto label28;
            case 54: goto label29;
            case 55: goto label30;
            case 56: goto label31;
            case 57: goto label32;
            case 58: goto label33;
            default: goto label34;
        };

     label01:
        $z19 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCoalesceText(boolean)>($z19);

        goto label35;

     label02:
        $z18 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doSupportNamespaces(boolean)>($z18);

        goto label35;

     label03:
        $z17 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReplaceEntityRefs(boolean)>($z17);

        goto label35;

     label04:
        $z16 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doSupportExternalEntities(boolean)>($z16);

        goto label35;

     label05:
        $z14 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doSupportDTDs(boolean)>($z14);

        goto label35;

     label06:
        $z15 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doValidateWithDTD(boolean)>($z15);

        goto label35;

     label07:
        $r27 = (javax.xml.stream.XMLReporter) r1;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setXMLReporter(javax.xml.stream.XMLReporter)>($r27);

        goto label35;

     label08:
        $r26 = (javax.xml.stream.XMLResolver) r1;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setXMLResolver(javax.xml.stream.XMLResolver)>($r26);

        goto label35;

     label09:
        return 0;

     label10:
        $z4 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doNormalizeLFs(boolean)>($z4);

        goto label35;

     label11:
        $z3 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doNormalizeAttrValues(boolean)>($z3);

        goto label35;

     label12:
        $z12 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doInternNames(boolean)>($z12);

        goto label35;

     label13:
        $z13 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doInternNsURIs(boolean)>($z13);

        goto label35;

     label14:
        $z10 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReportPrologWhitespace(boolean)>($z10);

        goto label35;

     label15:
        $z2 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCacheDTDs(boolean)>($z2);

        goto label35;

     label16:
        $z1 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doCacheDTDsByPublicId(boolean)>($z1);

        goto label35;

     label17:
        $z0 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doParseLazily(boolean)>($z0);

        goto label35;

     label18:
        $r9 = "disable";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label19;

        z20 = 0;

        z21 = 0;

        goto label22;

     label19:
        $r10 = "xmlidTyping";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label20;

        z21 = 1;

        z20 = 0;

        goto label22;

     label20:
        $r11 = "xmlidFull";

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label21;

        z20 = 1;

        z21 = 1;

        goto label22;

     label21:
        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal argument (\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\') to set property ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.codehaus.stax2.supportXmlId");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to: has to be one of \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("disable");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', \'");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xmlidTyping");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' or \'");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xmlidFull");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r12;

     label22:
        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(2097152, z21);

        specialinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setConfigFlag(int,boolean)>(4194304, z20);

        goto label35;

     label23:
        $z9 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doPreserveLocation(boolean)>($z9);

        goto label35;

     label24:
        $z8 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doAutoCloseInput(boolean)>($z8);

        goto label35;

     label25:
        $z11 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r8, r1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void doReportCData(boolean)>($z11);

        goto label35;

     label26:
        $i2 = staticinvoke <com.ctc.wstx.util.ArgUtil: int convertToInt(java.lang.String,java.lang.Object,int)>(r8, r1, 1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setInputBufferLength(int)>($i2);

        goto label35;

     label27:
        $i1 = staticinvoke <com.ctc.wstx.util.ArgUtil: int convertToInt(java.lang.String,java.lang.Object,int)>(r8, r1, 1);

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setShortestReportedTextSegment(int)>($i1);

        goto label35;

     label28:
        $r7 = (java.util.Map) r1;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setCustomInternalEntities(java.util.Map)>($r7);

        goto label35;

     label29:
        $r6 = (javax.xml.stream.XMLResolver) r1;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setDtdResolver(javax.xml.stream.XMLResolver)>($r6);

        goto label35;

     label30:
        $r5 = (javax.xml.stream.XMLResolver) r1;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setEntityResolver(javax.xml.stream.XMLResolver)>($r5);

        goto label35;

     label31:
        $r4 = (javax.xml.stream.XMLResolver) r1;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setUndeclaredEntityResolver(javax.xml.stream.XMLResolver)>($r4);

        goto label35;

     label32:
        $r3 = (java.net.URL) r1;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setBaseURL(java.net.URL)>($r3);

        goto label35;

     label33:
        $r2 = (com.ctc.wstx.api.WstxInputProperties$ParsingMode) r1;

        virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: void setInputParsingMode(com.ctc.wstx.api.WstxInputProperties$ParsingMode)>($r2);

        goto label35;

     label34:
        $r28 = new java.lang.Error;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: no handler for property with internal id ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.Error: void <init>(java.lang.String)>($r33);

        throw $r28;

     label35:
        return 1;
    }

    private java.lang.Object getSpecialProperty(int)
    {
        java.lang.Object[] $r1, $r2;
        int i0;
        java.lang.Object $r3;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties>;

        $r3 = $r2[i0];

        return $r3;
    }

    private void setSpecialProperty(int, java.lang.Object)
    {
        java.lang.Object[] $r1, $r3, $r4;
        int i0;
        java.lang.Object r2;
        com.ctc.wstx.api.ReaderConfig r0;

        r0 := @this: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties>;

        if $r1 != null goto label1;

        $r4 = newarray (java.lang.Object)[3];

        r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.api.ReaderConfig: java.lang.Object[] mSpecialProperties>;

        $r3[i0] = r2;

        return;
    }

    static void <clinit>()
    {
        java.lang.Integer $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59;
        java.lang.ThreadLocal $r61;
        java.util.HashMap $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60;

        <com.ctc.wstx.api.ReaderConfig: int SP_IX_DTD_EVENT_LISTENER> = 2;

        <com.ctc.wstx.api.ReaderConfig: int SP_IX_UNDECL_ENT_RESOLVER> = 1;

        <com.ctc.wstx.api.ReaderConfig: int SP_IX_CUSTOM_ENTITIES> = 0;

        <com.ctc.wstx.api.ReaderConfig: int SPEC_PROC_COUNT> = 3;

        <com.ctc.wstx.api.ReaderConfig: int DEFAULT_FLAGS_J2ME> = 2977567;

        <com.ctc.wstx.api.ReaderConfig: int DEFAULT_FLAGS_FULL> = 2977567;

        <com.ctc.wstx.api.ReaderConfig: int DEFAULT_SHORTEST_TEXT_SEGMENT> = 64;

        <com.ctc.wstx.api.ReaderConfig: int DTD_CACHE_SIZE_J2ME> = 5;

        <com.ctc.wstx.api.ReaderConfig: int DTD_CACHE_SIZE_J2SE> = 12;

        <com.ctc.wstx.api.ReaderConfig: int MIN_INPUT_BUFFER_LENGTH> = 8;

        <com.ctc.wstx.api.ReaderConfig: int PROP_INPUT_PARSING_MODE> = 58;

        <com.ctc.wstx.api.ReaderConfig: int PROP_BASE_URL> = 57;

        <com.ctc.wstx.api.ReaderConfig: int PROP_UNDECLARED_ENTITY_RESOLVER> = 56;

        <com.ctc.wstx.api.ReaderConfig: int PROP_ENTITY_RESOLVER> = 55;

        <com.ctc.wstx.api.ReaderConfig: int PROP_DTD_RESOLVER> = 54;

        <com.ctc.wstx.api.ReaderConfig: int PROP_CUSTOM_INTERNAL_ENTITIES> = 53;

        <com.ctc.wstx.api.ReaderConfig: int PROP_MIN_TEXT_SEGMENT> = 52;

        <com.ctc.wstx.api.ReaderConfig: int PROP_INPUT_BUFFER_LENGTH> = 50;

        <com.ctc.wstx.api.ReaderConfig: int PROP_SUPPORT_DTDPP> = 45;

        <com.ctc.wstx.api.ReaderConfig: int PROP_LAZY_PARSING> = 44;

        <com.ctc.wstx.api.ReaderConfig: int PROP_CACHE_DTDS_BY_PUBLIC_ID> = 43;

        <com.ctc.wstx.api.ReaderConfig: int PROP_CACHE_DTDS> = 42;

        <com.ctc.wstx.api.ReaderConfig: int PROP_NORMALIZE_ATTR_VALUES> = 41;

        <com.ctc.wstx.api.ReaderConfig: int PROP_NORMALIZE_LFS> = 40;

        <com.ctc.wstx.api.ReaderConfig: int PROP_SUPPORT_XMLID> = 26;

        <com.ctc.wstx.api.ReaderConfig: int PROP_AUTO_CLOSE_INPUT> = 25;

        <com.ctc.wstx.api.ReaderConfig: int PROP_PRESERVE_LOCATION> = 24;

        <com.ctc.wstx.api.ReaderConfig: int PROP_REPORT_PROLOG_WS> = 23;

        <com.ctc.wstx.api.ReaderConfig: int PROP_REPORT_CDATA> = 22;

        <com.ctc.wstx.api.ReaderConfig: int PROP_INTERN_NAMES> = 21;

        <com.ctc.wstx.api.ReaderConfig: int PROP_INTERN_NS_URIS> = 20;

        <com.ctc.wstx.api.ReaderConfig: int PROP_XML_RESOLVER> = 9;

        <com.ctc.wstx.api.ReaderConfig: int PROP_WARNING_REPORTER> = 8;

        <com.ctc.wstx.api.ReaderConfig: int PROP_EVENT_ALLOCATOR> = 7;

        <com.ctc.wstx.api.ReaderConfig: int PROP_SUPPORT_DTD> = 6;

        <com.ctc.wstx.api.ReaderConfig: int PROP_VALIDATE_AGAINST_DTD> = 5;

        <com.ctc.wstx.api.ReaderConfig: int PROP_SUPPORT_EXTERNAL_ENTITIES> = 4;

        <com.ctc.wstx.api.ReaderConfig: int PROP_REPLACE_ENTITY_REFS> = 3;

        <com.ctc.wstx.api.ReaderConfig: int PROP_NAMESPACE_AWARE> = 2;

        <com.ctc.wstx.api.ReaderConfig: int PROP_COALESCE_TEXT> = 1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(64);

        <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties> = $r0;

        $r2 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.isCoalescing", $r1);

        $r4 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(2);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.isNamespaceAware", $r3);

        $r6 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(3);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.isReplacingEntityReferences", $r5);

        $r8 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(4);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.isSupportingExternalEntities", $r7);

        $r10 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(5);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.isValidating", $r9);

        $r12 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(6);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.supportDTD", $r11);

        $r14 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(7);

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.allocator", $r13);

        $r16 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r15 = new java.lang.Integer;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>(8);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.reporter", $r15);

        $r18 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(9);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.resolver", $r17);

        $r20 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r19 = new java.lang.Integer;

        specialinvoke $r19.<java.lang.Integer: void <init>(int)>(21);

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.internNames", $r19);

        $r22 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r21 = new java.lang.Integer;

        specialinvoke $r21.<java.lang.Integer: void <init>(int)>(20);

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.internNsUris", $r21);

        $r24 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r23 = new java.lang.Integer;

        specialinvoke $r23.<java.lang.Integer: void <init>(int)>(22);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://java.sun.com/xml/stream/properties/report-cdata-event", $r23);

        $r26 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r25 = new java.lang.Integer;

        specialinvoke $r25.<java.lang.Integer: void <init>(int)>(23);

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.reportPrologWhitespace", $r25);

        $r28 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r27 = new java.lang.Integer;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>(24);

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.preserveLocation", $r27);

        $r30 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r29 = new java.lang.Integer;

        specialinvoke $r29.<java.lang.Integer: void <init>(int)>(25);

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.closeInputSource", $r29);

        $r32 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r31 = new java.lang.Integer;

        specialinvoke $r31.<java.lang.Integer: void <init>(int)>(26);

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.supportXmlId", $r31);

        $r34 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r33 = new java.lang.Integer;

        specialinvoke $r33.<java.lang.Integer: void <init>(int)>(40);

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.normalizeLFs", $r33);

        $r36 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r35 = new java.lang.Integer;

        specialinvoke $r35.<java.lang.Integer: void <init>(int)>(41);

        virtualinvoke $r36.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.normalizeAttrValues", $r35);

        $r38 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r37 = new java.lang.Integer;

        specialinvoke $r37.<java.lang.Integer: void <init>(int)>(42);

        virtualinvoke $r38.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.cacheDTDs", $r37);

        $r40 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r39 = new java.lang.Integer;

        specialinvoke $r39.<java.lang.Integer: void <init>(int)>(43);

        virtualinvoke $r40.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.cacheDTDsByPublicId", $r39);

        $r42 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r41 = new java.lang.Integer;

        specialinvoke $r41.<java.lang.Integer: void <init>(int)>(44);

        virtualinvoke $r42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.lazyParsing", $r41);

        $r44 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r43 = new java.lang.Integer;

        specialinvoke $r43.<java.lang.Integer: void <init>(int)>(45);

        virtualinvoke $r44.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.supportDTDPP", $r43);

        $r46 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r45 = new java.lang.Integer;

        specialinvoke $r45.<java.lang.Integer: void <init>(int)>(50);

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.inputBufferLength", $r45);

        $r48 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r47 = new java.lang.Integer;

        specialinvoke $r47.<java.lang.Integer: void <init>(int)>(52);

        virtualinvoke $r48.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.minTextSegment", $r47);

        $r50 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r49 = new java.lang.Integer;

        specialinvoke $r49.<java.lang.Integer: void <init>(int)>(53);

        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.customInternalEntities", $r49);

        $r52 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r51 = new java.lang.Integer;

        specialinvoke $r51.<java.lang.Integer: void <init>(int)>(54);

        virtualinvoke $r52.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.dtdResolver", $r51);

        $r54 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r53 = new java.lang.Integer;

        specialinvoke $r53.<java.lang.Integer: void <init>(int)>(55);

        virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.entityResolver", $r53);

        $r56 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r55 = new java.lang.Integer;

        specialinvoke $r55.<java.lang.Integer: void <init>(int)>(56);

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.undeclaredEntityResolver", $r55);

        $r58 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r57 = new java.lang.Integer;

        specialinvoke $r57.<java.lang.Integer: void <init>(int)>(57);

        virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.baseURL", $r57);

        $r60 = <com.ctc.wstx.api.ReaderConfig: java.util.HashMap sProperties>;

        $r59 = new java.lang.Integer;

        specialinvoke $r59.<java.lang.Integer: void <init>(int)>(58);

        virtualinvoke $r60.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.fragmentMode", $r59);

        $r61 = new java.lang.ThreadLocal;

        specialinvoke $r61.<java.lang.ThreadLocal: void <init>()>();

        <com.ctc.wstx.api.ReaderConfig: java.lang.ThreadLocal mRecyclerRef> = $r61;

        <com.ctc.wstx.api.ReaderConfig: int Counter> = 0;

        return;
    }
}
