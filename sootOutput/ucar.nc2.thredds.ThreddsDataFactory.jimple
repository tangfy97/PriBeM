public class ucar.nc2.thredds.ThreddsDataFactory extends java.lang.Object
{
    public static final java.lang.String SCHEME;
    private static boolean preferCdm;
    private static boolean debugOpen;
    private static boolean debugTypeOpen;
    private static boolean enhanceMode;

    public void <init>()
    {
        ucar.nc2.thredds.ThreddsDataFactory r0;

        r0 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setPreferCdm(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <ucar.nc2.thredds.ThreddsDataFactory: boolean preferCdm> = z0;

        return;
    }

    public static void setDebugFlags(ucar.nc2.util.DebugFlags)
    {
        ucar.nc2.util.DebugFlags r0;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.util.DebugFlags;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("thredds/debugOpen");

        <ucar.nc2.thredds.ThreddsDataFactory: boolean debugOpen> = $z0;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("thredds/openDatatype");

        <ucar.nc2.thredds.ThreddsDataFactory: boolean debugTypeOpen> = $z1;

        return;
    }

    public ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r0, $r5;
        ucar.nc2.thredds.ThreddsDataFactory r1;
        java.lang.String r2;
        thredds.catalog.InvDataset $r4;
        boolean $z0;

        r1 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        $r0 = new ucar.nc2.thredds.ThreddsDataFactory$Result;

        specialinvoke $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: void <init>()>();

        $r4 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvDataset processLocation(java.lang.String,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(r2, r3, $r0);

        $z0 = $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError>;

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r5 = virtualinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType,thredds.catalog.InvDataset,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(null, $r4, r3, $r0);

        return $r5;
    }

    public ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.thredds.ThreddsDataFactory$Result $r0, $r6;
        ucar.nc2.thredds.ThreddsDataFactory r1;
        ucar.nc2.util.CancelTask r3;
        java.lang.String r2;
        ucar.nc2.constants.FeatureType r5;
        thredds.catalog.InvDataset $r4;
        boolean $z0;

        r1 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r5 := @parameter0: ucar.nc2.constants.FeatureType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: ucar.nc2.util.CancelTask;

        $r0 = new ucar.nc2.thredds.ThreddsDataFactory$Result;

        specialinvoke $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: void <init>()>();

        $r4 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvDataset processLocation(java.lang.String,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(r2, r3, $r0);

        $z0 = $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError>;

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r6 = virtualinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType,thredds.catalog.InvDataset,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(r5, $r4, r3, $r0);

        return $r6;
    }

    private thredds.catalog.InvDataset processLocation(java.lang.String, ucar.nc2.util.CancelTask, ucar.nc2.thredds.ThreddsDataFactory$Result)
    {
        java.util.Formatter $r10, $r12, $r15;
        ucar.nc2.util.CancelTask r21;
        thredds.catalog.InvCatalogFactory $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        thredds.catalog.InvDataset $r7;
        thredds.catalog.InvCatalogImpl $r4;
        java.lang.StringBuilder $r5, $r16, $r17, $r18;
        java.lang.Object[] $r9, $r11, $r14;
        ucar.nc2.thredds.ThreddsDataFactory$Result r8;
        ucar.nc2.thredds.ThreddsDataFactory r20;
        int $i0, $i1;
        java.lang.String $r0, $r1, $r3, $r6, $r13, $r19, r23, r24;
        thredds.catalog.InvDatasetImpl $r22;

        r20 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r23 := @parameter0: java.lang.String;

        r21 := @parameter1: ucar.nc2.util.CancelTask;

        r8 := @parameter2: ucar.nc2.thredds.ThreddsDataFactory$Result;

        $r0 = virtualinvoke r23.<java.lang.String: java.lang.String trim()>();

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r0, 92, "/");

        r24 = $r1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("thredds:");

        if $z0 == 0 goto label1;

        r24 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(8);

     label1:
        $z1 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("resolve:");

        if $z1 == 0 goto label2;

        $r19 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>(8);

        $r22 = specialinvoke r20.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvDatasetImpl openResolver(java.lang.String,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r19, r21, r8);

        return $r22;

     label2:
        $z2 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("http:");

        if $z2 != 0 goto label3;

        $z4 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z4 != 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http:");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $i1 = virtualinvoke r24.<java.lang.String: int indexOf(int)>(35);

        if $i1 >= 0 goto label4;

        r8.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

        $r15 = r8.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke $r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have the form catalog.xml#datasetId%n", $r14);

        return null;

     label4:
        $r2 = new thredds.catalog.InvCatalogFactory;

        specialinvoke $r2.<thredds.catalog.InvCatalogFactory: void <init>(java.lang.String,boolean)>("", 0);

        $r3 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r4 = virtualinvoke $r2.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $z3 = virtualinvoke $r4.<thredds.catalog.InvCatalog: boolean check(java.lang.StringBuilder)>($r5);

        if $z3 != 0 goto label5;

        $r12 = r8.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r3;

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[1] = $r13;

        virtualinvoke $r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Invalid catalog from Resolver <%s>%n%s%n", $r11);

        r8.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

        return null;

     label5:
        $i0 = $i1 + 1;

        $r6 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = virtualinvoke $r4.<thredds.catalog.InvCatalog: thredds.catalog.InvDataset findDatasetByID(java.lang.String)>($r6);

        if $r7 != null goto label6;

        r8.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

        $r10 = r8.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r6;

        $r9[1] = $r3;

        virtualinvoke $r10.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Could not find dataset %s in %s %n", $r9);

        return null;

     label6:
        return $r7;
    }

    public ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r2;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r3, $r4;
        ucar.nc2.thredds.ThreddsDataFactory r0;
        thredds.catalog.InvDataset r1;

        r0 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r1 := @parameter0: thredds.catalog.InvDataset;

        r2 := @parameter1: ucar.nc2.util.CancelTask;

        $r3 = new ucar.nc2.thredds.ThreddsDataFactory$Result;

        specialinvoke $r3.<ucar.nc2.thredds.ThreddsDataFactory$Result: void <init>()>();

        $r4 = virtualinvoke r0.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType,thredds.catalog.InvDataset,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(null, r1, r2, $r3);

        return $r4;
    }

    public ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType, thredds.catalog.InvDataset, ucar.nc2.util.CancelTask, ucar.nc2.thredds.ThreddsDataFactory$Result) throws java.io.IOException
    {
        thredds.catalog.InvAccess $r6, $r27, $r33;
        java.util.Formatter $r9, $r18, $r24;
        ucar.nc2.util.CancelTask r8;
        ucar.nc2.constants.FeatureType $r2, $r3, $r4, $r14, $r17, $r19, $r21, $r22, $r28, $r30, $r34, r36, $r37, $r38;
        thredds.catalog.InvDataset r1;
        boolean $z0, $z1;
        java.util.List $r31;
        java.lang.Object[] $r23;
        ucar.nc2.thredds.ThreddsDataFactory$Result r0, $r29, $r35;
        ucar.nc2.thredds.ThreddsDataFactory r7;
        thredds.catalog.ServiceType $r5, $r32;
        java.lang.String $r13, $r25;
        ucar.nc2.dataset.NetcdfDataset $r10;
        ucar.nc2.ft.FeatureDataset $r11, $r12, $r15, $r16, $r20, $r26;

        r7 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r36 := @parameter0: ucar.nc2.constants.FeatureType;

        r1 := @parameter1: thredds.catalog.InvDataset;

        r8 := @parameter2: ucar.nc2.util.CancelTask;

        r0 := @parameter3: ucar.nc2.thredds.ThreddsDataFactory$Result;

        $r2 = virtualinvoke r1.<thredds.catalog.InvDataset: ucar.nc2.constants.FeatureType getDataType()>();

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType> = $r2;

        $r3 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        if $r3 != null goto label01;

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType> = r36;

     label01:
        $r4 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        if $r4 == null goto label02;

        $r30 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        $z0 = virtualinvoke $r30.<ucar.nc2.constants.FeatureType: boolean isPointFeatureType()>();

        if $z0 == 0 goto label02;

        $r31 = virtualinvoke r1.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r32 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType CdmrFeature>;

        $r33 = specialinvoke r7.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>($r31, $r32);

        if $r33 == null goto label02;

        $r34 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        $r35 = specialinvoke r7.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType,thredds.catalog.InvAccess,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r34, $r33, r8, r0);

        return $r35;

     label02:
        $r37 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        $r38 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType IMAGE>;

        if $r37 != $r38 goto label04;

        $r27 = specialinvoke r7.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess getImageAccess(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(r1, r8, r0);

        if $r27 == null goto label03;

        $r28 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        $r29 = specialinvoke r7.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType,thredds.catalog.InvAccess,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r28, $r27, r8, r0);

        return $r29;

     label03:
        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

        return r0;

     label04:
        $r5 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType QC>;

        $r6 = virtualinvoke r1.<thredds.catalog.InvDataset: thredds.catalog.InvAccess getAccess(thredds.catalog.ServiceType)>($r5);

        if $r6 == null goto label09;

        virtualinvoke $r6.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

        $r22 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        $r21 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        if $r22 != $r21 goto label07;

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset> = null;

        $r26 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        if $r26 != null goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = $z1;

        goto label08;

     label07:
        $r24 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r23 = newarray (java.lang.Object)[1];

        $r25 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r23[0] = $r25;

        virtualinvoke $r24.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("DQC must be station DQC, dataset = %s %n", $r23);

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

     label08:
        return r0;

     label09:
        $r9 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r10 = virtualinvoke r7.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvDataset,boolean,ucar.nc2.util.CancelTask,java.util.Formatter)>(r1, 1, r8, $r9);

        if null == $r10 goto label10;

        $r19 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        $r18 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r20 = staticinvoke <ucar.nc2.ft.FeatureDatasetFactoryManager: ucar.nc2.ft.FeatureDataset wrap(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask,java.util.Formatter)>($r19, $r10, r8, $r18);

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset> = $r20;

     label10:
        $r11 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        if null != $r11 goto label11;

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

        goto label12;

     label11:
        $r12 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        $r13 = interfaceinvoke $r12.<ucar.nc2.ft.FeatureDataset: java.lang.String getLocation()>();

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.lang.String location> = $r13;

        $r14 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        if $r14 != null goto label12;

        $r15 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        if $r15 == null goto label12;

        $r16 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        $r17 = interfaceinvoke $r16.<ucar.nc2.ft.FeatureDataset: ucar.nc2.constants.FeatureType getFeatureType()>();

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType> = $r17;

     label12:
        return r0;
    }

    public ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvAccess, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Object[] $r8;
        thredds.catalog.InvAccess r0;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r2, $r7;
        ucar.nc2.thredds.ThreddsDataFactory r4;
        java.util.Formatter $r9;
        ucar.nc2.util.CancelTask r6;
        ucar.nc2.constants.FeatureType $r3, $r5;
        thredds.catalog.InvDataset $r1;

        r4 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r0 := @parameter0: thredds.catalog.InvAccess;

        r6 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<thredds.catalog.InvAccess: thredds.catalog.InvDataset getDataset()>();

        $r2 = new ucar.nc2.thredds.ThreddsDataFactory$Result;

        specialinvoke $r2.<ucar.nc2.thredds.ThreddsDataFactory$Result: void <init>()>();

        $r3 = virtualinvoke $r1.<thredds.catalog.InvDataset: ucar.nc2.constants.FeatureType getDataType()>();

        if $r3 != null goto label1;

        $r9 = $r2.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("InvDatasert must specify a FeatureType%n", $r8);

        $r2.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

        return $r2;

     label1:
        $r5 = virtualinvoke $r1.<thredds.catalog.InvDataset: ucar.nc2.constants.FeatureType getDataType()>();

        $r7 = specialinvoke r4.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType,thredds.catalog.InvAccess,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r5, r0, r6, $r2);

        return $r7;
    }

    private ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(ucar.nc2.constants.FeatureType, thredds.catalog.InvAccess, ucar.nc2.util.CancelTask, ucar.nc2.thredds.ThreddsDataFactory$Result) throws java.io.IOException
    {
        thredds.catalog.InvAccess r2;
        ucar.nc2.thredds.ThreddsDataFactory$Result r0;
        ucar.nc2.thredds.ThreddsDataFactory r8;
        java.util.Formatter $r17;
        ucar.nc2.util.CancelTask r9;
        thredds.catalog.ServiceType $r6, $r7;
        java.lang.String $r12, $r20, $r22, $r23;
        ucar.nc2.constants.FeatureType r1, $r3, $r4, $r13, $r16, $r18;
        thredds.catalog.InvService $r5;
        ucar.nc2.dataset.NetcdfDataset $r10;
        ucar.nc2.ft.FeatureDataset $r11, $r14, $r15, $r19, $r21, $r24;

        r8 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r1 := @parameter0: ucar.nc2.constants.FeatureType;

        r2 := @parameter1: thredds.catalog.InvAccess;

        r9 := @parameter2: ucar.nc2.util.CancelTask;

        r0 := @parameter3: ucar.nc2.thredds.ThreddsDataFactory$Result;

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType> = r1;

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: thredds.catalog.InvAccess accessUsed> = r2;

        $r4 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        $r3 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType IMAGE>;

        if $r4 != $r3 goto label1;

        $r22 = virtualinvoke r2.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.lang.String imageURL> = $r22;

        $r23 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.lang.String imageURL>;

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.lang.String location> = $r23;

        return r0;

     label1:
        $r5 = virtualinvoke r2.<thredds.catalog.InvAccess: thredds.catalog.InvService getService()>();

        $r6 = virtualinvoke $r5.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r7 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType CdmrFeature>;

        if $r6 != $r7 goto label2;

        $r20 = virtualinvoke r2.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

        $r21 = staticinvoke <ucar.nc2.stream.CdmrFeatureDataset: ucar.nc2.ft.FeatureDataset factory(ucar.nc2.constants.FeatureType,java.lang.String)>(r1, $r20);

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset> = $r21;

        goto label3;

     label2:
        $r10 = specialinvoke r8.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvAccess,boolean,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(r2, 1, r9, r0);

        if null == $r10 goto label3;

        $r18 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        $r17 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r19 = staticinvoke <ucar.nc2.ft.FeatureDatasetFactoryManager: ucar.nc2.ft.FeatureDataset wrap(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask,java.util.Formatter)>($r18, $r10, r9, $r17);

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset> = $r19;

     label3:
        $r24 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        if null != $r24 goto label4;

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

        goto label5;

     label4:
        $r11 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        $r12 = interfaceinvoke $r11.<ucar.nc2.ft.FeatureDataset: java.lang.String getLocation()>();

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.lang.String location> = $r12;

        $r13 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType>;

        if $r13 != null goto label5;

        $r14 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        if $r14 == null goto label5;

        $r15 = r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        $r16 = interfaceinvoke $r15.<ucar.nc2.ft.FeatureDataset: ucar.nc2.constants.FeatureType getFeatureType()>();

        r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.constants.FeatureType featureType> = $r16;

     label5:
        return r0;
    }

    public ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String, boolean, ucar.nc2.util.CancelTask, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r7;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r0;
        ucar.nc2.thredds.ThreddsDataFactory r1;
        java.util.Formatter r6, $r8;
        ucar.nc2.util.CancelTask r3;
        java.lang.String r2;
        ucar.nc2.dataset.NetcdfDataset $r5;
        thredds.catalog.InvDataset $r4;
        boolean $z0, z1;

        r1 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r2 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        r3 := @parameter2: ucar.nc2.util.CancelTask;

        r6 := @parameter3: java.util.Formatter;

        $r0 = new ucar.nc2.thredds.ThreddsDataFactory$Result;

        specialinvoke $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: void <init>()>();

        $r4 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvDataset processLocation(java.lang.String,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(r2, r3, $r0);

        $z0 = $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError>;

        if $z0 == 0 goto label2;

        if r6 == null goto label1;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r7[0] = $r8;

        virtualinvoke r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r7);

     label1:
        return null;

     label2:
        $r5 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvDataset,boolean,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r4, z1, r3, $r0);

        return $r5;
    }

    public ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvDataset, boolean, ucar.nc2.util.CancelTask, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r6;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r0;
        ucar.nc2.thredds.ThreddsDataFactory r1;
        java.util.Formatter r5, $r7;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dataset.NetcdfDataset $r4, $r8;
        thredds.catalog.InvDataset r2;
        boolean z0, $z1;

        r1 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r2 := @parameter0: thredds.catalog.InvDataset;

        z0 := @parameter1: boolean;

        r3 := @parameter2: ucar.nc2.util.CancelTask;

        r5 := @parameter3: java.util.Formatter;

        $r0 = new ucar.nc2.thredds.ThreddsDataFactory$Result;

        specialinvoke $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: void <init>()>();

        $r4 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvDataset,boolean,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(r2, z0, r3, $r0);

        if r5 == null goto label1;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r6[0] = $r7;

        virtualinvoke r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r6);

     label1:
        $z1 = $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError>;

        if $z1 == 0 goto label2;

        $r8 = null;

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        return $r8;
    }

    private ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvDataset, boolean, ucar.nc2.util.CancelTask, ucar.nc2.thredds.ThreddsDataFactory$Result) throws java.io.IOException
    {
        thredds.catalog.InvAccess $r4;
        java.util.Formatter $r23, $r26;
        ucar.nc2.util.CancelTask r9;
        thredds.catalog.InvDataset r1;
        boolean $z0, z1, $z2;
        java.util.List $r2, $r14;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20, $r28, $r30, $r31, $r32, $r33;
        java.lang.Object[] $r22, $r25;
        ucar.nc2.thredds.ThreddsDataFactory$Result r10;
        ucar.nc2.thredds.ThreddsDataFactory r3;
        java.util.ArrayList $r0, $r13, r36;
        thredds.catalog.ServiceType $r7, $r8;
        int $i0;
        java.lang.String $r5, $r21, $r27, $r34;
        java.io.PrintStream $r16, $r29;
        thredds.catalog.InvService $r6;
        java.io.IOException $r24, r35;
        ucar.nc2.dataset.NetcdfDataset $r11;
        thredds.catalog.InvDatasetImpl $r12;

        r3 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r1 := @parameter0: thredds.catalog.InvDataset;

        z1 := @parameter1: boolean;

        r9 := @parameter2: ucar.nc2.util.CancelTask;

        r10 := @parameter3: ucar.nc2.thredds.ThreddsDataFactory$Result;

        r35 = null;

        $r0 = new java.util.ArrayList;

        $r2 = virtualinvoke r1.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        r36 = $r0;

     label01:
        $i0 = interfaceinvoke r36.<java.util.List: int size()>();

        if $i0 <= 0 goto label11;

        $r4 = virtualinvoke r3.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess chooseDatasetAccess(java.util.List)>(r36);

        if $r4 != null goto label03;

        $r23 = r10.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r1;

        virtualinvoke $r23.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("No access that could be used in dataset %s %n", $r22);

        if r35 == null goto label02;

        throw r35;

     label02:
        return null;

     label03:
        $r5 = virtualinvoke $r4.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

        $r6 = virtualinvoke $r4.<thredds.catalog.InvAccess: thredds.catalog.InvService getService()>();

        $r7 = virtualinvoke $r6.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $z0 = <ucar.nc2.thredds.ThreddsDataFactory: boolean debugOpen>;

        if $z0 == 0 goto label04;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreddsDataset.openDataset try ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label04:
        $r8 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType RESOLVER>;

        if $r7 != $r8 goto label06;

        $r12 = specialinvoke r3.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvDatasetImpl openResolver(java.lang.String,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r5, r9, r10);

        if $r12 != null goto label05;

        return null;

     label05:
        $r13 = new java.util.ArrayList;

        $r14 = virtualinvoke $r12.<thredds.catalog.InvDatasetImpl: java.util.List getAccess()>();

        specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        r36 = $r13;

        goto label01;

     label06:
        $r11 = specialinvoke r3.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvAccess,boolean,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r4, z1, r9, r10);

     label07:
        goto label10;

     label08:
        $r24 := @caughtexception;

        $r26 = r10.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r25 = newarray (java.lang.Object)[2];

        $r25[0] = $r5;

        $r27 = virtualinvoke $r24.<java.io.IOException: java.lang.String getMessage()>();

        $r25[1] = $r27;

        virtualinvoke $r26.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Cant open %s %n err=%s%n", $r25);

        $z2 = <ucar.nc2.thredds.ThreddsDataFactory: boolean debugOpen>;

        if $z2 == 0 goto label09;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant open= ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r34);

        virtualinvoke $r24.<java.io.IOException: void printStackTrace()>();

     label09:
        interfaceinvoke r36.<java.util.List: boolean remove(java.lang.Object)>($r4);

        r35 = $r24;

        goto label01;

     label10:
        r10.<ucar.nc2.thredds.ThreddsDataFactory$Result: thredds.catalog.InvAccess accessUsed> = $r4;

        return $r11;

     label11:
        if r35 == null goto label12;

        throw r35;

     label12:
        return null;

        catch java.io.IOException from label06 to label07 with label08;
    }

    public ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvAccess, boolean, ucar.nc2.util.CancelTask, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r6;
        thredds.catalog.InvAccess r2;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r0;
        ucar.nc2.thredds.ThreddsDataFactory r1;
        java.util.Formatter r5, $r7;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dataset.NetcdfDataset $r4, $r8;
        boolean z0, $z1;

        r1 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r2 := @parameter0: thredds.catalog.InvAccess;

        z0 := @parameter1: boolean;

        r3 := @parameter2: ucar.nc2.util.CancelTask;

        r5 := @parameter3: java.util.Formatter;

        $r0 = new ucar.nc2.thredds.ThreddsDataFactory$Result;

        specialinvoke $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: void <init>()>();

        $r4 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvAccess,boolean,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>(r2, z0, r3, $r0);

        if r5 == null goto label1;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r6[0] = $r7;

        virtualinvoke r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r6);

     label1:
        $z1 = $r0.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError>;

        if $z1 == 0 goto label2;

        $r8 = null;

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        return $r8;
    }

    private ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvAccess, boolean, ucar.nc2.util.CancelTask, ucar.nc2.thredds.ThreddsDataFactory$Result) throws java.io.IOException
    {
        thredds.catalog.InvAccess r0;
        ucar.nc2.util.CancelTask r10;
        thredds.catalog.InvDataset $r1;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r12;
        thredds.catalog.MetadataType $r11;
        java.lang.StringBuilder $r23, $r25, $r26;
        ucar.nc2.thredds.ThreddsDataFactory$Result r13;
        ucar.nc2.thredds.ThreddsDataFactory r20;
        thredds.catalog.ServiceType $r6, $r7, $r8, $r17, $r18;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r9, $r16, $r19, $r27;
        java.io.PrintStream $r24;
        thredds.catalog.InvMetadata r15;
        thredds.catalog.InvService $r5;
        java.lang.Object $r14;
        thredds.catalog.InvDatasetImpl $r21;
        ucar.nc2.dataset.NetcdfDataset $r22, $r28, r29, $r30, $r31;

        r20 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r0 := @parameter0: thredds.catalog.InvAccess;

        z1 := @parameter1: boolean;

        r10 := @parameter2: ucar.nc2.util.CancelTask;

        r13 := @parameter3: ucar.nc2.thredds.ThreddsDataFactory$Result;

        $r1 = virtualinvoke r0.<thredds.catalog.InvAccess: thredds.catalog.InvDataset getDataset()>();

        $r2 = virtualinvoke $r1.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r3 = virtualinvoke $r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r4 = virtualinvoke r0.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

        $r5 = virtualinvoke r0.<thredds.catalog.InvAccess: thredds.catalog.InvService getService()>();

        $r6 = virtualinvoke $r5.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $z0 = <ucar.nc2.thredds.ThreddsDataFactory: boolean debugOpen>;

        if $z0 == 0 goto label01;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreddsDataset.openDataset= ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label01:
        $r7 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType RESOLVER>;

        if $r6 != $r7 goto label03;

        $r21 = specialinvoke r20.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvDatasetImpl openResolver(java.lang.String,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r4, r10, r13);

        if $r21 != null goto label02;

        return null;

     label02:
        $r22 = specialinvoke r20.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.dataset.NetcdfDataset openDataset(thredds.catalog.InvDataset,boolean,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r21, z1, r10, r13);

        return $r22;

     label03:
        $r8 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType OPENDAP>;

        if $r6 == $r8 goto label04;

        $r17 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType DODS>;

        if $r6 != $r17 goto label07;

     label04:
        $r9 = staticinvoke <ucar.nc2.dods.DODSNetcdfFile: java.lang.String canonicalURL(java.lang.String)>($r4);

        if z1 == 0 goto label05;

        $z3 = <ucar.nc2.thredds.ThreddsDataFactory: boolean enhanceMode>;

        $r28 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(java.lang.String,boolean,ucar.nc2.util.CancelTask)>($r9, $z3, r10);

        goto label06;

     label05:
        $z2 = <ucar.nc2.thredds.ThreddsDataFactory: boolean enhanceMode>;

        $r28 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String,boolean,ucar.nc2.util.CancelTask)>($r9, $z2, r10);

     label06:
        r29 = $r28;

        goto label13;

     label07:
        $r18 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType CdmRemote>;

        if $r6 != $r18 goto label10;

        $r19 = staticinvoke <ucar.nc2.stream.CdmRemote: java.lang.String canonicalURL(java.lang.String)>($r4);

        if z1 == 0 goto label08;

        $z7 = <ucar.nc2.thredds.ThreddsDataFactory: boolean enhanceMode>;

        $r30 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(java.lang.String,boolean,ucar.nc2.util.CancelTask)>($r19, $z7, r10);

        goto label09;

     label08:
        $z6 = <ucar.nc2.thredds.ThreddsDataFactory: boolean enhanceMode>;

        $r30 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String,boolean,ucar.nc2.util.CancelTask)>($r19, $z6, r10);

     label09:
        r29 = $r30;

        goto label13;

     label10:
        if z1 == 0 goto label11;

        $z5 = <ucar.nc2.thredds.ThreddsDataFactory: boolean enhanceMode>;

        $r31 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(java.lang.String,boolean,ucar.nc2.util.CancelTask)>($r4, $z5, r10);

        goto label12;

     label11:
        $z4 = <ucar.nc2.thredds.ThreddsDataFactory: boolean enhanceMode>;

        $r31 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String,boolean,ucar.nc2.util.CancelTask)>($r4, $z4, r10);

     label12:
        r29 = $r31;

     label13:
        if r29 == null goto label14;

        virtualinvoke r29.<ucar.nc2.dataset.NetcdfDataset: void setId(java.lang.String)>($r2);

        virtualinvoke r29.<ucar.nc2.dataset.NetcdfDataset: void setTitle(java.lang.String)>($r3);

        staticinvoke <ucar.nc2.thredds.ThreddsDataFactory: void annotate(thredds.catalog.InvDataset,ucar.nc2.dataset.NetcdfDataset)>($r1, r29);

     label14:
        $r11 = <thredds.catalog.MetadataType: thredds.catalog.MetadataType NcML>;

        $r12 = virtualinvoke $r1.<thredds.catalog.InvDataset: java.util.List getMetadata(thredds.catalog.MetadataType)>($r11);

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i0 <= 0 goto label15;

        $r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

        r15 = (thredds.catalog.InvMetadata) $r14;

        $r16 = virtualinvoke r15.<thredds.catalog.InvMetadata: java.lang.String getXlinkHref()>();

        staticinvoke <ucar.nc2.ncml.NcMLReader: void wrapNcML(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.util.CancelTask)>(r29, $r16, null);

     label15:
        r13.<ucar.nc2.thredds.ThreddsDataFactory$Result: thredds.catalog.InvAccess accessUsed> = r0;

        return r29;
    }

    public thredds.catalog.InvAccess chooseDatasetAccess(java.util.List)
    {
        thredds.catalog.InvAccess $r5, r23, r24;
        ucar.nc2.thredds.ThreddsDataFactory r1;
        thredds.catalog.ServiceType $r2, $r3, $r4, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        int $i0;
        boolean $z0;
        thredds.catalog.DataFormatType $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.util.List r0;

        r1 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        return null;

     label01:
        r23 = null;

        $z0 = <ucar.nc2.thredds.ThreddsDataFactory: boolean preferCdm>;

        if $z0 == 0 goto label02;

        $r22 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType CdmRemote>;

        r23 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r22);

     label02:
        if r23 != null goto label03;

        $r21 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType FILE>;

        r23 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r21);

     label03:
        if r23 != null goto label04;

        $r20 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType NETCDF>;

        r23 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r20);

     label04:
        if r23 != null goto label05;

        $r19 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType DODS>;

        r23 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r19);

     label05:
        if r23 != null goto label06;

        $r18 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType OPENDAP>;

        r23 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r18);

     label06:
        if r23 != null goto label07;

        $r17 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType CdmRemote>;

        r23 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r17);

     label07:
        if r23 != null goto label10;

        $r4 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType HTTPServer>;

        $r5 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r4);

        r24 = $r5;

        if $r5 != null goto label08;

        $r16 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType HTTP>;

        r24 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r16);

     label08:
        if r24 == null goto label10;

        $r6 = virtualinvoke r24.<thredds.catalog.InvAccess: thredds.catalog.DataFormatType getDataFormatType()>();

        $r7 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType BUFR>;

        if $r7 == $r6 goto label09;

        $r8 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GINI>;

        if $r8 == $r6 goto label09;

        $r9 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GRIB1>;

        if $r9 == $r6 goto label09;

        $r10 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GRIB2>;

        if $r10 == $r6 goto label09;

        $r11 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType HDF5>;

        if $r11 == $r6 goto label09;

        $r12 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NCML>;

        if $r12 == $r6 goto label09;

        $r13 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NETCDF>;

        if $r13 == $r6 goto label09;

        $r14 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NEXRAD2>;

        if $r14 == $r6 goto label09;

        $r15 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NIDS>;

        if $r15 != $r6 goto label10;

     label09:
        r23 = r24;

     label10:
        if r23 != null goto label11;

        $r3 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType ADDE>;

        r23 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r3);

     label11:
        if r23 != null goto label12;

        $r2 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType RESOLVER>;

        r23 = specialinvoke r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r0, $r2);

     label12:
        return r23;
    }

    private thredds.catalog.InvDatasetImpl openResolver(java.lang.String, ucar.nc2.util.CancelTask, ucar.nc2.thredds.ThreddsDataFactory$Result)
    {
        java.lang.Object[] $r10, $r13;
        ucar.nc2.thredds.ThreddsDataFactory$Result r9;
        ucar.nc2.thredds.ThreddsDataFactory r15;
        java.util.Formatter $r11, $r14;
        ucar.nc2.util.CancelTask r16;
        java.lang.String r1, $r12;
        thredds.catalog.InvCatalogFactory $r0;
        boolean $z0, $z1;
        java.util.List $r5;
        thredds.catalog.InvCatalogImpl $r2;
        java.lang.StringBuilder $r3;
        java.lang.Object $r6;
        thredds.catalog.InvDatasetImpl $r4, $r7, $r8;

        r15 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r1 := @parameter0: java.lang.String;

        r16 := @parameter1: ucar.nc2.util.CancelTask;

        r9 := @parameter2: ucar.nc2.thredds.ThreddsDataFactory$Result;

        $r0 = new thredds.catalog.InvCatalogFactory;

        specialinvoke $r0.<thredds.catalog.InvCatalogFactory: void <init>(java.lang.String,boolean)>("", 0);

        $r2 = virtualinvoke $r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r14 = r9.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r1;

        virtualinvoke $r14.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Couldnt open Resolver %s %n ", $r13);

        return null;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r2.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder)>($r3);

        if $z0 != 0 goto label2;

        $r11 = r9.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = r1;

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10[1] = $r12;

        virtualinvoke $r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Invalid catalog from Resolver <%s>%n%s%n", $r10);

        r9.<ucar.nc2.thredds.ThreddsDataFactory$Result: boolean fatalError> = 1;

        return null;

     label2:
        $r4 = virtualinvoke $r2.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl getDataset()>();

        $z1 = virtualinvoke $r4.<thredds.catalog.InvDataset: boolean hasAccess()>();

        if $z1 == 0 goto label3;

        $r8 = (thredds.catalog.InvDatasetImpl) $r4;

        return $r8;

     label3:
        $r5 = virtualinvoke $r4.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (thredds.catalog.InvDatasetImpl) $r6;

        return $r7;
    }

    public static void annotate(thredds.catalog.InvDataset, ucar.nc2.dataset.NetcdfDataset)
    {
        thredds.catalog.InvProperty r7;
        java.util.Iterator $r5;
        java.util.List $r4;
        ucar.nc2.Attribute $r9, $r10;
        java.lang.Object $r6;
        java.lang.String $r2, $r3, $r8, $r11;
        ucar.nc2.dataset.NetcdfDataset r0;
        thredds.catalog.InvDataset r1;
        boolean $z0;

        r1 := @parameter0: thredds.catalog.InvDataset;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        $r2 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void setTitle(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getID()>();

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void setId(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<thredds.catalog.InvDataset: java.util.List getProperties()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (thredds.catalog.InvProperty) $r6;

        $r8 = virtualinvoke r7.<thredds.catalog.InvProperty: java.lang.String getName()>();

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>($r8);

        if null != $r9 goto label2;

        $r10 = new ucar.nc2.Attribute;

        $r11 = virtualinvoke r7.<thredds.catalog.InvProperty: java.lang.String getValue()>();

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>($r8, $r11);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r10);

     label2:
        goto label1;

     label3:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    private thredds.catalog.InvAccess getImageAccess(thredds.catalog.InvDataset, ucar.nc2.util.CancelTask, ucar.nc2.thredds.ThreddsDataFactory$Result)
    {
        java.lang.Object[] $r13;
        thredds.catalog.InvAccess $r4, $r6;
        ucar.nc2.thredds.ThreddsDataFactory$Result r9;
        ucar.nc2.thredds.ThreddsDataFactory r3;
        java.util.ArrayList $r0, $r11, r15;
        java.util.Formatter $r14;
        ucar.nc2.util.CancelTask r8;
        thredds.catalog.ServiceType $r5;
        int $i0;
        java.lang.String $r7;
        thredds.catalog.InvDataset r1;
        java.util.List $r2, $r12;
        thredds.catalog.InvDatasetImpl $r10;

        r3 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r1 := @parameter0: thredds.catalog.InvDataset;

        r8 := @parameter1: ucar.nc2.util.CancelTask;

        r9 := @parameter2: ucar.nc2.thredds.ThreddsDataFactory$Result;

        $r0 = new java.util.ArrayList;

        $r2 = virtualinvoke r1.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        r15 = $r0;

     label1:
        $i0 = interfaceinvoke r15.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        $r4 = specialinvoke r3.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess chooseImageAccess(java.util.List)>(r15);

        if $r4 == null goto label2;

        return $r4;

     label2:
        $r5 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType RESOLVER>;

        $r6 = virtualinvoke r1.<thredds.catalog.InvDataset: thredds.catalog.InvAccess getAccess(thredds.catalog.ServiceType)>($r5);

        if $r6 != null goto label3;

        $r14 = r9.<ucar.nc2.thredds.ThreddsDataFactory$Result: java.util.Formatter errLog>;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r1;

        virtualinvoke $r14.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("No access that could be used for Image Type %s %n", $r13);

        return null;

     label3:
        $r7 = virtualinvoke $r6.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

        $r10 = specialinvoke r3.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvDatasetImpl openResolver(java.lang.String,ucar.nc2.util.CancelTask,ucar.nc2.thredds.ThreddsDataFactory$Result)>($r7, r8, r9);

        if $r10 != null goto label4;

        return null;

     label4:
        $r11 = new java.util.ArrayList;

        $r12 = virtualinvoke r1.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>($r12);

        r15 = $r11;

        goto label1;

     label5:
        return null;
    }

    private thredds.catalog.InvAccess chooseImageAccess(java.util.List)
    {
        thredds.catalog.DataFormatType $r2, $r4, $r6;
        thredds.catalog.InvAccess $r3, $r5, $r7, $r9;
        ucar.nc2.thredds.ThreddsDataFactory r0;
        java.util.List r1;
        thredds.catalog.ServiceType $r8;
        int $i0;
        java.lang.String $r10;

        r0 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r1 := @parameter0: java.util.List;

        $r2 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType JPEG>;

        $r3 = specialinvoke r0.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByDataFormatType(java.util.List,thredds.catalog.DataFormatType)>(r1, $r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GIF>;

        $r5 = specialinvoke r0.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByDataFormatType(java.util.List,thredds.catalog.DataFormatType)>(r1, $r4);

        if $r5 == null goto label2;

        return $r5;

     label2:
        $r6 = <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType TIFF>;

        $r7 = specialinvoke r0.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByDataFormatType(java.util.List,thredds.catalog.DataFormatType)>(r1, $r6);

        if $r7 == null goto label3;

        return $r7;

     label3:
        $r8 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType ADDE>;

        $r9 = specialinvoke r0.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess findAccessByServiceType(java.util.List,thredds.catalog.ServiceType)>(r1, $r8);

        if $r9 == null goto label4;

        $r10 = virtualinvoke $r9.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

        $i0 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String)>("image");

        if $i0 <= 0 goto label4;

        return $r9;

     label4:
        return $r9;
    }

    private thredds.catalog.InvAccess findAccessByServiceType(java.util.List, thredds.catalog.ServiceType)
    {
        java.util.Iterator $r1;
        thredds.catalog.InvService $r6;
        thredds.catalog.InvAccess r3;
        ucar.nc2.thredds.ThreddsDataFactory r9;
        java.util.List r0;
        thredds.catalog.ServiceType r4, $r7;
        java.lang.Object $r2;
        java.lang.String $r5, $r8;
        boolean $z0, $z1;

        r9 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: thredds.catalog.ServiceType;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (thredds.catalog.InvAccess) $r2;

        $r5 = virtualinvoke r4.<thredds.catalog.ServiceType: java.lang.String toString()>();

        $r6 = virtualinvoke r3.<thredds.catalog.InvAccess: thredds.catalog.InvService getService()>();

        $r7 = virtualinvoke $r6.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r8 = virtualinvoke $r7.<thredds.catalog.ServiceType: java.lang.String toString()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private thredds.catalog.InvAccess findAccessByDataFormatType(java.util.List, thredds.catalog.DataFormatType)
    {
        java.util.Iterator $r1;
        thredds.catalog.DataFormatType r4, $r6;
        thredds.catalog.InvAccess r3;
        ucar.nc2.thredds.ThreddsDataFactory r8;
        java.util.List r0;
        java.lang.Object $r2;
        java.lang.String $r5, $r7;
        boolean $z0, $z1;

        r8 := @this: ucar.nc2.thredds.ThreddsDataFactory;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: thredds.catalog.DataFormatType;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (thredds.catalog.InvAccess) $r2;

        $r5 = virtualinvoke r4.<thredds.catalog.DataFormatType: java.lang.String toString()>();

        $r6 = virtualinvoke r3.<thredds.catalog.InvAccess: thredds.catalog.DataFormatType getDataFormatType()>();

        $r7 = virtualinvoke $r6.<thredds.catalog.DataFormatType: java.lang.String toString()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        <ucar.nc2.thredds.ThreddsDataFactory: java.lang.String SCHEME> = "thredds:";

        <ucar.nc2.thredds.ThreddsDataFactory: boolean preferCdm> = 0;

        <ucar.nc2.thredds.ThreddsDataFactory: boolean debugOpen> = 0;

        <ucar.nc2.thredds.ThreddsDataFactory: boolean debugTypeOpen> = 0;

        <ucar.nc2.thredds.ThreddsDataFactory: boolean enhanceMode> = 0;

        return;
    }
}
