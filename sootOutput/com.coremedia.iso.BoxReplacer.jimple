public class com.coremedia.iso.BoxReplacer extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/coremedia/iso/BoxReplacer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.BoxReplacer: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>()
    {
        com.coremedia.iso.BoxReplacer r0;

        r0 := @this: com.coremedia.iso.BoxReplacer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void replace(java.util.Map, java.io.File) throws java.io.IOException
    {
        java.io.RandomAccessFile $r2, $r22;
        byte $b3;
        java.lang.Long $r18, $r30;
        java.util.Map r7;
        boolean $z0, $z1, $z2;
        java.util.Set $r8, $r24;
        com.googlecode.mp4parser.FileDataSourceImpl $r1;
        java.util.HashMap $r5, $r6;
        long $l0, $l1, $l2, $l4;
        java.lang.AssertionError $r21;
        com.coremedia.iso.IsoFile $r0;
        java.lang.String $r12, $r14, $r17, r32;
        java.util.Map$Entry r31;
        java.util.Iterator $r9, $r25;
        com.coremedia.iso.boxes.Box $r13, $r16, $r20, r28;
        java.io.File r3;
        java.lang.Object $r10, $r11, $r15, $r19, $r26, $r27, $r29;
        java.nio.channels.FileChannel $r4, $r23;

        r7 := @parameter0: java.util.Map;

        r3 := @parameter1: java.io.File;

        $r0 = new com.coremedia.iso.IsoFile;

        $r1 = new com.googlecode.mp4parser.FileDataSourceImpl;

        $r2 = new java.io.RandomAccessFile;

        specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r3, "r");

        $r4 = virtualinvoke $r2.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        specialinvoke $r1.<com.googlecode.mp4parser.FileDataSourceImpl: void <init>(java.nio.channels.FileChannel)>($r4);

        specialinvoke $r0.<com.coremedia.iso.IsoFile: void <init>(com.googlecode.mp4parser.DataSource)>($r1);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r8 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        $r13 = staticinvoke <com.googlecode.mp4parser.util.Path: com.coremedia.iso.boxes.Box getPath(com.coremedia.iso.boxes.Container,java.lang.String)>($r0, $r12);

        $r14 = staticinvoke <com.googlecode.mp4parser.util.Path: java.lang.String createPath(com.coremedia.iso.boxes.Box)>($r13);

        $r15 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (com.coremedia.iso.boxes.Box) $r15;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r16);

        $r17 = staticinvoke <com.googlecode.mp4parser.util.Path: java.lang.String createPath(com.coremedia.iso.boxes.Box)>($r13);

        $l0 = interfaceinvoke $r13.<com.coremedia.iso.boxes.Box: long getOffset()>();

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18);

        $z0 = <com.coremedia.iso.BoxReplacer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $l1 = interfaceinvoke $r13.<com.coremedia.iso.boxes.Box: long getSize()>();

        $r19 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (com.coremedia.iso.boxes.Box) $r19;

        $l2 = interfaceinvoke $r20.<com.coremedia.iso.boxes.Box: long getSize()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label2;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label2:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        virtualinvoke $r0.<com.coremedia.iso.IsoFile: void close()>();

        $r22 = new java.io.RandomAccessFile;

        specialinvoke $r22.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r3, "rw");

        $r23 = virtualinvoke $r22.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        $r24 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r25 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r26 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.lang.String) $r26;

        $r27 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        r28 = (com.coremedia.iso.boxes.Box) $r27;

        $r29 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        $r30 = (java.lang.Long) $r29;

        $l4 = virtualinvoke $r30.<java.lang.Long: long longValue()>();

        virtualinvoke $r23.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>($l4);

        interfaceinvoke r28.<com.coremedia.iso.boxes.Box: void getBox(java.nio.channels.WritableByteChannel)>($r23);

     label4:
        $z1 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        virtualinvoke $r23.<java.nio.channels.FileChannel: void close()>();

        return;
    }
}
