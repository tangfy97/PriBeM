public class org.apache.xerces.dom.RangeImpl extends java.lang.Object implements org.w3c.dom.ranges.Range
{
    private org.apache.xerces.dom.DocumentImpl fDocument;
    private org.w3c.dom.Node fStartContainer;
    private org.w3c.dom.Node fEndContainer;
    private int fStartOffset;
    private int fEndOffset;
    private boolean fDetach;
    private org.w3c.dom.Node fInsertNode;
    private org.w3c.dom.Node fDeleteNode;
    private org.w3c.dom.Node fSplitNode;
    private boolean fInsertedFromRange;
    private org.w3c.dom.Node fRemoveChild;
    static final int EXTRACT_CONTENTS;
    static final int CLONE_CONTENTS;
    static final int DELETE_CONTENTS;

    public void <init>(org.apache.xerces.dom.DocumentImpl)
    {
        org.apache.xerces.dom.DocumentImpl r1;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.apache.xerces.dom.DocumentImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach> = 0;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fInsertNode> = null;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fDeleteNode> = null;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fSplitNode> = null;

        r0.<org.apache.xerces.dom.RangeImpl: boolean fInsertedFromRange> = 0;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fRemoveChild> = null;

        r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument> = r1;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = r1;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = r1;

        r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = 0;

        r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = 0;

        r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach> = 0;

        return;
    }

    public org.w3c.dom.Node getStartContainer()
    {
        org.w3c.dom.Node $r1;
        org.w3c.dom.DOMException $r2;
        java.lang.String $r3;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r2 = new org.w3c.dom.DOMException;

        $r3 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r3);

        throw $r2;

     label1:
        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        return $r1;
    }

    public int getStartOffset()
    {
        org.w3c.dom.DOMException $r1;
        int $i0;
        java.lang.String $r2;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r1 = new org.w3c.dom.DOMException;

        $r2 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r1.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r2);

        throw $r1;

     label1:
        $i0 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        return $i0;
    }

    public org.w3c.dom.Node getEndContainer()
    {
        org.w3c.dom.Node $r1;
        org.w3c.dom.DOMException $r2;
        java.lang.String $r3;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r2 = new org.w3c.dom.DOMException;

        $r3 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r3);

        throw $r2;

     label1:
        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        return $r1;
    }

    public int getEndOffset()
    {
        org.w3c.dom.DOMException $r1;
        int $i0;
        java.lang.String $r2;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r1 = new org.w3c.dom.DOMException;

        $r2 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r1.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r2);

        throw $r1;

     label1:
        $i0 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        return $i0;
    }

    public boolean getCollapsed()
    {
        org.w3c.dom.Node $r1, $r2;
        org.w3c.dom.DOMException $r3;
        int $i0, $i1;
        java.lang.String $r4;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r3 = new org.w3c.dom.DOMException;

        $r4 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r4);

        throw $r3;

     label1:
        $r2 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r2 != $r1 goto label2;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i0 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        if $i1 != $i0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public org.w3c.dom.Node getCommonAncestorContainer()
    {
        java.util.ArrayList $r12, $r13;
        org.w3c.dom.Node r7, r8, $r10;
        org.w3c.dom.DOMException $r11;
        int $i0, $i1, i2, i3, $i5, $i7;
        java.lang.String $r6;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0;
        java.lang.Object $r3, $r4, r9;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r11 = new org.w3c.dom.DOMException;

        $r6 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r6);

        throw $r11;

     label1:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r7 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        goto label3;

     label2:
        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        r7 = interfaceinvoke r7.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label3:
        if r7 != null goto label2;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r8 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        goto label5;

     label4:
        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        r8 = interfaceinvoke r8.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label5:
        if r8 != null goto label4;

        $i0 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

        $i1 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

        r9 = null;

        goto label7;

     label6:
        $r3 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        if $r3 != $r4 goto label8;

        r9 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $i5 = (int) -1;

        i2 = i2 + $i5;

        $i7 = (int) -1;

        i3 = i3 + $i7;

     label7:
        if i2 < 0 goto label8;

        if i3 >= 0 goto label6;

     label8:
        $r10 = (org.w3c.dom.Node) r9;

        return $r10;
    }

    public void setStart(org.w3c.dom.Node, int) throws org.w3c.dom.ranges.RangeException, org.w3c.dom.DOMException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r10;
        org.w3c.dom.Document $r6;
        org.w3c.dom.Node r2, $r3, $r4, $r14;
        org.w3c.dom.DOMException $r8, $r12;
        int i0, $i1, $i2;
        java.lang.String $r9, $r11, $r13;
        org.apache.xerces.dom.DocumentImpl $r1, $r5, $r7;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label3;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label1;

        $r12 = new org.w3c.dom.DOMException;

        $r13 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r13);

        throw $r12;

     label1:
        $z2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainer(org.w3c.dom.Node)>(r2);

        if $z2 != 0 goto label2;

        $r10 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r11 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r10.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r11);

        throw $r10;

     label2:
        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r5 == $r6 goto label3;

        $r7 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if $r7 == r2 goto label3;

        $r8 = new org.w3c.dom.DOMException;

        $r9 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r8.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r9);

        throw $r8;

     label3:
        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void checkIndex(org.w3c.dom.Node,int)>(r2, i0);

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = r2;

        r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = i0;

        $r14 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getCommonAncestorContainer()>();

        if $r14 == null goto label4;

        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r4 != $r3 goto label5;

        $i2 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i2 >= $i1 goto label5;

     label4:
        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(1);

     label5:
        return;
    }

    public void setEnd(org.w3c.dom.Node, int) throws org.w3c.dom.ranges.RangeException, org.w3c.dom.DOMException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r10;
        org.w3c.dom.Document $r6;
        org.w3c.dom.Node r2, $r3, $r4, $r14;
        org.w3c.dom.DOMException $r8, $r12;
        int i0, $i1, $i2;
        java.lang.String $r9, $r11, $r13;
        org.apache.xerces.dom.DocumentImpl $r1, $r5, $r7;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label3;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label1;

        $r12 = new org.w3c.dom.DOMException;

        $r13 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r13);

        throw $r12;

     label1:
        $z2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainer(org.w3c.dom.Node)>(r2);

        if $z2 != 0 goto label2;

        $r10 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r11 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r10.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r11);

        throw $r10;

     label2:
        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r5 == $r6 goto label3;

        $r7 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if $r7 == r2 goto label3;

        $r8 = new org.w3c.dom.DOMException;

        $r9 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r8.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r9);

        throw $r8;

     label3:
        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void checkIndex(org.w3c.dom.Node,int)>(r2, i0);

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = r2;

        r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = i0;

        $r14 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getCommonAncestorContainer()>();

        if $r14 == null goto label4;

        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r4 != $r3 goto label5;

        $i2 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i2 >= $i1 goto label5;

     label4:
        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(0);

     label5:
        return;
    }

    public void setStartBefore(org.w3c.dom.Node) throws org.w3c.dom.ranges.RangeException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r6;
        org.w3c.dom.Document $r9;
        org.w3c.dom.Node r2, $r3, $r4, $r5, $r15, r16;
        org.w3c.dom.DOMException $r11, $r13;
        int $i0, $i1, $i2, i3;
        java.lang.String $r7, $r12, $r14;
        org.apache.xerces.dom.DocumentImpl $r1, $r8, $r10;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label1;

        $r13 = new org.w3c.dom.DOMException;

        $r14 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r13.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r14);

        throw $r13;

     label1:
        $z2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean hasLegalRootContainer(org.w3c.dom.Node)>(r2);

        if $z2 == 0 goto label2;

        $z3 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainedNode(org.w3c.dom.Node)>(r2);

        if $z3 != 0 goto label3;

     label2:
        $r6 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r7 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r6.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r7);

        throw $r6;

     label3:
        $r8 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r9 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r8 == $r9 goto label4;

        $r10 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if $r10 == r2 goto label4;

        $r11 = new org.w3c.dom.DOMException;

        $r12 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r12);

        throw $r11;

     label4:
        $r15 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = $r15;

        i3 = 0;

        r16 = r2;

        goto label6;

     label5:
        i3 = i3 + 1;

        r16 = interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label6:
        if r16 != null goto label5;

        $i0 = i3 - 1;

        r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i0;

        $r3 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getCommonAncestorContainer()>();

        if $r3 == null goto label7;

        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r5 != $r4 goto label8;

        $i2 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i2 >= $i1 goto label8;

     label7:
        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(1);

     label8:
        return;
    }

    public void setStartAfter(org.w3c.dom.Node) throws org.w3c.dom.ranges.RangeException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r6;
        org.w3c.dom.Document $r9;
        org.w3c.dom.Node r2, $r3, $r4, $r5, $r15, r16;
        org.w3c.dom.DOMException $r11, $r13;
        int $i0, $i1, i2;
        java.lang.String $r7, $r12, $r14;
        org.apache.xerces.dom.DocumentImpl $r1, $r8, $r10;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label1;

        $r13 = new org.w3c.dom.DOMException;

        $r14 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r13.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r14);

        throw $r13;

     label1:
        $z2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean hasLegalRootContainer(org.w3c.dom.Node)>(r2);

        if $z2 == 0 goto label2;

        $z3 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainedNode(org.w3c.dom.Node)>(r2);

        if $z3 != 0 goto label3;

     label2:
        $r6 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r7 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r6.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r7);

        throw $r6;

     label3:
        $r8 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r9 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r8 == $r9 goto label4;

        $r10 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if $r10 == r2 goto label4;

        $r11 = new org.w3c.dom.DOMException;

        $r12 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r12);

        throw $r11;

     label4:
        $r15 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = $r15;

        i2 = 0;

        r16 = r2;

        goto label6;

     label5:
        i2 = i2 + 1;

        r16 = interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label6:
        if r16 != null goto label5;

        r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = i2;

        $r3 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getCommonAncestorContainer()>();

        if $r3 == null goto label7;

        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r5 != $r4 goto label8;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i0 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i1 >= $i0 goto label8;

     label7:
        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(1);

     label8:
        return;
    }

    public void setEndBefore(org.w3c.dom.Node) throws org.w3c.dom.ranges.RangeException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r6;
        org.w3c.dom.Document $r9;
        org.w3c.dom.Node r2, $r3, $r4, $r5, $r15, r16;
        org.w3c.dom.DOMException $r11, $r13;
        int $i0, $i1, $i2, i3;
        java.lang.String $r7, $r12, $r14;
        org.apache.xerces.dom.DocumentImpl $r1, $r8, $r10;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label1;

        $r13 = new org.w3c.dom.DOMException;

        $r14 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r13.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r14);

        throw $r13;

     label1:
        $z2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean hasLegalRootContainer(org.w3c.dom.Node)>(r2);

        if $z2 == 0 goto label2;

        $z3 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainedNode(org.w3c.dom.Node)>(r2);

        if $z3 != 0 goto label3;

     label2:
        $r6 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r7 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r6.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r7);

        throw $r6;

     label3:
        $r8 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r9 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r8 == $r9 goto label4;

        $r10 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if $r10 == r2 goto label4;

        $r11 = new org.w3c.dom.DOMException;

        $r12 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r12);

        throw $r11;

     label4:
        $r15 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = $r15;

        i3 = 0;

        r16 = r2;

        goto label6;

     label5:
        i3 = i3 + 1;

        r16 = interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label6:
        if r16 != null goto label5;

        $i0 = i3 - 1;

        r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i0;

        $r3 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getCommonAncestorContainer()>();

        if $r3 == null goto label7;

        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r5 != $r4 goto label8;

        $i2 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i2 >= $i1 goto label8;

     label7:
        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(0);

     label8:
        return;
    }

    public void setEndAfter(org.w3c.dom.Node) throws org.w3c.dom.ranges.RangeException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r6;
        org.w3c.dom.Document $r9;
        org.w3c.dom.Node r2, $r3, $r4, $r5, $r15, r16;
        org.w3c.dom.DOMException $r11, $r13;
        int $i0, $i1, i2;
        java.lang.String $r7, $r12, $r14;
        org.apache.xerces.dom.DocumentImpl $r1, $r8, $r10;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label1;

        $r13 = new org.w3c.dom.DOMException;

        $r14 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r13.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r14);

        throw $r13;

     label1:
        $z2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean hasLegalRootContainer(org.w3c.dom.Node)>(r2);

        if $z2 == 0 goto label2;

        $z3 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainedNode(org.w3c.dom.Node)>(r2);

        if $z3 != 0 goto label3;

     label2:
        $r6 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r7 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r6.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r7);

        throw $r6;

     label3:
        $r8 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r9 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r8 == $r9 goto label4;

        $r10 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if $r10 == r2 goto label4;

        $r11 = new org.w3c.dom.DOMException;

        $r12 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r12);

        throw $r11;

     label4:
        $r15 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = $r15;

        i2 = 0;

        r16 = r2;

        goto label6;

     label5:
        i2 = i2 + 1;

        r16 = interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label6:
        if r16 != null goto label5;

        r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = i2;

        $r3 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getCommonAncestorContainer()>();

        if $r3 == null goto label7;

        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r5 != $r4 goto label8;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i0 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i1 >= $i0 goto label8;

     label7:
        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(0);

     label8:
        return;
    }

    public void collapse(boolean)
    {
        org.w3c.dom.Node $r1, $r2;
        org.w3c.dom.DOMException $r3;
        int $i0, $i1;
        java.lang.String $r4;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, z1;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        z1 := @parameter0: boolean;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r3 = new org.w3c.dom.DOMException;

        $r4 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r4);

        throw $r3;

     label1:
        if z1 == 0 goto label2;

        $r2 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = $r2;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i1;

        goto label3;

     label2:
        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = $r1;

        $i0 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i0;

     label3:
        return;
    }

    public void selectNode(org.w3c.dom.Node) throws org.w3c.dom.ranges.RangeException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r4;
        org.w3c.dom.Document $r7;
        org.w3c.dom.Node r2, $r3, $r13, r14;
        org.w3c.dom.DOMException $r9, $r11;
        int $i0, $i1, $i2, i3;
        java.lang.String $r5, $r10, $r12;
        org.apache.xerces.dom.DocumentImpl $r1, $r6, $r8;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label1;

        $r11 = new org.w3c.dom.DOMException;

        $r12 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r12);

        throw $r11;

     label1:
        $r3 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $z2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainer(org.w3c.dom.Node)>($r3);

        if $z2 == 0 goto label2;

        $z3 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainedNode(org.w3c.dom.Node)>(r2);

        if $z3 != 0 goto label3;

     label2:
        $r4 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r5 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r4.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r5);

        throw $r4;

     label3:
        $r6 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r7 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r6 == $r7 goto label4;

        $r8 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if $r8 == r2 goto label4;

        $r9 = new org.w3c.dom.DOMException;

        $r10 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r9.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r10);

        throw $r9;

     label4:
        $r13 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r13 == null goto label7;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = $r13;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = $r13;

        i3 = 0;

        r14 = r2;

        goto label6;

     label5:
        i3 = i3 + 1;

        r14 = interfaceinvoke r14.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label6:
        if r14 != null goto label5;

        $i0 = i3 - 1;

        r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i0;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i2 = $i1 + 1;

        r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i2;

     label7:
        return;
    }

    public void selectNodeContents(org.w3c.dom.Node) throws org.w3c.dom.ranges.RangeException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r8;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Node r2, $r12, r13;
        org.w3c.dom.DOMException $r6, $r10;
        int i0;
        java.lang.String $r7, $r9, $r11;
        org.apache.xerces.dom.DocumentImpl $r1, $r3, $r5;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label3;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label1;

        $r10 = new org.w3c.dom.DOMException;

        $r11 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r10.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r11);

        throw $r10;

     label1:
        $z2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: boolean isLegalContainer(org.w3c.dom.Node)>(r2);

        if $z2 != 0 goto label2;

        $r8 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r9 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r8.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r9);

        throw $r8;

     label2:
        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r4 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r3 == $r4 goto label3;

        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if $r5 == r2 goto label3;

        $r6 = new org.w3c.dom.DOMException;

        $r7 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r6.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r7);

        throw $r6;

     label3:
        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = r2;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = r2;

        $r12 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = 0;

        if $r12 != null goto label4;

        r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = 0;

        goto label7;

     label4:
        i0 = 0;

        r13 = $r12;

        goto label6;

     label5:
        i0 = i0 + 1;

        r13 = interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label6:
        if r13 != null goto label5;

        r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = i0;

     label7:
        return;
    }

    public short compareBoundaryPoints(short, org.w3c.dom.ranges.Range) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Document $r5, $r18;
        boolean $z0, $z1;
        org.w3c.dom.ranges.Range r2;
        short s0, $s8, $s10, $s12, $s18;
        org.w3c.dom.Node $r4, $r7, $r8, $r12, $r13, $r17, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29;
        org.w3c.dom.DOMException $r30, $r31;
        int $i1, $i2, i3, i4, i5, $i6, $i14, $i16;
        java.lang.String $r10, $r15;
        org.apache.xerces.dom.DocumentImpl $r1, $r3, $r6, $r11, $r16;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        s0 := @parameter0: short;

        r2 := @parameter1: org.w3c.dom.ranges.Range;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r1.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label04;

        $z1 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label01;

        $r30 = new org.w3c.dom.DOMException;

        $r15 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r30.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r15);

        throw $r30;

     label01:
        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r4 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getStartContainer()>();

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r3 == $r5 goto label02;

        $r11 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r12 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getStartContainer()>();

        if $r11 == $r12 goto label02;

        $r13 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getStartContainer()>();

        if $r13 != null goto label03;

     label02:
        $r16 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r17 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getEndContainer()>();

        $r18 = interfaceinvoke $r17.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r16 == $r18 goto label04;

        $r6 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r7 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getEndContainer()>();

        if $r6 == $r7 goto label04;

        $r8 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getStartContainer()>();

        if $r8 == null goto label04;

     label03:
        $r31 = new org.w3c.dom.DOMException;

        $r10 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r31.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r10);

        throw $r31;

     label04:
        if s0 != 0 goto label05;

        r19 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getStartContainer()>();

        r20 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        i3 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: int getStartOffset()>();

        i4 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        goto label08;

     label05:
        if s0 != 1 goto label06;

        r19 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getStartContainer()>();

        r20 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        i3 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: int getStartOffset()>();

        i4 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        goto label08;

     label06:
        $i6 = (int) s0;

        if $i6 != 3 goto label07;

        r19 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getEndContainer()>();

        r20 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        i3 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: int getEndOffset()>();

        i4 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        goto label08;

     label07:
        r19 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: org.w3c.dom.Node getEndContainer()>();

        r20 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        i3 = interfaceinvoke r2.<org.w3c.dom.ranges.Range: int getEndOffset()>();

        i4 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

     label08:
        if r19 != r20 goto label11;

        if i3 >= i4 goto label09;

        return 1;

     label09:
        if i3 != i4 goto label10;

        return 0;

     label10:
        $s8 = (short) -1;

        return $s8;

     label11:
        r21 = r20;

        r22 = interfaceinvoke r20.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label15;

     label12:
        if r22 != r19 goto label14;

        $i1 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r21, r19);

        if i3 > $i1 goto label13;

        return 1;

     label13:
        $s10 = (short) -1;

        return $s10;

     label14:
        r21 = r22;

        r22 = interfaceinvoke r22.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label15:
        if r22 != null goto label12;

        r23 = r19;

        r24 = interfaceinvoke r19.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label19;

     label16:
        if r24 != r20 goto label18;

        $i2 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r23, r20);

        if $i2 >= i4 goto label17;

        return 1;

     label17:
        $s12 = (short) -1;

        return $s12;

     label18:
        r23 = r24;

        r24 = interfaceinvoke r24.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label19:
        if r24 != null goto label16;

        i5 = 0;

        r25 = r19;

        goto label21;

     label20:
        i5 = i5 + 1;

        r25 = interfaceinvoke r25.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label21:
        if r25 != null goto label20;

        r26 = r20;

        goto label23;

     label22:
        $i14 = (int) -1;

        i5 = i5 + $i14;

        r26 = interfaceinvoke r26.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label23:
        if r26 != null goto label22;

        goto label25;

     label24:
        r19 = interfaceinvoke r19.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $i16 = (int) -1;

        i5 = i5 + $i16;

     label25:
        if i5 > 0 goto label24;

        goto label27;

     label26:
        r20 = interfaceinvoke r20.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        i5 = i5 + 1;

     label27:
        if i5 < 0 goto label26;

        r27 = interfaceinvoke r19.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r28 = interfaceinvoke r20.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label29;

     label28:
        r19 = r27;

        r20 = r28;

        r27 = interfaceinvoke r27.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r28 = interfaceinvoke r28.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label29:
        if r27 != r28 goto label28;

        r29 = interfaceinvoke r19.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label32;

     label30:
        if r29 != r20 goto label31;

        return 1;

     label31:
        r29 = interfaceinvoke r29.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label32:
        if r29 != null goto label30;

        $s18 = (short) -1;

        return $s18;
    }

    public void deleteContents() throws org.w3c.dom.DOMException
    {
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.DocumentFragment traverseContents(int)>(3);

        return;
    }

    public org.w3c.dom.DocumentFragment extractContents() throws org.w3c.dom.DOMException
    {
        org.w3c.dom.DocumentFragment $r1;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $r1 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.DocumentFragment traverseContents(int)>(1);

        return $r1;
    }

    public org.w3c.dom.DocumentFragment cloneContents() throws org.w3c.dom.DOMException
    {
        org.w3c.dom.DocumentFragment $r1;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $r1 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.DocumentFragment traverseContents(int)>(2);

        return $r1;
    }

    public void insertNode(org.w3c.dom.Node) throws org.w3c.dom.DOMException, org.w3c.dom.ranges.RangeException
    {
        org.w3c.dom.Document $r33;
        short $s0, $s1;
        java.lang.String $r21, $r22, $r26, $r27, $r35, $r37, $r39;
        org.apache.xerces.dom.RangeExceptionImpl $r46;
        boolean $z0, $z1;
        org.w3c.dom.Node r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r23, $r24, $r28, $r29, $r30, $r40, $r41, $r42, r43;
        org.w3c.dom.DOMException $r44, $r45;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, i20, $i21, $i22, $i23, $i24, $i25;
        org.apache.xerces.dom.DocumentImpl $r2, $r32;
        org.apache.xerces.dom.RangeImpl r1;
        org.w3c.dom.NodeList $r11, $r14, $r17, $r31;
        org.apache.xerces.dom.TextImpl $r20, $r25;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label01;

        return;

     label01:
        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $r2 = r1.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r2.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label05;

        $z1 = r1.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label02;

        $r44 = new org.w3c.dom.DOMException;

        $r37 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r44.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r37);

        throw $r44;

     label02:
        $r32 = r1.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r33 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r32 == $r33 goto label03;

        $r45 = new org.w3c.dom.DOMException;

        $r35 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r45.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r35);

        throw $r45;

     label03:
        $i21 = (int) $s0;

        if $i21 == 2 goto label04;

        $i22 = (int) $s0;

        if $i22 == 6 goto label04;

        $i23 = (int) $s0;

        if $i23 == 12 goto label04;

        $i24 = (int) $s0;

        if $i24 != 9 goto label05;

     label04:
        $r46 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r39 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r46.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r39);

        throw $r46;

     label05:
        i18 = 0;

        r1.<org.apache.xerces.dom.RangeImpl: boolean fInsertedFromRange> = 1;

        $r3 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $s1 = interfaceinvoke $r3.<org.w3c.dom.Node: short getNodeType()>();

        $i25 = (int) $s1;

        if $i25 != 3 goto label10;

        $r15 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r16 = interfaceinvoke $r15.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r17 = interfaceinvoke $r16.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i8 = interfaceinvoke $r17.<org.w3c.dom.NodeList: int getLength()>();

        $r18 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r19 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(0);

        $r20 = (org.apache.xerces.dom.TextImpl) $r19;

        $r21 = interfaceinvoke $r19.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i9 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String substring(int)>($i9);

        virtualinvoke $r20.<org.apache.xerces.dom.TextImpl: void setNodeValueInternal(java.lang.String)>($r22);

        $r23 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r25 = (org.apache.xerces.dom.TextImpl) $r23;

        $r24 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r26 = interfaceinvoke $r24.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i10 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String substring(int,int)>(0, $i10);

        virtualinvoke $r25.<org.apache.xerces.dom.TextImpl: void setNodeValueInternal(java.lang.String)>($r27);

        $r28 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r29 = interfaceinvoke $r28.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        if $r29 == null goto label06;

        if $r16 == null goto label07;

        interfaceinvoke $r16.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r29);

        interfaceinvoke $r16.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r19, $r29);

        goto label07;

     label06:
        if $r16 == null goto label07;

        interfaceinvoke $r16.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r0);

        interfaceinvoke $r16.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

     label07:
        $r40 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $r41 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if $r40 != $r41 goto label08;

        r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = $r19;

        $i16 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i15 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i17 = $i16 - $i15;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i17;

        goto label09;

     label08:
        $r30 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r30 != $r16 goto label09;

        $i11 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $r31 = interfaceinvoke $r16.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i12 = interfaceinvoke $r31.<org.w3c.dom.NodeList: int getLength()>();

        $i13 = $i12 - $i8;

        $i14 = $i11 + $i13;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i14;

     label09:
        $r42 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $i19 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: void signalSplitData(org.w3c.dom.Node,org.w3c.dom.Node,int)>($r42, $r19, $i19);

        goto label17;

     label10:
        $r5 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $r4 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if $r5 != $r4 goto label11;

        $r13 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $r14 = interfaceinvoke $r13.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i18 = interfaceinvoke $r14.<org.w3c.dom.NodeList: int getLength()>();

     label11:
        $r6 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        r43 = interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        i20 = 0;

        goto label13;

     label12:
        r43 = interfaceinvoke r43.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        i20 = i20 + 1;

     label13:
        $i2 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if i20 >= $i2 goto label14;

        if r43 != null goto label12;

     label14:
        if r43 == null goto label15;

        $r12 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        interfaceinvoke $r12.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, r43);

        goto label16;

     label15:
        $r7 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        interfaceinvoke $r7.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r0);

     label16:
        $r9 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $r8 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if $r9 != $r8 goto label17;

        $i3 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        if $i3 == 0 goto label17;

        $i4 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $r10 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $r11 = interfaceinvoke $r10.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i5 = interfaceinvoke $r11.<org.w3c.dom.NodeList: int getLength()>();

        $i6 = $i5 - i18;

        $i7 = $i4 + $i6;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i7;

     label17:
        r1.<org.apache.xerces.dom.RangeImpl: boolean fInsertedFromRange> = 0;

        return;
    }

    public void surroundContents(org.w3c.dom.Node) throws org.w3c.dom.DOMException, org.w3c.dom.ranges.RangeException
    {
        org.apache.xerces.dom.RangeExceptionImpl $r17, $r18;
        short $s0, $s1, $s2;
        org.w3c.dom.Node r0, $r3, $r4, $r8, $r9, r14, r15;
        org.w3c.dom.DOMException $r16;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r7, $r11, $r13;
        org.apache.xerces.dom.DocumentImpl $r2;
        org.apache.xerces.dom.RangeImpl r1;
        boolean $z0, $z1;
        org.w3c.dom.DocumentFragment $r5;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label1;

        return;

     label1:
        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $r2 = r1.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $z0 = $r2.<org.apache.xerces.dom.DocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label4;

        $z1 = r1.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z1 == 0 goto label2;

        $r16 = new org.w3c.dom.DOMException;

        $r11 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r16.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r11);

        throw $r16;

     label2:
        $i3 = (int) $s0;

        if $i3 == 2 goto label3;

        $i4 = (int) $s0;

        if $i4 == 6 goto label3;

        $i5 = (int) $s0;

        if $i5 == 12 goto label3;

        $i6 = (int) $s0;

        if $i6 == 10 goto label3;

        $i7 = (int) $s0;

        if $i7 == 9 goto label3;

        $i8 = (int) $s0;

        if $i8 != 11 goto label4;

     label3:
        $r17 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r13 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_NODE_TYPE_ERR", null);

        specialinvoke $r17.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(2, $r13);

        throw $r17;

     label4:
        r14 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        r15 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $r3 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $s1 = interfaceinvoke $r3.<org.w3c.dom.Node: short getNodeType()>();

        $i9 = (int) $s1;

        if $i9 != 3 goto label5;

        $r9 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        r14 = interfaceinvoke $r9.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label5:
        $r4 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $s2 = interfaceinvoke $r4.<org.w3c.dom.Node: short getNodeType()>();

        $i10 = (int) $s2;

        if $i10 != 3 goto label6;

        $r8 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        r15 = interfaceinvoke $r8.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label6:
        if r14 == r15 goto label7;

        $r18 = new org.apache.xerces.dom.RangeExceptionImpl;

        $r7 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "BAD_BOUNDARYPOINTS_ERR", null);

        specialinvoke $r18.<org.apache.xerces.dom.RangeExceptionImpl: void <init>(short,java.lang.String)>(1, $r7);

        throw $r18;

     label7:
        $r5 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.DocumentFragment extractContents()>();

        virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: void insertNode(org.w3c.dom.Node)>(r0);

        interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: void selectNode(org.w3c.dom.Node)>(r0);

        return;
    }

    public org.w3c.dom.ranges.Range cloneRange()
    {
        org.w3c.dom.ranges.Range $r2;
        org.w3c.dom.Node $r3, $r4;
        org.w3c.dom.DOMException $r5;
        int $i0, $i1;
        java.lang.String $r6;
        org.apache.xerces.dom.DocumentImpl $r1;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r5 = new org.w3c.dom.DOMException;

        $r6 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r6);

        throw $r5;

     label1:
        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r2 = virtualinvoke $r1.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.ranges.Range createRange()>();

        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $i0 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        interfaceinvoke $r2.<org.w3c.dom.ranges.Range: void setStart(org.w3c.dom.Node,int)>($r3, $i0);

        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        interfaceinvoke $r2.<org.w3c.dom.ranges.Range: void setEnd(org.w3c.dom.Node,int)>($r4, $i1);

        return $r2;
    }

    public java.lang.String toString()
    {
        boolean $z0;
        short $s0, $s2, $s3, $s4, $s6, $s7, $s10, $s14;
        java.lang.StringBuffer $r31;
        org.w3c.dom.Node $r2, $r3, $r4, $r5, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r21, $r22, r25, r26, r27, $r28;
        org.w3c.dom.DOMException $r30;
        int $i1, $i5, $i8, $i9, $i11, $i12, i13, i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25;
        java.lang.String $r6, $r7, $r8, $r11, $r12, $r18, $r19, $r20, $r24, $r29;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label01;

        $r30 = new org.w3c.dom.DOMException;

        $r24 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r30.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r24);

        throw $r30;

     label01:
        r25 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        r26 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $s0 = interfaceinvoke $r2.<org.w3c.dom.Node: short getNodeType()>();

        $i16 = (int) $s0;

        if $i16 == 3 goto label02;

        $r21 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $s10 = interfaceinvoke $r21.<org.w3c.dom.Node: short getNodeType()>();

        $i17 = (int) $s10;

        if $i17 != 4 goto label04;

     label02:
        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r4 != $r3 goto label03;

        $r17 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r18 = interfaceinvoke $r17.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i9 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i8 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String substring(int,int)>($i9, $i8);

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;

     label03:
        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        r27 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)>(r25, 1);

        goto label08;

     label04:
        r27 = interfaceinvoke r25.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        $i11 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i11 <= 0 goto label07;

        i13 = 0;

        goto label06;

     label05:
        r27 = interfaceinvoke r27.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        i13 = i13 + 1;

     label06:
        $i12 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if i13 >= $i12 goto label07;

        if r27 != null goto label05;

     label07:
        if r27 != null goto label08;

        $r22 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        r27 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)>($r22, 0);

     label08:
        $r28 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $s14 = interfaceinvoke $r28.<org.w3c.dom.Node: short getNodeType()>();

        $i18 = (int) $s14;

        if $i18 == 3 goto label16;

        $r14 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $s7 = interfaceinvoke $r14.<org.w3c.dom.Node: short getNodeType()>();

        $i19 = (int) $s7;

        if $i19 == 4 goto label16;

        i15 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $r15 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        r26 = interfaceinvoke $r15.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label10;

     label09:
        $i21 = (int) -1;

        i15 = i15 + $i21;

        r26 = interfaceinvoke r26.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label10:
        if i15 <= 0 goto label11;

        if r26 != null goto label09;

     label11:
        if r26 != null goto label16;

        $r16 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        r26 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)>($r16, 0);

        goto label16;

     label12:
        if r27 != null goto label13;

        goto label17;

     label13:
        $s2 = interfaceinvoke r27.<org.w3c.dom.Node: short getNodeType()>();

        $i22 = (int) $s2;

        if $i22 == 3 goto label14;

        $s3 = interfaceinvoke r27.<org.w3c.dom.Node: short getNodeType()>();

        $i23 = (int) $s3;

        if $i23 != 4 goto label15;

     label14:
        $r8 = interfaceinvoke r27.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label15:
        r27 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)>(r27, 1);

     label16:
        if r27 != r26 goto label12;

     label17:
        $r9 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $s4 = interfaceinvoke $r9.<org.w3c.dom.Node: short getNodeType()>();

        $i24 = (int) $s4;

        if $i24 == 3 goto label18;

        $r13 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $s6 = interfaceinvoke $r13.<org.w3c.dom.Node: short getNodeType()>();

        $i25 = (int) $s6;

        if $i25 != 4 goto label19;

     label18:
        $r10 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $r11 = interfaceinvoke $r10.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i5 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

     label19:
        $r29 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r29;
    }

    public void detach()
    {
        org.w3c.dom.DOMException $r2;
        java.lang.String $r3;
        org.apache.xerces.dom.DocumentImpl $r1;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label1;

        $r2 = new org.w3c.dom.DOMException;

        $r3 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r3);

        throw $r2;

     label1:
        r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach> = 1;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        virtualinvoke $r1.<org.apache.xerces.dom.DocumentImpl: void removeRange(org.w3c.dom.ranges.Range)>(r0);

        return;
    }

    void signalSplitData(org.w3c.dom.Node, org.w3c.dom.Node, int)
    {
        org.w3c.dom.Node r1, r2;
        int i0;
        org.apache.xerces.dom.DocumentImpl $r3;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        i0 := @parameter2: int;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fSplitNode> = r1;

        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        virtualinvoke $r3.<org.apache.xerces.dom.DocumentImpl: void splitData(org.w3c.dom.Node,org.w3c.dom.Node,int)>(r1, r2, i0);

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fSplitNode> = null;

        return;
    }

    void receiveSplitData(org.w3c.dom.Node, org.w3c.dom.Node, int)
    {
        short $s0, $s5;
        org.w3c.dom.Node r0, r1, $r3, $r4, $r5, $r6, $r7;
        int i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10;
        org.apache.xerces.dom.RangeImpl r2;

        r2 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: org.w3c.dom.Node;

        i1 := @parameter2: int;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r2.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fSplitNode>;

        if $r3 != r0 goto label3;

        return;

     label3:
        $r4 = r2.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if r0 != $r4 goto label4;

        $r6 = r2.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $s5 = interfaceinvoke $r6.<org.w3c.dom.Node: short getNodeType()>();

        $i9 = (int) $s5;

        if $i9 != 3 goto label4;

        $i6 = r2.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i6 <= i1 goto label4;

        $i7 = r2.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i8 = $i7 - i1;

        r2.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i8;

        r2.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = r1;

     label4:
        $r7 = r2.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if r0 != $r7 goto label5;

        $r5 = r2.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $s0 = interfaceinvoke $r5.<org.w3c.dom.Node: short getNodeType()>();

        $i10 = (int) $s0;

        if $i10 != 3 goto label5;

        $i2 = r2.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        if $i2 <= i1 goto label5;

        $i3 = r2.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i4 = $i3 - i1;

        r2.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i4;

        r2.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = r1;

     label5:
        return;
    }

    void deleteData(org.w3c.dom.CharacterData, int, int)
    {
        int i0, i1;
        org.apache.xerces.dom.RangeImpl r0;
        org.w3c.dom.CharacterData r1;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.w3c.dom.CharacterData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fDeleteNode> = r1;

        interfaceinvoke r1.<org.w3c.dom.CharacterData: void deleteData(int,int)>(i0, i1);

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fDeleteNode> = null;

        return;
    }

    void receiveDeletedText(org.apache.xerces.dom.CharacterDataImpl, int, int)
    {
        org.apache.xerces.dom.CharacterDataImpl r0;
        org.w3c.dom.Node $r2, $r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.apache.xerces.dom.RangeImpl r1;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.apache.xerces.dom.CharacterDataImpl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fDeleteNode>;

        if $r2 != r0 goto label2;

        return;

     label2:
        $r3 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if r0 != $r3 goto label4;

        $i10 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i9 = i0 + i1;

        if $i10 <= $i9 goto label3;

        $i13 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i12 = i0 + i1;

        $i14 = $i13 - $i12;

        $i15 = i0 + $i14;

        r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i15;

        goto label4;

     label3:
        $i11 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i11 <= i0 goto label4;

        r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = i0;

     label4:
        $r4 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if r0 != $r4 goto label6;

        $i3 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i2 = i0 + i1;

        if $i3 <= $i2 goto label5;

        $i6 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i5 = i0 + i1;

        $i7 = $i6 - $i5;

        $i8 = i0 + $i7;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i8;

        goto label6;

     label5:
        $i4 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        if $i4 <= i0 goto label6;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = i0;

     label6:
        return;
    }

    void insertData(org.w3c.dom.CharacterData, int, java.lang.String)
    {
        int i0;
        java.lang.String r2;
        org.apache.xerces.dom.RangeImpl r0;
        org.w3c.dom.CharacterData r1;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.w3c.dom.CharacterData;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fInsertNode> = r1;

        interfaceinvoke r1.<org.w3c.dom.CharacterData: void insertData(int,java.lang.String)>(i0, r2);

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fInsertNode> = null;

        return;
    }

    void receiveInsertedText(org.apache.xerces.dom.CharacterDataImpl, int, int)
    {
        org.apache.xerces.dom.CharacterDataImpl r0;
        org.w3c.dom.Node $r2, $r3, $r4;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.xerces.dom.RangeImpl r1;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.apache.xerces.dom.CharacterDataImpl;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fInsertNode>;

        if $r2 != r0 goto label2;

        return;

     label2:
        $r3 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if r0 != $r3 goto label3;

        $i5 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if i0 >= $i5 goto label3;

        $i6 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i7 = $i6 + i2;

        r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i7;

     label3:
        $r4 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if r0 != $r4 goto label4;

        $i1 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        if i0 >= $i1 goto label4;

        $i3 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i4 = $i3 + i2;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i4;

     label4:
        return;
    }

    void receiveReplacedText(org.apache.xerces.dom.CharacterDataImpl)
    {
        org.apache.xerces.dom.CharacterDataImpl r0;
        org.w3c.dom.Node $r2, $r3;
        org.apache.xerces.dom.RangeImpl r1;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.apache.xerces.dom.CharacterDataImpl;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if r0 != $r2 goto label2;

        r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = 0;

     label2:
        $r3 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if r0 != $r3 goto label3;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = 0;

     label3:
        return;
    }

    public void insertedNodeFromDOM(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.xerces.dom.RangeImpl r1;
        boolean $z0;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fInsertNode>;

        if $r2 != r0 goto label2;

        return;

     label2:
        $z0 = r1.<org.apache.xerces.dom.RangeImpl: boolean fInsertedFromRange>;

        if $z0 == 0 goto label3;

        return;

     label3:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r4 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if $r3 != $r4 goto label4;

        $r6 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $i4 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r6);

        $i5 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i4 >= $i5 goto label4;

        $i6 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i7 = $i6 + 1;

        r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i7;

     label4:
        $r7 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r3 != $r7 goto label5;

        $r5 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $i0 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r5);

        $i1 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        if $i0 >= $i1 goto label5;

        $i2 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i3 = $i2 + 1;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i3;

     label5:
        return;
    }

    org.w3c.dom.Node removeChild(org.w3c.dom.Node, org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1, r2, $r3;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: org.w3c.dom.Node;

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fRemoveChild> = r1;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r1);

        r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fRemoveChild> = null;

        return $r3;
    }

    void removeNode(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.xerces.dom.RangeImpl r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fRemoveChild>;

        if $r2 != r0 goto label2;

        return;

     label2:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r4 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if $r3 != $r4 goto label3;

        $r9 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $i6 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r9);

        $i7 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        if $i6 >= $i7 goto label3;

        $i8 = r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i9 = $i8 - 1;

        r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i9;

     label3:
        $r10 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r3 != $r10 goto label4;

        $r8 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $i2 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r8);

        $i3 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        if $i2 >= $i3 goto label4;

        $i4 = r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i5 = $i4 - 1;

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i5;

     label4:
        $r11 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if $r3 != $r11 goto label5;

        $r7 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r3 == $r7 goto label7;

     label5:
        $r5 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $z0 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: boolean isAncestorOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r5);

        if $z0 == 0 goto label6;

        r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer> = $r3;

        $i1 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r3);

        r1.<org.apache.xerces.dom.RangeImpl: int fStartOffset> = $i1;

     label6:
        $r6 = r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $z1 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: boolean isAncestorOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r6);

        if $z1 == 0 goto label7;

        r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer> = $r3;

        $i0 = virtualinvoke r1.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r3);

        r1.<org.apache.xerces.dom.RangeImpl: int fEndOffset> = $i0;

     label7:
        return;
    }

    private org.w3c.dom.DocumentFragment traverseContents(int) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Node $r1, $r2, $r3, $r4, $r5, $r7, r13, r14, r15, r16, r17, r18, r19, r20;
        org.w3c.dom.DOMException $r21;
        int i0, i1, i2, i3, $i5;
        java.lang.String $r12;
        org.apache.xerces.dom.RangeImpl r0;
        boolean $z0;
        org.w3c.dom.DocumentFragment $r6, $r8, $r9, $r10;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if $r1 == null goto label01;

        $r2 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r2 != null goto label02;

     label01:
        return null;

     label02:
        $z0 = r0.<org.apache.xerces.dom.RangeImpl: boolean fDetach>;

        if $z0 == 0 goto label03;

        $r21 = new org.w3c.dom.DOMException;

        $r12 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        specialinvoke $r21.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r12);

        throw $r21;

     label03:
        $r4 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r4 != $r3 goto label04;

        $r10 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.DocumentFragment traverseSameContainer(int)>(i0);

        return $r10;

     label04:
        i1 = 0;

        r13 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        r14 = interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label07;

     label05:
        $r5 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        if r14 != $r5 goto label06;

        $r6 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node,int)>(r13, i0);

        return $r6;

     label06:
        i1 = i1 + 1;

        r13 = r14;

        r14 = interfaceinvoke r14.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label07:
        if r14 != null goto label05;

        i2 = 0;

        r15 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        r16 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label10;

     label08:
        $r7 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if r16 != $r7 goto label09;

        $r8 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.DocumentFragment traverseCommonEndContainer(org.w3c.dom.Node,int)>(r15, i0);

        return $r8;

     label09:
        i2 = i2 + 1;

        r15 = r16;

        r16 = interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label10:
        if r16 != null goto label08;

        i3 = i2 - i1;

        r17 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        goto label12;

     label11:
        r17 = interfaceinvoke r17.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $i5 = (int) -1;

        i3 = i3 + $i5;

     label12:
        if i3 > 0 goto label11;

        r18 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        goto label14;

     label13:
        r18 = interfaceinvoke r18.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        i3 = i3 + 1;

     label14:
        if i3 < 0 goto label13;

        r19 = interfaceinvoke r17.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r20 = interfaceinvoke r18.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label16;

     label15:
        r17 = r19;

        r18 = r20;

        r19 = interfaceinvoke r19.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r20 = interfaceinvoke r20.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label16:
        if r19 != r20 goto label15;

        $r9 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.DocumentFragment traverseCommonAncestors(org.w3c.dom.Node,org.w3c.dom.Node,int)>(r17, r18, i0);

        return $r9;
    }

    private org.w3c.dom.DocumentFragment traverseSameContainer(int)
    {
        org.w3c.dom.Text $r11;
        org.apache.xerces.dom.CharacterDataImpl $r13;
        org.w3c.dom.CDATASection $r9;
        org.w3c.dom.Comment $r7;
        org.w3c.dom.DocumentFragment r18;
        org.w3c.dom.ProcessingInstruction $r5;
        short $s3;
        org.w3c.dom.Node $r1, $r2, $r12, $r14, $r15, $r16, $r19, r22;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22;
        java.lang.String $r4, $r20, $r21;
        org.apache.xerces.dom.DocumentImpl $r3, $r6, $r8, $r10, $r17;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        i0 := @parameter0: int;

        r18 = null;

        if i0 == 3 goto label01;

        $r17 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        r18 = virtualinvoke $r17.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.DocumentFragment createDocumentFragment()>();

     label01:
        $i2 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i1 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        if $i2 != $i1 goto label02;

        return r18;

     label02:
        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $s3 = interfaceinvoke $r1.<org.w3c.dom.Node: short getNodeType()>();

        $i14 = (int) $s3;

        if $i14 == 3 goto label03;

        $i15 = (int) $s3;

        if $i15 == 4 goto label03;

        $i16 = (int) $s3;

        if $i16 == 8 goto label03;

        $i17 = (int) $s3;

        if $i17 != 7 goto label10;

     label03:
        $r19 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r20 = interfaceinvoke $r19.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i11 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i12 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String substring(int,int)>($i11, $i12);

        if i0 == 2 goto label04;

        $r12 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r13 = (org.apache.xerces.dom.CharacterDataImpl) $r12;

        $i7 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i5 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i4 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i6 = $i5 - $i4;

        virtualinvoke $r13.<org.apache.xerces.dom.CharacterDataImpl: void deleteData(int,int)>($i7, $i6);

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(1);

     label04:
        if i0 != 3 goto label05;

        return null;

     label05:
        $i18 = (int) $s3;

        if $i18 != 3 goto label06;

        $r10 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r11 = virtualinvoke $r10.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.Text createTextNode(java.lang.String)>($r21);

        interfaceinvoke r18.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        goto label09;

     label06:
        $i19 = (int) $s3;

        if $i19 != 4 goto label07;

        $r8 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r9 = virtualinvoke $r8.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>($r21);

        interfaceinvoke r18.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        goto label09;

     label07:
        $i20 = (int) $s3;

        if $i20 != 8 goto label08;

        $r6 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r7 = virtualinvoke $r6.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.Comment createComment(java.lang.String)>($r21);

        interfaceinvoke r18.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        goto label09;

     label08:
        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        $r2 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $r4 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r5 = virtualinvoke $r3.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r4, $r21);

        interfaceinvoke r18.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

     label09:
        return r18;

     label10:
        $r14 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $i8 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        r22 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getSelectedNode(org.w3c.dom.Node,int)>($r14, $i8);

        $i10 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i9 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        i13 = $i10 - $i9;

        goto label13;

     label11:
        $r15 = interfaceinvoke r22.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r16 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)>(r22, i0);

        if r18 == null goto label12;

        interfaceinvoke r18.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r16);

     label12:
        $i22 = (int) -1;

        i13 = i13 + $i22;

        r22 = $r15;

     label13:
        if i13 > 0 goto label11;

        if i0 == 2 goto label14;

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(1);

     label14:
        return r18;
    }

    private org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node, int)
    {
        org.w3c.dom.Node r1, $r2, $r3, $r4, $r5, $r6, r9;
        int i0, $i1, $i2, $i3, i4, $i6;
        org.apache.xerces.dom.DocumentImpl $r7;
        org.apache.xerces.dom.RangeImpl r0;
        org.w3c.dom.DocumentFragment r8;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        r8 = null;

        if i0 == 3 goto label1;

        $r7 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        r8 = virtualinvoke $r7.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.DocumentFragment createDocumentFragment()>();

     label1:
        $r2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)>(r1, i0);

        if r8 == null goto label2;

        interfaceinvoke r8.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

     label2:
        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fStartContainer>;

        $i1 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r1, $r3);

        $i2 = r0.<org.apache.xerces.dom.RangeImpl: int fStartOffset>;

        $i3 = $i1 - $i2;

        i4 = $i3;

        if $i3 > 0 goto label4;

        if i0 == 2 goto label3;

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void setEndBefore(org.w3c.dom.Node)>(r1);

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(0);

     label3:
        return r8;

     label4:
        r9 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        goto label7;

     label5:
        $r4 = interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        $r5 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)>(r9, i0);

        if r8 == null goto label6;

        $r6 = interfaceinvoke r8.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node getFirstChild()>();

        interfaceinvoke r8.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r5, $r6);

     label6:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        r9 = $r4;

     label7:
        if i4 > 0 goto label5;

        if i0 == 2 goto label8;

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void setEndBefore(org.w3c.dom.Node)>(r1);

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(0);

     label8:
        return r8;
    }

    private org.w3c.dom.DocumentFragment traverseCommonEndContainer(org.w3c.dom.Node, int)
    {
        org.w3c.dom.DocumentFragment r7;
        org.w3c.dom.Node r1, $r2, $r3, $r4, $r5, r8;
        int i0, $i1, $i2, i3, i4, $i6;
        org.apache.xerces.dom.DocumentImpl $r6;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        r7 = null;

        if i0 == 3 goto label1;

        $r6 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        r7 = virtualinvoke $r6.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.DocumentFragment createDocumentFragment()>();

     label1:
        $r2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseLeftBoundary(org.w3c.dom.Node,int)>(r1, i0);

        if r7 == null goto label2;

        interfaceinvoke r7.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

     label2:
        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $i1 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r1, $r3);

        i3 = $i1 + 1;

        $i2 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        i4 = $i2 - i3;

        r8 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label5;

     label3:
        $r4 = interfaceinvoke r8.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r5 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)>(r8, i0);

        if r7 == null goto label4;

        interfaceinvoke r7.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

     label4:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        r8 = $r4;

     label5:
        if i4 > 0 goto label3;

        if i0 == 2 goto label6;

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void setStartAfter(org.w3c.dom.Node)>(r1);

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(1);

     label6:
        return r7;
    }

    private org.w3c.dom.DocumentFragment traverseCommonAncestors(org.w3c.dom.Node, org.w3c.dom.Node, int)
    {
        org.w3c.dom.Node r1, $r2, $r3, r4, $r5, $r6, $r7, r10;
        int i0, $i1, $i2, i3, i4, $i6;
        org.apache.xerces.dom.DocumentImpl $r8;
        org.apache.xerces.dom.RangeImpl r0;
        org.w3c.dom.DocumentFragment r9;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        r4 := @parameter1: org.w3c.dom.Node;

        i0 := @parameter2: int;

        r9 = null;

        if i0 == 3 goto label1;

        $r8 = r0.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        r9 = virtualinvoke $r8.<org.apache.xerces.dom.DocumentImpl: org.w3c.dom.DocumentFragment createDocumentFragment()>();

     label1:
        $r2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseLeftBoundary(org.w3c.dom.Node,int)>(r1, i0);

        if r9 == null goto label2;

        interfaceinvoke r9.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

     label2:
        $r3 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $i1 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r1, $r3);

        $i2 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)>(r4, $r3);

        i3 = $i1 + 1;

        i4 = $i2 - i3;

        r10 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label5;

     label3:
        $r5 = interfaceinvoke r10.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r6 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)>(r10, i0);

        if r9 == null goto label4;

        interfaceinvoke r9.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

     label4:
        r10 = $r5;

        $i6 = (int) -1;

        i4 = i4 + $i6;

     label5:
        if i4 > 0 goto label3;

        $r7 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)>(r4, i0);

        if r9 == null goto label6;

        interfaceinvoke r9.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

     label6:
        if i0 == 2 goto label7;

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void setStartAfter(org.w3c.dom.Node)>(r1);

        virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: void collapse(boolean)>(1);

     label7:
        return r9;
    }

    private org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node, int)
    {
        org.w3c.dom.Node $r1, $r2, $r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, r12, r13, r14;
        int $i0, $i1, i2;
        org.apache.xerces.dom.RangeImpl r0;
        boolean z1, $z2, $z3;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r4 := @parameter0: org.w3c.dom.Node;

        i2 := @parameter1: int;

        $r1 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        $i0 = r0.<org.apache.xerces.dom.RangeImpl: int fEndOffset>;

        $i1 = $i0 - 1;

        $r2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getSelectedNode(org.w3c.dom.Node,int)>($r1, $i1);

        r12 = $r2;

        $r3 = r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node fEndContainer>;

        if $r2 == $r3 goto label1;

        $z3 = 1;

        $z2 = 1;

        goto label2;

     label1:
        $z3 = 0;

        $z2 = 0;

     label2:
        z1 = $z3;

        if $r2 != r4 goto label3;

        $r11 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)>($r2, $z2, 0, i2);

        return $r11;

     label3:
        $r5 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r13 = $r5;

        r14 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)>($r5, 0, 0, i2);

        goto label9;

     label4:
        $r6 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        $r7 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)>(r12, z1, 0, i2);

        if i2 == 3 goto label5;

        $r8 = interfaceinvoke r14.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        interfaceinvoke r14.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r7, $r8);

     label5:
        z1 = 1;

        r12 = $r6;

     label6:
        if r12 != null goto label4;

        if r13 != r4 goto label7;

        return r14;

     label7:
        r12 = interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        $r9 = interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r13 = $r9;

        $r10 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)>($r9, 0, 0, i2);

        if i2 == 3 goto label8;

        interfaceinvoke $r10.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r14);

     label8:
        r14 = $r10;

     label9:
        if r13 != null goto label6;

        return null;
    }

    private org.w3c.dom.Node traverseLeftBoundary(org.w3c.dom.Node, int)
    {
        org.w3c.dom.Node $r1, $r2, $r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, r11, r12, r13;
        int $i0, i1;
        org.apache.xerces.dom.RangeImpl r0;
        boolean z1, $z2, $z3;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r4 := @parameter0: org.w3c.dom.Node;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getStartContainer()>();

        $i0 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: int getStartOffset()>();

        $r2 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getSelectedNode(org.w3c.dom.Node,int)>($r1, $i0);

        r11 = $r2;

        $r3 = virtualinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getStartContainer()>();

        if $r2 == $r3 goto label1;

        $z3 = 1;

        $z2 = 1;

        goto label2;

     label1:
        $z3 = 0;

        $z2 = 0;

     label2:
        z1 = $z3;

        if $r2 != r4 goto label3;

        $r10 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)>($r2, $z2, 1, i1);

        return $r10;

     label3:
        $r5 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r12 = $r5;

        r13 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)>($r5, 0, 1, i1);

        goto label9;

     label4:
        $r6 = interfaceinvoke r11.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r7 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)>(r11, z1, 1, i1);

        if i1 == 3 goto label5;

        interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

     label5:
        z1 = 1;

        r11 = $r6;

     label6:
        if r11 != null goto label4;

        if r12 != r4 goto label7;

        return r13;

     label7:
        r11 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r8 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r12 = $r8;

        $r9 = specialinvoke r0.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)>($r8, 0, 1, i1);

        if i1 == 3 goto label8;

        interfaceinvoke $r9.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r13);

     label8:
        r13 = $r9;

     label9:
        if r12 != null goto label6;

        return null;
    }

    private org.w3c.dom.Node traverseNode(org.w3c.dom.Node, boolean, boolean, int)
    {
        short $s0;
        org.w3c.dom.Node r0, $r2, $r3, $r4;
        int i1, $i2, $i3, $i4, $i5;
        org.apache.xerces.dom.RangeImpl r1;
        boolean z0, z1;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i1 := @parameter3: int;

        if z0 == 0 goto label1;

        $r3 = specialinvoke r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)>(r0, i1);

        return $r3;

     label1:
        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s0;

        if $i2 == 3 goto label2;

        $i3 = (int) $s0;

        if $i3 == 4 goto label2;

        $i4 = (int) $s0;

        if $i4 == 8 goto label2;

        $i5 = (int) $s0;

        if $i5 != 7 goto label3;

     label2:
        $r4 = specialinvoke r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)>(r0, z1, i1);

        return $r4;

     label3:
        $r2 = specialinvoke r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)>(r0, i1);

        return $r2;
    }

    private org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node, int)
    {
        short $s1;
        org.w3c.dom.Node r0, $r1, $r2;
        org.w3c.dom.DOMException $r6;
        int i0, $i2;
        java.lang.String $r4;
        org.apache.xerces.dom.RangeImpl r5;

        r5 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(1);

        return $r2;

     label2:
        $s1 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s1;

        if $i2 != 10 goto label3;

        $r6 = new org.w3c.dom.DOMException;

        $r4 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "HIERARCHY_REQUEST_ERR", null);

        specialinvoke $r6.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, $r4);

        throw $r6;

     label3:
        return r0;

     label4:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r0);

        return null;

     label5:
        return null;
    }

    private org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node, int)
    {
        org.w3c.dom.Node r0, $r1;
        int i0;
        org.apache.xerces.dom.RangeImpl r2;

        r2 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label1;
            default: goto label3;
        };

     label1:
        return null;

     label2:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(0);

        return $r1;

     label3:
        return null;
    }

    private org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node, boolean, int)
    {
        org.w3c.dom.Node r0, $r3;
        int $i0, i1, $i2;
        java.lang.String $r1, r4, r5;
        org.apache.xerces.dom.RangeImpl r2;
        boolean z0;

        r2 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r2.<org.apache.xerces.dom.RangeImpl: int getStartOffset()>();

        r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i2);

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        goto label2;

     label1:
        $i0 = virtualinvoke r2.<org.apache.xerces.dom.RangeImpl: int getEndOffset()>();

        r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

     label2:
        if i1 == 2 goto label3;

        interfaceinvoke r0.<org.w3c.dom.Node: void setNodeValue(java.lang.String)>(r5);

     label3:
        if i1 != 3 goto label4;

        return null;

     label4:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(0);

        interfaceinvoke $r3.<org.w3c.dom.Node: void setNodeValue(java.lang.String)>(r4);

        return $r3;
    }

    void checkIndex(org.w3c.dom.Node, int) throws org.w3c.dom.DOMException
    {
        short $s1;
        org.w3c.dom.Node r0;
        org.w3c.dom.DOMException $r10, $r11, $r12;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2, $r5, $r7, $r9;
        org.apache.xerces.dom.RangeImpl r8;
        org.w3c.dom.NodeList $r3;

        r8 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r10 = new org.w3c.dom.DOMException;

        $r7 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INDEX_SIZE_ERR", null);

        specialinvoke $r10.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(1, $r7);

        throw $r10;

     label1:
        $s1 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i4 = (int) $s1;

        if $i4 == 3 goto label2;

        $i5 = (int) $s1;

        if $i5 == 4 goto label2;

        $i6 = (int) $s1;

        if $i6 == 8 goto label2;

        $i7 = (int) $s1;

        if $i7 != 7 goto label3;

     label2:
        $r9 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i3 = virtualinvoke $r9.<java.lang.String: int length()>();

        if i0 <= $i3 goto label4;

        $r11 = new org.w3c.dom.DOMException;

        $r2 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INDEX_SIZE_ERR", null);

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(1, $r2);

        throw $r11;

     label3:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i2 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if i0 <= $i2 goto label4;

        $r12 = new org.w3c.dom.DOMException;

        $r5 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INDEX_SIZE_ERR", null);

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(1, $r5);

        throw $r12;

     label4:
        return;
    }

    private org.w3c.dom.Node getRootContainer(org.w3c.dom.Node)
    {
        org.apache.xerces.dom.RangeImpl r1;
        org.w3c.dom.Node $r0, r2;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        if r2 != null goto label2;

        return null;

     label1:
        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label2:
        $r0 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r0 != null goto label1;

        return r2;
    }

    private boolean isLegalContainer(org.w3c.dom.Node)
    {
        short $s0;
        org.w3c.dom.Node r1;
        int $i1;
        org.apache.xerces.dom.RangeImpl r0;

        r0 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        if r1 != null goto label4;

        return 0;

     label1:
        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 6: goto label2;
            case 10: goto label2;
            case 12: goto label2;
            default: goto label3;
        };

     label2:
        return 0;

     label3:
        r1 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label4:
        if r1 != null goto label1;

        return 1;
    }

    private boolean hasLegalRootContainer(org.w3c.dom.Node)
    {
        short $s0;
        org.w3c.dom.Node r0, $r2;
        int $i1;
        org.apache.xerces.dom.RangeImpl r1;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = specialinvoke r1.<org.apache.xerces.dom.RangeImpl: org.w3c.dom.Node getRootContainer(org.w3c.dom.Node)>(r0);

        $s0 = interfaceinvoke $r2.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 2: goto label2;
            case 9: goto label2;
            case 11: goto label2;
            default: goto label3;
        };

     label2:
        return 1;

     label3:
        return 0;
    }

    private boolean isLegalContainedNode(org.w3c.dom.Node)
    {
        short $s0;
        org.w3c.dom.Node r0;
        int $i1;
        org.apache.xerces.dom.RangeImpl r1;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label1;

        return 0;

     label1:
        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label2;
            case 10: goto label3;
            case 11: goto label2;
            case 12: goto label2;
            default: goto label3;
        };

     label2:
        return 0;

     label3:
        return 1;
    }

    org.w3c.dom.Node nextNode(org.w3c.dom.Node, boolean)
    {
        org.w3c.dom.Node r0, $r1, $r4, $r5, r6;
        org.apache.xerces.dom.DocumentImpl $r3;
        org.apache.xerces.dom.RangeImpl r2;
        boolean z0;

        r2 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        return null;

     label1:
        if z0 == 0 goto label2;

        $r5 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r5 == null goto label2;

        return $r5;

     label2:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        if $r1 == null goto label3;

        return $r1;

     label3:
        r6 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label6;

     label4:
        $r4 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        if $r4 == null goto label5;

        return $r4;

     label5:
        r6 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label6:
        if r6 == null goto label7;

        $r3 = r2.<org.apache.xerces.dom.RangeImpl: org.apache.xerces.dom.DocumentImpl fDocument>;

        if r6 != $r3 goto label4;

     label7:
        return null;
    }

    boolean isAncestorOf(org.w3c.dom.Node, org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r1, r3;
        org.apache.xerces.dom.RangeImpl r2;

        r2 := @this: org.apache.xerces.dom.RangeImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: org.w3c.dom.Node;

        r3 = r0;

        goto label3;

     label1:
        if r3 != r1 goto label2;

        return 1;

     label2:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label3:
        if r3 != null goto label1;

        return 0;
    }

    int indexOf(org.w3c.dom.Node, org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r1, r2, r4;
        int i0, $i2;
        org.apache.xerces.dom.RangeImpl r3;

        r3 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r1 == r2 goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        i0 = 0;

        r4 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label2:
        i0 = i0 + 1;

        r4 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r4 != r0 goto label2;

        return i0;
    }

    private org.w3c.dom.Node getSelectedNode(org.w3c.dom.Node, int)
    {
        short $s0;
        org.w3c.dom.Node r0, r2;
        int i1, $i2, $i4;
        org.apache.xerces.dom.RangeImpl r1;

        r1 := @this: org.apache.xerces.dom.RangeImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        i1 := @parameter1: int;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s0;

        if $i2 != 3 goto label1;

        return r0;

     label1:
        if i1 >= 0 goto label2;

        return r0;

     label2:
        r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label3:
        $i4 = (int) -1;

        i1 = i1 + $i4;

        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r2 == null goto label5;

        if i1 > 0 goto label3;

     label5:
        if r2 == null goto label6;

        return r2;

     label6:
        return r0;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.dom.RangeImpl: int DELETE_CONTENTS> = 3;

        <org.apache.xerces.dom.RangeImpl: int CLONE_CONTENTS> = 2;

        <org.apache.xerces.dom.RangeImpl: int EXTRACT_CONTENTS> = 1;

        return;
    }
}
