public class org.eclipse.jetty.websocket.WebSocketFactory extends org.eclipse.jetty.util.component.AbstractLifeCycle
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private final java.util.Queue connections;
    private final java.util.Map _extensionClasses;
    private final org.eclipse.jetty.websocket.WebSocketFactory$Acceptor _acceptor;
    private org.eclipse.jetty.websocket.WebSocketBuffers _buffers;
    private int _maxIdleTime;
    private int _maxTextMessageSize;
    private int _maxBinaryMessageSize;

    public void <init>(org.eclipse.jetty.websocket.WebSocketFactory$Acceptor)
    {
        org.eclipse.jetty.websocket.WebSocketFactory r0;
        org.eclipse.jetty.websocket.WebSocketFactory$Acceptor r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r1 := @parameter0: org.eclipse.jetty.websocket.WebSocketFactory$Acceptor;

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketFactory: void <init>(org.eclipse.jetty.websocket.WebSocketFactory$Acceptor,int)>(r1, 65536);

        return;
    }

    public void <init>(org.eclipse.jetty.websocket.WebSocketFactory$Acceptor, int)
    {
        org.eclipse.jetty.websocket.WebSocketBuffers $r10;
        org.eclipse.jetty.websocket.WebSocketFactory r0;
        org.eclipse.jetty.websocket.WebSocketFactory$Acceptor r7;
        java.util.HashMap $r9;
        java.util.Map $r3, $r4, $r5;
        int i0, $i2;
        java.util.concurrent.ConcurrentLinkedQueue $r8;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r7 := @parameter0: org.eclipse.jetty.websocket.WebSocketFactory$Acceptor;

        i0 := @parameter1: int;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void <init>()>();

        $r8 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r8.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Queue connections> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Map _extensionClasses> = $r9;

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Map _extensionClasses>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("identity", class "Lorg/eclipse/jetty/websocket/IdentityExtension;");

        $r4 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Map _extensionClasses>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fragment", class "Lorg/eclipse/jetty/websocket/FragmentExtension;");

        $r5 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Map _extensionClasses>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("x-deflate-frame", class "Lorg/eclipse/jetty/websocket/DeflateFrameExtension;");

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxIdleTime> = 300000;

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxTextMessageSize> = 16384;

        $i2 = (int) -1;

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxBinaryMessageSize> = $i2;

        $r10 = new org.eclipse.jetty.websocket.WebSocketBuffers;

        specialinvoke $r10.<org.eclipse.jetty.websocket.WebSocketBuffers: void <init>(int)>(i0);

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketBuffers _buffers> = $r10;

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketFactory$Acceptor _acceptor> = r7;

        return;
    }

    public java.util.Map getExtensionClassesMap()
    {
        org.eclipse.jetty.websocket.WebSocketFactory r0;
        java.util.Map $r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Map _extensionClasses>;

        return $r1;
    }

    public long getMaxIdleTime()
    {
        int $i0;
        long $l1;
        org.eclipse.jetty.websocket.WebSocketFactory r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        $i0 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxIdleTime>;

        $l1 = (long) $i0;

        return $l1;
    }

    public void setMaxIdleTime(int)
    {
        int i0;
        org.eclipse.jetty.websocket.WebSocketFactory r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxIdleTime> = i0;

        return;
    }

    public int getBufferSize()
    {
        org.eclipse.jetty.websocket.WebSocketBuffers $r1;
        int $i0;
        org.eclipse.jetty.websocket.WebSocketFactory r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketBuffers _buffers>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.websocket.WebSocketBuffers: int getBufferSize()>();

        return $i0;
    }

    public void setBufferSize(int)
    {
        org.eclipse.jetty.websocket.WebSocketBuffers $r1;
        org.eclipse.jetty.websocket.WebSocketFactory r0;
        int i0, $i1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketFactory: int getBufferSize()>();

        if i0 == $i1 goto label1;

        $r1 = new org.eclipse.jetty.websocket.WebSocketBuffers;

        specialinvoke $r1.<org.eclipse.jetty.websocket.WebSocketBuffers: void <init>(int)>(i0);

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketBuffers _buffers> = $r1;

     label1:
        return;
    }

    public int getMaxTextMessageSize()
    {
        int $i0;
        org.eclipse.jetty.websocket.WebSocketFactory r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        $i0 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxTextMessageSize>;

        return $i0;
    }

    public void setMaxTextMessageSize(int)
    {
        int i0;
        org.eclipse.jetty.websocket.WebSocketFactory r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxTextMessageSize> = i0;

        return;
    }

    public int getMaxBinaryMessageSize()
    {
        int $i0;
        org.eclipse.jetty.websocket.WebSocketFactory r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        $i0 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxBinaryMessageSize>;

        return $i0;
    }

    public void setMaxBinaryMessageSize(int)
    {
        int i0;
        org.eclipse.jetty.websocket.WebSocketFactory r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxBinaryMessageSize> = i0;

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.websocket.WebSocketFactory r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketFactory: void closeConnections()>();

        return;
    }

    public void upgrade(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.websocket.WebSocket, java.lang.String) throws java.io.IOException
    {
        java.util.Enumeration $r9;
        java.lang.Integer $r54;
        org.eclipse.jetty.http.HttpParser $r46, $r49;
        java.lang.StringBuilder $r24, $r26, $r27, $r31, $r32, $r33;
        org.eclipse.jetty.websocket.WebSocketBuffers $r14, $r19, $r21, $r23;
        org.eclipse.jetty.websocket.WebSocketFactory r10;
        java.lang.Object[] $r29, $r52;
        org.eclipse.jetty.http.Parser $r45, $r48;
        long $l1, $l3, $l5, $l7;
        java.util.ArrayList $r8;
        javax.servlet.http.HttpServletRequest r0;
        java.lang.String $r1, $r2, $r3, $r4, r15, $r28, $r34, $r37, $r38, $r53;
        org.eclipse.jetty.io.ConnectedEndPoint r7;
        org.eclipse.jetty.websocket.WebSocketServletConnection r42;
        org.eclipse.jetty.websocket.WebSocket r13;
        java.lang.IllegalStateException $r39, $r40, $r41;
        org.eclipse.jetty.io.EndPoint $r6;
        org.eclipse.jetty.websocket.WebSocketServletConnectionD08 $r18;
        org.eclipse.jetty.websocket.WebSocketServletConnectionD00 $r22;
        org.eclipse.jetty.websocket.WebSocketServletConnectionD06 $r20;
        org.eclipse.jetty.io.Buffer $r47, $r50;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.util.QuotedStringTokenizer $r35;
        org.eclipse.jetty.websocket.WebSocket$Connection $r43, $r44;
        java.util.List $r11, $r17;
        org.eclipse.jetty.server.AbstractHttpConnection $r5;
        int $i0, $i2, $i4, $i6, $i8, i9, $i10, $i11;
        javax.servlet.http.HttpServletResponse r16;
        org.eclipse.jetty.http.HttpException $r30;
        org.eclipse.jetty.websocket.WebSocketServletConnectionRFC6455 $r12;
        java.lang.Object $r36;
        org.eclipse.jetty.util.log.Logger $r25, $r51;

        r10 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r16 := @parameter1: javax.servlet.http.HttpServletResponse;

        r13 := @parameter2: org.eclipse.jetty.websocket.WebSocket;

        r15 := @parameter3: java.lang.String;

        $r1 = "websocket";

        $r2 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Upgrade");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 != 0 goto label01;

        $r41 = new java.lang.IllegalStateException;

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>("!Upgrade:websocket");

        throw $r41;

     label01:
        $r3 = "HTTP/1.1";

        $r4 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getProtocol()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label02;

        $r40 = new java.lang.IllegalStateException;

        specialinvoke $r40.<java.lang.IllegalStateException: void <init>(java.lang.String)>("!HTTP/1.1");

        throw $r40;

     label02:
        $i0 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: int getIntHeader(java.lang.String)>("Sec-WebSocket-Version");

        i9 = $i0;

        if $i0 >= 0 goto label03;

        i9 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: int getIntHeader(java.lang.String)>("Sec-WebSocket-Draft");

     label03:
        $r5 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.AbstractHttpConnection getCurrentConnection()>();

        $z2 = $r5 instanceof org.eclipse.jetty.server.BlockingHttpConnection;

        if $z2 == 0 goto label04;

        $r39 = new java.lang.IllegalStateException;

        specialinvoke $r39.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Websockets not supported on blocking connectors");

        throw $r39;

     label04:
        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        r7 = (org.eclipse.jetty.io.ConnectedEndPoint) $r6;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>("Sec-WebSocket-Extensions");

     label05:
        $z3 = interfaceinvoke $r9.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 == 0 goto label08;

        $r35 = new org.eclipse.jetty.util.QuotedStringTokenizer;

        $r36 = interfaceinvoke $r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r37 = (java.lang.String) $r36;

        specialinvoke $r35.<org.eclipse.jetty.util.QuotedStringTokenizer: void <init>(java.lang.String,java.lang.String)>($r37, ",");

     label06:
        $z4 = virtualinvoke $r35.<org.eclipse.jetty.util.QuotedStringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label07;

        $r38 = virtualinvoke $r35.<org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r38);

        goto label06;

     label07:
        goto label05;

     label08:
        tableswitch(i9)
        {
            case -1: goto label09;
            case 0: goto label09;
            case 1: goto label10;
            case 2: goto label10;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label11;
            case 9: goto label13;
            case 10: goto label13;
            case 11: goto label13;
            case 12: goto label13;
            case 13: goto label12;
            default: goto label13;
        };

     label09:
        $r22 = new org.eclipse.jetty.websocket.WebSocketServletConnectionD00;

        $r23 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketBuffers _buffers>;

        $l7 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: long getTimeStamp()>();

        $i8 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxIdleTime>;

        specialinvoke $r22.<org.eclipse.jetty.websocket.WebSocketServletConnectionD00: void <init>(org.eclipse.jetty.websocket.WebSocketFactory,org.eclipse.jetty.websocket.WebSocket,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.websocket.WebSocketBuffers,long,int,java.lang.String)>(r10, r13, r7, $r23, $l7, $i8, r15);

        r42 = $r22;

        goto label14;

     label10:
        $r20 = new org.eclipse.jetty.websocket.WebSocketServletConnectionD06;

        $r21 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketBuffers _buffers>;

        $l5 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: long getTimeStamp()>();

        $i6 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxIdleTime>;

        specialinvoke $r20.<org.eclipse.jetty.websocket.WebSocketServletConnectionD06: void <init>(org.eclipse.jetty.websocket.WebSocketFactory,org.eclipse.jetty.websocket.WebSocket,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.websocket.WebSocketBuffers,long,int,java.lang.String)>(r10, r13, r7, $r21, $l5, $i6, r15);

        r42 = $r20;

        goto label14;

     label11:
        $r17 = virtualinvoke r10.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.List initExtensions(java.util.List,int,int,int)>($r8, 5, 5, 3);

        $r18 = new org.eclipse.jetty.websocket.WebSocketServletConnectionD08;

        $r19 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketBuffers _buffers>;

        $l3 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: long getTimeStamp()>();

        $i4 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxIdleTime>;

        specialinvoke $r18.<org.eclipse.jetty.websocket.WebSocketServletConnectionD08: void <init>(org.eclipse.jetty.websocket.WebSocketFactory,org.eclipse.jetty.websocket.WebSocket,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.websocket.WebSocketBuffers,long,int,java.lang.String,java.util.List,int)>(r10, r13, r7, $r19, $l3, $i4, r15, $r17, i9);

        r42 = $r18;

        goto label14;

     label12:
        $r11 = virtualinvoke r10.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.List initExtensions(java.util.List,int,int,int)>($r8, 5, 5, 3);

        $r12 = new org.eclipse.jetty.websocket.WebSocketServletConnectionRFC6455;

        $r14 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketBuffers _buffers>;

        $l1 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: long getTimeStamp()>();

        $i2 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxIdleTime>;

        specialinvoke $r12.<org.eclipse.jetty.websocket.WebSocketServletConnectionRFC6455: void <init>(org.eclipse.jetty.websocket.WebSocketFactory,org.eclipse.jetty.websocket.WebSocket,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.websocket.WebSocketBuffers,long,int,java.lang.String,java.util.List,int)>(r10, r13, r7, $r14, $l1, $i2, r15, $r11, i9);

        r42 = $r12;

        goto label14;

     label13:
        $r25 = <org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.util.log.Logger LOG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Websocket version: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = newarray (java.lang.Object)[0];

        interfaceinvoke $r25.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r28, $r29);

        interfaceinvoke r16.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Sec-WebSocket-Version", "13, 8, 6, 0");

        $r30 = new org.eclipse.jetty.http.HttpException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported websocket version specification: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<org.eclipse.jetty.http.HttpException: void <init>(int,java.lang.String)>(400, $r34);

        throw $r30;

     label14:
        virtualinvoke r10.<org.eclipse.jetty.websocket.WebSocketFactory: boolean addConnection(org.eclipse.jetty.websocket.WebSocketServletConnection)>(r42);

        $r43 = interfaceinvoke r42.<org.eclipse.jetty.websocket.WebSocketServletConnection: org.eclipse.jetty.websocket.WebSocket$Connection getConnection()>();

        $i10 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxBinaryMessageSize>;

        interfaceinvoke $r43.<org.eclipse.jetty.websocket.WebSocket$Connection: void setMaxBinaryMessageSize(int)>($i10);

        $r44 = interfaceinvoke r42.<org.eclipse.jetty.websocket.WebSocketServletConnection: org.eclipse.jetty.websocket.WebSocket$Connection getConnection()>();

        $i11 = r10.<org.eclipse.jetty.websocket.WebSocketFactory: int _maxTextMessageSize>;

        interfaceinvoke $r44.<org.eclipse.jetty.websocket.WebSocket$Connection: void setMaxTextMessageSize(int)>($i11);

        interfaceinvoke r42.<org.eclipse.jetty.websocket.WebSocketServletConnection: void handshake(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>(r0, r16, r15);

        interfaceinvoke r16.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        $r45 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Parser getParser()>();

        $r46 = (org.eclipse.jetty.http.HttpParser) $r45;

        $r47 = virtualinvoke $r46.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.io.Buffer getHeaderBuffer()>();

        interfaceinvoke r42.<org.eclipse.jetty.websocket.WebSocketServletConnection: void fillBuffersFrom(org.eclipse.jetty.io.Buffer)>($r47);

        $r48 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Parser getParser()>();

        $r49 = (org.eclipse.jetty.http.HttpParser) $r48;

        $r50 = virtualinvoke $r49.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.io.Buffer getBodyBuffer()>();

        interfaceinvoke r42.<org.eclipse.jetty.websocket.WebSocketServletConnection: void fillBuffersFrom(org.eclipse.jetty.io.Buffer)>($r50);

        $r51 = <org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.util.log.Logger LOG>;

        $r52 = newarray (java.lang.Object)[4];

        $r53 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r52[0] = $r53;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $r52[1] = $r54;

        $r52[2] = r15;

        $r52[3] = r42;

        interfaceinvoke $r51.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Websocket upgrade {} {} {} {}", $r52);

        interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.jetty.io.Connection", r42);

        return;
    }

    protected java.lang.String[] parseProtocols(java.lang.String)
    {
        org.eclipse.jetty.websocket.WebSocketFactory r5;
        java.lang.String[] $r1, $r2, r3, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, r6;

        r5 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r6 := @parameter0: java.lang.String;

        if r6 != null goto label1;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = null;

        return $r4;

     label1:
        $r0 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        if $r0 == null goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r1 = newarray (java.lang.String)[1];

        $r1[0] = null;

        return $r1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s*,\\s*");

        $i1 = lengthof $r2;

        $i2 = $i1 + 1;

        r3 = newarray (java.lang.String)[$i2];

        $i3 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r3, 0, $i3);

        return r3;
    }

    public boolean acceptWebSocket(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        org.eclipse.jetty.websocket.WebSocketFactory r4;
        java.util.Enumeration $r6;
        java.lang.String[] $r12;
        javax.servlet.http.HttpServletRequest r0;
        int i0, i1;
        java.lang.String $r1, $r2, $r3, r11, r13, r16, r18;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.websocket.WebSocketFactory$Acceptor $r5, $r8, $r14;
        javax.servlet.http.HttpServletResponse r7;
        java.lang.Object $r10;
        org.eclipse.jetty.websocket.WebSocket $r9, $r15, r17;

        r4 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r7 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = "websocket";

        $r2 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Upgrade");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label9;

        $r3 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Origin");

        r16 = $r3;

        if $r3 != null goto label1;

        r16 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Sec-WebSocket-Origin");

     label1:
        $r5 = r4.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketFactory$Acceptor _acceptor>;

        $z1 = interfaceinvoke $r5.<org.eclipse.jetty.websocket.WebSocketFactory$Acceptor: boolean checkOrigin(javax.servlet.http.HttpServletRequest,java.lang.String)>(r0, r16);

        if $z1 != 0 goto label2;

        interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

        return 0;

     label2:
        r17 = null;

        $r6 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>("Sec-WebSocket-Protocol");

        r18 = null;

     label3:
        if r18 != null goto label7;

        if $r6 == null goto label7;

        $z2 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label7;

        $r10 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        r11 = (java.lang.String) $r10;

        $r12 = virtualinvoke r4.<org.eclipse.jetty.websocket.WebSocketFactory: java.lang.String[] parseProtocols(java.lang.String)>(r11);

        i0 = lengthof $r12;

        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        r13 = $r12[i1];

        $r14 = r4.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketFactory$Acceptor _acceptor>;

        $r15 = interfaceinvoke $r14.<org.eclipse.jetty.websocket.WebSocketFactory$Acceptor: org.eclipse.jetty.websocket.WebSocket doWebSocketConnect(javax.servlet.http.HttpServletRequest,java.lang.String)>(r0, r13);

        r17 = $r15;

        if $r15 == null goto label5;

        r18 = r13;

        goto label6;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        goto label3;

     label7:
        if r17 != null goto label8;

        $r8 = r4.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.WebSocketFactory$Acceptor _acceptor>;

        $r9 = interfaceinvoke $r8.<org.eclipse.jetty.websocket.WebSocketFactory$Acceptor: org.eclipse.jetty.websocket.WebSocket doWebSocketConnect(javax.servlet.http.HttpServletRequest,java.lang.String)>(r0, null);

        r17 = $r9;

        if $r9 != null goto label8;

        interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: void sendError(int)>(503);

        return 0;

     label8:
        virtualinvoke r4.<org.eclipse.jetty.websocket.WebSocketFactory: void upgrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.eclipse.jetty.websocket.WebSocket,java.lang.String)>(r0, r7, r17, r18);

        return 1;

     label9:
        return 0;
    }

    public java.util.List initExtensions(java.util.List, int, int, int)
    {
        java.lang.Object[] $r3, $r13;
        org.eclipse.jetty.websocket.WebSocketFactory r11;
        java.util.HashMap $r10;
        java.util.ArrayList $r0;
        int i0, i1, i2;
        java.lang.String r6, $r8, $r9, $r16, $r17, $r18, $r19, $r20, $r21;
        org.eclipse.jetty.websocket.Extension $r12;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jetty.util.QuotedStringTokenizer $r7, $r15;
        java.util.Iterator $r2;
        java.util.List r1;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r4, $r14;

        r11 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = new org.eclipse.jetty.util.QuotedStringTokenizer;

        specialinvoke $r7.<org.eclipse.jetty.util.QuotedStringTokenizer: void <init>(java.lang.String,java.lang.String)>(r6, ";");

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String nextToken()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

     label2:
        $z0 = virtualinvoke $r7.<org.eclipse.jetty.util.QuotedStringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label5;

        $r15 = new org.eclipse.jetty.util.QuotedStringTokenizer;

        $r16 = virtualinvoke $r7.<org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String nextToken()>();

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r15.<org.eclipse.jetty.util.QuotedStringTokenizer: void <init>(java.lang.String,java.lang.String)>($r17, "=");

        $r18 = virtualinvoke $r15.<org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String nextToken()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r15.<org.eclipse.jetty.util.QuotedStringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label3;

        $r20 = virtualinvoke $r15.<org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String nextToken()>();

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String trim()>();

        goto label4;

     label3:
        $r21 = null;

     label4:
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r21);

        goto label2;

     label5:
        $r12 = specialinvoke r11.<org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.websocket.Extension newExtension(java.lang.String)>($r9);

        if $r12 != null goto label6;

        goto label1;

     label6:
        $z1 = interfaceinvoke $r12.<org.eclipse.jetty.websocket.Extension: boolean init(java.util.Map)>($r10);

        if $z1 == 0 goto label7;

        $r14 = <org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.util.log.Logger LOG>;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = $r9;

        $r13[1] = $r10;

        interfaceinvoke $r14.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("add {} {}", $r13);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

     label7:
        goto label1;

     label8:
        $r4 = <org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.util.log.Logger LOG>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r0;

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("extensions={}", $r3);

        return $r0;
    }

    private org.eclipse.jetty.websocket.Extension newExtension(java.lang.String)
    {
        org.eclipse.jetty.websocket.WebSocketFactory r0;
        java.lang.Exception $r6;
        java.util.Map $r2;
        java.lang.Object $r3, $r4;
        java.lang.Class r8;
        java.lang.String r1;
        org.eclipse.jetty.util.log.Logger $r7;
        org.eclipse.jetty.websocket.Extension $r5;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Map _extensionClasses>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (java.lang.Class) $r3;

        if r8 == null goto label3;

        $r4 = virtualinvoke r8.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (org.eclipse.jetty.websocket.Extension) $r4;

     label2:
        return $r5;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = <org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r6);

     label5:
        return null;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    protected boolean addConnection(org.eclipse.jetty.websocket.WebSocketServletConnection)
    {
        org.eclipse.jetty.websocket.WebSocketFactory r0;
        org.eclipse.jetty.websocket.WebSocketServletConnection r1;
        java.util.Queue $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r1 := @parameter0: org.eclipse.jetty.websocket.WebSocketServletConnection;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketFactory: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Queue connections>;

        $z1 = interfaceinvoke $r2.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected boolean removeConnection(org.eclipse.jetty.websocket.WebSocketServletConnection)
    {
        org.eclipse.jetty.websocket.WebSocketFactory r0;
        org.eclipse.jetty.websocket.WebSocketServletConnection r1;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        r1 := @parameter0: org.eclipse.jetty.websocket.WebSocketServletConnection;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Queue connections>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    protected void closeConnections()
    {
        org.eclipse.jetty.websocket.WebSocketFactory r0;
        java.util.Iterator $r2;
        org.eclipse.jetty.websocket.WebSocketServletConnection r4;
        java.lang.Object $r3;
        java.util.Queue $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketFactory;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketFactory: java.util.Queue connections>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.websocket.WebSocketServletConnection) $r3;

        interfaceinvoke r4.<org.eclipse.jetty.websocket.WebSocketServletConnection: void shutdown()>();

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/websocket/WebSocketFactory;");

        <org.eclipse.jetty.websocket.WebSocketFactory: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
