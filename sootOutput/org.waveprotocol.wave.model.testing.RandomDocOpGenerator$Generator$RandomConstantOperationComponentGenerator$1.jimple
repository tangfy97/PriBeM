class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1 extends org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent
{
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator this$1;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1 r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator $r2;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator this$1> = r1;

        $r2 = r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)>($r2);

        return;
    }

    public org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator $r3;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r4;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        $r3 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator this$1>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r1, r2);

        return $r4;
    }

    public void apply(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator $r2;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        $r2 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator this$1>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator: void apply(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton)>(r1);

        return;
    }

    public void output(org.waveprotocol.wave.model.document.operation.DocOpCursor)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1 r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator $r2;
        org.waveprotocol.wave.model.document.operation.DocOpCursor r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOpCursor;

        $r2 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator this$1>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator: void output(org.waveprotocol.wave.model.document.operation.DocOpCursor)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator $r3;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1 r2;
        java.lang.StringBuilder $r0, $r1, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;

        r2 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constant component from ");

        $r3 = r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator this$1>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
