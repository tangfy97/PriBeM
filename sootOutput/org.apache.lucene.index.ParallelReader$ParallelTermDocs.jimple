class org.apache.lucene.index.ParallelReader$ParallelTermDocs extends java.lang.Object implements org.apache.lucene.index.TermDocs
{
    protected org.apache.lucene.index.TermDocs termDocs;
    final org.apache.lucene.index.ParallelReader this$0;

    public void <init>(org.apache.lucene.index.ParallelReader)
    {
        org.apache.lucene.index.ParallelReader r1;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        r1 := @parameter0: org.apache.lucene.index.ParallelReader;

        r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.ParallelReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.apache.lucene.index.ParallelReader, org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.ParallelReader r1;
        org.apache.lucene.index.TermDocs $r7;
        org.apache.lucene.index.Term r2;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        org.apache.lucene.index.IndexReader $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        r1 := @parameter0: org.apache.lucene.index.ParallelReader;

        r2 := @parameter1: org.apache.lucene.index.Term;

        r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.ParallelReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 != null goto label3;

        $r3 = staticinvoke <org.apache.lucene.index.ParallelReader: java.util.List access$100(org.apache.lucene.index.ParallelReader)>(r1);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r4 = staticinvoke <org.apache.lucene.index.ParallelReader: java.util.List access$100(org.apache.lucene.index.ParallelReader)>(r1);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (org.apache.lucene.index.IndexReader) $r5;

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermDocs termDocs(org.apache.lucene.index.Term)>(null);

     label2:
        r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs> = $r7;

        goto label4;

     label3:
        virtualinvoke r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: void seek(org.apache.lucene.index.Term)>(r2);

     label4:
        return;
    }

    public int doc()
    {
        int $i0;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;
        org.apache.lucene.index.TermDocs $r1;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        $i0 = interfaceinvoke $r1.<org.apache.lucene.index.TermDocs: int doc()>();

        return $i0;
    }

    public int freq()
    {
        int $i0;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;
        org.apache.lucene.index.TermDocs $r1;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        $i0 = interfaceinvoke $r1.<org.apache.lucene.index.TermDocs: int freq()>();

        return $i0;
    }

    public void seek(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.ParallelReader $r1;
        org.apache.lucene.index.TermDocs $r7;
        org.apache.lucene.index.Term r3;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;
        java.lang.Object $r5;
        java.lang.String $r4;
        java.util.SortedMap $r2;
        org.apache.lucene.index.IndexReader r6;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        r3 := @parameter0: org.apache.lucene.index.Term;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.ParallelReader this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.ParallelReader: java.util.SortedMap access$000(org.apache.lucene.index.ParallelReader)>($r1);

        $r4 = virtualinvoke r3.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r5 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.apache.lucene.index.IndexReader) $r5;

        if r6 == null goto label1;

        $r7 = virtualinvoke r6.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermDocs termDocs(org.apache.lucene.index.Term)>(r3);

        goto label2;

     label1:
        $r7 = null;

     label2:
        r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs> = $r7;

        return;
    }

    public void seek(org.apache.lucene.index.TermEnum) throws java.io.IOException
    {
        org.apache.lucene.index.Term $r2;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;
        org.apache.lucene.index.TermEnum r1;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        r1 := @parameter0: org.apache.lucene.index.TermEnum;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.TermEnum: org.apache.lucene.index.Term term()>();

        virtualinvoke r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: void seek(org.apache.lucene.index.Term)>($r2);

        return;
    }

    public boolean next() throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r1, $r2;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        $z0 = interfaceinvoke $r2.<org.apache.lucene.index.TermDocs: boolean next()>();

        return $z0;
    }

    public int read(int[], int[]) throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r1, $r4;
        int[] r2, r3;
        int $i0;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        r2 := @parameter0: int[];

        r3 := @parameter1: int[];

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r4 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        $i0 = interfaceinvoke $r4.<org.apache.lucene.index.TermDocs: int read(int[],int[])>(r2, r3);

        return $i0;
    }

    public boolean skipTo(int) throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r1, $r2;
        int i0;
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        $z0 = interfaceinvoke $r2.<org.apache.lucene.index.TermDocs: boolean skipTo(int)>(i0);

        return $z0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.index.ParallelReader$ParallelTermDocs r0;
        org.apache.lucene.index.TermDocs $r1, $r2;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermDocs;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: org.apache.lucene.index.TermDocs termDocs>;

        interfaceinvoke $r2.<org.apache.lucene.index.TermDocs: void close()>();

     label1:
        return;
    }
}
