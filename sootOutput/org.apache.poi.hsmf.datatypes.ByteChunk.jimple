public class org.apache.poi.hsmf.datatypes.ByteChunk extends org.apache.poi.hsmf.datatypes.Chunk
{
    private byte[] value;

    public void <init>(java.lang.String, int, org.apache.poi.hsmf.datatypes.Types$MAPIType)
    {
        org.apache.poi.hsmf.datatypes.ByteChunk r0;
        int i0;
        java.lang.String r1;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r2;

        r0 := @this: org.apache.poi.hsmf.datatypes.ByteChunk;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        specialinvoke r0.<org.apache.poi.hsmf.datatypes.Chunk: void <init>(java.lang.String,int,org.apache.poi.hsmf.datatypes.Types$MAPIType)>(r1, i0, r2);

        return;
    }

    public void <init>(int, org.apache.poi.hsmf.datatypes.Types$MAPIType)
    {
        org.apache.poi.hsmf.datatypes.ByteChunk r0;
        int i0;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.ByteChunk;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        specialinvoke r0.<org.apache.poi.hsmf.datatypes.Chunk: void <init>(int,org.apache.poi.hsmf.datatypes.Types$MAPIType)>(i0, r1);

        return;
    }

    public void readValue(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.hsmf.datatypes.ByteChunk r0;
        byte[] $r2;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.ByteChunk;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <org.apache.poi.util.IOUtils: byte[] toByteArray(java.io.InputStream)>(r1);

        r0.<org.apache.poi.hsmf.datatypes.ByteChunk: byte[] value> = $r2;

        return;
    }

    public void writeValue(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        org.apache.poi.hsmf.datatypes.ByteChunk r1;
        byte[] $r2;

        r1 := @this: org.apache.poi.hsmf.datatypes.ByteChunk;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hsmf.datatypes.ByteChunk: byte[] value>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    public byte[] getValue()
    {
        org.apache.poi.hsmf.datatypes.ByteChunk r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.ByteChunk;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.ByteChunk: byte[] value>;

        return $r1;
    }

    public void setValue(byte[])
    {
        org.apache.poi.hsmf.datatypes.ByteChunk r0;
        byte[] r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.ByteChunk;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.hsmf.datatypes.ByteChunk: byte[] value> = r1;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hsmf.datatypes.ByteChunk r0;
        byte[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.poi.hsmf.datatypes.ByteChunk;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.ByteChunk: byte[] value>;

        $r2 = staticinvoke <org.apache.poi.hsmf.datatypes.ByteChunk: java.lang.String toDebugFriendlyString(byte[])>($r1);

        return $r2;
    }

    protected static java.lang.String toDebugFriendlyString(byte[])
    {
        byte[] r0;
        byte $b4;
        java.lang.StringBuffer $r2, $r4;
        int $i0, $i1, $i2, $i3, i5, i6, $i7;
        java.lang.String $r3;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return "(Null Byte Array)";

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bytes len=");

        $i0 = lengthof r0;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [");

        $i1 = lengthof r0;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 16);

        $i2 = lengthof r0;

        if $i2 <= 16 goto label2;

        i5 = 12;

     label2:
        i6 = 0;

     label3:
        if i6 >= i5 goto label5;

        if i6 <= 0 goto label4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label4:
        $b4 = r0[i6];

        $i7 = (int) $b4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        i6 = i6 + 1;

        goto label3;

     label5:
        $i3 = lengthof r0;

        if $i3 <= 16 goto label6;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",....");

     label6:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getAs7bitString()
    {
        org.apache.poi.hsmf.datatypes.ByteChunk r0;
        byte[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.poi.hsmf.datatypes.ByteChunk;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.ByteChunk: byte[] value>;

        $r2 = staticinvoke <org.apache.poi.hsmf.datatypes.StringChunk: java.lang.String parseAs7BitData(byte[])>($r1);

        return $r2;
    }
}
