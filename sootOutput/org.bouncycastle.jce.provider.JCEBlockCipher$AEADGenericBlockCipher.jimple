class org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher extends java.lang.Object implements org.bouncycastle.jce.provider.JCEBlockCipher$GenericBlockCipher
{
    private org.bouncycastle.crypto.modes.AEADBlockCipher cipher;

    void <init>(org.bouncycastle.crypto.modes.AEADBlockCipher)
    {
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        org.bouncycastle.crypto.modes.AEADBlockCipher r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.modes.AEADBlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher> = r1;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r2;
        boolean z0;
        org.bouncycastle.crypto.CipherParameters r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $r2 = r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.modes.AEADBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        java.lang.String $r3;
        org.bouncycastle.crypto.BlockCipher $r2;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher>;

        $r2 = interfaceinvoke $r1.<org.bouncycastle.crypto.modes.AEADBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        return $r3;
    }

    public boolean wrapOnNoPadding()
    {
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        return 0;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r2;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher>;

        $r2 = interfaceinvoke $r1.<org.bouncycastle.crypto.modes.AEADBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        return $r2;
    }

    public int getOutputSize(int)
    {
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        int i0, $i1;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        i0 := @parameter0: int;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher>;

        $i1 = interfaceinvoke $r1.<org.bouncycastle.crypto.modes.AEADBlockCipher: int getOutputSize(int)>(i0);

        return $i1;
    }

    public int getUpdateOutputSize(int)
    {
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        int i0, $i1;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        i0 := @parameter0: int;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher>;

        $i1 = interfaceinvoke $r1.<org.bouncycastle.crypto.modes.AEADBlockCipher: int getUpdateOutputSize(int)>(i0);

        return $i1;
    }

    public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException
    {
        byte[] r1;
        byte b0;
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        int i1, $i2;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r2;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher>;

        $i2 = interfaceinvoke $r2.<org.bouncycastle.crypto.modes.AEADBlockCipher: int processByte(byte,byte[],int)>(b0, r1, i1);

        return $i2;
    }

    public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException
    {
        byte[] r1, r2;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r3;
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        int i0, i1, i2, $i3;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r3 = r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher>;

        $i3 = interfaceinvoke $r3.<org.bouncycastle.crypto.modes.AEADBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);

        return $i3;
    }

    public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1;
        org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher r0;
        int i0, $i1;
        org.bouncycastle.crypto.modes.AEADBlockCipher $r2;

        r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JCEBlockCipher$AEADGenericBlockCipher: org.bouncycastle.crypto.modes.AEADBlockCipher cipher>;

        $i1 = interfaceinvoke $r2.<org.bouncycastle.crypto.modes.AEADBlockCipher: int doFinal(byte[],int)>(r1, i0);

        return $i1;
    }
}
