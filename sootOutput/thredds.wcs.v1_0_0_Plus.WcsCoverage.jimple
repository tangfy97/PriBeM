public class thredds.wcs.v1_0_0_Plus.WcsCoverage extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private ucar.nc2.dt.GridDataset$Gridset coverage;
    private thredds.wcs.v1_0_0_Plus.WcsDataset dataset;
    private java.lang.String name;
    private java.lang.String label;
    private java.lang.String description;
    private ucar.nc2.dt.GridCoordSystem coordSys;
    private java.lang.String nativeCRS;
    private java.lang.String defaultRequestCrs;
    private java.util.List supportedCoverageFormatList;
    private java.util.HashMap range;
    private static ucar.nc2.util.DiskCache2 diskCache;

    public void <init>(ucar.nc2.dt.GridDataset$Gridset, thredds.wcs.v1_0_0_Plus.WcsDataset)
    {
        ucar.nc2.dt.GridDatatype r31;
        ucar.unidata.geoloc.ProjectionImpl $r21;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;
        thredds.wcs.v1_0_0_Plus.WcsRangeField $r34;
        boolean $z0;
        java.util.List $r17, $r25, $r27, $r29;
        ucar.nc2.dt.GridCoordSystem $r5, $r6, $r7, $r9, $r20;
        java.lang.StringBuilder $r12, $r14, $r15, $r33;
        java.util.HashMap $r11, $r35;
        java.util.ArrayList $r23;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r10, $r13, $r19, $r22, $r32, $r36, $r43;
        thredds.wcs.v1_0_0_Plus.WcsRequest$Format $r24, $r26, $r28;
        org.slf4j.Logger $r37, $r39, $r41;
        java.util.Iterator $r18;
        java.lang.IllegalArgumentException $r38, $r40, $r42;
        ucar.nc2.dt.GridDataset$Gridset r3, $r4, $r16;
        java.lang.Object $r30;
        thredds.wcs.v1_0_0_Plus.WcsDataset r1, $r2;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        r3 := @parameter0: ucar.nc2.dt.GridDataset$Gridset;

        r1 := @parameter1: thredds.wcs.v1_0_0_Plus.WcsDataset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: thredds.wcs.v1_0_0_Plus.WcsDataset dataset> = r1;

        $r2 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: thredds.wcs.v1_0_0_Plus.WcsDataset dataset>;

        if $r2 != null goto label1;

        $r41 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r41.<org.slf4j.Logger: void error(java.lang.String)>("WcsCoverage(): non-null dataset required.");

        $r42 = new java.lang.IllegalArgumentException;

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null dataset required.");

        throw $r42;

     label1:
        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridDataset$Gridset coverage> = r3;

        $r4 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridDataset$Gridset coverage>;

        if $r4 != null goto label2;

        $r39 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String)>("WcsCoverage(): non-null coverage required.");

        $r40 = new java.lang.IllegalArgumentException;

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null coverage required.");

        throw $r40;

     label2:
        $r5 = interfaceinvoke r3.<ucar.nc2.dt.GridDataset$Gridset: ucar.nc2.dt.GridCoordSystem getGeoCoordSystem()>();

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys> = $r5;

        $r6 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        if $r6 != null goto label3;

        $r37 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String)>("WcsCoverage(): Coverage must have non-null coordinate system.");

        $r38 = new java.lang.IllegalArgumentException;

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null coordinate system required.");

        throw $r38;

     label3:
        $r7 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r8 = interfaceinvoke $r7.<ucar.nc2.dt.GridCoordSystem: java.lang.String getName()>();

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String name> = $r8;

        $r9 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r10 = interfaceinvoke $r9.<ucar.nc2.dt.GridCoordSystem: java.lang.String getName()>();

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String label> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.HashMap range> = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("All parameters on the \"");

        $r13 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String name>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" coordinate system: ");

        $r16 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridDataset$Gridset coverage>;

        $r17 = interfaceinvoke $r16.<ucar.nc2.dt.GridDataset$Gridset: java.util.List getGrids()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r30 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r31 = (ucar.nc2.dt.GridDatatype) $r30;

        $r32 = interfaceinvoke r31.<ucar.nc2.dt.GridDatatype: java.lang.String findAttValueIgnoreCase(java.lang.String,java.lang.String)>("standard_name", "");

        $i2 = virtualinvoke $r32.<java.lang.String: int length()>();

        if $i2 != 0 goto label5;

        $r43 = interfaceinvoke r31.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        goto label6;

     label5:
        $r43 = $r32;

     label6:
        $r33 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r34 = new thredds.wcs.v1_0_0_Plus.WcsRangeField;

        specialinvoke $r34.<thredds.wcs.v1_0_0_Plus.WcsRangeField: void <init>(ucar.nc2.dt.GridDatatype)>(r31);

        $r35 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.HashMap range>;

        $r36 = virtualinvoke $r34.<thredds.wcs.v1_0_0_Plus.WcsRangeField: java.lang.String getName()>();

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r34);

        goto label4;

     label7:
        $i0 = virtualinvoke $r15.<java.lang.StringBuilder: int length()>();

        $i1 = $i0 - 1;

        virtualinvoke $r15.<java.lang.StringBuilder: void setCharAt(int,char)>($i1, 46);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String description> = $r19;

        $r20 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r21 = interfaceinvoke $r20.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r22 = staticinvoke <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper: java.lang.String getWcs1_0CrsId(ucar.unidata.geoloc.Projection)>($r21);

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String nativeCRS> = $r22;

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String defaultRequestCrs> = "OGC:CRS84";

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.List supportedCoverageFormatList> = $r23;

        $r25 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $r24 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format GeoTIFF>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r27 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $r26 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format GeoTIFF_Float>;

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r29 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $r28 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format NetCDF3>;

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r28);

        return;
    }

    ucar.nc2.dt.GridDataset$Gridset getGridset()
    {
        ucar.nc2.dt.GridDataset$Gridset $r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridDataset$Gridset coverage>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getLabel()
    {
        java.lang.String $r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String label>;

        return $r1;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String description>;

        return $r1;
    }

    public ucar.nc2.dt.GridCoordSystem getCoordinateSystem()
    {
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;
        ucar.nc2.dt.GridCoordSystem $r1;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        return $r1;
    }

    public java.lang.String getDefaultRequestCrs()
    {
        java.lang.String $r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String defaultRequestCrs>;

        return $r1;
    }

    public java.lang.String getNativeCrs()
    {
        java.lang.String $r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String nativeCRS>;

        return $r1;
    }

    public java.util.List getSupportedCoverageFormatList()
    {
        java.util.List $r1, $r2;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public boolean isSupportedCoverageFormat(thredds.wcs.v1_0_0_Plus.WcsRequest$Format)
    {
        thredds.wcs.v1_0_0_Plus.WcsRequest$Format r1;
        java.util.List $r2;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;
        boolean $z0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        r1 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsRequest$Format;

        $r2 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean isRangeFieldName(java.lang.String)
    {
        java.util.HashMap $r2;
        java.lang.String r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;
        boolean $z0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.HashMap range>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set getRangeFieldNames()
    {
        java.util.Set $r2;
        java.util.HashMap $r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.HashMap range>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        return $r2;
    }

    public java.util.Collection getRange()
    {
        java.util.HashMap $r1;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r0;
        java.util.Collection $r2;

        r0 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.HashMap range>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        return $r2;
    }

    public static void setDiskCache(ucar.nc2.util.DiskCache2)
    {
        ucar.nc2.util.DiskCache2 r0;

        r0 := @parameter0: ucar.nc2.util.DiskCache2;

        <thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.util.DiskCache2 diskCache> = r0;

        return;
    }

    private static ucar.nc2.util.DiskCache2 getDiskCache()
    {
        java.lang.IllegalStateException $r3;
        org.slf4j.Logger $r2;
        ucar.nc2.util.DiskCache2 $r0, $r1;

        $r0 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.util.DiskCache2 diskCache>;

        if $r0 != null goto label1;

        $r2 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String)>("getDiskCache(): Disk cache has not been set.");

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Disk cache must be set before calling GetCoverage.getDiskCache().");

        throw $r3;

     label1:
        $r1 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.util.DiskCache2 diskCache>;

        return $r1;
    }

    public java.io.File writeCoverageDataToFile(thredds.wcs.v1_0_0_Plus.WcsRequest$Format, ucar.unidata.geoloc.LatLonRect, thredds.wcs.v1_0_0_Plus.AxisSubset, java.util.List, ucar.nc2.units.DateRange) throws thredds.wcs.v1_0_0_Plus.WcsException
    {
        ucar.nc2.dt.GridDatatype $r14, $r16;
        thredds.wcs.v1_0_0_Plus.WcsException $r137, $r146, $r152, $r155;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r11;
        java.lang.StringBuilder $r25, $r27, $r31, $r32, $r33, $r37, $r38, $r46, $r47, $r48, $r53, $r54, $r55, $r70, $r72, $r84, $r86, $r87, $r89, $r94, $r96, $r97, $r101, $r103, $r106, $r107, $r108, $r109, $r111, $r112, $r113, $r114, $r116, $r117, $r118, $r119, $r127, $r128, $r130, $r135, $r136, $r139, $r142, $r144, $r145, $r147, $r148, $r149, $r150, $r151, $r153, $r154;
        ucar.nc2.util.DiskCache2 $r7, $r58;
        java.io.IOException $r81;
        ucar.ma2.Array $r17;
        ucar.ma2.InvalidRangeException $r99;
        thredds.wcs.v1_0_0_Plus.WcsDataset $r20, $r66;
        java.util.Date $r77, $r79;
        thredds.wcs.v1_0_0_Plus.WcsException$Code $r41, $r52, $r93, $r133;
        ucar.nc2.units.DateType $r76, $r78;
        int $i0, $i1, $i2, $i4, $i6;
        org.slf4j.Logger $r10, $r24, $r36, $r45, $r61, $r69, $r83, $r125;
        java.lang.Object $r5, $r13;
        ucar.nc2.dt.grid.NetcdfCFWriter $r143;
        thredds.wcs.v1_0_0_Plus.WcsRangeField $r29;
        ucar.nc2.units.DateRange r1;
        ucar.nc2.dt.GridCoordSystem $r63, $r74;
        thredds.wcs.v1_0_0_Plus.AxisSubset r0;
        java.lang.String $r8, $r19, $r26, $r28, $r34, $r39, $r49, $r56, $r59, $r65, $r71, $r73, $r85, $r88, $r90, $r95, $r98, $r102, $r104, r123, r124, $r129, $r131;
        ucar.nc2.geotiff.GeotiffWriter $r140;
        java.io.File $r9, $r60, $r138, $r141;
        ucar.unidata.geoloc.LatLonRect r15;
        ucar.nc2.dt.GridDataset $r21, $r67;
        ucar.nc2.dataset.CoordinateAxis1D $r64;
        boolean $z0, $z1, z2, z3, $z4;
        ucar.nc2.dataset.CoordinateAxis1DTime $r75;
        ucar.ma2.Range $r120, r121, r122, $r134;
        java.util.List r4;
        java.util.HashMap $r12;
        thredds.wcs.v1_0_0_Plus.WcsRequest$Format r2, $r3, $r22, $r42, $r43;

        r11 := @this: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        r2 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsRequest$Format;

        r15 := @parameter1: ucar.unidata.geoloc.LatLonRect;

        r0 := @parameter2: thredds.wcs.v1_0_0_Plus.AxisSubset;

        r4 := @parameter3: java.util.List;

        r1 := @parameter4: ucar.nc2.units.DateRange;

        z2 = 0;

        z3 = 0;

     label01:
        if r0 == null goto label02;

        $r120 = virtualinvoke r0.<thredds.wcs.v1_0_0_Plus.AxisSubset: ucar.ma2.Range getRange()>();

        goto label03;

     label02:
        $r120 = null;

     label03:
        r121 = $r120;

        z2 = 1;

        r122 = null;

        if r1 == null goto label04;

        $r74 = r11.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r75 = interfaceinvoke $r74.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        $r76 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r77 = virtualinvoke $r76.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $i1 = virtualinvoke $r75.<ucar.nc2.dataset.CoordinateAxis1DTime: int findTimeIndexFromDate(java.util.Date)>($r77);

        $r78 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r79 = virtualinvoke $r78.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $i2 = virtualinvoke $r75.<ucar.nc2.dataset.CoordinateAxis1DTime: int findTimeIndexFromDate(java.util.Date)>($r79);

        $r134 = new ucar.ma2.Range;

        specialinvoke $r134.<ucar.ma2.Range: void <init>(int,int)>($i1, $i2);

        r122 = $r134;

        z3 = 1;

     label04:
        $r3 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format GeoTIFF>;

        if r2 == $r3 goto label05;

        $r42 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format GeoTIFF_Float>;

        if r2 != $r42 goto label11;

     label05:
        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 == 1 goto label06;

        $r135 = new java.lang.StringBuilder;

        specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GeoTIFF response encoding only available for single range field selection [");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r36.<org.slf4j.Logger: void error(java.lang.String)>($r39);

        $r137 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r41 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r137.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r41, "RangeSubset", $r34);

        throw $r137;

     label06:
        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        r123 = (java.lang.String) $r5;

        $r138 = new java.io.File;

        $r7 = staticinvoke <thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.util.DiskCache2 getDiskCache()>();

        $r8 = virtualinvoke $r7.<ucar.nc2.util.DiskCache2: java.lang.String getRootDirectory()>();

        specialinvoke $r138.<java.io.File: void <init>(java.lang.String)>($r8);

        $r9 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("WCS", ".tif", $r138);

        $r10 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label07;

        $r24 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        $r139 = new java.lang.StringBuilder;

        specialinvoke $r139.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): tifFile=");

        $r26 = virtualinvoke $r9.<java.io.File: java.lang.String getPath()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String)>($r28);

     label07:
        $r12 = r11.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.HashMap range>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r123);

        $r29 = (thredds.wcs.v1_0_0_Plus.WcsRangeField) $r13;

        $r14 = virtualinvoke $r29.<thredds.wcs.v1_0_0_Plus.WcsRangeField: ucar.nc2.dt.GridDatatype getGridDatatype()>();

        $r16 = interfaceinvoke $r14.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridDatatype makeSubset(ucar.ma2.Range,ucar.ma2.Range,ucar.unidata.geoloc.LatLonRect,int,int,int)>(r122, r121, r15, 1, 1, 1);

        $i4 = (int) -1;

        $i6 = (int) -1;

        $r17 = interfaceinvoke $r16.<ucar.nc2.dt.GridDatatype: ucar.ma2.Array readDataSlice(int,int,int,int)>(0, 0, $i4, $i6);

        $r140 = new ucar.nc2.geotiff.GeotiffWriter;

        $r19 = virtualinvoke $r9.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r140.<ucar.nc2.geotiff.GeotiffWriter: void <init>(java.lang.String)>($r19);

        $r20 = r11.<thredds.wcs.v1_0_0_Plus.WcsCoverage: thredds.wcs.v1_0_0_Plus.WcsDataset dataset>;

        $r21 = virtualinvoke $r20.<thredds.wcs.v1_0_0_Plus.WcsDataset: ucar.nc2.dt.GridDataset getDataset()>();

        $r22 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format GeoTIFF>;

        if r2 != $r22 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        virtualinvoke $r140.<ucar.nc2.geotiff.GeotiffWriter: void writeGrid(ucar.nc2.dt.GridDataset,ucar.nc2.dt.GridDatatype,ucar.ma2.Array,boolean)>($r21, $r16, $r17, $z4);

        virtualinvoke $r140.<ucar.nc2.geotiff.GeotiffWriter: void close()>();

     label10:
        return $r9;

     label11:
        $r43 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format NetCDF3>;

        if r2 != $r43 goto label14;

        $r141 = new java.io.File;

        $r58 = staticinvoke <thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.util.DiskCache2 getDiskCache()>();

        $r59 = virtualinvoke $r58.<ucar.nc2.util.DiskCache2: java.lang.String getRootDirectory()>();

        specialinvoke $r141.<java.io.File: void <init>(java.lang.String)>($r59);

        $r60 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("WCS", ".nc", $r141);

        $r61 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r61.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label12;

        $r69 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        $r142 = new java.lang.StringBuilder;

        specialinvoke $r142.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): ncFile=");

        $r71 = virtualinvoke $r60.<java.io.File: java.lang.String getPath()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r69.<org.slf4j.Logger: void debug(java.lang.String)>($r73);

     label12:
        $r143 = new ucar.nc2.dt.grid.NetcdfCFWriter;

        specialinvoke $r143.<ucar.nc2.dt.grid.NetcdfCFWriter: void <init>()>();

        $r63 = r11.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r64 = interfaceinvoke $r63.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        virtualinvoke $r64.<ucar.nc2.dataset.CoordinateAxis1D: boolean isNumeric()>();

        $r65 = virtualinvoke $r60.<java.io.File: java.lang.String getPath()>();

        $r66 = r11.<thredds.wcs.v1_0_0_Plus.WcsCoverage: thredds.wcs.v1_0_0_Plus.WcsDataset dataset>;

        $r67 = virtualinvoke $r66.<thredds.wcs.v1_0_0_Plus.WcsDataset: ucar.nc2.dt.GridDataset getDataset()>();

        virtualinvoke $r143.<ucar.nc2.dt.grid.NetcdfCFWriter: void makeFile(java.lang.String,ucar.nc2.dt.GridDataset,java.util.List,ucar.unidata.geoloc.LatLonRect,int,ucar.ma2.Range,ucar.nc2.units.DateRange,int,boolean)>($r65, $r67, r4, r15, 1, r121, r1, 1, 1);

     label13:
        return $r60;

     label14:
        $r45 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        $r144 = new java.lang.StringBuilder;

        specialinvoke $r144.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Unsupported response encoding format [");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r49);

        $r146 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r52 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidFormat>;

        $r145 = new java.lang.StringBuilder;

        specialinvoke $r145.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported response encoding format [");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r146.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r52, "Format", $r56);

        throw $r146;

     label15:
        $r99 := @caughtexception;

        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to subset coverage [");

        $r102 = virtualinvoke r11.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getName()>();

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        if z2 != 0 goto label16;

        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] along vertical axis [");

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]. ");

        r124 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label18;

     label16:
        if z3 != 0 goto label17;

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        $r111 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] along time axis [");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]. ");

        r124 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label18;

     label17:
        $r150 = new java.lang.StringBuilder;

        specialinvoke $r150.<java.lang.StringBuilder: void <init>()>();

        $r106 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] in horizontal plane [");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]. ");

        r124 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        $r125 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        $r151 = new java.lang.StringBuilder;

        specialinvoke $r151.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): ");

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r124);

        $r129 = virtualinvoke $r99.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r125.<org.slf4j.Logger: void error(java.lang.String)>($r131);

        $r152 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r133 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code CoverageNotDefined>;

        specialinvoke $r152.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r133, "", r124);

        throw $r152;

     label19:
        $r81 := @caughtexception;

        $r83 = <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log>;

        $r153 = new java.lang.StringBuilder;

        specialinvoke $r153.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Failed to write file for requested coverage <");

        $r85 = virtualinvoke r11.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getName()>();

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r88 = virtualinvoke $r81.<java.io.IOException: java.lang.String getMessage()>();

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r83.<org.slf4j.Logger: void error(java.lang.String)>($r90);

        $r155 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r93 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code UNKNOWN>;

        $r154 = new java.lang.StringBuilder;

        specialinvoke $r154.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem creating coverage [");

        $r95 = virtualinvoke r11.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getName()>();

        $r96 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r155.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r93, "", $r98);

        throw $r155;

        catch ucar.ma2.InvalidRangeException from label01 to label10 with label15;
        catch ucar.ma2.InvalidRangeException from label11 to label13 with label15;
        catch ucar.ma2.InvalidRangeException from label14 to label15 with label15;
        catch java.io.IOException from label01 to label10 with label19;
        catch java.io.IOException from label11 to label13 with label19;
        catch java.io.IOException from label14 to label15 with label19;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/wcs/v1_0_0_Plus/WcsCoverage;");

        <thredds.wcs.v1_0_0_Plus.WcsCoverage: org.slf4j.Logger log> = $r0;

        <thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.util.DiskCache2 diskCache> = null;

        return;
    }
}
