public final class org.apache.poi.ss.util.CellUtil extends java.lang.Object
{
    public static final java.lang.String ALIGNMENT;
    public static final java.lang.String BORDER_BOTTOM;
    public static final java.lang.String BORDER_LEFT;
    public static final java.lang.String BORDER_RIGHT;
    public static final java.lang.String BORDER_TOP;
    public static final java.lang.String BOTTOM_BORDER_COLOR;
    public static final java.lang.String DATA_FORMAT;
    public static final java.lang.String FILL_BACKGROUND_COLOR;
    public static final java.lang.String FILL_FOREGROUND_COLOR;
    public static final java.lang.String FILL_PATTERN;
    public static final java.lang.String FONT;
    public static final java.lang.String HIDDEN;
    public static final java.lang.String INDENTION;
    public static final java.lang.String LEFT_BORDER_COLOR;
    public static final java.lang.String LOCKED;
    public static final java.lang.String RIGHT_BORDER_COLOR;
    public static final java.lang.String ROTATION;
    public static final java.lang.String TOP_BORDER_COLOR;
    public static final java.lang.String VERTICAL_ALIGNMENT;
    public static final java.lang.String WRAP_TEXT;
    private static org.apache.poi.ss.util.CellUtil$UnicodeMapping[] unicodeMappings;

    private void <init>()
    {
        org.apache.poi.ss.util.CellUtil r0;

        r0 := @this: org.apache.poi.ss.util.CellUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.poi.ss.usermodel.Row getRow(int, org.apache.poi.ss.usermodel.Sheet)
    {
        org.apache.poi.ss.usermodel.Sheet r0;
        int i0;
        org.apache.poi.ss.usermodel.Row $r1, r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.ss.usermodel.Sheet;

        $r1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Row getRow(int)>(i0);

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Row createRow(int)>(i0);

     label1:
        return r2;
    }

    public static org.apache.poi.ss.usermodel.Cell getCell(org.apache.poi.ss.usermodel.Row, int)
    {
        int i0;
        org.apache.poi.ss.usermodel.Cell $r1, r2;
        org.apache.poi.ss.usermodel.Row r0;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Row;

        i0 := @parameter1: int;

        $r1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Row: org.apache.poi.ss.usermodel.Cell getCell(int)>(i0);

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Row: org.apache.poi.ss.usermodel.Cell createCell(int)>(i0);

     label1:
        return r2;
    }

    public static org.apache.poi.ss.usermodel.Cell createCell(org.apache.poi.ss.usermodel.Row, int, java.lang.String, org.apache.poi.ss.usermodel.CellStyle)
    {
        org.apache.poi.ss.usermodel.Sheet $r3;
        org.apache.poi.ss.usermodel.RichTextString $r7;
        org.apache.poi.ss.usermodel.Workbook $r4;
        int i0;
        org.apache.poi.ss.usermodel.Cell $r1;
        org.apache.poi.ss.usermodel.CreationHelper $r5;
        org.apache.poi.ss.usermodel.Row r0, $r2;
        java.lang.String r6;
        org.apache.poi.ss.usermodel.CellStyle r8;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Row;

        i0 := @parameter1: int;

        r6 := @parameter2: java.lang.String;

        r8 := @parameter3: org.apache.poi.ss.usermodel.CellStyle;

        $r1 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.usermodel.Cell getCell(org.apache.poi.ss.usermodel.Row,int)>(r0, i0);

        $r2 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.Row getRow()>();

        $r3 = interfaceinvoke $r2.<org.apache.poi.ss.usermodel.Row: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $r4 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        $r5 = interfaceinvoke $r4.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.CreationHelper getCreationHelper()>();

        $r7 = interfaceinvoke $r5.<org.apache.poi.ss.usermodel.CreationHelper: org.apache.poi.ss.usermodel.RichTextString createRichTextString(java.lang.String)>(r6);

        interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Cell: void setCellValue(org.apache.poi.ss.usermodel.RichTextString)>($r7);

        if r8 == null goto label1;

        interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Cell: void setCellStyle(org.apache.poi.ss.usermodel.CellStyle)>(r8);

     label1:
        return $r1;
    }

    public static org.apache.poi.ss.usermodel.Cell createCell(org.apache.poi.ss.usermodel.Row, int, java.lang.String)
    {
        int i0;
        org.apache.poi.ss.usermodel.Cell $r2;
        org.apache.poi.ss.usermodel.Row r0;
        java.lang.String r1;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Row;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.usermodel.Cell createCell(org.apache.poi.ss.usermodel.Row,int,java.lang.String,org.apache.poi.ss.usermodel.CellStyle)>(r0, i0, r1, null);

        return $r2;
    }

    public static void setAlignment(org.apache.poi.ss.usermodel.Cell, org.apache.poi.ss.usermodel.Workbook, short)
    {
        org.apache.poi.ss.usermodel.Workbook r1;
        short s0;
        java.lang.Short $r2;
        org.apache.poi.ss.usermodel.Cell r0;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        r1 := @parameter1: org.apache.poi.ss.usermodel.Workbook;

        s0 := @parameter2: short;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        staticinvoke <org.apache.poi.ss.util.CellUtil: void setCellStyleProperty(org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.Workbook,java.lang.String,java.lang.Object)>(r0, r1, "alignment", $r2);

        return;
    }

    public static void setFont(org.apache.poi.ss.usermodel.Cell, org.apache.poi.ss.usermodel.Workbook, org.apache.poi.ss.usermodel.Font)
    {
        org.apache.poi.ss.usermodel.Workbook r1;
        short $s0;
        org.apache.poi.ss.usermodel.Font r2;
        java.lang.Short $r3;
        org.apache.poi.ss.usermodel.Cell r0;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        r1 := @parameter1: org.apache.poi.ss.usermodel.Workbook;

        r2 := @parameter2: org.apache.poi.ss.usermodel.Font;

        $s0 = interfaceinvoke r2.<org.apache.poi.ss.usermodel.Font: short getIndex()>();

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        staticinvoke <org.apache.poi.ss.util.CellUtil: void setCellStyleProperty(org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.Workbook,java.lang.String,java.lang.Object)>(r0, r1, "font", $r3);

        return;
    }

    public static void setCellStyleProperty(org.apache.poi.ss.usermodel.Cell, org.apache.poi.ss.usermodel.Workbook, java.lang.String, java.lang.Object)
    {
        org.apache.poi.ss.usermodel.Workbook r5;
        short $s0, s2;
        java.util.Map $r2, $r8;
        org.apache.poi.ss.usermodel.Cell r0;
        int $i1, $i3;
        java.lang.Object r4;
        java.lang.String r3;
        org.apache.poi.ss.usermodel.CellStyle $r1, $r6, $r7, r9;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        r5 := @parameter1: org.apache.poi.ss.usermodel.Workbook;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        $r1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.CellStyle getCellStyle()>();

        r9 = null;

        $r2 = staticinvoke <org.apache.poi.ss.util.CellUtil: java.util.Map getFormatProperties(org.apache.poi.ss.usermodel.CellStyle)>($r1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        $s0 = interfaceinvoke r5.<org.apache.poi.ss.usermodel.Workbook: short getNumCellStyles()>();

        s2 = 0;

     label1:
        $i3 = (int) $s0;

        if s2 >= $i3 goto label3;

        $r7 = interfaceinvoke r5.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.CellStyle getCellStyleAt(short)>(s2);

        $r8 = staticinvoke <org.apache.poi.ss.util.CellUtil: java.util.Map getFormatProperties(org.apache.poi.ss.usermodel.CellStyle)>($r7);

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        r9 = $r7;

        goto label3;

     label2:
        $i1 = s2 + 1;

        s2 = (short) $i1;

        goto label1;

     label3:
        if r9 != null goto label4;

        $r6 = interfaceinvoke r5.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.CellStyle createCellStyle()>();

        r9 = $r6;

        staticinvoke <org.apache.poi.ss.util.CellUtil: void setFormatProperties(org.apache.poi.ss.usermodel.CellStyle,org.apache.poi.ss.usermodel.Workbook,java.util.Map)>($r6, r5, $r2);

     label4:
        interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: void setCellStyle(org.apache.poi.ss.usermodel.CellStyle)>(r9);

        return;
    }

    private static java.util.Map getFormatProperties(org.apache.poi.ss.usermodel.CellStyle)
    {
        java.util.HashMap $r0;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16;
        boolean $z0, $z1, $z2;
        org.apache.poi.ss.usermodel.CellStyle r1;

        r1 := @parameter0: org.apache.poi.ss.usermodel.CellStyle;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $s0 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getAlignment()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "alignment", $s0);

        $s1 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getBorderBottom()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "borderBottom", $s1);

        $s2 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getBorderLeft()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "borderLeft", $s2);

        $s3 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getBorderRight()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "borderRight", $s3);

        $s4 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getBorderTop()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "borderTop", $s4);

        $s5 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getBottomBorderColor()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "bottomBorderColor", $s5);

        $s6 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getDataFormat()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "dataFormat", $s6);

        $s7 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getFillBackgroundColor()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "fillBackgroundColor", $s7);

        $s8 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getFillForegroundColor()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "fillForegroundColor", $s8);

        $s9 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getFillPattern()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "fillPattern", $s9);

        $s10 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getFontIndex()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "font", $s10);

        $z0 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: boolean getHidden()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putBoolean(java.util.Map,java.lang.String,boolean)>($r0, "hidden", $z0);

        $s11 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getIndention()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "indention", $s11);

        $s12 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getLeftBorderColor()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "leftBorderColor", $s12);

        $z1 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: boolean getLocked()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putBoolean(java.util.Map,java.lang.String,boolean)>($r0, "locked", $z1);

        $s13 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getRightBorderColor()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "rightBorderColor", $s13);

        $s14 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getRotation()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "rotation", $s14);

        $s15 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getTopBorderColor()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "topBorderColor", $s15);

        $s16 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getVerticalAlignment()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putShort(java.util.Map,java.lang.String,short)>($r0, "verticalAlignment", $s16);

        $z2 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: boolean getWrapText()>();

        staticinvoke <org.apache.poi.ss.util.CellUtil: void putBoolean(java.util.Map,java.lang.String,boolean)>($r0, "wrapText", $z2);

        return $r0;
    }

    private static void setFormatProperties(org.apache.poi.ss.usermodel.CellStyle, org.apache.poi.ss.usermodel.Workbook, java.util.Map)
    {
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16;
        org.apache.poi.ss.usermodel.Font $r3;
        java.util.Map r1;
        boolean $z0, $z1, $z2;
        org.apache.poi.ss.usermodel.Workbook r2;
        org.apache.poi.ss.usermodel.CellStyle r0;

        r0 := @parameter0: org.apache.poi.ss.usermodel.CellStyle;

        r2 := @parameter1: org.apache.poi.ss.usermodel.Workbook;

        r1 := @parameter2: java.util.Map;

        $s0 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "alignment");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setAlignment(short)>($s0);

        $s1 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "borderBottom");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setBorderBottom(short)>($s1);

        $s2 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "borderLeft");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setBorderLeft(short)>($s2);

        $s3 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "borderRight");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setBorderRight(short)>($s3);

        $s4 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "borderTop");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setBorderTop(short)>($s4);

        $s5 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "bottomBorderColor");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setBottomBorderColor(short)>($s5);

        $s6 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "dataFormat");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setDataFormat(short)>($s6);

        $s7 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "fillBackgroundColor");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setFillBackgroundColor(short)>($s7);

        $s8 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "fillForegroundColor");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setFillForegroundColor(short)>($s8);

        $s9 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "fillPattern");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setFillPattern(short)>($s9);

        $s10 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "font");

        $r3 = interfaceinvoke r2.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.Font getFontAt(short)>($s10);

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setFont(org.apache.poi.ss.usermodel.Font)>($r3);

        $z0 = staticinvoke <org.apache.poi.ss.util.CellUtil: boolean getBoolean(java.util.Map,java.lang.String)>(r1, "hidden");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setHidden(boolean)>($z0);

        $s11 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "indention");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setIndention(short)>($s11);

        $s12 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "leftBorderColor");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setLeftBorderColor(short)>($s12);

        $z1 = staticinvoke <org.apache.poi.ss.util.CellUtil: boolean getBoolean(java.util.Map,java.lang.String)>(r1, "locked");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setLocked(boolean)>($z1);

        $s13 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "rightBorderColor");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setRightBorderColor(short)>($s13);

        $s14 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "rotation");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setRotation(short)>($s14);

        $s15 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "topBorderColor");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setTopBorderColor(short)>($s15);

        $s16 = staticinvoke <org.apache.poi.ss.util.CellUtil: short getShort(java.util.Map,java.lang.String)>(r1, "verticalAlignment");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setVerticalAlignment(short)>($s16);

        $z2 = staticinvoke <org.apache.poi.ss.util.CellUtil: boolean getBoolean(java.util.Map,java.lang.String)>(r1, "wrapText");

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: void setWrapText(boolean)>($z2);

        return;
    }

    private static short getShort(java.util.Map, java.lang.String)
    {
        short $s0;
        java.lang.Short $r3;
        java.util.Map r0;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Short;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Short) $r2;

        $s0 = virtualinvoke $r3.<java.lang.Short: short shortValue()>();

        return $s0;

     label1:
        return 0;
    }

    private static boolean getBoolean(java.util.Map, java.lang.String)
    {
        java.util.Map r0;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Boolean) $r2;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        return 0;
    }

    private static void putShort(java.util.Map, java.lang.String, short)
    {
        short s0;
        java.lang.Short $r2;
        java.util.Map r0;
        java.lang.String r1;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    private static void putBoolean(java.util.Map, java.lang.String, boolean)
    {
        java.util.Map r0;
        java.lang.Boolean $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    public static org.apache.poi.ss.usermodel.Cell translateUnicodeValues(org.apache.poi.ss.usermodel.Cell)
    {
        org.apache.poi.ss.util.CellUtil$UnicodeMapping r11;
        org.apache.poi.ss.usermodel.Cell r0;
        int $i0, $i1, i2, $i4;
        java.lang.String $r2, $r3, r12, $r13, r14;
        org.apache.poi.ss.util.CellUtil$UnicodeMapping[] $r4, $r10;
        boolean z0;
        org.apache.poi.ss.usermodel.Sheet $r6;
        org.apache.poi.ss.usermodel.RichTextString $r1, $r9;
        org.apache.poi.ss.usermodel.Workbook $r7;
        org.apache.poi.ss.usermodel.CreationHelper $r8;
        org.apache.poi.ss.usermodel.Row $r5;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        $r1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()>();

        $r2 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.RichTextString: java.lang.String getString()>();

        r14 = $r2;

        z0 = 0;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        i2 = 0;

     label1:
        $r4 = <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping[] unicodeMappings>;

        $i0 = lengthof $r4;

        if i2 >= $i0 goto label3;

        $r10 = <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping[] unicodeMappings>;

        r11 = $r10[i2];

        r12 = r11.<org.apache.poi.ss.util.CellUtil$UnicodeMapping: java.lang.String entityName>;

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(r12);

        $i4 = (int) -1;

        if $i1 == $i4 goto label2;

        $r13 = r11.<org.apache.poi.ss.util.CellUtil$UnicodeMapping: java.lang.String resolvedValue>;

        r14 = virtualinvoke r14.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(r12, $r13);

        z0 = 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $r5 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.Row getRow()>();

        $r6 = interfaceinvoke $r5.<org.apache.poi.ss.usermodel.Row: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $r7 = interfaceinvoke $r6.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        $r8 = interfaceinvoke $r7.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.CreationHelper getCreationHelper()>();

        $r9 = interfaceinvoke $r8.<org.apache.poi.ss.usermodel.CreationHelper: org.apache.poi.ss.usermodel.RichTextString createRichTextString(java.lang.String)>(r14);

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: void setCellValue(org.apache.poi.ss.usermodel.RichTextString)>($r9);

     label4:
        return r0;
    }

    private static org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String, java.lang.String)
    {
        org.apache.poi.ss.util.CellUtil$UnicodeMapping $r0;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.poi.ss.util.CellUtil$UnicodeMapping;

        specialinvoke $r0.<org.apache.poi.ss.util.CellUtil$UnicodeMapping: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.util.CellUtil$UnicodeMapping $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        org.apache.poi.ss.util.CellUtil$UnicodeMapping[] $r0;

        <org.apache.poi.ss.util.CellUtil: java.lang.String WRAP_TEXT> = "wrapText";

        <org.apache.poi.ss.util.CellUtil: java.lang.String VERTICAL_ALIGNMENT> = "verticalAlignment";

        <org.apache.poi.ss.util.CellUtil: java.lang.String TOP_BORDER_COLOR> = "topBorderColor";

        <org.apache.poi.ss.util.CellUtil: java.lang.String ROTATION> = "rotation";

        <org.apache.poi.ss.util.CellUtil: java.lang.String RIGHT_BORDER_COLOR> = "rightBorderColor";

        <org.apache.poi.ss.util.CellUtil: java.lang.String LOCKED> = "locked";

        <org.apache.poi.ss.util.CellUtil: java.lang.String LEFT_BORDER_COLOR> = "leftBorderColor";

        <org.apache.poi.ss.util.CellUtil: java.lang.String INDENTION> = "indention";

        <org.apache.poi.ss.util.CellUtil: java.lang.String HIDDEN> = "hidden";

        <org.apache.poi.ss.util.CellUtil: java.lang.String FONT> = "font";

        <org.apache.poi.ss.util.CellUtil: java.lang.String FILL_PATTERN> = "fillPattern";

        <org.apache.poi.ss.util.CellUtil: java.lang.String FILL_FOREGROUND_COLOR> = "fillForegroundColor";

        <org.apache.poi.ss.util.CellUtil: java.lang.String FILL_BACKGROUND_COLOR> = "fillBackgroundColor";

        <org.apache.poi.ss.util.CellUtil: java.lang.String DATA_FORMAT> = "dataFormat";

        <org.apache.poi.ss.util.CellUtil: java.lang.String BOTTOM_BORDER_COLOR> = "bottomBorderColor";

        <org.apache.poi.ss.util.CellUtil: java.lang.String BORDER_TOP> = "borderTop";

        <org.apache.poi.ss.util.CellUtil: java.lang.String BORDER_RIGHT> = "borderRight";

        <org.apache.poi.ss.util.CellUtil: java.lang.String BORDER_LEFT> = "borderLeft";

        <org.apache.poi.ss.util.CellUtil: java.lang.String BORDER_BOTTOM> = "borderBottom";

        <org.apache.poi.ss.util.CellUtil: java.lang.String ALIGNMENT> = "alignment";

        $r0 = newarray (org.apache.poi.ss.util.CellUtil$UnicodeMapping)[15];

        $r1 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("alpha", "\u03b1");

        $r0[0] = $r1;

        $r2 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("beta", "\u03b2");

        $r0[1] = $r2;

        $r3 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("gamma", "\u03b3");

        $r0[2] = $r3;

        $r4 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("delta", "\u03b4");

        $r0[3] = $r4;

        $r5 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("epsilon", "\u03b5");

        $r0[4] = $r5;

        $r6 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("zeta", "\u03b6");

        $r0[5] = $r6;

        $r7 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("eta", "\u03b7");

        $r0[6] = $r7;

        $r8 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("theta", "\u03b8");

        $r0[7] = $r8;

        $r9 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("iota", "\u03b9");

        $r0[8] = $r9;

        $r10 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("kappa", "\u03ba");

        $r0[9] = $r10;

        $r11 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("lambda", "\u03bb");

        $r0[10] = $r11;

        $r12 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("mu", "\u03bc");

        $r0[11] = $r12;

        $r13 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("nu", "\u03bd");

        $r0[12] = $r13;

        $r14 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("xi", "\u03be");

        $r0[13] = $r14;

        $r15 = staticinvoke <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping um(java.lang.String,java.lang.String)>("omicron", "\u03bf");

        $r0[14] = $r15;

        <org.apache.poi.ss.util.CellUtil: org.apache.poi.ss.util.CellUtil$UnicodeMapping[] unicodeMappings> = $r0;

        return;
    }
}
