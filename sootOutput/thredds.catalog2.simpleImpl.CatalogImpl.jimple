class thredds.catalog2.simpleImpl.CatalogImpl extends java.lang.Object implements thredds.catalog2.Catalog, thredds.catalog2.builder.CatalogBuilder
{
    private java.lang.String name;
    private java.net.URI docBaseUri;
    private java.lang.String version;
    private ucar.nc2.units.DateType expires;
    private ucar.nc2.units.DateType lastModified;
    private final thredds.catalog2.simpleImpl.ServiceContainer serviceContainer;
    private final thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer;
    private final thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer;
    private final thredds.catalog2.simpleImpl.PropertyContainer propertyContainer;
    private boolean isBuilt;

    void <init>(java.lang.String, java.net.URI, java.lang.String, ucar.nc2.units.DateType, ucar.nc2.units.DateType)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r6, $r8;
        thredds.catalog2.simpleImpl.PropertyContainer $r10;
        java.lang.IllegalArgumentException $r11;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r9;
        thredds.catalog2.simpleImpl.ServiceContainer $r7;
        java.net.URI r1;
        java.lang.String r2, r3;
        ucar.nc2.units.DateType r4, r5;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.net.URI;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: ucar.nc2.units.DateType;

        r5 := @parameter4: ucar.nc2.units.DateType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt> = 0;

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Catalog base URI must not be null.");

        throw $r11;

     label1:
        r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.lang.String name> = r2;

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.net.URI docBaseUri> = r1;

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.lang.String version> = r3;

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: ucar.nc2.units.DateType expires> = r4;

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: ucar.nc2.units.DateType lastModified> = r5;

        $r6 = new thredds.catalog2.simpleImpl.GlobalServiceContainer;

        specialinvoke $r6.<thredds.catalog2.simpleImpl.GlobalServiceContainer: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer> = $r6;

        $r7 = new thredds.catalog2.simpleImpl.ServiceContainer;

        $r8 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        specialinvoke $r7.<thredds.catalog2.simpleImpl.ServiceContainer: void <init>(thredds.catalog2.simpleImpl.GlobalServiceContainer)>($r8);

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer> = $r7;

        $r9 = new thredds.catalog2.simpleImpl.DatasetNodeContainer;

        specialinvoke $r9.<thredds.catalog2.simpleImpl.DatasetNodeContainer: void <init>(thredds.catalog2.simpleImpl.DatasetNodeContainer)>(null);

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer> = $r9;

        $r10 = new thredds.catalog2.simpleImpl.PropertyContainer;

        specialinvoke $r10.<thredds.catalog2.simpleImpl.PropertyContainer: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer> = $r10;

        return;
    }

    thredds.catalog2.simpleImpl.DatasetNodeContainer getDatasetNodeContainer()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r2;

     label1:
        r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.lang.String name> = r1;

        return;
    }

    public java.lang.String getName()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.lang.String name>;

        return $r1;
    }

    public void setDocBaseUri(java.net.URI)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r3;
        java.net.URI r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.net.URI;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r3;

     label1:
        if r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Catalog base URI must not be null.");

        throw $r2;

     label2:
        r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.net.URI docBaseUri> = r1;

        return;
    }

    public java.net.URI getDocBaseUri()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.net.URI $r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.net.URI docBaseUri>;

        return $r1;
    }

    public void setVersion(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r2;

     label1:
        r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.lang.String version> = r1;

        return;
    }

    public java.lang.String getVersion()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: java.lang.String version>;

        return $r1;
    }

    public void setExpires(ucar.nc2.units.DateType)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r2;
        boolean $z0;
        ucar.nc2.units.DateType r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: ucar.nc2.units.DateType;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r2;

     label1:
        r0.<thredds.catalog2.simpleImpl.CatalogImpl: ucar.nc2.units.DateType expires> = r1;

        return;
    }

    public ucar.nc2.units.DateType getExpires()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        ucar.nc2.units.DateType $r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: ucar.nc2.units.DateType expires>;

        return $r1;
    }

    public void setLastModified(ucar.nc2.units.DateType)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r2;
        boolean $z0;
        ucar.nc2.units.DateType r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: ucar.nc2.units.DateType;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r2;

     label1:
        r0.<thredds.catalog2.simpleImpl.CatalogImpl: ucar.nc2.units.DateType lastModified> = r1;

        return;
    }

    public ucar.nc2.units.DateType getLastModified()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        ucar.nc2.units.DateType $r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: ucar.nc2.units.DateType lastModified>;

        return $r1;
    }

    public thredds.catalog2.builder.ServiceBuilder addService(java.lang.String, thredds.catalog.ServiceType, java.net.URI)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r6;
        thredds.catalog2.simpleImpl.ServiceImpl $r5;
        thredds.catalog.ServiceType r2;
        thredds.catalog2.simpleImpl.ServiceContainer $r4;
        java.lang.String r1;
        java.net.URI r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.catalog.ServiceType;

        r3 := @parameter2: java.net.URI;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r6;

     label1:
        $r4 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r5 = virtualinvoke $r4.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl addService(java.lang.String,thredds.catalog.ServiceType,java.net.URI)>(r1, r2, r3);

        return $r5;
    }

    public boolean removeService(thredds.catalog2.builder.ServiceBuilder)
    {
        thredds.catalog2.builder.ServiceBuilder r1;
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl $r2;
        thredds.catalog2.simpleImpl.ServiceContainer $r3;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: thredds.catalog2.builder.ServiceBuilder;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r4;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r2 = (thredds.catalog2.simpleImpl.ServiceImpl) r1;

        $z1 = virtualinvoke $r3.<thredds.catalog2.simpleImpl.ServiceContainer: boolean removeService(thredds.catalog2.simpleImpl.ServiceImpl)>($r2);

        return $z1;
    }

    public java.util.List getServices()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.ServiceContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Catalog has escaped its CatalogBuilder without build() being called.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List getServices()>();

        return $r2;
    }

    public thredds.catalog2.Service getServiceByName(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceContainer $r2;
        java.lang.String r1;
        thredds.catalog2.Service $r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Catalog has escaped its CatalogBuilder without being build()-ed.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.Service getServiceByName(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.Service findServiceByNameGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r2;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Catalog has escaped its CatalogBuilder without being build()-ed.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.GlobalServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl getServiceByGloballyUniqueName(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getServiceBuilders()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.ServiceContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List getServiceBuilders()>();

        return $r2;
    }

    public thredds.catalog2.builder.ServiceBuilder getServiceBuilderByName(java.lang.String)
    {
        thredds.catalog2.builder.ServiceBuilder $r3;
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceContainer $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.builder.ServiceBuilder getServiceBuilderByName(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.builder.ServiceBuilder findServiceBuilderByNameGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r2;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.GlobalServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl getServiceByGloballyUniqueName(java.lang.String)>(r1);

        return $r3;
    }

    public void addProperty(java.lang.String, java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.PropertyContainer $r3;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r4;

     label1:
        $r3 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        virtualinvoke $r3.<thredds.catalog2.simpleImpl.PropertyContainer: void addProperty(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public boolean removeProperty(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r3;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r3;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $z1 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: boolean removeProperty(java.lang.String)>(r1);

        return $z1;
    }

    public java.util.List getPropertyNames()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.PropertyContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.List getPropertyNames()>();

        return $r2;
    }

    public java.lang.String getPropertyValue(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: java.lang.String getPropertyValue(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getProperties()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.PropertyContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Catalog has escaped from its CatalogBuilder before build() was called.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.List getProperties()>();

        return $r2;
    }

    public thredds.catalog2.Property getPropertyByName(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        thredds.catalog2.Property $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Catalog has escaped from its CatalogBuilder before build() was called.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: thredds.catalog2.Property getPropertyByName(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.builder.DatasetBuilder addDataset(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.DatasetImpl $r1;
        java.lang.String r2;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r4;

     label1:
        $r1 = new thredds.catalog2.simpleImpl.DatasetImpl;

        specialinvoke $r1.<thredds.catalog2.simpleImpl.DatasetImpl: void <init>(java.lang.String,thredds.catalog2.simpleImpl.CatalogImpl,thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r2, r0, null);

        $r3 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        virtualinvoke $r3.<thredds.catalog2.simpleImpl.DatasetNodeContainer: void addDatasetNode(thredds.catalog2.simpleImpl.DatasetNodeImpl)>($r1);

        return $r1;
    }

    public thredds.catalog2.builder.CatalogRefBuilder addCatalogRef(java.lang.String, java.net.URI)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r5;
        thredds.catalog2.simpleImpl.CatalogRefImpl $r1;
        java.lang.String r2;
        java.net.URI r3;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r4;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.net.URI;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r5;

     label1:
        $r1 = new thredds.catalog2.simpleImpl.CatalogRefImpl;

        specialinvoke $r1.<thredds.catalog2.simpleImpl.CatalogRefImpl: void <init>(java.lang.String,java.net.URI,thredds.catalog2.simpleImpl.CatalogImpl,thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r2, r3, r0, null);

        $r4 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        virtualinvoke $r4.<thredds.catalog2.simpleImpl.DatasetNodeContainer: void addDatasetNode(thredds.catalog2.simpleImpl.DatasetNodeImpl)>($r1);

        return $r1;
    }

    public boolean removeDataset(thredds.catalog2.builder.DatasetNodeBuilder)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r5;
        java.lang.IllegalArgumentException $r4;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r3;
        thredds.catalog2.builder.DatasetNodeBuilder r1;
        thredds.catalog2.simpleImpl.DatasetNodeImpl $r2;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: thredds.catalog2.builder.DatasetNodeBuilder;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DatasetNodeBuilder may not be null.");

        throw $r4;

     label2:
        $r3 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r2 = (thredds.catalog2.simpleImpl.DatasetNodeImpl) r1;

        $z1 = virtualinvoke $r3.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean removeDatasetNode(thredds.catalog2.simpleImpl.DatasetNodeImpl)>($r2);

        return $z1;
    }

    public java.util.List getDatasets()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Catalog has escaped its CatalogBuilder without being build()-ed.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List getDatasets()>();

        return $r2;
    }

    public thredds.catalog2.DatasetNode getDatasetById(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.DatasetNode $r3;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Catalog has escaped its CatalogBuilder without being build()-ed.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.DatasetNode getDatasetById(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.DatasetNode findDatasetByIdGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl $r3;
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Catalog has escaped its CatalogBuilder without being build()-ed.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeImpl getDatasetNodeByGloballyUniqueId(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getDatasetNodeBuilders()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List getDatasetNodeBuilders()>();

        return $r2;
    }

    public thredds.catalog2.builder.DatasetNodeBuilder getDatasetNodeBuilderById(java.lang.String)
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        boolean $z0;
        thredds.catalog2.builder.DatasetNodeBuilder $r3;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.builder.DatasetNodeBuilder getDatasetNodeBuilderById(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.builder.DatasetNodeBuilder findDatasetNodeBuilderByIdGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl $r3;
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        java.lang.IllegalStateException $r4;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This CatalogBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeImpl getDatasetNodeByGloballyUniqueId(java.lang.String)>(r1);

        return $r3;
    }

    public boolean isBuilt()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        return $z0;
    }

    public thredds.catalog2.builder.BuilderIssues getIssues()
    {
        thredds.catalog2.simpleImpl.CatalogImpl r1;
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r2;
        thredds.catalog2.simpleImpl.PropertyContainer $r8;
        thredds.catalog2.builder.BuilderIssues $r0, $r3, $r5, $r7, $r9;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r6;
        thredds.catalog2.simpleImpl.ServiceContainer $r4;

        r1 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $r0 = new thredds.catalog2.builder.BuilderIssues;

        specialinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void <init>()>();

        $r2 = r1.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.GlobalServiceContainer: thredds.catalog2.builder.BuilderIssues getIssues(thredds.catalog2.builder.ThreddsBuilder)>(r1);

        virtualinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r3);

        $r4 = r1.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r5 = virtualinvoke $r4.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.builder.BuilderIssues getIssues()>();

        virtualinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r5);

        $r6 = r1.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r7 = virtualinvoke $r6.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.builder.BuilderIssues getIssues()>();

        virtualinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r7);

        $r8 = r1.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r9 = virtualinvoke $r8.<thredds.catalog2.simpleImpl.PropertyContainer: thredds.catalog2.builder.BuilderIssues getIssues()>();

        virtualinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r9);

        return $r0;
    }

    public thredds.catalog2.Catalog build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r3;
        thredds.catalog2.simpleImpl.ServiceContainer $r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        virtualinvoke $r1.<thredds.catalog2.simpleImpl.ServiceContainer: void build()>();

        $r2 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: void build()>();

        $r3 = r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        virtualinvoke $r3.<thredds.catalog2.simpleImpl.PropertyContainer: void build()>();

        r0.<thredds.catalog2.simpleImpl.CatalogImpl: boolean isBuilt> = 1;

        return r0;
    }

    public volatile java.lang.Object build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.simpleImpl.CatalogImpl r0;
        thredds.catalog2.Catalog $r1;

        r0 := @this: thredds.catalog2.simpleImpl.CatalogImpl;

        $r1 = virtualinvoke r0.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.Catalog build()>();

        return $r1;
    }
}
