public class org.jdom.transform.XSLTransformer extends java.lang.Object
{
    private static final java.lang.String CVS_ID;
    private javax.xml.transform.Templates templates;

    public void <init>(java.io.File) throws org.jdom.transform.XSLTransformException
    {
        org.jdom.transform.XSLTransformer r0;
        java.io.File r2;
        javax.xml.transform.stream.StreamSource $r1;

        r0 := @this: org.jdom.transform.XSLTransformer;

        r2 := @parameter0: java.io.File;

        $r1 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r1.<javax.xml.transform.stream.StreamSource: void <init>(java.io.File)>(r2);

        specialinvoke r0.<org.jdom.transform.XSLTransformer: void <init>(javax.xml.transform.Source)>($r1);

        return;
    }

    public void <init>(java.io.InputStream) throws org.jdom.transform.XSLTransformException
    {
        org.jdom.transform.XSLTransformer r0;
        javax.xml.transform.stream.StreamSource $r1;
        java.io.InputStream r2;

        r0 := @this: org.jdom.transform.XSLTransformer;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r1.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.jdom.transform.XSLTransformer: void <init>(javax.xml.transform.Source)>($r1);

        return;
    }

    public void <init>(java.io.Reader) throws org.jdom.transform.XSLTransformException
    {
        java.io.Reader r2;
        org.jdom.transform.XSLTransformer r0;
        javax.xml.transform.stream.StreamSource $r1;

        r0 := @this: org.jdom.transform.XSLTransformer;

        r2 := @parameter0: java.io.Reader;

        $r1 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r1.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>(r2);

        specialinvoke r0.<org.jdom.transform.XSLTransformer: void <init>(javax.xml.transform.Source)>($r1);

        return;
    }

    public void <init>(java.lang.String) throws org.jdom.transform.XSLTransformException
    {
        java.lang.String r2;
        org.jdom.transform.XSLTransformer r0;
        javax.xml.transform.stream.StreamSource $r1;

        r0 := @this: org.jdom.transform.XSLTransformer;

        r2 := @parameter0: java.lang.String;

        $r1 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r1.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<org.jdom.transform.XSLTransformer: void <init>(javax.xml.transform.Source)>($r1);

        return;
    }

    private void <init>(javax.xml.transform.Source) throws org.jdom.transform.XSLTransformException
    {
        javax.xml.transform.Templates $r3;
        javax.xml.transform.TransformerException $r4;
        org.jdom.transform.XSLTransformer r0;
        org.jdom.transform.XSLTransformException $r5;
        javax.xml.transform.TransformerFactory $r1;
        javax.xml.transform.Source r2;

        r0 := @this: org.jdom.transform.XSLTransformer;

        r2 := @parameter0: javax.xml.transform.Source;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r1 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r3 = virtualinvoke $r1.<javax.xml.transform.TransformerFactory: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r2);

        r0.<org.jdom.transform.XSLTransformer: javax.xml.transform.Templates templates> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.jdom.transform.XSLTransformException;

        specialinvoke $r5.<org.jdom.transform.XSLTransformException: void <init>(java.lang.String,java.lang.Exception)>("Could not construct XSLTransformer", $r4);

        throw $r5;

     label4:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public void <init>(org.jdom.Document) throws org.jdom.transform.XSLTransformException
    {
        org.jdom.Document r2;
        org.jdom.transform.JDOMSource $r1;
        org.jdom.transform.XSLTransformer r0;

        r0 := @this: org.jdom.transform.XSLTransformer;

        r2 := @parameter0: org.jdom.Document;

        $r1 = new org.jdom.transform.JDOMSource;

        specialinvoke $r1.<org.jdom.transform.JDOMSource: void <init>(org.jdom.Document)>(r2);

        specialinvoke r0.<org.jdom.transform.XSLTransformer: void <init>(javax.xml.transform.Source)>($r1);

        return;
    }

    public java.util.List transform(java.util.List) throws org.jdom.transform.XSLTransformException
    {
        javax.xml.transform.Transformer $r5;
        javax.xml.transform.Templates $r4;
        javax.xml.transform.TransformerException $r7;
        org.jdom.transform.XSLTransformer r3;
        org.jdom.transform.XSLTransformException $r8;
        org.jdom.transform.JDOMResult $r2;
        java.util.List r1, $r6;
        org.jdom.transform.JDOMSource $r0;

        r3 := @this: org.jdom.transform.XSLTransformer;

        r1 := @parameter0: java.util.List;

        $r0 = new org.jdom.transform.JDOMSource;

        specialinvoke $r0.<org.jdom.transform.JDOMSource: void <init>(java.util.List)>(r1);

        $r2 = new org.jdom.transform.JDOMResult;

        specialinvoke $r2.<org.jdom.transform.JDOMResult: void <init>()>();

     label1:
        $r4 = r3.<org.jdom.transform.XSLTransformer: javax.xml.transform.Templates templates>;

        $r5 = interfaceinvoke $r4.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r5.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r0, $r2);

        $r6 = virtualinvoke $r2.<org.jdom.transform.JDOMResult: java.util.List getResult()>();

        return $r6;

     label2:
        $r7 := @caughtexception;

        $r8 = new org.jdom.transform.XSLTransformException;

        specialinvoke $r8.<org.jdom.transform.XSLTransformException: void <init>(java.lang.String,java.lang.Exception)>("Could not perform transformation", $r7);

        throw $r8;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
    }

    public org.jdom.Document transform(org.jdom.Document) throws org.jdom.transform.XSLTransformException
    {
        javax.xml.transform.Transformer $r5;
        javax.xml.transform.Templates $r4;
        javax.xml.transform.TransformerException $r7;
        org.jdom.transform.XSLTransformer r3;
        org.jdom.transform.XSLTransformException $r8;
        org.jdom.transform.JDOMResult $r2;
        org.jdom.Document r1, $r6;
        org.jdom.transform.JDOMSource $r0;

        r3 := @this: org.jdom.transform.XSLTransformer;

        r1 := @parameter0: org.jdom.Document;

        $r0 = new org.jdom.transform.JDOMSource;

        specialinvoke $r0.<org.jdom.transform.JDOMSource: void <init>(org.jdom.Document)>(r1);

        $r2 = new org.jdom.transform.JDOMResult;

        specialinvoke $r2.<org.jdom.transform.JDOMResult: void <init>()>();

     label1:
        $r4 = r3.<org.jdom.transform.XSLTransformer: javax.xml.transform.Templates templates>;

        $r5 = interfaceinvoke $r4.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r5.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r0, $r2);

        $r6 = virtualinvoke $r2.<org.jdom.transform.JDOMResult: org.jdom.Document getDocument()>();

        return $r6;

     label2:
        $r7 := @caughtexception;

        $r8 = new org.jdom.transform.XSLTransformException;

        specialinvoke $r8.<org.jdom.transform.XSLTransformException: void <init>(java.lang.String,java.lang.Exception)>("Could not perform transformation", $r7);

        throw $r8;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <org.jdom.transform.XSLTransformer: java.lang.String CVS_ID> = "@(#) $RCSfile: XSLTransformer.java,v $ $Revision: 1.2 $ $Date: 2004/02/06 09:28:32 $ $Name: jdom_1_0 $";

        return;
    }
}
