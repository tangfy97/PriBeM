public class org.apache.zookeeper.server.quorum.LearnerSessionTracker extends java.lang.Object implements org.apache.zookeeper.server.SessionTracker
{
    org.apache.zookeeper.server.SessionTracker$SessionExpirer expirer;
    java.util.HashMap touchTable;
    long serverId;
    long nextSessionId;
    private java.util.concurrent.ConcurrentHashMap sessionsWithTimeouts;

    public void <init>(org.apache.zookeeper.server.SessionTracker$SessionExpirer, java.util.concurrent.ConcurrentHashMap, long)
    {
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;
        java.util.concurrent.ConcurrentHashMap r3;
        java.util.HashMap $r1;
        long l0, $l1, $l2;
        org.apache.zookeeper.server.SessionTracker$SessionExpirer r2;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        r2 := @parameter0: org.apache.zookeeper.server.SessionTracker$SessionExpirer;

        r3 := @parameter1: java.util.concurrent.ConcurrentHashMap;

        l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.HashMap touchTable> = $r1;

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: long serverId> = 1L;

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: long nextSessionId> = 0L;

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: org.apache.zookeeper.server.SessionTracker$SessionExpirer expirer> = r2;

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.concurrent.ConcurrentHashMap sessionsWithTimeouts> = r3;

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: long serverId> = l0;

        $l1 = r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: long serverId>;

        $l2 = staticinvoke <org.apache.zookeeper.server.SessionTrackerImpl: long initializeNextSession(long)>($l1);

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: long nextSessionId> = $l2;

        return;
    }

    public synchronized void removeSession(long)
    {
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;
        java.lang.Long $r2, $r4;
        java.util.concurrent.ConcurrentHashMap $r1;
        long l0;
        java.util.HashMap $r3;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.concurrent.ConcurrentHashMap sessionsWithTimeouts>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r3 = r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.HashMap touchTable>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        return;
    }

    public void shutdown()
    {
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        return;
    }

    public synchronized void addSession(long, int)
    {
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        long l0;
        java.util.HashMap $r4;
        java.lang.Integer $r3, $r6;
        java.lang.Long $r2, $r5;
        int i1;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.concurrent.ConcurrentHashMap sessionsWithTimeouts>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.HashMap touchTable>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    public synchronized boolean touchSession(long, int)
    {
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;
        java.lang.Long $r2;
        int i1;
        long l0;
        java.util.HashMap $r1;
        java.lang.Integer $r3;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.HashMap touchTable>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return 1;
    }

    synchronized java.util.HashMap snapshot()
    {
        java.util.HashMap r1, $r2;
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        r1 = r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.HashMap touchTable>;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: java.util.HashMap touchTable> = $r2;

        return r1;
    }

    public synchronized long createSession(int)
    {
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;
        int i2;
        long $l0, $l1;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        i2 := @parameter0: int;

        $l0 = r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: long nextSessionId>;

        $l1 = $l0 + 1L;

        r0.<org.apache.zookeeper.server.quorum.LearnerSessionTracker: long nextSessionId> = $l1;

        return $l0;
    }

    public void checkSession(long, java.lang.Object)
    {
        long l0;
        java.lang.Object r1;
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.Object;

        return;
    }

    public void setOwner(long, java.lang.Object)
    {
        long l0;
        java.lang.Object r1;
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.Object;

        return;
    }

    public void dumpSessions(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        java.lang.String $r2;
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r1;

        r1 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        r0 := @parameter0: java.io.PrintWriter;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        return;
    }

    public void setSessionClosing(long)
    {
        long l0;
        org.apache.zookeeper.server.quorum.LearnerSessionTracker r0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerSessionTracker;

        l0 := @parameter0: long;

        return;
    }
}
