public class org.junit.runner.Result extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.concurrent.atomic.AtomicInteger fCount;
    private java.util.concurrent.atomic.AtomicInteger fIgnoreCount;
    private final java.util.List fFailures;
    private long fRunTime;
    private long fStartTime;

    public void <init>()
    {
        java.util.List $r4;
        org.junit.runner.Result r0;
        java.util.concurrent.atomic.AtomicInteger $r1, $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.junit.runner.Result;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.junit.runner.Result: java.util.concurrent.atomic.AtomicInteger fCount> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.junit.runner.Result: java.util.concurrent.atomic.AtomicInteger fIgnoreCount> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r3);

        r0.<org.junit.runner.Result: java.util.List fFailures> = $r4;

        r0.<org.junit.runner.Result: long fRunTime> = 0L;

        return;
    }

    public int getRunCount()
    {
        int $i0;
        org.junit.runner.Result r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.junit.runner.Result;

        $r1 = r0.<org.junit.runner.Result: java.util.concurrent.atomic.AtomicInteger fCount>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int getFailureCount()
    {
        int $i0;
        java.util.List $r1;
        org.junit.runner.Result r0;

        r0 := @this: org.junit.runner.Result;

        $r1 = r0.<org.junit.runner.Result: java.util.List fFailures>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public long getRunTime()
    {
        long $l0;
        org.junit.runner.Result r0;

        r0 := @this: org.junit.runner.Result;

        $l0 = r0.<org.junit.runner.Result: long fRunTime>;

        return $l0;
    }

    public java.util.List getFailures()
    {
        java.util.List $r1;
        org.junit.runner.Result r0;

        r0 := @this: org.junit.runner.Result;

        $r1 = r0.<org.junit.runner.Result: java.util.List fFailures>;

        return $r1;
    }

    public int getIgnoreCount()
    {
        int $i0;
        org.junit.runner.Result r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.junit.runner.Result;

        $r1 = r0.<org.junit.runner.Result: java.util.concurrent.atomic.AtomicInteger fIgnoreCount>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public boolean wasSuccessful()
    {
        int $i0;
        org.junit.runner.Result r0;
        boolean $z0;

        r0 := @this: org.junit.runner.Result;

        $i0 = virtualinvoke r0.<org.junit.runner.Result: int getFailureCount()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.junit.runner.notification.RunListener createListener()
    {
        org.junit.runner.Result$Listener $r0;
        org.junit.runner.Result r1;

        r1 := @this: org.junit.runner.Result;

        $r0 = new org.junit.runner.Result$Listener;

        specialinvoke $r0.<org.junit.runner.Result$Listener: void <init>(org.junit.runner.Result,org.junit.runner.Result$1)>(r1, null);

        return $r0;
    }

    static long access$002(org.junit.runner.Result, long)
    {
        long l0;
        org.junit.runner.Result r0;

        r0 := @parameter0: org.junit.runner.Result;

        l0 := @parameter1: long;

        r0.<org.junit.runner.Result: long fStartTime> = l0;

        return l0;
    }

    static long access$114(org.junit.runner.Result, long)
    {
        org.junit.runner.Result r0;
        long l0, $l1, $l2;

        r0 := @parameter0: org.junit.runner.Result;

        l0 := @parameter1: long;

        $l1 = r0.<org.junit.runner.Result: long fRunTime>;

        $l2 = $l1 + l0;

        r0.<org.junit.runner.Result: long fRunTime> = $l2;

        return $l2;
    }

    static long access$000(org.junit.runner.Result)
    {
        long $l0;
        org.junit.runner.Result r0;

        r0 := @parameter0: org.junit.runner.Result;

        $l0 = r0.<org.junit.runner.Result: long fStartTime>;

        return $l0;
    }

    static java.util.concurrent.atomic.AtomicInteger access$200(org.junit.runner.Result)
    {
        org.junit.runner.Result r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: org.junit.runner.Result;

        $r1 = r0.<org.junit.runner.Result: java.util.concurrent.atomic.AtomicInteger fCount>;

        return $r1;
    }

    static java.util.List access$300(org.junit.runner.Result)
    {
        java.util.List $r1;
        org.junit.runner.Result r0;

        r0 := @parameter0: org.junit.runner.Result;

        $r1 = r0.<org.junit.runner.Result: java.util.List fFailures>;

        return $r1;
    }

    static java.util.concurrent.atomic.AtomicInteger access$400(org.junit.runner.Result)
    {
        org.junit.runner.Result r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: org.junit.runner.Result;

        $r1 = r0.<org.junit.runner.Result: java.util.concurrent.atomic.AtomicInteger fIgnoreCount>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.junit.runner.Result: long serialVersionUID> = 1L;

        return;
    }
}
