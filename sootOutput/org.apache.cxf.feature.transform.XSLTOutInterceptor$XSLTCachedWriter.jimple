public class org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter extends org.apache.cxf.io.CachedWriter
{
    private final javax.xml.transform.Templates xsltTemplate;
    private final java.io.Writer origWriter;

    public void <init>(javax.xml.transform.Templates, java.io.Writer)
    {
        org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter r0;
        java.io.Writer r2;
        javax.xml.transform.Templates r1;

        r0 := @this: org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter;

        r1 := @parameter0: javax.xml.transform.Templates;

        r2 := @parameter1: java.io.Writer;

        specialinvoke r0.<org.apache.cxf.io.CachedWriter: void <init>()>();

        r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter: javax.xml.transform.Templates xsltTemplate> = r1;

        r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter: java.io.Writer origWriter> = r2;

        return;
    }

    protected void doClose()
    {
        java.lang.Throwable $r13;
        javax.xml.transform.Templates $r1;
        java.lang.Object[] $r18;
        org.apache.cxf.interceptor.Fault $r16;
        java.lang.String $r10, $r12, $r19, $r24, $r26;
        org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter r0;
        java.io.IOException $r6, $r15, $r20;
        java.io.Reader $r2, $r3;
        java.util.logging.Logger $r7, $r17, $r21;
        java.io.Writer $r4, $r5, $r14;
        java.lang.StringBuilder $r8, $r9, $r11, $r22, $r23, $r25;

        r0 := @this: org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter;

     label01:
        $r1 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter: javax.xml.transform.Templates xsltTemplate>;

        $r2 = virtualinvoke r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter: java.io.Reader getReader()>();

        $r3 = staticinvoke <org.apache.cxf.feature.transform.XSLTUtils: java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)>($r1, $r2);

        $r4 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter: java.io.Writer origWriter>;

        staticinvoke <org.apache.cxf.helpers.IOUtils: void copyAndCloseInput(java.io.Reader,java.io.Writer,int)>($r3, $r4, 4096);

     label02:
        $r5 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter: java.io.Writer origWriter>;

        virtualinvoke $r5.<java.io.Writer: void close()>();

     label03:
        goto label11;

     label04:
        $r20 := @caughtexception;

        $r21 = staticinvoke <org.apache.cxf.feature.transform.XSLTOutInterceptor: java.util.logging.Logger access$000()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot close stream after transformation: ");

        $r24 = virtualinvoke $r20.<java.io.IOException: java.lang.String getMessage()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.util.logging.Logger: void warning(java.lang.String)>($r26);

        goto label11;

     label05:
        $r15 := @caughtexception;

        $r16 = new org.apache.cxf.interceptor.Fault;

        $r17 = staticinvoke <org.apache.cxf.feature.transform.XSLTOutInterceptor: java.util.logging.Logger access$000()>();

        $r18 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke $r15.<java.io.IOException: java.lang.String getMessage()>();

        $r18[0] = $r19;

        specialinvoke $r16.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("READER_COPY", $r17, $r15, $r18);

        throw $r16;

     label06:
        $r13 := @caughtexception;

     label07:
        $r14 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter: java.io.Writer origWriter>;

        virtualinvoke $r14.<java.io.Writer: void close()>();

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.apache.cxf.feature.transform.XSLTOutInterceptor: java.util.logging.Logger access$000()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot close stream after transformation: ");

        $r10 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void warning(java.lang.String)>($r12);

     label10:
        throw $r13;

     label11:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label05 to label07 with label06;
    }
}
