public class org.apache.jempbox.impl.DateConverter extends java.lang.Object
{
    private static final java.text.SimpleDateFormat[] POTENTIAL_FORMATS;

    private void <init>()
    {
        org.apache.jempbox.impl.DateConverter r0;

        r0 := @this: org.apache.jempbox.impl.DateConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Calendar toCalendar(java.lang.String) throws java.io.IOException
    {
        java.util.GregorianCalendar r42, $r49, $r50, $r52;
        java.lang.StringBuilder $r17, $r18, $r19, $r24, $r25, $r37, $r39, $r45, $r51, $r53;
        java.text.SimpleDateFormat[] $r27, $r28;
        java.text.SimpleDateFormat $r29;
        java.lang.String $r0, $r1, $r2, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r20, $r26, $r33, $r34, $r36, $r38, $r40, r41;
        java.lang.NumberFormatException $r32;
        java.io.IOException $r46, $r54;
        java.util.Date $r30;
        java.text.ParseException $r21;
        boolean $z0, $z1, $z2, $z3;
        java.util.SimpleTimeZone r43, $r47, $r48;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, i37, i38, i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, $i47, $i48, $i49;
        char $c10;

        r41 := @parameter0: java.lang.String;

        r42 = null;

        if r41 == null goto label27;

        $r0 = virtualinvoke r41.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label27;

        i33 = 1;

        i34 = 1;

        i35 = 0;

        i36 = 0;

        i37 = 0;

     label01:
        r43 = null;

        $z0 = virtualinvoke r41.<java.lang.String: boolean startsWith(java.lang.String)>("D:");

        if $z0 == 0 goto label02;

        $i15 = virtualinvoke r41.<java.lang.String: int length()>();

        r41 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int,int)>(2, $i15);

     label02:
        $r1 = virtualinvoke r41.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[-:T]", "");

        r41 = $r1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= 4 goto label03;

        $r46 = new java.io.IOException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Invalid date format \'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r46;

     label03:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 < 6 goto label04;

        $r14 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        i33 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

     label04:
        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i4 < 8 goto label05;

        $r13 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(6, 8);

        i34 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

     label05:
        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i5 < 10 goto label06;

        $r12 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(8, 10);

        i35 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

     label06:
        $i6 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i6 < 12 goto label07;

        $r11 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(10, 12);

        i36 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

     label07:
        $i7 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i7 < 14 goto label08;

        $r10 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(12, 14);

        i37 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

     label08:
        $i8 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i8 < 15 goto label14;

        $c10 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(14);

        $i47 = (int) $c10;

        if $i47 != 90 goto label09;

        $r47 = new java.util.SimpleTimeZone;

        specialinvoke $r47.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "Unknown");

        r43 = $r47;

        goto label14;

     label09:
        i38 = 0;

        i39 = 0;

        $i11 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i11 < 17 goto label11;

        $i48 = (int) $c10;

        if $i48 != 43 goto label10;

        $r8 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(15, 17);

        i38 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        goto label11;

     label10:
        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(14, 16);

        $i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        i38 = neg $i14;

     label11:
        $i49 = (int) $c10;

        if $i49 != 43 goto label12;

        $i13 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i13 < 19 goto label13;

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(17, 19);

        i39 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        goto label13;

     label12:
        $i12 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i12 < 18 goto label13;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(16, 18);

        i39 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label13:
        $r48 = new java.util.SimpleTimeZone;

        $i40 = i38 * 60;

        $i41 = $i40 * 60;

        $i42 = $i41 * 1000;

        $i43 = i39 * 60;

        $i44 = $i43 * 1000;

        $i45 = $i42 + $i44;

        specialinvoke $r48.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i45, "Unknown");

        r43 = $r48;

     label14:
        if r43 != null goto label15;

        $r49 = new java.util.GregorianCalendar;

        specialinvoke $r49.<java.util.GregorianCalendar: void <init>()>();

        r42 = $r49;

        goto label16;

     label15:
        $r50 = new java.util.GregorianCalendar;

        specialinvoke $r50.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r43);

        r42 = $r50;

     label16:
        virtualinvoke r42.<java.util.Calendar: void clear()>();

        $i9 = i33 - 1;

        virtualinvoke r42.<java.util.Calendar: void set(int,int,int,int,int,int)>($i2, $i9, i34, i35, i36, i37);

     label17:
        goto label27;

     label18:
        $r32 := @caughtexception;

        $i17 = virtualinvoke r41.<java.lang.String: int length()>();

        $i18 = $i17 - 3;

        $i19 = virtualinvoke r41.<java.lang.String: int length()>();

        $i20 = $i19 - 2;

        $r33 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int,int)>($i18, $i20);

        $z1 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(":");

        if $z1 == 0 goto label20;

        $i21 = virtualinvoke r41.<java.lang.String: int length()>();

        $i22 = $i21 - 6;

        $i23 = virtualinvoke r41.<java.lang.String: int length()>();

        $i24 = $i23 - 5;

        $r34 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int,int)>($i22, $i24);

        $z2 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("+");

        if $z2 != 0 goto label19;

        $i29 = virtualinvoke r41.<java.lang.String: int length()>();

        $i30 = $i29 - 6;

        $i31 = virtualinvoke r41.<java.lang.String: int length()>();

        $i32 = $i31 - 5;

        $r40 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int,int)>($i30, $i32);

        $z3 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z3 == 0 goto label20;

     label19:
        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $i25 = virtualinvoke r41.<java.lang.String: int length()>();

        $i26 = $i25 - 3;

        $r36 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int,int)>(0, $i26);

        $r37 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $i27 = virtualinvoke r41.<java.lang.String: int length()>();

        $i28 = $i27 - 2;

        $r38 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int)>($i28);

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        i46 = 0;

     label21:
        if r42 != null goto label26;

        $r27 = <org.apache.jempbox.impl.DateConverter: java.text.SimpleDateFormat[] POTENTIAL_FORMATS>;

        $i16 = lengthof $r27;

        if i46 >= $i16 goto label26;

     label22:
        $r28 = <org.apache.jempbox.impl.DateConverter: java.text.SimpleDateFormat[] POTENTIAL_FORMATS>;

        $r29 = $r28[i46];

        $r30 = virtualinvoke $r29.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r41);

        $r52 = new java.util.GregorianCalendar;

        specialinvoke $r52.<java.util.GregorianCalendar: void <init>()>();

        r42 = $r52;

        virtualinvoke $r52.<java.util.Calendar: void setTime(java.util.Date)>($r30);

     label23:
        goto label25;

     label24:
        $r21 := @caughtexception;

     label25:
        i46 = i46 + 1;

        goto label21;

     label26:
        if r42 != null goto label27;

        $r54 = new java.io.IOException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error converting date:");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r54;

     label27:
        return r42;

        catch java.lang.NumberFormatException from label01 to label17 with label18;
        catch java.text.ParseException from label22 to label23 with label24;
    }

    private static final void zeroAppend(java.lang.StringBuffer, int)
    {
        int i0;
        java.lang.StringBuffer r0;

        r0 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        if i0 >= 10 goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label1:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        return;
    }

    public static java.lang.String toISO8601(java.util.Calendar)
    {
        java.util.Calendar r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        java.lang.String $r2, $r3, $r4;

        r1 := @parameter0: java.util.Calendar;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        $i2 = $i1 + 1;

        staticinvoke <org.apache.jempbox.impl.DateConverter: void zeroAppend(java.lang.StringBuffer,int)>($r0, $i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        staticinvoke <org.apache.jempbox.impl.DateConverter: void zeroAppend(java.lang.StringBuffer,int)>($r0, $i3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T");

        $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11);

        staticinvoke <org.apache.jempbox.impl.DateConverter: void zeroAppend(java.lang.StringBuffer,int)>($r0, $i4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12);

        staticinvoke <org.apache.jempbox.impl.DateConverter: void zeroAppend(java.lang.StringBuffer,int)>($r0, $i5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13);

        staticinvoke <org.apache.jempbox.impl.DateConverter: void zeroAppend(java.lang.StringBuffer,int)>($r0, $i6);

        $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(15);

        $i8 = virtualinvoke r1.<java.util.Calendar: int get(int)>(16);

        i19 = $i7 + $i8;

        if i19 >= 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("+");

     label2:
        $i9 = staticinvoke <java.lang.Math: int abs(int)>(i19);

        $i10 = $i9 / 1000;

        $i11 = $i10 / 60;

        $i17 = $i11 / 60;

        $i12 = $i17 * 1000;

        $i13 = $i12 * 60;

        $i14 = $i13 * 60;

        $i15 = $i9 - $i14;

        $i16 = $i15 / 1000;

        $i18 = $i16 / 1000;

        if $i17 >= 10 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i17);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        if $i18 >= 10 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label4:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i18);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.text.SimpleDateFormat[] $r0;

        $r0 = newarray (java.text.SimpleDateFormat)[10];

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEEE, dd MMM yyyy hh:mm:ss a");

        $r0[0] = $r1;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEEE, MMM dd, yyyy hh:mm:ss a");

        $r0[1] = $r2;

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        $r0[2] = $r3;

        $r4 = new java.text.SimpleDateFormat;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ssz");

        $r0[3] = $r4;

        $r5 = new java.text.SimpleDateFormat;

        specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM/dd/yyyy hh:mm:ss");

        $r0[4] = $r5;

        $r6 = new java.text.SimpleDateFormat;

        specialinvoke $r6.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM/dd/yyyy");

        $r0[5] = $r6;

        $r7 = new java.text.SimpleDateFormat;

        specialinvoke $r7.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEEE, MMM dd, yyyy");

        $r0[6] = $r7;

        $r8 = new java.text.SimpleDateFormat;

        specialinvoke $r8.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEEE MMM dd, yyyy HH:mm:ss");

        $r0[7] = $r8;

        $r9 = new java.text.SimpleDateFormat;

        specialinvoke $r9.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEEE MMM dd HH:mm:ss z yyyy");

        $r0[8] = $r9;

        $r10 = new java.text.SimpleDateFormat;

        specialinvoke $r10.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEEE, MMM dd, yyyy \'at\' hh:mma");

        $r0[9] = $r10;

        <org.apache.jempbox.impl.DateConverter: java.text.SimpleDateFormat[] POTENTIAL_FORMATS> = $r0;

        return;
    }
}
