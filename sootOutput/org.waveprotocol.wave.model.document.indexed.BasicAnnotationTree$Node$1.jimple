class org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringMap$ProcV
{
    final org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node this$1;

    void <init>(org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node)
    {
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1 r0;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node;

        r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.util.StringMap $r4, $r7;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node $r1, $r2, $r5, $r6, $r10, $r18;
        java.lang.String r3, $r17;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree $r12;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1 r0;
        java.lang.Object $r8, r9;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1;

        r3 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.Object;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node this$1>;

        $r2 = $r1.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node right>;

        $r4 = $r2.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node: org.waveprotocol.wave.model.util.StringMap localMap>;

        $z0 = interfaceinvoke $r4.<org.waveprotocol.wave.model.util.StringMap: boolean containsKey(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node this$1>;

        $r6 = $r5.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node right>;

        $r7 = $r6.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node: org.waveprotocol.wave.model.util.StringMap localMap>;

        $r8 = interfaceinvoke $r7.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object getExisting(java.lang.String)>(r3);

        $z1 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>(r9, $r8);

        if $z1 == 0 goto label1;

        $r10 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node this$1>;

        $r12 = $r10.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree this$0>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("left and right have equal annotations ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node$1: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node this$1>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree: void access$600(org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree,boolean,java.lang.String,org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node)>($r12, 0, $r17, $r18);

     label1:
        return;
    }
}
