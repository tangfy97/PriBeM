public class thredds.cataloggen.config.DatasetSorter extends java.lang.Object
{
    private static org.slf4j.Logger logger;
    private java.lang.String targetLevel;
    private boolean increasingOrder;
    private java.lang.String type;
    private java.lang.String attributeName;
    private java.util.Comparator invDatasetComparator;

    public void <init>(boolean)
    {
        thredds.cataloggen.config.DatasetSorter$1 $r1;
        thredds.cataloggen.config.DatasetSorter r0;
        boolean z0;

        r0 := @this: thredds.cataloggen.config.DatasetSorter;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetSorter: boolean increasingOrder> = 1;

        r0.<thredds.cataloggen.config.DatasetSorter: java.lang.String type> = "lexigraphic";

        r0.<thredds.cataloggen.config.DatasetSorter: boolean increasingOrder> = z0;

        $r1 = new thredds.cataloggen.config.DatasetSorter$1;

        specialinvoke $r1.<thredds.cataloggen.config.DatasetSorter$1: void <init>(thredds.cataloggen.config.DatasetSorter)>(r0);

        r0.<thredds.cataloggen.config.DatasetSorter: java.util.Comparator invDatasetComparator> = $r1;

        return;
    }

    public void <init>(java.util.Comparator)
    {
        thredds.cataloggen.config.DatasetSorter r0;
        java.util.Comparator r1;

        r0 := @this: thredds.cataloggen.config.DatasetSorter;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetSorter: boolean increasingOrder> = 1;

        r0.<thredds.cataloggen.config.DatasetSorter: java.lang.String type> = "lexigraphic";

        r0.<thredds.cataloggen.config.DatasetSorter: java.util.Comparator invDatasetComparator> = r1;

        return;
    }

    public void sortDatasets(thredds.catalog.InvDataset)
    {
        java.util.List $r2;
        thredds.cataloggen.config.DatasetSorter r0;
        thredds.catalog.InvDataset r1;

        r0 := @this: thredds.cataloggen.config.DatasetSorter;

        r1 := @parameter0: thredds.catalog.InvDataset;

        $r2 = virtualinvoke r1.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        virtualinvoke r0.<thredds.cataloggen.config.DatasetSorter: void sortDatasets(java.util.List)>($r2);

        return;
    }

    public void sortDatasets(java.util.List)
    {
        java.util.List r0;
        thredds.cataloggen.config.DatasetSorter r1;
        java.util.Comparator $r2;

        r1 := @this: thredds.cataloggen.config.DatasetSorter;

        r0 := @parameter0: java.util.List;

        $r2 = r1.<thredds.cataloggen.config.DatasetSorter: java.util.Comparator invDatasetComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r2);

        return;
    }

    public void sortNestedDatasets(thredds.catalog.InvDataset)
    {
        org.slf4j.Logger $r3;
        java.util.Iterator $r2;
        thredds.cataloggen.config.DatasetSorter r5;
        java.util.List $r1, $r6;
        java.lang.Object $r7;
        java.lang.Class $r8, $r9;
        java.lang.String $r4;
        thredds.catalog.InvDataset r0, r10;
        boolean $z0, $z1, $z2;

        r5 := @this: thredds.cataloggen.config.DatasetSorter;

        r0 := @parameter0: thredds.catalog.InvDataset;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r7 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r10 = (thredds.catalog.InvDataset) $r7;

        $r8 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lthredds/catalog/InvCatalogRef;");

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lthredds/catalog/InvDatasetScan;");

        if $z1 != 0 goto label1;

        virtualinvoke r5.<thredds.cataloggen.config.DatasetSorter: void sortDatasets(thredds.catalog.InvDataset)>(r10);

        goto label1;

     label2:
        $r3 = <thredds.cataloggen.config.DatasetSorter: org.slf4j.Logger logger>;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("sortDatasets(): sort the datasets contained by dataset ({})", $r4);

        $r6 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        virtualinvoke r5.<thredds.cataloggen.config.DatasetSorter: void sortDatasets(java.util.List)>($r6);

        return;
    }

    static boolean access$000(thredds.cataloggen.config.DatasetSorter)
    {
        thredds.cataloggen.config.DatasetSorter r0;
        boolean $z0;

        r0 := @parameter0: thredds.cataloggen.config.DatasetSorter;

        $z0 = r0.<thredds.cataloggen.config.DatasetSorter: boolean increasingOrder>;

        return $z0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/config/DatasetSorter;");

        <thredds.cataloggen.config.DatasetSorter: org.slf4j.Logger logger> = $r0;

        return;
    }
}
