public class com.hp.hpl.jena.rdf.model.impl.SeqImpl extends com.hp.hpl.jena.rdf.model.impl.ContainerImpl implements com.hp.hpl.jena.rdf.model.Seq
{
    public static final com.hp.hpl.jena.enhanced.Implementation factory;
    static com.hp.hpl.jena.rdf.model.impl.NodeIteratorFactory seqIteratorFactory;

    public void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ContainerImpl: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1);

        return;
    }

    public void <init>(java.lang.String, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ContainerImpl: void <init>(java.lang.String,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1, r2);

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ContainerImpl: void <init>(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1, r2);

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ContainerImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public com.hp.hpl.jena.rdf.model.Resource getResource(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        com.hp.hpl.jena.rdf.model.Resource $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getResource()>();

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Literal getLiteral(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode getObject(int)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        return $r3;
    }

    public boolean getBoolean(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: boolean getBoolean()>();

        return $z0;
    }

    public byte getByte(int)
    {
        byte $b1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $b1 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: byte getByte()>();

        return $b1;
    }

    public short getShort(int)
    {
        short $s1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $s1 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: short getShort()>();

        return $s1;
    }

    public int getInt(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0, $i1;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $i1 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: int getInt()>();

        return $i1;
    }

    public long getLong(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        long $l1;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $l1 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: long getLong()>();

        return $l1;
    }

    public char getChar(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        char $c1;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $c1 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: char getChar()>();

        return $c1;
    }

    public float getFloat(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        float $f0;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $f0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: float getFloat()>();

        return $f0;
    }

    public double getDouble(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        double $d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $d0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: double getDouble()>();

        return $d0;
    }

    public java.lang.String getString(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: java.lang.String getString()>();

        return $r3;
    }

    public java.lang.String getLanguage(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: java.lang.String getLanguage()>();

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Resource getResource(int, com.hp.hpl.jena.rdf.model.ResourceF)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.ResourceF r3;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        com.hp.hpl.jena.rdf.model.Resource $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.ResourceF;

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.ResourceF)>(r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Bag getBag(int)
    {
        com.hp.hpl.jena.rdf.model.Bag $r3;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Bag getBag()>();

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Alt getAlt(int)
    {
        com.hp.hpl.jena.rdf.model.Alt $r3;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Alt getAlt()>();

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Seq getSeq(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Seq $r3;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Seq getSeq()>();

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement changeObject(com.hp.hpl.jena.rdf.model.RDFNode)>(r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(boolean)>(z0);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, long)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        long l1;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(long)>(l1);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, float)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        float f0;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(float)>(f0);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, double)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(double)>(d0);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, char)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        char c1;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        c1 := @parameter1: char;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(char)>(c1);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement changeObject(java.lang.String)>(r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0;
        java.lang.String r3, r4;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement changeObject(java.lang.String,java.lang.String)>(r3, r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq set(int, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.Statement $r2, $r7;
        com.hp.hpl.jena.rdf.model.Resource $r4;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1, $r5;
        int i0;
        com.hp.hpl.jena.rdf.model.Model $r3, $r8, $r9;
        java.lang.Object r6;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r7 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Statement createLiteralStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.Object)>($r4, $r5, r6);

        $r8 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Model getModel()>();

        interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Statement)>($r2);

        $r9 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Model getModel()>();

        interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Statement)>($r7);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int i0;
        java.lang.String $r1;
        com.hp.hpl.jena.rdf.model.Seq $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Seq add(int,java.lang.String)>(i0, $r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, long)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int i0;
        long l1;
        java.lang.String $r1;
        com.hp.hpl.jena.rdf.model.Seq $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Seq add(int,java.lang.String)>(i0, $r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, char)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int i0;
        char c1;
        java.lang.String $r1;
        com.hp.hpl.jena.rdf.model.Seq $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        c1 := @parameter1: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c1);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Seq add(int,java.lang.String)>(i0, $r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, float)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int i0;
        float f0;
        java.lang.String $r1;
        com.hp.hpl.jena.rdf.model.Seq $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Seq add(int,java.lang.String)>(i0, $r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, double)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int i0;
        java.lang.String $r1;
        com.hp.hpl.jena.rdf.model.Seq $r2;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Seq add(int,java.lang.String)>(i0, $r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int i0;
        java.lang.Object r1;
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.model.Seq $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Seq add(int,java.lang.String)>(i0, $r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int i0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Seq $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Seq add(int,java.lang.String,java.lang.String)>(i0, r1, "");

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int i0;
        java.lang.String r1, r2;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Seq $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Seq add(int,com.hp.hpl.jena.rdf.model.RDFNode)>(i0, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Seq add(int, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r2;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int $i0, i1, $i2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i1 := @parameter0: int;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int size()>();

        $i2 = $i0 + 1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int,int)>(i1, $i2);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void shiftUp(int,int)>(i1, $i0);

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i1);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r1, r2);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.NodeIterator iterator()
    {
        com.hp.hpl.jena.rdf.model.NodeIterator $r2;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.impl.NodeIteratorFactory $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.impl.NodeIteratorFactory seqIteratorFactory>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.NodeIterator listContainerMembers(com.hp.hpl.jena.rdf.model.impl.NodeIteratorFactory)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Container remove(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.Statement r2;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.Model $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Statement)>(r2);

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $i0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Property: int getOrdinal()>();

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int size()>();

        $i3 = $i2 + 1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void shiftDown(int,int)>($i1, $i3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Seq remove(int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1;
        int i0, $i1, $i2, $i3;
        com.hp.hpl.jena.rdf.model.Statement $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement remove()>();

        $i1 = i0 + 1;

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int size()>();

        $i3 = $i2 + 1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void shiftDown(int,int)>($i1, $i3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Container remove(int, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.rdf.model.Statement $r4, $r5;
        com.hp.hpl.jena.rdf.model.Container $r6;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.rdf.model.Model $r1;
        int i0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r2 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i0);

        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, $r2, r3);

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement remove()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Container remove(com.hp.hpl.jena.rdf.model.Statement)>($r5);

        return $r6;
    }

    public int indexOf(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        int $i0;
        com.hp.hpl.jena.rdf.model.RDFNode r1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int containerIndexOf(com.hp.hpl.jena.rdf.model.RDFNode)>(r1);

        return $i0;
    }

    public int indexOf(boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int $i0;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int indexOf(java.lang.String)>($r1);

        return $i0;
    }

    public int indexOf(long)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int $i1;
        long l0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int indexOf(java.lang.String)>($r1);

        return $i1;
    }

    public int indexOf(char)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int $i1;
        char c0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int indexOf(java.lang.String)>($r1);

        return $i1;
    }

    public int indexOf(float)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int $i0;
        float f0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        f0 := @parameter0: float;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int indexOf(java.lang.String)>($r1);

        return $i0;
    }

    public int indexOf(double)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int $i0;
        java.lang.String $r1;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int indexOf(java.lang.String)>($r1);

        return $i0;
    }

    public int indexOf(java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int $i0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int indexOf(java.lang.String)>($r2);

        return $i0;
    }

    public int indexOf(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int indexOf(java.lang.String,java.lang.String)>(r1, "");

        return $i0;
    }

    public int indexOf(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        int $i0;
        java.lang.String r1, r2;
        com.hp.hpl.jena.rdf.model.Literal $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)>(r1, r2);

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int indexOf(com.hp.hpl.jena.rdf.model.RDFNode)>($r3);

        return $i0;
    }

    private com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r5;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r0;
        java.lang.String r1, r2;
        com.hp.hpl.jena.graph.Node $r3;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        $r5 = virtualinvoke r4.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom getModelCom()>();

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r3, $r5);

        return $r0;
    }

    protected void shiftUp(int, int)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r5;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1, $r4;
        int i0, i1, $i2, i3, $i5;
        com.hp.hpl.jena.rdf.model.Model $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i3 = i0;

     label1:
        if i3 < i1 goto label2;

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i3);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Statement)>($r2);

        $i2 = i3 + 1;

        $r4 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>($i2);

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r4, $r5);

        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label2:
        return;
    }

    protected void shiftDown(int, int)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r1, $r3;
        int i0, i1, $i2, i3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 = i0;

     label1:
        if i3 > i1 goto label2;

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>(i3);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Statement remove()>();

        $i2 = i3 - 1;

        $r3 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property li(int)>($i2);

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r3, $r4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    protected void checkIndex(int)
    {
        int i0, $i1;
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: int size()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl: void checkIndex(int,int)>(i0, $i1);

        return;
    }

    protected void checkIndex(int, int)
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl r1;
        int i0, i1;
        com.hp.hpl.jena.rdf.model.SeqIndexBoundsException $r0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.SeqImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if 1 > i0 goto label1;

        if i0 <= i1 goto label2;

     label1:
        $r0 = new com.hp.hpl.jena.rdf.model.SeqIndexBoundsException;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.SeqIndexBoundsException: void <init>(int,int)>(i1, i0);

        throw $r0;

     label2:
        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.rdf.model.impl.SeqImpl$1 $r0;
        com.hp.hpl.jena.rdf.model.impl.SeqNodeIteratorFactoryImpl $r1;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.SeqImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.SeqImpl$1: void <init>()>();

        <com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        $r1 = new com.hp.hpl.jena.rdf.model.impl.SeqNodeIteratorFactoryImpl;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.SeqNodeIteratorFactoryImpl: void <init>()>();

        <com.hp.hpl.jena.rdf.model.impl.SeqImpl: com.hp.hpl.jena.rdf.model.impl.NodeIteratorFactory seqIteratorFactory> = $r1;

        return;
    }
}
