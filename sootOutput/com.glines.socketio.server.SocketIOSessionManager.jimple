public final class com.glines.socketio.server.SocketIOSessionManager extends java.lang.Object implements com.glines.socketio.server.SessionManager
{
    final java.util.concurrent.ConcurrentMap socketIOSessions;
    final java.util.concurrent.ScheduledExecutorService executor;

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        com.glines.socketio.server.SocketIOSessionManager r0;

        r0 := @this: com.glines.socketio.server.SocketIOSessionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.glines.socketio.server.SocketIOSessionManager: java.util.concurrent.ConcurrentMap socketIOSessions> = $r1;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(1);

        r0.<com.glines.socketio.server.SocketIOSessionManager: java.util.concurrent.ScheduledExecutorService executor> = $r2;

        return;
    }

    public com.glines.socketio.server.SocketIOSession createSession(com.glines.socketio.server.SocketIOInbound)
    {
        com.glines.socketio.server.DefaultSession $r0;
        com.glines.socketio.server.SocketIOInbound r2;
        java.lang.String $r4;
        com.glines.socketio.server.SocketIOSessionManager r1;
        java.util.concurrent.ConcurrentMap $r3;

        r1 := @this: com.glines.socketio.server.SocketIOSessionManager;

        r2 := @parameter0: com.glines.socketio.server.SocketIOInbound;

        $r0 = new com.glines.socketio.server.DefaultSession;

        specialinvoke $r0.<com.glines.socketio.server.DefaultSession: void <init>(com.glines.socketio.server.SocketIOSessionManager,com.glines.socketio.server.SocketIOInbound)>(r1, r2);

        $r3 = r1.<com.glines.socketio.server.SocketIOSessionManager: java.util.concurrent.ConcurrentMap socketIOSessions>;

        $r4 = virtualinvoke $r0.<com.glines.socketio.server.DefaultSession: java.lang.String getSessionId()>();

        interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r0);

        return $r0;
    }

    public com.glines.socketio.server.SocketIOSession getSession(java.lang.String)
    {
        com.glines.socketio.server.SocketIOSession $r4;
        java.lang.Object $r3;
        java.lang.String r1;
        com.glines.socketio.server.SocketIOSessionManager r0;
        java.util.concurrent.ConcurrentMap $r2;

        r0 := @this: com.glines.socketio.server.SocketIOSessionManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.glines.socketio.server.SocketIOSessionManager: java.util.concurrent.ConcurrentMap socketIOSessions>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.glines.socketio.server.SocketIOSession) $r3;

        return $r4;
    }
}
