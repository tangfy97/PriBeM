public final class org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder extends java.lang.Object
{
    private org.waveprotocol.wave.federation.ProtocolSignedDelta signedOriginalDelta;
    private org.waveprotocol.wave.federation.ProtocolHashedVersion hashedVersionAppliedAt;
    private java.lang.Integer operationsApplied;
    private java.lang.Double applicationTimestamp;

    public void <init>()
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder setSignedOriginalDelta(org.waveprotocol.wave.federation.ProtocolSignedDelta)
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder r0;
        org.waveprotocol.wave.federation.ProtocolSignedDelta r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignedDelta;

        r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: org.waveprotocol.wave.federation.ProtocolSignedDelta signedOriginalDelta> = r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder clearHashedVersionAppliedAt()
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder;

        r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion hashedVersionAppliedAt> = null;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder setHashedVersionAppliedAt(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion hashedVersionAppliedAt> = r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder setOperationsApplied(int)
    {
        int i0;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder r0;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: java.lang.Integer operationsApplied> = $r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder setApplicationTimestamp(double)
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder r0;
        java.lang.Double $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: java.lang.Double applicationTimestamp> = $r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta build(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder$Factory)
    {
        java.lang.Double $r6;
        java.lang.Integer $r5;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder$Factory r0;
        int $i0;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta $r1;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder r2;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r4;
        org.waveprotocol.wave.federation.ProtocolSignedDelta $r3;
        double $d0;

        r2 := @this: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder$Factory: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta create()>();

        $r3 = r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: org.waveprotocol.wave.federation.ProtocolSignedDelta signedOriginalDelta>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: void setSignedOriginalDelta(org.waveprotocol.wave.federation.ProtocolSignedDelta)>($r3);

        $r4 = r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion hashedVersionAppliedAt>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: void setHashedVersionAppliedAt(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r4);

        $r5 = r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: java.lang.Integer operationsApplied>;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: void setOperationsApplied(int)>($i0);

        $r6 = r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaBuilder: java.lang.Double applicationTimestamp>;

        $d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: void setApplicationTimestamp(double)>($d0);

        return $r1;
    }
}
