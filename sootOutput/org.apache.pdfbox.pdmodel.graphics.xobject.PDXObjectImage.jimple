public abstract class org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage extends org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject
{
    private static final org.apache.commons.logging.Log LOG;
    public static final java.lang.String SUB_TYPE;
    private java.lang.String suffix;
    private org.apache.pdfbox.pdmodel.graphics.color.PDColorState stencilColor;

    public void <init>(org.apache.pdfbox.pdmodel.common.PDStream, java.lang.String)
    {
        org.apache.pdfbox.pdmodel.common.PDStream r1;
        java.lang.String r2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.common.PDStream;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject: void <init>(org.apache.pdfbox.pdmodel.common.PDStream)>(r1);

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.lang.String suffix> = r2;

        return;
    }

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument, java.lang.String)
    {
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.pdmodel.PDDocument r1;
        java.lang.String r4;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r1);

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, "Image");

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.lang.String suffix> = r4;

        return;
    }

    public static org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject createThumbnailXObject(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSBase r0;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject $r1;

        r0 := @parameter0: org.apache.pdfbox.cos.COSBase;

        $r1 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject commonXObjectCreation(org.apache.pdfbox.cos.COSBase,boolean)>(r0, 1);

        return $r1;
    }

    public abstract java.awt.image.BufferedImage getRGBImage() throws java.io.IOException;

    public org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage getSMaskImage() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.cos.COSBase $r4;
        org.apache.pdfbox.pdmodel.common.PDStream $r1;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0, $r6;
        org.apache.pdfbox.cos.COSStream $r2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject $r5;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.pdmodel.common.PDStream getPDStream()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getStream()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK>;

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject createXObject(org.apache.pdfbox.cos.COSBase)>($r4);

        $r6 = (org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage) $r5;

        return $r6;
    }

    public java.awt.image.BufferedImage applyMasks(java.awt.image.BufferedImage) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray $r6;
        java.awt.image.BufferedImage r3, $r4, $r8, $r9, $r10;
        org.apache.pdfbox.cos.COSBase $r1;
        org.apache.commons.logging.Log $r5;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0, $r2;
        org.apache.pdfbox.pdmodel.graphics.xobject.CompositeImage $r7;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r3 := @parameter0: java.awt.image.BufferedImage;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: boolean getImageMask()>();

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.awt.image.BufferedImage imageMask(java.awt.image.BufferedImage)>(r3);

        return $r10;

     label1:
        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSBase getMask()>();

        if $r1 == null goto label2;

        $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.awt.image.BufferedImage mask(java.awt.image.BufferedImage)>(r3);

        return $r9;

     label2:
        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage getSMaskImage()>();

        if $r2 == null goto label4;

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.awt.image.BufferedImage getRGBImage()>();

        if $r4 == null goto label3;

        $r6 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSArray getDecode()>();

        $r7 = new org.apache.pdfbox.pdmodel.graphics.xobject.CompositeImage;

        specialinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.xobject.CompositeImage: void <init>(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r3, $r4);

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.xobject.CompositeImage: java.awt.image.BufferedImage createMaskedImage(org.apache.pdfbox.cos.COSArray)>($r6);

        return $r8;

     label3:
        $r5 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("masking getRGBImage returned NULL");

     label4:
        return r3;
    }

    public boolean hasMask() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSBase $r1;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: boolean getImageMask()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSBase getMask()>();

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage getSMaskImage()>();

        if $r2 == null goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.awt.image.BufferedImage imageMask(java.awt.image.BufferedImage) throws java.io.IOException
    {
        java.awt.Color $r7, $r12;
        org.apache.pdfbox.cos.COSArray $r8;
        java.awt.AlphaComposite $r9, $r10;
        java.awt.Graphics2D r3;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r4;
        java.awt.image.BufferedImage $r0, r1;
        java.awt.Graphics $r2;
        org.apache.commons.logging.Log $r6;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorState $r5, $r11;

        r4 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r1 := @parameter0: java.awt.image.BufferedImage;

        $r0 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2);

        $r2 = virtualinvoke $r0.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>();

        r3 = (java.awt.Graphics2D) $r2;

        $r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorState getStencilColor()>();

        if $r5 == null goto label1;

        $r11 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorState getStencilColor()>();

        $r12 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.graphics.color.PDColorState: java.awt.Color getJavaColor()>();

        virtualinvoke r3.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r12);

        goto label2;

     label1:
        $r6 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("no stencil color for PixelMap found, using Color.BLACK instead.");

        $r7 = <java.awt.Color: java.awt.Color BLACK>;

        virtualinvoke r3.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

     label2:
        $i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        $i3 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();

        virtualinvoke r3.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, $i2, $i3);

        $r8 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSArray getDecode()>();

        if $r8 == null goto label3;

        $i4 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0);

        if $i4 != 1 goto label3;

        $r10 = <java.awt.AlphaComposite: java.awt.AlphaComposite DstOut>;

        virtualinvoke r3.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r10);

        goto label4;

     label3:
        $r9 = <java.awt.AlphaComposite: java.awt.AlphaComposite DstIn>;

        virtualinvoke r3.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r9);

     label4:
        virtualinvoke r3.<java.awt.Graphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>(r1, null, 0, 0);

        virtualinvoke r3.<java.awt.Graphics2D: void dispose()>();

        return $r0;
    }

    public java.awt.image.BufferedImage mask(java.awt.image.BufferedImage) throws java.io.IOException
    {
        java.awt.AlphaComposite $r11;
        java.awt.Graphics2D r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0, r6;
        org.apache.pdfbox.cos.COSStream $r4;
        boolean $z0;
        java.awt.image.BufferedImage r3, $r7, $r8;
        org.apache.pdfbox.cos.COSBase $r1;
        java.awt.Graphics $r9;
        org.apache.commons.logging.Log $r2, $r12;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject $r5;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r3 := @parameter0: java.awt.image.BufferedImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSBase getMask()>();

        $z0 = $r1 instanceof org.apache.pdfbox.cos.COSStream;

        if $z0 == 0 goto label2;

        $r4 = (org.apache.pdfbox.cos.COSStream) $r1;

        $r5 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject createXObject(org.apache.pdfbox.cos.COSBase)>($r4);

        r6 = (org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage) $r5;

        $r7 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.awt.image.BufferedImage getRGBImage()>();

        if $r7 != null goto label1;

        $r12 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("masking getRGBImage returned NULL");

        return r3;

     label1:
        $r8 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke $r7.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke $r7.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r8.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2);

        $r9 = virtualinvoke $r8.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>();

        r10 = (java.awt.Graphics2D) $r9;

        $i2 = virtualinvoke $r7.<java.awt.image.BufferedImage: int getWidth()>();

        $i3 = virtualinvoke $r7.<java.awt.image.BufferedImage: int getHeight()>();

        $i4 = virtualinvoke r3.<java.awt.image.BufferedImage: int getWidth()>();

        $i5 = virtualinvoke r3.<java.awt.image.BufferedImage: int getHeight()>();

        virtualinvoke r10.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(r3, 0, 0, $i2, $i3, 0, 0, $i4, $i5, null);

        $r11 = <java.awt.AlphaComposite: java.awt.AlphaComposite DstIn>;

        virtualinvoke r10.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r11);

        virtualinvoke r10.<java.awt.Graphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>($r7, null, 0, 0);

        virtualinvoke r10.<java.awt.Graphics2D: void dispose()>();

        return $r8;

     label2:
        $r2 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Colour key masking isn\'t supported");

        return r3;
    }

    public abstract void write2OutputStream(java.io.OutputStream) throws java.io.IOException;

    public void write2file(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r9;
        java.io.FileOutputStream $r0, r10;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        java.lang.String r2, $r6, $r8;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r5;

        r5 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r2 := @parameter0: java.lang.String;

        r10 = null;

     label1:
        $r0 = new java.io.FileOutputStream;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = r5.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.lang.String suffix>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.lang.String)>($r8);

        r10 = $r0;

        virtualinvoke r5.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: void write2OutputStream(java.io.OutputStream)>($r0);

        virtualinvoke $r0.<java.io.FileOutputStream: void flush()>();

     label2:
        if $r0 == null goto label6;

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

        goto label6;

     label3:
        $r9 := @caughtexception;

     label4:
        if r10 == null goto label5;

        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void write2file(java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r3;
        java.io.FileOutputStream $r0, r4;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r2;
        java.io.File r1;

        r2 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r1 := @parameter0: java.io.File;

        r4 = null;

     label1:
        $r0 = new java.io.FileOutputStream;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r4 = $r0;

        virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: void write2OutputStream(java.io.OutputStream)>($r0);

        virtualinvoke $r0.<java.io.FileOutputStream: void flush()>();

     label2:
        if $r0 == null goto label6;

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

        goto label6;

     label3:
        $r3 := @caughtexception;

     label4:
        if r4 == null goto label5;

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label5:
        throw $r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getHeight()
    {
        org.apache.pdfbox.cos.COSName $r2;
        int $i0, $i2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT>;

        $i2 = (int) -1;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: int getInt(org.apache.pdfbox.cos.COSName,int)>($r2, $i2);

        return $i0;
    }

    public void setHeight(int)
    {
        org.apache.pdfbox.cos.COSName $r2;
        int i0;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT>;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: void setInt(org.apache.pdfbox.cos.COSName,int)>($r2, i0);

        return;
    }

    public int getWidth()
    {
        org.apache.pdfbox.cos.COSName $r2;
        int $i0, $i2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH>;

        $i2 = (int) -1;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: int getInt(org.apache.pdfbox.cos.COSName,int)>($r2, $i2);

        return $i0;
    }

    public void setWidth(int)
    {
        org.apache.pdfbox.cos.COSName $r2;
        int i0;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH>;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: void setInt(org.apache.pdfbox.cos.COSName,int)>($r2, i0);

        return;
    }

    public int getBitsPerComponent()
    {
        org.apache.pdfbox.cos.COSName $r2, $r3;
        int $i0, $i2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BPC>;

        $i2 = (int) -1;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>($r3, $r2, $i2);

        return $i0;
    }

    public void setBitsPerComponent(int)
    {
        org.apache.pdfbox.cos.COSName $r2;
        int i0;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT>;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: void setInt(org.apache.pdfbox.cos.COSName,int)>($r2, i0);

        return;
    }

    public org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace() throws java.io.IOException
    {
        java.lang.String $r16;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1, $r5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.pdfbox.cos.COSName $r2, $r3, $r6, $r8, $r10, $r11;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r19, r21;
        org.apache.pdfbox.cos.COSBase $r4, $r7;
        java.lang.StringBuilder $r12, $r14, $r15;
        org.apache.commons.logging.Log $r13, $r20;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray $r9, $r17, $r18;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CS>;

        $r4 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r3, $r2);

        r21 = null;

        if $r4 == null goto label1;

        $r19 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)>($r4);

        r21 = $r19;

        if $r19 != null goto label6;

        $r20 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void info(java.lang.Object)>("About to return NULL from createColorSpace branch");

        goto label6;

     label1:
        $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>;

        $r7 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6);

        $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CCITTFAX_DECODE>;

        $z0 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CCITTFAX_DECODE_ABBREVIATION>;

        $z1 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label3;

     label2:
        $r9 = new org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray;

        specialinvoke $r9.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: void <init>()>();

        r21 = $r9;

        goto label6;

     label3:
        $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName JBIG2_DECODE>;

        $z2 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label4;

        $r18 = new org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray;

        specialinvoke $r18.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: void <init>()>();

        r21 = $r18;

        goto label6;

     label4:
        $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: boolean getImageMask()>();

        if $z3 == 0 goto label5;

        $r17 = new org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray;

        specialinvoke $r17.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: void <init>()>();

        r21 = $r17;

        goto label6;

     label5:
        $r13 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.commons.logging.Log LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("About to return NULL from unhandled branch. filter = ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r16);

     label6:
        return r21;
    }

    public void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)
    {
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.cos.COSBase r4;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r1;
        org.apache.pdfbox.cos.COSStream $r2;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace r0;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace;

        r4 = null;

        if r0 == null goto label1;

        r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: org.apache.pdfbox.cos.COSBase getCOSObject()>();

     label1:
        $r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r4);

        return;
    }

    public java.lang.String getSuffix()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.lang.String suffix>;

        return $r1;
    }

    public boolean getImageMask()
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE_MASK>;

        $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)>($r2, 0);

        return $z0;
    }

    public void setStencilColor(org.apache.pdfbox.pdmodel.graphics.color.PDColorState)
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorState r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.graphics.color.PDColorState;

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorState stencilColor> = r1;

        return;
    }

    public org.apache.pdfbox.pdmodel.graphics.color.PDColorState getStencilColor()
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorState $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorState stencilColor>;

        return $r1;
    }

    public org.apache.pdfbox.cos.COSArray getDecode()
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSArray $r4;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE>;

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        if $r3 == null goto label1;

        $z0 = $r3 instanceof org.apache.pdfbox.cos.COSArray;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        return $r4;

     label1:
        return null;
    }

    public org.apache.pdfbox.cos.COSBase getMask()
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MASK>;

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        return null;
    }

    java.awt.image.BufferedImage extractAlphaImage(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r0, $r2;
        byte $b3;
        int $i0, $i1, $i2;
        java.awt.image.WritableRaster $r1;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage r3;

        r3 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;

        r0 := @parameter0: java.awt.image.BufferedImage;

        $r1 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getAlphaRaster()>();

        $r2 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke $r1.<java.awt.image.WritableRaster: int getWidth()>();

        $i1 = virtualinvoke $r1.<java.awt.image.WritableRaster: int getHeight()>();

        $i2 = virtualinvoke r0.<java.awt.image.BufferedImage: int getTransparency()>();

        if $i2 != 2 goto label1;

        $b3 = 12;

        goto label2;

     label1:
        $b3 = 10;

     label2:
        specialinvoke $r2.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, $b3);

        virtualinvoke $r2.<java.awt.image.BufferedImage: void setData(java.awt.image.Raster)>($r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: java.lang.String SUB_TYPE> = "Image";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/graphics/xobject/PDXObjectImage;");

        <org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
