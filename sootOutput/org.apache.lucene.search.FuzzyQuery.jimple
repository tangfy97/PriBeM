public class org.apache.lucene.search.FuzzyQuery extends org.apache.lucene.search.MultiTermQuery
{
    public static final int defaultMaxEdits;
    public static final int defaultPrefixLength;
    public static final int defaultMaxExpansions;
    public static final boolean defaultTranspositions;
    private final int maxEdits;
    private final int maxExpansions;
    private final boolean transpositions;
    private final int prefixLength;
    private final org.apache.lucene.index.Term term;
    public static final float defaultMinSimilarity;

    public void <init>(org.apache.lucene.index.Term, int, int, int, boolean)
    {
        org.apache.lucene.index.Term r1;
        org.apache.lucene.search.FuzzyQuery r0;
        org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite $r4;
        java.lang.IllegalArgumentException $r3, $r5, $r6;
        int i0, i1, i2;
        java.lang.String $r2;
        boolean z0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        r1 := @parameter0: org.apache.lucene.index.Term;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.Term: java.lang.String field()>();

        specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: void <init>(java.lang.String)>($r2);

        if i0 < 0 goto label1;

        if i0 <= 2 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxEdits must be between 0 and 2");

        throw $r3;

     label2:
        if i1 >= 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("prefixLength cannot be negative.");

        throw $r6;

     label3:
        if i2 >= 0 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxExpansions cannot be negative.");

        throw $r5;

     label4:
        r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term> = r1;

        r0.<org.apache.lucene.search.FuzzyQuery: int maxEdits> = i0;

        r0.<org.apache.lucene.search.FuzzyQuery: int prefixLength> = i1;

        r0.<org.apache.lucene.search.FuzzyQuery: boolean transpositions> = z0;

        r0.<org.apache.lucene.search.FuzzyQuery: int maxExpansions> = i2;

        $r4 = new org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite;

        specialinvoke $r4.<org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite: void <init>(int)>(i2);

        virtualinvoke r0.<org.apache.lucene.search.FuzzyQuery: void setRewriteMethod(org.apache.lucene.search.MultiTermQuery$RewriteMethod)>($r4);

        return;
    }

    public void <init>(org.apache.lucene.index.Term, int, int)
    {
        org.apache.lucene.index.Term r1;
        int i0, i1;
        org.apache.lucene.search.FuzzyQuery r0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        r1 := @parameter0: org.apache.lucene.index.Term;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.lucene.search.FuzzyQuery: void <init>(org.apache.lucene.index.Term,int,int,int,boolean)>(r1, i0, i1, 50, 1);

        return;
    }

    public void <init>(org.apache.lucene.index.Term, int)
    {
        org.apache.lucene.index.Term r1;
        int i0;
        org.apache.lucene.search.FuzzyQuery r0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        r1 := @parameter0: org.apache.lucene.index.Term;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.search.FuzzyQuery: void <init>(org.apache.lucene.index.Term,int,int)>(r1, i0, 0);

        return;
    }

    public void <init>(org.apache.lucene.index.Term)
    {
        org.apache.lucene.index.Term r1;
        org.apache.lucene.search.FuzzyQuery r0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        r1 := @parameter0: org.apache.lucene.index.Term;

        specialinvoke r0.<org.apache.lucene.search.FuzzyQuery: void <init>(org.apache.lucene.index.Term,int)>(r1, 2);

        return;
    }

    public int getMaxEdits()
    {
        int $i0;
        org.apache.lucene.search.FuzzyQuery r0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        $i0 = r0.<org.apache.lucene.search.FuzzyQuery: int maxEdits>;

        return $i0;
    }

    public int getPrefixLength()
    {
        int $i0;
        org.apache.lucene.search.FuzzyQuery r0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        $i0 = r0.<org.apache.lucene.search.FuzzyQuery: int prefixLength>;

        return $i0;
    }

    protected org.apache.lucene.index.TermsEnum getTermsEnum(org.apache.lucene.index.Terms, org.apache.lucene.util.AttributeSource) throws java.io.IOException
    {
        org.apache.lucene.index.Term $r4, $r6, $r10;
        org.apache.lucene.index.SingleTermsEnum $r1;
        org.apache.lucene.index.TermsEnum $r3;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.lucene.util.AttributeSource r9;
        java.lang.String $r7;
        boolean $z0;
        org.apache.lucene.index.Terms r2;
        org.apache.lucene.search.FuzzyTermsEnum $r8;
        org.apache.lucene.util.BytesRef $r5;
        org.apache.lucene.search.FuzzyQuery r0;
        float $f0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        r2 := @parameter0: org.apache.lucene.index.Terms;

        r9 := @parameter1: org.apache.lucene.util.AttributeSource;

        $i0 = r0.<org.apache.lucene.search.FuzzyQuery: int maxEdits>;

        if $i0 == 0 goto label1;

        $i1 = r0.<org.apache.lucene.search.FuzzyQuery: int prefixLength>;

        $r6 = r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.Term: java.lang.String text()>();

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 < $i2 goto label2;

     label1:
        $r1 = new org.apache.lucene.index.SingleTermsEnum;

        $r3 = virtualinvoke r2.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        $r4 = r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        specialinvoke $r1.<org.apache.lucene.index.SingleTermsEnum: void <init>(org.apache.lucene.index.TermsEnum,org.apache.lucene.util.BytesRef)>($r3, $r5);

        return $r1;

     label2:
        $r8 = new org.apache.lucene.search.FuzzyTermsEnum;

        $r10 = virtualinvoke r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term getTerm()>();

        $i3 = r0.<org.apache.lucene.search.FuzzyQuery: int maxEdits>;

        $f0 = (float) $i3;

        $i4 = r0.<org.apache.lucene.search.FuzzyQuery: int prefixLength>;

        $z0 = r0.<org.apache.lucene.search.FuzzyQuery: boolean transpositions>;

        specialinvoke $r8.<org.apache.lucene.search.FuzzyTermsEnum: void <init>(org.apache.lucene.index.Terms,org.apache.lucene.util.AttributeSource,org.apache.lucene.index.Term,float,int,boolean)>(r2, r9, $r10, $f0, $i4, $z0);

        return $r8;
    }

    public org.apache.lucene.index.Term getTerm()
    {
        org.apache.lucene.index.Term $r1;
        org.apache.lucene.search.FuzzyQuery r0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        $r1 = r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        return $r1;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.index.Term $r2, $r5, $r10;
        org.apache.lucene.search.FuzzyQuery r1;
        int $i0;
        float $f0;
        java.lang.StringBuilder $r0;
        java.lang.String $r3, r4, $r6, $r7, $r8, $r9, $r11;
        boolean $z0;

        r1 := @this: org.apache.lucene.search.FuzzyQuery;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.Term: java.lang.String field()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label1;

        $r10 = r1.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.index.Term: java.lang.String field()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label1:
        $r5 = r1.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.Term: java.lang.String text()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);

        $i0 = r1.<org.apache.lucene.search.FuzzyQuery: int maxEdits>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $f0 = virtualinvoke r1.<org.apache.lucene.search.FuzzyQuery: float getBoost()>();

        $r8 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public int hashCode()
    {
        org.apache.lucene.index.Term $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, $i14;
        boolean $z0, $z1;
        org.apache.lucene.search.FuzzyQuery r0;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        $i0 = specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: int hashCode()>();

        $i2 = 31 * $i0;

        $i1 = r0.<org.apache.lucene.search.FuzzyQuery: int maxEdits>;

        i11 = $i2 + $i1;

        $i4 = 31 * i11;

        $i3 = r0.<org.apache.lucene.search.FuzzyQuery: int prefixLength>;

        i12 = $i4 + $i3;

        $i6 = 31 * i12;

        $i5 = r0.<org.apache.lucene.search.FuzzyQuery: int maxExpansions>;

        i13 = $i6 + $i5;

        $i7 = 31 * i13;

        $z0 = r0.<org.apache.lucene.search.FuzzyQuery: boolean transpositions>;

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        $i10 = $i7 + $z1;

        $i8 = 31 * $i10;

        $r1 = r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        if $r1 != null goto label3;

        $i14 = 0;

        goto label4;

     label3:
        $r2 = r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        $i14 = virtualinvoke $r2.<org.apache.lucene.index.Term: int hashCode()>();

     label4:
        $i9 = $i8 + $i14;

        return $i9;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.index.Term $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.search.FuzzyQuery r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.lucene.search.FuzzyQuery;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.lucene.search.FuzzyQuery) r1;

        $i1 = r0.<org.apache.lucene.search.FuzzyQuery: int maxEdits>;

        $i0 = r4.<org.apache.lucene.search.FuzzyQuery: int maxEdits>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i3 = r0.<org.apache.lucene.search.FuzzyQuery: int prefixLength>;

        $i2 = r4.<org.apache.lucene.search.FuzzyQuery: int prefixLength>;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        $i5 = r0.<org.apache.lucene.search.FuzzyQuery: int maxExpansions>;

        $i4 = r4.<org.apache.lucene.search.FuzzyQuery: int maxExpansions>;

        if $i5 == $i4 goto label6;

        return 0;

     label6:
        $z2 = r0.<org.apache.lucene.search.FuzzyQuery: boolean transpositions>;

        $z1 = r4.<org.apache.lucene.search.FuzzyQuery: boolean transpositions>;

        if $z2 == $z1 goto label7;

        return 0;

     label7:
        $r5 = r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        if $r5 != null goto label8;

        $r8 = r4.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        if $r8 == null goto label9;

        return 0;

     label8:
        $r7 = r0.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        $r6 = r4.<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term term>;

        $z3 = virtualinvoke $r7.<org.apache.lucene.index.Term: boolean equals(java.lang.Object)>($r6);

        if $z3 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }

    public static int floatToEdits(float, int)
    {
        byte $b0, $b1;
        int i2, $i3, $i4, $i5, $i6;
        float f0, $f1;
        double $d0, $d1, $d2, $d3;

        f0 := @parameter0: float;

        i2 := @parameter1: int;

        $b0 = f0 cmpl 1.0F;

        $i6 = (int) $b0;

        if $i6 < 0 goto label1;

        $f1 = staticinvoke <java.lang.Math: float min(float,float)>(f0, 2.0F);

        $i5 = (int) $f1;

        return $i5;

     label1:
        $b1 = f0 cmpl 0.0F;

        if $b1 != 0 goto label2;

        return 0;

     label2:
        $d0 = (double) f0;

        $d2 = 1.0 - $d0;

        $d1 = (double) i2;

        $d3 = $d2 * $d1;

        $i3 = (int) $d3;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 2);

        return $i4;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.search.FuzzyQuery: float defaultMinSimilarity> = 2.0F;

        <org.apache.lucene.search.FuzzyQuery: boolean defaultTranspositions> = 1;

        <org.apache.lucene.search.FuzzyQuery: int defaultMaxExpansions> = 50;

        <org.apache.lucene.search.FuzzyQuery: int defaultPrefixLength> = 0;

        <org.apache.lucene.search.FuzzyQuery: int defaultMaxEdits> = 2;

        return;
    }
}
