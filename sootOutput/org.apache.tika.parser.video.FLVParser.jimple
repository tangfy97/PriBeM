public class org.apache.tika.parser.video.FLVParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private static int TYPE_METADATA;
    private static byte MASK_AUDIO;
    private static byte MASK_VIDEO;
    private static final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.tika.parser.video.FLVParser r0;

        r0 := @this: org.apache.tika.parser.video.FLVParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r0;
        org.apache.tika.parser.video.FLVParser r1;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.video.FLVParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.video.FLVParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    private long readUInt32(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int $i0;
        long $l1, $l2;
        org.apache.tika.parser.video.FLVParser r1;

        r1 := @this: org.apache.tika.parser.video.FLVParser;

        r0 := @parameter0: java.io.DataInputStream;

        $i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $l1 = (long) $i0;

        $l2 = $l1 & 4294967295L;

        return $l2;
    }

    private int readUInt24(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        org.apache.tika.parser.video.FLVParser r1;

        r1 := @this: org.apache.tika.parser.video.FLVParser;

        r0 := @parameter0: java.io.DataInputStream;

        $i0 = virtualinvoke r0.<java.io.DataInputStream: int read()>();

        i4 = $i0 << 16;

        $i1 = virtualinvoke r0.<java.io.DataInputStream: int read()>();

        $i2 = $i1 << 8;

        i5 = i4 + $i2;

        $i3 = virtualinvoke r0.<java.io.DataInputStream: int read()>();

        i6 = i5 + $i3;

        return i6;
    }

    private java.lang.Object readAMFData(java.io.DataInputStream, int) throws java.io.IOException
    {
        java.io.DataInputStream r1;
        java.lang.Double $r8;
        java.util.Date $r9;
        long $l0;
        int $i1, i2, $i4;
        java.lang.Boolean $r7;
        org.apache.tika.parser.video.FLVParser r2;
        java.lang.String $r6;
        double $d0, $d1;
        boolean $z0;
        java.lang.Object $r3, $r4, $r5;

        r2 := @this: org.apache.tika.parser.video.FLVParser;

        r1 := @parameter0: java.io.DataInputStream;

        i2 := @parameter1: int;

        $i4 = (int) -1;

        if i2 != $i4 goto label01;

        i2 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedByte()>();

     label01:
        tableswitch(i2)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label12;
            case 8: goto label08;
            case 9: goto label12;
            case 10: goto label09;
            case 11: goto label10;
            case 12: goto label12;
            case 13: goto label11;
            default: goto label12;
        };

     label02:
        $d1 = virtualinvoke r1.<java.io.DataInputStream: double readDouble()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        return $r8;

     label03:
        $i1 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedByte()>();

        if $i1 != 1 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r7;

     label06:
        $r6 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: java.lang.String readAMFString(java.io.DataInputStream)>(r1);

        return $r6;

     label07:
        $r5 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: java.lang.Object readAMFObject(java.io.DataInputStream)>(r1);

        return $r5;

     label08:
        $r4 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: java.lang.Object readAMFEcmaArray(java.io.DataInputStream)>(r1);

        return $r4;

     label09:
        $r3 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: java.lang.Object readAMFStrictArray(java.io.DataInputStream)>(r1);

        return $r3;

     label10:
        $r9 = new java.util.Date;

        $d0 = virtualinvoke r1.<java.io.DataInputStream: double readDouble()>();

        $l0 = (long) $d0;

        specialinvoke $r9.<java.util.Date: void <init>(long)>($l0);

        virtualinvoke r1.<java.io.DataInputStream: short readShort()>();

        return $r9;

     label11:
        return "UNDEFINED";

     label12:
        return null;
    }

    private java.lang.Object readAMFStrictArray(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r1;
        long $l0, $l1;
        java.util.ArrayList $r4;
        byte $b2;
        int i3, $i4, $i6;
        java.lang.Object $r3;
        org.apache.tika.parser.video.FLVParser r0;

        r0 := @this: org.apache.tika.parser.video.FLVParser;

        r1 := @parameter0: java.io.DataInputStream;

        $l0 = specialinvoke r0.<org.apache.tika.parser.video.FLVParser: long readUInt32(java.io.DataInputStream)>(r1);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label1:
        $l1 = (long) i3;

        $b2 = $l1 cmp $l0;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label2;

        $i6 = (int) -1;

        $r3 = specialinvoke r0.<org.apache.tika.parser.video.FLVParser: java.lang.Object readAMFData(java.io.DataInputStream,int)>(r1, $i6);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r4;
    }

    private java.lang.String readAMFString(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        int $i0;
        java.lang.String $r2;
        org.apache.tika.parser.video.FLVParser r3;

        r3 := @this: org.apache.tika.parser.video.FLVParser;

        r0 := @parameter0: java.io.DataInputStream;

        $i0 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();

        r1 = newarray (byte)[$i0];

        virtualinvoke r0.<java.io.DataInputStream: void readFully(byte[])>(r1);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "UTF-8");

        return $r2;
    }

    private java.lang.Object readAMFObject(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r2;
        int $i0;
        java.util.HashMap $r0;
        java.lang.Object $r4;
        org.apache.tika.parser.video.FLVParser r1;
        java.lang.String $r3;

        r1 := @this: org.apache.tika.parser.video.FLVParser;

        r2 := @parameter0: java.io.DataInputStream;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

     label1:
        $r3 = specialinvoke r1.<org.apache.tika.parser.video.FLVParser: java.lang.String readAMFString(java.io.DataInputStream)>(r2);

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int read()>();

        if $i0 != 9 goto label2;

        goto label3;

     label2:
        $r4 = specialinvoke r1.<org.apache.tika.parser.video.FLVParser: java.lang.Object readAMFData(java.io.DataInputStream,int)>(r2, $i0);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label1;

     label3:
        return $r0;
    }

    private java.lang.Object readAMFEcmaArray(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r1;
        long $l0, $l1;
        java.util.HashMap $r5;
        byte $b2;
        int $i3, i4, $i5;
        java.lang.Object $r4;
        org.apache.tika.parser.video.FLVParser r0;
        java.lang.String $r3;

        r0 := @this: org.apache.tika.parser.video.FLVParser;

        r1 := @parameter0: java.io.DataInputStream;

        $l0 = specialinvoke r0.<org.apache.tika.parser.video.FLVParser: long readUInt32(java.io.DataInputStream)>(r1);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        i4 = 0;

     label1:
        $l1 = (long) i4;

        $b2 = $l1 cmp $l0;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label2;

        $r3 = specialinvoke r0.<org.apache.tika.parser.video.FLVParser: java.lang.String readAMFString(java.io.DataInputStream)>(r1);

        $i3 = virtualinvoke r1.<java.io.DataInputStream: int read()>();

        $r4 = specialinvoke r0.<org.apache.tika.parser.video.FLVParser: java.lang.Object readAMFData(java.io.DataInputStream,int)>(r1, $i3);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r5;
    }

    private boolean checkSignature(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int $i0, $i1, $i2;
        org.apache.tika.parser.video.FLVParser r1;
        boolean $z0;

        r1 := @this: org.apache.tika.parser.video.FLVParser;

        r0 := @parameter0: java.io.DataInputStream;

        $i0 = virtualinvoke r0.<java.io.DataInputStream: int read()>();

        if $i0 != 70 goto label1;

        $i1 = virtualinvoke r0.<java.io.DataInputStream: int read()>();

        if $i1 != 76 goto label1;

        $i2 = virtualinvoke r0.<java.io.DataInputStream: int read()>();

        if $i2 != 86 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] r36;
        org.apache.tika.metadata.Metadata r3;
        byte $b3, $b5, $b6, $b8, $b15;
        java.util.Map r38;
        java.util.Set $r10;
        java.lang.StringBuilder $r21, $r22, $r26, $r27, $r31, $r32, $r41, $r43, $r45;
        long $l2, $l4, $l12, $l14;
        org.apache.tika.exception.TikaException $r40, $r42, $r44, $r46;
        java.lang.String $r4, $r5, $r16, $r18, $r23, $r28, $r33;
        java.util.Map$Entry r13;
        org.apache.tika.sax.XHTMLContentHandler $r47;
        java.io.ByteArrayInputStream $r48;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.tika.parser.ParseContext r35;
        java.io.DataInputStream $r39, $r49;
        int $i0, $i1, $i7, $i9, $i10, $i11, $i13, $i16, $i17, $i18, i19, i20, i21, $i22, $i23, $i25, $i27, $i29;
        org.apache.tika.parser.video.FLVParser r2;
        org.xml.sax.ContentHandler r7;
        java.util.Iterator $r11;
        java.lang.Object $r12, $r14, $r15, $r17, r37;
        java.io.InputStream r1;

        r2 := @this: org.apache.tika.parser.video.FLVParser;

        r1 := @parameter0: java.io.InputStream;

        r7 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r35 := @parameter3: org.apache.tika.parser.ParseContext;

        $r39 = new java.io.DataInputStream;

        specialinvoke $r39.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        $z0 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: boolean checkSignature(java.io.DataInputStream)>($r39);

        if $z0 != 0 goto label01;

        $r40 = new org.apache.tika.exception.TikaException;

        specialinvoke $r40.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("FLV signature not detected");

        throw $r40;

     label01:
        $i0 = virtualinvoke $r39.<java.io.DataInputStream: int readUnsignedByte()>();

        if $i0 == 1 goto label02;

        $r42 = new org.apache.tika.exception.TikaException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpexpected FLV version: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r33);

        throw $r42;

     label02:
        $i1 = virtualinvoke $r39.<java.io.DataInputStream: int readUnsignedByte()>();

        $l2 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: long readUInt32(java.io.DataInputStream)>($r39);

        $b3 = $l2 cmp 9L;

        if $b3 == 0 goto label03;

        $r44 = new org.apache.tika.exception.TikaException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpexpected FLV header length: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r28);

        throw $r44;

     label03:
        $l4 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: long readUInt32(java.io.DataInputStream)>($r39);

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label04;

        $r46 = new org.apache.tika.exception.TikaException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpexpected FLV first previous block size: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r23);

        throw $r46;

     label04:
        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", "video/x-flv");

        $b6 = <org.apache.tika.parser.video.FLVParser: byte MASK_VIDEO>;

        $i22 = (int) $b6;

        $i7 = $i1 & $i22;

        if $i7 == 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z2);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("hasVideo", $r4);

        $b8 = <org.apache.tika.parser.video.FLVParser: byte MASK_AUDIO>;

        $i23 = (int) $b8;

        $i9 = $i1 & $i23;

        if $i9 == 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z3);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("hasAudio", $r5);

        $r47 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r47.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r7, r3);

        virtualinvoke $r47.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

     label09:
        $i18 = virtualinvoke $r39.<java.io.DataInputStream: int read()>();

        $i25 = (int) -1;

        if $i18 != $i25 goto label10;

        goto label22;

     label10:
        $i10 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: int readUInt24(java.io.DataInputStream)>($r39);

        specialinvoke r2.<org.apache.tika.parser.video.FLVParser: long readUInt32(java.io.DataInputStream)>($r39);

        specialinvoke r2.<org.apache.tika.parser.video.FLVParser: int readUInt24(java.io.DataInputStream)>($r39);

        $i11 = <org.apache.tika.parser.video.FLVParser: int TYPE_METADATA>;

        if $i18 != $i11 goto label18;

        r36 = newarray (byte)[$i10];

        i19 = 0;

     label11:
        if i19 >= $i10 goto label12;

        $i16 = $i10 - i19;

        $i17 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r36, i19, $i16);

        $i27 = (int) -1;

        if $i17 == $i27 goto label12;

        i19 = i19 + $i17;

        goto label11;

     label12:
        $r48 = new java.io.ByteArrayInputStream;

        specialinvoke $r48.<java.io.ByteArrayInputStream: void <init>(byte[])>(r36);

        $r49 = new java.io.DataInputStream;

        specialinvoke $r49.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r48);

        r37 = null;

        i20 = 0;

     label13:
        if i20 >= 2 goto label14;

        $i29 = (int) -1;

        r37 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: java.lang.Object readAMFData(java.io.DataInputStream,int)>($r49, $i29);

        i20 = i20 + 1;

        goto label13;

     label14:
        $z1 = r37 instanceof java.util.Map;

        if $z1 == 0 goto label17;

        r38 = (java.util.Map) r37;

        $r10 = interfaceinvoke r38.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z4 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label17;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r14 != null goto label16;

        goto label15;

     label16:
        $r15 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        $r17 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>($r16, $r18);

        goto label15;

     label17:
        goto label20;

     label18:
        i21 = 0;

     label19:
        if i21 >= $i10 goto label20;

        virtualinvoke $r39.<java.io.DataInputStream: byte readByte()>();

        i21 = i21 + 1;

        goto label19;

     label20:
        $l12 = specialinvoke r2.<org.apache.tika.parser.video.FLVParser: long readUInt32(java.io.DataInputStream)>($r39);

        $i13 = $i10 + 11;

        $l14 = (long) $i13;

        $b15 = $l12 cmp $l14;

        if $b15 == 0 goto label21;

        goto label22;

     label21:
        goto label09;

     label22:
        virtualinvoke $r47.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

        return;
    }

    static void <clinit>()
    {
        java.util.Set $r1;
        org.apache.tika.mime.MediaType $r0;

        <org.apache.tika.parser.video.FLVParser: long serialVersionUID> = -8718013155719197679L;

        <org.apache.tika.parser.video.FLVParser: int TYPE_METADATA> = 18;

        <org.apache.tika.parser.video.FLVParser: byte MASK_AUDIO> = 1;

        <org.apache.tika.parser.video.FLVParser: byte MASK_VIDEO> = 4;

        $r0 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType video(java.lang.String)>("x-flv");

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        <org.apache.tika.parser.video.FLVParser: java.util.Set SUPPORTED_TYPES> = $r1;

        return;
    }
}
