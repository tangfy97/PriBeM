public class org.apache.zookeeper.server.quorum.QuorumCnxManager extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;
    static final int RECV_CAPACITY;
    static final int SEND_CAPACITY;
    static final int PACKETMAXSIZE;
    static final int MAX_CONNECTION_ATTEMPTS;
    private long observerCounter;
    private int cnxTO;
    final org.apache.zookeeper.server.quorum.QuorumPeer self;
    final java.util.concurrent.ConcurrentHashMap senderWorkerMap;
    final java.util.concurrent.ConcurrentHashMap queueSendMap;
    final java.util.concurrent.ConcurrentHashMap lastMessageSent;
    public final java.util.concurrent.ArrayBlockingQueue recvQueue;
    private final java.lang.Object recvQLock;
    volatile boolean shutdown;
    public final org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener listener;
    private java.util.concurrent.atomic.AtomicInteger threadCnt;

    public void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r8;
        java.util.concurrent.ConcurrentHashMap $r4, $r5, $r6;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        java.lang.Integer $r10;
        java.util.concurrent.ArrayBlockingQueue $r3;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener $r9;
        java.util.concurrent.atomic.AtomicInteger $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r7;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r8 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPeer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: long observerCounter> = -1L;

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: int cnxTO> = 5000;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.lang.Object recvQLock> = $r1;

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean shutdown> = 0;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.atomic.AtomicInteger threadCnt> = $r2;

        $r3 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(100);

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ArrayBlockingQueue recvQueue> = $r3;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap> = $r4;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap senderWorkerMap> = $r5;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap lastMessageSent> = $r6;

        $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zookeeper.cnxTimeout");

        if $r7 == null goto label1;

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(java.lang.String)>($r7);

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: int cnxTO> = $i0;

     label1:
        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self> = r8;

        $r9 = new org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener;

        specialinvoke $r9.<org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener: void <init>(org.apache.zookeeper.server.quorum.QuorumCnxManager)>(r0);

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener listener> = $r9;

        return;
    }

    public void testInitiateConnection(long) throws java.lang.Exception
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r3;
        java.net.Socket $r1;
        long l0;
        java.lang.Long $r5, $r9;
        java.util.Map $r4;
        int $i1;
        java.lang.String $r14;
        boolean $z0;
        org.slf4j.Logger $r0, $r11;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r2;
        java.net.InetSocketAddress $r8;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer $r7;
        java.lang.Object $r6;
        java.lang.StringBuilder $r10, $r12, $r13;

        r2 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        l0 := @parameter0: long;

        $r0 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening channel to server ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

     label1:
        $r1 = new java.net.Socket;

        specialinvoke $r1.<java.net.Socket: void <init>()>();

        specialinvoke r2.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void setSockOpts(java.net.Socket)>($r1);

        $r3 = r2.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r4 = virtualinvoke $r3.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getVotingView()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r6;

        $r8 = $r7.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress electionAddr>;

        $i1 = r2.<org.apache.zookeeper.server.quorum.QuorumCnxManager: int cnxTO>;

        virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r8, $i1);

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r2.<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean initiateConnection(java.net.Socket,java.lang.Long)>($r1, $r9);

        return;
    }

    public boolean initiateConnection(java.net.Socket, java.lang.Long)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r4, $r6, $r21;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker r11, $r29;
        byte $b3;
        java.io.DataOutputStream $r27;
        java.lang.Long r5;
        boolean $z0;
        java.util.concurrent.ConcurrentHashMap $r9, $r12, $r13, $r15;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r3;
        java.util.concurrent.ArrayBlockingQueue $r31;
        java.lang.StringBuilder $r18, $r19, $r20, $r22, $r23, $r28;
        java.net.Socket r1;
        long $l0, $l1, $l2, $l4;
        int $i5;
        java.lang.String $r24;
        java.io.OutputStream $r2;
        org.slf4j.Logger $r17, $r26;
        java.io.IOException $r25;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker $r30;
        java.lang.Object $r10;

        r3 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r1 := @parameter0: java.net.Socket;

        r5 := @parameter1: java.lang.Long;

     label1:
        $r27 = new java.io.DataOutputStream;

        $r2 = virtualinvoke r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r27.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

        $r4 = r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l0 = virtualinvoke $r4.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        virtualinvoke $r27.<java.io.DataOutputStream: void writeLong(long)>($l0);

        virtualinvoke $r27.<java.io.DataOutputStream: void flush()>();

     label2:
        goto label4;

     label3:
        $r25 := @caughtexception;

        $r26 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        interfaceinvoke $r26.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring exception reading or writing challenge: ", $r25);

        specialinvoke r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void closeSocket(java.net.Socket)>(r1);

        return 0;

     label4:
        $l1 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $r6 = r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l2 = virtualinvoke $r6.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $b3 = $l1 cmp $l2;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label5;

        $r17 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Have smaller server identifier, so dropping the connection: (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r21 = r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l4 = virtualinvoke $r21.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r24);

        specialinvoke r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void closeSocket(java.net.Socket)>(r1);

        goto label8;

     label5:
        $r29 = new org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker;

        specialinvoke $r29.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: void <init>(org.apache.zookeeper.server.quorum.QuorumCnxManager,java.net.Socket,java.lang.Long)>(r3, r1, r5);

        $r30 = new org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker;

        specialinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker: void <init>(org.apache.zookeeper.server.quorum.QuorumCnxManager,java.net.Socket,java.lang.Long,org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker)>(r3, r1, r5, $r29);

        virtualinvoke $r29.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: void setRecv(org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker)>($r30);

        $r9 = r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap senderWorkerMap>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r5);

        r11 = (org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker) $r10;

        if r11 == null goto label6;

        virtualinvoke r11.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: boolean finish()>();

     label6:
        $r12 = r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap senderWorkerMap>;

        virtualinvoke $r12.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r29);

        $r13 = r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        $z0 = virtualinvoke $r13.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z0 != 0 goto label7;

        $r15 = r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        $r31 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r31.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(1);

        virtualinvoke $r15.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r31);

     label7:
        virtualinvoke $r29.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: void start()>();

        virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker: void start()>();

        return 1;

     label8:
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean receiveConnection(java.net.Socket)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r5;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker r10, r36, $r41;
        byte $b2, $b5;
        java.lang.Long $r3, $r22, r35;
        boolean $z0;
        java.util.concurrent.ConcurrentHashMap $r8, $r11, $r12, $r14, $r15;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r4;
        java.util.concurrent.ArrayBlockingQueue $r43;
        java.lang.StringBuilder $r19, $r20, $r25, $r26, $r31, $r33, $r38, $r39, $r40;
        java.io.DataInputStream $r37;
        java.net.Socket r1;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l8;
        int $i9;
        java.lang.String $r21, $r27, $r32, $r34;
        org.slf4j.Logger $r18, $r24, $r30;
        java.io.IOException $r28;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker $r42;
        java.lang.Object $r9, $r16;
        java.io.InputStream $r2;

        r4 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r1 := @parameter0: java.net.Socket;

     label1:
        $r37 = new java.io.DataInputStream;

        $r2 = virtualinvoke r1.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r37.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        $l0 = virtualinvoke $r37.<java.io.DataInputStream: long readLong()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r35 = $r3;

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $b2 = $l1 cmp 9223372036854775807L;

        if $b2 != 0 goto label2;

        $l7 = r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: long observerCounter>;

        $l8 = $l7 - 1L;

        r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: long observerCounter> = $l8;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        r35 = $r22;

        $r24 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting arbitrary identifier to observer: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String)>($r27);

     label2:
        goto label4;

     label3:
        $r28 := @caughtexception;

        specialinvoke r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void closeSocket(java.net.Socket)>(r1);

        $r30 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception reading or writing challenge: ");

        $r32 = virtualinvoke $r28.<java.io.IOException: java.lang.String toString()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String)>($r34);

        return 0;

     label4:
        $l3 = virtualinvoke r35.<java.lang.Long: long longValue()>();

        $r5 = r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l4 = virtualinvoke $r5.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $b5 = $l3 cmp $l4;

        $i9 = (int) $b5;

        if $i9 >= 0 goto label6;

        $r15 = r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap senderWorkerMap>;

        $r16 = virtualinvoke $r15.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r35);

        r36 = (org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker) $r16;

        if r36 == null goto label5;

        virtualinvoke r36.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: boolean finish()>();

     label5:
        $r18 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Create new connection to server: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String)>($r21);

        specialinvoke r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void closeSocket(java.net.Socket)>(r1);

        $l6 = virtualinvoke r35.<java.lang.Long: long longValue()>();

        virtualinvoke r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void connectOne(long)>($l6);

        goto label9;

     label6:
        $r41 = new org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker;

        specialinvoke $r41.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: void <init>(org.apache.zookeeper.server.quorum.QuorumCnxManager,java.net.Socket,java.lang.Long)>(r4, r1, r35);

        $r42 = new org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker;

        specialinvoke $r42.<org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker: void <init>(org.apache.zookeeper.server.quorum.QuorumCnxManager,java.net.Socket,java.lang.Long,org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker)>(r4, r1, r35, $r41);

        virtualinvoke $r41.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: void setRecv(org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker)>($r42);

        $r8 = r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap senderWorkerMap>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r35);

        r10 = (org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker) $r9;

        if r10 == null goto label7;

        virtualinvoke r10.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: boolean finish()>();

     label7:
        $r11 = r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap senderWorkerMap>;

        virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, $r41);

        $r12 = r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        $z0 = virtualinvoke $r12.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r35);

        if $z0 != 0 goto label8;

        $r14 = r4.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        $r43 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r43.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(1);

        virtualinvoke $r14.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, $r43);

     label8:
        virtualinvoke $r41.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: void start()>();

        virtualinvoke $r42.<org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker: void start()>();

        return 1;

     label9:
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void toSend(java.lang.Long, java.nio.ByteBuffer)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r1;
        long $l0, $l1, $l3, $l4;
        java.nio.ByteBuffer r11, $r15;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$Message $r14;
        byte $b2;
        java.lang.Long r2;
        java.lang.String $r10;
        boolean $z0;
        org.slf4j.Logger $r7;
        java.util.concurrent.ConcurrentHashMap $r3, $r4, $r13;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        java.util.concurrent.ArrayBlockingQueue $r12, r16;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r8, $r9;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r2 := @parameter0: java.lang.Long;

        r11 := @parameter1: java.nio.ByteBuffer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l0 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        virtualinvoke r11.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r14 = new org.apache.zookeeper.server.quorum.QuorumCnxManager$Message;

        $r15 = virtualinvoke r11.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $l3 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        specialinvoke $r14.<org.apache.zookeeper.server.quorum.QuorumCnxManager$Message: void <init>(java.nio.ByteBuffer,long)>($r15, $l3);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void addToRecvQueue(org.apache.zookeeper.server.quorum.QuorumCnxManager$Message)>($r14);

        goto label5;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r12 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r12.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(1);

        $r13 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        virtualinvoke $r13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r12);

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void addToSendQueue(java.util.concurrent.ArrayBlockingQueue,java.nio.ByteBuffer)>($r12, r11);

        goto label4;

     label2:
        $r4 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r2);

        r16 = (java.util.concurrent.ArrayBlockingQueue) $r5;

        if r16 == null goto label3;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void addToSendQueue(java.util.concurrent.ArrayBlockingQueue,java.nio.ByteBuffer)>(r16, r11);

        goto label4;

     label3:
        $r7 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No queue for server ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r10);

     label4:
        $l4 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void connectOne(long)>($l4);

     label5:
        return;
    }

    synchronized void connectOne(long)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r9, $r17, $r25;
        java.lang.Long $r2, $r11, $r19, $r27, $r32;
        java.util.Map $r10, $r18, $r26;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        java.nio.channels.UnresolvedAddressException $r51;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer $r21, $r29;
        java.lang.StringBuilder $r4, $r6, $r7, $r12, $r14, $r15, $r33, $r35, $r36, $r38, $r40, $r41, $r44, $r46, $r47, $r48, $r49, $r52, $r54, $r55, $r56, $r57;
        long l0;
        java.lang.String $r8, $r16, $r37, $r42, $r50, $r58;
        java.io.IOException $r43;
        boolean $z0, $z1, $z2;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.net.InetSocketAddress r22, $r30;
        java.net.Socket $r24;
        int $i1;
        org.slf4j.Logger $r5, $r13, $r23, $r31, $r34, $r39, $r45, $r53;
        java.lang.Object $r3, $r20, $r28;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap senderWorkerMap>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r2);

        if $r3 != null goto label09;

        $r9 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r10 = $r9.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z0 == 0 goto label01;

        $r17 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r18 = $r17.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r20 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        $r21 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r20;

        r22 = $r21.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress electionAddr>;

        goto label02;

     label01:
        $r13 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid server id: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String)>($r16);

        return;

     label02:
        $r23 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r23.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label03;

        $r39 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening channel to server ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r39.<org.slf4j.Logger: void debug(java.lang.String)>($r42);

     label03:
        $r24 = new java.net.Socket;

        specialinvoke $r24.<java.net.Socket: void <init>()>();

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void setSockOpts(java.net.Socket)>($r24);

        $r25 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r26 = virtualinvoke $r25.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getView()>();

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r28 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27);

        $r29 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r28;

        $r30 = $r29.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress electionAddr>;

        $i1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: int cnxTO>;

        virtualinvoke $r24.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r30, $i1);

        $r31 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $z2 = interfaceinvoke $r31.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label04;

        $r34 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected to server ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String)>($r37);

     label04:
        $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean initiateConnection(java.net.Socket,java.lang.Long)>($r24, $r32);

     label05:
        goto label08;

     label06:
        $r51 := @caughtexception;

        $r53 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open channel to ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at election address ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r53.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r58, $r51);

        throw $r51;

     label07:
        $r43 := @caughtexception;

        $r45 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open channel to ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at election address ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r45.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r50, $r43);

     label08:
        goto label10;

     label09:
        $r5 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is a connection already for server ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>($r8);

     label10:
        return;

        catch java.nio.channels.UnresolvedAddressException from label02 to label05 with label06;
        catch java.io.IOException from label02 to label05 with label07;
    }

    public void connectAll()
    {
        java.util.Enumeration $r2;
        java.lang.Long $r4;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.Object $r3;
        long $l0;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (java.lang.Long) $r3;

        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void connectOne(long)>($l0);

        goto label1;

     label2:
        return;
    }

    boolean haveDelivered()
    {
        org.slf4j.Logger $r7;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        java.util.concurrent.ArrayBlockingQueue r5;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap queueSendMap>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.concurrent.ArrayBlockingQueue) $r4;

        $r7 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Queue size: ");

        $i0 = virtualinvoke r5.<java.util.concurrent.ArrayBlockingQueue: int size()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r10);

        $i1 = virtualinvoke r5.<java.util.concurrent.ArrayBlockingQueue: int size()>();

        if $i1 != 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public void halt()
    {
        org.slf4j.Logger $r1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener $r2;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean shutdown> = 1;

        $r1 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("Halting listener");

        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener listener>;

        virtualinvoke $r2.<org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener: void halt()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void softHalt()>();

        return;
    }

    public void softHalt()
    {
        org.slf4j.Logger $r7;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker r5;
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ConcurrentHashMap senderWorkerMap>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker) $r4;

        $r7 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Halting sender: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r10);

        virtualinvoke r5.<org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker: boolean finish()>();

        goto label1;

     label2:
        return;
    }

    private void setSockOpts(java.net.Socket) throws java.net.SocketException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r2, $r3;
        java.net.Socket r0;
        int $i0, $i1, $i2;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r1;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r0 := @parameter0: java.net.Socket;

        virtualinvoke r0.<java.net.Socket: void setTcpNoDelay(boolean)>(1);

        $r2 = r1.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i1 = $r2.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $r3 = r1.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i0 = $r3.<org.apache.zookeeper.server.quorum.QuorumPeer: int syncLimit>;

        $i2 = $i1 * $i0;

        virtualinvoke r0.<java.net.Socket: void setSoTimeout(int)>($i2);

        return;
    }

    private void closeSocket(java.net.Socket)
    {
        java.net.Socket r0;
        org.slf4j.Logger $r2;
        java.io.IOException $r1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r3;

        r3 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r0 := @parameter0: java.net.Socket;

     label1:
        virtualinvoke r0.<java.net.Socket: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception while closing", $r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long getThreadCount()
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        long $l1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.atomic.AtomicInteger threadCnt>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public org.apache.zookeeper.server.quorum.QuorumPeer getQuorumPeer()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        return $r1;
    }

    private void addToSendQueue(java.util.concurrent.ArrayBlockingQueue, java.nio.ByteBuffer)
    {
        java.lang.IllegalStateException $r2;
        java.nio.ByteBuffer r1;
        int $i0;
        java.lang.String $r7, $r13;
        java.util.NoSuchElementException $r8;
        org.slf4j.Logger $r4, $r10;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r14;
        java.util.concurrent.ArrayBlockingQueue r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r11, $r12;

        r14 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r0 := @parameter0: java.util.concurrent.ArrayBlockingQueue;

        r1 := @parameter1: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.util.concurrent.ArrayBlockingQueue: int remainingCapacity()>();

        if $i0 != 0 goto label4;

     label1:
        virtualinvoke r0.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object remove()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r10 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to remove from an empty Queue. Ignoring exception ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String)>($r13);

     label4:
        virtualinvoke r0.<java.util.concurrent.ArrayBlockingQueue: boolean add(java.lang.Object)>(r1);

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;

        $r4 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to insert an element in the queue ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String)>($r7);

     label7:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label4 to label5 with label6;
    }

    private boolean isSendQueueEmpty(java.util.concurrent.ArrayBlockingQueue)
    {
        java.util.concurrent.ArrayBlockingQueue r0;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r1;
        boolean $z0;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r0 := @parameter0: java.util.concurrent.ArrayBlockingQueue;

        $z0 = virtualinvoke r0.<java.util.concurrent.ArrayBlockingQueue: boolean isEmpty()>();

        return $z0;
    }

    private java.nio.ByteBuffer pollSendQueue(java.util.concurrent.ArrayBlockingQueue, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.ArrayBlockingQueue r0;
        long l0;
        java.lang.Object $r2;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r4;
        java.nio.ByteBuffer $r3;

        r4 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r0 := @parameter0: java.util.concurrent.ArrayBlockingQueue;

        l0 := @parameter1: long;

        r1 := @parameter2: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke r0.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(l0, r1);

        $r3 = (java.nio.ByteBuffer) $r2;

        return $r3;
    }

    public void addToRecvQueue(org.apache.zookeeper.server.quorum.QuorumCnxManager$Message)
    {
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r6;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$Message r3;
        int $i0;
        java.lang.String $r11, $r17;
        java.util.NoSuchElementException $r12;
        org.slf4j.Logger $r8, $r14;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        java.util.concurrent.ArrayBlockingQueue $r2, $r4, $r18;
        java.lang.Object $r1;
        java.lang.StringBuilder $r7, $r9, $r10, $r13, $r15, $r16;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r3 := @parameter0: org.apache.zookeeper.server.quorum.QuorumCnxManager$Message;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.lang.Object recvQLock>;

        entermonitor $r1;

     label01:
        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ArrayBlockingQueue recvQueue>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.ArrayBlockingQueue: int remainingCapacity()>();

        if $i0 != 0 goto label05;

     label02:
        $r4 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ArrayBlockingQueue recvQueue>;

        virtualinvoke $r4.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object remove()>();

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

        $r14 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to remove from an empty recvQueue. Ignoring exception ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>($r17);

     label05:
        $r18 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ArrayBlockingQueue recvQueue>;

        virtualinvoke $r18.<java.util.concurrent.ArrayBlockingQueue: boolean add(java.lang.Object)>(r3);

     label06:
        goto label08;

     label07:
        $r6 := @caughtexception;

        $r8 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to insert element in the recvQueue ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String)>($r11);

     label08:
        exitmonitor $r1;

     label09:
        goto label12;

     label10:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r5;

     label12:
        return;

        catch java.util.NoSuchElementException from label02 to label03 with label04;
        catch java.lang.IllegalStateException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public org.apache.zookeeper.server.quorum.QuorumCnxManager$Message pollRecvQueue(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.ArrayBlockingQueue $r2;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$Message $r4;
        long l0;
        java.lang.Object $r3;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.ArrayBlockingQueue recvQueue>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(l0, r1);

        $r4 = (org.apache.zookeeper.server.quorum.QuorumCnxManager$Message) $r3;

        return $r4;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG>;

        return $r0;
    }

    static void access$100(org.apache.zookeeper.server.quorum.QuorumCnxManager, java.net.Socket) throws java.net.SocketException
    {
        java.net.Socket r1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r1 := @parameter1: java.net.Socket;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void setSockOpts(java.net.Socket)>(r1);

        return;
    }

    static void access$200(org.apache.zookeeper.server.quorum.QuorumCnxManager, java.net.Socket)
    {
        java.net.Socket r1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r1 := @parameter1: java.net.Socket;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void closeSocket(java.net.Socket)>(r1);

        return;
    }

    static java.util.concurrent.atomic.AtomicInteger access$300(org.apache.zookeeper.server.quorum.QuorumCnxManager)
    {
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.util.concurrent.atomic.AtomicInteger threadCnt>;

        return $r1;
    }

    static boolean access$400(org.apache.zookeeper.server.quorum.QuorumCnxManager, java.util.concurrent.ArrayBlockingQueue)
    {
        java.util.concurrent.ArrayBlockingQueue r1;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        boolean $z0;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r1 := @parameter1: java.util.concurrent.ArrayBlockingQueue;

        $z0 = specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean isSendQueueEmpty(java.util.concurrent.ArrayBlockingQueue)>(r1);

        return $z0;
    }

    static java.nio.ByteBuffer access$500(org.apache.zookeeper.server.quorum.QuorumCnxManager, java.util.concurrent.ArrayBlockingQueue, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.TimeUnit r2;
        java.util.concurrent.ArrayBlockingQueue r1;
        long l0;
        org.apache.zookeeper.server.quorum.QuorumCnxManager r0;
        java.nio.ByteBuffer $r3;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.QuorumCnxManager;

        r1 := @parameter1: java.util.concurrent.ArrayBlockingQueue;

        l0 := @parameter2: long;

        r2 := @parameter3: java.util.concurrent.TimeUnit;

        $r3 = specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumCnxManager: java.nio.ByteBuffer pollSendQueue(java.util.concurrent.ArrayBlockingQueue,long,java.util.concurrent.TimeUnit)>(r1, l0, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <org.apache.zookeeper.server.quorum.QuorumCnxManager: int MAX_CONNECTION_ATTEMPTS> = 2;

        <org.apache.zookeeper.server.quorum.QuorumCnxManager: int PACKETMAXSIZE> = 1048576;

        <org.apache.zookeeper.server.quorum.QuorumCnxManager: int SEND_CAPACITY> = 1;

        <org.apache.zookeeper.server.quorum.QuorumCnxManager: int RECV_CAPACITY> = 100;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;");

        <org.apache.zookeeper.server.quorum.QuorumCnxManager: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
