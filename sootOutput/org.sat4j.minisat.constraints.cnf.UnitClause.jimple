public class org.sat4j.minisat.constraints.cnf.UnitClause extends java.lang.Object implements org.sat4j.minisat.core.Constr
{
    protected final int literal;

    public void <init>(int)
    {
        int i0;
        org.sat4j.minisat.constraints.cnf.UnitClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.sat4j.minisat.constraints.cnf.UnitClause: int literal> = i0;

        return;
    }

    public void assertConstraint(org.sat4j.minisat.core.UnitPropagationListener)
    {
        org.sat4j.minisat.core.UnitPropagationListener r0;
        int $i0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        r0 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        $i0 = r1.<org.sat4j.minisat.constraints.cnf.UnitClause: int literal>;

        interfaceinvoke r0.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i0, r1);

        return;
    }

    public void calcReason(int, org.sat4j.specs.IVecInt)
    {
        int i0, $i1, $i2, $i4;
        org.sat4j.specs.IVecInt r0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        i0 := @parameter0: int;

        r0 := @parameter1: org.sat4j.specs.IVecInt;

        $i4 = (int) -1;

        if i0 != $i4 goto label1;

        $i1 = r1.<org.sat4j.minisat.constraints.cnf.UnitClause: int literal>;

        $i2 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i1);

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i2);

     label1:
        return;
    }

    public double getActivity()
    {
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void incActivity(double)
    {
        org.sat4j.minisat.constraints.cnf.UnitClause r0;
        double d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        d0 := @parameter0: double;

        return;
    }

    public void setActivity(double)
    {
        org.sat4j.minisat.constraints.cnf.UnitClause r0;
        double d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        d0 := @parameter0: double;

        return;
    }

    public boolean locked()
    {
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void register()
    {
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void remove(org.sat4j.minisat.core.UnitPropagationListener)
    {
        org.sat4j.minisat.core.UnitPropagationListener r0;
        int $i0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        r0 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        $i0 = r1.<org.sat4j.minisat.constraints.cnf.UnitClause: int literal>;

        interfaceinvoke r0.<org.sat4j.minisat.core.UnitPropagationListener: void unset(int)>($i0);

        return;
    }

    public void rescaleBy(double)
    {
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;
        double d0;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        d0 := @parameter0: double;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setLearnt()
    {
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean simplify()
    {
        org.sat4j.minisat.constraints.cnf.UnitClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        return 0;
    }

    public boolean propagate(org.sat4j.minisat.core.UnitPropagationListener, int)
    {
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.core.UnitPropagationListener r2;
        int i0;
        org.sat4j.minisat.constraints.cnf.UnitClause r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        r2 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int get(int)
    {
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;
        org.sat4j.minisat.constraints.cnf.UnitClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        $i1 = r0.<org.sat4j.minisat.constraints.cnf.UnitClause: int literal>;

        return $i1;
    }

    public boolean learnt()
    {
        org.sat4j.minisat.constraints.cnf.UnitClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        return 0;
    }

    public int size()
    {
        org.sat4j.minisat.constraints.cnf.UnitClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        return 1;
    }

    public void forwardActivity(double)
    {
        org.sat4j.minisat.constraints.cnf.UnitClause r0;
        double d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        d0 := @parameter0: double;

        return;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.String $r1;
        org.sat4j.minisat.constraints.cnf.UnitClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.UnitClause: int literal>;

        $r1 = staticinvoke <org.sat4j.minisat.constraints.cnf.Lits: java.lang.String toString(int)>($i0);

        return $r1;
    }

    public boolean canBePropagatedMultipleTimes()
    {
        org.sat4j.minisat.constraints.cnf.UnitClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.UnitClause;

        return 0;
    }
}
