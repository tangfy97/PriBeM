public class org.apache.lucene.queryparser.surround.query.SrndTermQuery extends org.apache.lucene.queryparser.surround.query.SimpleTerm
{
    private final java.lang.String termText;

    public void <init>(java.lang.String, boolean)
    {
        org.apache.lucene.queryparser.surround.query.SrndTermQuery r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndTermQuery;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.query.SimpleTerm: void <init>(boolean)>(z0);

        r0.<org.apache.lucene.queryparser.surround.query.SrndTermQuery: java.lang.String termText> = r1;

        return;
    }

    public java.lang.String getTermText()
    {
        org.apache.lucene.queryparser.surround.query.SrndTermQuery r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndTermQuery;

        $r1 = r0.<org.apache.lucene.queryparser.surround.query.SrndTermQuery: java.lang.String termText>;

        return $r1;
    }

    public org.apache.lucene.index.Term getLuceneTerm(java.lang.String)
    {
        org.apache.lucene.index.Term $r0;
        org.apache.lucene.queryparser.surround.query.SrndTermQuery r2;
        java.lang.String r1, $r3;

        r2 := @this: org.apache.lucene.queryparser.surround.query.SrndTermQuery;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.lucene.index.Term;

        $r3 = virtualinvoke r2.<org.apache.lucene.queryparser.surround.query.SrndTermQuery: java.lang.String getTermText()>();

        specialinvoke $r0.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(r1, $r3);

        return $r0;
    }

    public java.lang.String toStringUnquoted()
    {
        org.apache.lucene.queryparser.surround.query.SrndTermQuery r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndTermQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndTermQuery: java.lang.String getTermText()>();

        return $r1;
    }

    public void visitMatchingTerms(org.apache.lucene.index.IndexReader, java.lang.String, org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor) throws java.io.IOException
    {
        org.apache.lucene.index.Terms $r2;
        org.apache.lucene.util.BytesRef $r4;
        org.apache.lucene.index.Term $r10;
        org.apache.lucene.queryparser.surround.query.SrndTermQuery r5;
        org.apache.lucene.index.TermsEnum$SeekStatus $r7, $r8;
        org.apache.lucene.index.TermsEnum $r3;
        java.lang.String r1, $r6;
        org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor r9;
        org.apache.lucene.index.IndexReader r0;

        r5 := @this: org.apache.lucene.queryparser.surround.query.SrndTermQuery;

        r0 := @parameter0: org.apache.lucene.index.IndexReader;

        r1 := @parameter1: java.lang.String;

        r9 := @parameter2: org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor;

        $r2 = staticinvoke <org.apache.lucene.index.MultiFields: org.apache.lucene.index.Terms getTerms(org.apache.lucene.index.IndexReader,java.lang.String)>(r0, r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        $r4 = new org.apache.lucene.util.BytesRef;

        $r6 = virtualinvoke r5.<org.apache.lucene.queryparser.surround.query.SrndTermQuery: java.lang.String getTermText()>();

        specialinvoke $r4.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>($r6);

        $r7 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef)>($r4);

        $r8 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        if $r7 != $r8 goto label1;

        $r10 = virtualinvoke r5.<org.apache.lucene.queryparser.surround.query.SrndTermQuery: org.apache.lucene.index.Term getLuceneTerm(java.lang.String)>(r1);

        interfaceinvoke r9.<org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor: void visitMatchingTerm(org.apache.lucene.index.Term)>($r10);

     label1:
        return;
    }
}
