public class org.codehaus.groovy.tools.xml.DomToGroovy extends java.lang.Object
{
    private groovy.util.IndentPrinter out;
    private boolean inMixed;
    private java.lang.String qt;
    private java.util.List keywords;

    public void <init>(java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        groovy.util.IndentPrinter $r1;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r2 := @parameter0: java.io.PrintWriter;

        $r1 = new groovy.util.IndentPrinter;

        specialinvoke $r1.<groovy.util.IndentPrinter: void <init>(java.io.PrintWriter)>(r2);

        specialinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void <init>(groovy.util.IndentPrinter)>($r1);

        return;
    }

    public void <init>(groovy.util.IndentPrinter)
    {
        java.util.List $r2;
        groovy.util.IndentPrinter r3;
        java.lang.String[] $r1;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r3 := @parameter0: groovy.util.IndentPrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean inMixed> = 0;

        r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt> = "\'";

        $r1 = newarray (java.lang.String)[4];

        $r1[0] = "import";

        $r1[1] = "private";

        $r1[2] = "public";

        $r1[3] = "protected";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.util.List keywords> = $r2;

        r0.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out> = r3;

        return;
    }

    public void print(org.w3c.dom.Document)
    {
        java.util.HashMap $r2;
        org.w3c.dom.Document r1;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r1 := @parameter0: org.w3c.dom.Document;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printChildren(org.w3c.dom.Node,java.util.Map)>(r1, $r2);

        return;
    }

    public static void main(java.lang.String[])
    {
        org.codehaus.groovy.tools.xml.DomToGroovy $r31;
        org.w3c.dom.Document r29;
        java.io.PrintWriter $r2, $r6, r30;
        groovy.util.IndentPrinter $r32;
        java.lang.Exception $r19;
        java.lang.String[] r0;
        java.lang.StringBuffer $r10, $r12, $r14, $r15, $r17, $r20, $r22, $r24, $r25, $r27, $r33, $r34, $r36;
        int $i0, $i1;
        java.lang.String $r1, $r5, $r13, $r16, $r18, $r23, $r26, $r28, $r35, $r37;
        java.io.PrintStream $r7, $r8, $r11, $r21;
        java.io.FileWriter $r3;
        java.io.IOException $r9;
        java.io.File $r4;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Usage: DomToGroovy infilename [outfilename]");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        r29 = null;

     label2:
        $r1 = r0[0];

        r29 = staticinvoke <org.codehaus.groovy.tools.xml.DomToGroovy: org.w3c.dom.Document parse(java.lang.String)>($r1);

     label3:
        goto label5;

     label4:
        $r19 := @caughtexception;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse input file \'");

        $r23 = r0[0];

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r26 = virtualinvoke $r19.<java.lang.Exception: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r28);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label5:
        r30 = null;

        $i1 = lengthof r0;

        if $i1 >= 2 goto label6;

        $r6 = new java.io.PrintWriter;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r7);

        r30 = $r6;

        goto label9;

     label6:
        $r2 = new java.io.PrintWriter;

        $r3 = new java.io.FileWriter;

        $r4 = new java.io.File;

        $r5 = r0[1];

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        specialinvoke $r3.<java.io.FileWriter: void <init>(java.io.File)>($r4);

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.Writer)>($r3);

        r30 = $r2;

     label7:
        goto label9;

     label8:
        $r9 := @caughtexception;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to create output file \'");

        $r13 = r0[1];

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r16 = virtualinvoke $r9.<java.io.IOException: java.lang.String getMessage()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r18);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label9:
        $r31 = new org.codehaus.groovy.tools.xml.DomToGroovy;

        specialinvoke $r31.<org.codehaus.groovy.tools.xml.DomToGroovy: void <init>(java.io.PrintWriter)>(r30);

        $r32 = $r31.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out>;

        virtualinvoke $r32.<groovy.util.IndentPrinter: void incrementIndent()>();

        virtualinvoke r30.<java.io.PrintWriter: void println(java.lang.String)>("#!/bin/groovy");

        virtualinvoke r30.<java.io.PrintWriter: void println()>();

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// generated from ");

        $r35 = r0[0];

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r30.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        virtualinvoke r30.<java.io.PrintWriter: void println(java.lang.String)>("System.out << new groovy.xml.StreamingMarkupBuilder().bind {");

        virtualinvoke $r31.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(org.w3c.dom.Document)>(r29);

        virtualinvoke r30.<java.io.PrintWriter: void println(java.lang.String)>("}");

        virtualinvoke r30.<java.io.PrintWriter: void close()>();

        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private static org.w3c.dom.Document parse(java.lang.String) throws java.lang.Exception
    {
        org.w3c.dom.Document $r4;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String r3;
        java.io.File $r2;

        r3 := @parameter0: java.lang.String;

        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r3);

        $r4 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>($r2);

        return $r4;
    }

    protected void print(org.w3c.dom.Node, java.util.Map, boolean)
    {
        org.w3c.dom.Text $r4;
        org.w3c.dom.ProcessingInstruction $r3;
        org.w3c.dom.Comment $r2;
        org.codehaus.groovy.tools.xml.DomToGroovy r1;
        short $s0;
        org.w3c.dom.Element $r6;
        org.w3c.dom.Node r0;
        java.util.Map r5;
        int $i1;
        boolean z0;

        r1 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Node;

        r5 := @parameter1: java.util.Map;

        z0 := @parameter2: boolean;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label5;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label2;
            case 8: goto label4;
            default: goto label5;
        };

     label1:
        $r6 = (org.w3c.dom.Element) r0;

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void printElement(org.w3c.dom.Element,java.util.Map,boolean)>($r6, r5, z0);

        goto label5;

     label2:
        $r3 = (org.w3c.dom.ProcessingInstruction) r0;

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void printPI(org.w3c.dom.ProcessingInstruction,boolean)>($r3, z0);

        goto label5;

     label3:
        $r4 = (org.w3c.dom.Text) r0;

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void printText(org.w3c.dom.Text,boolean)>($r4, z0);

        goto label5;

     label4:
        $r2 = (org.w3c.dom.Comment) r0;

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void printComment(org.w3c.dom.Comment,boolean)>($r2, z0);

     label5:
        return;
    }

    protected void printElement(org.w3c.dom.Element, java.util.Map, boolean)
    {
        org.w3c.dom.Text r15;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;
        java.util.Map $r2, r12;
        org.w3c.dom.Node $r6, r16;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r11, $r13;
        boolean z0, $z1, z2, $z3, $z5, $z6, z7, $z8, $z9;
        org.w3c.dom.NodeList $r14;
        groovy.util.IndentPrinter $r7, $r8, $r9, $r10;
        org.w3c.dom.Element r1;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r1 := @parameter0: org.w3c.dom.Element;

        r12 := @parameter1: java.util.Map;

        z2 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.util.Map defineNamespaces(org.w3c.dom.Element,java.util.Map)>(r1, r12);

        interfaceinvoke r1.<org.w3c.dom.Element: void normalize()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printIndent()>();

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getPrefix()>();

        if $r3 == null goto label01;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label01;

        $z9 = 1;

        $z8 = 1;

        goto label02;

     label01:
        $z9 = 0;

        $z8 = 0;

     label02:
        z0 = $z8;

        $r13 = virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String getLocalName(org.w3c.dom.Node)>(r1);

        $z5 = specialinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean checkEscaping(java.lang.String)>($r13);

        if $z5 != 0 goto label03;

        if $z9 == 0 goto label04;

     label03:
        $r4 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r4);

     label04:
        if z0 == 0 goto label05;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r3);

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(".");

     label05:
        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r13);

        if $z5 != 0 goto label06;

        if z0 == 0 goto label07;

     label06:
        $r5 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r5);

     label07:
        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>("(");

        $z6 = virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean printAttributes(org.w3c.dom.Element)>(r1);

        $r14 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $i1 = interfaceinvoke $r14.<org.w3c.dom.NodeList: int getLength()>();

        if $i1 != 0 goto label08;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printEnd(java.lang.String,boolean)>(")", z2);

        goto label14;

     label08:
        $r6 = interfaceinvoke $r14.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        if $i1 != 1 goto label10;

        $z3 = $r6 instanceof org.w3c.dom.Text;

        if $z3 == 0 goto label10;

        r15 = (org.w3c.dom.Text) $r6;

        $r11 = virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String getTextNodeData(org.w3c.dom.Text)>(r15);

        if $z6 == 0 goto label09;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(", ");

     label09:
        specialinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printQuoted(java.lang.String)>($r11);

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printEnd(java.lang.String,boolean)>(")", z2);

        goto label14;

     label10:
        $z1 = virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean mixedContent(org.w3c.dom.NodeList)>($r14);

        if $z1 == 0 goto label13;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void println(java.lang.String)>(") {");

        $r9 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out>;

        virtualinvoke $r9.<groovy.util.IndentPrinter: void incrementIndent()>();

        z7 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean inMixed>;

        r0.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean inMixed> = 1;

        r16 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label11:
        if r16 == null goto label12;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(org.w3c.dom.Node,java.util.Map,boolean)>(r16, $r2, 0);

        r16 = interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label11;

     label12:
        r0.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean inMixed> = z7;

        $r10 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out>;

        virtualinvoke $r10.<groovy.util.IndentPrinter: void decrementIndent()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printIndent()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printEnd(java.lang.String,boolean)>("}", z2);

        goto label14;

     label13:
        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void println(java.lang.String)>(") {");

        $r7 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out>;

        virtualinvoke $r7.<groovy.util.IndentPrinter: void incrementIndent()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printChildren(org.w3c.dom.Node,java.util.Map)>(r1, $r2);

        $r8 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out>;

        virtualinvoke $r8.<groovy.util.IndentPrinter: void decrementIndent()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printIndent()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printEnd(java.lang.String,boolean)>("}", z2);

     label14:
        return;
    }

    private void printQuoted(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, $r2, $r3, $r4;
        org.codehaus.groovy.tools.xml.DomToGroovy r1;

        r1 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("\n");

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>("\'\'\'");

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(r0);

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>("\'\'\'");

        goto label2;

     label1:
        $r2 = r1.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r2);

        $r3 = specialinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String escapeQuote(java.lang.String)>(r0);

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r3);

        $r4 = r1.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r4);

     label2:
        return;
    }

    protected void printPI(org.w3c.dom.ProcessingInstruction, boolean)
    {
        org.w3c.dom.ProcessingInstruction r6;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r8, $r10, $r11, $r13, $r16, $r18, $r19;
        java.lang.String $r3, $r5, $r7, $r9, $r12, $r14, $r15, $r17, $r20;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r6 := @parameter0: org.w3c.dom.ProcessingInstruction;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printIndent()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("mkp.pi(");

        $r3 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r5);

        $r7 = interfaceinvoke r6.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r12 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r14);

        $r15 = interfaceinvoke r6.<org.w3c.dom.ProcessingInstruction: java.lang.String getData()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printEnd(java.lang.String,boolean)>($r20, z0);

        return;
    }

    protected void printComment(org.w3c.dom.Comment, boolean)
    {
        int $i0;
        java.lang.String $r1, $r2;
        org.w3c.dom.Comment r0;
        org.codehaus.groovy.tools.xml.DomToGroovy r3;
        boolean z0;

        r3 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Comment;

        z0 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Comment: java.lang.String getData()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void printIndent()>();

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>("/* ");

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r2);

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void printEnd(java.lang.String,boolean)>(" */", z0);

     label1:
        return;
    }

    protected void printText(org.w3c.dom.Text, boolean)
    {
        org.w3c.dom.Text r1;
        int $i0;
        java.lang.String $r2;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;
        boolean $z0, z1;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r1 := @parameter0: org.w3c.dom.Text;

        z1 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String getTextNodeData(org.w3c.dom.Text)>(r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printIndent()>();

        $z0 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean inMixed>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>("mkp.yield ");

     label1:
        specialinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printQuoted(java.lang.String)>($r2);

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void printEnd(java.lang.String,boolean)>("", z1);

     label2:
        return;
    }

    private java.lang.String escapeQuote(java.lang.String)
    {
        org.codehaus.groovy.tools.xml.DomToGroovy r2;
        java.lang.StringBuffer $r3, $r5, $r7;
        java.lang.String r0, $r1, $r4, $r6, $r8, $r9;

        r2 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\", "\\\\\\\\");

        $r4 = r2.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        $r6 = r2.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r4, $r8);

        return $r9;
    }

    protected java.util.Map defineNamespaces(org.w3c.dom.Element, java.util.Map)
    {
        java.util.HashMap $r8, $r9, r11;
        org.w3c.dom.Attr r4;
        org.codehaus.groovy.tools.xml.DomToGroovy r6;
        java.util.Map r2, $r13;
        org.w3c.dom.Node $r3;
        int $i0, $i1, $i2, i3;
        org.w3c.dom.NamedNodeMap $r12;
        java.lang.String $r1, $r5, $r7, $r10;
        boolean $z0, $z1;
        org.w3c.dom.Element r0;

        r6 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.util.Map;

        r11 = null;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getPrefix()>();

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z1 != 0 goto label1;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>(java.util.Map)>(r2);

        r11 = $r9;

        $r10 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        virtualinvoke r6.<org.codehaus.groovy.tools.xml.DomToGroovy: void defineNamespace(java.util.Map,java.lang.String,java.lang.String)>($r9, $r1, $r10);

     label1:
        $r12 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i2 = interfaceinvoke $r12.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i3 = 0;

     label2:
        if i3 >= $i2 goto label5;

        $r3 = interfaceinvoke $r12.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i3);

        r4 = (org.w3c.dom.Attr) $r3;

        $r5 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        if $r5 == null goto label4;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        if r11 != null goto label3;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>(java.util.Map)>(r2);

        r11 = $r8;

     label3:
        $r7 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        virtualinvoke r6.<org.codehaus.groovy.tools.xml.DomToGroovy: void defineNamespace(java.util.Map,java.lang.String,java.lang.String)>(r11, $r5, $r7);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        if r11 == null goto label6;

        $r13 = r11;

        goto label7;

     label6:
        $r13 = r2;

     label7:
        return $r13;
    }

    protected void defineNamespace(java.util.Map, java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.tools.xml.DomToGroovy r3;
        java.lang.StringBuffer $r4, $r5, $r7, $r9, $r11, $r12;
        java.util.Map r0;
        java.lang.String r1, r2, $r6, $r8, $r10, $r13;
        boolean $z0, $z1;

        r3 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z1 != 0 goto label1;

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void printIndent()>();

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>("mkp.declareNamespace(");

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(r1);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r6 = r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r8);

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(r2);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void println(java.lang.String)>($r13);

     label1:
        return;
    }

    protected boolean printAttributes(org.w3c.dom.Element)
    {
        org.w3c.dom.Attr $r6, $r8;
        org.codehaus.groovy.tools.xml.DomToGroovy r3;
        org.w3c.dom.Element r0;
        java.lang.StringBuffer $r2;
        org.w3c.dom.Node $r5, $r7;
        int $i0, $i1, i2, i3;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String $r4;
        boolean z0;

        r3 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Element;

        z0 = 0;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if $i0 <= 0 goto label6;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $r7 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i2);

        $r8 = (org.w3c.dom.Attr) $r7;

        specialinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void printAttributeWithPrefix(org.w3c.dom.Attr,java.lang.StringBuffer)>($r8, $r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        if i3 >= $i0 goto label4;

        $r5 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i3);

        $r6 = (org.w3c.dom.Attr) $r5;

        z0 = specialinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean printAttributeWithoutPrefix(org.w3c.dom.Attr,boolean)>($r6, z0);

        i3 = i3 + 1;

        goto label3;

     label4:
        $i1 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label6;

        if z0 == 0 goto label5;

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(", ");

     label5:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r4);

        z0 = 1;

     label6:
        return z0;
    }

    private void printAttributeWithPrefix(org.w3c.dom.Attr, java.lang.StringBuffer)
    {
        org.w3c.dom.Attr r0;
        org.codehaus.groovy.tools.xml.DomToGroovy r3;
        java.lang.StringBuffer r2, $r6, $r8, $r9, $r11;
        int $i0, $i1;
        java.lang.String $r1, $r4, $r5, $r7, $r10, $r12, $r13, $r14, $r15;
        boolean $z0;

        r3 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.StringBuffer;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label1:
        $r4 = r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r5 = virtualinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String getLocalName(org.w3c.dom.Node)>(r0);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r10 = r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r13 = specialinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String getAttributeValue(org.w3c.dom.Attr)>(r0);

        $r14 = specialinvoke r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String escapeQuote(java.lang.String)>($r13);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r15 = r3.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

     label2:
        return;
    }

    private java.lang.String getAttributeValue(org.w3c.dom.Attr)
    {
        java.lang.String $r1;
        org.w3c.dom.Attr r0;
        org.codehaus.groovy.tools.xml.DomToGroovy r2;

        r2 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Attr;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Attr: java.lang.String getValue()>();

        return $r1;
    }

    private boolean printAttributeWithoutPrefix(org.w3c.dom.Attr, boolean)
    {
        org.w3c.dom.Attr r0;
        org.codehaus.groovy.tools.xml.DomToGroovy r2;
        int $i0;
        java.lang.String $r1, $r3, $r4, $r5, $r6;
        boolean $z0, z1;

        r2 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Attr;

        z1 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label6;

     label1:
        if z1 != 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        virtualinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(", ");

     label3:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String getLocalName(org.w3c.dom.Node)>(r0);

        $z0 = specialinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: boolean checkEscaping(java.lang.String)>($r3);

        if $z0 == 0 goto label4;

        $r6 = r2.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        virtualinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r6);

     label4:
        virtualinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r3);

        if $z0 == 0 goto label5;

        $r5 = r2.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String qt>;

        virtualinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>($r5);

     label5:
        virtualinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(":");

        $r4 = specialinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String getAttributeValue(org.w3c.dom.Attr)>(r0);

        specialinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: void printQuoted(java.lang.String)>($r4);

     label6:
        return z1;
    }

    private boolean checkEscaping(java.lang.String)
    {
        java.util.List $r2;
        int $i0, $i2;
        java.lang.String r1;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: java.util.List keywords>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("-");

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected java.lang.String getTextNodeData(org.w3c.dom.Text)
    {
        org.w3c.dom.Text r0;
        java.lang.String $r1, $r2;
        org.codehaus.groovy.tools.xml.DomToGroovy r3;

        r3 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Text;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Text: java.lang.String getData()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        return $r2;
    }

    protected boolean mixedContent(org.w3c.dom.NodeList)
    {
        org.w3c.dom.Text $r3;
        org.w3c.dom.NodeList r0;
        org.codehaus.groovy.tools.xml.DomToGroovy r2;
        org.w3c.dom.Node $r1;
        int $i0, $i1, i2;
        java.lang.String $r4;
        boolean $z0, $z1, z2, z3, $z4;

        r2 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.NodeList;

        z2 = 0;

        z3 = 0;

        i2 = 0;

        $i0 = interfaceinvoke r0.<org.w3c.dom.NodeList: int getLength()>();

     label1:
        if i2 >= $i0 goto label4;

        $r1 = interfaceinvoke r0.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $z0 = $r1 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        $z1 = $r1 instanceof org.w3c.dom.Text;

        if $z1 == 0 goto label3;

        $r3 = (org.w3c.dom.Text) $r1;

        $r4 = virtualinvoke r2.<org.codehaus.groovy.tools.xml.DomToGroovy: java.lang.String getTextNodeData(org.w3c.dom.Text)>($r3);

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        z2 = 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        if z2 == 0 goto label5;

        if z3 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    protected void printChildren(org.w3c.dom.Node, java.util.Map)
    {
        org.w3c.dom.Node r0, r3;
        java.util.Map r2;
        org.codehaus.groovy.tools.xml.DomToGroovy r1;

        r1 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.util.Map;

        r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r3 == null goto label2;

        virtualinvoke r1.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(org.w3c.dom.Node,java.util.Map,boolean)>(r3, r2, 0);

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label2:
        return;
    }

    protected java.lang.String getLocalName(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0;
        java.lang.String $r1, $r2, r4;
        org.codehaus.groovy.tools.xml.DomToGroovy r3;

        r3 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        r4 = $r1;

        if $r1 != null goto label1;

        r4 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

     label1:
        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        return $r2;
    }

    protected void printEnd(java.lang.String, boolean)
    {
        java.lang.String r1;
        boolean z0;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void print(java.lang.String)>(r1);

        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void println(java.lang.String)>(",");

        goto label2;

     label1:
        virtualinvoke r0.<org.codehaus.groovy.tools.xml.DomToGroovy: void println(java.lang.String)>(r1);

     label2:
        return;
    }

    protected void println(java.lang.String)
    {
        java.lang.String r1;
        groovy.util.IndentPrinter $r2;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out>;

        virtualinvoke $r2.<groovy.util.IndentPrinter: void println(java.lang.String)>(r1);

        return;
    }

    protected void print(java.lang.String)
    {
        java.lang.String r1;
        groovy.util.IndentPrinter $r2;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out>;

        virtualinvoke $r2.<groovy.util.IndentPrinter: void print(java.lang.String)>(r1);

        return;
    }

    protected void printIndent()
    {
        groovy.util.IndentPrinter $r1;
        org.codehaus.groovy.tools.xml.DomToGroovy r0;

        r0 := @this: org.codehaus.groovy.tools.xml.DomToGroovy;

        $r1 = r0.<org.codehaus.groovy.tools.xml.DomToGroovy: groovy.util.IndentPrinter out>;

        virtualinvoke $r1.<groovy.util.IndentPrinter: void printIndent()>();

        return;
    }
}
