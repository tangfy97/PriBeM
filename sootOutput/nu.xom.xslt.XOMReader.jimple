class nu.xom.xslt.XOMReader extends java.lang.Object implements org.xml.sax.XMLReader
{
    private nu.xom.converters.SAXConverter converter;

    void <init>()
    {
        nu.xom.xslt.XOMReader r0;

        r0 := @this: nu.xom.xslt.XOMReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotRecognizedException $r3;
        nu.xom.xslt.XOMReader r4;
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;

        r4 := @this: nu.xom.xslt.XOMReader;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://xml.org/sax/features/namespace-prefixes";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = "http://xml.org/sax/features/namespaces";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r3 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r3.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>("XOMReader doesn\'t support features");

        throw $r3;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        nu.xom.xslt.XOMReader r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: nu.xom.xslt.XOMReader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotRecognizedException $r2;
        org.xml.sax.ext.LexicalHandler $r5;
        nu.xom.xslt.XOMReader r3;
        java.lang.String r0, $r1;
        boolean $z0;
        nu.xom.converters.SAXConverter $r4;

        r3 := @this: nu.xom.xslt.XOMReader;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://xml.org/sax/properties/lexical-handler";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = r3.<nu.xom.xslt.XOMReader: nu.xom.converters.SAXConverter converter>;

        $r5 = virtualinvoke $r4.<nu.xom.converters.SAXConverter: org.xml.sax.ext.LexicalHandler getLexicalHandler()>();

        return $r5;

     label1:
        $r2 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r2.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>("XOMReader doesn\'t support features");

        throw $r2;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        nu.xom.xslt.XOMReader r9;
        org.xml.sax.SAXNotRecognizedException $r2;
        org.xml.sax.ext.LexicalHandler r8;
        java.lang.StringBuffer $r3, $r4, $r5;
        java.lang.Object r7;
        java.lang.String r0, $r1, $r6;
        boolean $z0;
        nu.xom.converters.SAXConverter $r10;

        r9 := @this: nu.xom.xslt.XOMReader;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object;

        $r1 = "http://xml.org/sax/properties/lexical-handler";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        r8 = (org.xml.sax.ext.LexicalHandler) r7;

        $r10 = r9.<nu.xom.xslt.XOMReader: nu.xom.converters.SAXConverter converter>;

        virtualinvoke $r10.<nu.xom.converters.SAXConverter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>(r8);

        goto label2;

     label1:
        $r2 = new org.xml.sax.SAXNotRecognizedException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XOMReader doesn\'t support ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        java.lang.UnsupportedOperationException $r0;
        nu.xom.xslt.XOMReader r1;
        org.xml.sax.EntityResolver r2;

        r1 := @this: nu.xom.xslt.XOMReader;

        r2 := @parameter0: org.xml.sax.EntityResolver;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        nu.xom.xslt.XOMReader r0;

        r0 := @this: nu.xom.xslt.XOMReader;

        return null;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        nu.xom.xslt.XOMReader r0;
        org.xml.sax.DTDHandler r1;

        r0 := @this: nu.xom.xslt.XOMReader;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        return;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        nu.xom.xslt.XOMReader r0;

        r0 := @this: nu.xom.xslt.XOMReader;

        return null;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        nu.xom.xslt.XSLTHandler $r3;
        nu.xom.xslt.XOMReader r0;
        org.xml.sax.ContentHandler r2;
        nu.xom.converters.SAXConverter $r1, $r4;

        r0 := @this: nu.xom.xslt.XOMReader;

        r2 := @parameter0: org.xml.sax.ContentHandler;

        $r1 = new nu.xom.converters.SAXConverter;

        specialinvoke $r1.<nu.xom.converters.SAXConverter: void <init>(org.xml.sax.ContentHandler)>(r2);

        r0.<nu.xom.xslt.XOMReader: nu.xom.converters.SAXConverter converter> = $r1;

        $r4 = r0.<nu.xom.xslt.XOMReader: nu.xom.converters.SAXConverter converter>;

        $r3 = new nu.xom.xslt.XSLTHandler;

        specialinvoke $r3.<nu.xom.xslt.XSLTHandler: void <init>(nu.xom.NodeFactory)>(null);

        virtualinvoke $r4.<nu.xom.converters.SAXConverter: void setContentHandler(org.xml.sax.ContentHandler)>($r3);

        return;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        nu.xom.xslt.XOMReader r0;

        r0 := @this: nu.xom.xslt.XOMReader;

        return null;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        nu.xom.xslt.XOMReader r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: nu.xom.xslt.XOMReader;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        return;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        nu.xom.xslt.XOMReader r0;

        r0 := @this: nu.xom.xslt.XOMReader;

        return null;
    }

    public void parse(org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource r0;
        nu.xom.xslt.XOMReader r2;
        nu.xom.Nodes $r4;
        nu.xom.xslt.XOMInputSource r1;
        nu.xom.converters.SAXConverter $r3;

        r2 := @this: nu.xom.xslt.XOMReader;

        r0 := @parameter0: org.xml.sax.InputSource;

        r1 = (nu.xom.xslt.XOMInputSource) r0;

        $r3 = r2.<nu.xom.xslt.XOMReader: nu.xom.converters.SAXConverter converter>;

        $r4 = virtualinvoke r1.<nu.xom.xslt.XOMInputSource: nu.xom.Nodes getNodes()>();

        virtualinvoke $r3.<nu.xom.converters.SAXConverter: void convert(nu.xom.Nodes)>($r4);

        return;
    }

    public void parse(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.lang.UnsupportedOperationException $r0;
        nu.xom.xslt.XOMReader r1;
        java.lang.String r2;

        r1 := @this: nu.xom.xslt.XOMReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
