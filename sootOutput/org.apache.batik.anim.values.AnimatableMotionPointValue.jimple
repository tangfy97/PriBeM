public class org.apache.batik.anim.values.AnimatableMotionPointValue extends org.apache.batik.anim.values.AnimatableValue
{
    protected float x;
    protected float y;
    protected float angle;

    protected void <init>(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatableMotionPointValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        return;
    }

    public void <init>(org.apache.batik.dom.anim.AnimationTarget, float, float, float)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatableMotionPointValue r0;
        float f0, f1, f2;

        r0 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        r0.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x> = f0;

        r0.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y> = f1;

        r0.<org.apache.batik.anim.values.AnimatableMotionPointValue: float angle> = f2;

        return;
    }

    public org.apache.batik.anim.values.AnimatableValue interpolate(org.apache.batik.anim.values.AnimatableValue, org.apache.batik.anim.values.AnimatableValue, float, org.apache.batik.anim.values.AnimatableValue, int)
    {
        org.apache.batik.anim.values.AnimatableMotionPointValue r1, $r4, r6, r7, r8;
        byte $b0, $b1, $b4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22, f23, f24, $f25, $f26, $f27;
        org.apache.batik.anim.values.AnimatableValue r0, r2, r3;
        org.apache.batik.dom.anim.AnimationTarget $r5;
        int i2, i3;

        r1 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        r2 := @parameter1: org.apache.batik.anim.values.AnimatableValue;

        f9 := @parameter2: float;

        r3 := @parameter3: org.apache.batik.anim.values.AnimatableValue;

        i2 := @parameter4: int;

        if r0 != null goto label1;

        $r4 = new org.apache.batik.anim.values.AnimatableMotionPointValue;

        $r5 = r1.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r4.<org.apache.batik.anim.values.AnimatableMotionPointValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>($r5);

        r6 = $r4;

        goto label2;

     label1:
        r6 = (org.apache.batik.anim.values.AnimatableMotionPointValue) r0;

     label2:
        $f19 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        f22 = $f19;

        $f20 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        f23 = $f20;

        $f21 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float angle>;

        f24 = $f21;

        i3 = 1;

        if r2 == null goto label3;

        r7 = (org.apache.batik.anim.values.AnimatableMotionPointValue) r2;

        $f11 = r7.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        $f10 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        $f12 = $f11 - $f10;

        $f13 = f9 * $f12;

        f22 = $f19 + $f13;

        $f15 = r7.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        $f14 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        $f16 = $f15 - $f14;

        $f17 = f9 * $f16;

        f23 = $f20 + $f17;

        $f18 = r7.<org.apache.batik.anim.values.AnimatableMotionPointValue: float angle>;

        f24 = $f21 + $f18;

        i3 = 2;

     label3:
        if r3 == null goto label4;

        if i2 == 0 goto label4;

        r8 = (org.apache.batik.anim.values.AnimatableMotionPointValue) r3;

        $f3 = (float) i2;

        $f2 = r8.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        $f4 = $f3 * $f2;

        f22 = f22 + $f4;

        $f6 = (float) i2;

        $f5 = r8.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        $f7 = $f6 * $f5;

        f23 = f23 + $f7;

        $f8 = r8.<org.apache.batik.anim.values.AnimatableMotionPointValue: float angle>;

        f24 = f24 + $f8;

        i3 = i3 + 1;

     label4:
        $f25 = (float) i3;

        $f26 = f24 / $f25;

        $f27 = r6.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        $b4 = $f27 cmpl f22;

        if $b4 != 0 goto label5;

        $f0 = r6.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        $b0 = $f0 cmpl f23;

        if $b0 != 0 goto label5;

        $f1 = r6.<org.apache.batik.anim.values.AnimatableMotionPointValue: float angle>;

        $b1 = $f1 cmpl $f26;

        if $b1 == 0 goto label6;

     label5:
        r6.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x> = f22;

        r6.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y> = f23;

        r6.<org.apache.batik.anim.values.AnimatableMotionPointValue: float angle> = $f26;

        r6.<org.apache.batik.anim.values.AnimatableValue: boolean hasChanged> = 1;

     label6:
        return r6;
    }

    public float getX()
    {
        org.apache.batik.anim.values.AnimatableMotionPointValue r0;
        float $f0;

        r0 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        $f0 = r0.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        return $f0;
    }

    public float getY()
    {
        org.apache.batik.anim.values.AnimatableMotionPointValue r0;
        float $f0;

        r0 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        $f0 = r0.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        return $f0;
    }

    public float getAngle()
    {
        org.apache.batik.anim.values.AnimatableMotionPointValue r0;
        float $f0;

        r0 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        $f0 = r0.<org.apache.batik.anim.values.AnimatableMotionPointValue: float angle>;

        return $f0;
    }

    public boolean canPace()
    {
        org.apache.batik.anim.values.AnimatableMotionPointValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        return 1;
    }

    public float distanceTo(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.anim.values.AnimatableMotionPointValue r1, r2;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8, $f9;
        org.apache.batik.anim.values.AnimatableValue r0;
        double $d0, $d1;

        r2 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        r1 = (org.apache.batik.anim.values.AnimatableMotionPointValue) r0;

        $f1 = r2.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        $f0 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        f2 = $f1 - $f0;

        $f4 = r2.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        $f3 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        f5 = $f4 - $f3;

        $f7 = f2 * f2;

        $f6 = f5 * f5;

        $f8 = $f7 + $f6;

        $d0 = (double) $f8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f9 = (float) $d1;

        return $f9;
    }

    public org.apache.batik.anim.values.AnimatableValue getZeroValue()
    {
        org.apache.batik.dom.anim.AnimationTarget $r2;
        org.apache.batik.anim.values.AnimatableMotionPointValue $r0, r1;

        r1 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        $r0 = new org.apache.batik.anim.values.AnimatableMotionPointValue;

        $r2 = r1.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r0.<org.apache.batik.anim.values.AnimatableMotionPointValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,float,float,float)>($r2, 0.0F, 0.0F, 0.0F);

        return $r0;
    }

    public java.lang.String toStringRep()
    {
        org.apache.batik.anim.values.AnimatableMotionPointValue r1;
        java.lang.StringBuffer $r0;
        float $f0, $f1, $f2;
        java.lang.String $r2, $r3, $r4, $r5;

        r1 := @this: org.apache.batik.anim.values.AnimatableMotionPointValue;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $f0 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float x>;

        $r2 = staticinvoke <org.apache.batik.anim.values.AnimatableValue: java.lang.String formatNumber(float)>($f0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f1 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float y>;

        $r3 = staticinvoke <org.apache.batik.anim.values.AnimatableValue: java.lang.String formatNumber(float)>($f1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f2 = r1.<org.apache.batik.anim.values.AnimatableMotionPointValue: float angle>;

        $r4 = staticinvoke <org.apache.batik.anim.values.AnimatableValue: java.lang.String formatNumber(float)>($f2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rad");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
