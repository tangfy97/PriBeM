public class com.hp.hpl.jena.tdb.lib.TupleLib extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.tdb.lib.TupleLib r0;

        r0 := @this: com.hp.hpl.jena.tdb.lib.TupleLib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Iterator convertToNodes(com.hp.hpl.jena.tdb.nodetable.NodeTable, java.util.Iterator)
    {
        java.util.Iterator r2, $r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        com.hp.hpl.jena.tdb.lib.TupleLib$1 $r0;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r2 := @parameter1: java.util.Iterator;

        $r0 = new com.hp.hpl.jena.tdb.lib.TupleLib$1;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.lib.TupleLib$1: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable)>(r1);

        $r3 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>(r2, $r0);

        return $r3;
    }

    public static java.util.Iterator convertToNodeId(com.hp.hpl.jena.tdb.nodetable.NodeTable, java.util.Iterator)
    {
        java.util.Iterator r2, $r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        com.hp.hpl.jena.tdb.lib.TupleLib$2 $r0;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r2 := @parameter1: java.util.Iterator;

        $r0 = new com.hp.hpl.jena.tdb.lib.TupleLib$2;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.lib.TupleLib$2: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable)>(r1);

        $r3 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>(r2, $r0);

        return $r3;
    }

    public static java.util.Iterator convertToTriples(com.hp.hpl.jena.tdb.nodetable.NodeTable, java.util.Iterator)
    {
        java.util.Iterator r2, $r3;
        com.hp.hpl.jena.tdb.lib.TupleLib$3 $r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r2 := @parameter1: java.util.Iterator;

        $r0 = new com.hp.hpl.jena.tdb.lib.TupleLib$3;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.lib.TupleLib$3: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable)>(r1);

        $r3 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>(r2, $r0);

        return $r3;
    }

    public static java.util.Iterator convertToQuads(com.hp.hpl.jena.tdb.nodetable.NodeTable, java.util.Iterator)
    {
        com.hp.hpl.jena.tdb.lib.TupleLib$4 $r0;
        java.util.Iterator r2, $r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r2 := @parameter1: java.util.Iterator;

        $r0 = new com.hp.hpl.jena.tdb.lib.TupleLib$4;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.lib.TupleLib$4: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable)>(r1);

        $r3 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>(r2, $r0);

        return $r3;
    }

    public static org.apache.jena.atlas.lib.Tuple tupleNodes(com.hp.hpl.jena.tdb.nodetable.NodeTable, org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.graph.Node[] r1;
        org.apache.jena.atlas.lib.Tuple r0, $r2;
        com.hp.hpl.jena.graph.Node $r6;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r3;
        com.hp.hpl.jena.tdb.store.NodeId $r5;
        int $i0, i1;
        java.lang.Object $r4;

        r3 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r0 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $i0 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: int size()>();

        r1 = newarray (com.hp.hpl.jena.graph.Node)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r4 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(i1);

        $r5 = (com.hp.hpl.jena.tdb.store.NodeId) $r4;

        $r6 = interfaceinvoke r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>($r5);

        r1[i1] = $r6;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <org.apache.jena.atlas.lib.Tuple: org.apache.jena.atlas.lib.Tuple create(java.lang.Object[])>(r1);

        return $r2;
    }

    public static org.apache.jena.atlas.lib.Tuple tupleNodeIds(com.hp.hpl.jena.tdb.nodetable.NodeTable, org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.atlas.lib.Tuple r0, $r2;
        com.hp.hpl.jena.tdb.store.NodeId[] r1;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r3;
        com.hp.hpl.jena.tdb.store.NodeId $r6;
        int $i0, i1;
        java.lang.Object $r4;

        r3 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r0 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $i0 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: int size()>();

        r1 = newarray (com.hp.hpl.jena.tdb.store.NodeId)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r4 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(i1);

        $r5 = (com.hp.hpl.jena.graph.Node) $r4;

        $r6 = interfaceinvoke r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)>($r5);

        r1[i1] = $r6;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <org.apache.jena.atlas.lib.Tuple: org.apache.jena.atlas.lib.Tuple create(java.lang.Object[])>(r1);

        return $r2;
    }

    private static com.hp.hpl.jena.graph.Triple triple(com.hp.hpl.jena.tdb.nodetable.NodeTable, org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.TDBException $r9;
        org.apache.jena.atlas.lib.Tuple r0;
        com.hp.hpl.jena.graph.Triple $r8;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        com.hp.hpl.jena.tdb.store.NodeId $r3, $r5, $r7;
        int $i0;
        java.lang.Object $r2, $r4, $r6;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r0 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $i0 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: int size()>();

        if $i0 == 3 goto label1;

        $r9 = new com.hp.hpl.jena.tdb.TDBException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tuple is not of length 3: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        $r2 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(0);

        $r3 = (com.hp.hpl.jena.tdb.store.NodeId) $r2;

        $r4 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(1);

        $r5 = (com.hp.hpl.jena.tdb.store.NodeId) $r4;

        $r6 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(2);

        $r7 = (com.hp.hpl.jena.tdb.store.NodeId) $r6;

        $r8 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: com.hp.hpl.jena.graph.Triple triple(com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId)>(r1, $r3, $r5, $r7);

        return $r8;
    }

    private static com.hp.hpl.jena.graph.Triple triple(com.hp.hpl.jena.tdb.nodetable.NodeTable, com.hp.hpl.jena.tdb.store.NodeId, com.hp.hpl.jena.tdb.store.NodeId, com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.graph.Node $r4, $r5, $r6;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r3;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.graph.Triple $r7;
        java.lang.StringBuilder $r9, $r10, $r12, $r15, $r16, $r18, $r21, $r22, $r24, $r27, $r28, $r30, $r33, $r34, $r36, $r39, $r40, $r42;
        com.hp.hpl.jena.tdb.store.NodeId r0, r1, r2;
        java.lang.String $r11, $r13, $r17, $r19, $r23, $r25, $r29, $r31, $r35, $r37, $r41, $r43;
        org.apache.jena.atlas.lib.InternalErrorException $r8, $r14, $r20, $r26, $r32, $r38;

        r3 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r0 := @parameter1: com.hp.hpl.jena.tdb.store.NodeId;

        r1 := @parameter2: com.hp.hpl.jena.tdb.store.NodeId;

        r2 := @parameter3: com.hp.hpl.jena.tdb.store.NodeId;

        $z0 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isConcrete(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $z0 != 0 goto label1;

        $r38 = new org.apache.jena.atlas.lib.InternalErrorException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid id for subject: ");

        $r41 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: java.lang.String fmt(com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId)>(r0, r1, r2);

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>($r43);

        throw $r38;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isConcrete(com.hp.hpl.jena.tdb.store.NodeId)>(r1);

        if $z1 != 0 goto label2;

        $r32 = new org.apache.jena.atlas.lib.InternalErrorException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid id for predicate: ");

        $r35 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: java.lang.String fmt(com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId)>(r0, r1, r2);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>($r37);

        throw $r32;

     label2:
        $z2 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isConcrete(com.hp.hpl.jena.tdb.store.NodeId)>(r2);

        if $z2 != 0 goto label3;

        $r26 = new org.apache.jena.atlas.lib.InternalErrorException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid id for object: ");

        $r29 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: java.lang.String fmt(com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId)>(r0, r1, r2);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>($r31);

        throw $r26;

     label3:
        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $r4 != null goto label4;

        $r20 = new org.apache.jena.atlas.lib.InternalErrorException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid id node for subject (null node): ");

        $r23 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: java.lang.String fmt(com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId)>(r0, r1, r2);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label4:
        $r5 = interfaceinvoke r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r1);

        if $r5 != null goto label5;

        interfaceinvoke r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r1);

        $r14 = new org.apache.jena.atlas.lib.InternalErrorException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid id node for predicate (null node): ");

        $r17 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: java.lang.String fmt(com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId)>(r0, r1, r2);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label5:
        $r6 = interfaceinvoke r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r2);

        if $r6 != null goto label6;

        $r8 = new org.apache.jena.atlas.lib.InternalErrorException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid id node for object (null node): ");

        $r11 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: java.lang.String fmt(com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId)>(r0, r1, r2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label6:
        $r7 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r7.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r4, $r5, $r6);

        return $r7;
    }

    private static java.lang.String fmt(com.hp.hpl.jena.tdb.store.NodeId, com.hp.hpl.jena.tdb.store.NodeId, com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.store.NodeId r2, r5, r8;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.String $r11;

        r2 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        r5 := @parameter1: com.hp.hpl.jena.tdb.store.NodeId;

        r8 := @parameter2: com.hp.hpl.jena.tdb.store.NodeId;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private static com.hp.hpl.jena.sparql.core.Quad quad(com.hp.hpl.jena.tdb.nodetable.NodeTable, org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.atlas.lib.Tuple r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        com.hp.hpl.jena.tdb.store.NodeId $r3, $r5, $r7, $r9;
        int $i0;
        java.lang.String $r15;
        com.hp.hpl.jena.tdb.TDBException $r11;
        com.hp.hpl.jena.sparql.core.Quad $r10;
        java.lang.Object $r2, $r4, $r6, $r8;
        java.lang.StringBuilder $r12, $r13, $r14;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r0 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $i0 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: int size()>();

        if $i0 == 4 goto label1;

        $r11 = new com.hp.hpl.jena.tdb.TDBException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tuple is not of length 4: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        $r2 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(0);

        $r3 = (com.hp.hpl.jena.tdb.store.NodeId) $r2;

        $r4 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(1);

        $r5 = (com.hp.hpl.jena.tdb.store.NodeId) $r4;

        $r6 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(2);

        $r7 = (com.hp.hpl.jena.tdb.store.NodeId) $r6;

        $r8 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(3);

        $r9 = (com.hp.hpl.jena.tdb.store.NodeId) $r8;

        $r10 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: com.hp.hpl.jena.sparql.core.Quad quad(com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId,com.hp.hpl.jena.tdb.store.NodeId)>(r1, $r3, $r5, $r7, $r9);

        return $r10;
    }

    private static com.hp.hpl.jena.sparql.core.Quad quad(com.hp.hpl.jena.tdb.nodetable.NodeTable, com.hp.hpl.jena.tdb.store.NodeId, com.hp.hpl.jena.tdb.store.NodeId, com.hp.hpl.jena.tdb.store.NodeId, com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.graph.Node $r2, $r4, $r6, $r8;
        com.hp.hpl.jena.sparql.core.Quad $r9;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r0;
        com.hp.hpl.jena.tdb.store.NodeId r1, r3, r5, r7;

        r0 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r1 := @parameter1: com.hp.hpl.jena.tdb.store.NodeId;

        r3 := @parameter2: com.hp.hpl.jena.tdb.store.NodeId;

        r5 := @parameter3: com.hp.hpl.jena.tdb.store.NodeId;

        r7 := @parameter4: com.hp.hpl.jena.tdb.store.NodeId;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r1);

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r3);

        $r6 = interfaceinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r5);

        $r8 = interfaceinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r7);

        $r9 = new com.hp.hpl.jena.sparql.core.Quad;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.core.Quad: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r4, $r6, $r8);

        return $r9;
    }

    public static org.apache.jena.atlas.lib.Tuple tuple(com.hp.hpl.jena.tdb.base.record.Record, org.apache.jena.atlas.lib.ColumnMap)
    {
        byte[] $r1, $r4;
        org.apache.jena.atlas.lib.Tuple $r3;
        com.hp.hpl.jena.tdb.store.NodeId[] r2;
        long $l3;
        com.hp.hpl.jena.tdb.store.NodeId $r5;
        com.hp.hpl.jena.tdb.base.record.Record r0;
        int $i0, i1, $i2, i4, i5;
        org.apache.jena.atlas.lib.ColumnMap r6;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r6 := @parameter1: org.apache.jena.atlas.lib.ColumnMap;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getKey()>();

        $i0 = lengthof $r1;

        i1 = $i0 / 8;

        r2 = newarray (com.hp.hpl.jena.tdb.store.NodeId)[i1];

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getKey()>();

        $i2 = i4 * 8;

        $l3 = staticinvoke <org.apache.jena.atlas.lib.Bytes: long getLong(byte[],int)>($r4, $i2);

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(long)>($l3);

        i5 = i4;

        if r6 == null goto label2;

        i5 = virtualinvoke r6.<org.apache.jena.atlas.lib.ColumnMap: int fetchSlotIdx(int)>(i4);

     label2:
        r2[i5] = $r5;

        i4 = i4 + 1;

        goto label1;

     label3:
        $r3 = staticinvoke <org.apache.jena.atlas.lib.Tuple: org.apache.jena.atlas.lib.Tuple create(java.lang.Object[])>(r2);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.base.record.Record record(com.hp.hpl.jena.tdb.base.record.RecordFactory, org.apache.jena.atlas.lib.Tuple, org.apache.jena.atlas.lib.ColumnMap)
    {
        byte[] r1;
        org.apache.jena.atlas.lib.Tuple r0;
        long $l4;
        com.hp.hpl.jena.tdb.store.NodeId $r6;
        com.hp.hpl.jena.tdb.base.record.Record $r3;
        int $i0, $i1, $i2, $i3, $i5, i6;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r2;
        java.lang.Object $r5;
        org.apache.jena.atlas.lib.ColumnMap r4;

        r2 := @parameter0: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        r0 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        r4 := @parameter2: org.apache.jena.atlas.lib.ColumnMap;

        $i0 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: int size()>();

        $i1 = $i0 * 8;

        r1 = newarray (byte)[$i1];

        i6 = 0;

     label1:
        $i2 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: int size()>();

        if i6 >= $i2 goto label2;

        $i3 = virtualinvoke r4.<org.apache.jena.atlas.lib.ColumnMap: int mapSlotIdx(int)>(i6);

        $r5 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(i6);

        $r6 = (com.hp.hpl.jena.tdb.store.NodeId) $r5;

        $l4 = virtualinvoke $r6.<com.hp.hpl.jena.tdb.store.NodeId: long getId()>();

        $i5 = $i3 * 8;

        staticinvoke <org.apache.jena.atlas.lib.Bytes: void setLong(long,byte[],int)>($l4, r1, $i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r2.<com.hp.hpl.jena.tdb.base.record.RecordFactory: com.hp.hpl.jena.tdb.base.record.Record create(byte[])>(r1);

        return $r3;
    }

    static com.hp.hpl.jena.graph.Triple access$000(com.hp.hpl.jena.tdb.nodetable.NodeTable, org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable r0;
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.graph.Triple $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r1 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: com.hp.hpl.jena.graph.Triple triple(com.hp.hpl.jena.tdb.nodetable.NodeTable,org.apache.jena.atlas.lib.Tuple)>(r0, r1);

        return $r2;
    }

    static com.hp.hpl.jena.sparql.core.Quad access$100(com.hp.hpl.jena.tdb.nodetable.NodeTable, org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable r0;
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.sparql.core.Quad $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r1 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: com.hp.hpl.jena.sparql.core.Quad quad(com.hp.hpl.jena.tdb.nodetable.NodeTable,org.apache.jena.atlas.lib.Tuple)>(r0, r1);

        return $r2;
    }
}
