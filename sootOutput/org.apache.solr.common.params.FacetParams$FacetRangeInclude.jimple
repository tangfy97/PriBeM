public final enum class org.apache.solr.common.params.FacetParams$FacetRangeInclude extends java.lang.Enum
{
    public static final enum org.apache.solr.common.params.FacetParams$FacetRangeInclude ALL;
    public static final enum org.apache.solr.common.params.FacetParams$FacetRangeInclude LOWER;
    public static final enum org.apache.solr.common.params.FacetParams$FacetRangeInclude UPPER;
    public static final enum org.apache.solr.common.params.FacetParams$FacetRangeInclude EDGE;
    public static final enum org.apache.solr.common.params.FacetParams$FacetRangeInclude OUTER;
    private static final org.apache.solr.common.params.FacetParams$FacetRangeInclude[] $VALUES;

    public static org.apache.solr.common.params.FacetParams$FacetRangeInclude[] values()
    {
        org.apache.solr.common.params.FacetParams$FacetRangeInclude[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.solr.common.params.FacetParams$FacetRangeInclude[]) $r1;

        return $r2;
    }

    public static org.apache.solr.common.params.FacetParams$FacetRangeInclude valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.solr.common.params.FacetParams$FacetRangeInclude $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/solr/common/params/FacetParams$FacetRangeInclude;", r0);

        $r2 = (org.apache.solr.common.params.FacetParams$FacetRangeInclude) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.apache.solr.common.params.FacetParams$FacetRangeInclude r0;

        r0 := @this: org.apache.solr.common.params.FacetParams$FacetRangeInclude;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public java.lang.String toString()
    {
        java.util.Locale $r2;
        java.lang.String $r1, $r3;
        org.apache.solr.common.params.FacetParams$FacetRangeInclude r0;

        r0 := @this: org.apache.solr.common.params.FacetParams$FacetRangeInclude;

        $r1 = specialinvoke r0.<java.lang.Enum: java.lang.String toString()>();

        $r2 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        return $r3;
    }

    public static org.apache.solr.common.params.FacetParams$FacetRangeInclude get(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        org.apache.solr.common.SolrException$ErrorCode $r7;
        org.apache.solr.common.SolrException $r5;
        java.util.Locale $r1;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String r0, $r2, $r10;
        org.apache.solr.common.params.FacetParams$FacetRangeInclude $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        $r3 = staticinvoke <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude valueOf(java.lang.String)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.solr.common.SolrException;

        $r7 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid type of for range \'include\' information");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String,java.lang.Throwable)>($r7, $r10, $r4);

        throw $r5;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public static java.util.EnumSet parseParam(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0, i1, i2;
        java.lang.String r6;
        org.apache.solr.common.params.FacetParams$FacetRangeInclude $r1, $r4, $r7;
        java.util.EnumSet $r2, $r3, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        if null == r0 goto label1;

        $i0 = lengthof r0;

        if 0 != $i0 goto label2;

     label1:
        $r1 = <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude LOWER>;

        $r2 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r1);

        return $r2;

     label2:
        $r3 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lorg/apache/solr/common/params/FacetParams$FacetRangeInclude;");

        i1 = lengthof r0;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        r6 = r0[i2];

        $r7 = staticinvoke <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude get(java.lang.String)>(r6);

        virtualinvoke $r3.<java.util.EnumSet: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label3;

     label4:
        $r4 = <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude ALL>;

        $z0 = virtualinvoke $r3.<java.util.EnumSet: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

        $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "Lorg/apache/solr/common/params/FacetParams$FacetRangeInclude;");

        return $r5;

     label5:
        return $r3;
    }

    static void <clinit>()
    {
        org.apache.solr.common.params.FacetParams$FacetRangeInclude[] $r5;
        org.apache.solr.common.params.FacetParams$FacetRangeInclude $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;

        $r0 = new org.apache.solr.common.params.FacetParams$FacetRangeInclude;

        specialinvoke $r0.<org.apache.solr.common.params.FacetParams$FacetRangeInclude: void <init>(java.lang.String,int)>("ALL", 0);

        <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude ALL> = $r0;

        $r1 = new org.apache.solr.common.params.FacetParams$FacetRangeInclude;

        specialinvoke $r1.<org.apache.solr.common.params.FacetParams$FacetRangeInclude: void <init>(java.lang.String,int)>("LOWER", 1);

        <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude LOWER> = $r1;

        $r2 = new org.apache.solr.common.params.FacetParams$FacetRangeInclude;

        specialinvoke $r2.<org.apache.solr.common.params.FacetParams$FacetRangeInclude: void <init>(java.lang.String,int)>("UPPER", 2);

        <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude UPPER> = $r2;

        $r3 = new org.apache.solr.common.params.FacetParams$FacetRangeInclude;

        specialinvoke $r3.<org.apache.solr.common.params.FacetParams$FacetRangeInclude: void <init>(java.lang.String,int)>("EDGE", 3);

        <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude EDGE> = $r3;

        $r4 = new org.apache.solr.common.params.FacetParams$FacetRangeInclude;

        specialinvoke $r4.<org.apache.solr.common.params.FacetParams$FacetRangeInclude: void <init>(java.lang.String,int)>("OUTER", 4);

        <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude OUTER> = $r4;

        $r5 = newarray (org.apache.solr.common.params.FacetParams$FacetRangeInclude)[5];

        $r6 = <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude ALL>;

        $r5[0] = $r6;

        $r7 = <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude LOWER>;

        $r5[1] = $r7;

        $r8 = <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude UPPER>;

        $r5[2] = $r8;

        $r9 = <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude EDGE>;

        $r5[3] = $r9;

        $r10 = <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude OUTER>;

        $r5[4] = $r10;

        <org.apache.solr.common.params.FacetParams$FacetRangeInclude: org.apache.solr.common.params.FacetParams$FacetRangeInclude[] $VALUES> = $r5;

        return;
    }
}
