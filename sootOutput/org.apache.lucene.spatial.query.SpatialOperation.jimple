public abstract class org.apache.lucene.spatial.query.SpatialOperation extends java.lang.Object implements java.io.Serializable
{
    private static final java.util.Map registry;
    private static final java.util.List list;
    public static final org.apache.lucene.spatial.query.SpatialOperation BBoxIntersects;
    public static final org.apache.lucene.spatial.query.SpatialOperation BBoxWithin;
    public static final org.apache.lucene.spatial.query.SpatialOperation Contains;
    public static final org.apache.lucene.spatial.query.SpatialOperation Intersects;
    public static final org.apache.lucene.spatial.query.SpatialOperation IsEqualTo;
    public static final org.apache.lucene.spatial.query.SpatialOperation IsDisjointTo;
    public static final org.apache.lucene.spatial.query.SpatialOperation IsWithin;
    public static final org.apache.lucene.spatial.query.SpatialOperation Overlaps;
    private final boolean scoreIsMeaningful;
    private final boolean sourceNeedsArea;
    private final boolean targetNeedsArea;
    private final java.lang.String name;

    protected void <init>(java.lang.String, boolean, boolean, boolean)
    {
        java.util.List $r6;
        java.util.Locale $r3;
        java.util.Map $r2, $r4;
        java.lang.String r1, $r5;
        org.apache.lucene.spatial.query.SpatialOperation r0;
        boolean z0, z1, z2;

        r0 := @this: org.apache.lucene.spatial.query.SpatialOperation;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.spatial.query.SpatialOperation: java.lang.String name> = r1;

        r0.<org.apache.lucene.spatial.query.SpatialOperation: boolean scoreIsMeaningful> = z0;

        r0.<org.apache.lucene.spatial.query.SpatialOperation: boolean sourceNeedsArea> = z1;

        r0.<org.apache.lucene.spatial.query.SpatialOperation: boolean targetNeedsArea> = z2;

        $r2 = <org.apache.lucene.spatial.query.SpatialOperation: java.util.Map registry>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0);

        $r4 = <org.apache.lucene.spatial.query.SpatialOperation: java.util.Map registry>;

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);

        $r6 = <org.apache.lucene.spatial.query.SpatialOperation: java.util.List list>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public static org.apache.lucene.spatial.query.SpatialOperation get(java.lang.String)
    {
        java.lang.IllegalArgumentException $r3;
        java.util.Locale $r8;
        java.util.Map $r1, $r9;
        java.lang.Object $r2, $r11;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r0, $r7, $r10;
        org.apache.lucene.spatial.query.SpatialOperation r12;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.lucene.spatial.query.SpatialOperation: java.util.Map registry>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r12 = (org.apache.lucene.spatial.query.SpatialOperation) $r2;

        if r12 != null goto label1;

        $r9 = <org.apache.lucene.spatial.query.SpatialOperation: java.util.Map registry>;

        $r8 = <java.util.Locale: java.util.Locale ROOT>;

        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r8);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r12 = (org.apache.lucene.spatial.query.SpatialOperation) $r11;

     label1:
        if r12 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Operation: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        return r12;
    }

    public static java.util.List values()
    {
        java.util.List $r0;

        $r0 = <org.apache.lucene.spatial.query.SpatialOperation: java.util.List list>;

        return $r0;
    }

    public static transient boolean is(org.apache.lucene.spatial.query.SpatialOperation, org.apache.lucene.spatial.query.SpatialOperation[])
    {
        org.apache.lucene.spatial.query.SpatialOperation[] r0;
        int i0, i1;
        org.apache.lucene.spatial.query.SpatialOperation r1, r2;

        r2 := @parameter0: org.apache.lucene.spatial.query.SpatialOperation;

        r0 := @parameter1: org.apache.lucene.spatial.query.SpatialOperation[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        if r2 != r1 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public abstract boolean evaluate(com.spatial4j.core.shape.Shape, com.spatial4j.core.shape.Shape);

    public boolean isScoreIsMeaningful()
    {
        org.apache.lucene.spatial.query.SpatialOperation r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialOperation;

        $z0 = r0.<org.apache.lucene.spatial.query.SpatialOperation: boolean scoreIsMeaningful>;

        return $z0;
    }

    public boolean isSourceNeedsArea()
    {
        org.apache.lucene.spatial.query.SpatialOperation r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialOperation;

        $z0 = r0.<org.apache.lucene.spatial.query.SpatialOperation: boolean sourceNeedsArea>;

        return $z0;
    }

    public boolean isTargetNeedsArea()
    {
        org.apache.lucene.spatial.query.SpatialOperation r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialOperation;

        $z0 = r0.<org.apache.lucene.spatial.query.SpatialOperation: boolean targetNeedsArea>;

        return $z0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.lucene.spatial.query.SpatialOperation r0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialOperation;

        $r1 = r0.<org.apache.lucene.spatial.query.SpatialOperation: java.lang.String name>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.lucene.spatial.query.SpatialOperation r0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialOperation;

        $r1 = r0.<org.apache.lucene.spatial.query.SpatialOperation: java.lang.String name>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.ArrayList $r1;
        org.apache.lucene.spatial.query.SpatialOperation$2 $r3;
        org.apache.lucene.spatial.query.SpatialOperation$1 $r2;
        org.apache.lucene.spatial.query.SpatialOperation$4 $r5;
        org.apache.lucene.spatial.query.SpatialOperation$3 $r4;
        org.apache.lucene.spatial.query.SpatialOperation$6 $r7;
        org.apache.lucene.spatial.query.SpatialOperation$5 $r6;
        org.apache.lucene.spatial.query.SpatialOperation$8 $r9;
        org.apache.lucene.spatial.query.SpatialOperation$7 $r8;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.lucene.spatial.query.SpatialOperation: java.util.Map registry> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <org.apache.lucene.spatial.query.SpatialOperation: java.util.List list> = $r1;

        $r2 = new org.apache.lucene.spatial.query.SpatialOperation$1;

        specialinvoke $r2.<org.apache.lucene.spatial.query.SpatialOperation$1: void <init>(java.lang.String,boolean,boolean,boolean)>("BBoxIntersects", 1, 0, 0);

        <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation BBoxIntersects> = $r2;

        $r3 = new org.apache.lucene.spatial.query.SpatialOperation$2;

        specialinvoke $r3.<org.apache.lucene.spatial.query.SpatialOperation$2: void <init>(java.lang.String,boolean,boolean,boolean)>("BBoxWithin", 1, 0, 0);

        <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation BBoxWithin> = $r3;

        $r4 = new org.apache.lucene.spatial.query.SpatialOperation$3;

        specialinvoke $r4.<org.apache.lucene.spatial.query.SpatialOperation$3: void <init>(java.lang.String,boolean,boolean,boolean)>("Contains", 1, 1, 0);

        <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation Contains> = $r4;

        $r5 = new org.apache.lucene.spatial.query.SpatialOperation$4;

        specialinvoke $r5.<org.apache.lucene.spatial.query.SpatialOperation$4: void <init>(java.lang.String,boolean,boolean,boolean)>("Intersects", 1, 0, 0);

        <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation Intersects> = $r5;

        $r6 = new org.apache.lucene.spatial.query.SpatialOperation$5;

        specialinvoke $r6.<org.apache.lucene.spatial.query.SpatialOperation$5: void <init>(java.lang.String,boolean,boolean,boolean)>("IsEqualTo", 0, 0, 0);

        <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation IsEqualTo> = $r6;

        $r7 = new org.apache.lucene.spatial.query.SpatialOperation$6;

        specialinvoke $r7.<org.apache.lucene.spatial.query.SpatialOperation$6: void <init>(java.lang.String,boolean,boolean,boolean)>("IsDisjointTo", 0, 0, 0);

        <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation IsDisjointTo> = $r7;

        $r8 = new org.apache.lucene.spatial.query.SpatialOperation$7;

        specialinvoke $r8.<org.apache.lucene.spatial.query.SpatialOperation$7: void <init>(java.lang.String,boolean,boolean,boolean)>("IsWithin", 1, 0, 1);

        <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation IsWithin> = $r8;

        $r9 = new org.apache.lucene.spatial.query.SpatialOperation$8;

        specialinvoke $r9.<org.apache.lucene.spatial.query.SpatialOperation$8: void <init>(java.lang.String,boolean,boolean,boolean)>("Overlaps", 1, 0, 1);

        <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation Overlaps> = $r9;

        return;
    }
}
