final class org.waveprotocol.wave.common.logging.Logger$1 extends java.lang.Object implements org.waveprotocol.wave.common.logging.Logger
{

    void <init>()
    {
        org.waveprotocol.wave.common.logging.Logger$1 r0;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void log(java.lang.String)
    {
        org.waveprotocol.wave.common.logging.Logger$1 r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public transient void log(java.lang.Object[])
    {
        org.waveprotocol.wave.common.logging.Logger$1 r0;
        java.lang.Object[] r1;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.Object[];

        return;
    }

    public void log(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.common.logging.Logger$1 r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public void log(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.waveprotocol.wave.common.logging.Logger$1 r0;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.Throwable;

        return;
    }

    public void log(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.waveprotocol.wave.common.logging.Logger$1 r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public transient void logLazyObjects(java.lang.Object[])
    {
        org.waveprotocol.wave.common.logging.Logger$1 r0;
        java.lang.Object[] r1;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.Object[];

        return;
    }

    public void logPlainText(java.lang.String)
    {
        org.waveprotocol.wave.common.logging.Logger$1 r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void logPlainText(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.waveprotocol.wave.common.logging.Logger$1 r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public void logXml(java.lang.String)
    {
        org.waveprotocol.wave.common.logging.Logger$1 r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public boolean shouldLog()
    {
        org.waveprotocol.wave.common.logging.Logger$1 r0;

        r0 := @this: org.waveprotocol.wave.common.logging.Logger$1;

        return 0;
    }
}
