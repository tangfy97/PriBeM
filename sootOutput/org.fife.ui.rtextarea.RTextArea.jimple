public class org.fife.ui.rtextarea.RTextArea extends org.fife.ui.rtextarea.RTextAreaBase implements java.awt.print.Printable, java.io.Serializable
{
    public static final int INSERT_MODE;
    public static final int OVERWRITE_MODE;
    public static final java.lang.String MARK_ALL_COLOR_PROPERTY;
    private static final int MIN_ACTION_CONSTANT;
    public static final int COPY_ACTION;
    public static final int CUT_ACTION;
    public static final int DELETE_ACTION;
    public static final int PASTE_ACTION;
    public static final int REDO_ACTION;
    public static final int SELECT_ALL_ACTION;
    public static final int UNDO_ACTION;
    private static final int MAX_ACTION_CONSTANT;
    private static final java.awt.Color DEFAULT_MARK_ALL_COLOR;
    private int textMode;
    private static boolean recordingMacro;
    private static org.fife.ui.rtextarea.Macro currentMacro;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenuItem undoMenuItem;
    private javax.swing.JMenuItem redoMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private boolean popupMenuCreated;
    private static java.lang.String selectedOccurrenceText;
    private org.fife.ui.rtextarea.ToolTipSupplier toolTipSupplier;
    private static org.fife.ui.rtextarea.RecordableTextAction cutAction;
    private static org.fife.ui.rtextarea.RecordableTextAction copyAction;
    private static org.fife.ui.rtextarea.RecordableTextAction pasteAction;
    private static org.fife.ui.rtextarea.RecordableTextAction deleteAction;
    private static org.fife.ui.rtextarea.RecordableTextAction undoAction;
    private static org.fife.ui.rtextarea.RecordableTextAction redoAction;
    private static org.fife.ui.rtextarea.RecordableTextAction selectAllAction;
    private static org.fife.ui.rtextarea.IconGroup iconGroup;
    private transient org.fife.ui.rtextarea.RUndoManager undoManager;
    private transient org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager;
    private java.util.ArrayList markAllHighlights;
    private java.lang.String markedWord;
    private org.fife.ui.rtextarea.ChangeableHighlightPainter markAllHighlightPainter;
    private int[] carets;
    private static final java.lang.String MSG;
    private static java.lang.StringBuffer repTabsSB;

    public void <init>()
    {
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void <init>()>();

        specialinvoke r0.<org.fife.ui.rtextarea.RTextArea: void init(int)>(0);

        return;
    }

    public void <init>(javax.swing.text.AbstractDocument)
    {
        javax.swing.text.AbstractDocument r1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: javax.swing.text.AbstractDocument;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void <init>(javax.swing.text.AbstractDocument)>(r1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextArea: void init(int)>(0);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextArea: void init(int)>(0);

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void <init>(int,int)>(i0, i1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextArea: void init(int)>(0);

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextArea: void init(int)>(0);

        return;
    }

    public void <init>(javax.swing.text.AbstractDocument, java.lang.String, int, int)
    {
        javax.swing.text.AbstractDocument r1;
        org.fife.ui.rtextarea.RTextArea r0;
        int i0, i1;
        java.lang.String r2;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: javax.swing.text.AbstractDocument;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void <init>(javax.swing.text.AbstractDocument,java.lang.String,int,int)>(r1, r2, i0, i1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextArea: void init(int)>(0);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        i0 := @parameter0: int;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void <init>()>();

        specialinvoke r0.<org.fife.ui.rtextarea.RTextArea: void init(int)>(i0);

        return;
    }

    static synchronized void addToCurrentMacro(java.lang.String, java.lang.String)
    {
        org.fife.ui.rtextarea.Macro$MacroRecord $r0;
        java.lang.String r1, r2;
        org.fife.ui.rtextarea.Macro $r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.Macro currentMacro>;

        $r0 = new org.fife.ui.rtextarea.Macro$MacroRecord;

        specialinvoke $r0.<org.fife.ui.rtextarea.Macro$MacroRecord: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke $r3.<org.fife.ui.rtextarea.Macro: void addMacroRecord(org.fife.ui.rtextarea.Macro$MacroRecord)>($r0);

        return;
    }

    public java.lang.Object addLineHighlight(int, java.awt.Color) throws javax.swing.text.BadLocationException
    {
        java.awt.Color r2;
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rtextarea.LineHighlightManager $r1, $r3, $r5;
        int i0;
        java.lang.Object $r4;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        i0 := @parameter0: int;

        r2 := @parameter1: java.awt.Color;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager>;

        if $r1 != null goto label1;

        $r5 = new org.fife.ui.rtextarea.LineHighlightManager;

        specialinvoke $r5.<org.fife.ui.rtextarea.LineHighlightManager: void <init>(org.fife.ui.rtextarea.RTextArea)>(r0);

        r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager> = $r5;

     label1:
        $r3 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rtextarea.LineHighlightManager: java.lang.Object addLineHighlight(int,java.awt.Color)>(i0, r2);

        return $r4;
    }

    public void beginAtomicEdit()
    {
        org.fife.ui.rtextarea.RUndoManager $r1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r1.<org.fife.ui.rtextarea.RUndoManager: void beginInternalAtomicEdit()>();

        return;
    }

    public static synchronized void beginRecordingMacro()
    {
        org.fife.ui.rtextarea.Macro $r0, $r1;
        boolean $z0;

        $z0 = staticinvoke <org.fife.ui.rtextarea.RTextArea: boolean isRecordingMacro()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.Macro currentMacro>;

        if $r0 == null goto label2;

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.Macro currentMacro> = null;

     label2:
        $r1 = new org.fife.ui.rtextarea.Macro;

        specialinvoke $r1.<org.fife.ui.rtextarea.Macro: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.Macro currentMacro> = $r1;

        <org.fife.ui.rtextarea.RTextArea: boolean recordingMacro> = 1;

        return;
    }

    public boolean canUndo()
    {
        org.fife.ui.rtextarea.RUndoManager $r1;
        org.fife.ui.rtextarea.RTextArea r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        $z0 = virtualinvoke $r1.<org.fife.ui.rtextarea.RUndoManager: boolean canUndo()>();

        return $z0;
    }

    public boolean canRedo()
    {
        org.fife.ui.rtextarea.RUndoManager $r1;
        org.fife.ui.rtextarea.RTextArea r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        $z0 = virtualinvoke $r1.<org.fife.ui.rtextarea.RUndoManager: boolean canRedo()>();

        return $z0;
    }

    public void clearMarkAllHighlights()
    {
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.Highlighter $r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        int $i0, i1;
        java.lang.Object $r6;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Highlighter getHighlighter()>();

        if $r1 == null goto label3;

        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: java.util.ArrayList markAllHighlights>;

        if $r2 == null goto label3;

        $r3 = r0.<org.fife.ui.rtextarea.RTextArea: java.util.ArrayList markAllHighlights>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r5 = r0.<org.fife.ui.rtextarea.RTextArea: java.util.ArrayList markAllHighlights>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        interfaceinvoke $r1.<javax.swing.text.Highlighter: void removeHighlight(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<org.fife.ui.rtextarea.RTextArea: java.util.ArrayList markAllHighlights>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

     label3:
        r0.<org.fife.ui.rtextarea.RTextArea: java.lang.String markedWord> = null;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void repaint()>();

        return;
    }

    protected void configurePopupMenu(javax.swing.JPopupMenu)
    {
        javax.swing.JMenuItem $r3, $r4, $r5, $r7, $r9, $r11;
        boolean $z0, z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.JPopupMenu r2;
        org.fife.ui.rtextarea.RecordableTextAction $r1, $r6, $r8, $r10, $r12;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r2 := @parameter0: javax.swing.JPopupMenu;

        $z0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: boolean isEditable()>();

        if $z0 == 0 goto label01;

        $z3 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: boolean isEnabled()>();

        if $z3 == 0 goto label01;

        $z15 = 1;

        $z14 = 1;

        goto label02;

     label01:
        $z15 = 0;

        $z14 = 0;

     label02:
        z1 = $z15;

        $r3 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem undoMenuItem>;

        if $r3 == null goto label13;

        $r4 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem undoMenuItem>;

        $r1 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction undoAction>;

        $z2 = virtualinvoke $r1.<org.fife.ui.rtextarea.RecordableTextAction: boolean isEnabled()>();

        if $z2 == 0 goto label03;

        if $z14 == 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        virtualinvoke $r4.<javax.swing.JMenuItem: void setEnabled(boolean)>($z5);

        $r5 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem redoMenuItem>;

        $r6 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction redoAction>;

        $z6 = virtualinvoke $r6.<org.fife.ui.rtextarea.RecordableTextAction: boolean isEnabled()>();

        if $z6 == 0 goto label05;

        if z1 == 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        virtualinvoke $r5.<javax.swing.JMenuItem: void setEnabled(boolean)>($z7);

        $r7 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem cutMenuItem>;

        $r8 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        $z8 = virtualinvoke $r8.<org.fife.ui.rtextarea.RecordableTextAction: boolean isEnabled()>();

        if $z8 == 0 goto label07;

        if z1 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        virtualinvoke $r7.<javax.swing.JMenuItem: void setEnabled(boolean)>($z9);

        $r9 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem pasteMenuItem>;

        $r10 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction pasteAction>;

        $z10 = virtualinvoke $r10.<org.fife.ui.rtextarea.RecordableTextAction: boolean isEnabled()>();

        if $z10 == 0 goto label09;

        if z1 == 0 goto label09;

        $z11 = 1;

        goto label10;

     label09:
        $z11 = 0;

     label10:
        virtualinvoke $r9.<javax.swing.JMenuItem: void setEnabled(boolean)>($z11);

        $r11 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem deleteMenuItem>;

        $r12 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction deleteAction>;

        $z12 = virtualinvoke $r12.<org.fife.ui.rtextarea.RecordableTextAction: boolean isEnabled()>();

        if $z12 == 0 goto label11;

        if z1 == 0 goto label11;

        $z13 = 1;

        goto label12;

     label11:
        $z13 = 0;

     label12:
        virtualinvoke $r11.<javax.swing.JMenuItem: void setEnabled(boolean)>($z13);

     label13:
        return;
    }

    protected javax.swing.text.Document createDefaultModel()
    {
        org.fife.ui.rtextarea.RTextArea r1;
        org.fife.ui.rtextarea.RDocument $r0;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        $r0 = new org.fife.ui.rtextarea.RDocument;

        specialinvoke $r0.<org.fife.ui.rtextarea.RDocument: void <init>()>();

        return $r0;
    }

    protected org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener createMouseListener()
    {
        org.fife.ui.rtextarea.RTextArea$RTextAreaMutableCaretEvent $r0;
        org.fife.ui.rtextarea.RTextArea r1;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        $r0 = new org.fife.ui.rtextarea.RTextArea$RTextAreaMutableCaretEvent;

        specialinvoke $r0.<org.fife.ui.rtextarea.RTextArea$RTextAreaMutableCaretEvent: void <init>(org.fife.ui.rtextarea.RTextArea,org.fife.ui.rtextarea.RTextArea)>(r1, r1);

        return $r0;
    }

    protected javax.swing.JPopupMenu createPopupMenu()
    {
        javax.swing.JMenuItem $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        org.fife.ui.rtextarea.RTextArea r1;
        javax.swing.JPopupMenu $r0;
        org.fife.ui.rtextarea.RecordableTextAction $r2, $r4, $r6, $r8, $r10, $r12, $r14;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        $r0 = new javax.swing.JPopupMenu;

        specialinvoke $r0.<javax.swing.JPopupMenu: void <init>()>();

        $r2 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction undoAction>;

        $r3 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem createPopupMenuItem(javax.swing.Action)>($r2);

        r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem undoMenuItem> = $r3;

        virtualinvoke $r0.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r3);

        $r4 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction redoAction>;

        $r5 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem createPopupMenuItem(javax.swing.Action)>($r4);

        r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem redoMenuItem> = $r5;

        virtualinvoke $r0.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r5);

        virtualinvoke $r0.<javax.swing.JPopupMenu: void addSeparator()>();

        $r6 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        $r7 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem createPopupMenuItem(javax.swing.Action)>($r6);

        r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem cutMenuItem> = $r7;

        virtualinvoke $r0.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r7);

        $r8 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        $r9 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem createPopupMenuItem(javax.swing.Action)>($r8);

        virtualinvoke $r0.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r9);

        $r10 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction pasteAction>;

        $r11 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem createPopupMenuItem(javax.swing.Action)>($r10);

        r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem pasteMenuItem> = $r11;

        virtualinvoke $r0.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r11);

        $r12 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction deleteAction>;

        $r13 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem createPopupMenuItem(javax.swing.Action)>($r12);

        r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem deleteMenuItem> = $r13;

        virtualinvoke $r0.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r13);

        virtualinvoke $r0.<javax.swing.JPopupMenu: void addSeparator()>();

        $r14 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction selectAllAction>;

        $r15 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.JMenuItem createPopupMenuItem(javax.swing.Action)>($r14);

        virtualinvoke $r0.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r15);

        return $r0;
    }

    private static void createPopupMenuActions()
    {
        org.fife.ui.rtextarea.RTextAreaEditorKit$UndoAction $r18;
        java.util.ResourceBundle $r1;
        org.fife.ui.rtextarea.RTextAreaEditorKit$DeleteNextCharAction $r14;
        int $i0;
        org.fife.ui.rtextarea.RTextAreaEditorKit$CutAction $r2;
        org.fife.ui.rtextarea.RTextAreaEditorKit$RedoAction $r22;
        javax.swing.KeyStroke $r5, $r9, $r13, $r17, $r21, $r25, $r29;
        org.fife.ui.rtextarea.RecordableTextAction $r3, $r4, $r7, $r8, $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r24, $r27, $r28;
        org.fife.ui.rtextarea.RTextAreaEditorKit$CopyAction $r6;
        org.fife.ui.rtextarea.RTextAreaEditorKit$SelectAllAction $r26;
        java.awt.Toolkit $r0;
        org.fife.ui.rtextarea.RTextAreaEditorKit$PasteAction $r10;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $i0 = virtualinvoke $r0.<java.awt.Toolkit: int getMenuShortcutKeyMask()>();

        $r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>("org.fife.ui.rtextarea.RTextArea");

        $r2 = new org.fife.ui.rtextarea.RTextAreaEditorKit$CutAction;

        specialinvoke $r2.<org.fife.ui.rtextarea.RTextAreaEditorKit$CutAction: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction> = $r2;

        $r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        virtualinvoke $r3.<org.fife.ui.rtextarea.RecordableTextAction: void setProperties(java.util.ResourceBundle,java.lang.String)>($r1, "Action.Cut");

        $r4 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        $r5 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(88, $i0);

        virtualinvoke $r4.<org.fife.ui.rtextarea.RecordableTextAction: void setAccelerator(javax.swing.KeyStroke)>($r5);

        $r6 = new org.fife.ui.rtextarea.RTextAreaEditorKit$CopyAction;

        specialinvoke $r6.<org.fife.ui.rtextarea.RTextAreaEditorKit$CopyAction: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction> = $r6;

        $r7 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        virtualinvoke $r7.<org.fife.ui.rtextarea.RecordableTextAction: void setProperties(java.util.ResourceBundle,java.lang.String)>($r1, "Action.Copy");

        $r8 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        $r9 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(67, $i0);

        virtualinvoke $r8.<org.fife.ui.rtextarea.RecordableTextAction: void setAccelerator(javax.swing.KeyStroke)>($r9);

        $r10 = new org.fife.ui.rtextarea.RTextAreaEditorKit$PasteAction;

        specialinvoke $r10.<org.fife.ui.rtextarea.RTextAreaEditorKit$PasteAction: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction pasteAction> = $r10;

        $r11 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction pasteAction>;

        virtualinvoke $r11.<org.fife.ui.rtextarea.RecordableTextAction: void setProperties(java.util.ResourceBundle,java.lang.String)>($r1, "Action.Paste");

        $r12 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction pasteAction>;

        $r13 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(86, $i0);

        virtualinvoke $r12.<org.fife.ui.rtextarea.RecordableTextAction: void setAccelerator(javax.swing.KeyStroke)>($r13);

        $r14 = new org.fife.ui.rtextarea.RTextAreaEditorKit$DeleteNextCharAction;

        specialinvoke $r14.<org.fife.ui.rtextarea.RTextAreaEditorKit$DeleteNextCharAction: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction deleteAction> = $r14;

        $r15 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction deleteAction>;

        virtualinvoke $r15.<org.fife.ui.rtextarea.RecordableTextAction: void setProperties(java.util.ResourceBundle,java.lang.String)>($r1, "Action.Delete");

        $r16 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction deleteAction>;

        $r17 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(127, 0);

        virtualinvoke $r16.<org.fife.ui.rtextarea.RecordableTextAction: void setAccelerator(javax.swing.KeyStroke)>($r17);

        $r18 = new org.fife.ui.rtextarea.RTextAreaEditorKit$UndoAction;

        specialinvoke $r18.<org.fife.ui.rtextarea.RTextAreaEditorKit$UndoAction: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction undoAction> = $r18;

        $r19 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction undoAction>;

        virtualinvoke $r19.<org.fife.ui.rtextarea.RecordableTextAction: void setProperties(java.util.ResourceBundle,java.lang.String)>($r1, "Action.Undo");

        $r20 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction undoAction>;

        $r21 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(90, $i0);

        virtualinvoke $r20.<org.fife.ui.rtextarea.RecordableTextAction: void setAccelerator(javax.swing.KeyStroke)>($r21);

        $r22 = new org.fife.ui.rtextarea.RTextAreaEditorKit$RedoAction;

        specialinvoke $r22.<org.fife.ui.rtextarea.RTextAreaEditorKit$RedoAction: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction redoAction> = $r22;

        $r23 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction redoAction>;

        virtualinvoke $r23.<org.fife.ui.rtextarea.RecordableTextAction: void setProperties(java.util.ResourceBundle,java.lang.String)>($r1, "Action.Redo");

        $r24 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction redoAction>;

        $r25 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(89, $i0);

        virtualinvoke $r24.<org.fife.ui.rtextarea.RecordableTextAction: void setAccelerator(javax.swing.KeyStroke)>($r25);

        $r26 = new org.fife.ui.rtextarea.RTextAreaEditorKit$SelectAllAction;

        specialinvoke $r26.<org.fife.ui.rtextarea.RTextAreaEditorKit$SelectAllAction: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction selectAllAction> = $r26;

        $r27 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction selectAllAction>;

        virtualinvoke $r27.<org.fife.ui.rtextarea.RecordableTextAction: void setProperties(java.util.ResourceBundle,java.lang.String)>($r1, "Action.SelectAll");

        $r28 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction selectAllAction>;

        $r29 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(65, $i0);

        virtualinvoke $r28.<org.fife.ui.rtextarea.RecordableTextAction: void setAccelerator(javax.swing.KeyStroke)>($r29);

        return;
    }

    protected javax.swing.JMenuItem createPopupMenuItem(javax.swing.Action)
    {
        javax.swing.Action r2;
        org.fife.ui.rtextarea.RTextArea$1 $r0;
        org.fife.ui.rtextarea.RTextArea r1;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        r2 := @parameter0: javax.swing.Action;

        $r0 = new org.fife.ui.rtextarea.RTextArea$1;

        specialinvoke $r0.<org.fife.ui.rtextarea.RTextArea$1: void <init>(org.fife.ui.rtextarea.RTextArea,javax.swing.Action)>(r1, r2);

        virtualinvoke $r0.<javax.swing.JMenuItem: void setAccelerator(javax.swing.KeyStroke)>(null);

        return $r0;
    }

    protected org.fife.ui.rtextarea.RTextAreaUI createRTextAreaUI()
    {
        org.fife.ui.rtextarea.RTextAreaUI $r0;
        org.fife.ui.rtextarea.RTextArea r1;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        $r0 = new org.fife.ui.rtextarea.RTextAreaUI;

        specialinvoke $r0.<org.fife.ui.rtextarea.RTextAreaUI: void <init>(javax.swing.JComponent)>(r1);

        return $r0;
    }

    protected org.fife.ui.rtextarea.RUndoManager createUndoManager()
    {
        org.fife.ui.rtextarea.RUndoManager $r0;
        org.fife.ui.rtextarea.RTextArea r1;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        $r0 = new org.fife.ui.rtextarea.RUndoManager;

        specialinvoke $r0.<org.fife.ui.rtextarea.RUndoManager: void <init>(org.fife.ui.rtextarea.RTextArea)>(r1);

        return $r0;
    }

    public void discardAllEdits()
    {
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rtextarea.RUndoManager $r1, $r3, $r4, $r6, $r7;
        javax.swing.text.Document $r2, $r5;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r1.<org.fife.ui.rtextarea.RUndoManager: void discardAllEdits()>();

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r3 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        interfaceinvoke $r2.<javax.swing.text.Document: void removeUndoableEditListener(javax.swing.event.UndoableEditListener)>($r3);

        $r4 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager createUndoManager()>();

        r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager> = $r4;

        $r5 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r6 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        interfaceinvoke $r5.<javax.swing.text.Document: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r6);

        $r7 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r7.<org.fife.ui.rtextarea.RUndoManager: void updateActions()>();

        return;
    }

    public void endAtomicEdit()
    {
        org.fife.ui.rtextarea.RUndoManager $r1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r1.<org.fife.ui.rtextarea.RUndoManager: void endInternalAtomicEdit()>();

        return;
    }

    public static synchronized void endRecordingMacro()
    {
        boolean $z0;

        $z0 = staticinvoke <org.fife.ui.rtextarea.RTextArea: boolean isRecordingMacro()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        <org.fife.ui.rtextarea.RTextArea: boolean recordingMacro> = 0;

        return;
    }

    protected void fireCaretUpdate(javax.swing.event.CaretEvent)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rtextarea.RecordableTextAction $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        javax.swing.event.CaretEvent r1;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: javax.swing.event.CaretEvent;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void possiblyUpdateCurrentLineHighlightLocation()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<javax.swing.event.CaretEvent: int getDot()>();

        $i1 = virtualinvoke r1.<javax.swing.event.CaretEvent: int getMark()>();

        if $i0 == $i1 goto label1;

        $r5 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        virtualinvoke $r5.<org.fife.ui.rtextarea.RecordableTextAction: void setEnabled(boolean)>(1);

        $r6 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        virtualinvoke $r6.<org.fife.ui.rtextarea.RecordableTextAction: void setEnabled(boolean)>(1);

        goto label2;

     label1:
        $r2 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        $z0 = virtualinvoke $r2.<org.fife.ui.rtextarea.RecordableTextAction: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        virtualinvoke $r3.<org.fife.ui.rtextarea.RecordableTextAction: void setEnabled(boolean)>(0);

        $r4 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        virtualinvoke $r4.<org.fife.ui.rtextarea.RecordableTextAction: void setEnabled(boolean)>(0);

     label2:
        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void fireCaretUpdate(javax.swing.event.CaretEvent)>(r1);

        return;
    }

    private void fixCtrlH()
    {
        javax.swing.KeyStroke $r2, $r3;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.InputMap $r1, r4;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.InputMap getInputMap()>();

        $r2 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("typed \u0008");

        r4 = $r1;

     label1:
        if r4 == null goto label2;

        virtualinvoke r4.<javax.swing.InputMap: void remove(javax.swing.KeyStroke)>($r2);

        r4 = virtualinvoke r4.<javax.swing.InputMap: javax.swing.InputMap getParent()>();

        goto label1;

     label2:
        $r3 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("BACK_SPACE");

        virtualinvoke $r1.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r3, "delete-previous");

        return;
    }

    public static org.fife.ui.rtextarea.RecordableTextAction getAction(int)
    {
        org.fife.ui.rtextarea.RecordableTextAction $r0, $r1, $r2, $r3, $r4, $r5, $r6;
        int i0;

        i0 := @parameter0: int;

        if i0 < 0 goto label01;

        if i0 <= 6 goto label02;

     label01:
        return null;

     label02:
        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            default: goto label10;
        };

     label03:
        $r6 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        return $r6;

     label04:
        $r5 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        return $r5;

     label05:
        $r4 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction deleteAction>;

        return $r4;

     label06:
        $r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction pasteAction>;

        return $r3;

     label07:
        $r2 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction redoAction>;

        return $r2;

     label08:
        $r1 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction selectAllAction>;

        return $r1;

     label09:
        $r0 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction undoAction>;

        return $r0;

     label10:
        return null;
    }

    public static synchronized org.fife.ui.rtextarea.Macro getCurrentMacro()
    {
        org.fife.ui.rtextarea.Macro $r0;

        $r0 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.Macro currentMacro>;

        return $r0;
    }

    public static final java.awt.Color getDefaultMarkAllHighlightColor()
    {
        java.awt.Color $r0;

        $r0 = <org.fife.ui.rtextarea.RTextArea: java.awt.Color DEFAULT_MARK_ALL_COLOR>;

        return $r0;
    }

    public static org.fife.ui.rtextarea.IconGroup getIconGroup()
    {
        org.fife.ui.rtextarea.IconGroup $r0;

        $r0 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.IconGroup iconGroup>;

        return $r0;
    }

    org.fife.ui.rtextarea.LineHighlightManager getLineHighlightManager()
    {
        org.fife.ui.rtextarea.LineHighlightManager $r1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager>;

        return $r1;
    }

    public java.awt.Color getMarkAllHighlightColor()
    {
        java.awt.Color $r3;
        java.awt.Paint $r2;
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rtextarea.ChangeableHighlightPainter $r1;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ChangeableHighlightPainter markAllHighlightPainter>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rtextarea.ChangeableHighlightPainter: java.awt.Paint getPaint()>();

        $r3 = (java.awt.Color) $r2;

        return $r3;
    }

    public int getMaxAscent()
    {
        java.awt.FontMetrics $r2;
        org.fife.ui.rtextarea.RTextArea r0;
        java.awt.Font $r1;
        int $i0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: java.awt.Font getFont()>();

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r1);

        $i0 = virtualinvoke $r2.<java.awt.FontMetrics: int getAscent()>();

        return $i0;
    }

    public javax.swing.JPopupMenu getPopupMenu()
    {
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.JPopupMenu $r1, $r2, $r5, $r6;
        java.awt.ComponentOrientation $r4;
        java.util.Locale $r3;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $z0 = r0.<org.fife.ui.rtextarea.RTextArea: boolean popupMenuCreated>;

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JPopupMenu createPopupMenu()>();

        r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JPopupMenu popupMenu> = $r1;

        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JPopupMenu popupMenu>;

        if $r2 == null goto label1;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = staticinvoke <java.awt.ComponentOrientation: java.awt.ComponentOrientation getOrientation(java.util.Locale)>($r3);

        $r5 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JPopupMenu popupMenu>;

        virtualinvoke $r5.<javax.swing.JPopupMenu: void applyComponentOrientation(java.awt.ComponentOrientation)>($r4);

     label1:
        r0.<org.fife.ui.rtextarea.RTextArea: boolean popupMenuCreated> = 1;

     label2:
        $r6 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JPopupMenu popupMenu>;

        return $r6;
    }

    public static java.lang.String getSelectedOccurrenceText()
    {
        java.lang.String $r0;

        $r0 = <org.fife.ui.rtextarea.RTextArea: java.lang.String selectedOccurrenceText>;

        return $r0;
    }

    public final int getTextMode()
    {
        int $i0;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $i0 = r0.<org.fife.ui.rtextarea.RTextArea: int textMode>;

        return $i0;
    }

    public org.fife.ui.rtextarea.ToolTipSupplier getToolTipSupplier()
    {
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rtextarea.ToolTipSupplier $r1;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ToolTipSupplier toolTipSupplier>;

        return $r1;
    }

    public java.lang.String getToolTipText(java.awt.event.MouseEvent)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        java.lang.String r4, $r5;
        org.fife.ui.rtextarea.ToolTipSupplier $r1, $r2;
        java.awt.event.MouseEvent r3;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r3 := @parameter0: java.awt.event.MouseEvent;

        r4 = null;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ToolTipSupplier getToolTipSupplier()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ToolTipSupplier getToolTipSupplier()>();

        r4 = interfaceinvoke $r2.<org.fife.ui.rtextarea.ToolTipSupplier: java.lang.String getToolTipText(org.fife.ui.rtextarea.RTextArea,java.awt.event.MouseEvent)>(r0, r3);

     label1:
        if r4 == null goto label2;

        $r5 = r4;

        goto label3;

     label2:
        $r5 = specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.lang.String getToolTipText()>();

     label3:
        return $r5;
    }

    protected void handleReplaceSelection(java.lang.String)
    {
        java.lang.String r1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void replaceSelection(java.lang.String)>(r1);

        return;
    }

    private void init(int)
    {
        java.awt.Color $r5;
        org.fife.ui.rtextarea.RTextArea r1;
        org.fife.ui.rtextarea.RecordableTextAction $r0;
        org.fife.ui.rtextarea.RUndoManager $r2, $r4;
        int[] $r7;
        int i0;
        javax.swing.text.Document $r3;
        org.fife.ui.rtextarea.ChangeableHighlightPainter $r6;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        i0 := @parameter0: int;

        $r0 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        if $r0 != null goto label1;

        staticinvoke <org.fife.ui.rtextarea.RTextArea: void createPopupMenuActions()>();

     label1:
        $r2 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager createUndoManager()>();

        r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager> = $r2;

        $r3 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r4 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        interfaceinvoke $r3.<javax.swing.text.Document: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r4);

        $r5 = staticinvoke <org.fife.ui.rtextarea.RTextArea: java.awt.Color getDefaultMarkAllHighlightColor()>();

        $r6 = new org.fife.ui.rtextarea.ChangeableHighlightPainter;

        specialinvoke $r6.<org.fife.ui.rtextarea.ChangeableHighlightPainter: void <init>(java.awt.Paint)>($r5);

        r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ChangeableHighlightPainter markAllHighlightPainter> = $r6;

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: void setMarkAllHighlightColor(java.awt.Color)>($r5);

        $r7 = newarray (int)[2];

        r1.<org.fife.ui.rtextarea.RTextArea: int[] carets> = $r7;

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: void setCaretStyle(int,int)>(0, 4);

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: void setCaretStyle(int,int)>(1, 2);

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: void setDragEnabled(boolean)>(1);

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: void setTextMode(int)>(i0);

        specialinvoke r1.<org.fife.ui.rtextarea.RTextArea: void fixCtrlH()>();

        return;
    }

    public static synchronized boolean isRecordingMacro()
    {
        boolean $z0;

        $z0 = <org.fife.ui.rtextarea.RTextArea: boolean recordingMacro>;

        return $z0;
    }

    public static synchronized void loadMacro(org.fife.ui.rtextarea.Macro)
    {
        org.fife.ui.rtextarea.Macro r0;

        r0 := @parameter0: org.fife.ui.rtextarea.Macro;

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.Macro currentMacro> = r0;

        return;
    }

    public int markAll(java.lang.String, boolean, boolean, boolean)
    {
        org.fife.ui.rtextarea.SearchContext $r6;
        java.util.ArrayList $r4, $r5, $r8;
        int $i0, $i1, $i2, i3;
        java.lang.String r2, $r3;
        org.fife.ui.rtextarea.ChangeableHighlightPainter $r7;
        boolean $z0, z1, z2, z3, z4;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.BadLocationException $r10;
        javax.swing.text.Highlighter $r1;
        java.lang.Object $r9;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r2 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        z3 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Highlighter getHighlighter()>();

        i3 = 0;

        if r2 == null goto label9;

        $r3 = r0.<org.fife.ui.rtextarea.RTextArea: java.lang.String markedWord>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label9;

        if $r1 == null goto label9;

        $r4 = r0.<org.fife.ui.rtextarea.RTextArea: java.util.ArrayList markAllHighlights>;

        if $r4 == null goto label1;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void clearMarkAllHighlights()>();

        goto label2;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(10);

        r0.<org.fife.ui.rtextarea.RTextArea: java.util.ArrayList markAllHighlights> = $r5;

     label2:
        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getCaretPosition()>();

        r0.<org.fife.ui.rtextarea.RTextArea: java.lang.String markedWord> = r2;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void setCaretPosition(int)>(0);

        $r6 = new org.fife.ui.rtextarea.SearchContext;

        specialinvoke $r6.<org.fife.ui.rtextarea.SearchContext: void <init>()>();

        virtualinvoke $r6.<org.fife.ui.rtextarea.SearchContext: void setSearchFor(java.lang.String)>(r2);

        virtualinvoke $r6.<org.fife.ui.rtextarea.SearchContext: void setMatchCase(boolean)>(z1);

        virtualinvoke $r6.<org.fife.ui.rtextarea.SearchContext: void setRegularExpression(boolean)>(z2);

        virtualinvoke $r6.<org.fife.ui.rtextarea.SearchContext: void setSearchForward(boolean)>(1);

        virtualinvoke $r6.<org.fife.ui.rtextarea.SearchContext: void setWholeWord(boolean)>(z3);

        z4 = staticinvoke <org.fife.ui.rtextarea.SearchEngine: boolean find(javax.swing.JTextArea,org.fife.ui.rtextarea.SearchContext)>(r0, $r6);

     label3:
        if z4 == 0 goto label8;

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getSelectionStart()>();

        $i2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getSelectionEnd()>();

     label4:
        $r8 = r0.<org.fife.ui.rtextarea.RTextArea: java.util.ArrayList markAllHighlights>;

        $r7 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ChangeableHighlightPainter markAllHighlightPainter>;

        $r9 = interfaceinvoke $r1.<javax.swing.text.Highlighter: java.lang.Object addHighlight(int,int,javax.swing.text.Highlighter$HighlightPainter)>($i1, $i2, $r7);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        virtualinvoke $r10.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label7:
        i3 = i3 + 1;

        z4 = staticinvoke <org.fife.ui.rtextarea.SearchEngine: boolean find(javax.swing.JTextArea,org.fife.ui.rtextarea.SearchContext)>(r0, $r6);

        goto label3;

     label8:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void setCaretPosition(int)>($i0);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void repaint()>();

     label9:
        return i3;

        catch javax.swing.text.BadLocationException from label4 to label5 with label6;
    }

    public void paste()
    {
        java.lang.Throwable $r1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void beginAtomicEdit()>();

     label1:
        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void paste()>();

     label2:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void endAtomicEdit()>();

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void endAtomicEdit()>();

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public synchronized void playbackLastMacro()
    {
        java.lang.Throwable $r17;
        org.fife.ui.rtextarea.Macro$MacroRecord r8;
        javax.swing.Action $r9, $r10, $r16;
        int i0, $i1, i2, i3;
        java.lang.String $r12, $r13, $r15;
        javax.swing.Action[] $r2;
        boolean $z0, $z1;
        org.fife.ui.rtextarea.RTextArea r1;
        java.awt.event.ActionEvent $r14;
        org.fife.ui.rtextarea.RecordableTextAction $r11;
        java.util.List $r4;
        org.fife.ui.rtextarea.RUndoManager $r5, $r6, $r18;
        java.lang.Object $r7;
        org.fife.ui.rtextarea.Macro $r0, $r3;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        $r0 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.Macro currentMacro>;

        if $r0 == null goto label9;

        $r2 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.Action[] getActions()>();

        i0 = lengthof $r2;

        $r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.Macro currentMacro>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rtextarea.Macro: java.util.List getMacroRecords()>();

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i1 <= 0 goto label9;

        $r5 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r5.<org.fife.ui.rtextarea.RUndoManager: void beginInternalAtomicEdit()>();

     label1:
        i2 = 0;

     label2:
        if i2 >= $i1 goto label6;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (org.fife.ui.rtextarea.Macro$MacroRecord) $r7;

        i3 = 0;

     label3:
        if i3 >= i0 goto label5;

        $r9 = $r2[i3];

        $z0 = $r9 instanceof org.fife.ui.rtextarea.RecordableTextAction;

        if $z0 == 0 goto label4;

        $r12 = r8.<org.fife.ui.rtextarea.Macro$MacroRecord: java.lang.String id>;

        $r10 = $r2[i3];

        $r11 = (org.fife.ui.rtextarea.RecordableTextAction) $r10;

        $r13 = virtualinvoke $r11.<org.fife.ui.rtextarea.RecordableTextAction: java.lang.String getMacroID()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label4;

        $r16 = $r2[i3];

        $r14 = new java.awt.event.ActionEvent;

        $r15 = r8.<org.fife.ui.rtextarea.Macro$MacroRecord: java.lang.String actionCommand>;

        specialinvoke $r14.<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>(r1, 1001, $r15);

        interfaceinvoke $r16.<javax.swing.Action: void actionPerformed(java.awt.event.ActionEvent)>($r14);

        goto label5;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        $r6 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r6.<org.fife.ui.rtextarea.RUndoManager: void endInternalAtomicEdit()>();

        goto label9;

     label7:
        $r17 := @caughtexception;

     label8:
        $r18 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r18.<org.fife.ui.rtextarea.RUndoManager: void endInternalAtomicEdit()>();

        throw $r17;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int print(java.awt.Graphics, java.awt.print.PageFormat, int)
    {
        org.fife.ui.rtextarea.RTextArea r1;
        java.awt.Font $r2;
        java.awt.Graphics r0;
        int i0, $i1, $i2;
        java.awt.print.PageFormat r3;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        r0 := @parameter0: java.awt.Graphics;

        r3 := @parameter1: java.awt.print.PageFormat;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: java.awt.Font getFont()>();

        $i1 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: int getTabSize()>();

        $i2 = staticinvoke <org.fife.print.RPrintUtilities: int printDocumentWordWrap(java.awt.Graphics,javax.swing.text.JTextComponent,java.awt.Font,int,java.awt.print.PageFormat,int)>(r0, r1, $r2, i0, r3, $i1);

        return $i2;
    }

    public void read(java.io.Reader, java.lang.Object) throws java.io.IOException
    {
        javax.swing.text.EditorKit $r2;
        org.fife.ui.rtextarea.RTextAreaEditorKit r3;
        org.fife.ui.rtextarea.RTextArea r0;
        java.io.IOException $r8;
        java.io.Reader r6;
        javax.swing.text.BadLocationException $r7;
        javax.swing.plaf.TextUI $r1;
        java.lang.Object r5;
        javax.swing.text.Document $r4;
        java.lang.String $r9;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r6 := @parameter0: java.io.Reader;

        r5 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.plaf.TextUI getUI()>();

        $r2 = virtualinvoke $r1.<javax.swing.plaf.TextUI: javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent)>(r0);

        r3 = (org.fife.ui.rtextarea.RTextAreaEditorKit) $r2;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void setText(java.lang.String)>(null);

        $r4 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        if r5 == null goto label1;

        interfaceinvoke $r4.<javax.swing.text.Document: void putProperty(java.lang.Object,java.lang.Object)>("stream", r5);

     label1:
        virtualinvoke r3.<org.fife.ui.rtextarea.RTextAreaEditorKit: void read(java.io.Reader,javax.swing.text.Document,int)>(r6, $r4, 0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.io.IOException;

        $r9 = virtualinvoke $r7.<javax.swing.text.BadLocationException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label4:
        return;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        org.fife.ui.rtextarea.RUndoManager $r2, $r4;
        org.fife.ui.rtextarea.RTextArea r1;
        java.io.ObjectInputStream r0;
        javax.swing.text.Document $r3;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager createUndoManager()>();

        r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager> = $r2;

        $r3 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r4 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        interfaceinvoke $r3.<javax.swing.text.Document: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r4);

        r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager> = null;

        return;
    }

    public void redoLastAction()
    {
        org.fife.ui.rtextarea.RUndoManager $r1, $r2;
        javax.swing.undo.CannotRedoException $r3;
        org.fife.ui.rtextarea.RTextArea r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

     label1:
        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        $z0 = virtualinvoke $r1.<org.fife.ui.rtextarea.RUndoManager: boolean canRedo()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r2.<org.fife.ui.rtextarea.RUndoManager: void redo()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<javax.swing.undo.CannotRedoException: void printStackTrace()>();

     label4:
        return;

        catch javax.swing.undo.CannotRedoException from label1 to label2 with label3;
    }

    public void removeAllLineHighlights()
    {
        org.fife.ui.rtextarea.LineHighlightManager $r1, $r2;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager>;

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager>;

        virtualinvoke $r2.<org.fife.ui.rtextarea.LineHighlightManager: void removeAllLineHighlights()>();

     label1:
        return;
    }

    public void removeLineHighlight(java.lang.Object)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rtextarea.LineHighlightManager $r1, $r3;
        java.lang.Object r2;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager>;

        if $r1 == null goto label1;

        $r3 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager lineHighlightManager>;

        virtualinvoke $r3.<org.fife.ui.rtextarea.LineHighlightManager: void removeLineHighlight(java.lang.Object)>(r2);

     label1:
        return;
    }

    public void replaceRange(java.lang.String, int, int)
    {
        java.lang.Throwable $r7;
        javax.swing.text.AbstractDocument $r4;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.BadLocationException $r9;
        java.lang.IllegalArgumentException $r6, $r10;
        org.fife.ui.rtextarea.RUndoManager $r2, $r5, $r8;
        int i0, i1, $i2;
        javax.swing.text.Document $r1;
        java.lang.String r3, $r11;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r3 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 >= i1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("end before start");

        throw $r6;

     label1:
        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        if $r1 == null goto label7;

     label2:
        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r2.<org.fife.ui.rtextarea.RUndoManager: void beginInternalAtomicEdit()>();

        $r4 = (javax.swing.text.AbstractDocument) $r1;

        $i2 = i0 - i1;

        virtualinvoke $r4.<javax.swing.text.AbstractDocument: void replace(int,int,java.lang.String,javax.swing.text.AttributeSet)>(i1, $i2, r3, null);

     label3:
        $r5 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r5.<org.fife.ui.rtextarea.RUndoManager: void endInternalAtomicEdit()>();

        goto label7;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r9.<javax.swing.text.BadLocationException: java.lang.String getMessage()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label5:
        $r7 := @caughtexception;

     label6:
        $r8 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r8.<org.fife.ui.rtextarea.RUndoManager: void endInternalAtomicEdit()>();

        throw $r7;

     label7:
        return;

        catch javax.swing.text.BadLocationException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public void replaceSelection(java.lang.String)
    {
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i16;
        java.lang.String $r1, r7;
        boolean $z0, $z1;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.Caret $r2;
        javax.swing.LookAndFeel $r6;
        javax.swing.text.BadLocationException $r5;
        javax.swing.text.Document $r3;
        javax.swing.text.Element $r4;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r7 := @parameter0: java.lang.String;

        if r7 != null goto label1;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void handleReplaceSelection(java.lang.String)>(r7);

        return;

     label1:
        $z0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: boolean getTabsEmulated()>();

        if $z0 == 0 goto label2;

        $i11 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(9);

        $i16 = (int) -1;

        if $i11 <= $i16 goto label2;

        $i12 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getTabSize()>();

        r7 = staticinvoke <org.fife.ui.rtextarea.RTextArea: java.lang.String replaceTabsWithSpaces(java.lang.String,int)>(r7, $i12);

     label2:
        $i13 = r0.<org.fife.ui.rtextarea.RTextArea: int textMode>;

        if $i13 != 1 goto label8;

        $r1 = "\n";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 != 0 goto label8;

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Caret getCaret()>();

        $i0 = interfaceinvoke $r2.<javax.swing.text.Caret: int getDot()>();

        $r3 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r4 = interfaceinvoke $r3.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $i1 = interfaceinvoke $r4.<javax.swing.text.Element: int getElementIndex(int)>($i0);

        $i2 = interfaceinvoke $r4.<javax.swing.text.Element: int getElementCount()>();

        i3 = $i2 - 1;

     label3:
        $i4 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getLineEndOffset(int)>($i1);

        $i5 = interfaceinvoke $r2.<javax.swing.text.Caret: int getMark()>();

        if $i0 != $i5 goto label6;

        if $i0 == $i4 goto label6;

        if $i1 != i3 goto label4;

        $i9 = virtualinvoke r7.<java.lang.String: int length()>();

        $i10 = $i0 + $i9;

        i14 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i4);

        goto label5;

     label4:
        $i6 = virtualinvoke r7.<java.lang.String: int length()>();

        $i8 = $i0 + $i6;

        $i7 = $i4 - 1;

        i14 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i7);

     label5:
        interfaceinvoke $r2.<javax.swing.text.Caret: void moveDot(int)>(i14);

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        $r6 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r6.<javax.swing.LookAndFeel: void provideErrorFeedback(java.awt.Component)>(r0);

        virtualinvoke $r5.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label8:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void handleReplaceSelection(java.lang.String)>(r7);

        return;

        catch javax.swing.text.BadLocationException from label3 to label6 with label7;
    }

    public static final java.lang.String replaceTabsWithSpaces(java.lang.String, int)
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r6, $r7, $r8, $r11, $r12, $r14, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, $i10;
        java.lang.String r0, $r5, r13;
        char[] $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r13 = "";

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        i6 = i6 + 1;

        goto label1;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 1 goto label3;

        return r13;

     label3:
        $r1 = <org.fife.ui.rtextarea.RTextArea: java.lang.StringBuffer repTabsSB>;

        if $r1 != null goto label4;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        <org.fife.ui.rtextarea.RTextArea: java.lang.StringBuffer repTabsSB> = $r15;

     label4:
        $r2 = <org.fife.ui.rtextarea.RTextArea: java.lang.StringBuffer repTabsSB>;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i7 = 0;

     label5:
        $i8 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(9, i7);

        $i10 = (int) -1;

        if $i8 <= $i10 goto label7;

        if $i8 <= i7 goto label6;

        $r8 = <org.fife.ui.rtextarea.RTextArea: java.lang.StringBuffer repTabsSB>;

        $i5 = $i8 - i7;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r3, i7, $i5);

     label6:
        $r7 = <org.fife.ui.rtextarea.RTextArea: java.lang.StringBuffer repTabsSB>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        i7 = $i8 + 1;

        goto label5;

     label7:
        $i2 = lengthof $r3;

        if i7 >= $i2 goto label8;

        $r6 = <org.fife.ui.rtextarea.RTextArea: java.lang.StringBuffer repTabsSB>;

        $i3 = lengthof $r3;

        $i4 = $i3 - i7;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r3, i7, $i4);

     label8:
        $r4 = <org.fife.ui.rtextarea.RTextArea: java.lang.StringBuffer repTabsSB>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static void setActionProperties(int, java.lang.String, char, javax.swing.KeyStroke)
    {
        javax.swing.KeyStroke r2;
        int i0, $i2;
        char c1;
        java.lang.String r0;
        java.lang.Integer $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        c1 := @parameter2: char;

        r2 := @parameter3: javax.swing.KeyStroke;

        $r3 = new java.lang.Integer;

        $i2 = (int) c1;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i2);

        staticinvoke <org.fife.ui.rtextarea.RTextArea: void setActionProperties(int,java.lang.String,java.lang.Integer,javax.swing.KeyStroke)>(i0, r0, $r3, r2);

        return;
    }

    public static void setActionProperties(int, java.lang.String, java.lang.Integer, javax.swing.KeyStroke)
    {
        javax.swing.KeyStroke r1;
        int i0;
        java.lang.String r0;
        java.lang.Integer r2;
        org.fife.ui.rtextarea.RecordableTextAction r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Integer;

        r1 := @parameter3: javax.swing.KeyStroke;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label6;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label6;
        };

     label1:
        r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        goto label7;

     label2:
        r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        goto label7;

     label3:
        r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction pasteAction>;

        goto label7;

     label4:
        r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction deleteAction>;

        goto label7;

     label5:
        r3 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction selectAllAction>;

        goto label7;

     label6:
        return;

     label7:
        interfaceinvoke r3.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("Name", r0);

        interfaceinvoke r3.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", r0);

        interfaceinvoke r3.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("AcceleratorKey", r1);

        interfaceinvoke r3.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("MnemonicKey", r2);

        return;
    }

    public void setCaret(javax.swing.text.Caret)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.Caret r1;
        int[] $r2, $r4;
        int $i0, $i1;
        boolean $z0;
        org.fife.ui.rtextarea.ConfigurableCaret $r3;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: javax.swing.text.Caret;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setCaret(javax.swing.text.Caret)>(r1);

        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: int[] carets>;

        if $r2 == null goto label1;

        $z0 = r1 instanceof org.fife.ui.rtextarea.ConfigurableCaret;

        if $z0 == 0 goto label1;

        $r3 = (org.fife.ui.rtextarea.ConfigurableCaret) r1;

        $r4 = r0.<org.fife.ui.rtextarea.RTextArea: int[] carets>;

        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getTextMode()>();

        $i1 = $r4[$i0];

        virtualinvoke $r3.<org.fife.ui.rtextarea.ConfigurableCaret: void setStyle(int)>($i1);

     label1:
        return;
    }

    public void setCaretStyle(int, int)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.Caret $r1, $r2;
        int[] $r4;
        int i0, i1, $i2, $i3;
        boolean $z0;
        org.fife.ui.rtextarea.ConfigurableCaret $r3;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 < 0 goto label1;

        if i1 > 4 goto label1;

        $i2 = i1;

        goto label2;

     label1:
        $i2 = 4;

     label2:
        $r4 = r0.<org.fife.ui.rtextarea.RTextArea: int[] carets>;

        $r4[i0] = $i2;

        $i3 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getTextMode()>();

        if i0 != $i3 goto label3;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Caret getCaret()>();

        $z0 = $r1 instanceof org.fife.ui.rtextarea.ConfigurableCaret;

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Caret getCaret()>();

        $r3 = (org.fife.ui.rtextarea.ConfigurableCaret) $r2;

        virtualinvoke $r3.<org.fife.ui.rtextarea.ConfigurableCaret: void setStyle(int)>($i2);

     label3:
        return;
    }

    public void setDocument(javax.swing.text.Document)
    {
        org.fife.ui.rtextarea.RTextArea r1;
        java.lang.IllegalArgumentException $r6;
        org.fife.ui.rtextarea.RUndoManager $r2, $r3, $r5, $r7;
        javax.swing.text.Document r0, $r4;
        boolean $z0;

        r1 := @this: org.fife.ui.rtextarea.RTextArea;

        r0 := @parameter0: javax.swing.text.Document;

        $z0 = r0 instanceof org.fife.ui.rtextarea.RDocument;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("RTextArea requires instances of RDocument for its document");

        throw $r6;

     label1:
        $r2 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        if $r2 == null goto label2;

        $r4 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        if $r4 == null goto label2;

        $r5 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        interfaceinvoke $r4.<javax.swing.text.Document: void removeUndoableEditListener(javax.swing.event.UndoableEditListener)>($r5);

     label2:
        specialinvoke r1.<org.fife.ui.rtextarea.RTextAreaBase: void setDocument(javax.swing.text.Document)>(r0);

        $r7 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        if $r7 == null goto label3;

        $r3 = r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        interfaceinvoke r0.<javax.swing.text.Document: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r3);

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextArea: void discardAllEdits()>();

     label3:
        return;
    }

    public static synchronized void setIconGroup(org.fife.ui.rtextarea.IconGroup)
    {
        org.fife.ui.rtextarea.IconGroup r0;
        javax.swing.Icon $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        org.fife.ui.rtextarea.RecordableTextAction $r2, $r4, $r6, $r8, $r10, $r12, $r14;

        r0 := @parameter0: org.fife.ui.rtextarea.IconGroup;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.IconGroup: javax.swing.Icon getIcon(java.lang.String)>("cut");

        $r2 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        virtualinvoke $r2.<org.fife.ui.rtextarea.RecordableTextAction: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r1);

        $r3 = virtualinvoke r0.<org.fife.ui.rtextarea.IconGroup: javax.swing.Icon getIcon(java.lang.String)>("copy");

        $r4 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        virtualinvoke $r4.<org.fife.ui.rtextarea.RecordableTextAction: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r3);

        $r5 = virtualinvoke r0.<org.fife.ui.rtextarea.IconGroup: javax.swing.Icon getIcon(java.lang.String)>("paste");

        $r6 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction pasteAction>;

        virtualinvoke $r6.<org.fife.ui.rtextarea.RecordableTextAction: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r5);

        $r7 = virtualinvoke r0.<org.fife.ui.rtextarea.IconGroup: javax.swing.Icon getIcon(java.lang.String)>("delete");

        $r8 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction deleteAction>;

        virtualinvoke $r8.<org.fife.ui.rtextarea.RecordableTextAction: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r7);

        $r9 = virtualinvoke r0.<org.fife.ui.rtextarea.IconGroup: javax.swing.Icon getIcon(java.lang.String)>("undo");

        $r10 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction undoAction>;

        virtualinvoke $r10.<org.fife.ui.rtextarea.RecordableTextAction: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r9);

        $r11 = virtualinvoke r0.<org.fife.ui.rtextarea.IconGroup: javax.swing.Icon getIcon(java.lang.String)>("redo");

        $r12 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction redoAction>;

        virtualinvoke $r12.<org.fife.ui.rtextarea.RecordableTextAction: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r11);

        $r13 = virtualinvoke r0.<org.fife.ui.rtextarea.IconGroup: javax.swing.Icon getIcon(java.lang.String)>("selectall");

        $r14 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction selectAllAction>;

        virtualinvoke $r14.<org.fife.ui.rtextarea.RecordableTextAction: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r13);

        <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.IconGroup iconGroup> = r0;

        return;
    }

    public void setMarkAllHighlightColor(java.awt.Color)
    {
        java.awt.Color r3, r4;
        org.fife.ui.rtextarea.RTextArea r0;
        java.awt.Paint $r2;
        java.lang.String $r6;
        org.fife.ui.rtextarea.ChangeableHighlightPainter $r1, $r5;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r4 := @parameter0: java.awt.Color;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ChangeableHighlightPainter markAllHighlightPainter>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rtextarea.ChangeableHighlightPainter: java.awt.Paint getPaint()>();

        r3 = (java.awt.Color) $r2;

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<java.awt.Color: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        $r5 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ChangeableHighlightPainter markAllHighlightPainter>;

        virtualinvoke $r5.<org.fife.ui.rtextarea.ChangeableHighlightPainter: void setPaint(java.awt.Paint)>(r4);

        $r6 = r0.<org.fife.ui.rtextarea.RTextArea: java.lang.String markedWord>;

        if $r6 == null goto label1;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void repaint()>();

     label1:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("RTA.markAllColor", r3, r4);

     label2:
        return;
    }

    public void setPopupMenu(javax.swing.JPopupMenu)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.JPopupMenu r1;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: javax.swing.JPopupMenu;

        r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JPopupMenu popupMenu> = r1;

        r0.<org.fife.ui.rtextarea.RTextArea: boolean popupMenuCreated> = 1;

        return;
    }

    public void setRoundedSelectionEdges(boolean)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rtextarea.ChangeableHighlightPainter $r1;
        boolean $z0, z1;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: boolean getRoundedSelectionEdges()>();

        if $z0 == z1 goto label1;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ChangeableHighlightPainter markAllHighlightPainter>;

        virtualinvoke $r1.<org.fife.ui.rtextarea.ChangeableHighlightPainter: void setRoundedEdges(boolean)>(z1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setRoundedSelectionEdges(boolean)>(z1);

     label1:
        return;
    }

    public static void setSelectedOccurrenceText(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <org.fife.ui.rtextarea.RTextArea: java.lang.String selectedOccurrenceText> = r0;

        return;
    }

    public void setTextMode(int)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.Caret $r1;
        int[] $r2;
        int $i0, i1, $i2;
        boolean $z0;
        org.fife.ui.rtextarea.ConfigurableCaret $r3;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        i1 := @parameter0: int;

        if i1 == 0 goto label1;

        if i1 == 1 goto label1;

        i1 = 0;

     label1:
        $i2 = r0.<org.fife.ui.rtextarea.RTextArea: int textMode>;

        if $i2 == i1 goto label3;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Caret getCaret()>();

        $z0 = $r1 instanceof org.fife.ui.rtextarea.ConfigurableCaret;

        if $z0 == 0 goto label2;

        $r3 = (org.fife.ui.rtextarea.ConfigurableCaret) $r1;

        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: int[] carets>;

        $i0 = $r2[i1];

        virtualinvoke $r3.<org.fife.ui.rtextarea.ConfigurableCaret: void setStyle(int)>($i0);

     label2:
        r0.<org.fife.ui.rtextarea.RTextArea: int textMode> = i1;

     label3:
        return;
    }

    public void setToolTipSupplier(org.fife.ui.rtextarea.ToolTipSupplier)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rtextarea.ToolTipSupplier r1;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r1 := @parameter0: org.fife.ui.rtextarea.ToolTipSupplier;

        r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.ToolTipSupplier toolTipSupplier> = r1;

        return;
    }

    public final void setUI(javax.swing.plaf.TextUI)
    {
        javax.swing.plaf.TextUI $r2, r5;
        org.fife.ui.rtextarea.RTextAreaUI $r4;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.JPopupMenu $r1, $r3;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r5 := @parameter0: javax.swing.plaf.TextUI;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JPopupMenu popupMenu>;

        if $r1 == null goto label1;

        $r3 = r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.JPopupMenu popupMenu>;

        staticinvoke <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>($r3);

     label1:
        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.plaf.TextUI getUI()>();

        $r4 = (org.fife.ui.rtextarea.RTextAreaUI) $r2;

        if $r4 == null goto label2;

        virtualinvoke $r4.<org.fife.ui.rtextarea.RTextAreaUI: void installDefaults()>();

     label2:
        return;
    }

    public void undoLastAction()
    {
        org.fife.ui.rtextarea.RUndoManager $r1, $r2;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.undo.CannotUndoException $r3;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

     label1:
        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        $z0 = virtualinvoke $r1.<org.fife.ui.rtextarea.RUndoManager: boolean canUndo()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        virtualinvoke $r2.<org.fife.ui.rtextarea.RUndoManager: void undo()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<javax.swing.undo.CannotUndoException: void printStackTrace()>();

     label4:
        return;

        catch javax.swing.undo.CannotUndoException from label1 to label2 with label3;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.fife.ui.rtextarea.RUndoManager $r2, $r5;
        org.fife.ui.rtextarea.RTextArea r0;
        java.io.ObjectOutputStream r3;
        javax.swing.text.Document $r1, $r4;

        r0 := @this: org.fife.ui.rtextarea.RTextArea;

        r3 := @parameter0: java.io.ObjectOutputStream;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r2 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        interfaceinvoke $r1.<javax.swing.text.Document: void removeUndoableEditListener(javax.swing.event.UndoableEditListener)>($r2);

        virtualinvoke r3.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r4 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r5 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        interfaceinvoke $r4.<javax.swing.text.Document: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r5);

        return;
    }

    static org.fife.ui.rtextarea.RecordableTextAction access$000()
    {
        org.fife.ui.rtextarea.RecordableTextAction $r0;

        $r0 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction cutAction>;

        return $r0;
    }

    static org.fife.ui.rtextarea.RecordableTextAction access$100()
    {
        org.fife.ui.rtextarea.RecordableTextAction $r0;

        $r0 = <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction copyAction>;

        return $r0;
    }

    static org.fife.ui.rtextarea.RUndoManager access$200(org.fife.ui.rtextarea.RTextArea)
    {
        org.fife.ui.rtextarea.RUndoManager $r1;
        org.fife.ui.rtextarea.RTextArea r0;

        r0 := @parameter0: org.fife.ui.rtextarea.RTextArea;

        $r1 = r0.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RUndoManager undoManager>;

        return $r1;
    }

    static void <clinit>()
    {
        java.awt.Color $r0;

        <org.fife.ui.rtextarea.RTextArea: java.lang.String MSG> = "org.fife.ui.rtextarea.RTextArea";

        <org.fife.ui.rtextarea.RTextArea: int MAX_ACTION_CONSTANT> = 6;

        <org.fife.ui.rtextarea.RTextArea: int UNDO_ACTION> = 6;

        <org.fife.ui.rtextarea.RTextArea: int SELECT_ALL_ACTION> = 5;

        <org.fife.ui.rtextarea.RTextArea: int REDO_ACTION> = 4;

        <org.fife.ui.rtextarea.RTextArea: int PASTE_ACTION> = 3;

        <org.fife.ui.rtextarea.RTextArea: int DELETE_ACTION> = 2;

        <org.fife.ui.rtextarea.RTextArea: int CUT_ACTION> = 1;

        <org.fife.ui.rtextarea.RTextArea: int COPY_ACTION> = 0;

        <org.fife.ui.rtextarea.RTextArea: int MIN_ACTION_CONSTANT> = 0;

        <org.fife.ui.rtextarea.RTextArea: java.lang.String MARK_ALL_COLOR_PROPERTY> = "RTA.markAllColor";

        <org.fife.ui.rtextarea.RTextArea: int OVERWRITE_MODE> = 1;

        <org.fife.ui.rtextarea.RTextArea: int INSERT_MODE> = 0;

        $r0 = <java.awt.Color: java.awt.Color ORANGE>;

        <org.fife.ui.rtextarea.RTextArea: java.awt.Color DEFAULT_MARK_ALL_COLOR> = $r0;

        return;
    }
}
