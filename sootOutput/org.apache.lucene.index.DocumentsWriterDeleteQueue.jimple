final class org.apache.lucene.index.DocumentsWriterDeleteQueue extends java.lang.Object
{
    private volatile org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail;
    private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater tailUpdater;
    private final org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice;
    private final org.apache.lucene.index.BufferedDeletes globalBufferedDeletes;
    private final java.util.concurrent.locks.ReentrantLock globalBufferLock;
    final long generation;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void <init>(long)>(0L);

        return;
    }

    void <init>(long)
    {
        org.apache.lucene.index.BufferedDeletes $r1;
        long l0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        l0 := @parameter0: long;

        $r1 = new org.apache.lucene.index.BufferedDeletes;

        specialinvoke $r1.<org.apache.lucene.index.BufferedDeletes: void <init>()>();

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void <init>(org.apache.lucene.index.BufferedDeletes,long)>($r1, l0);

        return;
    }

    void <init>(org.apache.lucene.index.BufferedDeletes, long)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r4;
        org.apache.lucene.index.BufferedDeletes r2;
        java.util.concurrent.locks.ReentrantLock $r1;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        long l0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r3, $r5;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        r2 := @parameter0: org.apache.lucene.index.BufferedDeletes;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock> = $r1;

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes> = r2;

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: long generation> = l0;

        $r3 = new org.apache.lucene.index.DocumentsWriterDeleteQueue$Node;

        specialinvoke $r3.<org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: void <init>(java.lang.Object)>(null);

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail> = $r3;

        $r4 = new org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        specialinvoke $r4.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void <init>(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)>($r5);

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice> = $r4;

        return;
    }

    transient void addDelete(org.apache.lucene.search.Query[])
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$QueryArrayNode $r1;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        org.apache.lucene.search.Query[] r2;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        r2 := @parameter0: org.apache.lucene.search.Query[];

        $r1 = new org.apache.lucene.index.DocumentsWriterDeleteQueue$QueryArrayNode;

        specialinvoke $r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue$QueryArrayNode: void <init>(org.apache.lucene.search.Query[])>(r2);

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void add(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)>($r1);

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void tryApplyGlobalSlice()>();

        return;
    }

    transient void addDelete(org.apache.lucene.index.Term[])
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$TermArrayNode $r1;
        org.apache.lucene.index.Term[] r2;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        r2 := @parameter0: org.apache.lucene.index.Term[];

        $r1 = new org.apache.lucene.index.DocumentsWriterDeleteQueue$TermArrayNode;

        specialinvoke $r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue$TermArrayNode: void <init>(org.apache.lucene.index.Term[])>(r2);

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void add(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)>($r1);

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void tryApplyGlobalSlice()>();

        return;
    }

    void add(org.apache.lucene.index.Term, org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice r3;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r2;
        org.apache.lucene.index.Term r1;
        java.lang.AssertionError $r6;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r4, $r5;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$TermNode $r0;
        boolean $z0;

        r2 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r3 := @parameter1: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        $r0 = new org.apache.lucene.index.DocumentsWriterDeleteQueue$TermNode;

        specialinvoke $r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$TermNode: void <init>(org.apache.lucene.index.Term)>(r1);

        virtualinvoke r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void add(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)>($r0);

        r3.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail> = $r0;

        $z0 = <org.apache.lucene.index.DocumentsWriterDeleteQueue: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r3.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceHead>;

        $r4 = r3.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        if $r5 != $r4 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("slice head and tail must differ after add");

        throw $r6;

     label1:
        virtualinvoke r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void tryApplyGlobalSlice()>();

        return;
    }

    void add(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r5, $r6;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r1, $r2, $r3, r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        r4 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node;

     label1:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        $r3 = $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node next>;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        if $r1 != $r2 goto label3;

        if $r3 == null goto label2;

        $r6 = <org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater tailUpdater>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r2, $r3);

        goto label3;

     label2:
        $z0 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: boolean casNext(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node,org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)>(null, r4);

        if $z0 == 0 goto label3;

        $r5 = <org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater tailUpdater>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r2, r4);

        return;

     label3:
        goto label1;
    }

    boolean anyChanges()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r4, $r5;
        java.lang.Throwable $r10;
        org.apache.lucene.index.BufferedDeletes $r2;
        java.util.concurrent.locks.ReentrantLock $r1, $r3, $r11;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.index.BufferedDeletes: boolean any()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $z1 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r7 = $r5.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        if $r7 != $r6 goto label2;

        $r8 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        $r9 = $r8.<org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node next>;

        if $r9 == null goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $z2;

     label5:
        $r10 := @caughtexception;

     label6:
        $r11 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void tryApplyGlobalSlice()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r2, $r5;
        java.lang.Throwable $r7;
        org.apache.lucene.index.BufferedDeletes $r6;
        java.util.concurrent.locks.ReentrantLock $r1, $r3, $r8;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        java.lang.Integer $r4;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: boolean tryLock()>();

        if $z0 == 0 goto label5;

     label1:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $z1 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: boolean updateSlice(org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)>($r2);

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        $r4 = <org.apache.lucene.index.BufferedDeletes: java.lang.Integer MAX_INT>;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r5.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void apply(org.apache.lucene.index.BufferedDeletes,int)>($r6, $i0);

     label2:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        $r8 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    org.apache.lucene.index.FrozenBufferedDeletes freezeGlobalBuffer(org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice r3, $r4, $r10, $r12;
        java.lang.Throwable $r14;
        org.apache.lucene.index.BufferedDeletes $r7, $r8, $r13;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node r2, $r5;
        java.lang.Integer $r11;
        org.apache.lucene.index.FrozenBufferedDeletes $r6;
        int $i0;
        java.util.concurrent.locks.ReentrantLock $r1, $r9, $r15;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        r3 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        if r3 == null goto label1;

        r3.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail> = r2;

     label1:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r5 = $r4.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        if $r5 == r2 goto label2;

        $r10 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r10.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail> = r2;

        $r12 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r13 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        $r11 = <org.apache.lucene.index.BufferedDeletes: java.lang.Integer MAX_INT>;

        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        virtualinvoke $r12.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void apply(org.apache.lucene.index.BufferedDeletes,int)>($r13, $i0);

     label2:
        $r6 = new org.apache.lucene.index.FrozenBufferedDeletes;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        specialinvoke $r6.<org.apache.lucene.index.FrozenBufferedDeletes: void <init>(org.apache.lucene.index.BufferedDeletes,boolean)>($r7, 0);

        $r8 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        virtualinvoke $r8.<org.apache.lucene.index.BufferedDeletes: void clear()>();

     label3:
        $r9 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r6;

     label4:
        $r14 := @caughtexception;

     label5:
        $r15 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r14;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice newSlice()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r2;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r1;

        r1 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r0 = new org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        $r2 = r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        specialinvoke $r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void <init>(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)>($r2);

        return $r0;
    }

    boolean updateSlice(org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r1;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r2, $r3, $r4;

        r1 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        $r2 = r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        if $r3 == $r2 goto label1;

        $r4 = r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail> = $r4;

        return 1;

     label1:
        return 0;
    }

    public int numGlobalTermDeletes()
    {
        org.apache.lucene.index.BufferedDeletes $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        int $i0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        $r2 = $r1.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicInteger numTermDeletes>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    void clear()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r3, $r4;
        java.lang.Throwable $r7;
        org.apache.lucene.index.BufferedDeletes $r5;
        java.util.concurrent.locks.ReentrantLock $r1, $r6, $r8;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node r2;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r3.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail> = r2;

        $r4.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceHead> = r2;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        virtualinvoke $r5.<org.apache.lucene.index.BufferedDeletes: void clear()>();

     label2:
        $r6 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        $r8 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean forceApplyGlobalSlice()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r3, $r7, $r9;
        java.lang.Throwable $r11;
        org.apache.lucene.index.BufferedDeletes $r5, $r10;
        java.util.concurrent.locks.ReentrantLock $r1, $r6, $r12;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node r2, $r4;
        java.lang.Integer $r8;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node tail>;

     label1:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r4 = $r3.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        if $r4 == r2 goto label2;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r7.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail> = r2;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice globalSlice>;

        $r10 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        $r8 = <org.apache.lucene.index.BufferedDeletes: java.lang.Integer MAX_INT>;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        virtualinvoke $r9.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void apply(org.apache.lucene.index.BufferedDeletes,int)>($r10, $i0);

     label2:
        $r5 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        $z0 = virtualinvoke $r5.<org.apache.lucene.index.BufferedDeletes: boolean any()>();

     label3:
        $r6 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $z0;

     label4:
        $r11 := @caughtexception;

     label5:
        $r12 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getBufferedDeleteTermsSize()
    {
        java.lang.Throwable $r5;
        org.apache.lucene.index.BufferedDeletes $r2;
        java.util.concurrent.locks.ReentrantLock $r1, $r4, $r6;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        java.util.Map $r3;
        int $i0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: boolean forceApplyGlobalSlice()>();

        $r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        $r3 = $r2.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

     label2:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $i0;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.locks.ReentrantLock globalBufferLock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long bytesUsed()
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        org.apache.lucene.index.BufferedDeletes $r1;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        long $l0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.BufferedDeletes globalBufferedDeletes>;

        $r2 = $r1.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        long $l0;
        java.lang.String $r5;

        r2 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DWDQ: [ generation: ");

        $l0 = r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: long generation>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/DocumentsWriterDeleteQueue;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DocumentsWriterDeleteQueue: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lorg/apache/lucene/index/DocumentsWriterDeleteQueue;", class "Lorg/apache/lucene/index/DocumentsWriterDeleteQueue$Node;", "tail");

        <org.apache.lucene.index.DocumentsWriterDeleteQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater tailUpdater> = $r1;

        return;
    }
}
