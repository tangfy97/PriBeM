public class org.codehaus.groovy.antlr.LexerFrame extends javax.swing.JFrame implements java.awt.event.ActionListener
{
    javax.swing.JSplitPane jSplitPane1;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JTextPane tokenPane;
    javax.swing.JButton jbutton;
    javax.swing.JPanel mainPanel;
    javax.swing.JTextArea scriptPane;
    javax.swing.border.Border border1;
    javax.swing.border.Border border2;
    java.lang.Class lexerClass;
    java.util.Hashtable tokens;
    private javax.swing.Action loadFileAction;
    static java.lang.Class class$java$io$InputStream;
    static java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyLexer;
    static java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyTokenTypes;

    public void <init>(java.lang.Class, java.lang.Class)
    {
        javax.swing.JSplitPane $r1;
        org.codehaus.groovy.antlr.LexerFrame$1 $r16;
        org.codehaus.groovy.antlr.LexerFrame r0;
        javax.swing.Action $r14;
        org.codehaus.groovy.antlr.HScrollableTextPane $r4;
        org.codehaus.groovy.antlr.LexerFrame$2 $r10;
        java.awt.BorderLayout $r7;
        java.util.Hashtable $r9;
        javax.swing.JButton $r5, $r15, $r17;
        javax.swing.JPopupMenu $r13;
        java.lang.Exception $r18;
        javax.swing.JScrollPane $r2, $r3;
        java.lang.Class r11, r12;
        javax.swing.JTextArea $r8;
        javax.swing.JPanel $r6;

        r0 := @this: org.codehaus.groovy.antlr.LexerFrame;

        r11 := @parameter0: java.lang.Class;

        r12 := @parameter1: java.lang.Class;

        specialinvoke r0.<javax.swing.JFrame: void <init>(java.lang.String)>("Token Steam Viewer");

        $r1 = new javax.swing.JSplitPane;

        specialinvoke $r1.<javax.swing.JSplitPane: void <init>()>();

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JSplitPane jSplitPane1> = $r1;

        $r2 = new javax.swing.JScrollPane;

        specialinvoke $r2.<javax.swing.JScrollPane: void <init>()>();

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane1> = $r2;

        $r3 = new javax.swing.JScrollPane;

        specialinvoke $r3.<javax.swing.JScrollPane: void <init>()>();

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane2> = $r3;

        $r4 = new org.codehaus.groovy.antlr.HScrollableTextPane;

        specialinvoke $r4.<org.codehaus.groovy.antlr.HScrollableTextPane: void <init>()>();

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane> = $r4;

        $r5 = new javax.swing.JButton;

        specialinvoke $r5.<javax.swing.JButton: void <init>(java.lang.String)>("open");

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JButton jbutton> = $r5;

        $r6 = new javax.swing.JPanel;

        $r7 = new java.awt.BorderLayout;

        specialinvoke $r7.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $r6.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r7);

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JPanel mainPanel> = $r6;

        $r8 = new javax.swing.JTextArea;

        specialinvoke $r8.<javax.swing.JTextArea: void <init>()>();

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane> = $r8;

        $r9 = new java.util.Hashtable;

        specialinvoke $r9.<java.util.Hashtable: void <init>()>();

        r0.<org.codehaus.groovy.antlr.LexerFrame: java.util.Hashtable tokens> = $r9;

        $r10 = new org.codehaus.groovy.antlr.LexerFrame$2;

        specialinvoke $r10.<org.codehaus.groovy.antlr.LexerFrame$2: void <init>(org.codehaus.groovy.antlr.LexerFrame,java.lang.String)>(r0, "Open File...");

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.Action loadFileAction> = $r10;

        r0.<org.codehaus.groovy.antlr.LexerFrame: java.lang.Class lexerClass> = r11;

     label1:
        specialinvoke r0.<org.codehaus.groovy.antlr.LexerFrame: void jbInit()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.LexerFrame: void setSize(int,int)>(500, 500);

        specialinvoke r0.<org.codehaus.groovy.antlr.LexerFrame: void listTokens(java.lang.Class)>(r12);

        $r13 = new javax.swing.JPopupMenu;

        specialinvoke $r13.<javax.swing.JPopupMenu: void <init>()>();

        $r14 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.Action loadFileAction>;

        virtualinvoke $r13.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.Action)>($r14);

        $r15 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JButton jbutton>;

        virtualinvoke $r15.<javax.swing.JButton: void setSize(int,int)>(30, 30);

        $r17 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JButton jbutton>;

        $r16 = new org.codehaus.groovy.antlr.LexerFrame$1;

        specialinvoke $r16.<org.codehaus.groovy.antlr.LexerFrame$1: void <init>(org.codehaus.groovy.antlr.LexerFrame,javax.swing.JPopupMenu)>(r0, $r13);

        virtualinvoke $r17.<javax.swing.JButton: void addMouseListener(java.awt.event.MouseListener)>($r16);

        virtualinvoke r0.<org.codehaus.groovy.antlr.LexerFrame: void setDefaultCloseOperation(int)>(3);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void listTokens(java.lang.Class) throws java.lang.Exception
    {
        org.codehaus.groovy.antlr.LexerFrame r2;
        java.lang.reflect.Field $r3, $r6;
        java.lang.reflect.Field[] $r1;
        int $i0, i1;
        java.lang.Class r0;
        java.lang.Object $r5;
        java.lang.String $r7;
        java.util.Hashtable $r4;

        r2 := @this: org.codehaus.groovy.antlr.LexerFrame;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r4 = r2.<org.codehaus.groovy.antlr.LexerFrame: java.util.Hashtable tokens>;

        $r3 = $r1[i1];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r6 = $r1[i1];

        $r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.codehaus.groovy.antlr.LexerFrame r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String $r8;
        groovyjarjarantlr.Token r4;
        javax.swing.JComponent $r2;
        javax.swing.text.BadLocationException $r11;
        java.awt.event.ActionEvent r0;
        java.lang.Object $r1, $r3;
        javax.swing.JTextArea $r6, $r7, $r9, $r10;

        r5 := @this: org.codehaus.groovy.antlr.LexerFrame;

        r0 := @parameter0: java.awt.event.ActionEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.Object getSource()>();

        $r2 = (javax.swing.JComponent) $r1;

        $r3 = virtualinvoke $r2.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("token");

        r4 = (groovyjarjarantlr.Token) $r3;

        $i0 = virtualinvoke r4.<groovyjarjarantlr.Token: int getType()>();

        if $i0 != 1 goto label1;

        $r10 = r5.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        virtualinvoke $r10.<javax.swing.JTextArea: void select(int,int)>(0, 0);

        return;

     label1:
        $r6 = r5.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        $i1 = virtualinvoke r4.<groovyjarjarantlr.Token: int getLine()>();

        $i2 = $i1 - 1;

        $i3 = virtualinvoke $r6.<javax.swing.JTextArea: int getLineStartOffset(int)>($i2);

        $i4 = virtualinvoke r4.<groovyjarjarantlr.Token: int getColumn()>();

        $i5 = $i3 + $i4;

        i8 = $i5 - 1;

        $r7 = r5.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        $r8 = virtualinvoke r4.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $i6 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i7 = i8 + $i6;

        virtualinvoke $r7.<javax.swing.JTextArea: void select(int,int)>(i8, $i7);

        $r9 = r5.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        virtualinvoke $r9.<javax.swing.JTextArea: void requestFocus()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

     label4:
        return;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    private void scanScript(java.io.File) throws java.lang.Exception
    {
        javax.swing.JToggleButton $r23;
        org.codehaus.groovy.antlr.LexerFrame r0;
        java.lang.Integer $r25;
        groovyjarjarantlr.Token $r22;
        javax.swing.text.Document $r17, $r19;
        groovyjarjarantlr.CharScanner $r20;
        java.awt.Insets $r29;
        java.lang.Object[] $r8;
        java.lang.reflect.Constructor $r7;
        int $i0, $i1, i2, $i3, $i4;
        javax.swing.JTextPane $r11, $r12, $r14, $r15, $r16, $r18;
        java.lang.String $r27, $r28;
        java.util.Hashtable $r24;
        javax.swing.ButtonGroup $r13;
        java.lang.Class[] $r4;
        java.io.FileInputStream $r9;
        java.io.File r2;
        java.lang.Class $r5, $r6, $r21;
        java.lang.Object $r10, $r26;
        java.io.FileReader $r1;
        javax.swing.JTextArea $r3;

        r0 := @this: org.codehaus.groovy.antlr.LexerFrame;

        r2 := @parameter0: java.io.File;

        $r3 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        $r1 = new java.io.FileReader;

        specialinvoke $r1.<java.io.FileReader: void <init>(java.io.File)>(r2);

        virtualinvoke $r3.<javax.swing.JTextArea: void read(java.io.Reader,java.lang.Object)>($r1, null);

        $r6 = r0.<org.codehaus.groovy.antlr.LexerFrame: java.lang.Class lexerClass>;

        $r4 = newarray (java.lang.Class)[1];

        $r5 = <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$java$io$InputStream>;

        if $r5 != null goto label1;

        $r21 = staticinvoke <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$(java.lang.String)>("java.io.InputStream");

        <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$java$io$InputStream> = $r21;

        goto label2;

     label1:
        $r21 = <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$java$io$InputStream>;

     label2:
        $r4[0] = $r21;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r4);

        $r8 = newarray (java.lang.Object)[1];

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        $r8[0] = $r9;

        $r10 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

        $r20 = (groovyjarjarantlr.CharScanner) $r10;

        $r11 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r11.<javax.swing.JTextPane: void setEditable(boolean)>(1);

        $r12 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r12.<javax.swing.JTextPane: void setText(java.lang.String)>("");

        i2 = 1;

        $r13 = new javax.swing.ButtonGroup;

        specialinvoke $r13.<javax.swing.ButtonGroup: void <init>()>();

     label3:
        $r22 = virtualinvoke $r20.<groovyjarjarantlr.CharScanner: groovyjarjarantlr.Token nextToken()>();

        $r23 = new javax.swing.JToggleButton;

        $r24 = r0.<org.codehaus.groovy.antlr.LexerFrame: java.util.Hashtable tokens>;

        $r25 = new java.lang.Integer;

        $i3 = virtualinvoke $r22.<groovyjarjarantlr.Token: int getType()>();

        specialinvoke $r25.<java.lang.Integer: void <init>(int)>($i3);

        $r26 = virtualinvoke $r24.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r25);

        $r27 = (java.lang.String) $r26;

        specialinvoke $r23.<javax.swing.JToggleButton: void <init>(java.lang.String)>($r27);

        virtualinvoke $r13.<javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>($r23);

        virtualinvoke $r23.<javax.swing.JToggleButton: void addActionListener(java.awt.event.ActionListener)>(r0);

        $r28 = virtualinvoke $r22.<groovyjarjarantlr.Token: java.lang.String getText()>();

        virtualinvoke $r23.<javax.swing.JToggleButton: void setToolTipText(java.lang.String)>($r28);

        virtualinvoke $r23.<javax.swing.JToggleButton: void putClientProperty(java.lang.Object,java.lang.Object)>("token", $r22);

        $r29 = new java.awt.Insets;

        specialinvoke $r29.<java.awt.Insets: void <init>(int,int,int,int)>(0, 1, 0, 1);

        virtualinvoke $r23.<javax.swing.JToggleButton: void setMargin(java.awt.Insets)>($r29);

        virtualinvoke $r23.<javax.swing.JToggleButton: void setFocusPainted(boolean)>(0);

        $i4 = virtualinvoke $r22.<groovyjarjarantlr.Token: int getLine()>();

        if $i4 <= i2 goto label4;

        $r16 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        $r17 = virtualinvoke $r16.<javax.swing.JTextPane: javax.swing.text.Document getDocument()>();

        $r18 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        $r19 = virtualinvoke $r18.<javax.swing.JTextPane: javax.swing.text.Document getDocument()>();

        $i1 = interfaceinvoke $r19.<javax.swing.text.Document: int getLength()>();

        interfaceinvoke $r17.<javax.swing.text.Document: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>($i1, "\n", null);

        i2 = virtualinvoke $r22.<groovyjarjarantlr.Token: int getLine()>();

     label4:
        specialinvoke r0.<org.codehaus.groovy.antlr.LexerFrame: void insertComponent(javax.swing.JComponent)>($r23);

        $i0 = virtualinvoke $r22.<groovyjarjarantlr.Token: int getType()>();

        if $i0 != 1 goto label5;

        goto label6;

     label5:
        goto label3;

     label6:
        $r14 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r14.<javax.swing.JTextPane: void setEditable(boolean)>(0);

        $r15 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r15.<javax.swing.JTextPane: void setCaretPosition(int)>(0);

        return;
    }

    private void insertComponent(javax.swing.JComponent)
    {
        org.codehaus.groovy.antlr.LexerFrame r0;
        int $i0, $i1, $i2;
        javax.swing.JTextPane $r1, $r3, $r5, $r6, $r9, $r11;
        javax.swing.JComponent r8;
        javax.swing.text.BadLocationException $r12;
        java.lang.Exception $r10;
        javax.swing.text.Document $r2, $r4, $r7;

        r0 := @this: org.codehaus.groovy.antlr.LexerFrame;

        r8 := @parameter0: javax.swing.JComponent;

     label1:
        $r1 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        $r2 = virtualinvoke $r1.<javax.swing.JTextPane: javax.swing.text.Document getDocument()>();

        $r3 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        $r4 = virtualinvoke $r3.<javax.swing.JTextPane: javax.swing.text.Document getDocument()>();

        $i0 = interfaceinvoke $r4.<javax.swing.text.Document: int getLength()>();

        interfaceinvoke $r2.<javax.swing.text.Document: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>($i0, " ", null);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        $r6 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        $r5 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        $r7 = virtualinvoke $r5.<javax.swing.JTextPane: javax.swing.text.Document getDocument()>();

        $i1 = interfaceinvoke $r7.<javax.swing.text.Document: int getLength()>();

        $i2 = $i1 - 1;

        virtualinvoke $r6.<javax.swing.JTextPane: void setCaretPosition(int)>($i2);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r11 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r11.<javax.swing.JTextPane: void setCaretPosition(int)>(0);

     label7:
        $r9 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r9.<javax.swing.JTextPane: void insertComponent(java.awt.Component)>(r8);

        return;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    private void jbInit() throws java.lang.Exception
    {
        org.codehaus.groovy.antlr.LexerFrame r0;
        javax.swing.border.Border $r1, $r2, $r12, $r14;
        java.awt.Font $r6;
        java.awt.Dimension $r16;
        javax.swing.JPanel $r19, $r21, $r23;
        java.awt.Insets $r9;
        javax.swing.JSplitPane $r3, $r17, $r18, $r25, $r30, $r38;
        javax.swing.JTextPane $r4, $r5, $r28;
        java.awt.Container $r22;
        javax.swing.JButton $r20;
        javax.swing.JScrollPane $r13, $r15, $r24, $r26, $r29, $r31, $r35, $r37;
        javax.swing.JLabel $r34, $r36;
        javax.swing.JTextArea $r7, $r8, $r10, $r11, $r33;
        javax.swing.JViewport $r27, $r32;

        r0 := @this: org.codehaus.groovy.antlr.LexerFrame;

        $r1 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.border.Border border1> = $r1;

        $r2 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.border.Border border2> = $r2;

        $r3 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JSplitPane jSplitPane1>;

        virtualinvoke $r3.<javax.swing.JSplitPane: void setOrientation(int)>(0);

        $r4 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r4.<javax.swing.JTextPane: void setEditable(boolean)>(0);

        $r5 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r5.<javax.swing.JTextPane: void setText(java.lang.String)>("");

        $r7 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        $r6 = new java.awt.Font;

        specialinvoke $r6.<java.awt.Font: void <init>(java.lang.String,int,int)>("DialogInput", 0, 12);

        virtualinvoke $r7.<javax.swing.JTextArea: void setFont(java.awt.Font)>($r6);

        $r8 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        virtualinvoke $r8.<javax.swing.JTextArea: void setEditable(boolean)>(0);

        $r10 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        $r9 = new java.awt.Insets;

        specialinvoke $r9.<java.awt.Insets: void <init>(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r10.<javax.swing.JTextArea: void setMargin(java.awt.Insets)>($r9);

        $r11 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        virtualinvoke $r11.<javax.swing.JTextArea: void setText(java.lang.String)>("");

        $r13 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane1>;

        $r12 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.border.Border border1>;

        virtualinvoke $r13.<javax.swing.JScrollPane: void setBorder(javax.swing.border.Border)>($r12);

        $r15 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane2>;

        $r14 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.border.Border border1>;

        virtualinvoke $r15.<javax.swing.JScrollPane: void setBorder(javax.swing.border.Border)>($r14);

        $r17 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JSplitPane jSplitPane1>;

        $r16 = new java.awt.Dimension;

        specialinvoke $r16.<java.awt.Dimension: void <init>(int,int)>(800, 600);

        virtualinvoke $r17.<javax.swing.JSplitPane: void setMinimumSize(java.awt.Dimension)>($r16);

        $r19 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JPanel mainPanel>;

        $r18 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JSplitPane jSplitPane1>;

        virtualinvoke $r19.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r18, "Center");

        $r21 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JPanel mainPanel>;

        $r20 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JButton jbutton>;

        virtualinvoke $r21.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r20, "North");

        $r22 = virtualinvoke r0.<org.codehaus.groovy.antlr.LexerFrame: java.awt.Container getContentPane()>();

        $r23 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JPanel mainPanel>;

        virtualinvoke $r22.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r23);

        $r25 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JSplitPane jSplitPane1>;

        $r24 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane1>;

        virtualinvoke $r25.<javax.swing.JSplitPane: void add(java.awt.Component,java.lang.Object)>($r24, "left");

        $r26 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane1>;

        $r27 = virtualinvoke $r26.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r28 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextPane tokenPane>;

        virtualinvoke $r27.<javax.swing.JViewport: void add(java.awt.Component,java.lang.Object)>($r28, null);

        $r30 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JSplitPane jSplitPane1>;

        $r29 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane2>;

        virtualinvoke $r30.<javax.swing.JSplitPane: void add(java.awt.Component,java.lang.Object)>($r29, "right");

        $r31 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane2>;

        $r32 = virtualinvoke $r31.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r33 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JTextArea scriptPane>;

        virtualinvoke $r32.<javax.swing.JViewport: void add(java.awt.Component,java.lang.Object)>($r33, null);

        $r35 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane1>;

        $r34 = new javax.swing.JLabel;

        specialinvoke $r34.<javax.swing.JLabel: void <init>(java.lang.String)>(" Token Stream:");

        virtualinvoke $r35.<javax.swing.JScrollPane: void setColumnHeaderView(java.awt.Component)>($r34);

        $r37 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JScrollPane jScrollPane2>;

        $r36 = new javax.swing.JLabel;

        specialinvoke $r36.<javax.swing.JLabel: void <init>(java.lang.String)>(" Input Script:");

        virtualinvoke $r37.<javax.swing.JScrollPane: void setColumnHeaderView(java.awt.Component)>($r36);

        $r38 = r0.<org.codehaus.groovy.antlr.LexerFrame: javax.swing.JSplitPane jSplitPane1>;

        virtualinvoke $r38.<javax.swing.JSplitPane: void setResizeWeight(double)>(0.5);

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        org.codehaus.groovy.antlr.LexerFrame $r6;
        java.lang.String[] r5;
        java.lang.Exception $r4;
        java.lang.Class $r1, $r2, $r3, $r7, $r8, $r9;
        java.lang.String $r0;

        r5 := @parameter0: java.lang.String[];

     label1:
        $r0 = staticinvoke <javax.swing.UIManager: java.lang.String getSystemLookAndFeelClassName()>();

        staticinvoke <javax.swing.UIManager: void setLookAndFeel(java.lang.String)>($r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r6 = new org.codehaus.groovy.antlr.LexerFrame;

        $r1 = <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyLexer>;

        if $r1 != null goto label5;

        $r3 = staticinvoke <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.antlr.parser.GroovyLexer");

        $r7 = $r3;

        <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyLexer> = $r3;

        goto label6;

     label5:
        $r7 = <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyLexer>;

     label6:
        $r2 = <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyTokenTypes>;

        if $r2 != null goto label7;

        $r8 = staticinvoke <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.antlr.parser.GroovyTokenTypes");

        $r9 = $r8;

        <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyTokenTypes> = $r8;

        goto label8;

     label7:
        $r9 = <org.codehaus.groovy.antlr.LexerFrame: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyTokenTypes>;

     label8:
        specialinvoke $r6.<org.codehaus.groovy.antlr.LexerFrame: void <init>(java.lang.Class,java.lang.Class)>($r7, $r9);

        virtualinvoke $r6.<org.codehaus.groovy.antlr.LexerFrame: void setVisible(boolean)>(1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void access$000(org.codehaus.groovy.antlr.LexerFrame, java.io.File) throws java.lang.Exception
    {
        org.codehaus.groovy.antlr.LexerFrame r0;
        java.io.File r1;

        r0 := @parameter0: org.codehaus.groovy.antlr.LexerFrame;

        r1 := @parameter1: java.io.File;

        specialinvoke r0.<org.codehaus.groovy.antlr.LexerFrame: void scanScript(java.io.File)>(r1);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
