public class org.apache.batik.bridge.SVGAltGlyphElementBridge extends org.apache.batik.bridge.AbstractSVGBridge implements org.apache.batik.bridge.ErrorConstants
{
    public static final java.text.AttributedCharacterIterator$Attribute PAINT_INFO;

    public void <init>()
    {
        org.apache.batik.bridge.SVGAltGlyphElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAltGlyphElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGAltGlyphElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAltGlyphElementBridge;

        return "altGlyph";
    }

    public org.apache.batik.gvt.font.Glyph[] createAltGlyphArray(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, float, java.text.AttributedCharacterIterator)
    {
        org.w3c.dom.Document $r7, $r8;
        org.apache.batik.bridge.BridgeException $r33;
        org.apache.batik.bridge.BridgeContext r2;
        org.apache.batik.bridge.UserAgent $r36;
        short $s1;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r13, $r14, $r15, $r16, $r22, $r28, $r30, $r34, $r35;
        org.apache.batik.gvt.font.Glyph $r25, $r29, $r32;
        org.apache.batik.dom.svg.SVGOMDocument r39, r40;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, z8, z9, z10, z11, $z12, $z13;
        java.text.AttributedCharacterIterator r24;
        float f0;
        org.apache.batik.gvt.font.Glyph[] r38, r43, r45;
        org.w3c.dom.Node $r9, $r12, $r18, $r20, $r27;
        int $i0, $i2, $i3, $i4, i5, i6, i7, i8;
        org.w3c.dom.NodeList $r11, $r17, $r19, $r26;
        org.w3c.dom.Element r0, r10, r21, $r31, r37, $r41, r42, r44, r46;
        org.apache.batik.bridge.SVGAltGlyphElementBridge r23;

        r23 := @this: org.apache.batik.bridge.SVGAltGlyphElementBridge;

        r2 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        f0 := @parameter2: float;

        r24 := @parameter3: java.text.AttributedCharacterIterator;

        $r1 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r0);

        r37 = null;

     label01:
        r37 = virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>(r0, $r1);

     label02:
        goto label04;

     label03:
        $r33 := @caughtexception;

        $r34 = "uri.unsecure";

        $r35 = virtualinvoke $r33.<org.apache.batik.bridge.BridgeException: java.lang.String getCode()>();

        $z6 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z6 == 0 goto label04;

        $r36 = virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r36.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r33);

     label04:
        if r37 != null goto label05;

        return null;

     label05:
        $r3 = "http://www.w3.org/2000/svg";

        $r4 = interfaceinvoke r37.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label06;

        return null;

     label06:
        $r5 = interfaceinvoke r37.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("glyph");

        if $z1 == 0 goto label08;

        $r32 = specialinvoke r23.<org.apache.batik.bridge.SVGAltGlyphElementBridge: org.apache.batik.gvt.font.Glyph getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)>(r2, $r1, r0, f0, r24);

        if $r32 != null goto label07;

        return null;

     label07:
        r38 = newarray (org.apache.batik.gvt.font.Glyph)[1];

        r38[0] = $r32;

        return r38;

     label08:
        $r6 = interfaceinvoke r37.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("altGlyphDef");

        if $z2 == 0 goto label31;

        $r7 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r39 = (org.apache.batik.dom.svg.SVGOMDocument) $r7;

        $r8 = interfaceinvoke r37.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r40 = (org.apache.batik.dom.svg.SVGOMDocument) $r8;

        if r40 != r39 goto label09;

        $z13 = 1;

        $z12 = 1;

        goto label10;

     label09:
        $z13 = 0;

        $z12 = 0;

     label10:
        z3 = $z12;

        if $z13 == 0 goto label11;

        $r41 = r37;

        goto label12;

     label11:
        $r9 = virtualinvoke r39.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>(r37, 1);

        $r41 = (org.w3c.dom.Element) $r9;

     label12:
        r10 = $r41;

        if z3 != 0 goto label13;

        $r30 = staticinvoke <org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI(org.w3c.dom.Node)>(r0);

        $r31 = virtualinvoke r39.<org.apache.batik.dom.svg.SVGOMDocument: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "g");

        interfaceinvoke $r31.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r41);

        interfaceinvoke $r31.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "xml:base", $r30);

        staticinvoke <org.apache.batik.bridge.CSSUtilities: void computeStyleAndURIs(org.w3c.dom.Element,org.w3c.dom.Element,java.lang.String)>(r37, $r41, $r1);

     label13:
        $r11 = interfaceinvoke r10.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        z8 = 0;

        $i0 = interfaceinvoke $r11.<org.w3c.dom.NodeList: int getLength()>();

        i5 = 0;

        goto label16;

     label14:
        $r12 = interfaceinvoke $r11.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i5);

        $s1 = interfaceinvoke $r12.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label15;

        r42 = (org.w3c.dom.Element) $r12;

        $r13 = "http://www.w3.org/2000/svg";

        $r14 = interfaceinvoke r42.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z4 == 0 goto label15;

        $r15 = "glyphRef";

        $r16 = interfaceinvoke r42.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z5 == 0 goto label15;

        z8 = 1;

        goto label17;

     label15:
        i5 = i5 + 1;

     label16:
        if i5 < $i0 goto label14;

     label17:
        if z8 == 0 goto label21;

        $r26 = interfaceinvoke r10.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "glyphRef");

        $i4 = interfaceinvoke $r26.<org.w3c.dom.NodeList: int getLength()>();

        r43 = newarray (org.apache.batik.gvt.font.Glyph)[$i4];

        i6 = 0;

        goto label20;

     label18:
        $r27 = interfaceinvoke $r26.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i6);

        r44 = (org.w3c.dom.Element) $r27;

        $r28 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r44);

        $r29 = specialinvoke r23.<org.apache.batik.bridge.SVGAltGlyphElementBridge: org.apache.batik.gvt.font.Glyph getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)>(r2, $r28, r44, f0, r24);

        if $r29 != null goto label19;

        return null;

     label19:
        r43[i6] = $r29;

        i6 = i6 + 1;

     label20:
        if i6 < $i4 goto label18;

        return r43;

     label21:
        $r17 = interfaceinvoke r10.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "altGlyphItem");

        $i2 = interfaceinvoke $r17.<org.w3c.dom.NodeList: int getLength()>();

        if $i2 <= 0 goto label31;

        z9 = 0;

        z11 = 0;

        z10 = 0;

        r45 = null;

        i7 = 0;

        goto label28;

     label22:
        $r18 = interfaceinvoke $r17.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i7);

        r46 = (org.w3c.dom.Element) $r18;

        $r19 = interfaceinvoke r46.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "glyphRef");

        $i3 = interfaceinvoke $r19.<org.w3c.dom.NodeList: int getLength()>();

        r45 = newarray (org.apache.batik.gvt.font.Glyph)[$i3];

        z9 = 1;

        z11 = 1;

        z10 = 1;

        i8 = 0;

        goto label26;

     label23:
        $r20 = interfaceinvoke $r19.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i8);

        r21 = (org.w3c.dom.Element) $r20;

        $r22 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r21);

        $r25 = specialinvoke r23.<org.apache.batik.bridge.SVGAltGlyphElementBridge: org.apache.batik.gvt.font.Glyph getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)>(r2, $r22, r21, f0, r24);

        if $r25 == null goto label24;

        r45[i8] = $r25;

        goto label25;

     label24:
        z9 = 0;

        z11 = 0;

        z10 = 0;

        goto label27;

     label25:
        i8 = i8 + 1;

     label26:
        if i8 < $i3 goto label23;

     label27:
        i7 = i7 + 1;

     label28:
        if i7 >= $i2 goto label29;

        if z11 == 0 goto label22;

     label29:
        if z10 != 0 goto label30;

        return null;

     label30:
        return r45;

     label31:
        return null;

        catch org.apache.batik.bridge.BridgeException from label01 to label02 with label03;
    }

    private org.apache.batik.gvt.font.Glyph getGlyph(org.apache.batik.bridge.BridgeContext, java.lang.String, org.w3c.dom.Element, float, java.text.AttributedCharacterIterator)
    {
        org.w3c.dom.Document $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.batik.bridge.SVGFontFaceElementBridge r44;
        org.apache.batik.bridge.BridgeException $r32;
        org.apache.batik.bridge.BridgeContext r0;
        org.apache.batik.bridge.SVGFontFace $r22;
        org.apache.batik.bridge.Bridge $r21, $r23;
        org.apache.batik.bridge.UserAgent $r35;
        java.text.AttributedCharacterIterator r24;
        float f0;
        java.text.AttributedCharacterIterator$Attribute $r25;
        org.apache.batik.bridge.SVGGlyphElementBridge r45;
        org.w3c.dom.Node $r10, $r11, $r14, $r18, $r28, $r29, $r31;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r12, $r16, $r19, $r33, $r34;
        org.apache.batik.gvt.font.Glyph $r27;
        org.w3c.dom.NodeList $r17, $r20, $r30;
        org.apache.batik.gvt.text.TextPaintInfo r46;
        org.apache.batik.dom.svg.SVGOMDocument r9, r38;
        org.w3c.dom.Element r1, $r13, $r15, r37, r39, r40, r41, r42, r43;
        java.lang.Object $r26;
        org.apache.batik.bridge.SVGAltGlyphElementBridge r36;

        r36 := @this: org.apache.batik.bridge.SVGAltGlyphElementBridge;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: org.w3c.dom.Element;

        f0 := @parameter3: float;

        r24 := @parameter4: java.text.AttributedCharacterIterator;

        r37 = null;

     label01:
        r37 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>(r1, r2);

     label02:
        goto label04;

     label03:
        $r32 := @caughtexception;

        $r33 = "uri.unsecure";

        $r34 = virtualinvoke $r32.<org.apache.batik.bridge.BridgeException: java.lang.String getCode()>();

        $z3 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z3 == 0 goto label04;

        $r35 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r35.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r32);

     label04:
        if r37 == null goto label05;

        $r3 = "http://www.w3.org/2000/svg";

        $r4 = interfaceinvoke r37.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label05;

        $r5 = "glyph";

        $r6 = interfaceinvoke r37.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label06;

     label05:
        return null;

     label06:
        $r7 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r38 = (org.apache.batik.dom.svg.SVGOMDocument) $r7;

        $r8 = interfaceinvoke r37.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r9 = (org.apache.batik.dom.svg.SVGOMDocument) $r8;

        if r9 != r38 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        r39 = null;

        r40 = null;

        if $z4 == 0 goto label10;

        r39 = r37;

        $r29 = interfaceinvoke r37.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r41 = (org.w3c.dom.Element) $r29;

        $r30 = interfaceinvoke r41.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "font-face");

        $i2 = interfaceinvoke $r30.<org.w3c.dom.NodeList: int getLength()>();

        if $i2 <= 0 goto label09;

        $r31 = interfaceinvoke $r30.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r40 = (org.w3c.dom.Element) $r31;

     label09:
        goto label15;

     label10:
        $r10 = interfaceinvoke r37.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r11 = virtualinvoke r38.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>($r10, 1);

        r42 = (org.w3c.dom.Element) $r11;

        $r12 = staticinvoke <org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI(org.w3c.dom.Node)>(r1);

        $r13 = virtualinvoke r38.<org.apache.batik.dom.svg.SVGOMDocument: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "g");

        interfaceinvoke $r13.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r42);

        interfaceinvoke $r13.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "xml:base", $r12);

        $r14 = interfaceinvoke r37.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r15 = (org.w3c.dom.Element) $r14;

        staticinvoke <org.apache.batik.bridge.CSSUtilities: void computeStyleAndURIs(org.w3c.dom.Element,org.w3c.dom.Element,java.lang.String)>($r15, r42, r2);

        $r16 = interfaceinvoke r37.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "id");

        $r17 = interfaceinvoke r42.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "glyph");

        i3 = 0;

        goto label13;

     label11:
        $r18 = interfaceinvoke $r17.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i3);

        r43 = (org.w3c.dom.Element) $r18;

        $r19 = interfaceinvoke r43.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "id");

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 == 0 goto label12;

        r39 = r43;

        goto label14;

     label12:
        i3 = i3 + 1;

     label13:
        $i0 = interfaceinvoke $r17.<org.w3c.dom.NodeList: int getLength()>();

        if i3 < $i0 goto label11;

     label14:
        $r20 = interfaceinvoke r42.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "font-face");

        $i1 = interfaceinvoke $r20.<org.w3c.dom.NodeList: int getLength()>();

        if $i1 <= 0 goto label15;

        $r28 = interfaceinvoke $r20.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r40 = (org.w3c.dom.Element) $r28;

     label15:
        if r39 == null goto label16;

        if r40 != null goto label17;

     label16:
        return null;

     label17:
        $r21 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(org.w3c.dom.Element)>(r40);

        r44 = (org.apache.batik.bridge.SVGFontFaceElementBridge) $r21;

        $r22 = virtualinvoke r44.<org.apache.batik.bridge.SVGFontFaceElementBridge: org.apache.batik.bridge.SVGFontFace createFontFace(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r0, r40);

        $r23 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(org.w3c.dom.Element)>(r39);

        r45 = (org.apache.batik.bridge.SVGGlyphElementBridge) $r23;

        interfaceinvoke r24.<java.text.CharacterIterator: char first()>();

        $r25 = <org.apache.batik.bridge.SVGAltGlyphElementBridge: java.text.AttributedCharacterIterator$Attribute PAINT_INFO>;

        $r26 = interfaceinvoke r24.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r25);

        r46 = (org.apache.batik.gvt.text.TextPaintInfo) $r26;

        $i5 = (int) -1;

        $r27 = virtualinvoke r45.<org.apache.batik.bridge.SVGGlyphElementBridge: org.apache.batik.gvt.font.Glyph createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)>(r0, r39, r1, $i5, f0, $r22, r46);

        return $r27;

        catch org.apache.batik.bridge.BridgeException from label01 to label02 with label03;
    }

    static void <clinit>()
    {
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r0;

        $r0 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute PAINT_INFO>;

        <org.apache.batik.bridge.SVGAltGlyphElementBridge: java.text.AttributedCharacterIterator$Attribute PAINT_INFO> = $r0;

        return;
    }
}
