public abstract class org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask extends java.lang.Object implements java.lang.Runnable
{
    private java.net.Socket socket;
    private java.io.IOException exception;

    public void <init>()
    {
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask r0;

        r0 := @this: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void setSocket(java.net.Socket)
    {
        java.net.Socket r1;
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask r0;

        r0 := @this: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask;

        r1 := @parameter0: java.net.Socket;

        r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.net.Socket socket> = r1;

        return;
    }

    protected java.net.Socket getSocket()
    {
        java.net.Socket $r1;
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask r0;

        r0 := @this: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask;

        $r1 = r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.net.Socket socket>;

        return $r1;
    }

    public abstract void doit() throws java.io.IOException;

    public void run()
    {
        java.io.IOException $r1;
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask r0;

        r0 := @this: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask;

     label1:
        virtualinvoke r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: void doit()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException exception> = $r1;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)
    {
        java.io.IOException $r1;
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask r0;

        r0 := @parameter0: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask;

        $r1 = r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException exception>;

        return $r1;
    }
}
