public class javax.ws.rs.core.MediaType extends java.lang.Object
{
    private java.lang.String type;
    private java.lang.String subtype;
    private java.util.Map parameters;
    public static final java.lang.String CHARSET_PARAMETER;
    public static final java.lang.String MEDIA_TYPE_WILDCARD;
    public static final java.lang.String WILDCARD;
    public static final javax.ws.rs.core.MediaType WILDCARD_TYPE;
    public static final java.lang.String APPLICATION_XML;
    public static final javax.ws.rs.core.MediaType APPLICATION_XML_TYPE;
    public static final java.lang.String APPLICATION_ATOM_XML;
    public static final javax.ws.rs.core.MediaType APPLICATION_ATOM_XML_TYPE;
    public static final java.lang.String APPLICATION_XHTML_XML;
    public static final javax.ws.rs.core.MediaType APPLICATION_XHTML_XML_TYPE;
    public static final java.lang.String APPLICATION_SVG_XML;
    public static final javax.ws.rs.core.MediaType APPLICATION_SVG_XML_TYPE;
    public static final java.lang.String APPLICATION_JSON;
    public static final javax.ws.rs.core.MediaType APPLICATION_JSON_TYPE;
    public static final java.lang.String APPLICATION_FORM_URLENCODED;
    public static final javax.ws.rs.core.MediaType APPLICATION_FORM_URLENCODED_TYPE;
    public static final java.lang.String MULTIPART_FORM_DATA;
    public static final javax.ws.rs.core.MediaType MULTIPART_FORM_DATA_TYPE;
    public static final java.lang.String APPLICATION_OCTET_STREAM;
    public static final javax.ws.rs.core.MediaType APPLICATION_OCTET_STREAM_TYPE;
    public static final java.lang.String TEXT_PLAIN;
    public static final javax.ws.rs.core.MediaType TEXT_PLAIN_TYPE;
    public static final java.lang.String TEXT_XML;
    public static final javax.ws.rs.core.MediaType TEXT_XML_TYPE;
    public static final java.lang.String TEXT_HTML;
    public static final javax.ws.rs.core.MediaType TEXT_HTML_TYPE;

    public static javax.ws.rs.core.MediaType valueOf(java.lang.String) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.MediaType $r4;
        javax.ws.rs.ext.RuntimeDelegate $r0;
        java.lang.Object $r3;
        java.lang.String r2;
        javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate $r1;

        r2 := @parameter0: java.lang.String;

        $r0 = staticinvoke <javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate getInstance()>();

        $r1 = virtualinvoke $r0.<javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)>(class "Ljavax/ws/rs/core/MediaType;");

        $r3 = interfaceinvoke $r1.<javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate: java.lang.Object fromString(java.lang.String)>(r2);

        $r4 = (javax.ws.rs.core.MediaType) $r3;

        return $r4;
    }

    private static java.util.TreeMap createParametersMap(java.util.Map)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        javax.ws.rs.core.MediaType$1 $r1;
        java.util.TreeMap $r0;
        java.util.Map r2;
        java.lang.Object $r5, $r7, $r10;
        java.lang.String $r8, $r9;
        boolean $z0;

        r2 := @parameter0: java.util.Map;

        $r0 = new java.util.TreeMap;

        $r1 = new javax.ws.rs.core.MediaType$1;

        specialinvoke $r1.<javax.ws.rs.core.MediaType$1: void <init>()>();

        specialinvoke $r0.<java.util.TreeMap: void <init>(java.util.Comparator)>($r1);

        if r2 == null goto label2;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        goto label1;

     label2:
        return $r0;
    }

    public void <init>(java.lang.String, java.lang.String, java.util.Map)
    {
        javax.ws.rs.core.MediaType r0;
        java.util.TreeMap $r4;
        java.util.Map r3;
        java.lang.String r1, r2;

        r0 := @this: javax.ws.rs.core.MediaType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        $r4 = staticinvoke <javax.ws.rs.core.MediaType: java.util.TreeMap createParametersMap(java.util.Map)>(r3);

        specialinvoke r0.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r1, r2, null, $r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.String r1, r2;

        r0 := @this: javax.ws.rs.core.MediaType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r1, r2, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.String r1, r2, r3;

        r0 := @this: javax.ws.rs.core.MediaType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r3, null);

        return;
    }

    public void <init>()
    {
        javax.ws.rs.core.MediaType r0;

        r0 := @this: javax.ws.rs.core.MediaType;

        specialinvoke r0.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>("*", "*", null, null);

        return;
    }

    private void <init>(java.lang.String, java.lang.String, java.lang.String, java.util.Map)
    {
        javax.ws.rs.core.MediaType$2 $r5;
        javax.ws.rs.core.MediaType r0;
        java.util.TreeMap $r4;
        java.util.Map r6, $r9;
        java.lang.String r1, r2, r3, $r7, $r8;
        boolean $z0;

        r0 := @this: javax.ws.rs.core.MediaType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r6 := @parameter3: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r7 = "*";

        goto label2;

     label1:
        $r7 = r1;

     label2:
        r0.<javax.ws.rs.core.MediaType: java.lang.String type> = $r7;

        if r2 != null goto label3;

        $r8 = "*";

        goto label4;

     label3:
        $r8 = r2;

     label4:
        r0.<javax.ws.rs.core.MediaType: java.lang.String subtype> = $r8;

        if r6 != null goto label5;

        $r4 = new java.util.TreeMap;

        $r5 = new javax.ws.rs.core.MediaType$2;

        specialinvoke $r5.<javax.ws.rs.core.MediaType$2: void <init>(javax.ws.rs.core.MediaType)>(r0);

        specialinvoke $r4.<java.util.TreeMap: void <init>(java.util.Comparator)>($r5);

        r6 = $r4;

     label5:
        if r3 == null goto label6;

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("charset", r3);

     label6:
        $r9 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r6);

        r0.<javax.ws.rs.core.MediaType: java.util.Map parameters> = $r9;

        return;
    }

    public java.lang.String getType()
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.String $r1;

        r0 := @this: javax.ws.rs.core.MediaType;

        $r1 = r0.<javax.ws.rs.core.MediaType: java.lang.String type>;

        return $r1;
    }

    public boolean isWildcardType()
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("*");

        return $z0;
    }

    public java.lang.String getSubtype()
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.String $r1;

        r0 := @this: javax.ws.rs.core.MediaType;

        $r1 = r0.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        return $r1;
    }

    public boolean isWildcardSubtype()
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("*");

        return $z0;
    }

    public java.util.Map getParameters()
    {
        javax.ws.rs.core.MediaType r0;
        java.util.Map $r1;

        r0 := @this: javax.ws.rs.core.MediaType;

        $r1 = r0.<javax.ws.rs.core.MediaType: java.util.Map parameters>;

        return $r1;
    }

    public javax.ws.rs.core.MediaType withCharset(java.lang.String)
    {
        javax.ws.rs.core.MediaType $r0, r1;
        java.util.TreeMap $r6;
        java.util.Map $r3;
        java.lang.String r2, $r4, $r5;

        r1 := @this: javax.ws.rs.core.MediaType;

        r2 := @parameter0: java.lang.String;

        $r0 = new javax.ws.rs.core.MediaType;

        $r4 = r1.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $r5 = r1.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        $r3 = r1.<javax.ws.rs.core.MediaType: java.util.Map parameters>;

        $r6 = staticinvoke <javax.ws.rs.core.MediaType: java.util.TreeMap createParametersMap(java.util.Map)>($r3);

        specialinvoke $r0.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r5, r2, $r6);

        return $r0;
    }

    public boolean isCompatible(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r0, r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r1 := @this: javax.ws.rs.core.MediaType;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        if r0 == null goto label3;

        $r2 = r1.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 != 0 goto label2;

        $r3 = r0.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 != 0 goto label2;

        $r5 = r1.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $r4 = r0.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z2 == 0 goto label1;

        $r10 = r1.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z5 != 0 goto label2;

        $r11 = r0.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z6 != 0 goto label2;

     label1:
        $r7 = r1.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $r6 = r0.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z3 == 0 goto label3;

        $r9 = r1.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        $r8 = r0.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z4 == 0 goto label3;

     label2:
        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        return $z7;
    }

    public boolean equals(java.lang.Object)
    {
        javax.ws.rs.core.MediaType r1, r2;
        java.util.Map $r7, $r8;
        java.lang.Object r0;
        java.lang.String $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @this: javax.ws.rs.core.MediaType;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof javax.ws.rs.core.MediaType;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (javax.ws.rs.core.MediaType) r0;

        $r4 = r2.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $r3 = r1.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r2.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        $r5 = r1.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z2 == 0 goto label2;

        $r8 = r2.<javax.ws.rs.core.MediaType: java.util.Map parameters>;

        $r7 = r1.<javax.ws.rs.core.MediaType: java.util.Map parameters>;

        $z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public int hashCode()
    {
        javax.ws.rs.core.MediaType r1;
        java.util.Map $r9;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0, $r4, $r7;
        java.lang.String $r2, $r3, $r5, $r6, $r8;

        r1 := @this: javax.ws.rs.core.MediaType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<javax.ws.rs.core.MediaType: java.lang.String type>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = r1.<javax.ws.rs.core.MediaType: java.lang.String subtype>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int hashCode()>();

        $r9 = r1.<javax.ws.rs.core.MediaType: java.util.Map parameters>;

        $i1 = virtualinvoke $r9.<java.lang.Object: int hashCode()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        javax.ws.rs.core.MediaType r2;
        javax.ws.rs.ext.RuntimeDelegate $r0;
        java.lang.String $r3;
        javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate $r1;

        r2 := @this: javax.ws.rs.core.MediaType;

        $r0 = staticinvoke <javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate getInstance()>();

        $r1 = virtualinvoke $r0.<javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)>(class "Ljavax/ws/rs/core/MediaType;");

        $r3 = interfaceinvoke $r1.<javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate: java.lang.String toString(java.lang.Object)>(r2);

        return $r3;
    }

    static void <clinit>()
    {
        javax.ws.rs.core.MediaType $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        <javax.ws.rs.core.MediaType: java.lang.String TEXT_HTML> = "text/html";

        <javax.ws.rs.core.MediaType: java.lang.String TEXT_XML> = "text/xml";

        <javax.ws.rs.core.MediaType: java.lang.String TEXT_PLAIN> = "text/plain";

        <javax.ws.rs.core.MediaType: java.lang.String APPLICATION_OCTET_STREAM> = "application/octet-stream";

        <javax.ws.rs.core.MediaType: java.lang.String MULTIPART_FORM_DATA> = "multipart/form-data";

        <javax.ws.rs.core.MediaType: java.lang.String APPLICATION_FORM_URLENCODED> = "application/x-www-form-urlencoded";

        <javax.ws.rs.core.MediaType: java.lang.String APPLICATION_JSON> = "application/json";

        <javax.ws.rs.core.MediaType: java.lang.String APPLICATION_SVG_XML> = "application/svg+xml";

        <javax.ws.rs.core.MediaType: java.lang.String APPLICATION_XHTML_XML> = "application/xhtml+xml";

        <javax.ws.rs.core.MediaType: java.lang.String APPLICATION_ATOM_XML> = "application/atom+xml";

        <javax.ws.rs.core.MediaType: java.lang.String APPLICATION_XML> = "application/xml";

        <javax.ws.rs.core.MediaType: java.lang.String WILDCARD> = "*/*";

        <javax.ws.rs.core.MediaType: java.lang.String MEDIA_TYPE_WILDCARD> = "*";

        <javax.ws.rs.core.MediaType: java.lang.String CHARSET_PARAMETER> = "charset";

        $r0 = new javax.ws.rs.core.MediaType;

        specialinvoke $r0.<javax.ws.rs.core.MediaType: void <init>()>();

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE> = $r0;

        $r1 = new javax.ws.rs.core.MediaType;

        specialinvoke $r1.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("application", "xml");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_XML_TYPE> = $r1;

        $r2 = new javax.ws.rs.core.MediaType;

        specialinvoke $r2.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("application", "atom+xml");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_ATOM_XML_TYPE> = $r2;

        $r3 = new javax.ws.rs.core.MediaType;

        specialinvoke $r3.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("application", "xhtml+xml");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_XHTML_XML_TYPE> = $r3;

        $r4 = new javax.ws.rs.core.MediaType;

        specialinvoke $r4.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("application", "svg+xml");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_SVG_XML_TYPE> = $r4;

        $r5 = new javax.ws.rs.core.MediaType;

        specialinvoke $r5.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("application", "json");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_JSON_TYPE> = $r5;

        $r6 = new javax.ws.rs.core.MediaType;

        specialinvoke $r6.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("application", "x-www-form-urlencoded");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_FORM_URLENCODED_TYPE> = $r6;

        $r7 = new javax.ws.rs.core.MediaType;

        specialinvoke $r7.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("multipart", "form-data");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType MULTIPART_FORM_DATA_TYPE> = $r7;

        $r8 = new javax.ws.rs.core.MediaType;

        specialinvoke $r8.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("application", "octet-stream");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_OCTET_STREAM_TYPE> = $r8;

        $r9 = new javax.ws.rs.core.MediaType;

        specialinvoke $r9.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("text", "plain");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType TEXT_PLAIN_TYPE> = $r9;

        $r10 = new javax.ws.rs.core.MediaType;

        specialinvoke $r10.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("text", "xml");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType TEXT_XML_TYPE> = $r10;

        $r11 = new javax.ws.rs.core.MediaType;

        specialinvoke $r11.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String)>("text", "html");

        <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType TEXT_HTML_TYPE> = $r11;

        return;
    }
}
