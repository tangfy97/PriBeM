public class com.sun.syndication.io.impl.PropertiesLoader extends java.lang.Object
{
    private static final java.lang.String MASTER_PLUGIN_FILE;
    private static final java.lang.String EXTRA_PLUGIN_FILE;
    private static java.util.Map clMap;
    private java.util.Properties[] _properties;
    static java.lang.Class class$com$sun$syndication$io$impl$PropertiesLoader;

    public static com.sun.syndication.io.impl.PropertiesLoader getPropertiesLoader()
    {
        java.lang.Throwable $r11;
        java.util.Map $r2, $r7;
        java.lang.Thread $r3, $r8;
        com.sun.syndication.io.impl.PropertiesLoader $r6, $r10, r15;
        java.io.IOException $r12;
        java.lang.RuntimeException $r13;
        java.lang.Class $r0, r1, $r14;
        java.lang.Object $r5;
        java.lang.ClassLoader $r4, $r9;

        $r0 = <com.sun.syndication.io.impl.PropertiesLoader: java.lang.Class class$com$sun$syndication$io$impl$PropertiesLoader>;

        if $r0 != null goto label01;

        $r14 = staticinvoke <com.sun.syndication.io.impl.PropertiesLoader: java.lang.Class class$(java.lang.String)>("com.sun.syndication.io.impl.PropertiesLoader");

        <com.sun.syndication.io.impl.PropertiesLoader: java.lang.Class class$com$sun$syndication$io$impl$PropertiesLoader> = $r14;

        goto label02;

     label01:
        $r14 = <com.sun.syndication.io.impl.PropertiesLoader: java.lang.Class class$com$sun$syndication$io$impl$PropertiesLoader>;

     label02:
        r1 = $r14;

        entermonitor $r14;

     label03:
        $r2 = <com.sun.syndication.io.impl.PropertiesLoader: java.util.Map clMap>;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r10 = (com.sun.syndication.io.impl.PropertiesLoader) $r5;

        r15 = $r10;

        if $r10 != null goto label07;

     label04:
        $r6 = new com.sun.syndication.io.impl.PropertiesLoader;

        specialinvoke $r6.<com.sun.syndication.io.impl.PropertiesLoader: void <init>(java.lang.String,java.lang.String)>("com/sun/syndication/rome.properties", "rome.properties");

        r15 = $r6;

        $r7 = <com.sun.syndication.io.impl.PropertiesLoader: java.util.Map clMap>;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r9 = virtualinvoke $r8.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r6);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label07:
        exitmonitor r1;

     label08:
        return r15;

     label09:
        $r11 := @caughtexception;

        exitmonitor r1;

     label10:
        throw $r11;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.util.Enumeration $r8;
        java.net.URL r35;
        java.util.Properties[] $r9, $r10;
        java.lang.Thread $r2;
        boolean $z0;
        java.lang.StackTraceElement[] $r24, $r34;
        java.lang.ClassLoader $r3;
        java.util.ArrayList $r1;
        java.lang.StringBuffer $r16, $r17, $r19, $r20, $r22, $r27, $r28, $r29, $r30, $r32;
        int $i0;
        java.lang.String r4, r7, $r18, $r21, $r23, $r31, $r33;
        com.sun.syndication.io.impl.PropertiesLoader r0;
        java.util.Properties $r6, $r12;
        java.io.IOException $r14, $r15, $r25, $r26;
        java.lang.Object $r11;
        java.io.InputStream $r5, $r13;

        r0 := @this: com.sun.syndication.io.impl.PropertiesLoader;

        r4 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label01:
        $r5 = virtualinvoke $r3.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r4);

        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        virtualinvoke $r6.<java.util.Properties: void load(java.io.InputStream)>($r5);

        virtualinvoke $r5.<java.io.InputStream: void close()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

     label02:
        goto label04;

     label03:
        $r25 := @caughtexception;

        $r26 = new java.io.IOException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not load ROME master plugins file [");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("], ");

        $r31 = virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>($r33);

        $r34 = virtualinvoke $r25.<java.io.IOException: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r26.<java.io.IOException: void setStackTrace(java.lang.StackTraceElement[])>($r34);

        throw $r26;

     label04:
        $r8 = virtualinvoke $r3.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(r7);

     label05:
        $z0 = interfaceinvoke $r8.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke $r8.<java.util.Enumeration: java.lang.Object nextElement()>();

        r35 = (java.net.URL) $r11;

        $r12 = new java.util.Properties;

        specialinvoke $r12.<java.util.Properties: void <init>()>();

     label06:
        $r13 = virtualinvoke r35.<java.net.URL: java.io.InputStream openStream()>();

        virtualinvoke $r12.<java.util.Properties: void load(java.io.InputStream)>($r13);

        virtualinvoke $r13.<java.io.InputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r14 := @caughtexception;

        $r15 = new java.io.IOException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not load ROME extensions plugins file [");

        $r18 = virtualinvoke r35.<java.net.URL: java.lang.String toString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("], ");

        $r21 = virtualinvoke $r14.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r14.<java.io.IOException: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r15.<java.io.IOException: void setStackTrace(java.lang.StackTraceElement[])>($r24);

        throw $r15;

     label09:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label05;

     label10:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r9 = newarray (java.util.Properties)[$i0];

        r0.<com.sun.syndication.io.impl.PropertiesLoader: java.util.Properties[] _properties> = $r9;

        $r10 = r0.<com.sun.syndication.io.impl.PropertiesLoader: java.util.Properties[] _properties>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label06 to label07 with label08;
    }

    public java.lang.String[] getTokenizedProperty(java.lang.String, java.lang.String)
    {
        java.util.Properties $r5;
        java.util.Properties[] $r2, $r3;
        java.lang.String[] r10;
        java.util.ArrayList $r0;
        java.util.StringTokenizer $r7;
        int $i0, $i1, i2;
        java.lang.String r4, $r6, r8, $r9;
        com.sun.syndication.io.impl.PropertiesLoader r1;
        boolean $z0;

        r1 := @this: com.sun.syndication.io.impl.PropertiesLoader;

        r4 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $r2 = r1.<com.sun.syndication.io.impl.PropertiesLoader: java.util.Properties[] _properties>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label4;

        $r3 = r1.<com.sun.syndication.io.impl.PropertiesLoader: java.util.Properties[] _properties>;

        $r5 = $r3[i2];

        $r6 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r4);

        if $r6 == null goto label3;

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r6, r8);

     label2:
        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r9 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        r10 = newarray (java.lang.String)[$i1];

        interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r10);

        return r10;
    }

    public java.lang.String[] getProperty(java.lang.String)
    {
        java.util.Properties $r5;
        java.util.Properties[] $r2, $r3;
        java.lang.String[] r7;
        java.util.ArrayList $r0;
        int $i0, $i1, i2;
        java.lang.String r4, $r6;
        com.sun.syndication.io.impl.PropertiesLoader r1;

        r1 := @this: com.sun.syndication.io.impl.PropertiesLoader;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $r2 = r1.<com.sun.syndication.io.impl.PropertiesLoader: java.util.Properties[] _properties>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label3;

        $r3 = r1.<com.sun.syndication.io.impl.PropertiesLoader: java.util.Properties[] _properties>;

        $r5 = $r3[i2];

        $r6 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r4);

        if $r6 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        r7 = newarray (java.lang.String)[$i1];

        interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r7);

        return r7;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        <com.sun.syndication.io.impl.PropertiesLoader: java.lang.String EXTRA_PLUGIN_FILE> = "rome.properties";

        <com.sun.syndication.io.impl.PropertiesLoader: java.lang.String MASTER_PLUGIN_FILE> = "com/sun/syndication/rome.properties";

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <com.sun.syndication.io.impl.PropertiesLoader: java.util.Map clMap> = $r0;

        return;
    }
}
