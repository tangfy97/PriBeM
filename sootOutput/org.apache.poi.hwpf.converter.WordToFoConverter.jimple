public class org.apache.poi.hwpf.converter.WordToFoConverter extends org.apache.poi.hwpf.converter.AbstractWordConverter
{
    private static final org.apache.poi.util.POILogger logger;
    private java.util.List endnotes;
    protected final org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade;
    private java.util.concurrent.atomic.AtomicInteger internalLinkCounter;
    private boolean outputCharactersLanguage;
    private java.util.Set usedIds;

    public static void main(java.lang.String[])
    {
        javax.xml.transform.dom.DOMSource $r18;
        javax.xml.transform.Transformer $r21;
        javax.xml.transform.stream.StreamResult $r19;
        java.lang.String[] r0;
        org.w3c.dom.Document $r15;
        int $i0;
        java.lang.String $r4, $r6, $r10, $r12, $r14, $r17;
        java.io.PrintStream $r2, $r8, $r22;
        java.io.FileWriter $r16;
        java.io.File $r13;
        java.lang.Exception $r23;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11;
        javax.xml.transform.TransformerFactory $r20;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 2 goto label1;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Usage: WordToFoConverter <inputFile.doc> <saveTo.fo>");

        return;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting ");

        $r4 = r0[0];

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saving output to ");

        $r10 = r0[1];

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label2:
        $r13 = new java.io.File;

        $r14 = r0[0];

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);

        $r15 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoConverter: org.w3c.dom.Document process(java.io.File)>($r13);

        $r16 = new java.io.FileWriter;

        $r17 = r0[1];

        specialinvoke $r16.<java.io.FileWriter: void <init>(java.lang.String)>($r17);

        $r18 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r18.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r15);

        $r19 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r19.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r16);

        $r20 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r21 = virtualinvoke $r20.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", "UTF-8");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r18, $r19);

        virtualinvoke $r16.<java.io.FileWriter: void close()>();

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static org.w3c.dom.Document process(java.io.File) throws java.lang.Exception
    {
        org.apache.poi.hwpf.converter.WordToFoConverter $r2;
        org.apache.poi.hwpf.HWPFDocumentCore $r1;
        org.w3c.dom.Document $r5, $r6;
        javax.xml.parsers.DocumentBuilder $r4;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: org.apache.poi.hwpf.HWPFDocumentCore loadDoc(java.io.File)>(r0);

        $r2 = new org.apache.poi.hwpf.converter.WordToFoConverter;

        $r3 = staticinvoke <org.apache.poi.util.XMLHelper: javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        specialinvoke $r2.<org.apache.poi.hwpf.converter.WordToFoConverter: void <init>(org.w3c.dom.Document)>($r5);

        virtualinvoke $r2.<org.apache.poi.hwpf.converter.WordToFoConverter: void processDocument(org.apache.poi.hwpf.HWPFDocumentCore)>($r1);

        $r6 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.WordToFoConverter: org.w3c.dom.Document getDocument()>();

        return $r6;
    }

    public void <init>(org.w3c.dom.Document)
    {
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        java.util.concurrent.atomic.AtomicInteger $r2;
        org.w3c.dom.Document r5;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r4;
        java.util.LinkedHashSet $r3;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r5 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(0);

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.List endnotes> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.concurrent.atomic.AtomicInteger internalLinkCounter> = $r2;

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean outputCharactersLanguage> = 0;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.Set usedIds> = $r3;

        $r4 = new org.apache.poi.hwpf.converter.FoDocumentFacade;

        specialinvoke $r4.<org.apache.poi.hwpf.converter.FoDocumentFacade: void <init>(org.w3c.dom.Document)>(r5);

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade> = $r4;

        return;
    }

    public void <init>(org.apache.poi.hwpf.converter.FoDocumentFacade)
    {
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        java.util.concurrent.atomic.AtomicInteger $r2;
        org.apache.poi.hwpf.converter.FoDocumentFacade r4;
        java.util.LinkedHashSet $r3;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r4 := @parameter0: org.apache.poi.hwpf.converter.FoDocumentFacade;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(0);

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.List endnotes> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.concurrent.atomic.AtomicInteger internalLinkCounter> = $r2;

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean outputCharactersLanguage> = 0;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.Set usedIds> = $r3;

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade> = r4;

        return;
    }

    protected org.w3c.dom.Element createNoteInline(java.lang.String)
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1;
        java.lang.String r3;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createInline()>();

        interfaceinvoke $r2.<org.w3c.dom.Element: void setTextContent(java.lang.String)>(r3);

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("baseline-shift", "super");

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-size", "smaller");

        return $r2;
    }

    protected java.lang.String createPageMaster(org.apache.poi.hwpf.usermodel.Section, java.lang.String, int)
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r8, $r18;
        boolean $z0;
        float $f0, f1, $f2, f3, $f4, f5, $f6, f7, $f8, f9, $f10, f11, $f12, f13;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r10, $r11, $r12, $r14, $r15, $r16, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r35, $r36;
        org.apache.poi.hwpf.usermodel.Section r0;
        org.apache.poi.hwpf.converter.WordToFoConverter r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9;
        java.lang.String r2, $r6, $r13, $r17, $r29, $r33, $r37;
        org.w3c.dom.Element $r9, $r19;

        r7 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.Section;

        r2 := @parameter1: java.lang.String;

        i6 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getPageHeight()>();

        $f0 = (float) $i0;

        f1 = $f0 / 1440.0F;

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getPageWidth()>();

        $f2 = (float) $i1;

        f3 = $f2 / 1440.0F;

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getMarginLeft()>();

        $f4 = (float) $i2;

        f5 = $f4 / 1440.0F;

        $i3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getMarginRight()>();

        $f6 = (float) $i3;

        f7 = $f6 / 1440.0F;

        $i4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getMarginTop()>();

        $f8 = (float) $i4;

        f9 = $f8 / 1440.0F;

        $i5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getMarginBottom()>();

        $f10 = (float) $i5;

        f11 = $f10 / 1440.0F;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-page");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r7.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element addSimplePageMaster(java.lang.String)>($r6);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("page-height", $r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("page-width", $r17);

        $r18 = r7.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r19 = virtualinvoke $r18.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element addRegionBody(org.w3c.dom.Element)>($r9);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f9);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f7);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f11);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("margin", $r29);

        $i7 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getNumColumns()>();

        if $i7 <= 1 goto label2;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i8 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getNumColumns()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("column-count", $r33);

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: boolean isColumnsEvenlySpaced()>();

        if $z0 == 0 goto label1;

        $i9 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getDistanceBetweenColumns()>();

        $f12 = (float) $i9;

        f13 = $f12 / 1440.0F;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f13);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("column-gap", $r37);

        goto label2;

     label1:
        interfaceinvoke $r19.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("column-gap", "0.25in");

     label2:
        return $r6;
    }

    public org.w3c.dom.Document getDocument()
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        org.w3c.dom.Document $r2;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Document getDocument()>();

        return $r2;
    }

    public boolean isOutputCharactersLanguage()
    {
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        $z0 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean outputCharactersLanguage>;

        return $z0;
    }

    protected void outputCharacters(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun, java.lang.String)
    {
        org.w3c.dom.Text $r9;
        org.apache.poi.hwpf.usermodel.CharacterRun r3;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1, $r8;
        org.apache.poi.hwpf.converter.FontReplacer$Triplet $r4;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        int $i0, $i1;
        java.lang.String $r5, r7, $r10;
        boolean $z0, $z1, $z2, $z3;
        org.w3c.dom.Element $r2, r6;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r6 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r7 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createInline()>();

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FontReplacer$Triplet getCharacterRunTriplet(org.apache.poi.hwpf.usermodel.CharacterRun)>(r3);

        $r5 = $r4.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName>;

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: boolean isNotEmpty(java.lang.String)>($r5);

        if $z0 == 0 goto label1;

        $r10 = $r4.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName>;

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setFontFamily(org.w3c.dom.Element,java.lang.String)>($r2, $r10);

     label1:
        $z1 = $r4.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean bold>;

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBold(org.w3c.dom.Element,boolean)>($r2, $z1);

        $z2 = $r4.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean italic>;

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setItalic(org.w3c.dom.Element,boolean)>($r2, $z2);

        $i0 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.CharacterRun: int getFontSize()>();

        $i1 = $i0 / 2;

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setFontSize(org.w3c.dom.Element,int)>($r2, $i1);

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setCharactersProperties(org.apache.poi.hwpf.usermodel.CharacterRun,org.w3c.dom.Element)>(r3, $r2);

        $z3 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean isOutputCharactersLanguage()>();

        if $z3 == 0 goto label2;

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setLanguage(org.apache.poi.hwpf.usermodel.CharacterRun,org.w3c.dom.Element)>(r3, $r2);

     label2:
        interfaceinvoke r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        $r8 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>(r7);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        return;
    }

    protected void processBookmarks(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.util.List)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r5;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r8;
        org.apache.poi.hwpf.usermodel.Bookmark r7;
        org.apache.poi.hwpf.converter.WordToFoConverter r4;
        int i0;
        java.lang.String $r12, $r14;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        org.apache.poi.hwpf.usermodel.Range r3;
        java.util.List r1;
        org.w3c.dom.Element r0, $r9, r15;
        java.lang.Object $r6;
        java.lang.StringBuilder $r10, $r11, $r13;

        r4 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r5 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r0 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r1 := @parameter4: java.util.List;

        r15 = r0;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.hwpf.usermodel.Bookmark) $r6;

        $r8 = r4.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createInline()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bookmark_");

        $r12 = interfaceinvoke r7.<org.apache.poi.hwpf.usermodel.Bookmark: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke r4.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean setId(org.w3c.dom.Element,java.lang.String)>($r9, $r14);

        if $z1 == 0 goto label2;

        interfaceinvoke r15.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        r15 = $r9;

     label2:
        goto label1;

     label3:
        if r3 == null goto label4;

        virtualinvoke r4.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r5, i0, r3, r15);

     label4:
        return;
    }

    protected void processDocumentInformation(org.apache.poi.hpsf.SummaryInformation)
    {
        org.apache.poi.hpsf.SummaryInformation r0;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r6, $r8, $r10, $r12;
        org.apache.poi.hwpf.converter.WordToFoConverter r5;
        java.lang.String $r1, $r2, $r3, $r4, $r7, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;

        r5 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r0 := @parameter0: org.apache.poi.hpsf.SummaryInformation;

        $r1 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getTitle()>();

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r12 = r5.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r13 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getTitle()>();

        virtualinvoke $r12.<org.apache.poi.hwpf.converter.FoDocumentFacade: void setTitle(java.lang.String)>($r13);

     label1:
        $r2 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getAuthor()>();

        $z1 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r2);

        if $z1 == 0 goto label2;

        $r10 = r5.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r11 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getAuthor()>();

        virtualinvoke $r10.<org.apache.poi.hwpf.converter.FoDocumentFacade: void setCreator(java.lang.String)>($r11);

     label2:
        $r3 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getKeywords()>();

        $z2 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r3);

        if $z2 == 0 goto label3;

        $r8 = r5.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r9 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getKeywords()>();

        virtualinvoke $r8.<org.apache.poi.hwpf.converter.FoDocumentFacade: void setKeywords(java.lang.String)>($r9);

     label3:
        $r4 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getComments()>();

        $z3 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r4);

        if $z3 == 0 goto label4;

        $r6 = r5.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r7 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getComments()>();

        virtualinvoke $r6.<org.apache.poi.hwpf.converter.FoDocumentFacade: void setDescription(java.lang.String)>($r7);

     label4:
        return;
    }

    protected void processDrawnObject(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.CharacterRun, org.apache.poi.hwpf.usermodel.OfficeDrawing, java.lang.String, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.HWPFDocument r5;
        org.apache.poi.hwpf.usermodel.CharacterRun r6;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r2;
        org.w3c.dom.Element $r3, r4;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        java.lang.String r1;
        org.apache.poi.hwpf.usermodel.OfficeDrawing r7;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r5 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r6 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r7 := @parameter2: org.apache.poi.hwpf.usermodel.OfficeDrawing;

        r1 := @parameter3: java.lang.String;

        r4 := @parameter4: org.w3c.dom.Element;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createExternalGraphic(java.lang.String)>(r1);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        return;
    }

    protected void processEndnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.HWPFDocument r24;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r11, $r15, $r17;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0, i1;
        java.lang.String $r2, $r6, $r10, $r22;
        org.apache.poi.hwpf.usermodel.Range r25;
        java.util.List $r26;
        org.w3c.dom.Element $r12, $r13, r14, $r16, $r18, $r23;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r19, $r20, $r21;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r24 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        i1 := @parameter1: int;

        r14 := @parameter2: org.w3c.dom.Element;

        r25 := @parameter3: org.apache.poi.hwpf.usermodel.Range;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.concurrent.atomic.AtomicInteger internalLinkCounter>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("endnote_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("endnote_back_");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r12 = virtualinvoke $r11.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBasicLinkInternal(java.lang.String)>($r6);

        $r13 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.w3c.dom.Element createNoteInline(java.lang.String)>($r2);

        interfaceinvoke $r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean setId(org.w3c.dom.Element,java.lang.String)>($r12, $r10);

        interfaceinvoke r14.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        $r15 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r16 = virtualinvoke $r15.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r17 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r18 = virtualinvoke $r17.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBasicLinkInternal(java.lang.String)>($r10);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.w3c.dom.Element createNoteInline(java.lang.String)>($r22);

        interfaceinvoke $r18.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r23);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean setId(org.w3c.dom.Element,java.lang.String)>($r18, $r6);

        interfaceinvoke $r16.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r24, -2147483648, r25, $r16);

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void compactInlines(org.w3c.dom.Element)>($r16);

        $r26 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.List endnotes>;

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r16);

        return;
    }

    protected void processFootnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r11, $r14, $r16, $r19, $r21, $r23;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.poi.hwpf.usermodel.Range r31;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r25, $r26, $r27;
        org.apache.poi.hwpf.HWPFDocument r30;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        int $i0, i1;
        java.lang.String $r2, $r6, $r10, $r28;
        org.w3c.dom.Element $r12, r13, $r15, $r17, $r18, $r20, $r22, $r24, $r29;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r30 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        i1 := @parameter1: int;

        r13 := @parameter2: org.w3c.dom.Element;

        r31 := @parameter3: org.apache.poi.hwpf.usermodel.Range;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.concurrent.atomic.AtomicInteger internalLinkCounter>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("footnote_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("footnote_back_");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r12 = virtualinvoke $r11.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createFootnote()>();

        interfaceinvoke r13.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        $r14 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r15 = virtualinvoke $r14.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createInline()>();

        $r16 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r17 = virtualinvoke $r16.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBasicLinkInternal(java.lang.String)>($r6);

        $r18 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.w3c.dom.Element createNoteInline(java.lang.String)>($r2);

        interfaceinvoke $r17.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean setId(org.w3c.dom.Element,java.lang.String)>($r17, $r10);

        interfaceinvoke $r15.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r17);

        interfaceinvoke $r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r15);

        $r19 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r20 = virtualinvoke $r19.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createFootnoteBody()>();

        $r21 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r22 = virtualinvoke $r21.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r23 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r24 = virtualinvoke $r23.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBasicLinkInternal(java.lang.String)>($r10);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.w3c.dom.Element createNoteInline(java.lang.String)>($r28);

        interfaceinvoke $r24.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r29);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean setId(org.w3c.dom.Element,java.lang.String)>($r24, $r6);

        interfaceinvoke $r22.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r24);

        interfaceinvoke $r20.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r22);

        interfaceinvoke $r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r20);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r30, -2147483648, r31, $r22);

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void compactInlines(org.w3c.dom.Element)>($r22);

        return;
    }

    protected void processHyperlink(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.lang.String)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r6;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r2;
        org.apache.poi.hwpf.usermodel.Range r5;
        org.w3c.dom.Element $r3, r4;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r6 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r4 := @parameter1: org.w3c.dom.Element;

        r5 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBasicLinkExternal(java.lang.String)>(r1);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        if r5 == null goto label1;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r6, i0, r5, $r3);

     label1:
        return;
    }

    protected void processImage(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture, java.lang.String)
    {
        org.w3c.dom.Element $r3, r5;
        org.apache.poi.hwpf.usermodel.Picture r4;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        java.lang.String r1;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r2;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r5 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        r4 := @parameter2: org.apache.poi.hwpf.usermodel.Picture;

        r1 := @parameter3: java.lang.String;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createExternalGraphic(java.lang.String)>(r1);

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setPictureProperties(org.apache.poi.hwpf.usermodel.Picture,org.w3c.dom.Element)>(r4, $r3);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        return;
    }

    protected void processImageWithoutPicturesManager(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture)
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r2;
        org.w3c.dom.Comment $r11;
        org.w3c.dom.Element r0;
        org.apache.poi.hwpf.usermodel.Picture r6;
        org.apache.poi.hwpf.converter.WordToFoConverter r1;
        org.w3c.dom.Document $r4;
        java.lang.StringBuilder $r3, $r5, $r8, $r9;
        java.lang.String $r7, $r10;
        boolean z0;

        r1 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r0 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        r6 := @parameter2: org.apache.poi.hwpf.usermodel.Picture;

        $r2 = r1.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r4 = $r2.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Document document>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image link to \'");

        $r7 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.Picture: java.lang.String suggestFullFileName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' can be here");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r10);

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        return;
    }

    protected void processLineBreak(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun)
    {
        org.w3c.dom.Element r0, $r3;
        org.apache.poi.hwpf.converter.WordToFoConverter r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r4;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r2;

        r1 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r2 = r1.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        return;
    }

    protected void processPageBreak(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element)
    {
        org.w3c.dom.NodeList $r1;
        org.apache.poi.hwpf.HWPFDocumentCore r7;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r3;
        org.w3c.dom.Element r0, $r4, r6, r8;
        org.apache.poi.hwpf.converter.WordToFoConverter r2;
        org.w3c.dom.Node $r5;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r2 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r7 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r0 := @parameter1: org.w3c.dom.Element;

        r8 = null;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 <= 0 goto label1;

        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        $i2 = $i1 - 1;

        $r5 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i2);

        $z0 = $r5 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label1;

        r6 = (org.w3c.dom.Element) $r5;

        $z1 = interfaceinvoke r6.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("break-after");

        if $z1 != 0 goto label1;

        r8 = r6;

     label1:
        if r8 != null goto label2;

        $r3 = r2.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        r8 = $r4;

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

     label2:
        interfaceinvoke r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("break-after", "page");

        return;
    }

    protected void processPageref(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.lang.String)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r10;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r2;
        org.apache.poi.hwpf.usermodel.Range r9;
        org.w3c.dom.Element $r7, r8;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        int i0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r4, $r6;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r10 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r8 := @parameter1: org.w3c.dom.Element;

        r9 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bookmark_");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBasicLinkInternal(java.lang.String)>($r6);

        interfaceinvoke r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        if r9 == null goto label1;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r10, i0, r9, $r7);

     label1:
        return;
    }

    protected void processParagraph(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, int, org.apache.poi.hwpf.usermodel.Paragraph, java.lang.String)
    {
        org.w3c.dom.Text $r12;
        org.apache.poi.hwpf.HWPFDocumentCore r6;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1, $r7, $r9, $r11;
        org.apache.poi.hwpf.usermodel.Paragraph r4;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        int $i0, i1, $i2;
        java.lang.String r5, $r13;
        boolean $z0, $z1;
        org.w3c.dom.Element $r2, r3, $r8, $r10;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r6 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r3 := @parameter1: org.w3c.dom.Element;

        i1 := @parameter2: int;

        r4 := @parameter3: org.apache.poi.hwpf.usermodel.Paragraph;

        r5 := @parameter4: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        interfaceinvoke r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setParagraphProperties(org.apache.poi.hwpf.usermodel.Paragraph,org.w3c.dom.Element)>(r4, $r2);

        $i0 = virtualinvoke r4.<org.apache.poi.hwpf.usermodel.Paragraph: int numCharacterRuns()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: boolean isNotEmpty(java.lang.String)>(r5);

        if $z0 == 0 goto label2;

        $r9 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r10 = virtualinvoke $r9.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createInline()>();

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        $r11 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r12 = virtualinvoke $r11.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>(r5);

        interfaceinvoke $r10.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        $r13 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i2 == 0 goto label2;

        goto label2;

     label2:
        $z1 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r6, i1, r4, $r2);

        if $z1 != 0 goto label3;

        $r7 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r8 = virtualinvoke $r7.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createLeader()>();

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

     label3:
        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void compactInlines(org.w3c.dom.Element)>($r2);

        return;
    }

    protected void processSection(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Section, int)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r7;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r3, $r5;
        org.apache.poi.hwpf.usermodel.Section r1;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        int i0;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.util.Iterator $r11;
        java.util.List $r8, $r9, $r10, $r12;
        org.w3c.dom.Element $r4, $r6, r14;
        java.lang.Object $r13;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r7 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r1 := @parameter1: org.apache.poi.hwpf.usermodel.Section;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.lang.String createPageMaster(org.apache.poi.hwpf.usermodel.Section,java.lang.String,int)>(r1, "page", i0);

        $r3 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element addPageSequence(java.lang.String)>($r2);

        $r5 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element addFlowToPageSequence(org.w3c.dom.Element,java.lang.String)>($r4, "xsl-region-body");

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: void processParagraphes(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int)>(r7, $r6, r1, -2147483648);

        $r8 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.List endnotes>;

        if $r8 == null goto label3;

        $r9 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.List endnotes>;

        $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r10 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.List endnotes>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r13 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.w3c.dom.Element) $r13;

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r14);

        goto label1;

     label2:
        $r12 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.List endnotes>;

        interfaceinvoke $r12.<java.util.List: void clear()>();

     label3:
        return;
    }

    protected void processTable(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Table)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r23;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1, $r3, $r7, $r18, $r21, $r24;
        org.apache.poi.hwpf.usermodel.TableCell $r20;
        org.apache.poi.hwpf.usermodel.TableRow $r17, $r28;
        int[] $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.poi.util.POILogger $r10;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, $i14, $i15;
        java.lang.String $r15, $r26, $r27;
        org.apache.poi.hwpf.usermodel.Table r5;
        org.w3c.dom.Element $r2, $r4, $r8, r16, $r19, $r22, $r25;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r23 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r16 := @parameter1: org.w3c.dom.Element;

        r5 := @parameter2: org.apache.poi.hwpf.usermodel.Table;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableHeader()>();

        $r3 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableBody()>();

        $r6 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: int[] buildTableCellEdgesArray(org.apache.poi.hwpf.usermodel.Table)>(r5);

        $i0 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: int numRows()>();

        i9 = -2147483648;

        i10 = 0;

     label01:
        if i10 >= $i0 goto label02;

        $r28 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: org.apache.poi.hwpf.usermodel.TableRow getRow(int)>(i10);

        $i8 = virtualinvoke $r28.<org.apache.poi.hwpf.usermodel.TableRow: int numCells()>();

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(i9, $i8);

        i10 = i10 + 1;

        goto label01;

     label02:
        i11 = 0;

     label03:
        if i11 >= $i0 goto label22;

        $r17 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: org.apache.poi.hwpf.usermodel.TableRow getRow(int)>(i11);

        $r18 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r19 = virtualinvoke $r18.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableRow()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setTableRowProperties(org.apache.poi.hwpf.usermodel.TableRow,org.w3c.dom.Element)>($r17, $r19);

        i12 = 0;

        $i3 = virtualinvoke $r17.<org.apache.poi.hwpf.usermodel.TableRow: int numCells()>();

        i13 = 0;

     label04:
        if i13 >= $i3 goto label19;

        $r20 = virtualinvoke $r17.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.TableCell getCell(int)>(i13);

        $z4 = virtualinvoke $r20.<org.apache.poi.hwpf.usermodel.TableCell: boolean isVerticallyMerged()>();

        if $z4 == 0 goto label05;

        $z6 = virtualinvoke $r20.<org.apache.poi.hwpf.usermodel.TableCell: boolean isFirstVerticallyMerged()>();

        if $z6 != 0 goto label05;

        $i7 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: int getNumberColumnsSpanned(int[],int,org.apache.poi.hwpf.usermodel.TableCell)>($r6, i12, $r20);

        i12 = i12 + $i7;

        goto label18;

     label05:
        $r21 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r22 = virtualinvoke $r21.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableCell()>();

        if i11 != 0 goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        $i4 = $i0 - 1;

        if i11 != $i4 goto label08;

        $z8 = 1;

        goto label09;

     label08:
        $z8 = 0;

     label09:
        if i13 != 0 goto label10;

        $z9 = 1;

        goto label11;

     label10:
        $z9 = 0;

     label11:
        $i14 = $i3 - 1;

        if i13 != $i14 goto label12;

        $z10 = 1;

        goto label13;

     label12:
        $z10 = 0;

     label13:
        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setTableCellProperties(org.apache.poi.hwpf.usermodel.TableRow,org.apache.poi.hwpf.usermodel.TableCell,org.w3c.dom.Element,boolean,boolean,boolean,boolean)>($r17, $r20, $r22, $z7, $z8, $z9, $z10);

        $i15 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: int getNumberColumnsSpanned(int[],int,org.apache.poi.hwpf.usermodel.TableCell)>($r6, i12, $r20);

        i12 = i12 + $i15;

        if $i15 != 0 goto label14;

        goto label18;

     label14:
        if $i15 == 1 goto label15;

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i15);

        interfaceinvoke $r22.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("number-columns-spanned", $r27);

     label15:
        $i5 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: int getNumberRowsSpanned(org.apache.poi.hwpf.usermodel.Table,int[],int,int,org.apache.poi.hwpf.usermodel.TableCell)>(r5, $r6, i11, i13, $r20);

        if $i5 <= 1 goto label16;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5);

        interfaceinvoke $r22.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("number-rows-spanned", $r26);

     label16:
        $i6 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: int getTableLevel()>();

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToFoConverter: void processParagraphes(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int)>(r23, $r22, $r20, $i6);

        $z5 = interfaceinvoke $r22.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z5 != 0 goto label17;

        $r24 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r25 = virtualinvoke $r24.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        interfaceinvoke $r22.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r25);

     label17:
        interfaceinvoke $r19.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r22);

     label18:
        i13 = i13 + 1;

        goto label04;

     label19:
        $z2 = interfaceinvoke $r19.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z2 == 0 goto label21;

        $z3 = virtualinvoke $r17.<org.apache.poi.hwpf.usermodel.TableRow: boolean isTableHeader()>();

        if $z3 == 0 goto label20;

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

        goto label21;

     label20:
        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

     label21:
        i11 = i11 + 1;

        goto label03;

     label22:
        $r7 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r8 = virtualinvoke $r7.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTable()>();

        interfaceinvoke $r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("table-layout", "fixed");

        $z0 = interfaceinvoke $r2.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z0 == 0 goto label23;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

     label23:
        $z1 = interfaceinvoke $r4.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z1 == 0 goto label24;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        interfaceinvoke r16.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        goto label25;

     label24:
        $r10 = <org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.util.POILogger logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table without body starting on offset ");

        $i1 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: int getStartOffset()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- ");

        $i2 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: int getEndOffset()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r15);

     label25:
        return;
    }

    protected boolean setId(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r3;
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        java.util.Set $r2, $r4;
        org.apache.poi.util.POILogger $r5;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        r3 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.Set usedIds>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r5.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object)>(5, "Tried to create element with same ID \'", r1, "\'. Skipped");

        return 0;

     label1:
        interfaceinvoke r3.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("id", r1);

        $r4 = r0.<org.apache.poi.hwpf.converter.WordToFoConverter: java.util.Set usedIds>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return 1;
    }

    public void setOutputCharactersLanguage(boolean)
    {
        org.apache.poi.hwpf.converter.WordToFoConverter r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoConverter;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.converter.WordToFoConverter: boolean outputCharactersLanguage> = z0;

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/converter/WordToFoConverter;");

        <org.apache.poi.hwpf.converter.WordToFoConverter: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
