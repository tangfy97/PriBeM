public class org.mortbay.util.MultiPartOutputStream extends java.io.FilterOutputStream
{
    private static byte[] __CRLF;
    private static byte[] __DASHDASH;
    public static java.lang.String MULTIPART_MIXED;
    public static java.lang.String MULTIPART_X_MIXED_REPLACE;
    private java.lang.String boundary;
    private byte[] boundaryBytes;
    private boolean inPart;

    public void <init>(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r10;
        org.mortbay.util.MultiPartOutputStream r0;
        long $l1;
        java.lang.StringBuffer $r2, $r3, $r4, $r6;
        int $i0;
        java.lang.String $r5, $r7, $r8, $r9;

        r0 := @this: org.mortbay.util.MultiPartOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        r0.<org.mortbay.util.MultiPartOutputStream: boolean inPart> = 0;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("jetty");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l1, 36);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.mortbay.util.MultiPartOutputStream: java.lang.String boundary> = $r7;

        $r9 = r0.<org.mortbay.util.MultiPartOutputStream: java.lang.String boundary>;

        $r8 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        $r10 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.lang.String)>($r8);

        r0.<org.mortbay.util.MultiPartOutputStream: byte[] boundaryBytes> = $r10;

        r0.<org.mortbay.util.MultiPartOutputStream: boolean inPart> = 0;

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r2, $r4, $r6, $r8, $r10;
        byte[] $r1, $r3, $r5, $r7, $r9;
        org.mortbay.util.MultiPartOutputStream r0;
        boolean $z0;

        r0 := @this: org.mortbay.util.MultiPartOutputStream;

        $z0 = r0.<org.mortbay.util.MultiPartOutputStream: boolean inPart>;

        if $z0 == 0 goto label1;

        $r10 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r9 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r9);

     label1:
        $r2 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r1 = <org.mortbay.util.MultiPartOutputStream: byte[] __DASHDASH>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1);

        $r4 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r3 = r0.<org.mortbay.util.MultiPartOutputStream: byte[] boundaryBytes>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r3);

        $r6 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r5 = <org.mortbay.util.MultiPartOutputStream: byte[] __DASHDASH>;

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r5);

        $r8 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r7 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[])>($r7);

        r0.<org.mortbay.util.MultiPartOutputStream: boolean inPart> = 0;

        specialinvoke r0.<java.io.FilterOutputStream: void close()>();

        return;
    }

    public java.lang.String getBoundary()
    {
        java.lang.String $r1;
        org.mortbay.util.MultiPartOutputStream r0;

        r0 := @this: org.mortbay.util.MultiPartOutputStream;

        $r1 = r0.<org.mortbay.util.MultiPartOutputStream: java.lang.String boundary>;

        return $r1;
    }

    public java.io.OutputStream getOut()
    {
        java.io.OutputStream $r1;
        org.mortbay.util.MultiPartOutputStream r0;

        r0 := @this: org.mortbay.util.MultiPartOutputStream;

        $r1 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        return $r1;
    }

    public void startPart(java.lang.String) throws java.io.IOException
    {
        byte[] $r1, $r3, $r5, $r14, $r15, $r17, $r19;
        org.mortbay.util.MultiPartOutputStream r0;
        java.lang.StringBuffer $r7, $r9, $r11;
        java.lang.String r10, $r12, $r13;
        boolean $z0;
        java.io.OutputStream $r2, $r4, $r6, $r8, $r16, $r18, $r20;

        r0 := @this: org.mortbay.util.MultiPartOutputStream;

        r10 := @parameter0: java.lang.String;

        $z0 = r0.<org.mortbay.util.MultiPartOutputStream: boolean inPart>;

        if $z0 == 0 goto label1;

        $r20 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r19 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r20.<java.io.OutputStream: void write(byte[])>($r19);

     label1:
        r0.<org.mortbay.util.MultiPartOutputStream: boolean inPart> = 1;

        $r2 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r1 = <org.mortbay.util.MultiPartOutputStream: byte[] __DASHDASH>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1);

        $r4 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r3 = r0.<org.mortbay.util.MultiPartOutputStream: byte[] boundaryBytes>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r3);

        $r6 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r5 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r5);

        $r8 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Content-Type: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        $r14 = virtualinvoke $r12.<java.lang.String: byte[] getBytes(java.lang.String)>($r13);

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[])>($r14);

        $r16 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r15 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r16.<java.io.OutputStream: void write(byte[])>($r15);

        $r18 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r17 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r18.<java.io.OutputStream: void write(byte[])>($r17);

        return;
    }

    public void startPart(java.lang.String, java.lang.String[]) throws java.io.IOException
    {
        byte[] $r1, $r3, $r5, $r14, $r15, $r18, $r23, $r24, $r26;
        org.mortbay.util.MultiPartOutputStream r0;
        java.lang.String[] r17;
        java.lang.StringBuffer $r7, $r9, $r11;
        int $i0, i1;
        java.lang.String r10, $r12, $r13, $r20, $r21;
        boolean $z0;
        java.io.OutputStream $r2, $r4, $r6, $r8, $r16, $r19, $r22, $r25, $r27;

        r0 := @this: org.mortbay.util.MultiPartOutputStream;

        r10 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.String[];

        $z0 = r0.<org.mortbay.util.MultiPartOutputStream: boolean inPart>;

        if $z0 == 0 goto label1;

        $r27 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r26 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r27.<java.io.OutputStream: void write(byte[])>($r26);

     label1:
        r0.<org.mortbay.util.MultiPartOutputStream: boolean inPart> = 1;

        $r2 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r1 = <org.mortbay.util.MultiPartOutputStream: byte[] __DASHDASH>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1);

        $r4 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r3 = r0.<org.mortbay.util.MultiPartOutputStream: byte[] boundaryBytes>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r3);

        $r6 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r5 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r5);

        $r8 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Content-Type: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        $r14 = virtualinvoke $r12.<java.lang.String: byte[] getBytes(java.lang.String)>($r13);

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[])>($r14);

        $r16 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r15 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r16.<java.io.OutputStream: void write(byte[])>($r15);

        i1 = 0;

     label2:
        if r17 == null goto label3;

        $i0 = lengthof r17;

        if i1 >= $i0 goto label3;

        $r22 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r21 = r17[i1];

        $r20 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        $r23 = virtualinvoke $r21.<java.lang.String: byte[] getBytes(java.lang.String)>($r20);

        virtualinvoke $r22.<java.io.OutputStream: void write(byte[])>($r23);

        $r25 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r24 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r25.<java.io.OutputStream: void write(byte[])>($r24);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r19 = r0.<org.mortbay.util.MultiPartOutputStream: java.io.OutputStream out>;

        $r18 = <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF>;

        virtualinvoke $r19.<java.io.OutputStream: void write(byte[])>($r18);

        return;
    }

    static void <clinit>()
    {
        byte[] $r2, $r5;
        java.lang.String $r0, $r1, $r3, $r4;
        java.lang.Exception $r6;

        <org.mortbay.util.MultiPartOutputStream: java.lang.String MULTIPART_MIXED> = "multipart/mixed";

        <org.mortbay.util.MultiPartOutputStream: java.lang.String MULTIPART_X_MIXED_REPLACE> = "multipart/x-mixed-replace";

     label1:
        $r1 = "\r\n";

        $r0 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r0);

        <org.mortbay.util.MultiPartOutputStream: byte[] __CRLF> = $r2;

        $r4 = "--";

        $r3 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        <org.mortbay.util.MultiPartOutputStream: byte[] __DASHDASH> = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        staticinvoke <java.lang.System: void exit(int)>(1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
