public final enum class org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE extends java.lang.Enum
{
    public static final enum org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE ZLIB;
    public static final enum org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE BZLIB;
    public static final enum org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE LZO;
    int code;
    private static final org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] $VALUES;

    public static org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] values()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[]) $r1;

        return $r2;
    }

    public static org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE $r2;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;", r0);

        $r2 = (org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        int i0, i1;
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: int code> = i1;

        return;
    }

    public static org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE find(int)
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] $r0;
        int i0, i1, $i2, i3;
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE r1;

        i1 := @parameter0: int;

        $r0 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = $r0[i3];

        $i2 = r1.<org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: int code>;

        if $i2 != i1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] $r3;
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE $r0, $r1, $r2, $r4, $r5, $r6;

        $r0 = new org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE;

        specialinvoke $r0.<org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: void <init>(java.lang.String,int,int)>("ZLIB", 0, 0);

        <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE ZLIB> = $r0;

        $r1 = new org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE;

        specialinvoke $r1.<org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: void <init>(java.lang.String,int,int)>("BZLIB", 1, 1);

        <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE BZLIB> = $r1;

        $r2 = new org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE;

        specialinvoke $r2.<org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: void <init>(java.lang.String,int,int)>("LZO", 2, 2);

        <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE LZO> = $r2;

        $r3 = newarray (org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE)[3];

        $r4 = <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE ZLIB>;

        $r3[0] = $r4;

        $r5 = <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE BZLIB>;

        $r3[1] = $r5;

        $r6 = <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE LZO>;

        $r3[2] = $r6;

        <org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] $VALUES> = $r3;

        return;
    }
}
