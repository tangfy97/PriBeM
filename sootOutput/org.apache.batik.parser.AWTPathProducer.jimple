public class org.apache.batik.parser.AWTPathProducer extends java.lang.Object implements org.apache.batik.parser.PathHandler, org.apache.batik.parser.ShapeProducer
{
    protected org.apache.batik.ext.awt.geom.ExtendedGeneralPath path;
    protected float currentX;
    protected float currentY;
    protected float xCenter;
    protected float yCenter;
    protected int windingRule;

    public void <init>()
    {
        org.apache.batik.parser.AWTPathProducer r0;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.awt.Shape createShape(java.io.Reader, int) throws java.io.IOException, org.apache.batik.parser.ParseException
    {
        java.awt.Shape $r3;
        int i0;
        org.apache.batik.parser.AWTPathProducer $r1;
        org.apache.batik.parser.PathParser $r0;
        java.io.Reader r2;

        r2 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        $r0 = new org.apache.batik.parser.PathParser;

        specialinvoke $r0.<org.apache.batik.parser.PathParser: void <init>()>();

        $r1 = new org.apache.batik.parser.AWTPathProducer;

        specialinvoke $r1.<org.apache.batik.parser.AWTPathProducer: void <init>()>();

        virtualinvoke $r1.<org.apache.batik.parser.AWTPathProducer: void setWindingRule(int)>(i0);

        virtualinvoke $r0.<org.apache.batik.parser.PathParser: void setPathHandler(org.apache.batik.parser.PathHandler)>($r1);

        virtualinvoke $r0.<org.apache.batik.parser.AbstractParser: void parse(java.io.Reader)>(r2);

        $r3 = virtualinvoke $r1.<org.apache.batik.parser.AWTPathProducer: java.awt.Shape getShape()>();

        return $r3;
    }

    public void setWindingRule(int)
    {
        int i0;
        org.apache.batik.parser.AWTPathProducer r0;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        i0 := @parameter0: int;

        r0.<org.apache.batik.parser.AWTPathProducer: int windingRule> = i0;

        return;
    }

    public int getWindingRule()
    {
        int $i0;
        org.apache.batik.parser.AWTPathProducer r0;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        $i0 = r0.<org.apache.batik.parser.AWTPathProducer: int windingRule>;

        return $i0;
    }

    public java.awt.Shape getShape()
    {
        org.apache.batik.parser.AWTPathProducer r0;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        return $r1;
    }

    public void startPath() throws org.apache.batik.parser.ParseException
    {
        int $i0;
        org.apache.batik.parser.AWTPathProducer r0;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = 0.0F;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = 0.0F;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = 0.0F;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = 0.0F;

        $r1 = new org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $i0 = r0.<org.apache.batik.parser.AWTPathProducer: int windingRule>;

        specialinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void <init>(int)>($i0);

        r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path> = $r1;

        return;
    }

    public void endPath() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        return;
    }

    public void movetoRel(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, $f1, $f2, f3, $f4, $f5;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f3 := @parameter1: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f2 = $f1 + f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f2;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f2;

        $f4 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f5 = $f4 + f3;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f5;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f5;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void moveTo(float,float)>($f2, $f5);

        return;
    }

    public void movetoAbs(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, f1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = f1;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = f1;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void moveTo(float,float)>(f0, f1);

        return;
    }

    public void closePath() throws org.apache.batik.parser.ParseException
    {
        java.awt.geom.Point2D $r3;
        org.apache.batik.parser.AWTPathProducer r0;
        float $f0, $f1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1, $r2;
        double $d0, $d1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void closePath()>();

        $r2 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $r3 = virtualinvoke $r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        $d0 = virtualinvoke $r3.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f0;

        $d1 = virtualinvoke $r3.<java.awt.geom.Point2D: double getY()>();

        $f1 = (float) $d1;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f1;

        return;
    }

    public void linetoRel(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, $f1, $f2, f3, $f4, $f5;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f3 := @parameter1: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f2 = $f1 + f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f2;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f2;

        $f4 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f5 = $f4 + f3;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f5;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f5;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>($f2, $f5);

        return;
    }

    public void linetoAbs(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, f1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = f1;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = f1;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>(f0, f1);

        return;
    }

    public void linetoHorizontalRel(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, $f1, $f2, $f3;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f2 = $f1 + f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f2;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f2;

        $f3 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f3;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>($f2, $f3);

        return;
    }

    public void linetoHorizontalAbs(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, $f1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = f0;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f1;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>(f0, $f1);

        return;
    }

    public void linetoVerticalRel(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float $f0, f1, $f2, $f3;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f1 := @parameter0: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f0 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f0;

        $f2 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f3 = $f2 + f1;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f3;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f3;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>($f0, $f3);

        return;
    }

    public void linetoVerticalAbs(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float $f0, f1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f1 := @parameter0: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f0 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = f1;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = f1;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>($f0, f1);

        return;
    }

    public void curvetoCubicRel(float, float, float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;
        float f0, $f1, f2, $f3, f4, $f5, $f6, $f7, $f8, f9, $f10, $f11, f12, $f13, $f14, f15, $f16, $f17;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f2 := @parameter1: float;

        f4 := @parameter2: float;

        f9 := @parameter3: float;

        f12 := @parameter4: float;

        f15 := @parameter5: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f7 = $f1 + f0;

        $f3 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f8 = $f3 + f2;

        $f5 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f6 = $f5 + f4;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f6;

        $f10 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f11 = $f10 + f9;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f11;

        $f13 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f14 = $f13 + f12;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f14;

        $f16 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f17 = $f16 + f15;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f17;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void curveTo(float,float,float,float,float,float)>($f7, $f8, $f6, $f11, $f14, $f17);

        return;
    }

    public void curvetoCubicAbs(float, float, float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, f1, f2, f3, f4, f5;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = f2;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = f3;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = f4;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = f5;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void curveTo(float,float,float,float,float,float)>(f0, f1, f2, f3, f4, f5);

        return;
    }

    public void curvetoCubicSmoothRel(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, $f9, $f10, f11, $f12, $f13, f14, $f15, $f16, f17, $f18, $f19;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f6 := @parameter0: float;

        f11 := @parameter1: float;

        f14 := @parameter2: float;

        f17 := @parameter3: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f0 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f2 = $f0 * 2.0F;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float xCenter>;

        $f9 = $f2 - $f1;

        $f3 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f5 = $f3 * 2.0F;

        $f4 = r0.<org.apache.batik.parser.AWTPathProducer: float yCenter>;

        $f10 = $f5 - $f4;

        $f7 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f8 = $f7 + f6;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f8;

        $f12 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f13 = $f12 + f11;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f13;

        $f15 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f16 = $f15 + f14;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f16;

        $f18 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f19 = $f18 + f17;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f19;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void curveTo(float,float,float,float,float,float)>($f9, $f10, $f8, $f13, $f16, $f19);

        return;
    }

    public void curvetoCubicSmoothAbs(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, f9, f10, f11;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f6 := @parameter0: float;

        f9 := @parameter1: float;

        f10 := @parameter2: float;

        f11 := @parameter3: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f0 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f2 = $f0 * 2.0F;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float xCenter>;

        $f7 = $f2 - $f1;

        $f3 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f5 = $f3 * 2.0F;

        $f4 = r0.<org.apache.batik.parser.AWTPathProducer: float yCenter>;

        $f8 = $f5 - $f4;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = f6;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = f9;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = f10;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = f11;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void curveTo(float,float,float,float,float,float)>($f7, $f8, f6, f9, f10, f11);

        return;
    }

    public void curvetoQuadraticRel(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, $f1, $f2, f3, $f4, $f5, f6, $f7, $f8, f9, $f10, $f11;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f3 := @parameter1: float;

        f6 := @parameter2: float;

        f9 := @parameter3: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f2 = $f1 + f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f2;

        $f4 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f5 = $f4 + f3;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f5;

        $f7 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f8 = $f7 + f6;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f8;

        $f10 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f11 = $f10 + f9;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f11;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void quadTo(float,float,float,float)>($f2, $f5, $f8, $f11);

        return;
    }

    public void curvetoQuadraticAbs(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, f1, f2, f3;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = f0;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = f1;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = f2;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = f3;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void quadTo(float,float,float,float)>(f0, f1, f2, f3);

        return;
    }

    public void curvetoQuadraticSmoothRel(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, $f9, $f10, f11, $f12, $f13;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f8 := @parameter0: float;

        f11 := @parameter1: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f0 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f2 = $f0 * 2.0F;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float xCenter>;

        $f3 = $f2 - $f1;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f3;

        $f4 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f6 = $f4 * 2.0F;

        $f5 = r0.<org.apache.batik.parser.AWTPathProducer: float yCenter>;

        $f7 = $f6 - $f5;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f7;

        $f9 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f10 = $f9 + f8;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f10;

        $f12 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f13 = $f12 + f11;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f13;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void quadTo(float,float,float,float)>($f3, $f7, $f10, $f13);

        return;
    }

    public void curvetoQuadraticSmoothAbs(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f8 := @parameter0: float;

        f9 := @parameter1: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f0 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f2 = $f0 * 2.0F;

        $f1 = r0.<org.apache.batik.parser.AWTPathProducer: float xCenter>;

        $f3 = $f2 - $f1;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f3;

        $f4 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f6 = $f4 * 2.0F;

        $f5 = r0.<org.apache.batik.parser.AWTPathProducer: float yCenter>;

        $f7 = $f6 - $f5;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f7;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = f8;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = f9;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void quadTo(float,float,float,float)>($f3, $f7, f8, f9);

        return;
    }

    public void arcRel(float, float, float, boolean, boolean, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, f1, f2, f3, $f4, $f5, f6, $f7, $f8;
        boolean z0, z1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        f3 := @parameter5: float;

        f6 := @parameter6: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        $f4 = r0.<org.apache.batik.parser.AWTPathProducer: float currentX>;

        $f5 = $f4 + f3;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = $f5;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = $f5;

        $f7 = r0.<org.apache.batik.parser.AWTPathProducer: float currentY>;

        $f8 = $f7 + f6;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = $f8;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = $f8;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void arcTo(float,float,float,boolean,boolean,float,float)>(f0, f1, f2, z0, z1, $f5, $f8);

        return;
    }

    public void arcAbs(float, float, float, boolean, boolean, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPathProducer r0;
        float f0, f1, f2, f3, f4;
        boolean z0, z1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPathProducer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        f3 := @parameter5: float;

        f4 := @parameter6: float;

        $r1 = r0.<org.apache.batik.parser.AWTPathProducer: org.apache.batik.ext.awt.geom.ExtendedGeneralPath path>;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentX> = f3;

        r0.<org.apache.batik.parser.AWTPathProducer: float xCenter> = f3;

        r0.<org.apache.batik.parser.AWTPathProducer: float currentY> = f4;

        r0.<org.apache.batik.parser.AWTPathProducer: float yCenter> = f4;

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void arcTo(float,float,float,boolean,boolean,float,float)>(f0, f1, f2, z0, z1, f3, f4);

        return;
    }
}
