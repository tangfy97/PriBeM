public class ucar.nc2.iosp.nowrad.NOWRadheader extends java.lang.Object
{
    static final int NEXET;
    static final int NEXLH;
    static final int NEXLL;
    static final int NEXLM;
    static final int NEXVI;
    static final int NOWRADHF;
    static final int USRADHF;
    public static java.lang.String[] mons;
    private static final boolean useStationDB;
    private static org.slf4j.Logger log;
    ucar.nc2.units.DateFormatter formatter;
    private boolean isR;
    private java.lang.String cmemo;
    private java.lang.String ctilt;
    private java.lang.String ctitle;
    private java.lang.String cunit;
    private java.lang.String cname;
    private ucar.nc2.NetcdfFile ncfile;
    private boolean noHeader;
    private int numX;
    private int numY;
    private ucar.unidata.io.RandomAccessFile raf;

    public void <init>()
    {
        ucar.nc2.iosp.nowrad.NOWRadheader r0;
        ucar.nc2.units.DateFormatter $r1;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r1.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.units.DateFormatter formatter> = $r1;

        r0.<ucar.nc2.iosp.nowrad.NOWRadheader: boolean isR> = 0;

        return;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile)
    {
        ucar.unidata.io.RandomAccessFile r0;
        ucar.nc2.iosp.nowrad.NOWRadheader r1;
        long $l0;
        java.io.IOException $r2, $r3, $r4;
        byte $b1;
        int $i2;

        r1 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

     label1:
        $l0 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: long length()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("zero length file ");

        throw $r2;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        return 0;

     label4:
        $i2 = virtualinvoke r1.<ucar.nc2.iosp.nowrad.NOWRadheader: int readTop(ucar.unidata.io.RandomAccessFile)>(r0);

        if $i2 != 0 goto label6;

     label5:
        return 0;

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        return 0;

     label8:
        return 1;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label7;
    }

    int readTop(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] r1;
        ucar.unidata.io.RandomAccessFile r0;
        ucar.nc2.iosp.nowrad.NOWRadheader r2;
        long $l0;
        short $s3, $s5, $s7;
        byte $b2, $b4, $b6, b8;
        int $i1, $i9, $i10;
        java.lang.String $r4;
        boolean $z0, $z1, $z2;

        r2 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $l0 = (long) 0;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l0);

        r1 = newarray (byte)[35];

        $i1 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r1);

        if $i1 == 35 goto label1;

        return 0;

     label1:
        $b2 = r1[0];

        $s3 = virtualinvoke r2.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b2);

        if $s3 != 0 goto label2;

        $b4 = r1[1];

        $s5 = virtualinvoke r2.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b4);

        $i9 = (int) $s5;

        if $i9 != 240 goto label2;

        $b6 = r1[2];

        $s7 = virtualinvoke r2.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b6);

        $i10 = (int) $s7;

        if $i10 == 9 goto label3;

     label2:
        return 0;

     label3:
        b8 = r1[3];

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>(r1, 15, 5);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("NOWRA");

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("USRAD");

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("NEX");

        if $z2 == 0 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    public byte[] getData(int) throws java.lang.Exception
    {
        byte[] r2;
        ucar.unidata.io.RandomAccessFile $r1, $r3, $r4;
        ucar.nc2.iosp.nowrad.NOWRadheader r0;
        long $l0, $l2;
        int i1, i3;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        i3 := @parameter0: int;

        $r1 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.io.RandomAccessFile raf>;

        $l0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: long length()>();

        i1 = (int) $l0;

        r2 = newarray (byte)[i1];

        $r3 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.io.RandomAccessFile raf>;

        $l2 = (long) 0;

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l2);

        $r4 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r2);

        return r2;
    }

    public void setProperty(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        ucar.nc2.iosp.nowrad.NOWRadheader r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    void read(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile) throws java.lang.Exception
    {
        byte[] r3, $r6, $r12, $r35;
        byte $b29, $b32, $b38, $b41, $b43, $b44, b45, b48, b49, b50, b51, b52;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r71, $r73, $r77, $r91;
        long $l0;
        short $s30, $s33, $s39, $s42;
        ucar.nc2.iosp.nowrad.NOWRadheader r0;
        java.util.Date $r33;
        java.util.TimeZone $r21;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i31, $i34, $i35, $i36, $i37, $i40, i46, i47, $i53, $i54, $i55, $i56, $i57, $i58, $i59;
        org.slf4j.Logger $r70;
        java.lang.Object $r39, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r58, $r59, $r61, $r63, $r65, $r67;
        java.text.SimpleDateFormat $r90;
        java.lang.String $r9, $r11, $r32, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r60, $r62, $r64, $r66, $r68, $r72, $r74, r75, r76, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r92, $r93, $r94, $r95;
        ucar.unidata.io.RandomAccessFile r1;
        boolean $z0, $z1, $z2;
        java.util.List $r38, $r57;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7, $f8, $f9, f10, f11;
        ucar.nc2.NetcdfFile r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r2 := @parameter1: ucar.nc2.NetcdfFile;

        r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.io.RandomAccessFile raf> = r1;

        r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile> = r2;

        $l0 = (long) 0;

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l0);

        r3 = newarray (byte)[250];

        $i1 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r3);

        if $i1 == 250 goto label1;

        $r70 = <ucar.nc2.iosp.nowrad.NOWRadheader: org.slf4j.Logger log>;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error reading nids product header ");

        $r72 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r70.<org.slf4j.Logger: void warn(java.lang.String)>($r74);

     label1:
        $b43 = r3[3];

        $r78 = new java.lang.String;

        specialinvoke $r78.<java.lang.String: void <init>(byte[],int,int)>(r3, 15, 8);

        $i53 = (int) $b43;

        $i2 = 4 + $i53;

        $b44 = r3[$i2];

        $r79 = new java.lang.String;

        specialinvoke $r79.<java.lang.String: void <init>(byte[])>(r3);

        $r6 = newarray (byte)[2];

        $r6[0] = -16;

        $r6[1] = 10;

        $r80 = new java.lang.String;

        specialinvoke $r80.<java.lang.String: void <init>(byte[])>($r6);

        $i3 = virtualinvoke $r79.<java.lang.String: int indexOf(java.lang.String)>($r80);

        $r81 = new java.lang.String;

        $i4 = $i3 + 2;

        specialinvoke $r81.<java.lang.String: void <init>(byte[],int,int)>(r3, $i4, 4);

        $r9 = virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String trim(java.lang.String)>($r81);

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        r0.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY> = $i5;

        $r82 = new java.lang.String;

        $i6 = $i3 + 6;

        specialinvoke $r82.<java.lang.String: void <init>(byte[],int,int)>(r3, $i6, 5);

        $r11 = virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String trim(java.lang.String)>($r82);

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r0.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX> = $i7;

        $r12 = newarray (byte)[2];

        $r12[0] = -16;

        $r12[1] = 3;

        $r83 = new java.lang.String;

        specialinvoke $r83.<java.lang.String: void <init>(byte[])>($r12);

        $i8 = virtualinvoke $r79.<java.lang.String: int indexOf(java.lang.String)>($r83);

        $r84 = new java.lang.String;

        $i9 = $i8 + 2;

        specialinvoke $r84.<java.lang.String: void <init>(byte[],int,int)>(r3, $i9, 20);

        b45 = 0;

        b52 = 0;

        b51 = 0;

        b50 = 0;

        b49 = 0;

        b48 = 0;

        $z0 = virtualinvoke $r78.<java.lang.String: boolean contains(java.lang.CharSequence)>("USRADHF");

        if $z0 == 0 goto label2;

        b45 = 3;

        b52 = 3;

        b51 = 3;

        b50 = 3;

        b49 = 3;

        b48 = 3;

     label2:
        $r85 = new java.lang.String;

        $i10 = $i8 + 22;

        $i11 = $i10 + b52;

        specialinvoke $r85.<java.lang.String: void <init>(byte[],int,int)>(r3, $i11, 2);

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r85);

        $r86 = new java.lang.String;

        $i13 = $i8 + 25;

        $i14 = $i13 + b51;

        specialinvoke $r86.<java.lang.String: void <init>(byte[],int,int)>(r3, $i14, 2);

        $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r86);

        $r87 = new java.lang.String;

        $i16 = $i8 + 28;

        $i17 = $i16 + b49;

        specialinvoke $r87.<java.lang.String: void <init>(byte[],int,int)>(r3, $i17, 2);

        $i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r87);

        $r88 = new java.lang.String;

        $i19 = $i8 + 31;

        $i20 = $i19 + b48;

        specialinvoke $r88.<java.lang.String: void <init>(byte[],int,int)>(r3, $i20, 3);

        $i21 = virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: int getMonth(java.lang.String)>($r88);

        $r89 = new java.lang.String;

        $i22 = $i8 + 35;

        $i23 = $i22 + b50;

        specialinvoke $r89.<java.lang.String: void <init>(byte[],int,int)>(r3, $i23, 2);

        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r89);

        $r90 = new java.text.SimpleDateFormat;

        specialinvoke $r90.<java.text.SimpleDateFormat: void <init>()>();

        $r21 = <ucar.unidata.util.DateUtil: java.util.TimeZone TIMEZONE_GMT>;

        virtualinvoke $r90.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r21);

        virtualinvoke $r90.<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>("yyyy/MM/dd HH:mm");

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = virtualinvoke $r90.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r32);

        $r92 = new java.lang.String;

        $i25 = $i8 + 40;

        specialinvoke $r92.<java.lang.String: void <init>(byte[],int,int)>(r3, $i25, 45);

        $r35 = newarray (byte)[2];

        $r35[0] = -16;

        $r35[1] = 11;

        $r93 = new java.lang.String;

        specialinvoke $r93.<java.lang.String: void <init>(byte[])>($r35);

        $i26 = virtualinvoke $r79.<java.lang.String: int indexOf(java.lang.String)>($r93);

        $z1 = virtualinvoke $r78.<java.lang.String: boolean contains(java.lang.CharSequence)>("NOWRAD");

        if $z1 == 0 goto label5;

        $r94 = new java.lang.String;

        $i34 = $i26 + 2;

        specialinvoke $r94.<java.lang.String: void <init>(byte[],int,int)>(r3, $i34, 68);

        $r57 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String,boolean,boolean)>($r94, " ", 1, 1);

        $r58 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(0);

        r75 = (java.lang.String) $r58;

        $r59 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(1);

        $r60 = (java.lang.String) $r59;

        $d14 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r60);

        $d15 = staticinvoke <java.lang.Math: double toDegrees(double)>($d14);

        $r61 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(2);

        $r62 = (java.lang.String) $r61;

        $d16 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r62);

        $d17 = staticinvoke <java.lang.Math: double toDegrees(double)>($d16);

        $r63 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(3);

        $r64 = (java.lang.String) $r63;

        $d18 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r64);

        $d19 = staticinvoke <java.lang.Math: double toDegrees(double)>($d18);

        $r65 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(4);

        $r66 = (java.lang.String) $r65;

        $d20 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r66);

        $d21 = staticinvoke <java.lang.Math: double toDegrees(double)>($d20);

        $r67 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(5);

        $r68 = (java.lang.String) $r67;

        $d22 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r68);

        $d23 = staticinvoke <java.lang.Math: double toDegrees(double)>($d22);

        $i35 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        $i36 = $i35 - 1;

        $d24 = (double) $i36;

        $d25 = $d24 * $d21;

        $d26 = $d17 - $d25;

        f10 = (float) $d26;

        $d27 = $d15 + $d19;

        f6 = (float) $d27;

        f11 = (float) $d17;

        $d28 = $d15 - $d19;

        f7 = (float) $d28;

        i46 = $i26 + 71;

        $i54 = (int) $b43;

        $i37 = 172 + $i54;

        $b38 = r3[$i37];

        $s39 = virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b38);

        $i55 = (int) $s39;

        if $i55 != 240 goto label3;

        $i56 = (int) $b43;

        $i40 = 173 + $i56;

        $b41 = r3[$i40];

        $s42 = virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b41);

        $i57 = (int) $s42;

        if $i57 == 12 goto label4;

     label3:
        return;

     label4:
        virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: void setProductInfo(java.lang.String,java.util.Date)>($r78, $r33);

        $f9 = (float) $d21;

        $f8 = (float) $d23;

        virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.geoloc.ProjectionImpl nowrad(int,float,float,float,float,float,float,java.util.Date)>(i46, f10, f6, f11, f7, $f9, $f8, $r33);

        goto label8;

     label5:
        $z2 = virtualinvoke $r78.<java.lang.String: boolean contains(java.lang.CharSequence)>("USRADHF");

        if $z2 == 0 goto label8;

        $r95 = new java.lang.String;

        $i27 = $i26 + 2;

        specialinvoke $r95.<java.lang.String: void <init>(byte[],int,int)>(r3, $i27, 107);

        $r38 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String,boolean,boolean)>($r95, " ", 1, 1);

        $r39 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(0);

        r76 = (java.lang.String) $r39;

        $r40 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(1);

        $r41 = (java.lang.String) $r40;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r41);

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $r42 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(2);

        $r43 = (java.lang.String) $r42;

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r43);

        $d3 = staticinvoke <java.lang.Math: double toDegrees(double)>($d2);

        $r44 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(3);

        $r45 = (java.lang.String) $r44;

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r45);

        $d5 = staticinvoke <java.lang.Math: double toDegrees(double)>($d4);

        $r46 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(4);

        $r47 = (java.lang.String) $r46;

        $d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r47);

        $d7 = staticinvoke <java.lang.Math: double toDegrees(double)>($d6);

        $r48 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(5);

        $r49 = (java.lang.String) $r48;

        $d8 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r49);

        $d9 = staticinvoke <java.lang.Math: double toDegrees(double)>($d8);

        $r50 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(6);

        $r51 = (java.lang.String) $r50;

        $d10 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r51);

        $d11 = staticinvoke <java.lang.Math: double toDegrees(double)>($d10);

        $r52 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(7);

        $r53 = (java.lang.String) $r52;

        $d12 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r53);

        staticinvoke <java.lang.Math: double toDegrees(double)>($d12);

        $r54 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(8);

        $r55 = (java.lang.String) $r54;

        $d13 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r55);

        staticinvoke <java.lang.Math: double toDegrees(double)>($d13);

        i47 = $i26 + 110;

        $i28 = $i26 + 110;

        $b29 = r3[$i28];

        $s30 = virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b29);

        $i58 = (int) $s30;

        if $i58 != 240 goto label6;

        $i31 = $i26 + 111;

        $b32 = r3[$i31];

        $s33 = virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b32);

        $i59 = (int) $s33;

        if $i59 == 12 goto label7;

     label6:
        return;

     label7:
        virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: void setProductInfo(java.lang.String,java.util.Date)>($r78, $r33);

        $f5 = (float) $d1;

        $f4 = (float) $d3;

        $f3 = (float) $d5;

        $f2 = (float) $d7;

        $f1 = (float) $d9;

        $f0 = (float) $d11;

        virtualinvoke r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.geoloc.ProjectionImpl nowradL(int,float,float,float,float,float,float,java.util.Date)>(i47, $f5, $f4, $f3, $f2, $f1, $f0, $r33);

     label8:
        virtualinvoke r2.<ucar.nc2.NetcdfFile: void finish()>();

        return;
    }

    java.lang.String trim(java.lang.String)
    {
        ucar.nc2.iosp.nowrad.NOWRadheader r3;
        char $c1;
        int $i0, i2;
        java.lang.StringBuilder $r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r3 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    int getMonth(java.lang.String)
    {
        ucar.nc2.iosp.nowrad.NOWRadheader r3;
        int $i0, i1;
        java.lang.String[] $r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r3 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r0 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        if i1 >= 12 goto label3;

        $r1 = <ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String[] mons>;

        $r2 = $r1[i1];

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $i0 = i1 + 1;

        return $i0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    ucar.unidata.geoloc.ProjectionImpl nowradL(int, float, float, float, float, float, float, java.util.Date)
    {
        ucar.unidata.geoloc.ProjectionPointImpl r54, r57, r60;
        ucar.nc2.constants.FeatureType $r31;
        ucar.nc2.Attribute $r7, $r8, $r18, $r30, $r39, $r41, $r44, $r48, $r49, $r50, $r69, $r70, $r71, $r82, $r83, $r92;
        java.lang.StringBuilder $r19, $r20, $r23;
        long $l0, $l4;
        ucar.ma2.Array $r16, $r64, $r75, $r87;
        ucar.ma2.Index $r88;
        ucar.nc2.iosp.nowrad.NOWRadheader r2;
        java.util.Date r12, $r21;
        int[] $r15, $r63, $r74, $r86;
        ucar.ma2.DataType $r6, $r13, $r37, $r47, $r61, $r68, $r72, $r80, $r84;
        ucar.nc2.units.DateFormatter $r17;
        int $i1, $i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20;
        ucar.nc2.Variable $r4, $r34, $r45, $r66, $r77;
        ucar.unidata.util.Parameter r91;
        ucar.unidata.geoloc.projection.LambertConformal $r51;
        java.lang.Class $r14, $r62, $r73, $r85;
        java.lang.Object $r90;
        ucar.nc2.constants.AxisType $r9;
        double[] r11, r93, r94;
        java.util.ArrayList $r0;
        java.lang.String $r10, $r22, $r24, $r33, $r35, $r40, $r42, $r79;
        ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo $r43;
        ucar.nc2.Dimension $r1, $r26, $r27;
        ucar.unidata.geoloc.LatLonPointImpl $r52, $r55, $r58;
        java.util.List $r81;
        float f0, f1, f2, f3, f4, f5;
        ucar.nc2.NetcdfFile $r3, $r5, $r25, $r28, $r29, $r32, $r36, $r38, $r46, $r65, $r67, $r76, $r78, $r89;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, $d21, $d22, $d23, $d24;
        ucar.unidata.geoloc.ProjectionPoint $r53, $r56, $r59;

        r2 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        i3 := @parameter0: int;

        f2 := @parameter1: float;

        f3 := @parameter2: float;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f4 := @parameter5: float;

        f5 := @parameter6: float;

        r12 := @parameter7: java.util.Date;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new ucar.nc2.Dimension;

        specialinvoke $r1.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("time", 1, 1, 0, 0);

        $r3 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r3.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r1);

        $r4 = new ucar.nc2.Variable;

        $r5 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r4.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r5, null, null, "time");

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r4.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r6);

        virtualinvoke $r4.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("time");

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time since base date");

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = new ucar.nc2.Attribute;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r10 = virtualinvoke $r9.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r10);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

        r11 = newarray (double)[1];

        $l0 = virtualinvoke r12.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

        r11[0] = $d0;

        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r14 = virtualinvoke $r13.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r15 = newarray (int)[1];

        $r15[0] = 1;

        $r16 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r14, $r15, r11);

        virtualinvoke $r4.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r16, 0);

        $r17 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r17.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r18 = new ucar.nc2.Attribute;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("msecs since ");

        $r21 = new java.util.Date;

        specialinvoke $r21.<java.util.Date: void <init>(long)>(0L);

        $r22 = virtualinvoke $r17.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r24);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

        $r25 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r25.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r4);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r26 = new ucar.nc2.Dimension;

        $i1 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        specialinvoke $r26.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("y", $i1, 1, 0, 0);

        $r27 = new ucar.nc2.Dimension;

        $i2 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        specialinvoke $r27.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("x", $i2, 1, 0, 0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        $r28 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r28.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r27);

        $r29 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r29.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r26);

        $r32 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r30 = new ucar.nc2.Attribute;

        $r31 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        $r33 = virtualinvoke $r31.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        specialinvoke $r30.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("cdm_data_type", $r33);

        virtualinvoke $r32.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r30);

        $r34 = new ucar.nc2.Variable;

        $r36 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r35 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname>;

        specialinvoke $r34.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r36, null, null, $r35);

        $r37 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        virtualinvoke $r34.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r37);

        virtualinvoke $r34.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r0);

        $r38 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r38.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r34);

        $r39 = new ucar.nc2.Attribute;

        $r40 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle>;

        specialinvoke $r39.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r40);

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r39);

        $r41 = new ucar.nc2.Attribute;

        $r42 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit>;

        specialinvoke $r41.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r42);

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r41);

        $r43 = new ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo;

        $i6 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        $i5 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        $l4 = (long) i3;

        specialinvoke $r43.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: void <init>(ucar.nc2.iosp.nowrad.NOWRadheader,int,int,long,boolean)>(r2, $i6, $i5, $l4, 0);

        virtualinvoke $r34.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r43);

        $r44 = new ucar.nc2.Attribute;

        specialinvoke $r44.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "time y x");

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r44);

        $r45 = new ucar.nc2.Variable;

        $r46 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r45.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r46, null, null, "x");

        $r47 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r45.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r47);

        virtualinvoke $r45.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("x");

        $r48 = new ucar.nc2.Attribute;

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "projection x coordinate");

        virtualinvoke $r45.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r48);

        $r49 = new ucar.nc2.Attribute;

        specialinvoke $r49.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "km");

        virtualinvoke $r45.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r49);

        $r50 = new ucar.nc2.Attribute;

        specialinvoke $r50.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoX");

        virtualinvoke $r45.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r50);

        $i7 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        r93 = newarray (double)[$i7];

        $r51 = new ucar.unidata.geoloc.projection.LambertConformal;

        $d4 = (double) f0;

        $d3 = (double) f1;

        $d2 = (double) f2;

        $d1 = (double) f3;

        specialinvoke $r51.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d4, $d3, $d2, $d1);

        $r52 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r52.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(51.8294, -135.8736);

        $r53 = virtualinvoke $r51.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r52);

        r54 = (ucar.unidata.geoloc.ProjectionPointImpl) $r53;

        $r55 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r55.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(17.2454, -70.1154);

        $r56 = virtualinvoke $r51.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r55);

        r57 = (ucar.unidata.geoloc.ProjectionPointImpl) $r56;

        $r58 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d6 = (double) f0;

        $d5 = (double) f1;

        specialinvoke $r58.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d6, $d5);

        $r59 = virtualinvoke $r51.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r58);

        r60 = (ucar.unidata.geoloc.ProjectionPointImpl) $r59;

        $d7 = virtualinvoke r54.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $d8 = virtualinvoke r57.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $d9 = virtualinvoke r57.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $d10 = virtualinvoke r54.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $d12 = $d9 - $d10;

        $i8 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        $i9 = $i8 - 1;

        $d11 = (double) $i9;

        d13 = $d12 / $d11;

        i18 = 0;

     label1:
        $i10 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        if i18 >= $i10 goto label2;

        $d22 = (double) i18;

        $d23 = $d22 * d13;

        $d24 = $d7 + $d23;

        r93[i18] = $d24;

        i18 = i18 + 1;

        goto label1;

     label2:
        $r61 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r62 = virtualinvoke $r61.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r63 = newarray (int)[1];

        $i11 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        $r63[0] = $i11;

        $r64 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r62, $r63, r93);

        virtualinvoke $r45.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r64, 0);

        $r65 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r65.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r45);

        $r66 = new ucar.nc2.Variable;

        $r67 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r66.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r67, null, null, "y");

        $r68 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r66.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r68);

        virtualinvoke $r66.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("y");

        $r69 = new ucar.nc2.Attribute;

        specialinvoke $r69.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "projection y coordinate");

        virtualinvoke $r66.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r69);

        $r70 = new ucar.nc2.Attribute;

        specialinvoke $r70.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "km");

        virtualinvoke $r66.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r70);

        $r71 = new ucar.nc2.Attribute;

        specialinvoke $r71.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoY");

        virtualinvoke $r66.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r71);

        $i12 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        r94 = newarray (double)[$i12];

        $d14 = virtualinvoke r54.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $d15 = virtualinvoke r57.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $d17 = $d14 - $d15;

        $i13 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        $i14 = $i13 - 1;

        $d16 = (double) $i14;

        d18 = $d17 / $d16;

        i19 = 0;

     label3:
        $i15 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        if i19 >= $i15 goto label4;

        $d19 = (double) i19;

        $d20 = $d19 * d18;

        $d21 = $d8 + $d20;

        r94[i19] = $d21;

        i19 = i19 + 1;

        goto label3;

     label4:
        $r72 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r73 = virtualinvoke $r72.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r74 = newarray (int)[1];

        $i16 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        $r74[0] = $i16;

        $r75 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r73, $r74, r94);

        virtualinvoke $r66.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r75, 0);

        $r76 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r76.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r66);

        $r77 = new ucar.nc2.Variable;

        $r78 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r79 = virtualinvoke $r51.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String getClassName()>();

        specialinvoke $r77.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r78, null, null, $r79);

        $r80 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        virtualinvoke $r77.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r80);

        virtualinvoke $r77.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("");

        $r81 = virtualinvoke $r51.<ucar.unidata.geoloc.ProjectionImpl: java.util.List getProjectionParameters()>();

        i20 = 0;

     label5:
        $i17 = interfaceinvoke $r81.<java.util.List: int size()>();

        if i20 >= $i17 goto label6;

        $r90 = interfaceinvoke $r81.<java.util.List: java.lang.Object get(int)>(i20);

        r91 = (ucar.unidata.util.Parameter) $r90;

        $r92 = new ucar.nc2.Attribute;

        specialinvoke $r92.<ucar.nc2.Attribute: void <init>(ucar.unidata.util.Parameter)>(r91);

        virtualinvoke $r77.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r92);

        i20 = i20 + 1;

        goto label5;

     label6:
        $r82 = new ucar.nc2.Attribute;

        specialinvoke $r82.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransformType", "Projection");

        virtualinvoke $r77.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r82);

        $r83 = new ucar.nc2.Attribute;

        specialinvoke $r83.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "x y ");

        virtualinvoke $r77.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r83);

        $r84 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        $r85 = virtualinvoke $r84.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r86 = newarray (int)[0];

        $r87 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r85, $r86);

        $r88 = virtualinvoke $r87.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        virtualinvoke $r87.<ucar.ma2.Array: void setChar(ucar.ma2.Index,char)>($r88, 32);

        virtualinvoke $r77.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r87, 0);

        $r89 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r89.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r77);

        return $r51;
    }

    ucar.unidata.geoloc.ProjectionImpl nowrad(int, float, float, float, float, float, float, java.util.Date)
    {
        ucar.nc2.constants.AxisType $r9;
        ucar.nc2.constants.FeatureType $r31;
        ucar.nc2.Attribute $r7, $r8, $r18, $r30, $r39, $r41, $r44, $r48, $r49, $r50, $r59, $r60, $r61;
        java.lang.StringBuilder $r19, $r20, $r23;
        double[] r11, r67, r68;
        long $l0, $l4;
        java.util.ArrayList $r0;
        java.lang.String $r10, $r22, $r24, $r33, $r35, $r40, $r42;
        ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo $r43;
        ucar.ma2.Array $r16, $r54, $r65;
        ucar.nc2.Dimension $r1, $r26, $r27;
        ucar.nc2.iosp.nowrad.NOWRadheader r2;
        java.util.Date r12, $r21;
        int[] $r15, $r53, $r64;
        ucar.ma2.DataType $r6, $r13, $r37, $r47, $r51, $r58, $r62;
        float f0, f1, $f2, $f3, $f4, f5, f6, $f7, $f8, $f9, f10, f11;
        ucar.nc2.NetcdfFile $r3, $r5, $r25, $r28, $r29, $r32, $r36, $r38, $r46, $r55, $r57, $r66;
        ucar.nc2.units.DateFormatter $r17;
        int $i1, $i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        ucar.nc2.Variable $r4, $r34, $r45, $r56;
        double $d0, $d1, $d2;
        java.lang.Class $r14, $r52, $r63;

        r2 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        i3 := @parameter0: int;

        f0 := @parameter1: float;

        f5 := @parameter2: float;

        f10 := @parameter3: float;

        f11 := @parameter4: float;

        f1 := @parameter5: float;

        f6 := @parameter6: float;

        r12 := @parameter7: java.util.Date;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new ucar.nc2.Dimension;

        specialinvoke $r1.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("time", 1, 1, 0, 0);

        $r3 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r3.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r1);

        $r4 = new ucar.nc2.Variable;

        $r5 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r4.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r5, null, null, "time");

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r4.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r6);

        virtualinvoke $r4.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("time");

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time since base date");

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = new ucar.nc2.Attribute;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r10 = virtualinvoke $r9.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r10);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

        r11 = newarray (double)[1];

        $l0 = virtualinvoke r12.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

        r11[0] = $d0;

        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r14 = virtualinvoke $r13.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r15 = newarray (int)[1];

        $r15[0] = 1;

        $r16 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r14, $r15, r11);

        virtualinvoke $r4.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r16, 0);

        $r17 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r17.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r18 = new ucar.nc2.Attribute;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("msecs since ");

        $r21 = new java.util.Date;

        specialinvoke $r21.<java.util.Date: void <init>(long)>(0L);

        $r22 = virtualinvoke $r17.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r24);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

        $r25 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r25.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r4);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r26 = new ucar.nc2.Dimension;

        $i1 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        specialinvoke $r26.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("lat", $i1, 1, 0, 0);

        $r27 = new ucar.nc2.Dimension;

        $i2 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        specialinvoke $r27.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("lon", $i2, 1, 0, 0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        $r28 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r28.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r27);

        $r29 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r29.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r26);

        $r32 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r30 = new ucar.nc2.Attribute;

        $r31 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        $r33 = virtualinvoke $r31.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        specialinvoke $r30.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("cdm_data_type", $r33);

        virtualinvoke $r32.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r30);

        $r34 = new ucar.nc2.Variable;

        $r36 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r35 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname>;

        specialinvoke $r34.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r36, null, null, $r35);

        $r37 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        virtualinvoke $r34.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r37);

        virtualinvoke $r34.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r0);

        $r38 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r38.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r34);

        $r39 = new ucar.nc2.Attribute;

        $r40 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle>;

        specialinvoke $r39.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r40);

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r39);

        $r41 = new ucar.nc2.Attribute;

        $r42 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit>;

        specialinvoke $r41.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r42);

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r41);

        $r43 = new ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo;

        $i6 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        $i5 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        $l4 = (long) i3;

        specialinvoke $r43.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: void <init>(ucar.nc2.iosp.nowrad.NOWRadheader,int,int,long,boolean)>(r2, $i6, $i5, $l4, 0);

        virtualinvoke $r34.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r43);

        $r44 = new ucar.nc2.Attribute;

        specialinvoke $r44.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "time lat lon");

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r44);

        $r45 = new ucar.nc2.Variable;

        $r46 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r45.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r46, null, null, "lon");

        $r47 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r45.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r47);

        virtualinvoke $r45.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("lon");

        $r48 = new ucar.nc2.Attribute;

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "longitude");

        virtualinvoke $r45.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r48);

        $r49 = new ucar.nc2.Attribute;

        specialinvoke $r49.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degree");

        virtualinvoke $r45.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r49);

        $r50 = new ucar.nc2.Attribute;

        specialinvoke $r50.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Lon");

        virtualinvoke $r45.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r50);

        $i7 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        r67 = newarray (double)[$i7];

        i13 = 0;

     label1:
        $i8 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        if i13 >= $i8 goto label2;

        $f7 = (float) i13;

        $f8 = $f7 * f6;

        $f9 = f5 + $f8;

        $d2 = (double) $f9;

        r67[i13] = $d2;

        i13 = i13 + 1;

        goto label1;

     label2:
        $r51 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r52 = virtualinvoke $r51.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r53 = newarray (int)[1];

        $i9 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numX>;

        $r53[0] = $i9;

        $r54 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r52, $r53, r67);

        virtualinvoke $r45.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r54, 0);

        $r55 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r55.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r45);

        $r56 = new ucar.nc2.Variable;

        $r57 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r56.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r57, null, null, "lat");

        $r58 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r56.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r58);

        virtualinvoke $r56.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("lat");

        $r59 = new ucar.nc2.Attribute;

        specialinvoke $r59.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "latitude");

        virtualinvoke $r56.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r59);

        $r60 = new ucar.nc2.Attribute;

        specialinvoke $r60.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degree");

        virtualinvoke $r56.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r60);

        $r61 = new ucar.nc2.Attribute;

        specialinvoke $r61.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Lat");

        virtualinvoke $r56.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r61);

        $i10 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        r68 = newarray (double)[$i10];

        i14 = 0;

     label3:
        $i11 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        if i14 >= $i11 goto label4;

        $f2 = (float) i14;

        $f3 = $f2 * f1;

        $f4 = f0 + $f3;

        $d1 = (double) $f4;

        r68[i14] = $d1;

        i14 = i14 + 1;

        goto label3;

     label4:
        $r62 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r63 = virtualinvoke $r62.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r64 = newarray (int)[1];

        $i12 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: int numY>;

        $r64[0] = $i12;

        $r65 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r63, $r64, r68);

        virtualinvoke $r56.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r65, 0);

        $r66 = r2.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r66.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r56);

        return null;
    }

    void setProductInfo(java.lang.String, java.util.Date)
    {
        ucar.nc2.iosp.nowrad.NOWRadheader r1;
        java.util.Date r2;
        ucar.nc2.constants.FeatureType $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        ucar.nc2.Attribute $r5, $r11, $r13, $r15, $r17, $r19, $r21, $r25, $r27;
        java.lang.StringBuilder $r6, $r7, $r8;
        ucar.nc2.NetcdfFile $r4, $r10, $r12, $r14, $r16, $r18, $r20, $r24, $r26;
        ucar.nc2.units.DateFormatter $r22;
        java.lang.String r0, r3, $r9, $r23, $r29;

        r1 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        r3 = null;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("NOWRADHF");

        if $z0 == 0 goto label1;

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cmemo> = "NOWRAD  Base Reflectivity at Tilt 1";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle> = "BREF: Base Reflectivity [dBZ]";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit> = "dBZ";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname> = "Reflectivity";

        r3 = "NOWRAD Product";

        goto label8;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("USRADHF");

        if $z1 == 0 goto label2;

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cmemo> = "NOWRAD  Base Reflectivity at Tilt 1";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle> = "BREF: Base Reflectivity [dBZ]";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit> = "dBZ";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname> = "Reflectivity";

        r3 = "NOWRAD Product";

        goto label8;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("NEXET");

        if $z2 == 0 goto label3;

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cmemo> = "NOWRAD Echo Tops";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle> = "Echo Tops Composite";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit> = "K FT";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname> = "EchoTopsComposite";

        r3 = "NOWRAD Product";

        goto label8;

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("NEXLL");

        if $z3 == 0 goto label4;

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cmemo> = "NOWRAD Layer Comp. Reflectivity - Low";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle> = "LayerReflectivityLow";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit> = "dBZ";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname> = "Reflectivity";

        r3 = "NOWRAD Product";

        goto label8;

     label4:
        $z4 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("NEXLM");

        if $z4 == 0 goto label5;

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cmemo> = "NOWRAD Layer Comp. Reflectivity - Mid";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle> = "LayerReflectivityMid";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit> = "dBZ";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname> = "Reflectivity";

        r3 = "NOWRAD Product";

        goto label8;

     label5:
        $z5 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("NEXLH");

        if $z5 == 0 goto label6;

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cmemo> = "NOWRAD Layer Comp. Reflectivity - High";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle> = "LayerReflectivityHigh";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit> = "dBZ";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname> = "ReflectivityHigh";

        r3 = "NOWRAD Product";

        goto label8;

     label6:
        $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("NEXVI");

        if $z6 == 0 goto label7;

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cmemo> = "NOWRAD ";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle> = "Vert. Integrated Liquid Water";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit> = "Knots";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname> = "VILwater";

        r3 = "NOWRAD ";

        goto label8;

     label7:
        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctilt> = "error";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String ctitle> = "error";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cunit> = "error";

        r1.<ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String cname> = "error";

     label8:
        $r4 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r5 = new ucar.nc2.Attribute;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOWRAD radar composite products.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("summary", $r9);

        virtualinvoke $r4.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r5);

        $r10 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("title", "NOWRAD");

        virtualinvoke $r10.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r11);

        $r12 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r13 = new ucar.nc2.Attribute;

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("keywords", "NOWRAD");

        virtualinvoke $r12.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r13);

        $r14 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r15 = new ucar.nc2.Attribute;

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("creator_name", "NOAA/NWS");

        virtualinvoke $r14.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r15);

        $r16 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r17 = new ucar.nc2.Attribute;

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("creator_url", "http://www.ncdc.noaa.gov/oa/radar/radarproducts.html");

        virtualinvoke $r16.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r17);

        $r18 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r19 = new ucar.nc2.Attribute;

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("naming_authority", "NOAA/NCDC");

        virtualinvoke $r18.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r19);

        $r20 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r21 = new ucar.nc2.Attribute;

        $r22 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.units.DateFormatter formatter>;

        $r23 = virtualinvoke $r22.<ucar.nc2.units.DateFormatter: java.lang.String toDateOnlyString(java.util.Date)>(r2);

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("base_date", $r23);

        virtualinvoke $r20.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r21);

        $r24 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r25 = new ucar.nc2.Attribute;

        specialinvoke $r25.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("conventions", "_Coordinates");

        virtualinvoke $r24.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r25);

        $r26 = r1.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.nc2.NetcdfFile ncfile>;

        $r27 = new ucar.nc2.Attribute;

        $r28 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        $r29 = virtualinvoke $r28.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("cdm_data_type", $r29);

        virtualinvoke $r26.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r27);

        return;
    }

    public static int shortsToInt(short, short, boolean)
    {
        byte[] r0;
        short s0, s5;
        byte $b2, $b4, $b7, $b9;
        int $i1, $i3, $i6, $i8, $i10, $i11, $i12, $i13, $i14;
        boolean z0;

        s0 := @parameter0: short;

        s5 := @parameter1: short;

        z0 := @parameter2: boolean;

        r0 = newarray (byte)[4];

        $i11 = (int) s0;

        $i1 = $i11 >>> 8;

        $b2 = (byte) $i1;

        r0[0] = $b2;

        $i12 = (int) s0;

        $i3 = $i12 >>> 0;

        $b4 = (byte) $i3;

        r0[1] = $b4;

        $i13 = (int) s5;

        $i6 = $i13 >>> 8;

        $b7 = (byte) $i6;

        r0[2] = $b7;

        $i14 = (int) s5;

        $i8 = $i14 >>> 0;

        $b9 = (byte) $i8;

        r0[3] = $b9;

        $i10 = staticinvoke <ucar.nc2.iosp.nowrad.NOWRadheader: int bytesToInt(byte[],boolean)>(r0, 0);

        return $i10;
    }

    public static int bytesToInt(byte[], boolean)
    {
        byte[] r0;
        byte b0, b1, b2, b3;
        boolean z0;
        short $s4, $s5, $s8, $s11, $s14, $s16, $s17, $s20, $s24, $s25, $s28, $s30, $s32, $s34, $s36, $s38;
        int $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i18, $i19, $i21, $i22, $i23, $i26, $i27, $i29, $i31, $i33, $i35, $i37, $i39;

        r0 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        b0 = r0[0];

        b1 = r0[1];

        b2 = r0[2];

        b3 = r0[3];

        if z0 == 0 goto label1;

        $s24 = (short) b0;

        $s16 = $s24 & 255;

        $s25 = (short) b1;

        $s14 = $s25 & 255;

        $i26 = (int) $s14;

        $i15 = $i26 << 8;

        $i27 = (int) $s16;

        $i19 = $i27 + $i15;

        $s28 = (short) b2;

        $s17 = $s28 & 255;

        $i29 = (int) $s17;

        $i18 = $i29 << 16;

        $i22 = $i19 + $i18;

        $s30 = (short) b3;

        $s20 = $s30 & 255;

        $i31 = (int) $s20;

        $i21 = $i31 << 24;

        $i23 = $i22 + $i21;

        return $i23;

     label1:
        $s32 = (short) b0;

        $s4 = $s32 & 255;

        $i33 = (int) $s4;

        $i7 = $i33 << 24;

        $s34 = (short) b1;

        $s5 = $s34 & 255;

        $i35 = (int) $s5;

        $i6 = $i35 << 16;

        $i10 = $i7 + $i6;

        $s36 = (short) b2;

        $s8 = $s36 & 255;

        $i37 = (int) $s8;

        $i9 = $i37 << 8;

        $i12 = $i10 + $i9;

        $s38 = (short) b3;

        $s11 = $s38 & 255;

        $i39 = (int) $s11;

        $i13 = $i12 + $i39;

        return $i13;
    }

    int getUInt(byte[], int)
    {
        byte[] r2;
        ucar.nc2.iosp.nowrad.NOWRadheader r1;
        short $s4;
        byte $b3;
        int[] r0;
        int i0, $i1, $i2, i5, i6, i7, i8, $i9, $i11;

        r1 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i5 = 1;

        i6 = 0;

        r0 = newarray (int)[i0];

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        $b3 = r2[i7];

        $s4 = virtualinvoke r1.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b3);

        $i9 = (int) $s4;

        r0[i7] = $i9;

        i7 = i7 + 1;

        goto label1;

     label2:
        i8 = i0 - 1;

     label3:
        if i8 < 0 goto label4;

        $i1 = r0[i8];

        $i2 = i5 * $i1;

        i6 = i6 + $i2;

        i5 = i5 * 256;

        $i11 = (int) -1;

        i8 = i8 + $i11;

        goto label3;

     label4:
        return i6;
    }

    int getInt(byte[], int)
    {
        byte[] r2;
        ucar.nc2.iosp.nowrad.NOWRadheader r1;
        short $s7;
        byte $b6;
        int[] r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i8, i9, i10, i11, $i12, $i14, $i16;

        r1 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i8 = 1;

        i9 = 0;

        r0 = newarray (int)[i0];

        i10 = 0;

     label1:
        if i10 >= i0 goto label2;

        $b6 = r2[i10];

        $s7 = virtualinvoke r1.<ucar.nc2.iosp.nowrad.NOWRadheader: short convertunsignedByte2Short(byte)>($b6);

        $i12 = (int) $s7;

        r0[i10] = $i12;

        i10 = i10 + 1;

        goto label1;

     label2:
        $i1 = r0[0];

        if $i1 <= 127 goto label3;

        $i4 = r0[0];

        $i5 = $i4 - 128;

        r0[0] = $i5;

        $i14 = (int) -1;

        i8 = $i14;

     label3:
        i11 = i0 - 1;

     label4:
        if i11 < 0 goto label5;

        $i2 = r0[i11];

        $i3 = i8 * $i2;

        i9 = i9 + $i3;

        i8 = i8 * 256;

        $i16 = (int) -1;

        i11 = i11 + $i16;

        goto label4;

     label5:
        return i9;
    }

    public static int bytesToInt(byte, byte, boolean)
    {
        short $s2, $s6, $s8, $s12;
        byte b0, b1;
        int $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i13;
        boolean z0;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $s8 = (short) b0;

        $s6 = $s8 & 255;

        $i9 = (int) b1;

        $i5 = $i9 << 8;

        $i10 = (int) $s6;

        $i7 = $i10 + $i5;

        return $i7;

     label1:
        $i11 = (int) b0;

        $i3 = $i11 << 8;

        $s12 = (short) b1;

        $s2 = $s12 & 255;

        $i13 = (int) $s2;

        $i4 = $i3 + $i13;

        return $i4;
    }

    public short convertunsignedByte2Short(byte)
    {
        ucar.nc2.iosp.nowrad.NOWRadheader r0;
        short $s1, $s2, $s3, $s5;
        byte b0;
        int $i4, $i6, $i7;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        b0 := @parameter0: byte;

        $i6 = (int) b0;

        if $i6 >= 0 goto label1;

        $s2 = (short) b0;

        $i7 = (int) $s2;

        $i4 = $i7 + 256;

        $s3 = (short) $i4;

        return $s3;

     label1:
        $s5 = (short) b0;

        $s1 = (short) $s5;

        return $s1;
    }

    public int convertShort2unsignedInt(short)
    {
        ucar.nc2.iosp.nowrad.NOWRadheader r0;
        short s0;
        int $i1, $i2, $i3, $i5, $i6, $i8, $i9;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        s0 := @parameter0: short;

        $i3 = (int) s0;

        if $i3 >= 0 goto label1;

        $i5 = (int) -1;

        $i6 = (int) s0;

        $i1 = $i5 * $i6;

        $i8 = (int) 32768;

        $i2 = $i1 + $i8;

        goto label2;

     label1:
        $i9 = (int) s0;

        $i2 = $i9;

     label2:
        return $i2;
    }

    public static java.util.Date getDate(int, int)
    {
        java.util.Date $r0;
        long $l2, $l3, $l4, $l6, $l7, l8;
        int i0, $i1, i5;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        $i1 = i0 - 1;

        $l2 = (long) $i1;

        $l3 = $l2 * 24L;

        $l4 = $l3 * 3600L;

        $l7 = $l4 * 1000L;

        $l6 = (long) i5;

        l8 = $l7 + $l6;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(l8);

        return $r0;
    }

    public void flush() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.nowrad.NOWRadheader r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        $r1 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1, $r2;
        ucar.nc2.iosp.nowrad.NOWRadheader r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadheader;

        $r1 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.io.RandomAccessFile raf>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void close()>();

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        org.slf4j.Logger $r1;

        <ucar.nc2.iosp.nowrad.NOWRadheader: boolean useStationDB> = 0;

        <ucar.nc2.iosp.nowrad.NOWRadheader: int USRADHF> = 1;

        <ucar.nc2.iosp.nowrad.NOWRadheader: int NOWRADHF> = 0;

        <ucar.nc2.iosp.nowrad.NOWRadheader: int NEXVI> = 6;

        <ucar.nc2.iosp.nowrad.NOWRadheader: int NEXLM> = 4;

        <ucar.nc2.iosp.nowrad.NOWRadheader: int NEXLL> = 3;

        <ucar.nc2.iosp.nowrad.NOWRadheader: int NEXLH> = 5;

        <ucar.nc2.iosp.nowrad.NOWRadheader: int NEXET> = 2;

        $r0 = newarray (java.lang.String)[12];

        $r0[0] = "JAN";

        $r0[1] = "FEB";

        $r0[2] = "MAR";

        $r0[3] = "APR";

        $r0[4] = "MAY";

        $r0[5] = "JUN";

        $r0[6] = "JUL";

        $r0[7] = "AUG";

        $r0[8] = "SEP";

        $r0[9] = "OCT";

        $r0[10] = "NOV";

        $r0[11] = "DEC";

        <ucar.nc2.iosp.nowrad.NOWRadheader: java.lang.String[] mons> = $r0;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/nowrad/NOWRadheader;");

        <ucar.nc2.iosp.nowrad.NOWRadheader: org.slf4j.Logger log> = $r1;

        return;
    }
}
