public final class com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage extends com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase
{
    public static final int LINK;
    private static final int FIELD_LENGTH;
    private int link;

    public final int getLink()
    {
        int $i0;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage;

        $i0 = r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int link>;

        return $i0;
    }

    public void setLink(int)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage r0;
        com.hp.hpl.jena.tdb.base.block.Block $r1;
        int i0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage;

        i0 := @parameter0: int;

        r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int link> = i0;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: com.hp.hpl.jena.tdb.base.block.Block getBackingBlock()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(4, i0);

        return;
    }

    protected void _reset(com.hp.hpl.jena.tdb.base.block.Block)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage r0;
        com.hp.hpl.jena.tdb.base.block.Block r1;
        int $i0, $i1;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int getCount()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: void reset(com.hp.hpl.jena.tdb.base.block.Block,int)>(r1, $i0);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt(int)>(4);

        r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int link> = $i1;

        return;
    }

    public static int calcRecordSize(com.hp.hpl.jena.tdb.base.record.RecordFactory, int)
    {
        int i0, $i1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        i0 := @parameter1: int;

        $i1 = staticinvoke <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: int calcRecordSize(com.hp.hpl.jena.tdb.base.record.RecordFactory,int,int)>(r0, i0, 4);

        return $i1;
    }

    public static int calcBlockSize(com.hp.hpl.jena.tdb.base.record.RecordFactory, int)
    {
        int i0, $i1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        i0 := @parameter1: int;

        $i1 = staticinvoke <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: int calcBlockSize(com.hp.hpl.jena.tdb.base.record.RecordFactory,int,int)>(r0, i0, 4);

        return $i1;
    }

    public static com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage createBlank(com.hp.hpl.jena.tdb.base.block.Block, com.hp.hpl.jena.tdb.base.record.RecordFactory)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage $r3;
        com.hp.hpl.jena.tdb.base.block.Block r1;
        int $i1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r2;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        $r3 = new com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage;

        $i1 = (int) -1;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: void <init>(com.hp.hpl.jena.tdb.base.block.Block,com.hp.hpl.jena.tdb.base.record.RecordFactory,int,int)>(r1, r2, 0, $i1);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage format(com.hp.hpl.jena.tdb.base.block.Block, com.hp.hpl.jena.tdb.base.record.RecordFactory)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage $r3;
        com.hp.hpl.jena.tdb.base.block.Block r0;
        int $i0, $i1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r4;
        java.nio.ByteBuffer $r1, $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        r4 := @parameter1: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>(0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt(int)>(4);

        $r3 = new com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: void <init>(com.hp.hpl.jena.tdb.base.block.Block,com.hp.hpl.jena.tdb.base.record.RecordFactory,int,int)>(r0, r4, $i0, $i1);

        return $r3;
    }

    private void <init>(com.hp.hpl.jena.tdb.base.block.Block, com.hp.hpl.jena.tdb.base.record.RecordFactory, int, int)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage r0;
        com.hp.hpl.jena.tdb.base.block.Block r1;
        int i0, i1, $i3;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: void <init>(com.hp.hpl.jena.tdb.base.block.Block,int,com.hp.hpl.jena.tdb.base.record.RecordFactory,int)>(r1, 4, r2, i0);

        $i3 = (int) -1;

        r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int link> = $i3;

        r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int link> = i1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage r1;
        java.lang.Integer $r4;
        java.lang.Long $r3;
        com.hp.hpl.jena.tdb.base.block.Block $r2;
        int $i0;
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r5;
        java.lang.String $r6;

        r1 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage;

        $r0 = newarray (java.lang.Object)[3];

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: com.hp.hpl.jena.tdb.base.block.Block getBackingBlock()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.base.block.Block: java.lang.Long getId()>();

        $r0[0] = $r3;

        $i0 = virtualinvoke r1.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int getLink()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[1] = $r4;

        $r5 = r1.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer recBuff>;

        $r0[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("RecordBufferPage[id=%d,link=%d]: %s", $r0);

        return $r6;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int FIELD_LENGTH> = 4;

        <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int LINK> = 4;

        return;
    }
}
