public class org.codehaus.groovy.ast.PropertyNode extends org.codehaus.groovy.ast.AnnotatedNode implements groovyjarjarasm.asm.Opcodes, org.codehaus.groovy.ast.Variable
{
    private org.codehaus.groovy.ast.FieldNode field;
    private final org.codehaus.groovy.ast.stmt.Statement getterBlock;
    private final org.codehaus.groovy.ast.stmt.Statement setterBlock;
    private final int modifiers;
    private boolean closureShare;

    public void <init>(java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.stmt.Statement, org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r6, r7;
        org.codehaus.groovy.ast.ClassNode r3, r4;
        org.codehaus.groovy.ast.FieldNode $r1;
        int i0, $i1;
        java.lang.String r2;
        org.codehaus.groovy.ast.expr.Expression r5;
        org.codehaus.groovy.ast.PropertyNode r0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: org.codehaus.groovy.ast.ClassNode;

        r4 := @parameter3: org.codehaus.groovy.ast.ClassNode;

        r5 := @parameter4: org.codehaus.groovy.ast.expr.Expression;

        r6 := @parameter5: org.codehaus.groovy.ast.stmt.Statement;

        r7 := @parameter6: org.codehaus.groovy.ast.stmt.Statement;

        $r1 = new org.codehaus.groovy.ast.FieldNode;

        $i1 = i0 & 8;

        specialinvoke $r1.<org.codehaus.groovy.ast.FieldNode: void <init>(java.lang.String,int,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>(r2, $i1, r3, r4, r5);

        specialinvoke r0.<org.codehaus.groovy.ast.PropertyNode: void <init>(org.codehaus.groovy.ast.FieldNode,int,org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>($r1, i0, r6, r7);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.FieldNode, int, org.codehaus.groovy.ast.stmt.Statement, org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r2, r3;
        org.codehaus.groovy.ast.FieldNode r1;
        int i0;
        org.codehaus.groovy.ast.PropertyNode r0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        r1 := @parameter0: org.codehaus.groovy.ast.FieldNode;

        i0 := @parameter1: int;

        r2 := @parameter2: org.codehaus.groovy.ast.stmt.Statement;

        r3 := @parameter3: org.codehaus.groovy.ast.stmt.Statement;

        specialinvoke r0.<org.codehaus.groovy.ast.AnnotatedNode: void <init>()>();

        r0.<org.codehaus.groovy.ast.PropertyNode: boolean closureShare> = 0;

        r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field> = r1;

        r0.<org.codehaus.groovy.ast.PropertyNode: int modifiers> = i0;

        r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.stmt.Statement getterBlock> = r2;

        r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.stmt.Statement setterBlock> = r3;

        return;
    }

    public org.codehaus.groovy.ast.stmt.Statement getGetterBlock()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.PropertyNode r0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.stmt.Statement getterBlock>;

        return $r1;
    }

    public org.codehaus.groovy.ast.expr.Expression getInitialExpression()
    {
        org.codehaus.groovy.ast.expr.Expression $r2;
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.FieldNode $r1;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: org.codehaus.groovy.ast.expr.Expression getInitialExpression()>();

        return $r2;
    }

    public int getModifiers()
    {
        int $i0;
        org.codehaus.groovy.ast.PropertyNode r0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $i0 = r0.<org.codehaus.groovy.ast.PropertyNode: int modifiers>;

        return $i0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r2;
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.FieldNode $r1;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: java.lang.String getName()>();

        return $r2;
    }

    public org.codehaus.groovy.ast.stmt.Statement getSetterBlock()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.PropertyNode r0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.stmt.Statement setterBlock>;

        return $r1;
    }

    public org.codehaus.groovy.ast.ClassNode getType()
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.FieldNode $r1;
        org.codehaus.groovy.ast.ClassNode $r2;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: org.codehaus.groovy.ast.ClassNode getType()>();

        return $r2;
    }

    public void setType(org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.ClassNode r1;
        org.codehaus.groovy.ast.FieldNode $r2;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        $r2 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field>;

        virtualinvoke $r2.<org.codehaus.groovy.ast.FieldNode: void setType(org.codehaus.groovy.ast.ClassNode)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.FieldNode getField()
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.FieldNode $r1;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field>;

        return $r1;
    }

    public void setField(org.codehaus.groovy.ast.FieldNode)
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.FieldNode r1;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        r1 := @parameter0: org.codehaus.groovy.ast.FieldNode;

        r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field> = r1;

        return;
    }

    public boolean isPrivate()
    {
        int $i0, $i1;
        org.codehaus.groovy.ast.PropertyNode r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $i0 = r0.<org.codehaus.groovy.ast.PropertyNode: int modifiers>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isStatic()
    {
        int $i0, $i1;
        org.codehaus.groovy.ast.PropertyNode r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $i0 = r0.<org.codehaus.groovy.ast.PropertyNode: int modifiers>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasInitialExpression()
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.FieldNode $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field>;

        $z0 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: boolean hasInitialExpression()>();

        return $z0;
    }

    public boolean isInStaticContext()
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.FieldNode $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field>;

        $z0 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: boolean isInStaticContext()>();

        return $z0;
    }

    public boolean isDynamicTyped()
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.FieldNode $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.FieldNode field>;

        $z0 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: boolean isDynamicTyped()>();

        return $z0;
    }

    public boolean isClosureSharedVariable()
    {
        org.codehaus.groovy.ast.PropertyNode r0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        return 0;
    }

    public void setClosureSharedVariable(boolean)
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.PropertyNode: boolean closureShare> = z0;

        return;
    }

    public org.codehaus.groovy.ast.ClassNode getOriginType()
    {
        org.codehaus.groovy.ast.PropertyNode r0;
        org.codehaus.groovy.ast.ClassNode $r1;

        r0 := @this: org.codehaus.groovy.ast.PropertyNode;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ast.PropertyNode: org.codehaus.groovy.ast.ClassNode getType()>();

        return $r1;
    }
}
