public class org.jdesktop.swingx.JXTaskPane extends javax.swing.JPanel implements org.jdesktop.swingx.JXCollapsiblePane$CollapsiblePaneContainer
{
    public static final java.lang.String uiClassID;
    public static final java.lang.String SCROLL_ON_EXPAND_CHANGED_KEY;
    public static final java.lang.String TITLE_CHANGED_KEY;
    public static final java.lang.String ICON_CHANGED_KEY;
    public static final java.lang.String SPECIAL_CHANGED_KEY;
    public static final java.lang.String ANIMATED_CHANGED_KEY;
    private java.lang.String title;
    private javax.swing.Icon icon;
    private boolean special;
    private boolean collapsed;
    private boolean scrollOnExpand;
    private int mnemonic;
    private int mnemonicIndex;
    private org.jdesktop.swingx.JXCollapsiblePane collapsePane;

    public void <init>()
    {
        org.jdesktop.swingx.JXCollapsiblePane $r3, $r7, $r8;
        org.jdesktop.swingx.JXTaskPane$1 $r10;
        int $i1, $i3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        java.awt.BorderLayout $r9;
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex> = $i1;

        $r8 = new org.jdesktop.swingx.JXCollapsiblePane;

        specialinvoke $r8.<org.jdesktop.swingx.JXCollapsiblePane: void <init>()>();

        r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane> = $r8;

        $r9 = new java.awt.BorderLayout;

        specialinvoke $r9.<java.awt.BorderLayout: void <init>(int,int)>(0, 0);

        specialinvoke r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r9);

        $r3 = r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane>;

        $i3 = (int) -1;

        specialinvoke r0.<javax.swing.JPanel: void addImpl(java.awt.Component,java.lang.Object,int)>($r3, "Center", $i3);

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void updateUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void setFocusable(boolean)>(1);

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r5 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("TaskPane.animate");

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void setAnimated(boolean)>($z1);

        $r7 = r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane>;

        $r10 = new org.jdesktop.swingx.JXTaskPane$1;

        specialinvoke $r10.<org.jdesktop.swingx.JXTaskPane$1: void <init>(org.jdesktop.swingx.JXTaskPane)>(r0);

        virtualinvoke $r7.<org.jdesktop.swingx.JXCollapsiblePane: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("animationState", $r10);

        return;
    }

    public java.awt.Container getContentPane()
    {
        org.jdesktop.swingx.JXCollapsiblePane $r1;
        java.awt.Container $r2;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        return $r2;
    }

    public void updateUI()
    {
        javax.swing.plaf.ComponentUI $r2;
        org.jdesktop.swingx.JXCollapsiblePane $r1;
        org.jdesktop.swingx.plaf.TaskPaneUI $r3;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent,java.lang.Class)>(r0, class "Lorg/jdesktop/swingx/plaf/TaskPaneUI;");

        $r3 = (org.jdesktop.swingx.plaf.TaskPaneUI) $r2;

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void setUI(org.jdesktop.swingx.plaf.TaskPaneUI)>($r3);

        return;
    }

    public void setUI(org.jdesktop.swingx.plaf.TaskPaneUI)
    {
        org.jdesktop.swingx.plaf.TaskPaneUI r1;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        r1 := @parameter0: org.jdesktop.swingx.plaf.TaskPaneUI;

        specialinvoke r0.<javax.swing.JPanel: void setUI(javax.swing.plaf.PanelUI)>(r1);

        return;
    }

    public java.lang.String getUIClassID()
    {
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        return "swingx/TaskPaneUI";
    }

    public java.lang.String getTitle()
    {
        java.lang.String $r1;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: java.lang.String title>;

        return $r1;
    }

    public void setTitle(java.lang.String)
    {
        java.lang.String r1, r2;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        r2 := @parameter0: java.lang.String;

        r1 = r0.<org.jdesktop.swingx.JXTaskPane: java.lang.String title>;

        r0.<org.jdesktop.swingx.JXTaskPane: java.lang.String title> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("title", r1, r2);

        return;
    }

    public javax.swing.Icon getIcon()
    {
        javax.swing.Icon $r1;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: javax.swing.Icon icon>;

        return $r1;
    }

    public void setIcon(javax.swing.Icon)
    {
        javax.swing.Icon r1, r2;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        r2 := @parameter0: javax.swing.Icon;

        r1 = r0.<org.jdesktop.swingx.JXTaskPane: javax.swing.Icon icon>;

        r0.<org.jdesktop.swingx.JXTaskPane: javax.swing.Icon icon> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("icon", r1, r2);

        return;
    }

    public boolean isSpecial()
    {
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $z0 = r0.<org.jdesktop.swingx.JXTaskPane: boolean special>;

        return $z0;
    }

    public void setSpecial(boolean)
    {
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        r0.<org.jdesktop.swingx.JXTaskPane: boolean special> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,boolean,boolean)>("special", $z0, $z2);

        return;
    }

    public void setScrollOnExpand(boolean)
    {
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isScrollOnExpand()>();

        r0.<org.jdesktop.swingx.JXTaskPane: boolean scrollOnExpand> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isScrollOnExpand()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,boolean,boolean)>("scrollOnExpand", $z0, $z2);

        return;
    }

    public boolean isScrollOnExpand()
    {
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $z0 = r0.<org.jdesktop.swingx.JXTaskPane: boolean scrollOnExpand>;

        return $z0;
    }

    public void setCollapsed(boolean)
    {
        org.jdesktop.swingx.JXCollapsiblePane $r1;
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isCollapsed()>();

        r0.<org.jdesktop.swingx.JXTaskPane: boolean collapsed> = z1;

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXCollapsiblePane: void setCollapsed(boolean)>(z1);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isCollapsed()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,boolean,boolean)>("collapsed", $z0, $z2);

        return;
    }

    public boolean isCollapsed()
    {
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $z0 = r0.<org.jdesktop.swingx.JXTaskPane: boolean collapsed>;

        return $z0;
    }

    public void setAnimated(boolean)
    {
        org.jdesktop.swingx.JXCollapsiblePane $r1;
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isAnimated()>();

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXCollapsiblePane: void setAnimated(boolean)>(z1);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isAnimated()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,boolean,boolean)>("animated", $z0, $z2);

        return;
    }

    public boolean isAnimated()
    {
        org.jdesktop.swingx.JXCollapsiblePane $r1;
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXCollapsiblePane: boolean isAnimated()>();

        return $z0;
    }

    public int getMnemonic()
    {
        int $i0;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $i0 = r0.<org.jdesktop.swingx.JXTaskPane: int mnemonic>;

        return $i0;
    }

    public void setMnemonic(int)
    {
        int $i0, i1, $i2;
        java.lang.String $r1;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getMnemonic()>();

        r0.<org.jdesktop.swingx.JXTaskPane: int mnemonic> = i1;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getMnemonic()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,int,int)>("mnemonic", $i0, $i2);

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.lang.String getTitle()>();

        specialinvoke r0.<org.jdesktop.swingx.JXTaskPane: void updateDisplayedMnemonicIndex(java.lang.String,int)>($r1, i1);

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void revalidate()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void repaint()>();

        return;
    }

    private void updateDisplayedMnemonicIndex(java.lang.String, int)
    {
        char $c1, $c2, $c3, $c4;
        int i0, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i15;
        java.lang.String r0;
        org.jdesktop.swingx.JXTaskPane r1;

        r1 := @this: org.jdesktop.swingx.JXTaskPane;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        if i0 != 0 goto label2;

     label1:
        $i9 = (int) -1;

        r1.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex> = $i9;

        return;

     label2:
        $c1 = (char) i0;

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $c3 = (char) i0;

        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3);

        $i10 = (int) $c2;

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(int)>($i10);

        $i11 = (int) $c4;

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int)>($i11);

        $i13 = (int) -1;

        if $i5 != $i13 goto label3;

        r1.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex> = $i6;

        goto label7;

     label3:
        $i15 = (int) -1;

        if $i6 != $i15 goto label4;

        r1.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex> = $i5;

        goto label7;

     label4:
        if $i6 >= $i5 goto label5;

        $i7 = $i6;

        goto label6;

     label5:
        $i7 = $i5;

     label6:
        r1.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex> = $i7;

     label7:
        return;
    }

    public int getDisplayedMnemonicIndex()
    {
        int $i0;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $i0 = r0.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex>;

        return $i0;
    }

    public void setDisplayedMnemonicIndex(int) throws java.lang.IllegalArgumentException
    {
        java.lang.IllegalArgumentException $r8;
        int i0, i1, $i2, $i4, $i6, $i8;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r1, $r6;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        i1 := @parameter0: int;

        i0 = r0.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex>;

        $i4 = (int) -1;

        if i1 != $i4 goto label1;

        $i6 = (int) -1;

        r0.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex> = $i6;

        goto label5;

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.lang.String getTitle()>();

        if $r1 != null goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label3:
        $i8 = (int) -1;

        if i1 < $i8 goto label4;

        if i1 < $i2 goto label5;

     label4:
        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index == ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label5:
        r0.<org.jdesktop.swingx.JXTaskPane: int mnemonicIndex> = i1;

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,int,int)>("displayedMnemonicIndex", i0, i1);

        if i1 == i0 goto label6;

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void revalidate()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void repaint()>();

     label6:
        return;
    }

    public java.awt.Component add(javax.swing.Action)
    {
        javax.swing.plaf.ComponentUI $r1;
        javax.swing.Action r2;
        org.jdesktop.swingx.plaf.TaskPaneUI $r3;
        java.awt.Component $r4;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        r2 := @parameter0: javax.swing.Action;

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: javax.swing.plaf.ComponentUI ui>;

        $r3 = (org.jdesktop.swingx.plaf.TaskPaneUI) $r1;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.plaf.TaskPaneUI: java.awt.Component createAction(javax.swing.Action)>(r2);

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.Component add(java.awt.Component)>($r4);

        return $r4;
    }

    public java.awt.Container getValidatingContainer()
    {
        java.awt.Container $r1;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.Container getParent()>();

        return $r1;
    }

    protected void addImpl(java.awt.Component, java.lang.Object, int)
    {
        int i0;
        java.lang.Object r3;
        java.awt.Container $r1;
        java.awt.Component r2;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        r2 := @parameter0: java.awt.Component;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void add(java.awt.Component,java.lang.Object,int)>(r2, r3, i0);

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void revalidate()>();

        return;
    }

    public void setLayout(java.awt.LayoutManager)
    {
        org.jdesktop.swingx.JXCollapsiblePane $r1;
        java.awt.Container $r2;
        java.awt.LayoutManager r3;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        r3 := @parameter0: java.awt.LayoutManager;

        $r1 = r0.<org.jdesktop.swingx.JXTaskPane: org.jdesktop.swingx.JXCollapsiblePane collapsePane>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.Container getContentPane()>();

        virtualinvoke $r2.<java.awt.Container: void setLayout(java.awt.LayoutManager)>(r3);

     label1:
        return;
    }

    public void remove(java.awt.Component)
    {
        java.awt.Container $r1;
        java.awt.Component r2;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        r2 := @parameter0: java.awt.Component;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void remove(java.awt.Component)>(r2);

        return;
    }

    public void remove(int)
    {
        int i0;
        java.awt.Container $r1;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void remove(int)>(i0);

        return;
    }

    public void removeAll()
    {
        java.awt.Container $r1;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @this: org.jdesktop.swingx.JXTaskPane;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void removeAll()>();

        return;
    }

    protected java.lang.String paramString()
    {
        java.lang.String $r2, $r5, $r11, $r14, $r17, $r22;
        org.jdesktop.swingx.JXTaskPane r1;
        boolean $z0, $z1, $z2;
        javax.swing.Icon $r8;
        javax.swing.plaf.PanelUI $r20;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21;

        r1 := @this: org.jdesktop.swingx.JXTaskPane;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<javax.swing.JPanel: java.lang.String paramString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",title=");

        $r5 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.lang.String getTitle()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",icon=");

        $r8 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: javax.swing.Icon getIcon()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",collapsed=");

        $z0 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: boolean isCollapsed()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",special=");

        $z1 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",scrollOnExpand=");

        $z2 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: boolean isScrollOnExpand()>();

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",ui=");

        $r20 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: javax.swing.plaf.PanelUI getUI()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

    static void access$000(org.jdesktop.swingx.JXTaskPane, java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r2, r3;
        java.lang.String r1;
        org.jdesktop.swingx.JXTaskPane r0;

        r0 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.plaf.TaskPaneAddon $r0;

        <org.jdesktop.swingx.JXTaskPane: java.lang.String ANIMATED_CHANGED_KEY> = "animated";

        <org.jdesktop.swingx.JXTaskPane: java.lang.String SPECIAL_CHANGED_KEY> = "special";

        <org.jdesktop.swingx.JXTaskPane: java.lang.String ICON_CHANGED_KEY> = "icon";

        <org.jdesktop.swingx.JXTaskPane: java.lang.String TITLE_CHANGED_KEY> = "title";

        <org.jdesktop.swingx.JXTaskPane: java.lang.String SCROLL_ON_EXPAND_CHANGED_KEY> = "scrollOnExpand";

        <org.jdesktop.swingx.JXTaskPane: java.lang.String uiClassID> = "swingx/TaskPaneUI";

        $r0 = new org.jdesktop.swingx.plaf.TaskPaneAddon;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.TaskPaneAddon: void <init>()>();

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void contribute(org.jdesktop.swingx.plaf.ComponentAddon)>($r0);

        return;
    }
}
