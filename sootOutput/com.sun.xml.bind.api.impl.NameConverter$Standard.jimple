public class com.sun.xml.bind.api.impl.NameConverter$Standard extends com.sun.xml.bind.api.impl.NameUtil implements com.sun.xml.bind.api.impl.NameConverter
{

    public void <init>()
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        specialinvoke r0.<com.sun.xml.bind.api.impl.NameUtil: void <init>()>();

        return;
    }

    public java.lang.String toClassName(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;
        java.util.List $r2;
        java.lang.String r1, $r3;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.api.impl.NameConverter$Standard: java.util.List toWordList(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String toMixedCaseName(java.util.List,boolean)>($r2, 1);

        return $r3;
    }

    public java.lang.String toVariableName(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;
        java.util.List $r2;
        java.lang.String r1, $r3;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.api.impl.NameConverter$Standard: java.util.List toWordList(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String toMixedCaseName(java.util.List,boolean)>($r2, 0);

        return $r3;
    }

    public java.lang.String toInterfaceName(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;
        java.lang.String r1, $r2;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String toClassName(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String toPropertyName(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;
        java.lang.String r1, $r2, r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String toClassName(java.lang.String)>(r1);

        r3 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("Class");

        if $z0 == 0 goto label1;

        r3 = "Clazz";

     label1:
        return r3;
    }

    public java.lang.String toConstantName(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;
        java.lang.String r1, $r2;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toConstantName(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String toPackageName(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.xml.bind.api.impl.NameConverter$Standard r17;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.util.ArrayList $r0, $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16;
        java.lang.String $r4, $r5, $r7, $r8, $r9, $r13, $r15, $r16, r18, r19, r20, $r22, r23, $r24, r25, r26;
        java.lang.Object $r3, $r6, $r14, $r21;

        r17 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r18 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r18.<java.lang.String: int indexOf(int)>(58);

        r19 = "";

        if $i0 < 0 goto label02;

        $r16 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r19 = $r16;

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http");

        if $z3 != 0 goto label01;

        $z4 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("urn");

        if $z4 == 0 goto label02;

     label01:
        $i12 = $i0 + 1;

        r18 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int)>($i12);

     label02:
        $i13 = virtualinvoke r18.<java.lang.String: int indexOf(java.lang.String)>("#");

        if $i13 < 0 goto label03;

        r18 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(0, $i13);

     label03:
        $r0 = staticinvoke <com.sun.xml.bind.api.impl.NameConverter$Standard: java.util.ArrayList tokenize(java.lang.String,java.lang.String)>(r18, "/: ");

        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label04;

        return null;

     label04:
        $i2 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i2 <= 1 goto label05;

        $i7 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $i8 = $i7 - 1;

        $r14 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        r20 = (java.lang.String) $r14;

        $i9 = virtualinvoke r20.<java.lang.String: int lastIndexOf(int)>(46);

        if $i9 <= 0 goto label05;

        $r15 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

        $i10 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $i11 = $i10 - 1;

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i11, $r15);

     label05:
        $r21 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r22 = (java.lang.String) $r21;

        r23 = $r22;

        $i14 = virtualinvoke $r22.<java.lang.String: int indexOf(int)>(58);

        if $i14 < 0 goto label06;

        r23 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int,int)>(0, $i14);

     label06:
        $r13 = r23;

        $z0 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("urn");

        if $z0 == 0 goto label07;

        $r24 = ".-";

        goto label08;

     label07:
        $r24 = ".";

     label08:
        $r1 = staticinvoke <com.sun.xml.bind.api.impl.NameConverter$Standard: java.util.ArrayList tokenize(java.lang.String,java.lang.String)>($r13, $r24);

        $r2 = staticinvoke <com.sun.xml.bind.api.impl.NameConverter$Standard: java.util.ArrayList reverse(java.util.List)>($r1);

        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r4 = (java.lang.String) $r3;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("www");

        if $z1 == 0 goto label09;

        $i5 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i6);

     label09:
        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(int,java.util.Collection)>(1, $r2);

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        i15 = 0;

     label10:
        $i16 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if i15 >= $i16 goto label12;

        $r6 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r25 = (java.lang.String) $r6;

        $r7 = staticinvoke <com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String removeIllegalIdentifierChars(java.lang.String)>(r25);

        r26 = $r7;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $z2 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: boolean isJavaIdentifier(java.lang.String)>($r8);

        if $z2 != 0 goto label11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r26 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r9 = virtualinvoke r26.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i15, $r9);

        i15 = i15 + 1;

        goto label10;

     label12:
        $r5 = staticinvoke <com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>($r0, 46);

        return $r5;
    }

    private static java.lang.String removeIllegalIdentifierChars(java.lang.String)
    {
        char $c1;
        java.lang.StringBuffer $r0, $r3;
        int $i0, i2;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label5;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if i2 != 0 goto label2;

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c1);

        if $z1 != 0 goto label2;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label4;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c1);

        if $z0 != 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private static java.util.ArrayList tokenize(java.lang.String, java.lang.String)
    {
        java.util.StringTokenizer $r0;
        java.lang.String r1, r2, $r4;
        java.util.ArrayList $r3;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r3;
    }

    private static java.util.ArrayList reverse(java.util.List)
    {
        java.util.List r1;
        int $i0, i1, $i3;
        java.lang.Object $r2;
        java.util.ArrayList $r3;

        r1 := @parameter0: java.util.List;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label2:
        return $r3;
    }

    private static java.lang.String combine(java.util.List, char)
    {
        char c1;
        java.util.List r1;
        int $i0, i2;
        java.lang.StringBuilder $r0;
        java.lang.Object $r2, $r5;
        java.lang.String $r3, $r4;

        r1 := @parameter0: java.util.List;

        c1 := @parameter1: char;

        $r0 = new java.lang.StringBuilder;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        i2 = 1;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public volatile java.lang.String toConstantName(java.util.List)
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;
        java.util.List r1;
        java.lang.String $r2;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r1 := @parameter0: java.util.List;

        $r2 = specialinvoke r0.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toConstantName(java.util.List)>(r1);

        return $r2;
    }

    public volatile java.util.List toWordList(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.sun.xml.bind.api.impl.NameUtil: java.util.List toWordList(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.lang.String capitalize(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameConverter$Standard r0;
        java.lang.String r1, $r2;

        r0 := @this: com.sun.xml.bind.api.impl.NameConverter$Standard;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String capitalize(java.lang.String)>(r1);

        return $r2;
    }
}
