public class org.apache.poi.xslf.extractor.XSLFPowerPointExtractor extends org.apache.poi.POIXMLTextExtractor
{
    public static final org.apache.poi.xslf.usermodel.XSLFRelation[] SUPPORTED_TYPES;
    private org.apache.poi.xslf.usermodel.XMLSlideShow slideshow;
    private boolean slidesByDefault;
    private boolean notesByDefault;
    private boolean masterByDefault;

    public void <init>(org.apache.poi.xslf.usermodel.XMLSlideShow)
    {
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r0;
        org.apache.poi.xslf.usermodel.XMLSlideShow r1;

        r0 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        r1 := @parameter0: org.apache.poi.xslf.usermodel.XMLSlideShow;

        specialinvoke r0.<org.apache.poi.POIXMLTextExtractor: void <init>(org.apache.poi.POIXMLDocument)>(r1);

        r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean slidesByDefault> = 1;

        r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean notesByDefault> = 0;

        r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean masterByDefault> = 0;

        r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: org.apache.poi.xslf.usermodel.XMLSlideShow slideshow> = r1;

        return;
    }

    public void <init>(org.apache.poi.xslf.XSLFSlideShow) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.poi.openxml4j.opc.OPCPackage $r3;
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r0;
        org.apache.poi.xslf.usermodel.XMLSlideShow $r1;
        org.apache.poi.xslf.XSLFSlideShow r2;

        r0 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        r2 := @parameter0: org.apache.poi.xslf.XSLFSlideShow;

        $r1 = new org.apache.poi.xslf.usermodel.XMLSlideShow;

        $r3 = virtualinvoke r2.<org.apache.poi.xslf.XSLFSlideShow: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

        specialinvoke $r1.<org.apache.poi.xslf.usermodel.XMLSlideShow: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r3);

        specialinvoke r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: void <init>(org.apache.poi.xslf.usermodel.XMLSlideShow)>($r1);

        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.OPCPackage) throws org.apache.xmlbeans.XmlException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, java.io.IOException
    {
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r0;
        org.apache.poi.xslf.XSLFSlideShow $r1;
        org.apache.poi.openxml4j.opc.OPCPackage r2;

        r0 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        r2 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        $r1 = new org.apache.poi.xslf.XSLFSlideShow;

        specialinvoke $r1.<org.apache.poi.xslf.XSLFSlideShow: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r2);

        specialinvoke r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: void <init>(org.apache.poi.xslf.XSLFSlideShow)>($r1);

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r4, $r6, $r7;
        java.lang.String[] r0;
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor $r1;
        int $i0;
        org.apache.poi.xslf.XSLFSlideShow $r2;
        java.lang.String $r3, $r5;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Use:");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("  XSLFPowerPointExtractor <filename.pptx>");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        $r1 = new org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        $r2 = new org.apache.poi.xslf.XSLFSlideShow;

        $r3 = r0[0];

        specialinvoke $r2.<org.apache.poi.xslf.XSLFSlideShow: void <init>(java.lang.String)>($r3);

        specialinvoke $r1.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: void <init>(org.apache.poi.xslf.XSLFSlideShow)>($r2);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r5 = virtualinvoke $r1.<org.apache.poi.POIXMLTextExtractor: java.lang.String getText()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5);

        virtualinvoke $r1.<org.apache.poi.POIXMLTextExtractor: void close()>();

        return;
    }

    public void setSlidesByDefault(boolean)
    {
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean slidesByDefault> = z0;

        return;
    }

    public void setNotesByDefault(boolean)
    {
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean notesByDefault> = z0;

        return;
    }

    public void setMasterByDefault(boolean)
    {
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean masterByDefault> = z0;

        return;
    }

    public java.lang.String getText()
    {
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        $z1 = r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean slidesByDefault>;

        $z0 = r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean notesByDefault>;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: java.lang.String getText(boolean,boolean)>($z1, $z0);

        return $r1;
    }

    public java.lang.String getText(boolean, boolean)
    {
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r0;
        java.lang.String $r1;
        boolean z0, z1, $z2;

        r0 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: boolean masterByDefault>;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: java.lang.String getText(boolean,boolean,boolean)>(z0, z1, $z2);

        return $r1;
    }

    public java.lang.String getText(boolean, boolean, boolean)
    {
        org.apache.poi.xslf.usermodel.XSLFComments $r9;
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommentAuthor $r19;
        org.apache.poi.xslf.usermodel.XSLFSlideMaster $r11;
        org.apache.poi.xslf.usermodel.XSLFSlide[] $r3;
        org.apache.poi.xslf.usermodel.XSLFSlideLayout $r10;
        boolean z0, z1, z2, $z3;
        java.lang.Exception $r27;
        java.util.List $r15;
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommentList $r14;
        java.lang.StringBuilder $r20, $r22, $r23;
        org.apache.poi.xslf.usermodel.XSLFSlide r7;
        org.openxmlformats.schemas.presentationml.x2006.main.CTComment r18;
        long $l1;
        java.lang.StringBuffer $r0;
        int i0, i2;
        java.lang.String $r6, $r21, $r24, $r29;
        org.apache.poi.xslf.usermodel.XSLFCommentAuthors $r5;
        java.util.Iterator $r16;
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r1;
        org.apache.poi.xslf.usermodel.XMLSlideShow $r2, $r4;
        java.lang.RuntimeException $r28;
        org.apache.poi.xslf.usermodel.XSLFNotes $r8;
        org.apache.poi.xslf.usermodel.XSLFCommonSlideData $r12, $r13, $r25, $r26;
        java.lang.Object $r17;

        r1 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: org.apache.poi.xslf.usermodel.XMLSlideShow slideshow>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XMLSlideShow: org.apache.poi.xslf.usermodel.XSLFSlide[] getSlides()>();

        $r4 = r1.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: org.apache.poi.xslf.usermodel.XMLSlideShow slideshow>;

        $r5 = virtualinvoke $r4.<org.apache.poi.xslf.usermodel.XMLSlideShow: org.apache.poi.xslf.usermodel.XSLFCommentAuthors getCommentAuthors()>();

        i0 = lengthof $r3;

        i2 = 0;

     label01:
        if i2 >= i0 goto label11;

        r7 = $r3[i2];

     label02:
        $r8 = virtualinvoke r7.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFNotes getNotes()>();

        $r9 = virtualinvoke r7.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFComments getComments()>();

        $r10 = virtualinvoke r7.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout getSlideLayout()>();

        $r11 = virtualinvoke $r10.<org.apache.poi.xslf.usermodel.XSLFSlideLayout: org.apache.poi.xslf.usermodel.XSLFSlideMaster getSlideMaster()>();

        if z0 == 0 goto label07;

        $r13 = virtualinvoke r7.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFCommonSlideData getCommonSlideData()>();

        specialinvoke r1.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: void extractText(org.apache.poi.xslf.usermodel.XSLFCommonSlideData,boolean,java.lang.StringBuffer)>($r13, 0, $r0);

        if z2 == 0 goto label04;

        if $r10 == null goto label03;

        $r26 = virtualinvoke $r10.<org.apache.poi.xslf.usermodel.XSLFSlideLayout: org.apache.poi.xslf.usermodel.XSLFCommonSlideData getCommonSlideData()>();

        specialinvoke r1.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: void extractText(org.apache.poi.xslf.usermodel.XSLFCommonSlideData,boolean,java.lang.StringBuffer)>($r26, 1, $r0);

     label03:
        if $r11 == null goto label04;

        $r25 = virtualinvoke $r11.<org.apache.poi.xslf.usermodel.XSLFSlideMaster: org.apache.poi.xslf.usermodel.XSLFCommonSlideData getCommonSlideData()>();

        specialinvoke r1.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: void extractText(org.apache.poi.xslf.usermodel.XSLFCommonSlideData,boolean,java.lang.StringBuffer)>($r25, 1, $r0);

     label04:
        if $r9 == null goto label07;

        $r14 = virtualinvoke $r9.<org.apache.poi.xslf.usermodel.XSLFComments: org.openxmlformats.schemas.presentationml.x2006.main.CTCommentList getCTCommentsList()>();

        $r15 = interfaceinvoke $r14.<org.openxmlformats.schemas.presentationml.x2006.main.CTCommentList: java.util.List getCmList()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.openxmlformats.schemas.presentationml.x2006.main.CTComment) $r17;

        if $r5 == null goto label06;

        $l1 = interfaceinvoke r18.<org.openxmlformats.schemas.presentationml.x2006.main.CTComment: long getAuthorId()>();

        $r19 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFCommentAuthors: org.openxmlformats.schemas.presentationml.x2006.main.CTCommentAuthor getAuthorById(long)>($l1);

        if $r19 == null goto label06;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = interfaceinvoke $r19.<org.openxmlformats.schemas.presentationml.x2006.main.CTCommentAuthor: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

     label06:
        $r29 = interfaceinvoke r18.<org.openxmlformats.schemas.presentationml.x2006.main.CTComment: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label05;

     label07:
        if z1 == 0 goto label08;

        if $r8 == null goto label08;

        $r12 = virtualinvoke $r8.<org.apache.poi.xslf.usermodel.XSLFNotes: org.apache.poi.xslf.usermodel.XSLFCommonSlideData getCommonSlideData()>();

        specialinvoke r1.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: void extractText(org.apache.poi.xslf.usermodel.XSLFCommonSlideData,boolean,java.lang.StringBuffer)>($r12, 0, $r0);

     label08:
        goto label10;

     label09:
        $r27 := @caughtexception;

        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r27);

        throw $r28;

     label10:
        i2 = i2 + 1;

        goto label01;

     label11:
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

        catch java.lang.Exception from label02 to label08 with label09;
    }

    private void extractText(org.apache.poi.xslf.usermodel.XSLFCommonSlideData, boolean, java.lang.StringBuffer)
    {
        org.apache.poi.xslf.usermodel.DrawingTextPlaceholder r9;
        org.apache.poi.xslf.usermodel.DrawingParagraph[] $r10;
        java.lang.StringBuffer r6;
        int $i0, i1;
        org.apache.poi.xslf.usermodel.DrawingParagraph r5;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator $r2;
        java.lang.CharSequence $r7;
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r8;
        java.util.List $r1;
        org.apache.poi.xslf.usermodel.DrawingTextBody r4;
        org.apache.poi.xslf.usermodel.XSLFCommonSlideData r0;
        java.lang.Object $r3;

        r8 := @this: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        r0 := @parameter0: org.apache.poi.xslf.usermodel.XSLFCommonSlideData;

        z0 := @parameter1: boolean;

        r6 := @parameter2: java.lang.StringBuffer;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFCommonSlideData: java.util.List getDrawingText()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xslf.usermodel.DrawingTextBody) $r3;

        if z0 == 0 goto label2;

        $z1 = r4 instanceof org.apache.poi.xslf.usermodel.DrawingTextPlaceholder;

        if $z1 == 0 goto label2;

        r9 = (org.apache.poi.xslf.usermodel.DrawingTextPlaceholder) r4;

        $z2 = virtualinvoke r9.<org.apache.poi.xslf.usermodel.DrawingTextPlaceholder: boolean isPlaceholderCustom()>();

        if $z2 != 0 goto label2;

        goto label1;

     label2:
        $r10 = virtualinvoke r4.<org.apache.poi.xslf.usermodel.DrawingTextBody: org.apache.poi.xslf.usermodel.DrawingParagraph[] getParagraphs()>();

        $i0 = lengthof $r10;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        r5 = $r10[i1];

        $r7 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.DrawingParagraph: java.lang.CharSequence getText()>();

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r7);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i1 = i1 + 1;

        goto label3;

     label4:
        goto label1;

     label5:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.xslf.usermodel.XSLFRelation[] $r0;
        org.apache.poi.xslf.usermodel.XSLFRelation $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newarray (org.apache.poi.xslf.usermodel.XSLFRelation)[6];

        $r1 = <org.apache.poi.xslf.usermodel.XSLFRelation: org.apache.poi.xslf.usermodel.XSLFRelation MAIN>;

        $r0[0] = $r1;

        $r2 = <org.apache.poi.xslf.usermodel.XSLFRelation: org.apache.poi.xslf.usermodel.XSLFRelation MACRO>;

        $r0[1] = $r2;

        $r3 = <org.apache.poi.xslf.usermodel.XSLFRelation: org.apache.poi.xslf.usermodel.XSLFRelation MACRO_TEMPLATE>;

        $r0[2] = $r3;

        $r4 = <org.apache.poi.xslf.usermodel.XSLFRelation: org.apache.poi.xslf.usermodel.XSLFRelation PRESENTATIONML>;

        $r0[3] = $r4;

        $r5 = <org.apache.poi.xslf.usermodel.XSLFRelation: org.apache.poi.xslf.usermodel.XSLFRelation PRESENTATIONML_TEMPLATE>;

        $r0[4] = $r5;

        $r6 = <org.apache.poi.xslf.usermodel.XSLFRelation: org.apache.poi.xslf.usermodel.XSLFRelation PRESENTATION_MACRO>;

        $r0[5] = $r6;

        <org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: org.apache.poi.xslf.usermodel.XSLFRelation[] SUPPORTED_TYPES> = $r0;

        return;
    }
}
