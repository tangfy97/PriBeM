public class ucar.nc2.iosp.IndexChunker$Chunk extends java.lang.Object implements ucar.nc2.iosp.Layout$Chunk
{
    private long srcElem;
    private int nelems;
    private long destElem;
    private long srcPos;

    public void <init>(long, int, long)
    {
        ucar.nc2.iosp.IndexChunker$Chunk r0;
        int i1;
        long l0, l2;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcElem> = l0;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: int nelems> = i1;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: long destElem> = l2;

        return;
    }

    public long getSrcElem()
    {
        long $l0;
        ucar.nc2.iosp.IndexChunker$Chunk r0;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        $l0 = r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcElem>;

        return $l0;
    }

    public void setSrcElem(long)
    {
        long l0;
        ucar.nc2.iosp.IndexChunker$Chunk r0;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        l0 := @parameter0: long;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcElem> = l0;

        return;
    }

    public void incrSrcElem(int)
    {
        ucar.nc2.iosp.IndexChunker$Chunk r0;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        i0 := @parameter0: int;

        $l2 = r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcElem>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcElem> = $l3;

        return;
    }

    public int getNelems()
    {
        int $i0;
        ucar.nc2.iosp.IndexChunker$Chunk r0;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        $i0 = r0.<ucar.nc2.iosp.IndexChunker$Chunk: int nelems>;

        return $i0;
    }

    public void setNelems(int)
    {
        int i0;
        ucar.nc2.iosp.IndexChunker$Chunk r0;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        i0 := @parameter0: int;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: int nelems> = i0;

        return;
    }

    public long getDestElem()
    {
        long $l0;
        ucar.nc2.iosp.IndexChunker$Chunk r0;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        $l0 = r0.<ucar.nc2.iosp.IndexChunker$Chunk: long destElem>;

        return $l0;
    }

    public void setDestElem(long)
    {
        long l0;
        ucar.nc2.iosp.IndexChunker$Chunk r0;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        l0 := @parameter0: long;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: long destElem> = l0;

        return;
    }

    public void incrDestElem(int)
    {
        ucar.nc2.iosp.IndexChunker$Chunk r0;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        i0 := @parameter0: int;

        $l2 = r0.<ucar.nc2.iosp.IndexChunker$Chunk: long destElem>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: long destElem> = $l3;

        return;
    }

    public java.lang.String toString()
    {
        ucar.nc2.iosp.IndexChunker$Chunk r2;
        long $l0, $l1, $l3;
        int $i2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r2 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $l0 = r2.<ucar.nc2.iosp.IndexChunker$Chunk: long srcPos>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcElem=");

        $l1 = r2.<ucar.nc2.iosp.IndexChunker$Chunk: long srcElem>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nelems=");

        $i2 = r2.<ucar.nc2.iosp.IndexChunker$Chunk: int nelems>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" destElem=");

        $l3 = r2.<ucar.nc2.iosp.IndexChunker$Chunk: long destElem>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public long getSrcPos()
    {
        long $l0;
        ucar.nc2.iosp.IndexChunker$Chunk r0;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        $l0 = r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcPos>;

        return $l0;
    }

    public void setSrcPos(long)
    {
        long l0;
        ucar.nc2.iosp.IndexChunker$Chunk r0;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        l0 := @parameter0: long;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcPos> = l0;

        return;
    }

    public void incrSrcPos(int)
    {
        ucar.nc2.iosp.IndexChunker$Chunk r0;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Chunk;

        i0 := @parameter0: int;

        $l2 = r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcPos>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<ucar.nc2.iosp.IndexChunker$Chunk: long srcPos> = $l3;

        return;
    }
}
