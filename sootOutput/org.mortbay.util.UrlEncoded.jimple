public class org.mortbay.util.UrlEncoded extends org.mortbay.util.MultiMap
{
    public static final java.lang.String ENCODING;

    public void <init>(org.mortbay.util.UrlEncoded)
    {
        org.mortbay.util.UrlEncoded r0, r1;

        r0 := @this: org.mortbay.util.UrlEncoded;

        r1 := @parameter0: org.mortbay.util.UrlEncoded;

        specialinvoke r0.<org.mortbay.util.MultiMap: void <init>(java.util.Map)>(r1);

        return;
    }

    public void <init>()
    {
        org.mortbay.util.UrlEncoded r0;

        r0 := @this: org.mortbay.util.UrlEncoded;

        specialinvoke r0.<org.mortbay.util.MultiMap: void <init>(int)>(6);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.mortbay.util.UrlEncoded r0;
        java.lang.String r1, $r2;

        r0 := @this: org.mortbay.util.UrlEncoded;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.mortbay.util.MultiMap: void <init>(int)>(6);

        $r2 = <org.mortbay.util.UrlEncoded: java.lang.String ENCODING>;

        virtualinvoke r0.<org.mortbay.util.UrlEncoded: void decode(java.lang.String,java.lang.String)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.mortbay.util.UrlEncoded r0;
        java.lang.String r1, r2;

        r0 := @this: org.mortbay.util.UrlEncoded;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.mortbay.util.MultiMap: void <init>(int)>(6);

        virtualinvoke r0.<org.mortbay.util.UrlEncoded: void decode(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void decode(java.lang.String)
    {
        org.mortbay.util.UrlEncoded r1;
        java.lang.String r0, $r2;

        r1 := @this: org.mortbay.util.UrlEncoded;

        r0 := @parameter0: java.lang.String;

        $r2 = <org.mortbay.util.UrlEncoded: java.lang.String ENCODING>;

        staticinvoke <org.mortbay.util.UrlEncoded: void decodeTo(java.lang.String,org.mortbay.util.MultiMap,java.lang.String)>(r0, r1, $r2);

        return;
    }

    public void decode(java.lang.String, java.lang.String)
    {
        org.mortbay.util.UrlEncoded r1;
        java.lang.String r0, r2;

        r1 := @this: org.mortbay.util.UrlEncoded;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <org.mortbay.util.UrlEncoded: void decodeTo(java.lang.String,org.mortbay.util.MultiMap,java.lang.String)>(r0, r1, r2);

        return;
    }

    public java.lang.String encode()
    {
        org.mortbay.util.UrlEncoded r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.mortbay.util.UrlEncoded;

        $r1 = <org.mortbay.util.UrlEncoded: java.lang.String ENCODING>;

        $r2 = virtualinvoke r0.<org.mortbay.util.UrlEncoded: java.lang.String encode(java.lang.String,boolean)>($r1, 0);

        return $r2;
    }

    public java.lang.String encode(java.lang.String)
    {
        org.mortbay.util.UrlEncoded r0;
        java.lang.String r1, $r2;

        r0 := @this: org.mortbay.util.UrlEncoded;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.mortbay.util.UrlEncoded: java.lang.String encode(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public synchronized java.lang.String encode(java.lang.String, boolean)
    {
        org.mortbay.util.UrlEncoded r0;
        java.lang.String r1, $r2;
        boolean z0;

        r0 := @this: org.mortbay.util.UrlEncoded;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>(r0, r1, z0);

        return $r2;
    }

    public static java.lang.String encode(org.mortbay.util.MultiMap, java.lang.String, boolean)
    {
        java.lang.Throwable $r15;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2;
        java.lang.String $r4, $r8, $r11, $r12, $r13, $r14, r16;
        boolean z0, $z1, $z2;
        java.util.Map$Entry r6;
        org.mortbay.util.MultiMap r1;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.Object $r5, $r7, $r9, $r10;

        r1 := @parameter0: org.mortbay.util.MultiMap;

        r16 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if r16 != null goto label01;

        r16 = <org.mortbay.util.UrlEncoded: java.lang.String ENCODING>;

     label01:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(128);

        entermonitor $r0;

     label02:
        $r2 = virtualinvoke r1.<org.mortbay.util.MultiMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $i0 = staticinvoke <org.mortbay.util.LazyList: int size(java.lang.Object)>($r9);

        if $i0 != 0 goto label04;

        $r14 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String encodeString(java.lang.String,java.lang.String)>($r8, r16);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        if z0 == 0 goto label11;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        goto label11;

     label04:
        i2 = 0;

     label05:
        if i2 >= $i0 goto label11;

        if i2 <= 0 goto label06;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(38);

     label06:
        $r10 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r9, i2);

        $r11 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String encodeString(java.lang.String,java.lang.String)>($r8, r16);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        if $r10 == null goto label09;

        $r12 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 <= 0 goto label07;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r13 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String encodeString(java.lang.String,java.lang.String)>($r12, r16);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label08;

     label07:
        if z0 == 0 goto label08;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

     label08:
        goto label10;

     label09:
        if z0 == 0 goto label10;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

     label10:
        i2 = i2 + 1;

        goto label05;

     label11:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(38);

     label12:
        goto label03;

     label13:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor $r0;

     label14:
        return $r4;

     label15:
        $r15 := @caughtexception;

        exitmonitor $r0;

     label16:
        throw $r15;

        catch java.lang.Throwable from label02 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public static void decodeTo(java.lang.String, org.mortbay.util.MultiMap, java.lang.String)
    {
        boolean z0, z1, z2, z3, z4;
        org.mortbay.util.MultiMap r0;
        java.lang.Throwable $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, i20, i21, $i22, i23, $i25, $i26;
        java.lang.String r1, r3, r4, $r5, $r6, $r7, $r8;
        char $c10;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: org.mortbay.util.MultiMap;

        r3 := @parameter2: java.lang.String;

        if r3 != null goto label01;

        r3 = <org.mortbay.util.UrlEncoded: java.lang.String ENCODING>;

     label01:
        entermonitor r0;

     label02:
        r4 = null;

        $i25 = (int) -1;

        i20 = $i25;

        z0 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

        i21 = 0;

     label03:
        $i22 = virtualinvoke r1.<java.lang.String: int length()>();

        if i21 >= $i22 goto label17;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i21);

        $i26 = (int) $c10;

        lookupswitch($i26)
        {
            case 37: goto label15;
            case 38: goto label04;
            case 43: goto label14;
            case 61: goto label10;
            default: goto label16;
        };

     label04:
        $i15 = i21 - i20;

        i16 = $i15 - 1;

        if i16 != 0 goto label05;

        $r5 = "";

        goto label07;

     label05:
        if z3 == 0 goto label06;

        $i19 = i20 + 1;

        $r5 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String decodeString(java.lang.String,int,int,java.lang.String)>(r1, $i19, i16, r3);

        goto label07;

     label06:
        $i17 = i20 + 1;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i17, i21);

     label07:
        i20 = i21;

        z0 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

        if r4 == null goto label08;

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r4, $r5);

        goto label09;

     label08:
        if $r5 == null goto label09;

        $i18 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i18 <= 0 goto label09;

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r5, "");

     label09:
        r4 = null;

        goto label16;

     label10:
        if r4 == null goto label11;

        goto label16;

     label11:
        if z2 == 0 goto label12;

        $i14 = i20 + 1;

        $i12 = i21 - i20;

        $i13 = $i12 - 1;

        $r6 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String decodeString(java.lang.String,int,int,java.lang.String)>(r1, $i14, $i13, r3);

        goto label13;

     label12:
        $i11 = i20 + 1;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i11, i21);

     label13:
        r4 = $r6;

        i20 = i21;

        z0 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

        goto label16;

     label14:
        z0 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

        goto label16;

     label15:
        z0 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

     label16:
        i21 = i21 + 1;

        goto label03;

     label17:
        if r4 == null goto label21;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        $i7 = $i6 - i20;

        i23 = $i7 - 1;

        if i23 != 0 goto label18;

        $r7 = "";

        goto label20;

     label18:
        if z1 == 0 goto label19;

        $i9 = i20 + 1;

        $r7 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String decodeString(java.lang.String,int,int,java.lang.String)>(r1, $i9, i23, r3);

        goto label20;

     label19:
        $i8 = i20 + 1;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i8);

     label20:
        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r4, $r7);

        goto label24;

     label21:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i20 >= $i0 goto label24;

        if z4 == 0 goto label22;

        $i2 = i20 + 1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = $i3 - i20;

        $i5 = $i4 - 1;

        $r8 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String decodeString(java.lang.String,int,int,java.lang.String)>(r1, $i2, $i5, r3);

        goto label23;

     label22:
        $i1 = i20 + 1;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label23:
        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r8, "");

     label24:
        exitmonitor r0;

     label25:
        goto label28;

     label26:
        $r2 := @caughtexception;

        exitmonitor r0;

     label27:
        throw $r2;

     label28:
        return;

        catch java.lang.Throwable from label02 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    public static void decodeUtf8To(byte[], int, int, org.mortbay.util.MultiMap)
    {
        byte[] r0;
        org.mortbay.util.MultiMap r1;
        int i0, i1;
        org.mortbay.util.Utf8StringBuffer $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.mortbay.util.MultiMap;

        $r2 = new org.mortbay.util.Utf8StringBuffer;

        specialinvoke $r2.<org.mortbay.util.Utf8StringBuffer: void <init>()>();

        staticinvoke <org.mortbay.util.UrlEncoded: void decodeUtf8To(byte[],int,int,org.mortbay.util.MultiMap,org.mortbay.util.Utf8StringBuffer)>(r0, i0, i1, r1, $r2);

        return;
    }

    public static void decodeUtf8To(byte[], int, int, org.mortbay.util.MultiMap, org.mortbay.util.Utf8StringBuffer)
    {
        byte[] r3;
        byte b5, $b11, $b12, $b13, $b15, $b17;
        org.mortbay.util.MultiMap r0;
        org.mortbay.util.Utf8StringBuffer r1;
        java.lang.Throwable $r4;
        short $s6, $s20;
        int i0, i1, i2, $i3, $i4, $i8, $i9, $i10, $i14, $i16, i18, i19, $i21, $i22, $i23;
        java.lang.String $r2, r5, $r6, $r7;
        char $c7;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: org.mortbay.util.MultiMap;

        r1 := @parameter4: org.mortbay.util.Utf8StringBuffer;

        entermonitor r0;

     label01:
        r5 = null;

        i2 = i0 + i1;

        i18 = i0;

     label02:
        if i18 >= i2 goto label14;

        b5 = r3[i18];

        $s20 = (short) b5;

        $s6 = 255 & $s20;

        $c7 = (char) $s6;

        $i21 = (int) $c7;

        lookupswitch($i21)
        {
            case 37: goto label11;
            case 38: goto label03;
            case 43: goto label10;
            case 61: goto label08;
            default: goto label12;
        };

     label03:
        $i8 = virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: int length()>();

        if $i8 != 0 goto label04;

        $r6 = "";

        goto label05;

     label04:
        $r6 = virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

     label05:
        virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: void reset()>();

        if r5 == null goto label06;

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r5, $r6);

        goto label07;

     label06:
        if $r6 == null goto label07;

        $i9 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i9 <= 0 goto label07;

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r6, "");

     label07:
        r5 = null;

        goto label13;

     label08:
        if r5 == null goto label09;

        virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: void append(byte)>(b5);

        goto label13;

     label09:
        r5 = virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: void reset()>();

        goto label13;

     label10:
        virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: void append(byte)>(32);

        goto label13;

     label11:
        $i10 = i18 + 2;

        if $i10 >= i2 goto label13;

        i19 = i18 + 1;

        $b11 = r3[i19];

        $b12 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b11);

        $i22 = (int) $b12;

        $i14 = $i22 << 4;

        i18 = i19 + 1;

        $b13 = r3[i18];

        $b15 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b13);

        $i23 = (int) $b15;

        $i16 = $i14 + $i23;

        $b17 = (byte) $i16;

        virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: void append(byte)>($b17);

        goto label13;

     label12:
        virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: void append(byte)>(b5);

     label13:
        i18 = i18 + 1;

        goto label02;

     label14:
        if r5 == null goto label17;

        $i4 = virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: int length()>();

        if $i4 != 0 goto label15;

        $r7 = "";

        goto label16;

     label15:
        $r7 = virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

     label16:
        virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: void reset()>();

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r5, $r7);

        goto label18;

     label17:
        $i3 = virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: int length()>();

        if $i3 <= 0 goto label18;

        $r2 = virtualinvoke r1.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r2, "");

     label18:
        exitmonitor r0;

     label19:
        goto label22;

     label20:
        $r4 := @caughtexception;

        exitmonitor r0;

     label21:
        throw $r4;

     label22:
        return;

        catch java.lang.Throwable from label01 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public static void decode88591To(java.io.InputStream, org.mortbay.util.MultiMap, int) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r10;
        byte $b9, $b10, $b11, $b13;
        java.lang.StringBuffer $r9;
        int $i0, $i1, i3, $i5, $i6, $i7, $i8, $i12, $i14, i17, $i18, $i19, $i20, $i21;
        java.lang.String $r3, r6, $r7, $r8;
        org.mortbay.util.MultiMap r0;
        char $c2, $c4, $c15, $c16;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        r0 := @parameter1: org.mortbay.util.MultiMap;

        i3 := @parameter2: int;

        entermonitor r0;

     label01:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        r6 = null;

        i17 = 0;

     label02:
        $i18 = virtualinvoke r2.<java.io.InputStream: int read()>();

        if $i18 < 0 goto label15;

        $c2 = (char) $i18;

        $i19 = (int) $c2;

        lookupswitch($i19)
        {
            case 37: goto label11;
            case 38: goto label03;
            case 43: goto label10;
            case 61: goto label08;
            default: goto label13;
        };

     label03:
        $i5 = virtualinvoke $r9.<java.lang.StringBuffer: int length()>();

        if $i5 != 0 goto label04;

        $r7 = "";

        goto label05;

     label04:
        $r7 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label05:
        virtualinvoke $r9.<java.lang.StringBuffer: void setLength(int)>(0);

        if r6 == null goto label06;

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r6, $r7);

        goto label07;

     label06:
        if $r7 == null goto label07;

        $i6 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i6 <= 0 goto label07;

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r7, "");

     label07:
        r6 = null;

        goto label14;

     label08:
        if r6 == null goto label09;

        $c4 = (char) $i18;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        goto label14;

     label09:
        r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label14;

     label10:
        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label14;

     label11:
        $i7 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i8 = virtualinvoke r2.<java.io.InputStream: int read()>();

        if $i7 < 0 goto label14;

        if $i8 >= 0 goto label12;

        goto label14;

     label12:
        $b9 = (byte) $i7;

        $b10 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b9);

        $i20 = (int) $b10;

        $i12 = $i20 << 4;

        $b11 = (byte) $i8;

        $b13 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b11);

        $i21 = (int) $b13;

        $i14 = $i12 + $i21;

        $c15 = (char) $i14;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c15);

        goto label14;

     label13:
        $c16 = (char) $i18;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c16);

     label14:
        if i3 < 0 goto label02;

        i17 = i17 + 1;

        if i17 <= i3 goto label02;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Form too large");

        throw $r10;

     label15:
        if r6 == null goto label18;

        $i1 = virtualinvoke $r9.<java.lang.StringBuffer: int length()>();

        if $i1 != 0 goto label16;

        $r8 = "";

        goto label17;

     label16:
        $r8 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label17:
        virtualinvoke $r9.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r6, $r8);

        goto label19;

     label18:
        $i0 = virtualinvoke $r9.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label19;

        $r3 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r3, "");

     label19:
        exitmonitor r0;

     label20:
        goto label23;

     label21:
        $r5 := @caughtexception;

        exitmonitor r0;

     label22:
        throw $r5;

     label23:
        return;

        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public static void decodeUtf8To(java.io.InputStream, org.mortbay.util.MultiMap, int) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r10;
        byte $b4, $b9, $b10, $b11, $b13, $b15, $b16;
        int $i0, $i1, i3, $i5, $i6, $i7, $i8, $i12, $i14, i17, $i18, $i19, $i20, $i21;
        java.lang.String $r3, r6, $r7, $r8;
        org.mortbay.util.MultiMap r0;
        char $c2;
        java.io.InputStream r2;
        org.mortbay.util.Utf8StringBuffer $r9;

        r2 := @parameter0: java.io.InputStream;

        r0 := @parameter1: org.mortbay.util.MultiMap;

        i3 := @parameter2: int;

        entermonitor r0;

     label01:
        $r9 = new org.mortbay.util.Utf8StringBuffer;

        specialinvoke $r9.<org.mortbay.util.Utf8StringBuffer: void <init>()>();

        r6 = null;

        i17 = 0;

     label02:
        $i18 = virtualinvoke r2.<java.io.InputStream: int read()>();

        if $i18 < 0 goto label15;

        $c2 = (char) $i18;

        $i19 = (int) $c2;

        lookupswitch($i19)
        {
            case 37: goto label11;
            case 38: goto label03;
            case 43: goto label10;
            case 61: goto label08;
            default: goto label13;
        };

     label03:
        $i5 = virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: int length()>();

        if $i5 != 0 goto label04;

        $r7 = "";

        goto label05;

     label04:
        $r7 = virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

     label05:
        virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: void reset()>();

        if r6 == null goto label06;

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r6, $r7);

        goto label07;

     label06:
        if $r7 == null goto label07;

        $i6 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i6 <= 0 goto label07;

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r7, "");

     label07:
        r6 = null;

        goto label14;

     label08:
        if r6 == null goto label09;

        $b4 = (byte) $i18;

        virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: void append(byte)>($b4);

        goto label14;

     label09:
        r6 = virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: void reset()>();

        goto label14;

     label10:
        virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: void append(byte)>(32);

        goto label14;

     label11:
        $i7 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i8 = virtualinvoke r2.<java.io.InputStream: int read()>();

        if $i7 < 0 goto label14;

        if $i8 >= 0 goto label12;

        goto label14;

     label12:
        $b9 = (byte) $i7;

        $b10 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b9);

        $i20 = (int) $b10;

        $i12 = $i20 << 4;

        $b11 = (byte) $i8;

        $b13 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b11);

        $i21 = (int) $b13;

        $i14 = $i12 + $i21;

        $b15 = (byte) $i14;

        virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: void append(byte)>($b15);

        goto label14;

     label13:
        $b16 = (byte) $i18;

        virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: void append(byte)>($b16);

     label14:
        if i3 < 0 goto label02;

        i17 = i17 + 1;

        if i17 <= i3 goto label02;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Form too large");

        throw $r10;

     label15:
        if r6 == null goto label18;

        $i1 = virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: int length()>();

        if $i1 != 0 goto label16;

        $r8 = "";

        goto label17;

     label16:
        $r8 = virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

     label17:
        virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: void reset()>();

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r6, $r8);

        goto label19;

     label18:
        $i0 = virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: int length()>();

        if $i0 <= 0 goto label19;

        $r3 = virtualinvoke $r9.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r3, "");

     label19:
        exitmonitor r0;

     label20:
        goto label23;

     label21:
        $r5 := @caughtexception;

        exitmonitor r0;

     label22:
        throw $r5;

     label23:
        return;

        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public static void decodeUtf16To(java.io.InputStream, org.mortbay.util.MultiMap, int) throws java.io.IOException
    {
        org.mortbay.util.MultiMap r4;
        char $c1;
        java.io.InputStreamReader $r0;
        java.lang.StringBuffer $r2;
        int $i0, i2, i3, $i4;
        java.lang.String $r3, $r5;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: org.mortbay.util.MultiMap;

        i2 := @parameter2: int;

        $r0 = new java.io.InputStreamReader;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF-16");

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

        if i2 >= 0 goto label1;

        i2 = 2147483647;

     label1:
        $i4 = virtualinvoke $r0.<java.io.InputStreamReader: int read()>();

        if $i4 <= 0 goto label2;

        $i0 = i3;

        i3 = i3 + 1;

        if $i0 >= i2 goto label2;

        $c1 = (char) $i4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label1;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = <org.mortbay.util.UrlEncoded: java.lang.String ENCODING>;

        staticinvoke <org.mortbay.util.UrlEncoded: void decodeTo(java.lang.String,org.mortbay.util.MultiMap,java.lang.String)>($r3, r4, $r5);

        return;
    }

    public static void decodeTo(java.io.InputStream, org.mortbay.util.MultiMap, java.lang.String, int) throws java.io.IOException
    {
        java.lang.IllegalStateException $r15;
        org.mortbay.util.ByteArrayOutputStream2 $r14;
        byte $b6, $b8, $b10, b11, b12, b15, b16;
        boolean $z0, $z1, $z2;
        org.mortbay.util.MultiMap r2;
        java.lang.Throwable $r9;
        int i0, $i1, $i3, $i4, $i5, $i7, $i9, i13, $i14, $i17, $i18;
        java.lang.String r0, $r3, $r4, $r5, $r7, r10, $r11, $r12, $r13;
        char $c2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.mortbay.util.MultiMap;

        r0 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        if r0 == null goto label01;

        $r3 = "UTF-8";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label02;

     label01:
        staticinvoke <org.mortbay.util.UrlEncoded: void decodeUtf8To(java.io.InputStream,org.mortbay.util.MultiMap,int)>(r1, r2, i0);

        return;

     label02:
        $r4 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label03;

        staticinvoke <org.mortbay.util.UrlEncoded: void decode88591To(java.io.InputStream,org.mortbay.util.MultiMap,int)>(r1, r2, i0);

        return;

     label03:
        $r5 = "UTF-16";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 == 0 goto label04;

        staticinvoke <org.mortbay.util.UrlEncoded: void decodeUtf16To(java.io.InputStream,org.mortbay.util.MultiMap,int)>(r1, r2, i0);

        return;

     label04:
        entermonitor r2;

     label05:
        r10 = null;

        b11 = 0;

        b12 = 0;

        b16 = 0;

        b15 = 0;

        i13 = 0;

        $r14 = new org.mortbay.util.ByteArrayOutputStream2;

        specialinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void <init>()>();

     label06:
        $i14 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if $i14 <= 0 goto label22;

        $c2 = (char) $i14;

        $i17 = (int) $c2;

        lookupswitch($i17)
        {
            case 37: goto label17;
            case 38: goto label07;
            case 43: goto label16;
            case 61: goto label12;
            default: goto label18;
        };

     label07:
        $i4 = virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: int size()>();

        if $i4 != 0 goto label08;

        $r11 = "";

        goto label09;

     label08:
        $r11 = virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: java.lang.String toString(java.lang.String)>(r0);

     label09:
        virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void setCount(int)>(0);

        if r10 == null goto label10;

        virtualinvoke r2.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r10, $r11);

        goto label11;

     label10:
        if $r11 == null goto label11;

        $i5 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i5 <= 0 goto label11;

        virtualinvoke r2.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r11, "");

     label11:
        r10 = null;

        goto label21;

     label12:
        if r10 == null goto label13;

        virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void write(int)>($i14);

        goto label21;

     label13:
        $i3 = virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: int size()>();

        if $i3 != 0 goto label14;

        $r12 = "";

        goto label15;

     label14:
        $r12 = virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: java.lang.String toString(java.lang.String)>(r0);

     label15:
        r10 = $r12;

        virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void setCount(int)>(0);

        goto label21;

     label16:
        virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void write(int)>(32);

        goto label21;

     label17:
        b12 = 2;

        b16 = 2;

        b15 = 2;

        goto label21;

     label18:
        if b15 != 2 goto label19;

        $b10 = (byte) $i14;

        b11 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b10);

        b12 = 1;

        b16 = 1;

        b15 = 1;

        goto label21;

     label19:
        if b16 != 1 goto label20;

        $i7 = b11 << 4;

        $b6 = (byte) $i14;

        $b8 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b6);

        $i18 = (int) $b8;

        $i9 = $i7 + $i18;

        virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void write(int)>($i9);

        b12 = 0;

        b16 = 0;

        b15 = 0;

        goto label21;

     label20:
        virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void write(int)>($i14);

     label21:
        i13 = i13 + 1;

        if i0 < 0 goto label06;

        if i13 <= i0 goto label06;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Form too large");

        throw $r15;

     label22:
        $i1 = virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: int size()>();

        if r10 == null goto label25;

        if $i1 != 0 goto label23;

        $r13 = "";

        goto label24;

     label23:
        $r13 = virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: java.lang.String toString(java.lang.String)>(r0);

     label24:
        virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void setCount(int)>(0);

        virtualinvoke r2.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r10, $r13);

        goto label26;

     label25:
        if $i1 <= 0 goto label26;

        $r7 = virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: java.lang.String toString(java.lang.String)>(r0);

        virtualinvoke r2.<org.mortbay.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r7, "");

     label26:
        exitmonitor r2;

     label27:
        goto label30;

     label28:
        $r9 := @caughtexception;

        exitmonitor r2;

     label29:
        throw $r9;

     label30:
        return;

        catch java.lang.Throwable from label05 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    public static java.lang.String decodeString(java.lang.String, int, int, java.lang.String)
    {
        byte[] $r22;
        byte $b24, $b33, $b40, b45;
        org.mortbay.util.Utf8StringBuffer r31, $r34, $r35, $r36;
        java.lang.StringBuffer $r4, $r6, $r8, $r10, $r12, $r14, $r29, $r30, r32, $r37, $r38, $r39;
        java.lang.String r0, $r1, r2, $r3, $r7, $r11, $r15, $r16, $r17, $r19, $r21, $r24, $r40;
        java.lang.NumberFormatException $r27, $r28;
        java.lang.RuntimeException $r41;
        boolean $z0;
        java.io.UnsupportedEncodingException $r25;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i39, $i41, i43, i47, i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i71;
        char $c5, $c19, $c38, $c42, c44, $c46, c48;

        r2 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r0 := @parameter3: java.lang.String;

        if r0 == null goto label01;

        $z0 = staticinvoke <org.mortbay.util.StringUtil: boolean isUTF8(java.lang.String)>(r0);

        if $z0 == 0 goto label22;

     label01:
        r31 = null;

        i43 = 0;

     label02:
        if i43 >= i0 goto label19;

        $i4 = i1 + i43;

        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i4);

        c44 = $c5;

        $i51 = (int) $c5;

        if $i51 < 0 goto label03;

        $i52 = (int) $c5;

        if $i52 <= 255 goto label05;

     label03:
        if r31 != null goto label04;

        $r34 = new org.mortbay.util.Utf8StringBuffer;

        specialinvoke $r34.<org.mortbay.util.Utf8StringBuffer: void <init>(int)>(i0);

        r31 = $r34;

        $r6 = virtualinvoke $r34.<org.mortbay.util.Utf8StringBuffer: java.lang.StringBuffer getStringBuffer()>();

        $i6 = i1 + i43;

        $i7 = $i6 + 1;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i7);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label18;

     label04:
        $r4 = virtualinvoke r31.<org.mortbay.util.Utf8StringBuffer: java.lang.StringBuffer getStringBuffer()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        goto label18;

     label05:
        $i53 = (int) $c5;

        if $i53 != 43 goto label07;

        if r31 != null goto label06;

        $r35 = new org.mortbay.util.Utf8StringBuffer;

        specialinvoke $r35.<org.mortbay.util.Utf8StringBuffer: void <init>(int)>(i0);

        r31 = $r35;

        $r14 = virtualinvoke $r35.<org.mortbay.util.Utf8StringBuffer: java.lang.StringBuffer getStringBuffer()>();

        $i15 = i1 + i43;

        $r15 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i15);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

     label06:
        $r12 = virtualinvoke r31.<org.mortbay.util.Utf8StringBuffer: java.lang.StringBuffer getStringBuffer()>();

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label18;

     label07:
        $i54 = (int) $c5;

        if $i54 != 37 goto label17;

        $i8 = i43 + 2;

        if $i8 >= i0 goto label17;

        if r31 != null goto label08;

        $r36 = new org.mortbay.util.Utf8StringBuffer;

        specialinvoke $r36.<org.mortbay.util.Utf8StringBuffer: void <init>(int)>(i0);

        r31 = $r36;

        $r10 = virtualinvoke $r36.<org.mortbay.util.Utf8StringBuffer: java.lang.StringBuffer getStringBuffer()>();

        $i14 = i1 + i43;

        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i14);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label08:
        $i55 = (int) c44;

        if $i55 != 37 goto label16;

        $i9 = i43 + 2;

        if $i9 >= i0 goto label16;

     label09:
        $i10 = i1 + i43;

        $i11 = $i10 + 1;

        $i12 = staticinvoke <org.mortbay.util.TypeUtil: int parseInt(java.lang.String,int,int,int)>(r2, $i11, 2, 16);

        b45 = (byte) $i12;

        virtualinvoke r31.<org.mortbay.util.Utf8StringBuffer: void append(byte)>(b45);

        i43 = i43 + 3;

     label10:
        goto label15;

     label11:
        $r28 := @caughtexception;

        $r29 = virtualinvoke r31.<org.mortbay.util.Utf8StringBuffer: java.lang.StringBuffer getStringBuffer()>();

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

     label12:
        i43 = i43 + 1;

        $i41 = i43 + i1;

        $c42 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i41);

        $i56 = (int) $c42;

        if $i56 == 37 goto label15;

        $r30 = virtualinvoke r31.<org.mortbay.util.Utf8StringBuffer: java.lang.StringBuffer getStringBuffer()>();

        $i57 = (int) $c42;

        if $i57 != 43 goto label13;

        $c46 = 32;

        goto label14;

     label13:
        $c46 = $c42;

     label14:
        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c46);

        goto label12;

     label15:
        if i43 >= i0 goto label08;

        $i13 = i1 + i43;

        c44 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i13);

        goto label08;

     label16:
        $i59 = (int) -1;

        i43 = i43 + $i59;

        goto label18;

     label17:
        if r31 == null goto label18;

        $r8 = virtualinvoke r31.<org.mortbay.util.Utf8StringBuffer: java.lang.StringBuffer getStringBuffer()>();

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

     label18:
        i43 = i43 + 1;

        goto label02;

     label19:
        if r31 != null goto label21;

        if i1 != 0 goto label20;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i3 != i0 goto label20;

        return r2;

     label20:
        $i2 = i1 + i0;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i2);

        return $r3;

     label21:
        $r1 = virtualinvoke r31.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

        return $r1;

     label22:
        r32 = null;

     label23:
        i47 = 0;

     label24:
        if i47 >= i0 goto label47;

        $i18 = i1 + i47;

        $c19 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i18);

        c48 = $c19;

        $i60 = (int) $c19;

        if $i60 < 0 goto label25;

        $i61 = (int) $c19;

        if $i61 <= 255 goto label27;

     label25:
        if r32 != null goto label26;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>(int)>(i0);

        r32 = $r37;

        $i20 = i1 + i47;

        $i21 = $i20 + 1;

        $r19 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i21);

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        goto label46;

     label26:
        virtualinvoke r32.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c19);

        goto label46;

     label27:
        $i62 = (int) $c19;

        if $i62 != 43 goto label29;

        if r32 != null goto label28;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>(int)>(i0);

        r32 = $r38;

        $i35 = i1 + i47;

        $r24 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i35);

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

     label28:
        virtualinvoke r32.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label46;

     label29:
        $i63 = (int) $c19;

        if $i63 != 37 goto label45;

        $i22 = i47 + 2;

        if $i22 >= i0 goto label45;

        if r32 != null goto label30;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>(int)>(i0);

        r32 = $r39;

        $i34 = i1 + i47;

        $r21 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i34);

        virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

     label30:
        $r22 = newarray (byte)[i0];

        i49 = 0;

     label31:
        $i64 = (int) c48;

        if $i64 < 0 goto label44;

        $i65 = (int) c48;

        if $i65 > 255 goto label44;

        $i66 = (int) c48;

        if $i66 != 37 goto label40;

        $i27 = i47 + 2;

        if $i27 >= i0 goto label39;

     label32:
        $i29 = i49;

        i49 = i49 + 1;

        $i30 = i1 + i47;

        $i31 = $i30 + 1;

        $i32 = staticinvoke <org.mortbay.util.TypeUtil: int parseInt(java.lang.String,int,int,int)>(r2, $i31, 2, 16);

        $b33 = (byte) $i32;

        $r22[$i29] = $b33;

        i47 = i47 + 3;

     label33:
        goto label42;

     label34:
        $r27 := @caughtexception;

        $i36 = i49 - 1;

        $r22[$i36] = 37;

     label35:
        i47 = i47 + 1;

        $i37 = i47 + i1;

        $c38 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i37);

        $i67 = (int) $c38;

        if $i67 == 37 goto label38;

        $i39 = i49;

        i49 = i49 + 1;

        $i68 = (int) $c38;

        if $i68 != 43 goto label36;

        $i50 = 32;

        goto label37;

     label36:
        $i50 = $c38;

     label37:
        $b40 = (byte) $i50;

        $r22[$i39] = $b40;

        goto label35;

     label38:
        goto label42;

     label39:
        $i28 = i49;

        i49 = i49 + 1;

        $r22[$i28] = 37;

        i47 = i47 + 1;

        goto label42;

     label40:
        $i69 = (int) c48;

        if $i69 != 43 goto label41;

        $i26 = i49;

        i49 = i49 + 1;

        $r22[$i26] = 32;

        i47 = i47 + 1;

        goto label42;

     label41:
        $i23 = i49;

        i49 = i49 + 1;

        $b24 = (byte) c48;

        $r22[$i23] = $b24;

        i47 = i47 + 1;

     label42:
        if i47 < i0 goto label43;

        goto label44;

     label43:
        $i25 = i1 + i47;

        c48 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i25);

        goto label31;

     label44:
        $i71 = (int) -1;

        i47 = i47 + $i71;

        $r40 = new java.lang.String;

        specialinvoke $r40.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r22, 0, i49, r0);

        virtualinvoke r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        goto label46;

     label45:
        if r32 == null goto label46;

        virtualinvoke r32.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c19);

     label46:
        i47 = i47 + 1;

        goto label24;

     label47:
        if r32 != null goto label51;

        if i1 != 0 goto label49;

        $i17 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i17 != i0 goto label49;

     label48:
        return r2;

     label49:
        $i16 = i1 + i0;

        $r17 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i16);

     label50:
        return $r17;

     label51:
        $r16 = virtualinvoke r32.<java.lang.StringBuffer: java.lang.String toString()>();

     label52:
        return $r16;

     label53:
        $r25 := @caughtexception;

        $r41 = new java.lang.RuntimeException;

        specialinvoke $r41.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r25);

        throw $r41;

        catch java.lang.NumberFormatException from label09 to label10 with label11;
        catch java.lang.NumberFormatException from label32 to label33 with label34;
        catch java.io.UnsupportedEncodingException from label23 to label48 with label53;
        catch java.io.UnsupportedEncodingException from label49 to label50 with label53;
        catch java.io.UnsupportedEncodingException from label51 to label52 with label53;
    }

    public static java.lang.String encodeString(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.mortbay.util.UrlEncoded: java.lang.String ENCODING>;

        $r2 = staticinvoke <org.mortbay.util.UrlEncoded: java.lang.String encodeString(java.lang.String,java.lang.String)>(r0, $r1);

        return $r2;
    }

    public static java.lang.String encodeString(java.lang.String, java.lang.String)
    {
        byte[] $r5, r7;
        byte b2, $b6, $b7, $b9, $b12, $b15, $b16, $b17;
        boolean z0;
        java.io.UnsupportedEncodingException $r2, $r4;
        short $s3, $s32;
        int $i0, $i1, $i4, $i5, $i8, $i10, $i11, $i13, $i14, $i18, $i19, i20, i21, $i22, i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i39;
        java.lang.String r0, r6, $r8, $r9;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        if r6 != null goto label01;

        r6 = <org.mortbay.util.UrlEncoded: java.lang.String ENCODING>;

     label01:
        r7 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r6);

     label02:
        goto label04;

     label03:
        $r4 := @caughtexception;

        r7 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

     label04:
        $i19 = lengthof r7;

        $i0 = lengthof r7;

        $i1 = $i0 * 3;

        $r5 = newarray (byte)[$i1];

        i20 = 0;

        z0 = 1;

        i21 = 0;

     label05:
        if i21 >= $i19 goto label15;

        b2 = r7[i21];

        $i25 = (int) b2;

        if $i25 != 32 goto label06;

        z0 = 0;

        $i18 = i20;

        i20 = i20 + 1;

        $r5[$i18] = 43;

        goto label14;

     label06:
        $i26 = (int) b2;

        if $i26 < 97 goto label07;

        $i27 = (int) b2;

        if $i27 <= 122 goto label09;

     label07:
        $i28 = (int) b2;

        if $i28 < 65 goto label08;

        $i29 = (int) b2;

        if $i29 <= 90 goto label09;

     label08:
        $i30 = (int) b2;

        if $i30 < 48 goto label10;

        $i31 = (int) b2;

        if $i31 > 57 goto label10;

     label09:
        $i22 = i20;

        i20 = i20 + 1;

        $r5[$i22] = b2;

        goto label14;

     label10:
        z0 = 0;

        i23 = i20 + 1;

        $r5[i20] = 37;

        $s32 = (short) b2;

        $s3 = $s32 & 240;

        $i33 = (int) $s3;

        $i4 = $i33 >> 4;

        $b17 = (byte) $i4;

        $i34 = (int) $b17;

        if $i34 < 10 goto label11;

        i24 = i23 + 1;

        $i35 = (int) $b17;

        $i13 = 65 + $i35;

        $i14 = $i13 - 10;

        $b15 = (byte) $i14;

        $r5[i23] = $b15;

        goto label12;

     label11:
        i24 = i23 + 1;

        $i36 = (int) $b17;

        $i5 = 48 + $i36;

        $b6 = (byte) $i5;

        $r5[i23] = $b6;

     label12:
        $b7 = b2 & 15;

        $b16 = (byte) $b7;

        $i37 = (int) $b16;

        if $i37 < 10 goto label13;

        i20 = i24 + 1;

        $i38 = (int) $b16;

        $i10 = 65 + $i38;

        $i11 = $i10 - 10;

        $b12 = (byte) $i11;

        $r5[i24] = $b12;

        goto label14;

     label13:
        i20 = i24 + 1;

        $i39 = (int) $b16;

        $i8 = 48 + $i39;

        $b9 = (byte) $i8;

        $r5[i24] = $b9;

     label14:
        i21 = i21 + 1;

        goto label05;

     label15:
        if z0 == 0 goto label16;

        return r0;

     label16:
        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r5, 0, i20, r6);

     label17:
        return $r8;

     label18:
        $r2 := @caughtexception;

        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],int,int)>($r5, 0, i20);

        return $r9;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label03;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label18;
    }

    public java.lang.Object clone()
    {
        org.mortbay.util.UrlEncoded $r0, r1;

        r1 := @this: org.mortbay.util.UrlEncoded;

        $r0 = new org.mortbay.util.UrlEncoded;

        specialinvoke $r0.<org.mortbay.util.UrlEncoded: void <init>(org.mortbay.util.UrlEncoded)>(r1);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("org.mortbay.util.UrlEncoding.charset", "UTF-8");

        <org.mortbay.util.UrlEncoded: java.lang.String ENCODING> = $r0;

        return;
    }
}
