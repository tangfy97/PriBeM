class org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList extends java.lang.Object
{
    private double[] _array;
    private int _count;

    public void <init>()
    {
        double[] $r1;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList r0;

        r0 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (double)[8];

        r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: double[] _array> = $r1;

        r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count> = 0;

        return;
    }

    public double[] toArray()
    {
        int $i0, $i1, $i2;
        double[] r1, $r2, $r3;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList r0;

        r0 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList;

        $i0 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count>;

        if $i0 >= 1 goto label1;

        $r3 = <org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: double[] EMPTY_DOUBLE_ARRAY>;

        return $r3;

     label1:
        $i1 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count>;

        r1 = newarray (double)[$i1];

        $r2 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: double[] _array>;

        $i2 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2);

        return r1;
    }

    private void ensureCapacity(int)
    {
        double[] $r1, r2, $r3;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList r0;
        int i0, $i1, $i2, i3, $i4;

        r0 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: double[] _array>;

        $i1 = lengthof $r1;

        if i0 <= $i1 goto label1;

        $i2 = i0 * 3;

        i3 = $i2 / 2;

        r2 = newarray (double)[i3];

        $r3 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: double[] _array>;

        $i4 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i4);

        r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: double[] _array> = r2;

     label1:
        return;
    }

    public void add(double)
    {
        double[] $r1;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList r0;
        int $i0, $i1, $i2, $i3, $i4;
        double d0;

        r0 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList;

        d0 := @parameter0: double;

        $i0 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count>;

        $i1 = $i0 + 1;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: void ensureCapacity(int)>($i1);

        $r1 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: double[] _array>;

        $i2 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count>;

        $r1[$i2] = d0;

        $i3 = r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count>;

        $i4 = $i3 + 1;

        r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: int _count> = $i4;

        return;
    }
}
