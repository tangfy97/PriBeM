public class com.hp.hpl.jena.query.QueryExecutionFactory extends java.lang.Object
{

    protected void <init>()
    {
        com.hp.hpl.jena.query.QueryExecutionFactory r0;

        r0 := @this: com.hp.hpl.jena.query.QueryExecutionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.query.QueryExecution $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.query.Query)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String)
    {
        com.hp.hpl.jena.query.Query $r1;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query)>($r1);

        return $r2;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.query.Syntax r1;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query)>($r2);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Dataset r1;
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.query.QueryExecution $r2;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.query.Dataset;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>(r0, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Query $r1;
        com.hp.hpl.jena.query.Dataset r2;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r3;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.query.Dataset;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Syntax, com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.query.Dataset r3;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        r3 := @parameter2: com.hp.hpl.jena.query.Dataset;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1);

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.util.FileManager)
    {
        com.hp.hpl.jena.util.FileManager r2;
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.query.QueryExecution $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r2 := @parameter1: com.hp.hpl.jena.util.FileManager;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.query.Query)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query)>(r0);

        if r2 == null goto label1;

        interfaceinvoke $r1.<com.hp.hpl.jena.query.QueryExecution: void setFileManager(com.hp.hpl.jena.util.FileManager)>(r2);

     label1:
        return $r1;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.util.FileManager)
    {
        com.hp.hpl.jena.query.Query $r1;
        com.hp.hpl.jena.util.FileManager r2;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r3;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.util.FileManager;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.util.FileManager)>($r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Syntax, com.hp.hpl.jena.util.FileManager)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.util.FileManager r3;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        r3 := @parameter2: com.hp.hpl.jena.util.FileManager;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1);

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.util.FileManager)>($r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.query.Dataset $r2;
        com.hp.hpl.jena.query.QueryExecution $r3;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.query.Query)>(r0);

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.rdf.model.Model)>(r1);

        $r2 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset create(com.hp.hpl.jena.rdf.model.Model)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>(r0, $r2);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.rdf.model.Model)>(r1);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.rdf.model.Model)>($r2, r1);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Syntax, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.query.Query $r3;
        com.hp.hpl.jena.query.Syntax r2;
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.query.Syntax;

        r1 := @parameter2: com.hp.hpl.jena.rdf.model.Model;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.rdf.model.Model)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r2);

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.rdf.model.Model)>($r3, r1);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.query.QuerySolution r2;
        com.hp.hpl.jena.query.QueryExecution $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r2 := @parameter1: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.query.Query)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query)>(r0);

        if r2 == null goto label1;

        interfaceinvoke $r1.<com.hp.hpl.jena.query.QueryExecution: void setInitialBinding(com.hp.hpl.jena.query.QuerySolution)>(r2);

     label1:
        return $r1;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query $r1;
        com.hp.hpl.jena.query.QuerySolution r2;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r3;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QuerySolution)>($r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Syntax, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.query.QuerySolution r3;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        r3 := @parameter2: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1);

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QuerySolution)>($r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.query.QuerySolution r3;
        com.hp.hpl.jena.rdf.model.Model r0;
        com.hp.hpl.jena.query.Dataset $r2;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        r3 := @parameter2: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.rdf.model.Model)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset create(com.hp.hpl.jena.rdf.model.Model)>(r0);

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.query.QuerySolution)>(r1, $r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.query.QuerySolution r3;
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        r3 := @parameter2: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.rdf.model.Model)>(r1);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String)>(r0);

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.query.QuerySolution)>($r2, r1, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Syntax, com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.query.QuerySolution r4;
        com.hp.hpl.jena.rdf.model.Model r3;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter3: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1);

        $r5 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.query.QuerySolution)>($r2, r3, r4);

        return $r5;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.query.QuerySolution r3;
        com.hp.hpl.jena.query.Dataset r1;
        com.hp.hpl.jena.query.QueryExecution $r2;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.query.Dataset;

        r3 := @parameter2: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.query.Query)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>(r0, r1);

        if r3 == null goto label1;

        interfaceinvoke $r2.<com.hp.hpl.jena.query.QueryExecution: void setInitialBinding(com.hp.hpl.jena.query.QuerySolution)>(r3);

     label1:
        return $r2;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query $r1;
        com.hp.hpl.jena.query.QuerySolution r3;
        com.hp.hpl.jena.query.Dataset r2;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.query.Dataset;

        r3 := @parameter2: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String)>(r0);

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.query.QuerySolution)>($r1, r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution create(java.lang.String, com.hp.hpl.jena.query.Syntax, com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.query.QuerySolution r4;
        com.hp.hpl.jena.query.Dataset r3;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        r3 := @parameter2: com.hp.hpl.jena.query.Dataset;

        r4 := @parameter3: com.hp.hpl.jena.query.QuerySolution;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.Query makeQuery(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1);

        $r5 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.query.QuerySolution)>($r2, r3, r4);

        return $r5;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        com.hp.hpl.jena.query.QueryExecution $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,java.lang.String,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, null);

        return $r2;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, java.lang.String, org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        com.hp.hpl.jena.query.Query $r2;
        org.apache.jena.atlas.web.auth.HttpAuthenticator r3;
        java.lang.String r0, r1;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "URL for service is null");

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r1);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>(r1);

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,com.hp.hpl.jena.query.Query,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, $r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        com.hp.hpl.jena.query.QueryExecution $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,java.lang.String,java.lang.String,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, r2, null);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, java.lang.String, java.lang.String, org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        com.hp.hpl.jena.query.Query $r2;
        org.apache.jena.atlas.web.auth.HttpAuthenticator r4;
        java.lang.String r0, r1, r3;
        com.hp.hpl.jena.query.QueryExecution $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "URL for service is null");

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r1);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>(r1);

        $r5 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,com.hp.hpl.jena.query.Query,java.lang.String,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, $r2, r3, r4);

        return $r5;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, java.lang.String, java.util.List, java.util.List)
    {
        java.util.List r2, r3;
        java.lang.String r0, r1;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,java.lang.String,java.util.List,java.util.List,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, r2, r3, null);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, java.lang.String, java.util.List, java.util.List, org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        com.hp.hpl.jena.query.Query $r2;
        java.util.List r3, r4;
        org.apache.jena.atlas.web.auth.HttpAuthenticator r5;
        java.lang.String r0, r1;
        com.hp.hpl.jena.query.QueryExecution $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "URL for service is null");

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(java.lang.String)>(r1);

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>(r1);

        $r6 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,com.hp.hpl.jena.query.Query,java.util.List,java.util.List,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, $r2, r3, r4, r5);

        return $r6;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,com.hp.hpl.jena.query.Query,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, null);

        return $r2;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, com.hp.hpl.jena.query.Query, org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        com.hp.hpl.jena.query.Query r1;
        org.apache.jena.atlas.web.auth.HttpAuthenticator r2;
        com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP $r3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        r2 := @parameter2: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "URL for service is null");

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.query.Query)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP createServiceRequest(java.lang.String,com.hp.hpl.jena.query.Query,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, com.hp.hpl.jena.query.Query, java.util.List, java.util.List)
    {
        com.hp.hpl.jena.query.Query r1;
        java.util.List r2, r3;
        java.lang.String r0;
        com.hp.hpl.jena.query.QueryExecution $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,com.hp.hpl.jena.query.Query,java.util.List,java.util.List,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, r2, r3, null);

        return $r4;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, com.hp.hpl.jena.query.Query, java.util.List, java.util.List, org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        com.hp.hpl.jena.query.Query r1;
        java.util.List r4, r5;
        org.apache.jena.atlas.web.auth.HttpAuthenticator r2;
        com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP $r3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: java.util.List;

        r2 := @parameter4: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "URL for service is null");

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.query.Query)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP createServiceRequest(java.lang.String,com.hp.hpl.jena.query.Query,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, r2);

        if r4 == null goto label1;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP: void setDefaultGraphURIs(java.util.List)>(r4);

     label1:
        if r5 == null goto label2;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP: void setNamedGraphURIs(java.util.List)>(r5);

     label2:
        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, com.hp.hpl.jena.query.Query, java.lang.String)
    {
        com.hp.hpl.jena.query.Query r1;
        java.lang.String r0, r2;
        com.hp.hpl.jena.query.QueryExecution $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String,com.hp.hpl.jena.query.Query,java.lang.String,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, r2, null);

        return $r3;
    }

    public static com.hp.hpl.jena.query.QueryExecution sparqlService(java.lang.String, com.hp.hpl.jena.query.Query, java.lang.String, org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        com.hp.hpl.jena.query.Query r1;
        org.apache.jena.atlas.web.auth.HttpAuthenticator r2;
        com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP $r3;
        java.lang.String r0, r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        r4 := @parameter2: java.lang.String;

        r2 := @parameter3: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "URL for service is null");

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkArg(com.hp.hpl.jena.query.Query)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP createServiceRequest(java.lang.String,com.hp.hpl.jena.query.Query,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, r2);

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP: void addDefaultGraph(java.lang.String)>(r4);

        return $r3;
    }

    public static com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP createServiceRequest(java.lang.String, com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP $r2;
        com.hp.hpl.jena.query.Query r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP createServiceRequest(java.lang.String,com.hp.hpl.jena.query.Query,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, r1, null);

        return $r2;
    }

    public static com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP createServiceRequest(java.lang.String, com.hp.hpl.jena.query.Query, org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        com.hp.hpl.jena.query.Query r2;
        com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP $r0;
        org.apache.jena.atlas.web.auth.HttpAuthenticator r3;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.query.Query;

        r3 := @parameter2: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        $r0 = new com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP: void <init>(java.lang.String,com.hp.hpl.jena.query.Query,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r1, r2, r3);

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.engine.Plan createPlan(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.engine.Plan $r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.util.Context r3;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r3 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.sparql.engine.Plan makePlan(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.sparql.engine.Plan createPlan(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.engine.Plan $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.sparql.engine.Plan makePlan(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r0, r1, r2, null);

        return $r3;
    }

    private static com.hp.hpl.jena.query.Query toQuery(com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.syntax.Element r1;
        com.hp.hpl.jena.query.Query $r0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        $r0 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query make()>();

        virtualinvoke $r0.<com.hp.hpl.jena.query.Query: void setQueryPattern(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        virtualinvoke $r0.<com.hp.hpl.jena.query.Query: void setQuerySelectType()>();

        virtualinvoke $r0.<com.hp.hpl.jena.query.Query: void setQueryResultStar(boolean)>(1);

        return $r0;
    }

    private static com.hp.hpl.jena.sparql.engine.Plan makePlan(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.engine.Plan $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.util.Context $r4, $r5, r7;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r2;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r6 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r7 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        if r7 != null goto label1;

        $r4 = new com.hp.hpl.jena.sparql.util.Context;

        $r5 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

        specialinvoke $r4.<com.hp.hpl.jena.sparql.util.Context: void <init>(com.hp.hpl.jena.sparql.util.Context)>($r5);

        r7 = $r4;

     label1:
        if r6 != null goto label2;

        r6 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingRoot: com.hp.hpl.jena.sparql.engine.binding.Binding create()>();

     label2:
        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r0, r1, r7);

        if $r2 != null goto label3;

        return null;

     label3:
        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.QueryEngineFactory: com.hp.hpl.jena.sparql.engine.Plan create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r0, r1, r6, r7);

        return $r3;
    }

    private static com.hp.hpl.jena.query.Query makeQuery(java.lang.String)
    {
        com.hp.hpl.jena.query.Query $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>(r0);

        return $r1;
    }

    private static com.hp.hpl.jena.query.Query makeQuery(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Query $r2;
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1);

        return $r2;
    }

    protected static com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.query.QueryExecution $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>(r0, null);

        return $r1;
    }

    protected static com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Dataset r1;
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.query.QueryExecution $r2;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.query.Dataset;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.sparql.util.Context)>(r0, r1, null);

        return $r2;
    }

    protected static com.hp.hpl.jena.query.QueryExecution make(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r9;
        com.hp.hpl.jena.sparql.util.Context r8;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r2;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase $r3;
        com.hp.hpl.jena.query.Dataset r1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.query.Dataset;

        r8 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        virtualinvoke r0.<com.hp.hpl.jena.query.Query: void setResultVars()>();

        if r8 != null goto label1;

        r8 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

     label1:
        r9 = null;

        if r1 == null goto label2;

        r9 = interfaceinvoke r1.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

     label2:
        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r0, r9, r8);

        if $r2 != null goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find a QueryEngineFactory for query: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/QueryExecutionFactory;", $r7);

        return null;

     label3:
        $r3 = new com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void <init>(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.sparql.util.Context,com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>(r0, r1, r8, $r2);

        return $r3;
    }

    private static com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r2;
        com.hp.hpl.jena.sparql.util.Context r3;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r3 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry get()>();

        $r4 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineFactory find(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3);

        return $r4;
    }

    private static void checkNotNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r2);

        throw $r1;

     label1:
        return;
    }

    private static void checkArg(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "Model is a null pointer");

        return;
    }

    private static void checkArg(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "Query string is null");

        return;
    }

    private static void checkArg(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "Query is null");

        return;
    }
}
