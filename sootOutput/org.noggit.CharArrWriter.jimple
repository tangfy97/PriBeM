class org.noggit.CharArrWriter extends org.noggit.CharArr
{
    protected java.io.Writer sink;

    void <init>()
    {
        org.noggit.CharArrWriter r0;

        r0 := @this: org.noggit.CharArrWriter;

        specialinvoke r0.<org.noggit.CharArr: void <init>()>();

        return;
    }

    public void flush()
    {
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        org.noggit.CharArrWriter r0;
        int $i0, $i1, $i2, $i3;
        java.io.Writer $r2;
        char[] $r1;

        r0 := @this: org.noggit.CharArrWriter;

     label1:
        $r2 = r0.<org.noggit.CharArrWriter: java.io.Writer sink>;

        $r1 = r0.<org.noggit.CharArrWriter: char[] buf>;

        $i3 = r0.<org.noggit.CharArrWriter: int start>;

        $i1 = r0.<org.noggit.CharArrWriter: int end>;

        $i0 = r0.<org.noggit.CharArrWriter: int start>;

        $i2 = $i1 - $i0;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>($r1, $i3, $i2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        r0.<org.noggit.CharArrWriter: int end> = 0;

        r0.<org.noggit.CharArrWriter: int start> = 0;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(char)
    {
        int $i0, $i1;
        char[] $r1;
        char c2;
        org.noggit.CharArrWriter r0;

        r0 := @this: org.noggit.CharArrWriter;

        c2 := @parameter0: char;

        $i1 = r0.<org.noggit.CharArrWriter: int end>;

        $r1 = r0.<org.noggit.CharArrWriter: char[] buf>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.noggit.CharArrWriter: void flush()>();

     label1:
        virtualinvoke r0.<org.noggit.CharArrWriter: void unsafeWrite(char)>(c2);

        return;
    }

    public void write(char[], int, int)
    {
        java.io.IOException $r5;
        java.lang.RuntimeException $r6;
        org.noggit.CharArrWriter r0;
        int $i0, $i1, i2, i3, $i4, i5, $i6, $i7;
        java.io.Writer $r4;
        char[] $r1, $r2, r3;

        r0 := @this: org.noggit.CharArrWriter;

        r3 := @parameter0: char[];

        i5 := @parameter1: int;

        i3 := @parameter2: int;

        $r1 = r0.<org.noggit.CharArrWriter: char[] buf>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.noggit.CharArrWriter: int end>;

        i2 = $i1 - $i0;

        if i3 >= i2 goto label1;

        virtualinvoke r0.<org.noggit.CharArrWriter: void unsafeWrite(char[],int,int)>(r3, i5, i3);

        goto label6;

     label1:
        $r2 = r0.<org.noggit.CharArrWriter: char[] buf>;

        $i4 = lengthof $r2;

        if i3 >= $i4 goto label2;

        virtualinvoke r0.<org.noggit.CharArrWriter: void unsafeWrite(char[],int,int)>(r3, i5, i2);

        virtualinvoke r0.<org.noggit.CharArrWriter: void flush()>();

        $i7 = i5 + i2;

        $i6 = i3 - i2;

        virtualinvoke r0.<org.noggit.CharArrWriter: void unsafeWrite(char[],int,int)>(r3, $i7, $i6);

        goto label6;

     label2:
        virtualinvoke r0.<org.noggit.CharArrWriter: void flush()>();

     label3:
        $r4 = r0.<org.noggit.CharArrWriter: java.io.Writer sink>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r3, i5, i3);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public void write(java.lang.String, int, int)
    {
        org.noggit.CharArrWriter r0;
        int $i0, $i1, i2, i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String r3;
        java.io.IOException $r8;
        java.lang.RuntimeException $r9;
        java.io.Writer $r4;
        char[] $r1, $r2, $r5, $r6, $r7;

        r0 := @this: org.noggit.CharArrWriter;

        r3 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        i3 := @parameter2: int;

        $r1 = r0.<org.noggit.CharArrWriter: char[] buf>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.noggit.CharArrWriter: int end>;

        i2 = $i1 - $i0;

        if i3 >= i2 goto label1;

        $i12 = i5 + i3;

        $r7 = r0.<org.noggit.CharArrWriter: char[] buf>;

        $i11 = r0.<org.noggit.CharArrWriter: int end>;

        virtualinvoke r3.<java.lang.String: void getChars(int,int,char[],int)>(i5, $i12, $r7, $i11);

        $i13 = r0.<org.noggit.CharArrWriter: int end>;

        $i14 = $i13 + i3;

        r0.<org.noggit.CharArrWriter: int end> = $i14;

        goto label6;

     label1:
        $r2 = r0.<org.noggit.CharArrWriter: char[] buf>;

        $i4 = lengthof $r2;

        if i3 >= $i4 goto label2;

        $i7 = i5 + i2;

        $r5 = r0.<org.noggit.CharArrWriter: char[] buf>;

        $i6 = r0.<org.noggit.CharArrWriter: int end>;

        virtualinvoke r3.<java.lang.String: void getChars(int,int,char[],int)>(i5, $i7, $r5, $i6);

        virtualinvoke r0.<org.noggit.CharArrWriter: void flush()>();

        $i9 = i5 + i2;

        $i8 = i5 + i3;

        $r6 = r0.<org.noggit.CharArrWriter: char[] buf>;

        virtualinvoke r3.<java.lang.String: void getChars(int,int,char[],int)>($i9, $i8, $r6, 0);

        $i10 = i3 - i2;

        r0.<org.noggit.CharArrWriter: int end> = $i10;

        goto label6;

     label2:
        virtualinvoke r0.<org.noggit.CharArrWriter: void flush()>();

     label3:
        $r4 = r0.<org.noggit.CharArrWriter: java.io.Writer sink>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String,int,int)>(r3, i5, i3);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }
}
