public class org.codehaus.jettison.AbstractXMLEventWriter extends java.lang.Object implements javax.xml.stream.XMLEventWriter
{
    private javax.xml.stream.XMLStreamWriter streamWriter;

    public void <init>(javax.xml.stream.XMLStreamWriter)
    {
        org.codehaus.jettison.AbstractXMLEventWriter r0;
        javax.xml.stream.XMLStreamWriter r1;

        r0 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        r1 := @parameter0: javax.xml.stream.XMLStreamWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter> = r1;

        return;
    }

    public void add(javax.xml.stream.events.XMLEvent) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLEventWriter r6;
        javax.xml.stream.events.XMLEvent r0;
        javax.xml.stream.XMLStreamException $r1;
        javax.xml.stream.XMLStreamWriter $r7, $r8, $r10, $r16, $r24, $r26, $r30, $r37, $r38, $r42, $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.xml.stream.events.Namespace r48;
        java.lang.StringBuilder $r2, $r3, $r4;
        javax.xml.namespace.QName $r13, $r20;
        javax.xml.stream.events.Attribute r49;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r5, $r11, $r14, $r15, $r17, $r21, $r22, $r23, $r25, $r27, $r28, $r29, $r31, $r32, $r33, $r35, $r36, $r39, $r40, $r41, $r43, $r44, $r45;
        javax.xml.stream.events.StartElement $r12;
        java.util.Iterator $r18, $r47;
        javax.xml.stream.events.Characters $r9;
        java.lang.Object $r19, $r34;

        r6 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        r0 := @parameter0: javax.xml.stream.events.XMLEvent;

        $z0 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: boolean isStartDocument()>();

        if $z0 == 0 goto label01;

        $r46 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r46.<javax.xml.stream.XMLStreamWriter: void writeStartDocument()>();

        goto label16;

     label01:
        $z1 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

        if $z1 == 0 goto label12;

        $r12 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        $r13 = interfaceinvoke $r12.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r14 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $i0 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i0 <= 0 goto label02;

        $r41 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i5 = virtualinvoke $r41.<java.lang.String: int length()>();

        if $i5 <= 0 goto label02;

        $r42 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r43 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r44 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r45 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r42.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r43, $r44, $r45);

        goto label04;

     label02:
        $r15 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i1 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i1 <= 0 goto label03;

        $r38 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r39 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r40 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r38.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String)>($r39, $r40);

        goto label04;

     label03:
        $r16 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r17 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r16.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String)>($r17);

     label04:
        $r47 = interfaceinvoke $r12.<javax.xml.stream.events.StartElement: java.util.Iterator getNamespaces()>();

     label05:
        $z6 = interfaceinvoke $r47.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label06;

        $r34 = interfaceinvoke $r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (javax.xml.stream.events.Namespace) $r34;

        $r35 = interfaceinvoke r48.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        $r36 = interfaceinvoke r48.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        $r37 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r37.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r35, $r36);

        goto label05;

     label06:
        $r18 = interfaceinvoke $r12.<javax.xml.stream.events.StartElement: java.util.Iterator getAttributes()>();

     label07:
        $z5 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r49 = (javax.xml.stream.events.Attribute) $r19;

        $r20 = interfaceinvoke r49.<javax.xml.stream.events.Attribute: javax.xml.namespace.QName getName()>();

        $r21 = interfaceinvoke r49.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        $r22 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $i2 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i2 <= 0 goto label08;

        $r29 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i4 = virtualinvoke $r29.<java.lang.String: int length()>();

        if $i4 <= 0 goto label08;

        $r30 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r31 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r32 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r33 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r30.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r31, $r32, $r33, $r21);

        goto label10;

     label08:
        $r23 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i3 = virtualinvoke $r23.<java.lang.String: int length()>();

        if $i3 <= 0 goto label09;

        $r26 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r27 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r28 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r26.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>($r27, $r28, $r21);

        goto label10;

     label09:
        $r24 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r25 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r24.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r25, $r21);

     label10:
        goto label07;

     label11:
        goto label16;

     label12:
        $z2 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: boolean isCharacters()>();

        if $z2 == 0 goto label13;

        $r9 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $r10 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r11 = interfaceinvoke $r9.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        interfaceinvoke $r10.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r11);

        goto label16;

     label13:
        $z3 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: boolean isEndElement()>();

        if $z3 == 0 goto label14;

        $r8 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r8.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        goto label16;

     label14:
        $z4 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: boolean isEndDocument()>();

        if $z4 == 0 goto label15;

        $r7 = r6.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r7.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        goto label16;

     label15:
        $r1 = new javax.xml.stream.XMLStreamException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported event type: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label16:
        return;
    }

    public void add(javax.xml.stream.XMLEventReader) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLEventReader r0;
        org.codehaus.jettison.AbstractXMLEventWriter r1;
        javax.xml.stream.events.XMLEvent $r2;
        boolean $z0;

        r1 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        r0 := @parameter0: javax.xml.stream.XMLEventReader;

     label1:
        $z0 = interfaceinvoke r0.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        virtualinvoke r1.<org.codehaus.jettison.AbstractXMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r2);

        goto label1;

     label2:
        virtualinvoke r1.<org.codehaus.jettison.AbstractXMLEventWriter: void close()>();

        return;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r1;

        r0 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        $r1 = r0.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void close()>();

        return;
    }

    public void flush() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r1;

        r0 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        $r1 = r0.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void flush()>();

        return;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        org.codehaus.jettison.AbstractXMLEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r1;
        javax.xml.namespace.NamespaceContext $r2;

        r0 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        $r1 = r0.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        return $r2;
    }

    public java.lang.String getPrefix(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: java.lang.String getPrefix(java.lang.String)>(r1);

        return $r3;
    }

    public void setDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>(r1);

        return;
    }

    public void setNamespaceContext(javax.xml.namespace.NamespaceContext) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLEventWriter r0;
        javax.xml.namespace.NamespaceContext r1;
        javax.xml.stream.XMLStreamWriter $r2;

        r0 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        r1 := @parameter0: javax.xml.namespace.NamespaceContext;

        $r2 = r0.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>(r1);

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r3;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.jettison.AbstractXMLEventWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.codehaus.jettison.AbstractXMLEventWriter: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r3.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }
}
