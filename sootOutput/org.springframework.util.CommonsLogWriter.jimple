public class org.springframework.util.CommonsLogWriter extends java.io.Writer
{
    private final org.apache.commons.logging.Log logger;
    private final java.lang.StringBuilder buffer;

    public void <init>(org.apache.commons.logging.Log)
    {
        java.lang.StringBuilder $r1;
        org.apache.commons.logging.Log r2;
        org.springframework.util.CommonsLogWriter r0;

        r0 := @this: org.springframework.util.CommonsLogWriter;

        r2 := @parameter0: org.apache.commons.logging.Log;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer> = $r1;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "Logger must not be null");

        r0.<org.springframework.util.CommonsLogWriter: org.apache.commons.logging.Log logger> = r2;

        return;
    }

    public void write(char)
    {
        char c0;
        int $i1, $i2;
        java.lang.StringBuilder $r1, $r2, $r3, $r6;
        org.apache.commons.logging.Log $r4;
        org.springframework.util.CommonsLogWriter r0;
        java.lang.String $r5;

        r0 := @this: org.springframework.util.CommonsLogWriter;

        c0 := @parameter0: char;

        $i2 = (int) c0;

        if $i2 != 10 goto label1;

        $r2 = r0.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer>;

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label1;

        $r4 = r0.<org.springframework.util.CommonsLogWriter: org.apache.commons.logging.Log logger>;

        $r3 = r0.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r5);

        $r6 = r0.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer>;

        virtualinvoke $r6.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label2;

     label1:
        $r1 = r0.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label2:
        return;
    }

    public void write(char[], int, int)
    {
        char c3;
        int i0, i1, $i2, $i4, i5, $i6;
        char[] r0;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        org.apache.commons.logging.Log $r5;
        org.springframework.util.CommonsLogWriter r1;
        java.lang.String $r6;

        r1 := @this: org.springframework.util.CommonsLogWriter;

        r0 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i5 = 0;

        goto label4;

     label1:
        $i2 = i1 + i5;

        c3 = r0[$i2];

        $i6 = (int) c3;

        if $i6 != 10 goto label2;

        $r3 = r1.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer>;

        $i4 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i4 <= 0 goto label2;

        $r5 = r1.<org.springframework.util.CommonsLogWriter: org.apache.commons.logging.Log logger>;

        $r4 = r1.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

        $r7 = r1.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer>;

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label3;

     label2:
        $r2 = r1.<org.springframework.util.CommonsLogWriter: java.lang.StringBuilder buffer>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

     label3:
        i5 = i5 + 1;

     label4:
        if i5 < i0 goto label1;

        return;
    }

    public void flush()
    {
        org.springframework.util.CommonsLogWriter r0;

        r0 := @this: org.springframework.util.CommonsLogWriter;

        return;
    }

    public void close()
    {
        org.springframework.util.CommonsLogWriter r0;

        r0 := @this: org.springframework.util.CommonsLogWriter;

        return;
    }
}
