public class org.apache.batik.ext.awt.image.rendered.MorphologyOp extends java.lang.Object implements java.awt.image.BufferedImageOp, java.awt.image.RasterOp
{
    private int radiusX;
    private int radiusY;
    private boolean doDilation;
    private final int rangeX;
    private final int rangeY;
    private final java.awt.color.ColorSpace sRGB;
    private final java.awt.color.ColorSpace lRGB;

    public void <init>(int, int, boolean)
    {
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r0;
        java.lang.IllegalArgumentException $r3;
        java.awt.color.ColorSpace $r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: java.awt.color.ColorSpace sRGB> = $r1;

        $r2 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1004);

        r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: java.awt.color.ColorSpace lRGB> = $r2;

        if i0 <= 0 goto label1;

        if i1 > 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The radius of X-axis or Y-axis should not be Zero or Negatives.");

        throw $r3;

     label2:
        r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX> = i0;

        r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY> = i1;

        r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation> = z0;

        $i2 = 2 * i0;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX> = $i3;

        $i4 = 2 * i1;

        $i5 = $i4 + 1;

        r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY> = $i5;

        return;
    }

    public java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)
    {
        java.awt.Rectangle $r3;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r0;
        java.awt.image.SampleModel $r2;
        java.awt.image.Raster r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r1 := @parameter0: java.awt.image.Raster;

        $r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: void checkCompatible(java.awt.image.SampleModel)>($r2);

        $r3 = new java.awt.Rectangle;

        $i0 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();

        $i1 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();

        $i2 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();

        $i3 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();

        specialinvoke $r3.<java.awt.Rectangle: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r3;
    }

    public java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)
    {
        java.awt.Rectangle $r0;
        java.awt.image.BufferedImage r1;
        int $i0, $i1;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r2;

        r2 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r1 := @parameter0: java.awt.image.BufferedImage;

        $r0 = new java.awt.Rectangle;

        $i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        return $r0;
    }

    public java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D$Float $r1;
        java.awt.geom.Point2D r0, r3;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r2;
        double $d0, $d1;

        r2 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r0 := @parameter0: java.awt.geom.Point2D;

        r3 := @parameter1: java.awt.geom.Point2D;

        if r3 != null goto label1;

        $r1 = new java.awt.geom.Point2D$Float;

        specialinvoke $r1.<java.awt.geom.Point2D$Float: void <init>()>();

        r3 = $r1;

     label1:
        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r3.<java.awt.geom.Point2D: void setLocation(double,double)>($d0, $d1);

        return r3;
    }

    private void checkCompatible(java.awt.image.ColorModel, java.awt.image.SampleModel)
    {
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r2;
        java.awt.color.ColorSpace $r1, $r3, $r12;
        java.awt.image.SampleModel r4;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0, $z1, $z2;
        java.awt.image.DirectColorModel r5;
        java.lang.IllegalArgumentException $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        java.awt.image.ColorModel r0;

        r2 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r0 := @parameter0: java.awt.image.ColorModel;

        r4 := @parameter1: java.awt.image.SampleModel;

        $r1 = virtualinvoke r0.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r3 = r2.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: java.awt.color.ColorSpace sRGB>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r12 = r2.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: java.awt.color.ColorSpace lRGB>;

        $z2 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Expected CS_sRGB or CS_LINEAR_RGB color model");

        throw $r14;

     label1:
        $z1 = r0 instanceof java.awt.image.DirectColorModel;

        if $z1 != 0 goto label2;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colorModel should be an instance of DirectColorModel");

        throw $r15;

     label2:
        $i0 = virtualinvoke r4.<java.awt.image.SampleModel: int getDataType()>();

        if $i0 == 3 goto label3;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colorModel\'s transferType should be DataBuffer.TYPE_INT");

        throw $r16;

     label3:
        r5 = (java.awt.image.DirectColorModel) r0;

        $i1 = virtualinvoke r5.<java.awt.image.DirectColorModel: int getRedMask()>();

        if $i1 == 16711680 goto label4;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("red mask in source should be 0x00ff0000");

        throw $r17;

     label4:
        $i2 = virtualinvoke r5.<java.awt.image.DirectColorModel: int getGreenMask()>();

        $i6 = (int) 65280;

        if $i2 == $i6 goto label5;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("green mask in source should be 0x0000ff00");

        throw $r18;

     label5:
        $i3 = virtualinvoke r5.<java.awt.image.DirectColorModel: int getBlueMask()>();

        if $i3 == 255 goto label6;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("blue mask in source should be 0x000000ff");

        throw $r19;

     label6:
        $i4 = virtualinvoke r5.<java.awt.image.DirectColorModel: int getAlphaMask()>();

        if $i4 == -16777216 goto label7;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("alpha mask in source should be 0xff000000");

        throw $r20;

     label7:
        return;
    }

    private boolean isCompatible(java.awt.image.ColorModel, java.awt.image.SampleModel)
    {
        java.awt.image.DirectColorModel r4;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r6;
        java.awt.color.ColorSpace $r1, $r2, $r5;
        java.awt.image.SampleModel r3;
        java.awt.image.ColorModel r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0;

        r6 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r0 := @parameter0: java.awt.image.ColorModel;

        r3 := @parameter1: java.awt.image.SampleModel;

        $r1 = virtualinvoke r0.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r2 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        if $r1 == $r2 goto label1;

        $r5 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1004);

        if $r1 == $r5 goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof java.awt.image.DirectColorModel;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r3.<java.awt.image.SampleModel: int getDataType()>();

        if $i0 == 3 goto label3;

        return 0;

     label3:
        r4 = (java.awt.image.DirectColorModel) r0;

        $i1 = virtualinvoke r4.<java.awt.image.DirectColorModel: int getRedMask()>();

        if $i1 == 16711680 goto label4;

        return 0;

     label4:
        $i2 = virtualinvoke r4.<java.awt.image.DirectColorModel: int getGreenMask()>();

        $i6 = (int) 65280;

        if $i2 == $i6 goto label5;

        return 0;

     label5:
        $i3 = virtualinvoke r4.<java.awt.image.DirectColorModel: int getBlueMask()>();

        if $i3 == 255 goto label6;

        return 0;

     label6:
        $i4 = virtualinvoke r4.<java.awt.image.DirectColorModel: int getAlphaMask()>();

        if $i4 == -16777216 goto label7;

        return 0;

     label7:
        return 1;
    }

    private void checkCompatible(java.awt.image.SampleModel)
    {
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r13;
        java.awt.image.SampleModel r0;
        int[] $r2;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.awt.image.SinglePixelPackedSampleModel $r1;
        java.lang.String $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r3, $r10, $r11, $r12;

        r13 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r0 := @parameter0: java.awt.image.SampleModel;

        $z0 = r0 instanceof java.awt.image.SinglePixelPackedSampleModel;

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MorphologyOp only works with Rasters using SinglePixelPackedSampleModels");

        throw $r12;

     label1:
        $i0 = virtualinvoke r0.<java.awt.image.SampleModel: int getNumBands()>();

        if $i0 == 4 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MorphologyOp only words with Rasters having 4 bands");

        throw $r11;

     label2:
        $i1 = virtualinvoke r0.<java.awt.image.SampleModel: int getDataType()>();

        if $i1 == 3 goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MorphologyOp only works with Rasters using DataBufferInt");

        throw $r10;

     label3:
        $r1 = (java.awt.image.SinglePixelPackedSampleModel) r0;

        $r2 = virtualinvoke $r1.<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>();

        i6 = 0;

        goto label6;

     label4:
        $i3 = $r2[i6];

        $i4 = $i3 % 8;

        if $i4 == 0 goto label5;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MorphologyOp only works with Rasters using 8 bits per band : ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        $i5 = $r2[i6];

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label5:
        i6 = i6 + 1;

     label6:
        $i2 = lengthof $r2;

        if i6 < $i2 goto label4;

        return;
    }

    public java.awt.RenderingHints getRenderingHints()
    {
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        return null;
    }

    public java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)
    {
        java.awt.image.Raster r1;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r0;
        java.awt.image.WritableRaster $r3;
        java.awt.image.SampleModel $r2;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r1 := @parameter0: java.awt.image.Raster;

        $r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: void checkCompatible(java.awt.image.SampleModel)>($r2);

        $r3 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster()>();

        return $r3;
    }

    public java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel)
    {
        java.awt.image.BufferedImage r0, $r4;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r2;
        java.awt.image.SampleModel $r3;
        java.awt.image.ColorModel r5;
        int $i0, $i1;
        java.awt.image.WritableRaster $r1;
        boolean $z0;

        r2 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r0 := @parameter0: java.awt.image.BufferedImage;

        r5 := @parameter1: java.awt.image.ColorModel;

        if r5 != null goto label1;

        r5 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

     label1:
        $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $r1 = virtualinvoke r5.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>($i0, $i1);

        $r3 = virtualinvoke $r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        specialinvoke r2.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: void checkCompatible(java.awt.image.ColorModel,java.awt.image.SampleModel)>(r5, $r3);

        $r4 = new java.awt.image.BufferedImage;

        $z0 = virtualinvoke r5.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r5, $r1, $z0, null);

        return $r4;
    }

    static final boolean isBetter(int, int, boolean)
    {
        int i0, i1;
        boolean z0, $z1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 <= i1 goto label1;

        return z0;

     label1:
        if i0 >= i1 goto label4;

        if z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 1;
    }

    private void specialProcessRow(java.awt.image.Raster, java.awt.image.WritableRaster)
    {
        java.awt.image.SampleModel $r6, $r7, $r8, $r10;
        java.awt.image.DataBufferInt r2, r5;
        java.awt.image.Raster r0;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r16;
        int[] r13, r15, r17, r20, r21, r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, $i113, i114, i115, i116, i117, i118, i119, i120, $i121, $i122, $i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, $i139, $i141, $i143, $i145, $i147;
        java.awt.image.WritableRaster r3;
        java.awt.image.SinglePixelPackedSampleModel $r9, $r11, r18, r19;
        int[][] $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        java.awt.image.DataBuffer $r1, $r4;

        r16 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r0 := @parameter0: java.awt.image.Raster;

        r3 := @parameter1: java.awt.image.WritableRaster;

        $i0 = virtualinvoke r0.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.Raster: int getHeight()>();

        $r1 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r2 = (java.awt.image.DataBufferInt) $r1;

        $r4 = virtualinvoke r3.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r5 = (java.awt.image.DataBufferInt) $r4;

        $r6 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r18 = (java.awt.image.SinglePixelPackedSampleModel) $r6;

        $i2 = virtualinvoke r2.<java.awt.image.DataBuffer: int getOffset()>();

        $i3 = virtualinvoke r0.<java.awt.image.Raster: int getMinX()>();

        $i4 = virtualinvoke r0.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i5 = $i3 - $i4;

        $i6 = virtualinvoke r0.<java.awt.image.Raster: int getMinY()>();

        $i7 = virtualinvoke r0.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r18.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i5, $i8);

        i10 = $i2 + $i9;

        $r7 = virtualinvoke r3.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r19 = (java.awt.image.SinglePixelPackedSampleModel) $r7;

        $i11 = virtualinvoke r5.<java.awt.image.DataBuffer: int getOffset()>();

        $i12 = virtualinvoke r3.<java.awt.image.Raster: int getMinX()>();

        $i13 = virtualinvoke r3.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i14 = $i12 - $i13;

        $i15 = virtualinvoke r3.<java.awt.image.Raster: int getMinY()>();

        $i16 = virtualinvoke r3.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i17 = $i15 - $i16;

        $i18 = virtualinvoke r19.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i14, $i17);

        i19 = $i11 + $i18;

        $r8 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        $r9 = (java.awt.image.SinglePixelPackedSampleModel) $r8;

        $i20 = virtualinvoke $r9.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $r10 = virtualinvoke r3.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        $r11 = (java.awt.image.SinglePixelPackedSampleModel) $r10;

        $i21 = virtualinvoke $r11.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $r12 = virtualinvoke r2.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r13 = $r12[0];

        $r14 = virtualinvoke r5.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r15 = $r14[0];

        $i22 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        if $i0 > $i22 goto label11;

        i77 = 0;

        goto label10;

     label01:
        $i69 = i77 * $i20;

        i78 = i10 + $i69;

        $i70 = i77 * $i21;

        i79 = i19 + $i70;

        i80 = i78 + 1;

        i81 = r13[i78];

        i82 = i81 >>> 24;

        i83 = i81 & 16711680;

        $i139 = (int) 65280;

        i84 = i81 & $i139;

        i85 = i81 & 255;

        i86 = 1;

        goto label07;

     label02:
        $i71 = i80;

        i80 = i80 + 1;

        i87 = r13[$i71];

        i88 = i87 >>> 24;

        i89 = i87 & 16711680;

        $i141 = (int) 65280;

        i90 = i87 & $i141;

        i91 = i87 & 255;

        $z24 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z25 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i88, i82, $z24);

        if $z25 == 0 goto label03;

        i82 = i88;

     label03:
        $z26 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z27 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i89, i83, $z26);

        if $z27 == 0 goto label04;

        i83 = i89;

     label04:
        $z28 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z29 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i90, i84, $z28);

        if $z29 == 0 goto label05;

        i84 = i90;

     label05:
        $z30 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z31 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i91, i85, $z30);

        if $z31 == 0 goto label06;

        i85 = i91;

     label06:
        i86 = i86 + 1;

     label07:
        if i86 < $i0 goto label02;

        i92 = 0;

        goto label09;

     label08:
        $i72 = i79;

        i79 = i79 + 1;

        $i73 = i82 << 24;

        $i74 = $i73 | i83;

        $i75 = $i74 | i84;

        $i76 = $i75 | i85;

        r15[$i72] = $i76;

        i92 = i92 + 1;

     label09:
        if i92 < $i0 goto label08;

        i77 = i77 + 1;

     label10:
        if i77 < $i1 goto label01;

        goto label50;

     label11:
        r20 = newarray (int)[$i0];

        r21 = newarray (int)[$i0];

        r22 = newarray (int)[$i0];

        r17 = newarray (int)[$i0];

        i93 = 0;

        goto label49;

     label12:
        $i23 = i93 * $i20;

        i94 = i10 + $i23;

        $i24 = i93 * $i21;

        i95 = i19 + $i24;

        i96 = 0;

        i97 = 0;

        i98 = 0;

        i99 = 0;

        i100 = 0;

        i101 = i94 + 1;

        i102 = r13[i94];

        i103 = i102 >>> 24;

        i104 = i102 & 16711680;

        $i143 = (int) 65280;

        i105 = i102 & $i143;

        i106 = i102 & 255;

        r20[0] = i103;

        r21[0] = i104;

        r22[0] = i105;

        r17[0] = i106;

        i107 = 1;

        goto label18;

     label13:
        $i25 = i101;

        i101 = i101 + 1;

        i108 = r13[$i25];

        i109 = i108 >>> 24;

        i110 = i108 & 16711680;

        $i145 = (int) 65280;

        i111 = i108 & $i145;

        i112 = i108 & 255;

        r20[i107] = i109;

        r21[i107] = i110;

        r22[i107] = i111;

        r17[i107] = i112;

        $z0 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z1 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i109, i103, $z0);

        if $z1 == 0 goto label14;

        i103 = i109;

        i97 = i107;

     label14:
        $z2 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z3 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i110, i104, $z2);

        if $z3 == 0 goto label15;

        i104 = i110;

        i98 = i107;

     label15:
        $z4 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z5 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i111, i105, $z4);

        if $z5 == 0 goto label16;

        i105 = i111;

        i99 = i107;

     label16:
        $z6 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z7 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i112, i106, $z6);

        if $z7 == 0 goto label17;

        i106 = i112;

        i100 = i107;

     label17:
        i107 = i107 + 1;

     label18:
        $i113 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        if i107 <= $i113 goto label13;

        i114 = i95 + 1;

        $i26 = i103 << 24;

        $i27 = $i26 | i104;

        $i28 = $i27 | i105;

        $i29 = $i28 | i106;

        r15[i95] = $i29;

        i115 = 1;

        goto label24;

     label19:
        $i30 = i101;

        i101 = i101 + 1;

        i31 = r13[$i30];

        i116 = r20[i97];

        i117 = i31 >>> 24;

        $i32 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i33 = i115 + $i32;

        r20[$i33] = i117;

        $z8 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z9 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i117, i116, $z8);

        if $z9 == 0 goto label20;

        i116 = i117;

        $i52 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i97 = i115 + $i52;

     label20:
        $i53 = r21[i98];

        i118 = $i53;

        $i54 = i31 & 16711680;

        $i34 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i35 = i115 + $i34;

        r21[$i35] = $i54;

        $z10 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z11 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i54, $i53, $z10);

        if $z11 == 0 goto label21;

        i118 = $i54;

        $i49 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i98 = i115 + $i49;

     label21:
        $i50 = r22[i99];

        i119 = $i50;

        $i147 = (int) 65280;

        $i51 = i31 & $i147;

        $i36 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i37 = i115 + $i36;

        r22[$i37] = $i51;

        $z12 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z13 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i51, $i50, $z12);

        if $z13 == 0 goto label22;

        i119 = $i51;

        $i46 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i99 = i115 + $i46;

     label22:
        $i47 = r17[i100];

        i120 = $i47;

        $i48 = i31 & 255;

        $i38 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i39 = i115 + $i38;

        r17[$i39] = $i48;

        $z14 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z15 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i48, $i47, $z14);

        if $z15 == 0 goto label23;

        i120 = $i48;

        $i45 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i100 = i115 + $i45;

     label23:
        $i40 = i114;

        i114 = i114 + 1;

        $i41 = i116 << 24;

        $i42 = $i41 | i118;

        $i43 = $i42 | i119;

        $i44 = $i43 | i120;

        r15[$i40] = $i44;

        i115 = i115 + 1;

     label24:
        $i121 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i122 = $i0 - $i121;

        $i123 = $i122 - 1;

        if i115 <= $i123 goto label19;

        $i55 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i124 = $i0 - $i55;

        goto label26;

     label25:
        $i57 = i114 - 1;

        $i58 = r15[$i57];

        r15[i114] = $i58;

        i114 = i114 + 1;

        i124 = i124 + 1;

     label26:
        $i56 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        if i124 <= $i56 goto label25;

        $i59 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i125 = $i59 + 1;

        goto label48;

     label27:
        if i97 != i96 goto label31;

        $i68 = i96 + 1;

        i126 = r20[$i68];

        i97 = i96 + 1;

        i127 = i96 + 2;

        goto label30;

     label28:
        i128 = r20[i127];

        $z22 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z23 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i128, i126, $z22);

        if $z23 == 0 goto label29;

        i126 = i128;

        i97 = i127;

     label29:
        i127 = i127 + 1;

     label30:
        if i127 < $i0 goto label28;

        goto label32;

     label31:
        i126 = r20[i97];

     label32:
        if i98 != i96 goto label36;

        $i67 = i96 + 1;

        i129 = r21[$i67];

        i98 = i96 + 1;

        i130 = i96 + 2;

        goto label35;

     label33:
        i131 = r21[i130];

        $z20 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z21 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i131, i129, $z20);

        if $z21 == 0 goto label34;

        i129 = i131;

        i98 = i130;

     label34:
        i130 = i130 + 1;

     label35:
        if i130 < $i0 goto label33;

        goto label37;

     label36:
        i129 = r21[i98];

     label37:
        if i99 != i96 goto label41;

        $i66 = i96 + 1;

        i132 = r22[$i66];

        i99 = i96 + 1;

        i133 = i96 + 2;

        goto label40;

     label38:
        i134 = r22[i133];

        $z18 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z19 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i134, i132, $z18);

        if $z19 == 0 goto label39;

        i132 = i134;

        i99 = i133;

     label39:
        i133 = i133 + 1;

     label40:
        if i133 < $i0 goto label38;

        goto label42;

     label41:
        i132 = r22[i99];

     label42:
        if i100 != i96 goto label46;

        $i65 = i96 + 1;

        i135 = r17[$i65];

        i100 = i96 + 1;

        i136 = i96 + 2;

        goto label45;

     label43:
        i137 = r17[i136];

        $z16 = r16.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z17 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i137, i135, $z16);

        if $z17 == 0 goto label44;

        i135 = i137;

        i100 = i136;

     label44:
        i136 = i136 + 1;

     label45:
        if i136 < $i0 goto label43;

        goto label47;

     label46:
        i135 = r17[i100];

     label47:
        i96 = i96 + 1;

        $i60 = i114;

        i114 = i114 + 1;

        $i61 = i126 << 24;

        $i62 = $i61 | i129;

        $i63 = $i62 | i132;

        $i64 = $i63 | i135;

        r15[$i60] = $i64;

        i125 = i125 + 1;

     label48:
        if i125 < $i0 goto label27;

        i93 = i93 + 1;

     label49:
        if i93 < $i1 goto label12;

     label50:
        return;
    }

    private void specialProcessColumn(java.awt.image.Raster, java.awt.image.WritableRaster)
    {
        java.awt.image.SampleModel $r4;
        java.awt.image.DataBufferInt r3;
        java.awt.image.Raster r0;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r8;
        int[] r7, r9, r10, r11, r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, $i85, i86, i87, i88, i89, i90, i91, i92, $i93, $i94, $i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, $i111, $i113, $i115, $i117, $i119;
        java.awt.image.WritableRaster r1;
        java.awt.image.SinglePixelPackedSampleModel $r5;
        int[][] $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        java.awt.image.DataBuffer $r2;

        r8 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r0 := @parameter0: java.awt.image.Raster;

        r1 := @parameter1: java.awt.image.WritableRaster;

        $i0 = virtualinvoke r0.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.Raster: int getHeight()>();

        $r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r3 = (java.awt.image.DataBufferInt) $r2;

        $i2 = virtualinvoke r3.<java.awt.image.DataBuffer: int getOffset()>();

        $r4 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        $r5 = (java.awt.image.SinglePixelPackedSampleModel) $r4;

        $i3 = virtualinvoke $r5.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $r6 = virtualinvoke r3.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r7 = $r6[0];

        $i4 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        if $i1 > $i4 goto label11;

        i49 = 0;

        goto label10;

     label01:
        i50 = $i2 + i49;

        i51 = $i2 + i49;

        i52 = r7[i51];

        i53 = i51 + $i3;

        i54 = i52 >>> 24;

        i55 = i52 & 16711680;

        $i111 = (int) 65280;

        i56 = i52 & $i111;

        i57 = i52 & 255;

        i58 = 1;

        goto label07;

     label02:
        i59 = r7[i53];

        i53 = i53 + $i3;

        i60 = i59 >>> 24;

        i61 = i59 & 16711680;

        $i113 = (int) 65280;

        i62 = i59 & $i113;

        i63 = i59 & 255;

        $z24 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z25 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i60, i54, $z24);

        if $z25 == 0 goto label03;

        i54 = i60;

     label03:
        $z26 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z27 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i61, i55, $z26);

        if $z27 == 0 goto label04;

        i55 = i61;

     label04:
        $z28 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z29 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i62, i56, $z28);

        if $z29 == 0 goto label05;

        i56 = i62;

     label05:
        $z30 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z31 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i63, i57, $z30);

        if $z31 == 0 goto label06;

        i57 = i63;

     label06:
        i58 = i58 + 1;

     label07:
        if i58 < $i1 goto label02;

        i64 = 0;

        goto label09;

     label08:
        $i45 = i54 << 24;

        $i46 = $i45 | i55;

        $i47 = $i46 | i56;

        $i48 = $i47 | i57;

        r7[i50] = $i48;

        i50 = i50 + $i3;

        i64 = i64 + 1;

     label09:
        if i64 < $i1 goto label08;

        i49 = i49 + 1;

     label10:
        if i49 < $i0 goto label01;

        goto label50;

     label11:
        r10 = newarray (int)[$i1];

        r11 = newarray (int)[$i1];

        r12 = newarray (int)[$i1];

        r9 = newarray (int)[$i1];

        i65 = 0;

        goto label49;

     label12:
        i66 = $i2 + i65;

        i67 = $i2 + i65;

        i68 = 0;

        i69 = 0;

        i70 = 0;

        i71 = 0;

        i72 = 0;

        i73 = r7[i67];

        i74 = i67 + $i3;

        i75 = i73 >>> 24;

        i76 = i73 & 16711680;

        $i115 = (int) 65280;

        i77 = i73 & $i115;

        i78 = i73 & 255;

        r10[0] = i75;

        r11[0] = i76;

        r12[0] = i77;

        r9[0] = i78;

        i79 = 1;

        goto label18;

     label13:
        i80 = r7[i74];

        i74 = i74 + $i3;

        i81 = i80 >>> 24;

        i82 = i80 & 16711680;

        $i117 = (int) 65280;

        i83 = i80 & $i117;

        i84 = i80 & 255;

        r10[i79] = i81;

        r11[i79] = i82;

        r12[i79] = i83;

        r9[i79] = i84;

        $z0 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z1 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i81, i75, $z0);

        if $z1 == 0 goto label14;

        i75 = i81;

        i69 = i79;

     label14:
        $z2 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z3 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i82, i76, $z2);

        if $z3 == 0 goto label15;

        i76 = i82;

        i70 = i79;

     label15:
        $z4 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z5 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i83, i77, $z4);

        if $z5 == 0 goto label16;

        i77 = i83;

        i71 = i79;

     label16:
        $z6 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z7 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i84, i78, $z6);

        if $z7 == 0 goto label17;

        i78 = i84;

        i72 = i79;

     label17:
        i79 = i79 + 1;

     label18:
        $i85 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        if i79 <= $i85 goto label13;

        $i5 = i75 << 24;

        $i6 = $i5 | i76;

        $i7 = $i6 | i77;

        $i8 = $i7 | i78;

        r7[i66] = $i8;

        i86 = i66 + $i3;

        i87 = 1;

        goto label24;

     label19:
        i9 = r7[i74];

        i74 = i74 + $i3;

        i88 = r10[i69];

        i89 = i9 >>> 24;

        $i10 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i11 = i87 + $i10;

        r10[$i11] = i89;

        $z8 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z9 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i89, i88, $z8);

        if $z9 == 0 goto label20;

        i88 = i89;

        $i29 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i69 = i87 + $i29;

     label20:
        $i30 = r11[i70];

        i90 = $i30;

        $i31 = i9 & 16711680;

        $i12 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i13 = i87 + $i12;

        r11[$i13] = $i31;

        $z10 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z11 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i31, $i30, $z10);

        if $z11 == 0 goto label21;

        i90 = $i31;

        $i26 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i70 = i87 + $i26;

     label21:
        $i27 = r12[i71];

        i91 = $i27;

        $i119 = (int) 65280;

        $i28 = i9 & $i119;

        $i14 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i15 = i87 + $i14;

        r12[$i15] = $i28;

        $z12 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z13 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i28, $i27, $z12);

        if $z13 == 0 goto label22;

        i91 = $i28;

        $i23 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i71 = i87 + $i23;

     label22:
        $i24 = r9[i72];

        i92 = $i24;

        $i25 = i9 & 255;

        $i16 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i17 = i87 + $i16;

        r9[$i17] = $i25;

        $z14 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z15 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i25, $i24, $z14);

        if $z15 == 0 goto label23;

        i92 = $i25;

        $i22 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i72 = i87 + $i22;

     label23:
        $i18 = i88 << 24;

        $i19 = $i18 | i90;

        $i20 = $i19 | i91;

        $i21 = $i20 | i92;

        r7[i86] = $i21;

        i86 = i86 + $i3;

        i87 = i87 + 1;

     label24:
        $i93 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i94 = $i1 - $i93;

        $i95 = $i94 - 1;

        if i87 <= $i95 goto label19;

        $i32 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i96 = $i1 - $i32;

        goto label26;

     label25:
        $i34 = i86 - $i3;

        $i35 = r7[$i34];

        r7[i86] = $i35;

        i86 = i86 + $i3;

        i96 = i96 + 1;

     label26:
        $i33 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        if i96 <= $i33 goto label25;

        $i36 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i97 = $i36 + 1;

        goto label48;

     label27:
        if i69 != i68 goto label31;

        $i44 = i68 + 1;

        i98 = r10[$i44];

        i69 = i68 + 1;

        i99 = i68 + 2;

        goto label30;

     label28:
        i100 = r10[i99];

        $z22 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z23 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i100, i98, $z22);

        if $z23 == 0 goto label29;

        i98 = i100;

        i69 = i99;

     label29:
        i99 = i99 + 1;

     label30:
        if i99 < $i1 goto label28;

        goto label32;

     label31:
        i98 = r10[i69];

     label32:
        if i70 != i68 goto label36;

        $i43 = i68 + 1;

        i101 = r11[$i43];

        i70 = i68 + 1;

        i102 = i68 + 2;

        goto label35;

     label33:
        i103 = r11[i102];

        $z20 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z21 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i103, i101, $z20);

        if $z21 == 0 goto label34;

        i101 = i103;

        i70 = i102;

     label34:
        i102 = i102 + 1;

     label35:
        if i102 < $i1 goto label33;

        goto label37;

     label36:
        i101 = r11[i70];

     label37:
        if i71 != i68 goto label41;

        $i42 = i68 + 1;

        i104 = r12[$i42];

        i71 = i68 + 1;

        i105 = i68 + 2;

        goto label40;

     label38:
        i106 = r12[i105];

        $z18 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z19 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i106, i104, $z18);

        if $z19 == 0 goto label39;

        i104 = i106;

        i71 = i105;

     label39:
        i105 = i105 + 1;

     label40:
        if i105 < $i1 goto label38;

        goto label42;

     label41:
        i104 = r12[i71];

     label42:
        if i72 != i68 goto label46;

        $i41 = i68 + 1;

        i107 = r9[$i41];

        i72 = i68 + 1;

        i108 = i68 + 2;

        goto label45;

     label43:
        i109 = r9[i108];

        $z16 = r8.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z17 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i109, i107, $z16);

        if $z17 == 0 goto label44;

        i107 = i109;

        i72 = i108;

     label44:
        i108 = i108 + 1;

     label45:
        if i108 < $i1 goto label43;

        goto label47;

     label46:
        i107 = r9[i72];

     label47:
        i68 = i68 + 1;

        $i37 = i98 << 24;

        $i38 = $i37 | i101;

        $i39 = $i38 | i104;

        $i40 = $i39 | i107;

        r7[i86] = $i40;

        i86 = i86 + $i3;

        i97 = i97 + 1;

     label48:
        if i97 < $i1 goto label27;

        i65 = i65 + 1;

     label49:
        if i65 < $i0 goto label12;

     label50:
        return;
    }

    public java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster)
    {
        java.awt.image.SampleModel $r4, $r6, $r11;
        java.awt.image.DataBufferInt $r12, $r13;
        int[] $r14, $r15, r17, r18, r19, r20, r21, r22, r23, r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, $i126, i127, i128, i129, i130, $i131, i132, i133, i134, i135, i136, i137, i138, i139, $i140, i141, i142, $i143, i144, i145, $i146, i147, i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, i161, i162, i163, i164, i165, i166, i167, i168, i169, i170, i171, i172, i173, i174, i175, i176, i177, i178, i179, i180, i181, i182, i183, i184, i185, i186, i187, i188, i189, i190, i191, i192, i193, i194, i195, i196, $i197, i198, i199, i200, i201, i202, $i203, i204, i205, i206, i207, i208, i209, i210, i211, $i212, $i213, i214, i215, $i216, $i217, i218, i219, $i220, $i221, i222, i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, i236, i237, i238, i239, i240, i241, i242, i243, i244, i245, i246, i247, i248, i249, i250, i251, $i252, $i254, $i256, $i258, $i260, $i262, $i264, $i266, $i268, $i270, $i272;
        java.awt.image.SinglePixelPackedSampleModel $r5, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z64, $z65, $z66, $z67, $z68, $z69, $z70, $z71, $z72, $z73, $z74, $z75, $z76, $z77, $z78, $z79;
        java.awt.image.DataBuffer $r2, $r3;
        java.awt.image.Raster r0;
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r1;
        java.awt.image.WritableRaster r16;
        int[][] $r8, $r9;
        java.lang.IllegalArgumentException $r25;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r0 := @parameter0: java.awt.image.Raster;

        r16 := @parameter1: java.awt.image.WritableRaster;

        if r16 == null goto label001;

        $r11 = virtualinvoke r16.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        specialinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: void checkCompatible(java.awt.image.SampleModel)>($r11);

        goto label003;

     label001:
        if r0 != null goto label002;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("src should not be null when dest is null");

        throw $r25;

     label002:
        r16 = virtualinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)>(r0);

     label003:
        $i0 = virtualinvoke r0.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.Raster: int getHeight()>();

        $r2 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r12 = (java.awt.image.DataBufferInt) $r2;

        $r3 = virtualinvoke r16.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r13 = (java.awt.image.DataBufferInt) $r3;

        $i2 = virtualinvoke $r12.<java.awt.image.DataBuffer: int getOffset()>();

        $i3 = virtualinvoke $r13.<java.awt.image.DataBuffer: int getOffset()>();

        $r4 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        $r5 = (java.awt.image.SinglePixelPackedSampleModel) $r4;

        $i4 = virtualinvoke $r5.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $r6 = virtualinvoke r16.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        $r7 = (java.awt.image.SinglePixelPackedSampleModel) $r6;

        $i5 = virtualinvoke $r7.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $r8 = virtualinvoke $r12.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        $r14 = $r8[0];

        $r9 = virtualinvoke $r13.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        $r15 = $r9[0];

        $i6 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i7 = 2 * $i6;

        if $i0 > $i7 goto label004;

        specialinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: void specialProcessRow(java.awt.image.Raster,java.awt.image.WritableRaster)>(r0, r16);

        goto label061;

     label004:
        $i8 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        r17 = newarray (int)[$i8];

        $i9 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        r18 = newarray (int)[$i9];

        $i10 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        r19 = newarray (int)[$i10];

        $i11 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        r20 = newarray (int)[$i11];

        i106 = 0;

        goto label060;

     label005:
        $i12 = i106 * $i4;

        i107 = $i2 + $i12;

        $i13 = i106 * $i5;

        i108 = $i3 + $i13;

        i109 = 0;

        i110 = 0;

        i111 = 0;

        i112 = 0;

        i113 = 0;

        i114 = i107 + 1;

        i115 = $r14[i107];

        i116 = i115 >>> 24;

        i117 = i115 & 16711680;

        $i254 = (int) 65280;

        i118 = i115 & $i254;

        i119 = i115 & 255;

        r17[0] = i116;

        r18[0] = i117;

        r19[0] = i118;

        r20[0] = i119;

        i120 = 1;

        goto label011;

     label006:
        $i14 = i114;

        i114 = i114 + 1;

        i121 = $r14[$i14];

        i122 = i121 >>> 24;

        i123 = i121 & 16711680;

        $i256 = (int) 65280;

        i124 = i121 & $i256;

        i125 = i121 & 255;

        r17[i120] = i122;

        r18[i120] = i123;

        r19[i120] = i124;

        r20[i120] = i125;

        $z0 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z1 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i122, i116, $z0);

        if $z1 == 0 goto label007;

        i116 = i122;

        i110 = i120;

     label007:
        $z2 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z3 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i123, i117, $z2);

        if $z3 == 0 goto label008;

        i117 = i123;

        i111 = i120;

     label008:
        $z4 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z5 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i124, i118, $z4);

        if $z5 == 0 goto label009;

        i118 = i124;

        i112 = i120;

     label009:
        $z6 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z7 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i125, i119, $z6);

        if $z7 == 0 goto label010;

        i119 = i125;

        i113 = i120;

     label010:
        i120 = i120 + 1;

     label011:
        $i126 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        if i120 <= $i126 goto label006;

        i127 = i108 + 1;

        $i15 = i116 << 24;

        $i16 = $i15 | i117;

        $i17 = $i16 | i118;

        $i18 = $i17 | i119;

        $r15[i108] = $i18;

        i128 = 1;

        goto label017;

     label012:
        $i19 = i114;

        i114 = i114 + 1;

        i129 = $r14[$i19];

        i116 = r17[i110];

        i130 = i129 >>> 24;

        $i20 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i21 = i128 + $i20;

        r17[$i21] = i130;

        $z8 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z9 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i130, i116, $z8);

        if $z9 == 0 goto label013;

        i116 = i130;

        $i40 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i110 = i128 + $i40;

     label013:
        $i41 = r18[i111];

        i117 = $i41;

        $i42 = i129 & 16711680;

        $i22 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i23 = i128 + $i22;

        r18[$i23] = $i42;

        $z10 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z11 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i42, $i41, $z10);

        if $z11 == 0 goto label014;

        i117 = $i42;

        $i37 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i111 = i128 + $i37;

     label014:
        $i38 = r19[i112];

        i118 = $i38;

        $i258 = (int) 65280;

        $i39 = i129 & $i258;

        $i24 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i25 = i128 + $i24;

        r19[$i25] = $i39;

        $z12 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z13 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i39, $i38, $z12);

        if $z13 == 0 goto label015;

        i118 = $i39;

        $i34 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i112 = i128 + $i34;

     label015:
        $i35 = r20[i113];

        i119 = $i35;

        $i36 = i129 & 255;

        $i26 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i27 = i128 + $i26;

        r20[$i27] = $i36;

        $z14 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z15 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i36, $i35, $z14);

        if $z15 == 0 goto label016;

        i119 = $i36;

        $i33 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i113 = i128 + $i33;

     label016:
        $i28 = i127;

        i127 = i127 + 1;

        $i29 = i116 << 24;

        $i30 = $i29 | i117;

        $i31 = $i30 | i118;

        $i32 = $i31 | i119;

        $r15[$i28] = $i32;

        i128 = i128 + 1;

     label017:
        $i131 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        if i128 <= $i131 goto label012;

        $i43 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i132 = $i43 + 1;

        goto label039;

     label018:
        $i44 = i114;

        i114 = i114 + 1;

        i133 = $r14[$i44];

        i134 = i133 >>> 24;

        i135 = i133 & 16711680;

        $i260 = (int) 65280;

        i136 = i133 & $i260;

        i137 = i133 & 255;

        r17[i109] = i134;

        r18[i109] = i135;

        r19[i109] = i136;

        r20[i109] = i137;

        if i110 != i109 goto label022;

        i116 = r17[0];

        i110 = 0;

        i138 = 1;

        goto label021;

     label019:
        i139 = r17[i138];

        $z30 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z31 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i139, i116, $z30);

        if $z31 == 0 goto label020;

        i116 = i139;

        i110 = i138;

     label020:
        i138 = i138 + 1;

     label021:
        $i140 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        if i138 < $i140 goto label019;

        goto label023;

     label022:
        i116 = r17[i110];

        $z16 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z17 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i134, i116, $z16);

        if $z17 == 0 goto label023;

        i116 = i134;

        i110 = i109;

     label023:
        if i111 != i109 goto label027;

        i117 = r18[0];

        i111 = 0;

        i141 = 1;

        goto label026;

     label024:
        i142 = r18[i141];

        $z28 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z29 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i142, i117, $z28);

        if $z29 == 0 goto label025;

        i117 = i142;

        i111 = i141;

     label025:
        i141 = i141 + 1;

     label026:
        $i143 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        if i141 < $i143 goto label024;

        goto label028;

     label027:
        i117 = r18[i111];

        $z18 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z19 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i135, i117, $z18);

        if $z19 == 0 goto label028;

        i117 = i135;

        i111 = i109;

     label028:
        if i112 != i109 goto label032;

        i118 = r19[0];

        i112 = 0;

        i144 = 1;

        goto label031;

     label029:
        i145 = r19[i144];

        $z26 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z27 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i145, i118, $z26);

        if $z27 == 0 goto label030;

        i118 = i145;

        i112 = i144;

     label030:
        i144 = i144 + 1;

     label031:
        $i146 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        if i144 < $i146 goto label029;

        goto label033;

     label032:
        i118 = r19[i112];

        $z20 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z21 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i136, i118, $z20);

        if $z21 == 0 goto label033;

        i118 = i136;

        i112 = i109;

     label033:
        if i113 != i109 goto label037;

        i119 = r20[0];

        i113 = 0;

        i147 = 1;

        goto label036;

     label034:
        i148 = r20[i147];

        $z24 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z25 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i148, i119, $z24);

        if $z25 == 0 goto label035;

        i119 = i148;

        i113 = i147;

     label035:
        i147 = i147 + 1;

     label036:
        $i149 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        if i147 < $i149 goto label034;

        goto label038;

     label037:
        i119 = r20[i113];

        $z22 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z23 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i137, i119, $z22);

        if $z23 == 0 goto label038;

        i119 = i137;

        i113 = i109;

     label038:
        $i150 = i127;

        i127 = i127 + 1;

        $i151 = i116 << 24;

        $i152 = $i151 | i117;

        $i153 = $i152 | i118;

        $i154 = $i153 | i119;

        $r15[$i150] = $i154;

        $i155 = i109 + 1;

        $i156 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        i109 = $i155 % $i156;

        i132 = i132 + 1;

     label039:
        $i157 = $i0 - 1;

        $i158 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        $i159 = $i157 - $i158;

        if i132 <= $i159 goto label018;

        if i109 != 0 goto label040;

        $i64 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        $i160 = $i64 - 1;

        goto label041;

     label040:
        $i160 = i109 - 1;

     label041:
        i161 = $i160;

        $i45 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        i162 = $i45 - 1;

        $i46 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusX>;

        i163 = $i0 - $i46;

        goto label059;

     label042:
        $i48 = i109 + 1;

        $i47 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        i164 = $i48 % $i47;

        if i110 != i109 goto label046;

        i116 = r17[i161];

        i165 = i164;

        i166 = 1;

        goto label045;

     label043:
        i167 = r17[i165];

        $z38 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z39 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i167, i116, $z38);

        if $z39 == 0 goto label044;

        i116 = i167;

        i110 = i165;

     label044:
        $i63 = i165 + 1;

        $i62 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        i165 = $i63 % $i62;

        i166 = i166 + 1;

     label045:
        if i166 < i162 goto label043;

     label046:
        if i111 != i109 goto label050;

        i117 = r18[i161];

        i168 = i164;

        i169 = 1;

        goto label049;

     label047:
        i170 = r18[i168];

        $z36 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z37 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i170, i117, $z36);

        if $z37 == 0 goto label048;

        i117 = i170;

        i111 = i168;

     label048:
        $i61 = i168 + 1;

        $i60 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        i168 = $i61 % $i60;

        i169 = i169 + 1;

     label049:
        if i169 < i162 goto label047;

     label050:
        if i112 != i109 goto label054;

        i118 = r19[i161];

        i171 = i164;

        i172 = 1;

        goto label053;

     label051:
        i173 = r19[i171];

        $z34 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z35 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i173, i118, $z34);

        if $z35 == 0 goto label052;

        i118 = i173;

        i112 = i171;

     label052:
        $i59 = i171 + 1;

        $i58 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        i171 = $i59 % $i58;

        i172 = i172 + 1;

     label053:
        if i172 < i162 goto label051;

     label054:
        if i113 != i109 goto label058;

        i119 = r20[i161];

        i174 = i164;

        i175 = 1;

        goto label057;

     label055:
        i176 = r20[i174];

        $z32 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z33 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i176, i119, $z32);

        if $z33 == 0 goto label056;

        i119 = i176;

        i113 = i174;

     label056:
        $i57 = i174 + 1;

        $i56 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        i174 = $i57 % $i56;

        i175 = i175 + 1;

     label057:
        if i175 < i162 goto label055;

     label058:
        $i49 = i127;

        i127 = i127 + 1;

        $i50 = i116 << 24;

        $i51 = $i50 | i117;

        $i52 = $i51 | i118;

        $i53 = $i52 | i119;

        $r15[$i49] = $i53;

        $i55 = i109 + 1;

        $i54 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeX>;

        i109 = $i55 % $i54;

        $i262 = (int) -1;

        i162 = i162 + $i262;

        i163 = i163 + 1;

     label059:
        if i163 < $i0 goto label042;

        i106 = i106 + 1;

     label060:
        if i106 < $i1 goto label005;

     label061:
        $i65 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i66 = 2 * $i65;

        if $i1 > $i66 goto label062;

        specialinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: void specialProcessColumn(java.awt.image.Raster,java.awt.image.WritableRaster)>(r0, r16);

        goto label119;

     label062:
        $i67 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        r21 = newarray (int)[$i67];

        $i68 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        r22 = newarray (int)[$i68];

        $i69 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        r23 = newarray (int)[$i69];

        $i70 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        r24 = newarray (int)[$i70];

        i177 = 0;

        goto label118;

     label063:
        i178 = $i3 + i177;

        i179 = $i3 + i177;

        i180 = 0;

        i181 = 0;

        i182 = 0;

        i183 = 0;

        i184 = 0;

        i185 = $r15[i179];

        i186 = i179 + $i5;

        i187 = i185 >>> 24;

        i188 = i185 & 16711680;

        $i264 = (int) 65280;

        i189 = i185 & $i264;

        i190 = i185 & 255;

        r21[0] = i187;

        r22[0] = i188;

        r23[0] = i189;

        r24[0] = i190;

        i191 = 1;

        goto label069;

     label064:
        i192 = $r15[i186];

        i186 = i186 + $i5;

        i193 = i192 >>> 24;

        i194 = i192 & 16711680;

        $i266 = (int) 65280;

        i195 = i192 & $i266;

        i196 = i192 & 255;

        r21[i191] = i193;

        r22[i191] = i194;

        r23[i191] = i195;

        r24[i191] = i196;

        $z40 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z41 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i193, i187, $z40);

        if $z41 == 0 goto label065;

        i187 = i193;

        i181 = i191;

     label065:
        $z42 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z43 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i194, i188, $z42);

        if $z43 == 0 goto label066;

        i188 = i194;

        i182 = i191;

     label066:
        $z44 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z45 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i195, i189, $z44);

        if $z45 == 0 goto label067;

        i189 = i195;

        i183 = i191;

     label067:
        $z46 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z47 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i196, i190, $z46);

        if $z47 == 0 goto label068;

        i190 = i196;

        i184 = i191;

     label068:
        i191 = i191 + 1;

     label069:
        $i197 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        if i191 <= $i197 goto label064;

        $i71 = i187 << 24;

        $i72 = $i71 | i188;

        $i73 = $i72 | i189;

        $i74 = $i73 | i190;

        $r15[i178] = $i74;

        i198 = i178 + $i5;

        i199 = 1;

        goto label075;

     label070:
        $i75 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i200 = i199 + $i75;

        i201 = $r15[i186];

        i186 = i186 + $i5;

        i187 = r21[i181];

        i202 = i201 >>> 24;

        r21[i200] = i202;

        $z48 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z49 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i202, i187, $z48);

        if $z49 == 0 goto label071;

        i187 = i202;

        i181 = i200;

     label071:
        $i84 = r22[i182];

        i188 = $i84;

        $i85 = i201 & 16711680;

        r22[i200] = $i85;

        $z50 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z51 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i85, $i84, $z50);

        if $z51 == 0 goto label072;

        i188 = $i85;

        i182 = i200;

     label072:
        $i82 = r23[i183];

        i189 = $i82;

        $i268 = (int) 65280;

        $i83 = i201 & $i268;

        r23[i200] = $i83;

        $z52 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z53 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i83, $i82, $z52);

        if $z53 == 0 goto label073;

        i189 = $i83;

        i183 = i200;

     label073:
        $i80 = r24[i184];

        i190 = $i80;

        $i81 = i201 & 255;

        r24[i200] = $i81;

        $z54 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z55 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>($i81, $i80, $z54);

        if $z55 == 0 goto label074;

        i190 = $i81;

        i184 = i200;

     label074:
        $i76 = i187 << 24;

        $i77 = $i76 | i188;

        $i78 = $i77 | i189;

        $i79 = $i78 | i190;

        $r15[i198] = $i79;

        i198 = i198 + $i5;

        i199 = i199 + 1;

     label075:
        $i203 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        if i199 <= $i203 goto label070;

        $i86 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i204 = $i86 + 1;

        goto label097;

     label076:
        i205 = $r15[i186];

        i186 = i186 + $i5;

        i206 = i205 >>> 24;

        i207 = i205 & 16711680;

        $i270 = (int) 65280;

        i208 = i205 & $i270;

        i209 = i205 & 255;

        r21[i180] = i206;

        r22[i180] = i207;

        r23[i180] = i208;

        r24[i180] = i209;

        if i181 != i180 goto label080;

        i187 = r21[0];

        i181 = 0;

        i210 = 1;

        goto label079;

     label077:
        i211 = r21[i210];

        $z70 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z71 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i211, i187, $z70);

        if $z71 == 0 goto label078;

        i187 = i211;

        i181 = i210;

     label078:
        i210 = i210 + 1;

     label079:
        $i212 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i213 = 2 * $i212;

        if i210 <= $i213 goto label077;

        goto label081;

     label080:
        i187 = r21[i181];

        $z56 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z57 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i206, i187, $z56);

        if $z57 == 0 goto label081;

        i187 = i206;

        i181 = i180;

     label081:
        if i182 != i180 goto label085;

        i188 = r22[0];

        i182 = 0;

        i214 = 1;

        goto label084;

     label082:
        i215 = r22[i214];

        $z68 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z69 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i215, i188, $z68);

        if $z69 == 0 goto label083;

        i188 = i215;

        i182 = i214;

     label083:
        i214 = i214 + 1;

     label084:
        $i216 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i217 = 2 * $i216;

        if i214 <= $i217 goto label082;

        goto label086;

     label085:
        i188 = r22[i182];

        $z58 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z59 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i207, i188, $z58);

        if $z59 == 0 goto label086;

        i188 = i207;

        i182 = i180;

     label086:
        if i183 != i180 goto label090;

        i189 = r23[0];

        i183 = 0;

        i218 = 1;

        goto label089;

     label087:
        i219 = r23[i218];

        $z66 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z67 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i219, i189, $z66);

        if $z67 == 0 goto label088;

        i189 = i219;

        i183 = i218;

     label088:
        i218 = i218 + 1;

     label089:
        $i220 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i221 = 2 * $i220;

        if i218 <= $i221 goto label087;

        goto label091;

     label090:
        i189 = r23[i183];

        $z60 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z61 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i208, i189, $z60);

        if $z61 == 0 goto label091;

        i189 = i208;

        i183 = i180;

     label091:
        if i184 != i180 goto label095;

        i190 = r24[0];

        i184 = 0;

        i222 = 1;

        goto label094;

     label092:
        i223 = r24[i222];

        $z64 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z65 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i223, i190, $z64);

        if $z65 == 0 goto label093;

        i190 = i223;

        i184 = i222;

     label093:
        i222 = i222 + 1;

     label094:
        $i224 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i225 = 2 * $i224;

        if i222 <= $i225 goto label092;

        goto label096;

     label095:
        i190 = r24[i184];

        $z62 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z63 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i209, i190, $z62);

        if $z63 == 0 goto label096;

        i190 = i209;

        i184 = i180;

     label096:
        $i226 = i187 << 24;

        $i227 = $i226 | i188;

        $i228 = $i227 | i189;

        $i229 = $i228 | i190;

        $r15[i198] = $i229;

        i198 = i198 + $i5;

        $i230 = i180 + 1;

        $i231 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        i180 = $i230 % $i231;

        i204 = i204 + 1;

     label097:
        $i232 = $i1 - 1;

        $i233 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i234 = $i232 - $i233;

        if i204 <= $i234 goto label076;

        if i180 != 0 goto label098;

        $i105 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        $i235 = 2 * $i105;

        goto label099;

     label098:
        $i235 = i180 - 1;

     label099:
        i236 = $i235;

        $i87 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        i237 = $i87 - 1;

        $i88 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int radiusY>;

        i238 = $i1 - $i88;

        goto label117;

     label100:
        $i90 = i180 + 1;

        $i89 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        i239 = $i90 % $i89;

        if i181 != i180 goto label104;

        i187 = r21[i236];

        i240 = i239;

        i241 = 1;

        goto label103;

     label101:
        i242 = r21[i240];

        $z78 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z79 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i242, i187, $z78);

        if $z79 == 0 goto label102;

        i187 = i242;

        i181 = i240;

     label102:
        $i104 = i240 + 1;

        $i103 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        i240 = $i104 % $i103;

        i241 = i241 + 1;

     label103:
        if i241 < i237 goto label101;

     label104:
        if i182 != i180 goto label108;

        i188 = r22[i236];

        i243 = i239;

        i244 = 1;

        goto label107;

     label105:
        i245 = r22[i243];

        $z76 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z77 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i245, i188, $z76);

        if $z77 == 0 goto label106;

        i188 = i245;

        i182 = i243;

     label106:
        $i102 = i243 + 1;

        $i101 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        i243 = $i102 % $i101;

        i244 = i244 + 1;

     label107:
        if i244 < i237 goto label105;

     label108:
        if i183 != i180 goto label112;

        i189 = r23[i236];

        i246 = i239;

        i247 = 1;

        goto label111;

     label109:
        i248 = r23[i246];

        $z74 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z75 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i248, i189, $z74);

        if $z75 == 0 goto label110;

        i189 = i248;

        i183 = i246;

     label110:
        $i100 = i246 + 1;

        $i99 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        i246 = $i100 % $i99;

        i247 = i247 + 1;

     label111:
        if i247 < i237 goto label109;

     label112:
        if i184 != i180 goto label116;

        i190 = r24[i236];

        i249 = i239;

        i250 = 1;

        goto label115;

     label113:
        i251 = r24[i249];

        $z72 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean doDilation>;

        $z73 = staticinvoke <org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isBetter(int,int,boolean)>(i251, i190, $z72);

        if $z73 == 0 goto label114;

        i190 = i251;

        i184 = i249;

     label114:
        $i98 = i249 + 1;

        $i97 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        i249 = $i98 % $i97;

        i250 = i250 + 1;

     label115:
        if i250 < i237 goto label113;

     label116:
        $i91 = i187 << 24;

        $i92 = $i91 | i188;

        $i93 = $i92 | i189;

        $i94 = $i93 | i190;

        $r15[i198] = $i94;

        i198 = i198 + $i5;

        $i96 = i180 + 1;

        $i95 = r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: int rangeY>;

        i180 = $i96 % $i95;

        $i272 = (int) -1;

        i237 = i237 + $i272;

        i238 = i238 + 1;

     label117:
        $i252 = $i1 - 1;

        if i238 < $i252 goto label100;

        i177 = i177 + 1;

     label118:
        if i177 < $i0 goto label063;

     label119:
        return r16;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        org.apache.batik.ext.awt.image.rendered.MorphologyOp r1;
        java.lang.NullPointerException $r16;
        java.awt.image.SampleModel $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.awt.image.BufferedImage r0, $r8, $r10, $r13, $r15, r17, r18, r19;
        int $i0, $i1;
        java.awt.image.ColorModel $r2, $r4, $r6, $r7, $r11, $r12;
        java.awt.image.WritableRaster $r9, $r14, $r20, $r21, $r22, $r23, $r24, $r25;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.MorphologyOp;

        r17 := @parameter0: java.awt.image.BufferedImage;

        r18 := @parameter1: java.awt.image.BufferedImage;

        if r17 != null goto label1;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("Source image should not be null");

        throw $r16;

     label1:
        r0 = r17;

        r19 = r18;

        $r2 = virtualinvoke r17.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $r3 = virtualinvoke r17.<java.awt.image.BufferedImage: java.awt.image.SampleModel getSampleModel()>();

        $z0 = specialinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isCompatible(java.awt.image.ColorModel,java.awt.image.SampleModel)>($r2, $r3);

        if $z0 != 0 goto label2;

        $r15 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke r17.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r17.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r15.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 3);

        r17 = $r15;

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: void copyData(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r0, $r15);

        goto label3;

     label2:
        $z1 = virtualinvoke r17.<java.awt.image.BufferedImage: boolean isAlphaPremultiplied()>();

        if $z1 != 0 goto label3;

        $r11 = virtualinvoke r17.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $r12 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceColorModel(java.awt.image.ColorModel,boolean)>($r11, 1);

        $r13 = new java.awt.image.BufferedImage;

        $r14 = virtualinvoke r17.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        specialinvoke $r13.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r12, $r14, 1, null);

        r17 = $r13;

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: void copyData(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r0, $r13);

     label3:
        if r18 != null goto label4;

        $r10 = virtualinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r17, null);

        r18 = $r10;

        r19 = $r10;

        goto label6;

     label4:
        $r4 = virtualinvoke r18.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $r5 = virtualinvoke r18.<java.awt.image.BufferedImage: java.awt.image.SampleModel getSampleModel()>();

        $z2 = specialinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: boolean isCompatible(java.awt.image.ColorModel,java.awt.image.SampleModel)>($r4, $r5);

        if $z2 != 0 goto label5;

        r18 = virtualinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r17, null);

        goto label6;

     label5:
        $z3 = virtualinvoke r18.<java.awt.image.BufferedImage: boolean isAlphaPremultiplied()>();

        if $z3 != 0 goto label6;

        $r6 = virtualinvoke r18.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $r7 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceColorModel(java.awt.image.ColorModel,boolean)>($r6, 1);

        $r8 = new java.awt.image.BufferedImage;

        $r9 = virtualinvoke r19.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        specialinvoke $r8.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r7, $r9, 1, null);

        r18 = $r8;

     label6:
        $r20 = virtualinvoke r17.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        $r21 = virtualinvoke r18.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        virtualinvoke r1.<org.apache.batik.ext.awt.image.rendered.MorphologyOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>($r20, $r21);

        $r22 = virtualinvoke r17.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        $r23 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        if $r22 != $r23 goto label7;

        $z6 = virtualinvoke r17.<java.awt.image.BufferedImage: boolean isAlphaPremultiplied()>();

        $z7 = virtualinvoke r0.<java.awt.image.BufferedImage: boolean isAlphaPremultiplied()>();

        if $z6 == $z7 goto label7;

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: void copyData(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r17, r0);

     label7:
        $r24 = virtualinvoke r18.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        $r25 = virtualinvoke r19.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        if $r24 != $r25 goto label8;

        $z4 = virtualinvoke r18.<java.awt.image.BufferedImage: boolean isAlphaPremultiplied()>();

        $z5 = virtualinvoke r19.<java.awt.image.BufferedImage: boolean isAlphaPremultiplied()>();

        if $z4 == $z5 goto label9;

     label8:
        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: void copyData(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r18, r19);

     label9:
        return r19;
    }
}
