class org.waveprotocol.box.server.rpc.ServerRpcProvider$2 extends com.google.inject.servlet.ServletModule
{
    final org.waveprotocol.box.server.rpc.ServerRpcProvider this$0;

    void <init>(org.waveprotocol.box.server.rpc.ServerRpcProvider)
    {
        org.waveprotocol.box.server.rpc.ServerRpcProvider$2 r0;
        org.waveprotocol.box.server.rpc.ServerRpcProvider r1;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$2;

        r1 := @parameter0: org.waveprotocol.box.server.rpc.ServerRpcProvider;

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$2: org.waveprotocol.box.server.rpc.ServerRpcProvider this$0> = r1;

        specialinvoke r0.<com.google.inject.servlet.ServletModule: void <init>()>();

        return;
    }

    protected void configureServlets()
    {
        com.google.inject.servlet.ServletModule$ServletKeyBindingBuilder $r15;
        java.lang.String[] $r14;
        com.google.inject.binder.AnnotatedBindingBuilder $r16;
        java.util.Map $r13;
        java.lang.String r7;
        boolean $z0;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$2 r0;
        java.util.Iterator $r3;
        org.eclipse.jetty.servlet.ServletHolder $r9, $r12;
        org.waveprotocol.wave.model.util.Pair r5;
        java.util.List $r2;
        org.waveprotocol.box.server.rpc.ServerRpcProvider $r1;
        java.lang.Object $r4, $r6, $r8, $r11;
        java.lang.Class $r10;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$2;

        $r1 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$2: org.waveprotocol.box.server.rpc.ServerRpcProvider this$0>;

        $r2 = $r1.<org.waveprotocol.box.server.rpc.ServerRpcProvider: java.util.List servletRegistry>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.util.Pair) $r4;

        $r6 = virtualinvoke r5.<org.waveprotocol.wave.model.util.Pair: java.lang.Object getFirst()>();

        r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke r5.<org.waveprotocol.wave.model.util.Pair: java.lang.Object getSecond()>();

        $r9 = (org.eclipse.jetty.servlet.ServletHolder) $r8;

        $r10 = virtualinvoke $r9.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class getHeldClass()>();

        $r11 = virtualinvoke r5.<org.waveprotocol.wave.model.util.Pair: java.lang.Object getSecond()>();

        $r12 = (org.eclipse.jetty.servlet.ServletHolder) $r11;

        $r13 = virtualinvoke $r12.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map getInitParameters()>();

        $r14 = newarray (java.lang.String)[0];

        $r15 = virtualinvoke r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$2: com.google.inject.servlet.ServletModule$ServletKeyBindingBuilder serve(java.lang.String,java.lang.String[])>(r7, $r14);

        interfaceinvoke $r15.<com.google.inject.servlet.ServletModule$ServletKeyBindingBuilder: void 'with'(java.lang.Class,java.util.Map)>($r10, $r13);

        $r16 = virtualinvoke r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>($r10);

        interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label1;

     label2:
        return;
    }
}
