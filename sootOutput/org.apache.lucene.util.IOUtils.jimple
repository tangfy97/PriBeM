public final class org.apache.lucene.util.IOUtils extends java.lang.Object
{
    public static final java.lang.String UTF_8;
    public static final java.nio.charset.Charset CHARSET_UTF_8;
    private static final java.lang.reflect.Method SUPPRESS_METHOD;

    private void <init>()
    {
        org.apache.lucene.util.IOUtils r0;

        r0 := @this: org.apache.lucene.util.IOUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient void closeWhileHandlingException(java.lang.Exception, java.io.Closeable[]) throws java.lang.Exception, java.io.IOException
    {
        java.lang.Throwable $r7, r8, $r9;
        java.lang.Error $r3;
        java.io.IOException $r5;
        java.lang.RuntimeException $r2, $r4;
        java.lang.Exception r1;
        java.io.Closeable r6;
        java.io.Closeable[] r0;
        int i0, i1;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: java.lang.Exception;

        r0 := @parameter1: java.io.Closeable[];

        r8 = null;

        i0 = lengthof r0;

        i1 = 0;

     label01:
        if i1 >= i0 goto label08;

        r6 = r0[i1];

     label02:
        if r6 == null goto label03;

        interfaceinvoke r6.<java.io.Closeable: void close()>();

     label03:
        goto label07;

     label04:
        $r7 := @caughtexception;

        if r1 != null goto label05;

        $r9 = r8;

        goto label06;

     label05:
        $r9 = r1;

     label06:
        staticinvoke <org.apache.lucene.util.IOUtils: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r9, $r7);

        if r8 != null goto label07;

        r8 = $r7;

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        if r1 == null goto label09;

        throw r1;

     label09:
        if r8 == null goto label13;

        $z0 = r8 instanceof java.io.IOException;

        if $z0 == 0 goto label10;

        $r5 = (java.io.IOException) r8;

        throw $r5;

     label10:
        $z1 = r8 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label11;

        $r4 = (java.lang.RuntimeException) r8;

        throw $r4;

     label11:
        $z2 = r8 instanceof java.lang.Error;

        if $z2 == 0 goto label12;

        $r3 = (java.lang.Error) r8;

        throw $r3;

     label12:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r8);

        throw $r2;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
    }

    public static void closeWhileHandlingException(java.lang.Exception, java.lang.Iterable) throws java.lang.Exception, java.io.IOException
    {
        java.lang.Throwable $r9, r10, $r11;
        java.lang.Error $r4;
        java.lang.Iterable r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r1;
        java.io.IOException $r6;
        java.lang.RuntimeException $r3, $r5;
        java.lang.Exception r2;
        java.io.Closeable r8;
        java.lang.Object $r7;

        r2 := @parameter0: java.lang.Exception;

        r0 := @parameter1: java.lang.Iterable;

        r10 = null;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r7 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.io.Closeable) $r7;

     label02:
        if r8 == null goto label03;

        interfaceinvoke r8.<java.io.Closeable: void close()>();

     label03:
        goto label07;

     label04:
        $r9 := @caughtexception;

        if r2 != null goto label05;

        $r11 = r10;

        goto label06;

     label05:
        $r11 = r2;

     label06:
        staticinvoke <org.apache.lucene.util.IOUtils: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r11, $r9);

        if r10 != null goto label07;

        r10 = $r9;

     label07:
        goto label01;

     label08:
        if r2 == null goto label09;

        throw r2;

     label09:
        if r10 == null goto label13;

        $z1 = r10 instanceof java.io.IOException;

        if $z1 == 0 goto label10;

        $r6 = (java.io.IOException) r10;

        throw $r6;

     label10:
        $z2 = r10 instanceof java.lang.RuntimeException;

        if $z2 == 0 goto label11;

        $r5 = (java.lang.RuntimeException) r10;

        throw $r5;

     label11:
        $z3 = r10 instanceof java.lang.Error;

        if $z3 == 0 goto label12;

        $r4 = (java.lang.Error) r10;

        throw $r4;

     label12:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r10);

        throw $r3;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
    }

    public static transient void close(java.io.Closeable[]) throws java.io.IOException
    {
        java.lang.Throwable $r6, r7;
        java.lang.Error $r2;
        java.io.IOException $r4;
        java.lang.RuntimeException $r1, $r3;
        java.io.Closeable r5;
        java.io.Closeable[] r0;
        int i0, i1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.io.Closeable[];

        r7 = null;

        i0 = lengthof r0;

        i1 = 0;

     label01:
        if i1 >= i0 goto label06;

        r5 = r0[i1];

     label02:
        if r5 == null goto label03;

        interfaceinvoke r5.<java.io.Closeable: void close()>();

     label03:
        goto label05;

     label04:
        $r6 := @caughtexception;

        staticinvoke <org.apache.lucene.util.IOUtils: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>(r7, $r6);

        if r7 != null goto label05;

        r7 = $r6;

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        if r7 == null goto label10;

        $z0 = r7 instanceof java.io.IOException;

        if $z0 == 0 goto label07;

        $r4 = (java.io.IOException) r7;

        throw $r4;

     label07:
        $z1 = r7 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label08;

        $r3 = (java.lang.RuntimeException) r7;

        throw $r3;

     label08:
        $z2 = r7 instanceof java.lang.Error;

        if $z2 == 0 goto label09;

        $r2 = (java.lang.Error) r7;

        throw $r2;

     label09:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r7);

        throw $r1;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
    }

    public static void close(java.lang.Iterable) throws java.io.IOException
    {
        java.lang.Throwable $r8, r9;
        java.util.Iterator $r1;
        java.lang.Error $r3;
        java.io.IOException $r5;
        java.lang.RuntimeException $r2, $r4;
        java.lang.Iterable r0;
        java.io.Closeable r7;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Iterable;

        r9 = null;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r6 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.io.Closeable) $r6;

     label02:
        if r7 == null goto label03;

        interfaceinvoke r7.<java.io.Closeable: void close()>();

     label03:
        goto label05;

     label04:
        $r8 := @caughtexception;

        staticinvoke <org.apache.lucene.util.IOUtils: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>(r9, $r8);

        if r9 != null goto label05;

        r9 = $r8;

     label05:
        goto label01;

     label06:
        if r9 == null goto label10;

        $z1 = r9 instanceof java.io.IOException;

        if $z1 == 0 goto label07;

        $r5 = (java.io.IOException) r9;

        throw $r5;

     label07:
        $z2 = r9 instanceof java.lang.RuntimeException;

        if $z2 == 0 goto label08;

        $r4 = (java.lang.RuntimeException) r9;

        throw $r4;

     label08:
        $z3 = r9 instanceof java.lang.Error;

        if $z3 == 0 goto label09;

        $r3 = (java.lang.Error) r9;

        throw $r3;

     label09:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r9);

        throw $r2;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
    }

    public static transient void closeWhileHandlingException(java.io.Closeable[])
    {
        java.lang.Throwable $r2;
        java.io.Closeable r1;
        java.io.Closeable[] r0;
        int i0, i1;

        r0 := @parameter0: java.io.Closeable[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r1 = r0[i1];

     label2:
        if r1 == null goto label3;

        interfaceinvoke r1.<java.io.Closeable: void close()>();

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void closeWhileHandlingException(java.lang.Iterable)
    {
        java.lang.Throwable $r4;
        java.util.Iterator $r1;
        java.io.Closeable r3;
        java.lang.Object $r2;
        java.lang.Iterable r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.io.Closeable) $r2;

     label2:
        if r3 == null goto label3;

        interfaceinvoke r3.<java.io.Closeable: void close()>();

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private static final void addSuppressed(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable r1, r2;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r0, $r4;
        java.lang.Exception $r5;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.Throwable;

        $r0 = <org.apache.lucene.util.IOUtils: java.lang.reflect.Method SUPPRESS_METHOD>;

        if $r0 == null goto label4;

        if r1 == null goto label4;

        if r2 == null goto label4;

     label1:
        $r4 = <org.apache.lucene.util.IOUtils: java.lang.reflect.Method SUPPRESS_METHOD>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r2;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.io.Reader getDecodingReader(java.io.InputStream, java.nio.charset.Charset)
    {
        java.nio.charset.CharsetDecoder $r1, $r3, $r5;
        java.io.InputStreamReader $r7;
        java.nio.charset.Charset r0;
        java.nio.charset.CodingErrorAction $r2, $r4;
        java.io.BufferedReader $r6;
        java.io.InputStream r8;

        r8 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.nio.charset.Charset;

        $r1 = virtualinvoke r0.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r2 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        $r3 = virtualinvoke $r1.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r2);

        $r4 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        $r5 = virtualinvoke $r3.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r4);

        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.CharsetDecoder)>(r8, $r5);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        return $r6;
    }

    public static java.io.Reader getDecodingReader(java.io.File, java.nio.charset.Charset) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.io.FileInputStream $r0, r7;
        java.io.Reader $r3;
        java.io.File r1;
        java.nio.charset.Charset r2;
        java.io.Closeable[] $r4, $r6;
        boolean z0;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.nio.charset.Charset;

        r7 = null;

        z0 = 0;

     label1:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r7 = $r0;

        $r3 = staticinvoke <org.apache.lucene.util.IOUtils: java.io.Reader getDecodingReader(java.io.InputStream,java.nio.charset.Charset)>($r0, r2);

        z0 = 1;

     label2:
        if 1 != 0 goto label3;

        $r4 = newarray (java.io.Closeable)[1];

        $r4[0] = $r0;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r4);

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

     label5:
        if 0 != 0 goto label6;

        $r6 = newarray (java.io.Closeable)[1];

        $r6[0] = r7;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r6);

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static java.io.Reader getDecodingReader(java.lang.Class, java.lang.String, java.nio.charset.Charset) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        java.io.Reader $r4;
        java.nio.charset.Charset r3;
        java.io.Closeable[] $r5, $r7;
        java.lang.Class r0;
        java.lang.String r1;
        java.io.InputStream $r2, r8;
        boolean z0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.nio.charset.Charset;

        r8 = null;

        z0 = 0;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        r8 = $r2;

        $r4 = staticinvoke <org.apache.lucene.util.IOUtils: java.io.Reader getDecodingReader(java.io.InputStream,java.nio.charset.Charset)>($r2, r3);

        z0 = 1;

     label2:
        if 1 != 0 goto label3;

        $r5 = newarray (java.io.Closeable)[1];

        $r5[0] = $r2;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r5);

     label3:
        return $r4;

     label4:
        $r6 := @caughtexception;

     label5:
        if 0 != 0 goto label6;

        $r7 = newarray (java.io.Closeable)[1];

        $r7[0] = r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r7);

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static transient void deleteFilesIgnoringExceptions(org.apache.lucene.store.Directory, java.lang.String[])
    {
        java.lang.Throwable $r3;
        org.apache.lucene.store.Directory r2;
        int i0, i1;
        java.lang.String[] r0;
        java.lang.String r1;

        r2 := @parameter0: org.apache.lucene.store.Directory;

        r0 := @parameter1: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r1 = r0[i1];

     label2:
        virtualinvoke r2.<org.apache.lucene.store.Directory: void deleteFile(java.lang.String)>(r1);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void copy(java.io.File, java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        byte[] r4;
        java.io.FileOutputStream $r2, r9;
        java.io.FileInputStream $r0, r8;
        java.io.File r1, r3;
        int $i0;
        java.io.Closeable[] $r5, $r7;

        r1 := @parameter0: java.io.File;

        r3 := @parameter1: java.io.File;

        r8 = null;

        r9 = null;

     label1:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r8 = $r0;

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        r9 = $r2;

        r4 = newarray (byte)[8192];

     label2:
        $i0 = virtualinvoke $r0.<java.io.FileInputStream: int read(byte[])>(r4);

        if $i0 <= 0 goto label3;

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[],int,int)>(r4, 0, $i0);

        goto label2;

     label3:
        $r5 = newarray (java.io.Closeable)[2];

        $r5[0] = $r0;

        $r5[1] = $r2;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r5);

        goto label6;

     label4:
        $r6 := @caughtexception;

     label5:
        $r7 = newarray (java.io.Closeable)[2];

        $r7[0] = r8;

        $r7[1] = r9;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r7);

        throw $r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method r4;
        java.lang.Exception $r3;

        <org.apache.lucene.util.IOUtils: java.lang.String UTF_8> = "UTF-8";

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <org.apache.lucene.util.IOUtils: java.nio.charset.Charset CHARSET_UTF_8> = $r0;

     label1:
        $r2 = class "Ljava/lang/Throwable;";

        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = class "Ljava/lang/Throwable;";

        r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addSuppressed", $r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r4 = null;

     label4:
        <org.apache.lucene.util.IOUtils: java.lang.reflect.Method SUPPRESS_METHOD> = r4;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
