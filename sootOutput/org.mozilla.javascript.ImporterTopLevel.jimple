public class org.mozilla.javascript.ImporterTopLevel extends org.mozilla.javascript.IdScriptableObject
{
    static final long serialVersionUID;
    private static final java.lang.Object IMPORTER_TAG;
    private static final int Id_constructor;
    private static final int Id_importClass;
    private static final int Id_importPackage;
    private static final int MAX_PROTOTYPE_ID;
    private org.mozilla.javascript.ObjArray importedPackages;
    private boolean topScopeFlag;

    public void <init>()
    {
        org.mozilla.javascript.ImporterTopLevel r0;
        org.mozilla.javascript.ObjArray $r1;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        $r1 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r1.<org.mozilla.javascript.ObjArray: void <init>()>();

        r0.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ObjArray importedPackages> = $r1;

        return;
    }

    public void <init>(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.ImporterTopLevel r0;
        org.mozilla.javascript.Context r1;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        r1 := @parameter0: org.mozilla.javascript.Context;

        specialinvoke r0.<org.mozilla.javascript.ImporterTopLevel: void <init>(org.mozilla.javascript.Context,boolean)>(r1, 0);

        return;
    }

    public void <init>(org.mozilla.javascript.Context, boolean)
    {
        org.mozilla.javascript.ImporterTopLevel r0;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.ObjArray $r1;
        boolean z0;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        r2 := @parameter0: org.mozilla.javascript.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        $r1 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r1.<org.mozilla.javascript.ObjArray: void <init>()>();

        r0.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ObjArray importedPackages> = $r1;

        virtualinvoke r0.<org.mozilla.javascript.ImporterTopLevel: void initStandardObjects(org.mozilla.javascript.Context,boolean)>(r2, z0);

        return;
    }

    public java.lang.String getClassName()
    {
        java.lang.String $r1;
        org.mozilla.javascript.ImporterTopLevel r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        $z0 = r0.<org.mozilla.javascript.ImporterTopLevel: boolean topScopeFlag>;

        if $z0 == 0 goto label1;

        $r1 = "global";

        goto label2;

     label1:
        $r1 = "JavaImporter";

     label2:
        return $r1;
    }

    public static void init(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.ImporterTopLevel $r0;
        org.mozilla.javascript.Context r2;
        boolean z0;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        z0 := @parameter2: boolean;

        $r0 = new org.mozilla.javascript.ImporterTopLevel;

        specialinvoke $r0.<org.mozilla.javascript.ImporterTopLevel: void <init>()>();

        virtualinvoke $r0.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean)>(3, r1, z0);

        return;
    }

    public void initStandardObjects(org.mozilla.javascript.Context, boolean)
    {
        org.mozilla.javascript.IdFunctionObject $r2;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.ImporterTopLevel r1;
        boolean z0;

        r1 := @this: org.mozilla.javascript.ImporterTopLevel;

        r0 := @parameter0: org.mozilla.javascript.Context;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ScriptableObject initStandardObjects(org.mozilla.javascript.ScriptableObject,boolean)>(r1, z0);

        r1.<org.mozilla.javascript.ImporterTopLevel: boolean topScopeFlag> = 1;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean)>(3, r1, 0);

        if z0 == 0 goto label1;

        virtualinvoke $r2.<org.mozilla.javascript.IdFunctionObject: void sealObject()>();

     label1:
        virtualinvoke r1.<org.mozilla.javascript.ImporterTopLevel: void delete(java.lang.String)>("constructor");

        return;
    }

    public boolean has(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2;
        org.mozilla.javascript.ImporterTopLevel r0;
        java.lang.Object $r3, $r4;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        $z0 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: boolean has(java.lang.String,org.mozilla.javascript.Scriptable)>(r1, r2);

        if $z0 != 0 goto label1;

        $r3 = specialinvoke r0.<org.mozilla.javascript.ImporterTopLevel: java.lang.Object getPackageProperty(java.lang.String,org.mozilla.javascript.Scriptable)>(r1, r2);

        $r4 = <org.mozilla.javascript.ImporterTopLevel: java.lang.Object NOT_FOUND>;

        if $r3 == $r4 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.Object get(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2;
        org.mozilla.javascript.ImporterTopLevel r0;
        java.lang.Object $r3, $r4, $r5;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        $r3 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>(r1, r2);

        $r4 = <org.mozilla.javascript.ImporterTopLevel: java.lang.Object NOT_FOUND>;

        if $r3 == $r4 goto label1;

        return $r3;

     label1:
        $r5 = specialinvoke r0.<org.mozilla.javascript.ImporterTopLevel: java.lang.Object getPackageProperty(java.lang.String,org.mozilla.javascript.Scriptable)>(r1, r2);

        return $r5;
    }

    private java.lang.Object getPackageProperty(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        java.lang.Throwable $r12;
        java.lang.Object[] $r3;
        org.mozilla.javascript.NativeJavaPackage r14;
        org.mozilla.javascript.ImporterTopLevel r0;
        int $i0, i1;
        java.lang.String r5, $r9, $r10;
        boolean $z0;
        org.mozilla.javascript.EvaluatorException $r11;
        org.mozilla.javascript.Scriptable r6;
        org.mozilla.javascript.ObjArray $r1, $r2;
        java.lang.Object $r4, $r7, $r8, r13;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: org.mozilla.javascript.Scriptable;

        r13 = <org.mozilla.javascript.ImporterTopLevel: java.lang.Object NOT_FOUND>;

        $r1 = r0.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ObjArray importedPackages>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ObjArray importedPackages>;

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.ObjArray: java.lang.Object[] toArray()>();

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r12;

     label5:
        i1 = 0;

     label6:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label9;

        $r4 = $r3[i1];

        r14 = (org.mozilla.javascript.NativeJavaPackage) $r4;

        $r7 = virtualinvoke r14.<org.mozilla.javascript.NativeJavaPackage: java.lang.Object getPkgProperty(java.lang.String,org.mozilla.javascript.Scriptable,boolean)>(r5, r6, 0);

        if $r7 == null goto label8;

        $z0 = $r7 instanceof org.mozilla.javascript.NativeJavaPackage;

        if $z0 != 0 goto label8;

        $r8 = <org.mozilla.javascript.ImporterTopLevel: java.lang.Object NOT_FOUND>;

        if r13 != $r8 goto label7;

        r13 = $r7;

        goto label8;

     label7:
        $r9 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r11 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError2(java.lang.String,java.lang.Object,java.lang.Object)>("msg.ambig.import", $r9, $r10);

        throw $r11;

     label8:
        i1 = i1 + 1;

        goto label6;

     label9:
        return r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void importPackage(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.lang.Object[] r1;
        org.mozilla.javascript.Scriptable r3;
        org.mozilla.javascript.ImporterTopLevel r0;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.Function r4;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: java.lang.Object[];

        r4 := @parameter3: org.mozilla.javascript.Function;

        specialinvoke r0.<org.mozilla.javascript.ImporterTopLevel: java.lang.Object js_importPackage(java.lang.Object[])>(r1);

        return;
    }

    private java.lang.Object js_construct(org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r1;
        org.mozilla.javascript.EvaluatorException $r6;
        org.mozilla.javascript.NativeJavaPackage $r7;
        org.mozilla.javascript.NativeJavaClass $r8;
        org.mozilla.javascript.Scriptable r2;
        org.mozilla.javascript.ImporterTopLevel $r0, r3;
        int $i0, i1;
        java.lang.Object r4;
        java.lang.String $r5;
        boolean $z0, $z1;

        r3 := @this: org.mozilla.javascript.ImporterTopLevel;

        r2 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: java.lang.Object[];

        $r0 = new org.mozilla.javascript.ImporterTopLevel;

        specialinvoke $r0.<org.mozilla.javascript.ImporterTopLevel: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 == $i0 goto label5;

        r4 = r1[i1];

        $z0 = r4 instanceof org.mozilla.javascript.NativeJavaClass;

        if $z0 == 0 goto label2;

        $r8 = (org.mozilla.javascript.NativeJavaClass) r4;

        specialinvoke $r0.<org.mozilla.javascript.ImporterTopLevel: void importClass(org.mozilla.javascript.NativeJavaClass)>($r8);

        goto label4;

     label2:
        $z1 = r4 instanceof org.mozilla.javascript.NativeJavaPackage;

        if $z1 == 0 goto label3;

        $r7 = (org.mozilla.javascript.NativeJavaPackage) r4;

        specialinvoke $r0.<org.mozilla.javascript.ImporterTopLevel: void importPackage(org.mozilla.javascript.NativeJavaPackage)>($r7);

        goto label4;

     label3:
        $r5 = staticinvoke <org.mozilla.javascript.Context: java.lang.String toString(java.lang.Object)>(r4);

        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.not.class.not.pkg", $r5);

        throw $r6;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        virtualinvoke $r0.<org.mozilla.javascript.ImporterTopLevel: void setParentScope(org.mozilla.javascript.Scriptable)>(r2);

        virtualinvoke $r0.<org.mozilla.javascript.ImporterTopLevel: void setPrototype(org.mozilla.javascript.Scriptable)>(r3);

        return $r0;
    }

    private java.lang.Object js_importClass(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.mozilla.javascript.EvaluatorException $r6;
        org.mozilla.javascript.NativeJavaClass $r4;
        org.mozilla.javascript.ImporterTopLevel r3;
        int $i0, i1;
        java.lang.Object $r1, r2;
        java.lang.String $r5;
        boolean $z0;

        r3 := @this: org.mozilla.javascript.ImporterTopLevel;

        r0 := @parameter0: java.lang.Object[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 == $i0 goto label3;

        r2 = r0[i1];

        $z0 = r2 instanceof org.mozilla.javascript.NativeJavaClass;

        if $z0 != 0 goto label2;

        $r5 = staticinvoke <org.mozilla.javascript.Context: java.lang.String toString(java.lang.Object)>(r2);

        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.not.class", $r5);

        throw $r6;

     label2:
        $r4 = (org.mozilla.javascript.NativeJavaClass) r2;

        specialinvoke r3.<org.mozilla.javascript.ImporterTopLevel: void importClass(org.mozilla.javascript.NativeJavaClass)>($r4);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r1;
    }

    private java.lang.Object js_importPackage(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.mozilla.javascript.EvaluatorException $r6;
        org.mozilla.javascript.NativeJavaPackage $r4;
        org.mozilla.javascript.ImporterTopLevel r3;
        int $i0, i1;
        java.lang.Object $r1, r2;
        java.lang.String $r5;
        boolean $z0;

        r3 := @this: org.mozilla.javascript.ImporterTopLevel;

        r0 := @parameter0: java.lang.Object[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 == $i0 goto label3;

        r2 = r0[i1];

        $z0 = r2 instanceof org.mozilla.javascript.NativeJavaPackage;

        if $z0 != 0 goto label2;

        $r5 = staticinvoke <org.mozilla.javascript.Context: java.lang.String toString(java.lang.Object)>(r2);

        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.not.pkg", $r5);

        throw $r6;

     label2:
        $r4 = (org.mozilla.javascript.NativeJavaPackage) r2;

        specialinvoke r3.<org.mozilla.javascript.ImporterTopLevel: void importPackage(org.mozilla.javascript.NativeJavaPackage)>($r4);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r1;
    }

    private void importPackage(org.mozilla.javascript.NativeJavaPackage)
    {
        java.lang.Throwable $r7;
        org.mozilla.javascript.NativeJavaPackage r0;
        org.mozilla.javascript.ImporterTopLevel r1;
        org.mozilla.javascript.ObjArray $r2, $r3, $r4, $r5;
        int $i0, i1;
        java.lang.Object $r6;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.ImporterTopLevel;

        r0 := @parameter0: org.mozilla.javascript.NativeJavaPackage;

        if r0 != null goto label01;

        return;

     label01:
        $r2 = r1.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ObjArray importedPackages>;

        entermonitor $r2;

     label02:
        i1 = 0;

     label03:
        $r3 = r1.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ObjArray importedPackages>;

        $i0 = virtualinvoke $r3.<org.mozilla.javascript.ObjArray: int size()>();

        if i1 == $i0 goto label06;

        $r5 = r1.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ObjArray importedPackages>;

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.ObjArray: java.lang.Object get(int)>(i1);

        $z0 = virtualinvoke r0.<org.mozilla.javascript.NativeJavaPackage: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label05;

        exitmonitor $r2;

     label04:
        return;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r4 = r1.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ObjArray importedPackages>;

        virtualinvoke $r4.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>(r0);

        exitmonitor $r2;

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label09:
        throw $r7;

     label10:
        return;

        catch java.lang.Throwable from label02 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void importClass(org.mozilla.javascript.NativeJavaClass)
    {
        org.mozilla.javascript.EvaluatorException $r7;
        org.mozilla.javascript.NativeJavaClass r0;
        org.mozilla.javascript.ImporterTopLevel r4;
        int $i0, $i1;
        java.lang.Class $r1;
        java.lang.Object $r5, $r6;
        java.lang.String $r2, $r3;

        r4 := @this: org.mozilla.javascript.ImporterTopLevel;

        r0 := @parameter0: org.mozilla.javascript.NativeJavaClass;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.NativeJavaClass: java.lang.Class getClassObject()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r5 = virtualinvoke r4.<org.mozilla.javascript.ImporterTopLevel: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>($r3, r4);

        $r6 = <org.mozilla.javascript.ImporterTopLevel: java.lang.Object NOT_FOUND>;

        if $r5 == $r6 goto label1;

        if $r5 == r0 goto label1;

        $r7 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.prop.defined", $r3);

        throw $r7;

     label1:
        virtualinvoke r4.<org.mozilla.javascript.ImporterTopLevel: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>($r3, r4, r0);

        return;
    }

    protected void initPrototypeId(int)
    {
        org.mozilla.javascript.ImporterTopLevel r0;
        byte b1;
        int i0;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        b1 = 0;

        r3 = "constructor";

        goto label5;

     label2:
        b1 = 1;

        r3 = "importClass";

        goto label5;

     label3:
        b1 = 1;

        r3 = "importPackage";

        goto label5;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label5:
        $r4 = <org.mozilla.javascript.ImporterTopLevel: java.lang.Object IMPORTER_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.ImporterTopLevel: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r4, i0, r3, b1);

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r5;
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.ImporterTopLevel r2, $r4, $r7;
        int $i0;
        java.lang.String $r12;
        boolean $z0;
        org.mozilla.javascript.Context r13;
        java.lang.IllegalArgumentException $r11;
        org.mozilla.javascript.Scriptable r3, r9;
        java.lang.Object $r1, $r6, $r8, $r10, $r14;

        r2 := @this: org.mozilla.javascript.ImporterTopLevel;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r13 := @parameter1: org.mozilla.javascript.Context;

        r9 := @parameter2: org.mozilla.javascript.Scriptable;

        r3 := @parameter3: org.mozilla.javascript.Scriptable;

        r5 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.ImporterTopLevel: java.lang.Object IMPORTER_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r14 = specialinvoke r2.<org.mozilla.javascript.IdScriptableObject: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r13, r9, r3, r5);

        return $r14;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        $r10 = specialinvoke r2.<org.mozilla.javascript.ImporterTopLevel: java.lang.Object js_construct(org.mozilla.javascript.Scriptable,java.lang.Object[])>(r9, r5);

        return $r10;

     label3:
        $r7 = specialinvoke r2.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ImporterTopLevel realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject)>(r3, r0);

        $r8 = specialinvoke $r7.<org.mozilla.javascript.ImporterTopLevel: java.lang.Object js_importClass(java.lang.Object[])>(r5);

        return $r8;

     label4:
        $r4 = specialinvoke r2.<org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.ImporterTopLevel realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject)>(r3, r0);

        $r6 = specialinvoke $r4.<org.mozilla.javascript.ImporterTopLevel: java.lang.Object js_importPackage(java.lang.Object[])>(r5);

        return $r6;

     label5:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    private org.mozilla.javascript.ImporterTopLevel realThis(org.mozilla.javascript.Scriptable, org.mozilla.javascript.IdFunctionObject)
    {
        org.mozilla.javascript.EcmaError $r4;
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.IdFunctionObject r3;
        org.mozilla.javascript.ImporterTopLevel r0, $r2;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.ImporterTopLevel;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r3 := @parameter1: org.mozilla.javascript.IdFunctionObject;

        $z0 = r0.<org.mozilla.javascript.ImporterTopLevel: boolean topScopeFlag>;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $z1 = r1 instanceof org.mozilla.javascript.ImporterTopLevel;

        if $z1 != 0 goto label2;

        $r4 = staticinvoke <org.mozilla.javascript.ImporterTopLevel: org.mozilla.javascript.EcmaError incompatibleCallError(org.mozilla.javascript.IdFunctionObject)>(r3);

        throw $r4;

     label2:
        $r2 = (org.mozilla.javascript.ImporterTopLevel) r1;

        return $r2;
    }

    protected int findPrototypeId(java.lang.String)
    {
        char $c1;
        org.mozilla.javascript.ImporterTopLevel r1;
        byte b2;
        int $i0, $i3, $i4;
        java.lang.String r0, r2, r3, r4, r5;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.ImporterTopLevel;

        r0 := @parameter0: java.lang.String;

        b2 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 11 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c1;

        if $i3 != 99 goto label1;

        r2 = "constructor";

        r5 = "constructor";

        r4 = "constructor";

        r3 = "constructor";

        b2 = 1;

        goto label3;

     label1:
        $i4 = (int) $c1;

        if $i4 != 105 goto label3;

        r2 = "importClass";

        r5 = "importClass";

        r4 = "importClass";

        r3 = "importClass";

        b2 = 2;

        goto label3;

     label2:
        if $i0 != 13 goto label3;

        r2 = "importPackage";

        r5 = "importPackage";

        r4 = "importPackage";

        r3 = "importPackage";

        b2 = 3;

     label3:
        if r5 == null goto label4;

        if r3 == r0 goto label4;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label4;

        b2 = 0;

     label4:
        return b2;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.ImporterTopLevel: int MAX_PROTOTYPE_ID> = 3;

        <org.mozilla.javascript.ImporterTopLevel: int Id_importPackage> = 3;

        <org.mozilla.javascript.ImporterTopLevel: int Id_importClass> = 2;

        <org.mozilla.javascript.ImporterTopLevel: int Id_constructor> = 1;

        <org.mozilla.javascript.ImporterTopLevel: long serialVersionUID> = -9095380847465315412L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.ImporterTopLevel: java.lang.Object IMPORTER_TAG> = $r0;

        return;
    }
}
