public class org.mortbay.jetty.servlet.FilterHolder extends org.mortbay.jetty.servlet.Holder
{
    private transient javax.servlet.Filter _filter;
    private transient org.mortbay.jetty.servlet.FilterHolder$Config _config;
    static java.lang.Class class$javax$servlet$Filter;

    public static int dispatch(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        java.lang.String r0, $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        $r1 = "request";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = "forward";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $r3 = "include";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 == 0 goto label3;

        return 4;

     label3:
        $r4 = "error";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z3 == 0 goto label4;

        return 8;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0);

        throw $r5;
    }

    public void <init>()
    {
        org.mortbay.jetty.servlet.FilterHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.FilterHolder;

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void <init>()>();

        return;
    }

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.mortbay.jetty.servlet.FilterHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.FilterHolder;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void <init>(java.lang.Class)>(r1);

        return;
    }

    public void <init>(javax.servlet.Filter)
    {
        javax.servlet.Filter r1;
        org.mortbay.jetty.servlet.FilterHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.FilterHolder;

        r1 := @parameter0: javax.servlet.Filter;

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void <init>()>();

        virtualinvoke r0.<org.mortbay.jetty.servlet.FilterHolder: void setFilter(javax.servlet.Filter)>(r1);

        return;
    }

    public void doStart() throws java.lang.Exception
    {
        java.lang.IllegalStateException $r17;
        org.mortbay.jetty.servlet.ServletHandler $r4;
        java.lang.StringBuffer $r12, $r14, $r15;
        javax.servlet.Filter $r3, $r5, $r6, $r9, $r11;
        java.lang.String $r16;
        boolean $z0;
        org.mortbay.jetty.servlet.FilterHolder r0;
        java.lang.Class $r1, $r2, $r13, $r18;
        java.lang.Object $r10;
        org.mortbay.jetty.servlet.FilterHolder$Config $r7, $r8;

        r0 := @this: org.mortbay.jetty.servlet.FilterHolder;

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void doStart()>();

        $r1 = <org.mortbay.jetty.servlet.FilterHolder: java.lang.Class class$javax$servlet$Filter>;

        if $r1 != null goto label1;

        $r18 = staticinvoke <org.mortbay.jetty.servlet.FilterHolder: java.lang.Class class$(java.lang.String)>("javax.servlet.Filter");

        <org.mortbay.jetty.servlet.FilterHolder: java.lang.Class class$javax$servlet$Filter> = $r18;

        goto label2;

     label1:
        $r18 = <org.mortbay.jetty.servlet.FilterHolder: java.lang.Class class$javax$servlet$Filter>;

     label2:
        $r2 = r0.<org.mortbay.jetty.servlet.FilterHolder: java.lang.Class _class>;

        $z0 = virtualinvoke $r18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 != 0 goto label3;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = r0.<org.mortbay.jetty.servlet.FilterHolder: java.lang.Class _class>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a javax.servlet.Filter");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void stop()>();

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r17;

     label3:
        $r3 = r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter>;

        if $r3 != null goto label4;

        $r10 = virtualinvoke r0.<org.mortbay.jetty.servlet.FilterHolder: java.lang.Object newInstance()>();

        $r11 = (javax.servlet.Filter) $r10;

        r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter> = $r11;

     label4:
        $r4 = virtualinvoke r0.<org.mortbay.jetty.servlet.FilterHolder: org.mortbay.jetty.servlet.ServletHandler getServletHandler()>();

        $r5 = r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter>;

        $r6 = virtualinvoke $r4.<org.mortbay.jetty.servlet.ServletHandler: javax.servlet.Filter customizeFilter(javax.servlet.Filter)>($r5);

        r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter> = $r6;

        $r7 = new org.mortbay.jetty.servlet.FilterHolder$Config;

        specialinvoke $r7.<org.mortbay.jetty.servlet.FilterHolder$Config: void <init>(org.mortbay.jetty.servlet.FilterHolder)>(r0);

        r0.<org.mortbay.jetty.servlet.FilterHolder: org.mortbay.jetty.servlet.FilterHolder$Config _config> = $r7;

        $r9 = r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter>;

        $r8 = r0.<org.mortbay.jetty.servlet.FilterHolder: org.mortbay.jetty.servlet.FilterHolder$Config _config>;

        interfaceinvoke $r9.<javax.servlet.Filter: void init(javax.servlet.FilterConfig)>($r8);

        return;
    }

    public void doStop()
    {
        org.mortbay.jetty.servlet.FilterHolder r0;
        javax.servlet.Filter $r1, $r2;
        java.lang.Exception $r3;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.servlet.FilterHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter>;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter>;

        virtualinvoke r0.<org.mortbay.jetty.servlet.FilterHolder: void destroyInstance(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r3);

     label4:
        $z0 = r0.<org.mortbay.jetty.servlet.FilterHolder: boolean _extInstance>;

        if $z0 != 0 goto label5;

        r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter> = null;

     label5:
        r0.<org.mortbay.jetty.servlet.FilterHolder: org.mortbay.jetty.servlet.FilterHolder$Config _config> = null;

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void doStop()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void destroyInstance(java.lang.Object) throws java.lang.Exception
    {
        org.mortbay.jetty.servlet.FilterHolder r2;
        java.lang.Object r0;
        javax.servlet.Filter r1;
        org.mortbay.jetty.servlet.ServletHandler $r3;

        r2 := @this: org.mortbay.jetty.servlet.FilterHolder;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return;

     label1:
        r1 = (javax.servlet.Filter) r0;

        interfaceinvoke r1.<javax.servlet.Filter: void destroy()>();

        $r3 = virtualinvoke r2.<org.mortbay.jetty.servlet.FilterHolder: org.mortbay.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r3.<org.mortbay.jetty.servlet.ServletHandler: javax.servlet.Filter customizeFilterDestroy(javax.servlet.Filter)>(r1);

        return;
    }

    public synchronized void setFilter(javax.servlet.Filter)
    {
        org.mortbay.jetty.servlet.FilterHolder r0;
        javax.servlet.Filter r1;
        java.lang.Class $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: org.mortbay.jetty.servlet.FilterHolder;

        r1 := @parameter0: javax.servlet.Filter;

        r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter> = r1;

        r0.<org.mortbay.jetty.servlet.FilterHolder: boolean _extInstance> = 1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r0.<org.mortbay.jetty.servlet.FilterHolder: void setHeldClass(java.lang.Class)>($r2);

        $r3 = virtualinvoke r0.<org.mortbay.jetty.servlet.FilterHolder: java.lang.String getName()>();

        if $r3 != null goto label1;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.mortbay.jetty.servlet.FilterHolder: void setName(java.lang.String)>($r5);

     label1:
        return;
    }

    public javax.servlet.Filter getFilter()
    {
        javax.servlet.Filter $r1;
        org.mortbay.jetty.servlet.FilterHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.FilterHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.FilterHolder: javax.servlet.Filter _filter>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.mortbay.jetty.servlet.FilterHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.FilterHolder;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.servlet.FilterHolder: java.lang.String getName()>();

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
