public class org.apache.cxf.common.util.ProxyHelper extends java.lang.Object
{
    static final org.apache.cxf.common.util.ProxyHelper HELPER;

    protected void <init>()
    {
        org.apache.cxf.common.util.ProxyHelper r0;

        r0 := @this: org.apache.cxf.common.util.ProxyHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected java.lang.Object getProxyInternal(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)
    {
        org.apache.cxf.common.util.ProxyHelper r0;
        java.lang.Class[] r2;
        java.lang.Object $r5;
        java.lang.ClassLoader r1, $r3;
        java.lang.reflect.InvocationHandler r4;

        r0 := @this: org.apache.cxf.common.util.ProxyHelper;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.Class[];

        r4 := @parameter2: java.lang.reflect.InvocationHandler;

        $r3 = specialinvoke r0.<org.apache.cxf.common.util.ProxyHelper: java.lang.ClassLoader getClassLoaderForInterfaces(java.lang.ClassLoader,java.lang.Class[])>(r1, r2);

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r3, r2, r4);

        return $r5;
    }

    private java.lang.ClassLoader getClassLoaderForInterfaces(java.lang.ClassLoader, java.lang.Class[])
    {
        org.apache.cxf.common.util.ProxyHelper r0;
        java.lang.Class[] r2;
        org.apache.cxf.common.util.ProxyClassLoader $r3;
        int i0, i1;
        java.lang.Class r4;
        java.lang.ClassLoader r1, $r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.ProxyHelper;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.Class[];

        $z0 = specialinvoke r0.<org.apache.cxf.common.util.ProxyHelper: boolean canSeeAllInterfaces(java.lang.ClassLoader,java.lang.Class[])>(r1, r2);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r3 = new org.apache.cxf.common.util.ProxyClassLoader;

        specialinvoke $r3.<org.apache.cxf.common.util.ProxyClassLoader: void <init>(java.lang.Class[])>(r2);

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r4 = r2[i1];

        $r5 = virtualinvoke r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r3.<org.apache.cxf.common.util.ProxyClassLoader: void addLoader(java.lang.ClassLoader)>($r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r3;
    }

    private boolean canSeeAllInterfaces(java.lang.ClassLoader, java.lang.Class[])
    {
        org.apache.cxf.common.util.ProxyHelper r7;
        java.lang.Class[] r0;
        int i0, i1;
        java.lang.Class r1, $r4;
        java.lang.ClassNotFoundException $r5;
        java.lang.String $r2;
        java.lang.ClassLoader r3;
        java.lang.NoClassDefFoundError $r6;

        r7 := @this: org.apache.cxf.common.util.ProxyHelper;

        r3 := @parameter0: java.lang.ClassLoader;

        r0 := @parameter1: java.lang.Class[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        r1 = r0[i1];

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

     label2:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r2, 1, r3);

        if $r4 == r1 goto label4;

     label3:
        return 0;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        return 0;

     label6:
        $r5 := @caughtexception;

        return 0;

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return 1;

        catch java.lang.NoClassDefFoundError from label2 to label3 with label5;
        catch java.lang.ClassNotFoundException from label2 to label3 with label6;
    }

    public static java.lang.Object getProxy(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)
    {
        org.apache.cxf.common.util.ProxyHelper $r3;
        java.lang.Class[] r1;
        java.lang.Object $r4;
        java.lang.ClassLoader r0;
        java.lang.reflect.InvocationHandler r2;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Class[];

        r2 := @parameter2: java.lang.reflect.InvocationHandler;

        $r3 = <org.apache.cxf.common.util.ProxyHelper: org.apache.cxf.common.util.ProxyHelper HELPER>;

        $r4 = virtualinvoke $r3.<org.apache.cxf.common.util.ProxyHelper: java.lang.Object getProxyInternal(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(r0, r1, r2);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r1;
        org.apache.cxf.common.util.ProxyHelper $r2, r3;
        org.apache.cxf.common.util.CglibProxyHelper $r0;

     label1:
        $r0 = new org.apache.cxf.common.util.CglibProxyHelper;

        specialinvoke $r0.<org.apache.cxf.common.util.CglibProxyHelper: void <init>()>();

        r3 = $r0;

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new org.apache.cxf.common.util.ProxyHelper;

        specialinvoke $r2.<org.apache.cxf.common.util.ProxyHelper: void <init>()>();

        r3 = $r2;

     label4:
        <org.apache.cxf.common.util.ProxyHelper: org.apache.cxf.common.util.ProxyHelper HELPER> = r3;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
