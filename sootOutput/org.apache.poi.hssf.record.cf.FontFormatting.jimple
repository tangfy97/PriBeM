public final class org.apache.poi.hssf.record.cf.FontFormatting extends java.lang.Object
{
    private byte[] _rawData;
    private static final int OFFSET_FONT_NAME;
    private static final int OFFSET_FONT_HEIGHT;
    private static final int OFFSET_FONT_OPTIONS;
    private static final int OFFSET_FONT_WEIGHT;
    private static final int OFFSET_ESCAPEMENT_TYPE;
    private static final int OFFSET_UNDERLINE_TYPE;
    private static final int OFFSET_FONT_COLOR_INDEX;
    private static final int OFFSET_OPTION_FLAGS;
    private static final int OFFSET_ESCAPEMENT_TYPE_MODIFIED;
    private static final int OFFSET_UNDERLINE_TYPE_MODIFIED;
    private static final int OFFSET_FONT_WEIGHT_MODIFIED;
    private static final int OFFSET_NOT_USED1;
    private static final int OFFSET_NOT_USED2;
    private static final int OFFSET_NOT_USED3;
    private static final int OFFSET_FONT_FORMATING_END;
    private static final int RAW_DATA_SIZE;
    public static final int FONT_CELL_HEIGHT_PRESERVED;
    private static final org.apache.poi.util.BitField posture;
    private static final org.apache.poi.util.BitField outline;
    private static final org.apache.poi.util.BitField shadow;
    private static final org.apache.poi.util.BitField cancellation;
    private static final org.apache.poi.util.BitField styleModified;
    private static final org.apache.poi.util.BitField outlineModified;
    private static final org.apache.poi.util.BitField shadowModified;
    private static final org.apache.poi.util.BitField cancellationModified;
    public static final short SS_NONE;
    public static final short SS_SUPER;
    public static final short SS_SUB;
    public static final byte U_NONE;
    public static final byte U_SINGLE;
    public static final byte U_DOUBLE;
    public static final byte U_SINGLE_ACCOUNTING;
    public static final byte U_DOUBLE_ACCOUNTING;
    private static final short FONT_WEIGHT_NORMAL;
    private static final short FONT_WEIGHT_BOLD;

    private void <init>(byte[])
    {
        byte[] r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData> = r1;

        return;
    }

    public void <init>()
    {
        byte[] $r1;
        short $s3;
        int $i1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = newarray (byte)[118];

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void <init>(byte[])>($r1);

        $i1 = (int) -1;

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontHeight(int)>($i1);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setItalic(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontWieghtModified(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setOutline(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setShadow(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setStrikeout(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setEscapementType(short)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setUnderlineType(short)>(0);

        $s3 = (short) -1;

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontColorIndex(short)>($s3);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontStyleModified(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontOutlineModified(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontShadowModified(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontCancellationModified(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setEscapementTypeModified(boolean)>(0);

        virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setUnderlineTypeModified(boolean)>(0);

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setShort(int,int)>(0, 0);

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(104, 1);

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(108, 0);

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(112, 2147483647);

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setShort(int,int)>(116, 1);

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        byte[] $r1, $r2, $r4;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        org.apache.poi.hssf.record.RecordInputStream r3;
        byte $b1;
        int $i0, i2;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        r3 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        $r1 = newarray (byte)[118];

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void <init>(byte[])>($r1);

        i2 = 0;

     label1:
        $r2 = r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label2;

        $r4 = r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData>;

        $b1 = virtualinvoke r3.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        $r4[i2] = $b1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private short getShort(int)
    {
        byte[] $r1;
        short $s1;
        int i0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData>;

        $s1 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r1, i0);

        return $s1;
    }

    private void setShort(int, int)
    {
        byte[] $r1;
        short $s2;
        int i0, i1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData>;

        $s2 = (short) i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r1, i0, $s2);

        return;
    }

    private int getInt(int)
    {
        byte[] $r1;
        int i0, $i1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData>;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, i0);

        return $i1;
    }

    private void setInt(int, int)
    {
        byte[] $r1;
        int i0, i1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, i0, i1);

        return;
    }

    public byte[] getRawRecord()
    {
        byte[] $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData>;

        return $r1;
    }

    public void setFontHeight(int)
    {
        int i0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(64, i0);

        return;
    }

    public int getFontHeight()
    {
        int $i0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(64);

        return $i0;
    }

    private void setFontOption(boolean, org.apache.poi.util.BitField)
    {
        org.apache.poi.util.BitField r1;
        int $i0, $i1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.poi.util.BitField;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(68);

        $i1 = virtualinvoke r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(68, $i1);

        return;
    }

    private boolean getFontOption(org.apache.poi.util.BitField)
    {
        org.apache.poi.util.BitField r1;
        int $i0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        r1 := @parameter0: org.apache.poi.util.BitField;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(68);

        $z0 = virtualinvoke r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setItalic(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField posture>;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontOption(boolean,org.apache.poi.util.BitField)>(z0, $r1);

        return;
    }

    public boolean isItalic()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField posture>;

        $z0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: boolean getFontOption(org.apache.poi.util.BitField)>($r1);

        return $z0;
    }

    public void setOutline(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField outline>;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontOption(boolean,org.apache.poi.util.BitField)>(z0, $r1);

        return;
    }

    public boolean isOutlineOn()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField outline>;

        $z0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: boolean getFontOption(org.apache.poi.util.BitField)>($r1);

        return $z0;
    }

    public void setShadow(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField shadow>;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontOption(boolean,org.apache.poi.util.BitField)>(z0, $r1);

        return;
    }

    public boolean isShadowOn()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField shadow>;

        $z0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: boolean getFontOption(org.apache.poi.util.BitField)>($r1);

        return $z0;
    }

    public void setStrikeout(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField cancellation>;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontOption(boolean,org.apache.poi.util.BitField)>(z0, $r1);

        return;
    }

    public boolean isStruckout()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField cancellation>;

        $z0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: boolean getFontOption(org.apache.poi.util.BitField)>($r1);

        return $z0;
    }

    private void setFontWeight(short)
    {
        short s0, s1;
        int $i2;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        s0 := @parameter0: short;

        s1 = s0;

        $i2 = (int) s0;

        if $i2 >= 100 goto label1;

        s1 = 100;

     label1:
        if s1 <= 1000 goto label2;

        s1 = 1000;

     label2:
        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setShort(int,int)>(72, s1);

        return;
    }

    public void setBold(boolean)
    {
        short $s0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $s0 = 700;

        goto label2;

     label1:
        $s0 = 400;

     label2:
        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setFontWeight(short)>($s0);

        return;
    }

    public short getFontWeight()
    {
        short $s0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $s0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: short getShort(int)>(72);

        return $s0;
    }

    public boolean isBold()
    {
        short $s0;
        int $i1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $s0 = virtualinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: short getFontWeight()>();

        $i1 = (int) $s0;

        if $i1 != 700 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public short getEscapementType()
    {
        short $s0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $s0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: short getShort(int)>(74);

        return $s0;
    }

    public void setEscapementType(short)
    {
        int $i1;
        short s0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        s0 := @parameter0: short;

        $i1 = (int) s0;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setShort(int,int)>(74, $i1);

        return;
    }

    public short getUnderlineType()
    {
        short $s0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $s0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: short getShort(int)>(76);

        return $s0;
    }

    public void setUnderlineType(short)
    {
        int $i1;
        short s0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        s0 := @parameter0: short;

        $i1 = (int) s0;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setShort(int,int)>(76, $i1);

        return;
    }

    public short getFontColorIndex()
    {
        int $i0;
        short $s1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(80);

        $s1 = (short) $i0;

        return $s1;
    }

    public void setFontColorIndex(short)
    {
        int $i1;
        short s0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        s0 := @parameter0: short;

        $i1 = (int) s0;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(80, $i1);

        return;
    }

    private boolean getOptionFlag(org.apache.poi.util.BitField)
    {
        org.apache.poi.util.BitField r1;
        int $i0, $i1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        r1 := @parameter0: org.apache.poi.util.BitField;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(88);

        $i1 = virtualinvoke r1.<org.apache.poi.util.BitField: int getValue(int)>($i0);

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void setOptionFlag(boolean, org.apache.poi.util.BitField)
    {
        org.apache.poi.util.BitField r1;
        byte $b2;
        int $i0, $i1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.poi.util.BitField;

        if z0 == 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 1;

     label2:
        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(88);

        $i1 = virtualinvoke r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i0, $b2);

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(88, $i1);

        return;
    }

    public boolean isFontStyleModified()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField styleModified>;

        $z0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: boolean getOptionFlag(org.apache.poi.util.BitField)>($r1);

        return $z0;
    }

    public void setFontStyleModified(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField styleModified>;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setOptionFlag(boolean,org.apache.poi.util.BitField)>(z0, $r1);

        return;
    }

    public boolean isFontOutlineModified()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField outlineModified>;

        $z0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: boolean getOptionFlag(org.apache.poi.util.BitField)>($r1);

        return $z0;
    }

    public void setFontOutlineModified(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField outlineModified>;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setOptionFlag(boolean,org.apache.poi.util.BitField)>(z0, $r1);

        return;
    }

    public boolean isFontShadowModified()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField shadowModified>;

        $z0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: boolean getOptionFlag(org.apache.poi.util.BitField)>($r1);

        return $z0;
    }

    public void setFontShadowModified(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField shadowModified>;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setOptionFlag(boolean,org.apache.poi.util.BitField)>(z0, $r1);

        return;
    }

    public void setFontCancellationModified(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField cancellationModified>;

        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setOptionFlag(boolean,org.apache.poi.util.BitField)>(z0, $r1);

        return;
    }

    public boolean isFontCancellationModified()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField cancellationModified>;

        $z0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: boolean getOptionFlag(org.apache.poi.util.BitField)>($r1);

        return $z0;
    }

    public void setEscapementTypeModified(boolean)
    {
        byte $b0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(92, $b0);

        return;
    }

    public boolean isEscapementTypeModified()
    {
        int $i0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(92);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setUnderlineTypeModified(boolean)
    {
        byte $b0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(96, $b0);

        return;
    }

    public boolean isUnderlineTypeModified()
    {
        int $i0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(96);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setFontWieghtModified(boolean)
    {
        byte $b0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: void setInt(int,int)>(100, $b0);

        return;
    }

    public boolean isFontWeightModified()
    {
        int $i0;
        org.apache.poi.hssf.record.cf.FontFormatting r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.cf.FontFormatting: int getInt(int)>(100);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.StringBuilder $r8, $r11, $r21, $r23, $r37, $r38;
        org.apache.poi.hssf.record.cf.FontFormatting r2;
        short $s1, $s2, $s3, $s4, $s5, $s6, $s7;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r13, $r15, $r16, $r17, $r18, $r19, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r33, $r35, $r36;
        int $i0, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r9, $r10, $r12, $r14, $r22, $r32, $r34;

        r2 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t[Font Formatting]\n");

        $r1 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font height = ");

        $i0 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: int getFontHeight()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" twips\n");

        $z0 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isFontStyleModified()>();

        if $z0 == 0 goto label03;

        $r30 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font posture = ");

        $z10 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isItalic()>();

        if $z10 == 0 goto label01;

        $r32 = "Italic";

        goto label02;

     label01:
        $r32 = "Normal";

     label02:
        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label04;

     label03:
        $r4 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font posture = ]not modified]");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label04:
        $z1 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isFontOutlineModified()>();

        if $z1 == 0 goto label05;

        $r28 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font outline = ");

        $z9 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isOutlineOn()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z9);

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label06;

     label05:
        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font outline is not modified\n");

     label06:
        $z2 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isFontShadowModified()>();

        if $z2 == 0 goto label07;

        $r26 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font shadow = ");

        $z8 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isShadowOn()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z8);

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label08;

     label07:
        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font shadow is not modified\n");

     label08:
        $z3 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isFontCancellationModified()>();

        if $z3 == 0 goto label09;

        $r24 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font strikeout = ");

        $z7 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isStruckout()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z7);

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label10;

     label09:
        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font strikeout is not modified\n");

     label10:
        $z4 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isFontStyleModified()>();

        if $z4 == 0 goto label14;

        $r19 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font weight = ");

        $s4 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: short getFontWeight()>();

        $i8 = (int) $s4;

        $r33 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i8);

        $s5 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: short getFontWeight()>();

        $i9 = (int) $s5;

        if $i9 != 400 goto label11;

        $r34 = "(Normal)";

        goto label13;

     label11:
        $s6 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: short getFontWeight()>();

        $i10 = (int) $s6;

        if $i10 != 700 goto label12;

        $r34 = "(Bold)";

        goto label13;

     label12:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $s7 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: short getFontWeight()>();

        $i11 = (int) $s7;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r34 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label15;

     label14:
        $r5 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.font weight = ]not modified]");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label15:
        $z5 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isEscapementTypeModified()>();

        if $z5 == 0 goto label16;

        $r17 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.escapement type = ");

        $s3 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: short getEscapementType()>();

        $i12 = (int) $s3;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i12);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label17;

     label16:
        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.escapement type is not modified\n");

     label17:
        $z6 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: boolean isUnderlineTypeModified()>();

        if $z6 == 0 goto label18;

        $r15 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.underline type = ");

        $s2 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: short getUnderlineType()>();

        $i13 = (int) $s2;

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label19;

     label18:
        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.underline type is not modified\n");

     label19:
        $r6 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.color index = ");

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $s1 = virtualinvoke r2.<org.apache.poi.hssf.record.cf.FontFormatting: short getFontColorIndex()>();

        $i14 = (int) $s1;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i14);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toUpperCase()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t[/Font Formatting]\n");

        $r14 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }

    public java.lang.Object clone()
    {
        byte[] $r1, r3;
        java.lang.Object $r2;
        org.apache.poi.hssf.record.cf.FontFormatting r0, $r4;

        r0 := @this: org.apache.poi.hssf.record.cf.FontFormatting;

        $r1 = r0.<org.apache.poi.hssf.record.cf.FontFormatting: byte[] _rawData>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        r3 = (byte[]) $r2;

        $r4 = new org.apache.poi.hssf.record.cf.FontFormatting;

        specialinvoke $r4.<org.apache.poi.hssf.record.cf.FontFormatting: void <init>(byte[])>(r3);

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        <org.apache.poi.hssf.record.cf.FontFormatting: short FONT_WEIGHT_BOLD> = 700;

        <org.apache.poi.hssf.record.cf.FontFormatting: short FONT_WEIGHT_NORMAL> = 400;

        <org.apache.poi.hssf.record.cf.FontFormatting: byte U_DOUBLE_ACCOUNTING> = 34;

        <org.apache.poi.hssf.record.cf.FontFormatting: byte U_SINGLE_ACCOUNTING> = 33;

        <org.apache.poi.hssf.record.cf.FontFormatting: byte U_DOUBLE> = 2;

        <org.apache.poi.hssf.record.cf.FontFormatting: byte U_SINGLE> = 1;

        <org.apache.poi.hssf.record.cf.FontFormatting: byte U_NONE> = 0;

        <org.apache.poi.hssf.record.cf.FontFormatting: short SS_SUB> = 2;

        <org.apache.poi.hssf.record.cf.FontFormatting: short SS_SUPER> = 1;

        <org.apache.poi.hssf.record.cf.FontFormatting: short SS_NONE> = 0;

        <org.apache.poi.hssf.record.cf.FontFormatting: int FONT_CELL_HEIGHT_PRESERVED> = -1;

        <org.apache.poi.hssf.record.cf.FontFormatting: int RAW_DATA_SIZE> = 118;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_FONT_FORMATING_END> = 116;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_NOT_USED3> = 112;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_NOT_USED2> = 108;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_NOT_USED1> = 104;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_FONT_WEIGHT_MODIFIED> = 100;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_UNDERLINE_TYPE_MODIFIED> = 96;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_ESCAPEMENT_TYPE_MODIFIED> = 92;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_OPTION_FLAGS> = 88;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_FONT_COLOR_INDEX> = 80;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_UNDERLINE_TYPE> = 76;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_ESCAPEMENT_TYPE> = 74;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_FONT_WEIGHT> = 72;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_FONT_OPTIONS> = 68;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_FONT_HEIGHT> = 64;

        <org.apache.poi.hssf.record.cf.FontFormatting: int OFFSET_FONT_NAME> = 0;

        $r0 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(2);

        <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField posture> = $r0;

        $r1 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(8);

        <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField outline> = $r1;

        $r2 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(16);

        <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField shadow> = $r2;

        $r3 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(128);

        <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField cancellation> = $r3;

        $r4 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(2);

        <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField styleModified> = $r4;

        $r5 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(8);

        <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField outlineModified> = $r5;

        $r6 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(16);

        <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField shadowModified> = $r6;

        $r7 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(128);

        <org.apache.poi.hssf.record.cf.FontFormatting: org.apache.poi.util.BitField cancellationModified> = $r7;

        return;
    }
}
