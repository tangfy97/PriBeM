public final class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator extends org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator
{
    private final int _nodeType;
    private final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2, int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;
        int i0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2)>(r1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int _nodeType> = i0;

        return;
    }

    public org.apache.xml.dtm.DTMAxisIterator setStartNode(int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r2, $r3, $r8, $r13, $r16, $r19, $r20, $r21, $r23, $r25;
        int[] $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r18, r22, r24;
        boolean $z0, $z1;
        org.apache.xml.dtm.ref.ExtendedType[] $r4;
        org.apache.xml.dtm.ref.ExtendedType $r5;
        org.apache.xml.dtm.DTMAxisIterator $r11;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, $i28, $i30, $i32, $i34, $i36, $i38;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator;

        i26 := @parameter0: int;

        if i26 != 0 goto label01;

        $r21 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i26 = virtualinvoke $r21.<org.apache.xml.dtm.ref.DTMDefaultBase: int getDocument()>();

     label01:
        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_realStartNode> = i26;

        $z0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable>;

        if $z0 == 0 goto label17;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i0 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i26);

        i27 = $i0;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size> = 0;

        $i30 = (int) -1;

        if $i0 != $i30 goto label02;

        $i32 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i32;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_ancestorsPos> = 0;

        return r0;

     label02:
        i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int _nodeType>;

        $z1 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _includeSelf>;

        if $z1 != 0 goto label03;

        $r19 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i25 = virtualinvoke $r19.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>($i0);

        i27 = $i25;

        $r20 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i26 = virtualinvoke $r20.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>($i25);

     label03:
        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode> = i26;

        if i1 < 14 goto label13;

        goto label07;

     label04:
        $r13 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i16 = virtualinvoke $r13.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i27);

        if $i16 != i1 goto label06;

        $i18 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        $r14 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $i17 = lengthof $r14;

        if $i18 < $i17 goto label05;

        $i22 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        $i23 = $i22 * 2;

        r22 = newarray (int)[$i23];

        $r18 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $r17 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $i24 = lengthof $r17;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, r22, 0, $i24);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors> = r22;

     label05:
        $r15 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $i19 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        $i20 = $i19 + 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size> = $i20;

        $r16 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i21 = virtualinvoke $r16.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i27);

        $r15[$i19] = $i21;

     label06:
        $r23 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i27 = virtualinvoke $r23.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i27);

     label07:
        $i34 = (int) -1;

        if i27 != $i34 goto label04;

        goto label14;

     label08:
        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i2 = virtualinvoke $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i27);

        if $i2 >= 14 goto label09;

        if $i2 == i1 goto label10;

     label09:
        if $i2 < 14 goto label12;

        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: org.apache.xml.dtm.ref.ExtendedType[] m_extendedTypes>;

        $r5 = $r4[$i2];

        $i3 = virtualinvoke $r5.<org.apache.xml.dtm.ref.ExtendedType: int getNodeType()>();

        if $i3 != i1 goto label12;

     label10:
        $i5 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        $r6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $i4 = lengthof $r6;

        if $i5 < $i4 goto label11;

        $i9 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        $i10 = $i9 * 2;

        r24 = newarray (int)[$i10];

        $r10 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $r9 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $i11 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r24, 0, $i11);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors> = r24;

     label11:
        $r7 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $i6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        $i7 = $i6 + 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size> = $i7;

        $r8 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i8 = virtualinvoke $r8.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i27);

        $r7[$i6] = $i8;

     label12:
        $r25 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i27 = virtualinvoke $r25.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i27);

     label13:
        $i36 = (int) -1;

        if i27 != $i36 goto label08;

     label14:
        $i12 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        $i13 = $i12 - 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_ancestorsPos> = $i13;

        $i14 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_ancestorsPos>;

        if $i14 < 0 goto label15;

        $r12 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $i15 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_ancestorsPos>;

        $i28 = $r12[$i15];

        goto label16;

     label15:
        $i38 = (int) -1;

        $i28 = $i38;

     label16:
        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i28;

        $r11 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

        return $r11;

     label17:
        return r0;
    }

    public int getNodeByPosition(int)
    {
        int[] $r1;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator r0;
        int i0, $i1, $i2, $i3, $i5;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        if i0 > $i1 goto label1;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int[] m_ancestors>;

        $i2 = i0 - 1;

        $i3 = $r1[$i2];

        return $i3;

     label1:
        $i5 = (int) -1;

        return $i5;
    }

    public int getLast()
    {
        int $i0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: int m_size>;

        return $i0;
    }
}
