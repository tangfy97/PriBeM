public class org.apache.lucene.search.PositiveScoresOnlyCollector extends org.apache.lucene.search.Collector
{
    private final org.apache.lucene.search.Collector c;
    private org.apache.lucene.search.Scorer scorer;

    public void <init>(org.apache.lucene.search.Collector)
    {
        org.apache.lucene.search.Collector r1;
        org.apache.lucene.search.PositiveScoresOnlyCollector r0;

        r0 := @this: org.apache.lucene.search.PositiveScoresOnlyCollector;

        r1 := @parameter0: org.apache.lucene.search.Collector;

        specialinvoke r0.<org.apache.lucene.search.Collector: void <init>()>();

        r0.<org.apache.lucene.search.PositiveScoresOnlyCollector: org.apache.lucene.search.Collector c> = r1;

        return;
    }

    public void collect(int) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r1;
        byte $b0;
        org.apache.lucene.search.PositiveScoresOnlyCollector r0;
        int i1, $i2;
        float $f0;
        org.apache.lucene.search.Collector $r2;

        r0 := @this: org.apache.lucene.search.PositiveScoresOnlyCollector;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.PositiveScoresOnlyCollector: org.apache.lucene.search.Scorer scorer>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.search.Scorer: float score()>();

        $b0 = $f0 cmpl 0.0F;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        $r2 = r0.<org.apache.lucene.search.PositiveScoresOnlyCollector: org.apache.lucene.search.Collector c>;

        virtualinvoke $r2.<org.apache.lucene.search.Collector: void collect(int)>(i1);

     label1:
        return;
    }

    public void setNextReader(org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.search.Collector $r2;
        org.apache.lucene.search.PositiveScoresOnlyCollector r0;
        org.apache.lucene.index.AtomicReaderContext r1;

        r0 := @this: org.apache.lucene.search.PositiveScoresOnlyCollector;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        $r2 = r0.<org.apache.lucene.search.PositiveScoresOnlyCollector: org.apache.lucene.search.Collector c>;

        virtualinvoke $r2.<org.apache.lucene.search.Collector: void setNextReader(org.apache.lucene.index.AtomicReaderContext)>(r1);

        return;
    }

    public void setScorer(org.apache.lucene.search.Scorer) throws java.io.IOException
    {
        org.apache.lucene.search.ScoreCachingWrappingScorer $r1;
        org.apache.lucene.search.Scorer r2, $r3;
        org.apache.lucene.search.PositiveScoresOnlyCollector r0;
        org.apache.lucene.search.Collector $r4;

        r0 := @this: org.apache.lucene.search.PositiveScoresOnlyCollector;

        r2 := @parameter0: org.apache.lucene.search.Scorer;

        $r1 = new org.apache.lucene.search.ScoreCachingWrappingScorer;

        specialinvoke $r1.<org.apache.lucene.search.ScoreCachingWrappingScorer: void <init>(org.apache.lucene.search.Scorer)>(r2);

        r0.<org.apache.lucene.search.PositiveScoresOnlyCollector: org.apache.lucene.search.Scorer scorer> = $r1;

        $r4 = r0.<org.apache.lucene.search.PositiveScoresOnlyCollector: org.apache.lucene.search.Collector c>;

        $r3 = r0.<org.apache.lucene.search.PositiveScoresOnlyCollector: org.apache.lucene.search.Scorer scorer>;

        virtualinvoke $r4.<org.apache.lucene.search.Collector: void setScorer(org.apache.lucene.search.Scorer)>($r3);

        return;
    }

    public boolean acceptsDocsOutOfOrder()
    {
        org.apache.lucene.search.Collector $r1;
        org.apache.lucene.search.PositiveScoresOnlyCollector r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.PositiveScoresOnlyCollector;

        $r1 = r0.<org.apache.lucene.search.PositiveScoresOnlyCollector: org.apache.lucene.search.Collector c>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.search.Collector: boolean acceptsDocsOutOfOrder()>();

        return $z0;
    }
}
