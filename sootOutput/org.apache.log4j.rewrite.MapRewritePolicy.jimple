public class org.apache.log4j.rewrite.MapRewritePolicy extends java.lang.Object implements org.apache.log4j.rewrite.RewritePolicy
{

    public void <init>()
    {
        org.apache.log4j.rewrite.MapRewritePolicy r0;

        r0 := @this: org.apache.log4j.rewrite.MapRewritePolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.log4j.spi.LoggingEvent rewrite(org.apache.log4j.spi.LoggingEvent)
    {
        java.util.HashMap $r2;
        long $l0;
        org.apache.log4j.rewrite.MapRewritePolicy r23;
        java.util.Map $r3, r4;
        org.apache.log4j.Level $r12;
        java.lang.String $r9, $r11, $r13, $r15, $r19;
        boolean $z0, $z1, $z2;
        org.apache.log4j.Category $r10, $r25;
        java.util.Map$Entry r18;
        java.util.Iterator $r7;
        org.apache.log4j.spi.LoggingEvent r0, $r8;
        java.util.Set $r6;
        org.apache.log4j.spi.ThrowableInformation $r14;
        java.lang.Object $r1, $r5, $r17, $r20, $r21, $r22, r24;
        org.apache.log4j.spi.LocationInfo $r16;

        r23 := @this: org.apache.log4j.rewrite.MapRewritePolicy;

        r0 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r1 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.Object getMessage()>();

        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label7;

        $r2 = new java.util.HashMap;

        $r3 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.util.Map getProperties()>();

        specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r3);

        r4 = (java.util.Map) $r1;

        $r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("message");

        r24 = $r5;

        if $r5 != null goto label1;

        r24 = $r1;

     label1:
        $r6 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r17 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.util.Map$Entry) $r17;

        $r19 = "message";

        $r20 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z1 != 0 goto label3;

        $r21 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

     label3:
        goto label2;

     label4:
        $r8 = new org.apache.log4j.spi.LoggingEvent;

        $r9 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.String getFQNOfLoggerClass()>();

        $r10 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Category getLogger()>();

        if $r10 == null goto label5;

        $r25 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Category getLogger()>();

        goto label6;

     label5:
        $r11 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.String getLoggerName()>();

        $r25 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>($r11);

     label6:
        $l0 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: long getTimeStamp()>();

        $r12 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $r13 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.String getThreadName()>();

        $r14 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.ThrowableInformation getThrowableInformation()>();

        $r15 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.String getNDC()>();

        $r16 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.LocationInfo getLocationInformation()>();

        specialinvoke $r8.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,long,org.apache.log4j.Level,java.lang.Object,java.lang.String,org.apache.log4j.spi.ThrowableInformation,java.lang.String,org.apache.log4j.spi.LocationInfo,java.util.Map)>($r9, $r25, $l0, $r12, r24, $r13, $r14, $r15, $r16, $r2);

        return $r8;

     label7:
        return r0;
    }
}
