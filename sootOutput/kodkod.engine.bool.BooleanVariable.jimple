public final class kodkod.engine.bool.BooleanVariable extends kodkod.engine.bool.BooleanFormula
{
    final int label;
    private final int hashcode;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lkodkod/engine/bool/BooleanVariable;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <kodkod.engine.bool.BooleanVariable: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(int)
    {
        kodkod.engine.bool.BooleanVariable r0;
        int i0, $i1;
        java.lang.AssertionError $r1;
        boolean $z0;

        r0 := @this: kodkod.engine.bool.BooleanVariable;

        i0 := @parameter0: int;

        specialinvoke r0.<kodkod.engine.bool.BooleanFormula: void <init>(kodkod.engine.bool.BooleanFormula)>(null);

        $z0 = <kodkod.engine.bool.BooleanVariable: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        r0.<kodkod.engine.bool.BooleanVariable: int label> = i0;

        $i1 = staticinvoke <kodkod.util.ints.Ints: int superFastHash(int)>(i0);

        r0.<kodkod.engine.bool.BooleanVariable: int hashcode> = $i1;

        return;
    }

    int hash(kodkod.engine.bool.Operator)
    {
        int $i0;
        kodkod.engine.bool.BooleanVariable r0;
        kodkod.engine.bool.Operator r1;

        r0 := @this: kodkod.engine.bool.BooleanVariable;

        r1 := @parameter0: kodkod.engine.bool.Operator;

        $i0 = r0.<kodkod.engine.bool.BooleanVariable: int hashcode>;

        return $i0;
    }

    public int label()
    {
        int $i0;
        kodkod.engine.bool.BooleanVariable r0;

        r0 := @this: kodkod.engine.bool.BooleanVariable;

        $i0 = r0.<kodkod.engine.bool.BooleanVariable: int label>;

        return $i0;
    }

    public java.lang.String toString()
    {
        int $i0;
        kodkod.engine.bool.BooleanVariable r0;
        java.lang.String $r1;

        r0 := @this: kodkod.engine.bool.BooleanVariable;

        $i0 = r0.<kodkod.engine.bool.BooleanVariable: int label>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r1;
    }

    public java.lang.Object accept(kodkod.engine.bool.BooleanVisitor, java.lang.Object)
    {
        kodkod.engine.bool.BooleanVariable r1;
        kodkod.engine.bool.BooleanVisitor r0;
        java.lang.Object r2, $r3;

        r1 := @this: kodkod.engine.bool.BooleanVariable;

        r0 := @parameter0: kodkod.engine.bool.BooleanVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<kodkod.engine.bool.BooleanVisitor: java.lang.Object visit(kodkod.engine.bool.BooleanVariable,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public kodkod.engine.bool.Operator op()
    {
        kodkod.engine.bool.BooleanVariable r1;
        kodkod.engine.bool.Operator $r0;

        r1 := @this: kodkod.engine.bool.BooleanVariable;

        $r0 = <kodkod.engine.bool.Operator: kodkod.engine.bool.Operator VAR>;

        return $r0;
    }

    public java.util.Iterator iterator()
    {
        kodkod.engine.bool.BooleanVariable r1;
        java.util.Iterator $r0;

        r1 := @this: kodkod.engine.bool.BooleanVariable;

        $r0 = staticinvoke <kodkod.util.collections.Containers: java.util.Iterator emptyIterator()>();

        return $r0;
    }

    public int size()
    {
        kodkod.engine.bool.BooleanVariable r0;

        r0 := @this: kodkod.engine.bool.BooleanVariable;

        return 0;
    }

    public kodkod.engine.bool.BooleanFormula input(int)
    {
        int i0;
        java.lang.IndexOutOfBoundsException $r0;
        kodkod.engine.bool.BooleanVariable r1;

        r1 := @this: kodkod.engine.bool.BooleanVariable;

        i0 := @parameter0: int;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;
    }

    public int hashCode()
    {
        int $i0;
        kodkod.engine.bool.BooleanVariable r0;

        r0 := @this: kodkod.engine.bool.BooleanVariable;

        $i0 = r0.<kodkod.engine.bool.BooleanVariable: int hashcode>;

        return $i0;
    }
}
