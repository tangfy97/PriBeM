public class ucar.nc2.dt.point.SequenceHelper extends java.lang.Object
{
    protected ucar.nc2.NetcdfFile ncfile;
    protected ucar.nc2.dods.DODSNetcdfFile dodsFile;
    protected ucar.nc2.dataset.StructureDS sequenceOuter;
    protected ucar.nc2.dataset.StructureDS sequenceInner;
    protected ucar.nc2.Variable latVar;
    protected ucar.nc2.Variable lonVar;
    protected ucar.nc2.Variable altVar;
    protected ucar.nc2.Variable timeVar;
    protected boolean isProfile;
    protected ucar.nc2.units.DateUnit timeUnit;
    protected ucar.nc2.units.DateFormatter formatter;
    private ucar.ma2.StructureMembers$Member latMember;
    private ucar.ma2.StructureMembers$Member lonMember;
    private ucar.ma2.StructureMembers$Member innerMember;
    private ucar.ma2.StructureMembers$Member altMember;
    private ucar.ma2.StructureMembers$Member timeMember;

    public void <init>(ucar.nc2.dataset.NetcdfDataset, boolean, ucar.nc2.dataset.StructureDS, ucar.nc2.dataset.StructureDS, ucar.nc2.Variable, ucar.nc2.Variable, ucar.nc2.Variable, ucar.nc2.Variable, java.util.List, java.lang.StringBuffer)
    {
        ucar.nc2.dt.point.SequenceHelper r0;
        java.lang.StringBuffer r16;
        int $i0, $i1, i2, i3;
        ucar.nc2.Variable r4, r5, r6, r7, r19, r20;
        boolean z0, $z1, $z2;
        java.lang.IllegalArgumentException $r13;
        java.util.List $r8, $r9, r10;
        ucar.nc2.dods.DODSNetcdfFile $r15, $r18;
        ucar.nc2.dataset.StructureDS r2, r3;
        java.lang.Object $r11, $r12;
        ucar.nc2.NetcdfFile r17;
        ucar.nc2.dataset.NetcdfDataset r1, $r14;

        r0 := @this: ucar.nc2.dt.point.SequenceHelper;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        z0 := @parameter1: boolean;

        r2 := @parameter2: ucar.nc2.dataset.StructureDS;

        r3 := @parameter3: ucar.nc2.dataset.StructureDS;

        r4 := @parameter4: ucar.nc2.Variable;

        r5 := @parameter5: ucar.nc2.Variable;

        r6 := @parameter6: ucar.nc2.Variable;

        r7 := @parameter7: ucar.nc2.Variable;

        r10 := @parameter8: java.util.List;

        r16 := @parameter9: java.lang.StringBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.NetcdfFile ncfile> = r1;

        r0.<ucar.nc2.dt.point.SequenceHelper: boolean isProfile> = z0;

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceOuter> = r2;

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceInner> = r3;

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable latVar> = r4;

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable lonVar> = r5;

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable altVar> = r6;

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable timeVar> = r7;

        r17 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.NetcdfFile getReferencedFile()>();

     label1:
        $r18 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dods.DODSNetcdfFile dodsFile>;

        if $r18 != null goto label4;

        $z1 = r17 instanceof ucar.nc2.dods.DODSNetcdfFile;

        if $z1 == 0 goto label2;

        $r15 = (ucar.nc2.dods.DODSNetcdfFile) r17;

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dods.DODSNetcdfFile dodsFile> = $r15;

        goto label1;

     label2:
        $z2 = r17 instanceof ucar.nc2.dataset.NetcdfDataset;

        if $z2 == 0 goto label3;

        $r14 = (ucar.nc2.dataset.NetcdfDataset) r17;

        r17 = virtualinvoke $r14.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.NetcdfFile getReferencedFile()>();

        goto label1;

     label3:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must be a DODSNetcdfFile");

        throw $r13;

     label4:
        $r8 = virtualinvoke r2.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        i2 = 0;

     label5:
        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i2 >= $i0 goto label6;

        $r12 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i2);

        r19 = (ucar.nc2.Variable) $r12;

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r19);

        i2 = i2 + 1;

        goto label5;

     label6:
        $r9 = virtualinvoke r3.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        i3 = 0;

     label7:
        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i3 >= $i1 goto label8;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i3);

        r20 = (ucar.nc2.Variable) $r11;

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r20);

        i3 = i3 + 1;

        goto label7;

     label8:
        interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r4);

        interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r5);

        interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r6);

        interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r7);

        interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r3);

        return;
    }

    public void setTimeUnit(ucar.nc2.units.DateUnit)
    {
        ucar.nc2.units.DateUnit r1;
        ucar.nc2.dt.point.SequenceHelper r0;

        r0 := @this: ucar.nc2.dt.point.SequenceHelper;

        r1 := @parameter0: ucar.nc2.units.DateUnit;

        r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.units.DateUnit timeUnit> = r1;

        return;
    }

    public ucar.nc2.units.DateUnit getTimeUnit()
    {
        ucar.nc2.units.DateUnit $r1;
        ucar.nc2.dt.point.SequenceHelper r0;

        r0 := @this: ucar.nc2.dt.point.SequenceHelper;

        $r1 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.units.DateUnit timeUnit>;

        return $r1;
    }

    public java.util.List getData(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.SequenceHelper r0;
        ucar.ma2.ArrayStructure r6;
        ucar.nc2.dt.point.SequenceHelper$SeqPointObs $r8;
        long $l0;
        ucar.ma2.Array $r5;
        java.util.ArrayList $r7;
        ucar.ma2.StructureData $r9;
        ucar.nc2.dods.DODSNetcdfFile $r4;
        ucar.nc2.dataset.StructureDS $r1, $r3;
        ucar.nc2.util.CancelTask r10;
        int i1, i2;
        java.lang.String $r2;

        r0 := @this: ucar.nc2.dt.point.SequenceHelper;

        r10 := @parameter0: ucar.nc2.util.CancelTask;

        $r1 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceOuter>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.StructureDS: java.lang.String getName()>();

        $r4 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dods.DODSNetcdfFile dodsFile>;

        $r3 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceOuter>;

        $r5 = virtualinvoke $r4.<ucar.nc2.dods.DODSNetcdfFile: ucar.ma2.Array readWithCE(ucar.nc2.Variable,java.lang.String)>($r3, $r2);

        r6 = (ucar.ma2.ArrayStructure) $r5;

        specialinvoke r0.<ucar.nc2.dt.point.SequenceHelper: void extractMembers(ucar.ma2.ArrayStructure)>(r6);

        $l0 = virtualinvoke r6.<ucar.ma2.ArrayStructure: long getSize()>();

        i1 = (int) $l0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r8 = new ucar.nc2.dt.point.SequenceHelper$SeqPointObs;

        $r9 = virtualinvoke r6.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>(i2);

        specialinvoke $r8.<ucar.nc2.dt.point.SequenceHelper$SeqPointObs: void <init>(ucar.nc2.dt.point.SequenceHelper,int,ucar.ma2.StructureData)>(r0, i2, $r9);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r7;
    }

    public java.util.List getData(ucar.unidata.geoloc.LatLonRect, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.SequenceHelper r1;
        ucar.ma2.ArrayStructure r13;
        ucar.nc2.dt.point.SequenceHelper$SeqPointObs $r15;
        long $l0;
        java.util.ArrayList $r14;
        ucar.ma2.StructureData $r16;
        ucar.nc2.util.CancelTask r17;
        int i1, i2;
        java.lang.String $r3, $r7, $r9;
        ucar.ma2.Array $r12;
        ucar.unidata.geoloc.LatLonRect r6;
        ucar.nc2.dods.DODSNetcdfFile $r11;
        ucar.nc2.dataset.StructureDS $r2, $r10;
        java.lang.StringBuilder $r0, $r4, $r5, $r8;

        r1 := @this: ucar.nc2.dt.point.SequenceHelper;

        r6 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r17 := @parameter1: ucar.nc2.util.CancelTask;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceOuter>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.StructureDS: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = specialinvoke r1.<ucar.nc2.dt.point.SequenceHelper: java.lang.String makeBB(ucar.unidata.geoloc.LatLonRect)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dods.DODSNetcdfFile dodsFile>;

        $r10 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceOuter>;

        $r12 = virtualinvoke $r11.<ucar.nc2.dods.DODSNetcdfFile: ucar.ma2.Array readWithCE(ucar.nc2.Variable,java.lang.String)>($r10, $r9);

        r13 = (ucar.ma2.ArrayStructure) $r12;

        specialinvoke r1.<ucar.nc2.dt.point.SequenceHelper: void extractMembers(ucar.ma2.ArrayStructure)>(r13);

        $l0 = virtualinvoke r13.<ucar.ma2.ArrayStructure: long getSize()>();

        i1 = (int) $l0;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r15 = new ucar.nc2.dt.point.SequenceHelper$SeqPointObs;

        $r16 = virtualinvoke r13.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>(i2);

        specialinvoke $r15.<ucar.nc2.dt.point.SequenceHelper$SeqPointObs: void <init>(ucar.nc2.dt.point.SequenceHelper,int,ucar.ma2.StructureData)>(r1, i2, $r16);

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r14;
    }

    public java.util.List getData(ucar.unidata.geoloc.LatLonRect, java.util.Date, java.util.Date, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.SequenceHelper r1;
        ucar.ma2.ArrayStructure r18;
        java.util.Date r10, r11;
        ucar.nc2.dt.point.SequenceHelper$SeqPointObs $r20;
        long $l0;
        java.util.ArrayList $r19;
        ucar.ma2.StructureData $r21;
        ucar.nc2.util.CancelTask r22;
        int i1, i2;
        java.lang.String $r3, $r7, $r12, $r14;
        ucar.ma2.Array $r17;
        ucar.unidata.geoloc.LatLonRect r6;
        ucar.nc2.dods.DODSNetcdfFile $r16;
        ucar.nc2.dataset.StructureDS $r2, $r15;
        java.lang.StringBuilder $r0, $r4, $r5, $r8, $r9, $r13;

        r1 := @this: ucar.nc2.dt.point.SequenceHelper;

        r6 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r10 := @parameter1: java.util.Date;

        r11 := @parameter2: java.util.Date;

        r22 := @parameter3: ucar.nc2.util.CancelTask;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceOuter>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.StructureDS: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = specialinvoke r1.<ucar.nc2.dt.point.SequenceHelper: java.lang.String makeBB(ucar.unidata.geoloc.LatLonRect)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r12 = specialinvoke r1.<ucar.nc2.dt.point.SequenceHelper: java.lang.String makeTimeRange(java.util.Date,java.util.Date)>(r10, r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dods.DODSNetcdfFile dodsFile>;

        $r15 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceOuter>;

        $r17 = virtualinvoke $r16.<ucar.nc2.dods.DODSNetcdfFile: ucar.ma2.Array readWithCE(ucar.nc2.Variable,java.lang.String)>($r15, $r14);

        r18 = (ucar.ma2.ArrayStructure) $r17;

        specialinvoke r1.<ucar.nc2.dt.point.SequenceHelper: void extractMembers(ucar.ma2.ArrayStructure)>(r18);

        $l0 = virtualinvoke r18.<ucar.ma2.ArrayStructure: long getSize()>();

        i1 = (int) $l0;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r20 = new ucar.nc2.dt.point.SequenceHelper$SeqPointObs;

        $r21 = virtualinvoke r18.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>(i2);

        specialinvoke $r20.<ucar.nc2.dt.point.SequenceHelper$SeqPointObs: void <init>(ucar.nc2.dt.point.SequenceHelper,int,ucar.ma2.StructureData)>(r1, i2, $r21);

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r19;
    }

    private java.lang.String makeBB(ucar.unidata.geoloc.LatLonRect)
    {
        ucar.nc2.dt.point.SequenceHelper r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r8, $r9, $r12, $r13, $r15, $r16, $r19, $r20, $r22, $r23, $r26, $r27, $r29;
        ucar.nc2.Variable $r2, $r10, $r17, $r24;
        java.lang.String $r3, $r11, $r18, $r25, $r30;
        double $d0, $d1, $d2, $d3;
        ucar.unidata.geoloc.LatLonRect r6;
        ucar.unidata.geoloc.LatLonPointImpl $r7, $r14, $r21, $r28;

        r1 := @this: ucar.nc2.dt.point.SequenceHelper;

        r6 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable latVar>;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">=");

        $r7 = virtualinvoke r6.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $d0 = virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r10 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable latVar>;

        $r11 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");

        $r14 = virtualinvoke r6.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d1 = virtualinvoke $r14.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r17 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable lonVar>;

        $r18 = virtualinvoke $r17.<ucar.nc2.Variable: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">=");

        $r21 = virtualinvoke r6.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $d2 = virtualinvoke $r21.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r24 = r1.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable lonVar>;

        $r25 = virtualinvoke $r24.<ucar.nc2.Variable: java.lang.String getName()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");

        $r28 = virtualinvoke r6.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d3 = virtualinvoke $r28.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r30;
    }

    private java.lang.String makeTimeRange(java.util.Date, java.util.Date)
    {
        ucar.nc2.dt.point.SequenceHelper r0;
        java.util.Date r1, r3;
        ucar.nc2.Variable $r6, $r12;
        java.lang.String $r7, $r13, $r17;
        double $d0, $d1;
        ucar.nc2.units.DateUnit $r2, $r4;
        java.lang.StringBuilder $r5, $r8, $r9, $r10, $r11, $r14, $r15, $r16;

        r0 := @this: ucar.nc2.dt.point.SequenceHelper;

        r1 := @parameter0: java.util.Date;

        r3 := @parameter1: java.util.Date;

        $r2 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = virtualinvoke $r2.<ucar.nc2.units.DateUnit: double makeValue(java.util.Date)>(r1);

        $r4 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.units.DateUnit timeUnit>;

        $d1 = virtualinvoke $r4.<ucar.nc2.units.DateUnit: double makeValue(java.util.Date)>(r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable timeVar>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r12 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable timeVar>;

        $r13 = virtualinvoke $r12.<ucar.nc2.Variable: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    private void extractMembers(ucar.ma2.ArrayStructure)
    {
        ucar.nc2.dt.point.SequenceHelper r2;
        ucar.ma2.ArrayStructure r0;
        ucar.ma2.StructureMembers$Member $r5, $r8, $r11, $r13, $r18, $r21, $r24, $r27;
        ucar.ma2.StructureData $r12, $r14;
        ucar.nc2.Variable $r3, $r6, $r16, $r19, $r22, $r25;
        java.lang.String $r4, $r7, $r10, $r17, $r20, $r23, $r26;
        boolean $z0;
        ucar.ma2.StructureMembers $r1, $r15;
        ucar.nc2.dataset.StructureDS $r9;

        r2 := @this: ucar.nc2.dt.point.SequenceHelper;

        r0 := @parameter0: ucar.ma2.ArrayStructure;

        $r1 = virtualinvoke r0.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        $r3 = r2.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable latVar>;

        $r4 = virtualinvoke $r3.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r5 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r4);

        r2.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member latMember> = $r5;

        $r6 = r2.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable lonVar>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r8 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r7);

        r2.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member lonMember> = $r8;

        $r9 = r2.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.dataset.StructureDS sequenceInner>;

        $r10 = virtualinvoke $r9.<ucar.nc2.dataset.StructureDS: java.lang.String getShortName()>();

        $r11 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r10);

        r2.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member innerMember> = $r11;

        $r12 = virtualinvoke r0.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>(0);

        $r13 = r2.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member innerMember>;

        $r14 = virtualinvoke $r12.<ucar.ma2.StructureData: ucar.ma2.StructureData getScalarStructure(ucar.ma2.StructureMembers$Member)>($r13);

        $r15 = virtualinvoke $r14.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $z0 = r2.<ucar.nc2.dt.point.SequenceHelper: boolean isProfile>;

        if $z0 == 0 goto label1;

        $r22 = r2.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable timeVar>;

        $r23 = virtualinvoke $r22.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r24 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r23);

        r2.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member timeMember> = $r24;

        $r25 = r2.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable altVar>;

        $r26 = virtualinvoke $r25.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r27 = virtualinvoke $r15.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r26);

        r2.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member altMember> = $r27;

        goto label2;

     label1:
        $r16 = r2.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable timeVar>;

        $r17 = virtualinvoke $r16.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r18 = virtualinvoke $r15.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r17);

        r2.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member timeMember> = $r18;

        $r19 = r2.<ucar.nc2.dt.point.SequenceHelper: ucar.nc2.Variable altVar>;

        $r20 = virtualinvoke $r19.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r21 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r20);

        r2.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member altMember> = $r21;

     label2:
        return;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        java.util.List $r2;
        ucar.nc2.dt.point.SequenceHelper r1;
        java.util.Iterator $r3;
        int i0;
        ucar.nc2.dt.DataIteratorAdapter $r0;

        r1 := @this: ucar.nc2.dt.point.SequenceHelper;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.dt.DataIteratorAdapter;

        $r2 = virtualinvoke r1.<ucar.nc2.dt.point.SequenceHelper: java.util.List getData(ucar.nc2.util.CancelTask)>(null);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r0.<ucar.nc2.dt.DataIteratorAdapter: void <init>(java.util.Iterator)>($r3);

        return $r0;
    }

    static ucar.ma2.StructureMembers$Member access$000(ucar.nc2.dt.point.SequenceHelper)
    {
        ucar.nc2.dt.point.SequenceHelper r0;
        ucar.ma2.StructureMembers$Member $r1;

        r0 := @parameter0: ucar.nc2.dt.point.SequenceHelper;

        $r1 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member latMember>;

        return $r1;
    }

    static ucar.ma2.StructureMembers$Member access$100(ucar.nc2.dt.point.SequenceHelper)
    {
        ucar.nc2.dt.point.SequenceHelper r0;
        ucar.ma2.StructureMembers$Member $r1;

        r0 := @parameter0: ucar.nc2.dt.point.SequenceHelper;

        $r1 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member lonMember>;

        return $r1;
    }

    static ucar.ma2.StructureMembers$Member access$200(ucar.nc2.dt.point.SequenceHelper)
    {
        ucar.nc2.dt.point.SequenceHelper r0;
        ucar.ma2.StructureMembers$Member $r1;

        r0 := @parameter0: ucar.nc2.dt.point.SequenceHelper;

        $r1 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member innerMember>;

        return $r1;
    }

    static ucar.ma2.StructureMembers$Member access$300(ucar.nc2.dt.point.SequenceHelper)
    {
        ucar.nc2.dt.point.SequenceHelper r0;
        ucar.ma2.StructureMembers$Member $r1;

        r0 := @parameter0: ucar.nc2.dt.point.SequenceHelper;

        $r1 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member timeMember>;

        return $r1;
    }

    static ucar.ma2.StructureMembers$Member access$400(ucar.nc2.dt.point.SequenceHelper)
    {
        ucar.nc2.dt.point.SequenceHelper r0;
        ucar.ma2.StructureMembers$Member $r1;

        r0 := @parameter0: ucar.nc2.dt.point.SequenceHelper;

        $r1 = r0.<ucar.nc2.dt.point.SequenceHelper: ucar.ma2.StructureMembers$Member altMember>;

        return $r1;
    }
}
