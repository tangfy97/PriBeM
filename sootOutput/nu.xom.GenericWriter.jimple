class nu.xom.GenericWriter extends nu.xom.TextWriter
{
    private final java.io.ByteArrayOutputStream bout;
    private final java.io.OutputStreamWriter wout;
    private final boolean isJapanese;

    void <init>(java.io.Writer, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.io.ByteArrayOutputStream $r4, $r8;
        nu.xom.GenericWriter r0;
        java.util.Locale $r5;
        java.io.Writer r1;
        int $i0, $i2;
        java.io.OutputStreamWriter $r9;
        java.lang.String $r6, r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: nu.xom.GenericWriter;

        r1 := @parameter0: java.io.Writer;

        r7 := @parameter1: java.lang.String;

        specialinvoke r0.<nu.xom.TextWriter: void <init>(java.io.Writer,java.lang.String)>(r1, r7);

        $r8 = new java.io.ByteArrayOutputStream;

        specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>(int)>(32);

        r0.<nu.xom.GenericWriter: java.io.ByteArrayOutputStream bout> = $r8;

        $r9 = new java.io.OutputStreamWriter;

        $r4 = r0.<nu.xom.GenericWriter: java.io.ByteArrayOutputStream bout>;

        specialinvoke $r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r4, r7);

        r0.<nu.xom.GenericWriter: java.io.OutputStreamWriter wout> = $r9;

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke r7.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("EUC-JP");

        $i2 = (int) -1;

        if $i0 > $i2 goto label1;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("EUC_JP");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("SHIFT_JIS");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("SJIS");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("ISO-2022-JP");

        if $z3 == 0 goto label2;

     label1:
        r0.<nu.xom.GenericWriter: boolean isJapanese> = 1;

        goto label3;

     label2:
        r0.<nu.xom.GenericWriter: boolean isJapanese> = 0;

     label3:
        return;
    }

    boolean needsEscaping(char)
    {
        java.lang.Throwable $r5;
        byte[] $r4;
        java.io.ByteArrayOutputStream $r3, $r6, $r8, $r10, $r11;
        java.lang.Error $r7;
        byte $b2, $b3;
        int $i1, $i4, $i5, $i6, $i7, $i8, $i9;
        java.io.OutputStreamWriter $r1, $r2;
        boolean $z0, $z1, z2;
        char c0;
        java.io.IOException $r9;
        nu.xom.GenericWriter r0;

        r0 := @this: nu.xom.GenericWriter;

        c0 := @parameter0: char;

        $i4 = (int) c0;

        if $i4 > 127 goto label01;

        return 0;

     label01:
        $z0 = r0.<nu.xom.GenericWriter: boolean isJapanese>;

        if $z0 == 0 goto label03;

        $i5 = (int) c0;

        if $i5 != 165 goto label02;

        return 1;

     label02:
        $i6 = (int) c0;

        if $i6 != 8254 goto label03;

        return 1;

     label03:
        z2 = 0;

     label04:
        $r1 = r0.<nu.xom.GenericWriter: java.io.OutputStreamWriter wout>;

        $i7 = (int) c0;

        virtualinvoke $r1.<java.io.OutputStreamWriter: void write(int)>($i7);

        $r2 = r0.<nu.xom.GenericWriter: java.io.OutputStreamWriter wout>;

        virtualinvoke $r2.<java.io.OutputStreamWriter: void flush()>();

        $r3 = r0.<nu.xom.GenericWriter: java.io.ByteArrayOutputStream bout>;

        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i1 = lengthof $r4;

        if $i1 != 0 goto label05;

        z2 = 1;

        goto label07;

     label05:
        $b2 = $r4[0];

        $i8 = (int) $b2;

        if $i8 != 63 goto label06;

        z2 = 1;

        goto label07;

     label06:
        $z1 = r0.<nu.xom.GenericWriter: boolean isJapanese>;

        if $z1 == 0 goto label07;

        $b3 = $r4[0];

        $i9 = (int) $b3;

        if $i9 != 33 goto label07;

        z2 = 1;

     label07:
        $r11 = r0.<nu.xom.GenericWriter: java.io.ByteArrayOutputStream bout>;

        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void reset()>();

        goto label14;

     label08:
        $r9 := @caughtexception;

     label09:
        $r10 = r0.<nu.xom.GenericWriter: java.io.ByteArrayOutputStream bout>;

        virtualinvoke $r10.<java.io.ByteArrayOutputStream: void reset()>();

        return 1;

     label10:
        $r7 := @caughtexception;

     label11:
        $r8 = r0.<nu.xom.GenericWriter: java.io.ByteArrayOutputStream bout>;

        virtualinvoke $r8.<java.io.ByteArrayOutputStream: void reset()>();

        return 1;

     label12:
        $r5 := @caughtexception;

     label13:
        $r6 = r0.<nu.xom.GenericWriter: java.io.ByteArrayOutputStream bout>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void reset()>();

        throw $r5;

     label14:
        return z2;

        catch java.io.IOException from label04 to label07 with label08;
        catch java.lang.Error from label04 to label07 with label10;
        catch java.lang.Throwable from label04 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }
}
