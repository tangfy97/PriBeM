public final class com.hp.hpl.jena.sparql.core.TriplePath extends java.lang.Object
{
    private final com.hp.hpl.jena.graph.Node subject;
    private final com.hp.hpl.jena.graph.Node predicate;
    private final com.hp.hpl.jena.sparql.path.Path path;
    private final com.hp.hpl.jena.graph.Node object;
    private com.hp.hpl.jena.graph.Triple triple;
    private int hash;

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.path.P_Link $r4;
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.graph.Node r1, r2, $r5, $r7, $r8;
        com.hp.hpl.jena.graph.Triple $r9;
        com.hp.hpl.jena.sparql.path.Path r3;
        int $i1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.sparql.path.Path;

        r2 := @parameter2: com.hp.hpl.jena.graph.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple> = null;

        $i1 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: int hash> = $i1;

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject> = r1;

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object> = r2;

        $z0 = r3 instanceof com.hp.hpl.jena.sparql.path.P_Link;

        if $z0 == 0 goto label1;

        $r4 = (com.hp.hpl.jena.sparql.path.P_Link) r3;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.path.P_Link: com.hp.hpl.jena.graph.Node getNode()>();

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node predicate> = $r5;

        $r9 = new com.hp.hpl.jena.graph.Triple;

        $r8 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject>;

        $r7 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node predicate>;

        specialinvoke $r9.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r8, $r7, r2);

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple> = $r9;

        goto label2;

     label1:
        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node predicate> = null;

     label2:
        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path> = r3;

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.sparql.path.P_Link $r9;
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.graph.Node $r2, $r3, $r4, $r5, $r6, $r8;
        com.hp.hpl.jena.graph.Triple r1;
        int $i1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple> = null;

        $i1 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: int hash> = $i1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject> = $r2;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        $z0 = virtualinvoke $r3.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 == 0 goto label1;

        $r9 = new com.hp.hpl.jena.sparql.path.P_Link;

        $r8 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        specialinvoke $r9.<com.hp.hpl.jena.sparql.path.P_Link: void <init>(com.hp.hpl.jena.graph.Node)>($r8);

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path> = $r9;

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node predicate> = $r3;

        goto label2;

     label1:
        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path> = null;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node predicate> = $r4;

     label2:
        $r5 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object> = $r5;

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple> = r1;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        if $r6 != null goto label3;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Triple predicate is null");

     label3:
        return;
    }

    public com.hp.hpl.jena.graph.Node getSubject()
    {
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject>;

        return $r1;
    }

    public com.hp.hpl.jena.sparql.path.Path getPath()
    {
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.sparql.path.Path $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path>;

        return $r1;
    }

    public com.hp.hpl.jena.graph.Node getPredicate()
    {
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node predicate>;

        return $r1;
    }

    public com.hp.hpl.jena.graph.Node getObject()
    {
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object>;

        return $r1;
    }

    public boolean isTriple()
    {
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.graph.Triple $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple>;

        if $r1 != null goto label1;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node predicate>;

        if $r2 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public com.hp.hpl.jena.graph.Triple asTriple()
    {
        com.hp.hpl.jena.sparql.path.P_Link $r6;
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.graph.Node $r7, $r8, $r9;
        com.hp.hpl.jena.graph.Triple $r1, $r3, $r4, $r10;
        com.hp.hpl.jena.sparql.path.Path $r2, $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple>;

        if $r1 == null goto label1;

        $r10 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple>;

        return $r10;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path>;

        $z0 = $r2 instanceof com.hp.hpl.jena.sparql.path.P_Link;

        if $z0 == 0 goto label2;

        $r4 = new com.hp.hpl.jena.graph.Triple;

        $r7 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject>;

        $r5 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path>;

        $r6 = (com.hp.hpl.jena.sparql.path.P_Link) $r5;

        $r8 = virtualinvoke $r6.<com.hp.hpl.jena.sparql.path.P_Link: com.hp.hpl.jena.graph.Node getNode()>();

        $r9 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object>;

        specialinvoke $r4.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r7, $r8, $r9);

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple> = $r4;

     label2:
        $r3 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple triple>;

        return $r3;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.graph.Node $r1, $r3;
        com.hp.hpl.jena.sparql.path.Path $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        boolean $z0;
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        com.hp.hpl.jena.graph.Triple $r4;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        $i0 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: int hash>;

        $i11 = (int) -1;

        if $i0 != $i11 goto label2;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.TriplePath: boolean isTriple()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple asTriple()>();

        $i8 = virtualinvoke $r4.<com.hp.hpl.jena.graph.Triple: int hashCode()>();

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: int hash> = $i8;

        goto label2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject>;

        $i1 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: int hashCode()>();

        $i2 = $i1 << 2;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path>;

        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i4 = $i2 ^ $i3;

        $r3 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object>;

        $i5 = virtualinvoke $r3.<com.hp.hpl.jena.graph.Node: int hashCode()>();

        $i6 = $i5 << 1;

        $i7 = $i4 ^ $i6;

        r0.<com.hp.hpl.jena.sparql.core.TriplePath: int hash> = $i7;

     label2:
        $i9 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: int hash>;

        return $i9;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.graph.Node $r3, $r4, $r5, $r6;
        com.hp.hpl.jena.sparql.path.Path $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.hp.hpl.jena.sparql.core.TriplePath r0, r2;
        com.hp.hpl.jena.graph.Triple $r9, $r10;
        java.lang.Object r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.sparql.core.TriplePath;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.hp.hpl.jena.sparql.core.TriplePath) r1;

        $z1 = virtualinvoke r2.<com.hp.hpl.jena.sparql.core.TriplePath: boolean isTriple()>();

        $z2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.TriplePath: boolean isTriple()>();

        $z3 = $z1 ^ $z2;

        if $z3 == 0 goto label3;

        return 0;

     label3:
        $z4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.TriplePath: boolean isTriple()>();

        if $z4 == 0 goto label4;

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple asTriple()>();

        $r10 = virtualinvoke r2.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Triple asTriple()>();

        $z8 = virtualinvoke $r9.<com.hp.hpl.jena.graph.Triple: boolean equals(java.lang.Object)>($r10);

        return $z8;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject>;

        $r3 = r2.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject>;

        $z5 = virtualinvoke $r4.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>($r3);

        if $z5 == 0 goto label5;

        $r6 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object>;

        $r5 = r2.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object>;

        $z6 = virtualinvoke $r6.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>($r5);

        if $z6 == 0 goto label5;

        $r8 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path>;

        $r7 = r2.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path>;

        $z7 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z7 == 0 goto label5;

        $z9 = 1;

        goto label6;

     label5:
        $z9 = 0;

     label6:
        return $z9;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.graph.Node $r3, $r6, $r9, $r13, $r19;
        com.hp.hpl.jena.sparql.path.Path $r1, $r16;
        java.lang.String $r11, $r21;
        com.hp.hpl.jena.sparql.core.TriplePath r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r8, $r10, $r12, $r14, $r15, $r17, $r18, $r20;

        r0 := @this: com.hp.hpl.jena.sparql.core.TriplePath;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path>;

        if $r1 == null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r16 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path path>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r19 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node subject>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node predicate>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = r0.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node object>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
