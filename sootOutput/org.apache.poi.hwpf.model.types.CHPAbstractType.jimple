public abstract class org.apache.poi.hwpf.model.types.CHPAbstractType extends java.lang.Object
{
    protected int field_1_grpfChp;
    private static final org.apache.poi.util.BitField fBold;
    private static final org.apache.poi.util.BitField fItalic;
    private static final org.apache.poi.util.BitField fRMarkDel;
    private static final org.apache.poi.util.BitField fOutline;
    private static final org.apache.poi.util.BitField fFldVanish;
    private static final org.apache.poi.util.BitField fSmallCaps;
    private static final org.apache.poi.util.BitField fCaps;
    private static final org.apache.poi.util.BitField fVanish;
    private static final org.apache.poi.util.BitField fRMark;
    private static final org.apache.poi.util.BitField fSpec;
    private static final org.apache.poi.util.BitField fStrike;
    private static final org.apache.poi.util.BitField fObj;
    private static final org.apache.poi.util.BitField fShadow;
    private static final org.apache.poi.util.BitField fLowerCase;
    private static final org.apache.poi.util.BitField fData;
    private static final org.apache.poi.util.BitField fOle2;
    private static final org.apache.poi.util.BitField fEmboss;
    private static final org.apache.poi.util.BitField fImprint;
    private static final org.apache.poi.util.BitField fDStrike;
    private static final org.apache.poi.util.BitField fUsePgsuSettings;
    private static final org.apache.poi.util.BitField fBoldBi;
    private static final org.apache.poi.util.BitField fComplexScripts;
    private static final org.apache.poi.util.BitField fItalicBi;
    private static final org.apache.poi.util.BitField fBiDi;
    private static final org.apache.poi.util.BitField fIcoBi;
    private static final org.apache.poi.util.BitField fNonGlyph;
    private static final org.apache.poi.util.BitField fBoldOther;
    private static final org.apache.poi.util.BitField fItalicOther;
    private static final org.apache.poi.util.BitField fNoProof;
    private static final org.apache.poi.util.BitField fWebHidden;
    private static final org.apache.poi.util.BitField fFitText;
    private static final org.apache.poi.util.BitField fCalc;
    private static final org.apache.poi.util.BitField fFmtLineProp;
    protected int field_2_hps;
    protected int field_3_ftcAscii;
    protected int field_4_ftcFE;
    protected int field_5_ftcOther;
    protected int field_6_ftcBi;
    protected int field_7_dxaSpace;
    protected org.apache.poi.hwpf.model.Colorref field_8_cv;
    protected byte field_9_ico;
    protected int field_10_pctCharWidth;
    protected int field_11_lidDefault;
    protected int field_12_lidFE;
    protected byte field_13_kcd;
    protected static final byte KCD_NON;
    protected static final byte KCD_DOT;
    protected static final byte KCD_COMMA;
    protected static final byte KCD_CIRCLE;
    protected static final byte KCD_UNDER_DOT;
    protected boolean field_14_fUndetermine;
    protected byte field_15_iss;
    protected static final byte ISS_NONE;
    protected static final byte ISS_SUPERSCRIPTED;
    protected static final byte ISS_SUBSCRIPTED;
    protected boolean field_16_fSpecSymbol;
    protected byte field_17_idct;
    protected byte field_18_idctHint;
    protected byte field_19_kul;
    protected static final byte KUL_NONE;
    protected static final byte KUL_SINGLE;
    protected static final byte KUL_BY_WORD;
    protected static final byte KUL_DOUBLE;
    protected static final byte KUL_DOTTED;
    protected static final byte KUL_HIDDEN;
    protected static final byte KUL_THICK;
    protected static final byte KUL_DASH;
    protected static final byte KUL_DOT;
    protected static final byte KUL_DOT_DASH;
    protected static final byte KUL_DOT_DOT_DASH;
    protected static final byte KUL_WAVE;
    protected static final byte KUL_DOTTED_HEAVY;
    protected static final byte KUL_DASHED_HEAVY;
    protected static final byte KUL_DOT_DASH_HEAVY;
    protected static final byte KUL_DOT_DOT_DASH_HEAVY;
    protected static final byte KUL_WAVE_HEAVY;
    protected static final byte KUL_DASH_LONG;
    protected static final byte KUL_WAVE_DOUBLE;
    protected static final byte KUL_DASH_LONG_HEAVY;
    protected org.apache.poi.hwpf.model.Hyphenation field_20_hresi;
    protected int field_21_hpsKern;
    protected short field_22_hpsPos;
    protected org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd;
    protected org.apache.poi.hwpf.usermodel.BorderCode field_24_brc;
    protected int field_25_ibstRMark;
    protected byte field_26_sfxtText;
    protected static final byte SFXTTEXT_NO;
    protected static final byte SFXTTEXT_LAS_VEGAS_LIGHTS;
    protected static final byte SFXTTEXT_BACKGROUND_BLINK;
    protected static final byte SFXTTEXT_SPARKLE_TEXT;
    protected static final byte SFXTTEXT_MARCHING_ANTS;
    protected static final byte SFXTTEXT_MARCHING_RED_ANTS;
    protected static final byte SFXTTEXT_SHIMMER;
    protected boolean field_27_fDblBdr;
    protected boolean field_28_fBorderWS;
    protected short field_29_ufel;
    private static final org.apache.poi.util.BitField itypFELayout;
    private static final org.apache.poi.util.BitField fTNY;
    private static final org.apache.poi.util.BitField fWarichu;
    private static final org.apache.poi.util.BitField fKumimoji;
    private static final org.apache.poi.util.BitField fRuby;
    private static final org.apache.poi.util.BitField fLSFitText;
    private static final org.apache.poi.util.BitField spare;
    protected byte field_30_copt;
    private static final org.apache.poi.util.BitField iWarichuBracket;
    private static final org.apache.poi.util.BitField fWarichuNoOpenBracket;
    private static final org.apache.poi.util.BitField fTNYCompress;
    private static final org.apache.poi.util.BitField fTNYFetchTxm;
    private static final org.apache.poi.util.BitField fCellFitText;
    private static final org.apache.poi.util.BitField unused;
    protected int field_31_hpsAsci;
    protected int field_32_hpsFE;
    protected int field_33_hpsBi;
    protected int field_34_ftcSym;
    protected int field_35_xchSym;
    protected int field_36_fcPic;
    protected int field_37_fcObj;
    protected int field_38_lTagObj;
    protected int field_39_fcData;
    protected org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld;
    protected int field_41_ibstRMarkDel;
    protected org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark;
    protected org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel;
    protected int field_44_istd;
    protected int field_45_idslRMReason;
    protected int field_46_idslReasonDel;
    protected int field_47_cpg;
    protected short field_48_Highlight;
    private static final org.apache.poi.util.BitField icoHighlight;
    private static final org.apache.poi.util.BitField fHighlight;
    protected short field_49_CharsetFlags;
    private static final org.apache.poi.util.BitField fChsDiff;
    private static final org.apache.poi.util.BitField fMacChs;
    protected short field_50_chse;
    protected boolean field_51_fPropRMark;
    protected int field_52_ibstPropRMark;
    protected org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark;
    protected boolean field_54_fConflictOrig;
    protected boolean field_55_fConflictOtherDel;
    protected int field_56_wConflict;
    protected int field_57_IbstConflict;
    protected org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict;
    protected boolean field_59_fDispFldRMark;
    protected int field_60_ibstDispFldRMark;
    protected org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark;
    protected byte[] field_62_xstDispFldRMark;
    protected int field_63_fcObjp;
    protected byte field_64_lbrCRJ;
    protected static final byte LBRCRJ_NONE;
    protected static final byte LBRCRJ_LEFT;
    protected static final byte LBRCRJ_RIGHT;
    protected static final byte LBRCRJ_BOTH;
    protected boolean field_65_fSpecVanish;
    protected boolean field_66_fHasOldProps;
    protected boolean field_67_fSdtVanish;
    protected int field_68_wCharScale;

    protected void <init>()
    {
        byte[] $r11;
        org.apache.poi.hwpf.usermodel.BorderCode $r15;
        org.apache.poi.hwpf.model.Colorref $r12;
        org.apache.poi.hwpf.usermodel.DateAndTime $r17, $r18, $r19, $r20, $r21;
        org.apache.poi.hwpf.model.Hyphenation $r13, $r16;
        int $i1;
        org.apache.poi.hwpf.usermodel.ShadingDescriptor $r14;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_2_hps> = 20;

        $r12 = new org.apache.poi.hwpf.model.Colorref;

        specialinvoke $r12.<org.apache.poi.hwpf.model.Colorref: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv> = $r12;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_11_lidDefault> = 1024;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_12_lidFE> = 1024;

        $r13 = new org.apache.poi.hwpf.model.Hyphenation;

        specialinvoke $r13.<org.apache.poi.hwpf.model.Hyphenation: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi> = $r13;

        $r14 = new org.apache.poi.hwpf.usermodel.ShadingDescriptor;

        specialinvoke $r14.<org.apache.poi.hwpf.usermodel.ShadingDescriptor: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd> = $r14;

        $r15 = new org.apache.poi.hwpf.usermodel.BorderCode;

        specialinvoke $r15.<org.apache.poi.hwpf.usermodel.BorderCode: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc> = $r15;

        $i1 = (int) -1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_36_fcPic> = $i1;

        $r16 = new org.apache.poi.hwpf.model.Hyphenation;

        specialinvoke $r16.<org.apache.poi.hwpf.model.Hyphenation: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld> = $r16;

        $r17 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        specialinvoke $r17.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark> = $r17;

        $r18 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        specialinvoke $r18.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel> = $r18;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_44_istd> = 10;

        $r19 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        specialinvoke $r19.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark> = $r19;

        $r20 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        specialinvoke $r20.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict> = $r20;

        $r21 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        specialinvoke $r21.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark> = $r21;

        $r11 = newarray (byte)[32];

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte[] field_62_xstDispFldRMark> = $r11;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_68_wCharScale> = 100;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r35, $r36;
        byte $b14, $b15, $b22, $b23, $b24, $b25, $b26, $b27, $b28, $b29, $b30, $b31, $b38, $b39, $b42, $b43, $b88, $b89;
        short $s34, $s35, $s40, $s41, $s72, $s73, $s74, $s75, $s76, $s77;
        org.apache.poi.hwpf.usermodel.BorderCode $r14, $r15, $r16, $r43;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0, r4;
        org.apache.poi.hwpf.usermodel.DateAndTime $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r38, $r39, $r40, $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21, $i32, $i33, $i36, $i37, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119;
        org.apache.poi.hwpf.model.Colorref $r5, $r6, $r7, $r46;
        org.apache.poi.hwpf.model.Hyphenation $r8, $r9, $r10, $r17, $r18, $r19, $r42, $r45;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        org.apache.poi.hwpf.usermodel.ShadingDescriptor $r11, $r12, $r13, $r44;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 != null goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

        return 0;

     label03:
        r4 = (org.apache.poi.hwpf.model.types.CHPAbstractType) r1;

        $i1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i0 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        if $i1 == $i0 goto label04;

        return 0;

     label04:
        $i3 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_2_hps>;

        $i2 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_2_hps>;

        if $i3 == $i2 goto label05;

        return 0;

     label05:
        $i5 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_3_ftcAscii>;

        $i4 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_3_ftcAscii>;

        if $i5 == $i4 goto label06;

        return 0;

     label06:
        $i7 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_4_ftcFE>;

        $i6 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_4_ftcFE>;

        if $i7 == $i6 goto label07;

        return 0;

     label07:
        $i9 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_5_ftcOther>;

        $i8 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_5_ftcOther>;

        if $i9 == $i8 goto label08;

        return 0;

     label08:
        $i11 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_6_ftcBi>;

        $i10 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_6_ftcBi>;

        if $i11 == $i10 goto label09;

        return 0;

     label09:
        $i13 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_7_dxaSpace>;

        $i12 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_7_dxaSpace>;

        if $i13 == $i12 goto label10;

        return 0;

     label10:
        $r5 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv>;

        if $r5 != null goto label11;

        $r46 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv>;

        if $r46 == null goto label12;

        return 0;

     label11:
        $r7 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv>;

        $r6 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv>;

        $z0 = virtualinvoke $r7.<org.apache.poi.hwpf.model.Colorref: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label12;

        return 0;

     label12:
        $b15 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_9_ico>;

        $b14 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_9_ico>;

        $i92 = (int) $b15;

        $i93 = (int) $b14;

        if $i92 == $i93 goto label13;

        return 0;

     label13:
        $i17 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_10_pctCharWidth>;

        $i16 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_10_pctCharWidth>;

        if $i17 == $i16 goto label14;

        return 0;

     label14:
        $i19 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_11_lidDefault>;

        $i18 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_11_lidDefault>;

        if $i19 == $i18 goto label15;

        return 0;

     label15:
        $i21 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_12_lidFE>;

        $i20 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_12_lidFE>;

        if $i21 == $i20 goto label16;

        return 0;

     label16:
        $b23 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_13_kcd>;

        $b22 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_13_kcd>;

        $i94 = (int) $b23;

        $i95 = (int) $b22;

        if $i94 == $i95 goto label17;

        return 0;

     label17:
        $z2 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_14_fUndetermine>;

        $z1 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_14_fUndetermine>;

        if $z2 == $z1 goto label18;

        return 0;

     label18:
        $b25 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_15_iss>;

        $b24 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_15_iss>;

        $i96 = (int) $b25;

        $i97 = (int) $b24;

        if $i96 == $i97 goto label19;

        return 0;

     label19:
        $z4 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_16_fSpecSymbol>;

        $z3 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_16_fSpecSymbol>;

        if $z4 == $z3 goto label20;

        return 0;

     label20:
        $b27 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_17_idct>;

        $b26 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_17_idct>;

        $i98 = (int) $b27;

        $i99 = (int) $b26;

        if $i98 == $i99 goto label21;

        return 0;

     label21:
        $b29 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_18_idctHint>;

        $b28 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_18_idctHint>;

        $i100 = (int) $b29;

        $i101 = (int) $b28;

        if $i100 == $i101 goto label22;

        return 0;

     label22:
        $b31 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_19_kul>;

        $b30 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_19_kul>;

        $i102 = (int) $b31;

        $i103 = (int) $b30;

        if $i102 == $i103 goto label23;

        return 0;

     label23:
        $r8 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi>;

        if $r8 != null goto label24;

        $r45 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi>;

        if $r45 == null goto label25;

        return 0;

     label24:
        $r10 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi>;

        $r9 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi>;

        $z5 = virtualinvoke $r10.<org.apache.poi.hwpf.model.Hyphenation: boolean equals(java.lang.Object)>($r9);

        if $z5 != 0 goto label25;

        return 0;

     label25:
        $i33 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_21_hpsKern>;

        $i32 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_21_hpsKern>;

        if $i33 == $i32 goto label26;

        return 0;

     label26:
        $s35 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_22_hpsPos>;

        $s34 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_22_hpsPos>;

        $i104 = (int) $s35;

        $i105 = (int) $s34;

        if $i104 == $i105 goto label27;

        return 0;

     label27:
        $r11 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd>;

        if $r11 != null goto label28;

        $r44 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd>;

        if $r44 == null goto label29;

        return 0;

     label28:
        $r13 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd>;

        $r12 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd>;

        $z6 = virtualinvoke $r13.<org.apache.poi.hwpf.usermodel.ShadingDescriptor: boolean equals(java.lang.Object)>($r12);

        if $z6 != 0 goto label29;

        return 0;

     label29:
        $r14 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc>;

        if $r14 != null goto label30;

        $r43 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc>;

        if $r43 == null goto label31;

        return 0;

     label30:
        $r16 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc>;

        $r15 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc>;

        $z7 = virtualinvoke $r16.<org.apache.poi.hwpf.usermodel.BorderCode: boolean equals(java.lang.Object)>($r15);

        if $z7 != 0 goto label31;

        return 0;

     label31:
        $i37 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_25_ibstRMark>;

        $i36 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_25_ibstRMark>;

        if $i37 == $i36 goto label32;

        return 0;

     label32:
        $b39 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_26_sfxtText>;

        $b38 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_26_sfxtText>;

        $i106 = (int) $b39;

        $i107 = (int) $b38;

        if $i106 == $i107 goto label33;

        return 0;

     label33:
        $z9 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_27_fDblBdr>;

        $z8 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_27_fDblBdr>;

        if $z9 == $z8 goto label34;

        return 0;

     label34:
        $z11 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_28_fBorderWS>;

        $z10 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_28_fBorderWS>;

        if $z11 == $z10 goto label35;

        return 0;

     label35:
        $s41 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $s40 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i108 = (int) $s41;

        $i109 = (int) $s40;

        if $i108 == $i109 goto label36;

        return 0;

     label36:
        $b43 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $b42 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i110 = (int) $b43;

        $i111 = (int) $b42;

        if $i110 == $i111 goto label37;

        return 0;

     label37:
        $i45 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_31_hpsAsci>;

        $i44 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_31_hpsAsci>;

        if $i45 == $i44 goto label38;

        return 0;

     label38:
        $i47 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_32_hpsFE>;

        $i46 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_32_hpsFE>;

        if $i47 == $i46 goto label39;

        return 0;

     label39:
        $i49 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_33_hpsBi>;

        $i48 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_33_hpsBi>;

        if $i49 == $i48 goto label40;

        return 0;

     label40:
        $i51 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_34_ftcSym>;

        $i50 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_34_ftcSym>;

        if $i51 == $i50 goto label41;

        return 0;

     label41:
        $i53 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_35_xchSym>;

        $i52 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_35_xchSym>;

        if $i53 == $i52 goto label42;

        return 0;

     label42:
        $i55 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_36_fcPic>;

        $i54 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_36_fcPic>;

        if $i55 == $i54 goto label43;

        return 0;

     label43:
        $i57 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_37_fcObj>;

        $i56 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_37_fcObj>;

        if $i57 == $i56 goto label44;

        return 0;

     label44:
        $i59 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_38_lTagObj>;

        $i58 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_38_lTagObj>;

        if $i59 == $i58 goto label45;

        return 0;

     label45:
        $i61 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_39_fcData>;

        $i60 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_39_fcData>;

        if $i61 == $i60 goto label46;

        return 0;

     label46:
        $r17 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld>;

        if $r17 != null goto label47;

        $r42 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld>;

        if $r42 == null goto label48;

        return 0;

     label47:
        $r19 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld>;

        $r18 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld>;

        $z12 = virtualinvoke $r19.<org.apache.poi.hwpf.model.Hyphenation: boolean equals(java.lang.Object)>($r18);

        if $z12 != 0 goto label48;

        return 0;

     label48:
        $i63 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_41_ibstRMarkDel>;

        $i62 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_41_ibstRMarkDel>;

        if $i63 == $i62 goto label49;

        return 0;

     label49:
        $r20 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark>;

        if $r20 != null goto label50;

        $r41 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark>;

        if $r41 == null goto label51;

        return 0;

     label50:
        $r22 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark>;

        $r21 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark>;

        $z13 = virtualinvoke $r22.<org.apache.poi.hwpf.usermodel.DateAndTime: boolean equals(java.lang.Object)>($r21);

        if $z13 != 0 goto label51;

        return 0;

     label51:
        $r23 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel>;

        if $r23 != null goto label52;

        $r40 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel>;

        if $r40 == null goto label53;

        return 0;

     label52:
        $r25 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel>;

        $r24 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel>;

        $z14 = virtualinvoke $r25.<org.apache.poi.hwpf.usermodel.DateAndTime: boolean equals(java.lang.Object)>($r24);

        if $z14 != 0 goto label53;

        return 0;

     label53:
        $i65 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_44_istd>;

        $i64 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_44_istd>;

        if $i65 == $i64 goto label54;

        return 0;

     label54:
        $i67 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_45_idslRMReason>;

        $i66 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_45_idslRMReason>;

        if $i67 == $i66 goto label55;

        return 0;

     label55:
        $i69 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_46_idslReasonDel>;

        $i68 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_46_idslReasonDel>;

        if $i69 == $i68 goto label56;

        return 0;

     label56:
        $i71 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_47_cpg>;

        $i70 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_47_cpg>;

        if $i71 == $i70 goto label57;

        return 0;

     label57:
        $s73 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight>;

        $s72 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight>;

        $i112 = (int) $s73;

        $i113 = (int) $s72;

        if $i112 == $i113 goto label58;

        return 0;

     label58:
        $s75 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags>;

        $s74 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags>;

        $i114 = (int) $s75;

        $i115 = (int) $s74;

        if $i114 == $i115 goto label59;

        return 0;

     label59:
        $s77 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_50_chse>;

        $s76 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_50_chse>;

        $i116 = (int) $s77;

        $i117 = (int) $s76;

        if $i116 == $i117 goto label60;

        return 0;

     label60:
        $z16 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_51_fPropRMark>;

        $z15 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_51_fPropRMark>;

        if $z16 == $z15 goto label61;

        return 0;

     label61:
        $i79 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_52_ibstPropRMark>;

        $i78 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_52_ibstPropRMark>;

        if $i79 == $i78 goto label62;

        return 0;

     label62:
        $r26 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark>;

        if $r26 != null goto label63;

        $r39 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark>;

        if $r39 == null goto label64;

        return 0;

     label63:
        $r28 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark>;

        $r27 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark>;

        $z17 = virtualinvoke $r28.<org.apache.poi.hwpf.usermodel.DateAndTime: boolean equals(java.lang.Object)>($r27);

        if $z17 != 0 goto label64;

        return 0;

     label64:
        $z19 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_54_fConflictOrig>;

        $z18 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_54_fConflictOrig>;

        if $z19 == $z18 goto label65;

        return 0;

     label65:
        $z21 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_55_fConflictOtherDel>;

        $z20 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_55_fConflictOtherDel>;

        if $z21 == $z20 goto label66;

        return 0;

     label66:
        $i81 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_56_wConflict>;

        $i80 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_56_wConflict>;

        if $i81 == $i80 goto label67;

        return 0;

     label67:
        $i83 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_57_IbstConflict>;

        $i82 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_57_IbstConflict>;

        if $i83 == $i82 goto label68;

        return 0;

     label68:
        $r29 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict>;

        if $r29 != null goto label69;

        $r38 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict>;

        if $r38 == null goto label70;

        return 0;

     label69:
        $r31 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict>;

        $r30 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict>;

        $z22 = virtualinvoke $r31.<org.apache.poi.hwpf.usermodel.DateAndTime: boolean equals(java.lang.Object)>($r30);

        if $z22 != 0 goto label70;

        return 0;

     label70:
        $z24 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_59_fDispFldRMark>;

        $z23 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_59_fDispFldRMark>;

        if $z24 == $z23 goto label71;

        return 0;

     label71:
        $i85 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_60_ibstDispFldRMark>;

        $i84 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_60_ibstDispFldRMark>;

        if $i85 == $i84 goto label72;

        return 0;

     label72:
        $r32 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark>;

        if $r32 != null goto label73;

        $r37 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark>;

        if $r37 == null goto label74;

        return 0;

     label73:
        $r34 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark>;

        $r33 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark>;

        $z25 = virtualinvoke $r34.<org.apache.poi.hwpf.usermodel.DateAndTime: boolean equals(java.lang.Object)>($r33);

        if $z25 != 0 goto label74;

        return 0;

     label74:
        $r36 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte[] field_62_xstDispFldRMark>;

        $r35 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte[] field_62_xstDispFldRMark>;

        $z26 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r36, $r35);

        if $z26 != 0 goto label75;

        return 0;

     label75:
        $i87 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_63_fcObjp>;

        $i86 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_63_fcObjp>;

        if $i87 == $i86 goto label76;

        return 0;

     label76:
        $b89 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_64_lbrCRJ>;

        $b88 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_64_lbrCRJ>;

        $i118 = (int) $b89;

        $i119 = (int) $b88;

        if $i118 == $i119 goto label77;

        return 0;

     label77:
        $z28 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_65_fSpecVanish>;

        $z27 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_65_fSpecVanish>;

        if $z28 == $z27 goto label78;

        return 0;

     label78:
        $z30 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_66_fHasOldProps>;

        $z29 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_66_fHasOldProps>;

        if $z30 == $z29 goto label79;

        return 0;

     label79:
        $z32 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_67_fSdtVanish>;

        $z31 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_67_fSdtVanish>;

        if $z32 == $z31 goto label80;

        return 0;

     label80:
        $i91 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_68_wCharScale>;

        $i90 = r4.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_68_wCharScale>;

        if $i91 == $i90 goto label81;

        return 0;

     label81:
        return 1;
    }

    public int hashCode()
    {
        byte[] $r21;
        byte $b14, $b22, $b25, $b28, $b30, $b32, $b43, $b49, $b107;
        short $s37, $s47, $s82, $s84, $s86, $s183, $s184, $s188, $s189, $s193, $s195, $s196, $s198, $s200, $s201, $s202;
        org.apache.poi.hwpf.usermodel.BorderCode $r7, $r8;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        org.apache.poi.hwpf.usermodel.DateAndTime $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i26, $i27, $i29, $i31, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i41, $i42, $i44, $i45, $i46, $i48, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i83, $i85, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, i175, i176, i177, i178, i179, i180, i181, $i182, $i185, $i186, $i187, $i190, $i191, $i192, $i194, $i197, $i199, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216;
        org.apache.poi.hwpf.model.Colorref $r1, $r2;
        org.apache.poi.hwpf.model.Hyphenation $r3, $r4, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.poi.hwpf.usermodel.ShadingDescriptor $r5, $r6;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        i175 = 31 + $i0;

        $i2 = 31 * i175;

        $i1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_2_hps>;

        i176 = $i2 + $i1;

        $i4 = 31 * i176;

        $i3 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_3_ftcAscii>;

        i177 = $i4 + $i3;

        $i6 = 31 * i177;

        $i5 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_4_ftcFE>;

        i178 = $i6 + $i5;

        $i8 = 31 * i178;

        $i7 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_5_ftcOther>;

        i179 = $i8 + $i7;

        $i10 = 31 * i179;

        $i9 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_6_ftcBi>;

        i180 = $i10 + $i9;

        $i12 = 31 * i180;

        $i11 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_7_dxaSpace>;

        i181 = $i12 + $i11;

        $i13 = 31 * i181;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv>;

        if $r1 != null goto label01;

        $i182 = 0;

        goto label02;

     label01:
        $r2 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv>;

        $i182 = virtualinvoke $r2.<org.apache.poi.hwpf.model.Colorref: int hashCode()>();

     label02:
        $i169 = $i13 + $i182;

        $i15 = 31 * $i169;

        $b14 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_9_ico>;

        $i203 = (int) $b14;

        $i170 = $i15 + $i203;

        $i17 = 31 * $i170;

        $i16 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_10_pctCharWidth>;

        $i171 = $i17 + $i16;

        $i19 = 31 * $i171;

        $i18 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_11_lidDefault>;

        $i172 = $i19 + $i18;

        $i21 = 31 * $i172;

        $i20 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_12_lidFE>;

        $i173 = $i21 + $i20;

        $i23 = 31 * $i173;

        $b22 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_13_kcd>;

        $i204 = (int) $b22;

        $i174 = $i23 + $i204;

        $i24 = 31 * $i174;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_14_fUndetermine>;

        if $z0 == 0 goto label03;

        $s183 = 1231;

        goto label04;

     label03:
        $s183 = 1237;

     label04:
        $i167 = $i24 + $s183;

        $i26 = 31 * $i167;

        $b25 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_15_iss>;

        $i205 = (int) $b25;

        $i168 = $i26 + $i205;

        $i27 = 31 * $i168;

        $z1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_16_fSpecSymbol>;

        if $z1 == 0 goto label05;

        $s184 = 1231;

        goto label06;

     label05:
        $s184 = 1237;

     label06:
        $i163 = $i27 + $s184;

        $i29 = 31 * $i163;

        $b28 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_17_idct>;

        $i206 = (int) $b28;

        $i164 = $i29 + $i206;

        $i31 = 31 * $i164;

        $b30 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_18_idctHint>;

        $i207 = (int) $b30;

        $i165 = $i31 + $i207;

        $i33 = 31 * $i165;

        $b32 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_19_kul>;

        $i208 = (int) $b32;

        $i166 = $i33 + $i208;

        $i34 = 31 * $i166;

        $r3 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi>;

        if $r3 != null goto label07;

        $i185 = 0;

        goto label08;

     label07:
        $r4 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi>;

        $i185 = virtualinvoke $r4.<org.apache.poi.hwpf.model.Hyphenation: int hashCode()>();

     label08:
        $i160 = $i34 + $i185;

        $i36 = 31 * $i160;

        $i35 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_21_hpsKern>;

        $i161 = $i36 + $i35;

        $i38 = 31 * $i161;

        $s37 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_22_hpsPos>;

        $i209 = (int) $s37;

        $i162 = $i38 + $i209;

        $i39 = 31 * $i162;

        $r5 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd>;

        if $r5 != null goto label09;

        $i186 = 0;

        goto label10;

     label09:
        $r6 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd>;

        $i186 = virtualinvoke $r6.<org.apache.poi.hwpf.usermodel.ShadingDescriptor: int hashCode()>();

     label10:
        $i159 = $i39 + $i186;

        $i40 = 31 * $i159;

        $r7 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc>;

        if $r7 != null goto label11;

        $i187 = 0;

        goto label12;

     label11:
        $r8 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc>;

        $i187 = virtualinvoke $r8.<org.apache.poi.hwpf.usermodel.BorderCode: int hashCode()>();

     label12:
        $i156 = $i40 + $i187;

        $i42 = 31 * $i156;

        $i41 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_25_ibstRMark>;

        $i157 = $i42 + $i41;

        $i44 = 31 * $i157;

        $b43 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_26_sfxtText>;

        $i210 = (int) $b43;

        $i158 = $i44 + $i210;

        $i45 = 31 * $i158;

        $z2 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_27_fDblBdr>;

        if $z2 == 0 goto label13;

        $s188 = 1231;

        goto label14;

     label13:
        $s188 = 1237;

     label14:
        $i155 = $i45 + $s188;

        $i46 = 31 * $i155;

        $z3 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_28_fBorderWS>;

        if $z3 == 0 goto label15;

        $s189 = 1231;

        goto label16;

     label15:
        $s189 = 1237;

     label16:
        $i143 = $i46 + $s189;

        $i48 = 31 * $i143;

        $s47 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i211 = (int) $s47;

        $i144 = $i48 + $i211;

        $i50 = 31 * $i144;

        $b49 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i212 = (int) $b49;

        $i145 = $i50 + $i212;

        $i52 = 31 * $i145;

        $i51 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_31_hpsAsci>;

        $i146 = $i52 + $i51;

        $i54 = 31 * $i146;

        $i53 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_32_hpsFE>;

        $i147 = $i54 + $i53;

        $i56 = 31 * $i147;

        $i55 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_33_hpsBi>;

        $i148 = $i56 + $i55;

        $i58 = 31 * $i148;

        $i57 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_34_ftcSym>;

        $i149 = $i58 + $i57;

        $i60 = 31 * $i149;

        $i59 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_35_xchSym>;

        $i150 = $i60 + $i59;

        $i62 = 31 * $i150;

        $i61 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_36_fcPic>;

        $i151 = $i62 + $i61;

        $i64 = 31 * $i151;

        $i63 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_37_fcObj>;

        $i152 = $i64 + $i63;

        $i66 = 31 * $i152;

        $i65 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_38_lTagObj>;

        $i153 = $i66 + $i65;

        $i68 = 31 * $i153;

        $i67 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_39_fcData>;

        $i154 = $i68 + $i67;

        $i69 = 31 * $i154;

        $r9 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld>;

        if $r9 != null goto label17;

        $i190 = 0;

        goto label18;

     label17:
        $r10 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld>;

        $i190 = virtualinvoke $r10.<org.apache.poi.hwpf.model.Hyphenation: int hashCode()>();

     label18:
        $i141 = $i69 + $i190;

        $i71 = 31 * $i141;

        $i70 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_41_ibstRMarkDel>;

        $i142 = $i71 + $i70;

        $i72 = 31 * $i142;

        $r11 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark>;

        if $r11 != null goto label19;

        $i191 = 0;

        goto label20;

     label19:
        $r12 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark>;

        $i191 = virtualinvoke $r12.<org.apache.poi.hwpf.usermodel.DateAndTime: int hashCode()>();

     label20:
        $i140 = $i72 + $i191;

        $i73 = 31 * $i140;

        $r13 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel>;

        if $r13 != null goto label21;

        $i192 = 0;

        goto label22;

     label21:
        $r14 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel>;

        $i192 = virtualinvoke $r14.<org.apache.poi.hwpf.usermodel.DateAndTime: int hashCode()>();

     label22:
        $i132 = $i73 + $i192;

        $i75 = 31 * $i132;

        $i74 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_44_istd>;

        $i133 = $i75 + $i74;

        $i77 = 31 * $i133;

        $i76 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_45_idslRMReason>;

        $i134 = $i77 + $i76;

        $i79 = 31 * $i134;

        $i78 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_46_idslReasonDel>;

        $i135 = $i79 + $i78;

        $i81 = 31 * $i135;

        $i80 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_47_cpg>;

        $i136 = $i81 + $i80;

        $i83 = 31 * $i136;

        $s82 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight>;

        $i213 = (int) $s82;

        $i137 = $i83 + $i213;

        $i85 = 31 * $i137;

        $s84 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags>;

        $i214 = (int) $s84;

        $i138 = $i85 + $i214;

        $i87 = 31 * $i138;

        $s86 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_50_chse>;

        $i215 = (int) $s86;

        $i139 = $i87 + $i215;

        $i88 = 31 * $i139;

        $z4 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_51_fPropRMark>;

        if $z4 == 0 goto label23;

        $s193 = 1231;

        goto label24;

     label23:
        $s193 = 1237;

     label24:
        $i130 = $i88 + $s193;

        $i90 = 31 * $i130;

        $i89 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_52_ibstPropRMark>;

        $i131 = $i90 + $i89;

        $i91 = 31 * $i131;

        $r15 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark>;

        if $r15 != null goto label25;

        $i194 = 0;

        goto label26;

     label25:
        $r16 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark>;

        $i194 = virtualinvoke $r16.<org.apache.poi.hwpf.usermodel.DateAndTime: int hashCode()>();

     label26:
        $i129 = $i91 + $i194;

        $i92 = 31 * $i129;

        $z5 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_54_fConflictOrig>;

        if $z5 == 0 goto label27;

        $s195 = 1231;

        goto label28;

     label27:
        $s195 = 1237;

     label28:
        $i128 = $i92 + $s195;

        $i93 = 31 * $i128;

        $z6 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_55_fConflictOtherDel>;

        if $z6 == 0 goto label29;

        $s196 = 1231;

        goto label30;

     label29:
        $s196 = 1237;

     label30:
        $i125 = $i93 + $s196;

        $i95 = 31 * $i125;

        $i94 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_56_wConflict>;

        $i126 = $i95 + $i94;

        $i97 = 31 * $i126;

        $i96 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_57_IbstConflict>;

        $i127 = $i97 + $i96;

        $i98 = 31 * $i127;

        $r17 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict>;

        if $r17 != null goto label31;

        $i197 = 0;

        goto label32;

     label31:
        $r18 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict>;

        $i197 = virtualinvoke $r18.<org.apache.poi.hwpf.usermodel.DateAndTime: int hashCode()>();

     label32:
        $i124 = $i98 + $i197;

        $i99 = 31 * $i124;

        $z7 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_59_fDispFldRMark>;

        if $z7 == 0 goto label33;

        $s198 = 1231;

        goto label34;

     label33:
        $s198 = 1237;

     label34:
        $i122 = $i99 + $s198;

        $i101 = 31 * $i122;

        $i100 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_60_ibstDispFldRMark>;

        $i123 = $i101 + $i100;

        $i102 = 31 * $i123;

        $r19 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark>;

        if $r19 != null goto label35;

        $i199 = 0;

        goto label36;

     label35:
        $r20 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark>;

        $i199 = virtualinvoke $r20.<org.apache.poi.hwpf.usermodel.DateAndTime: int hashCode()>();

     label36:
        $i118 = $i102 + $i199;

        $i103 = 31 * $i118;

        $r21 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte[] field_62_xstDispFldRMark>;

        $i104 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r21);

        $i119 = $i103 + $i104;

        $i106 = 31 * $i119;

        $i105 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_63_fcObjp>;

        $i120 = $i106 + $i105;

        $i108 = 31 * $i120;

        $b107 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_64_lbrCRJ>;

        $i216 = (int) $b107;

        $i121 = $i108 + $i216;

        $i109 = 31 * $i121;

        $z8 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_65_fSpecVanish>;

        if $z8 == 0 goto label37;

        $s200 = 1231;

        goto label38;

     label37:
        $s200 = 1237;

     label38:
        $i117 = $i109 + $s200;

        $i110 = 31 * $i117;

        $z9 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_66_fHasOldProps>;

        if $z9 == 0 goto label39;

        $s201 = 1231;

        goto label40;

     label39:
        $s201 = 1237;

     label40:
        $i116 = $i110 + $s201;

        $i111 = 31 * $i116;

        $z10 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_67_fSdtVanish>;

        if $z10 == 0 goto label41;

        $s202 = 1231;

        goto label42;

     label41:
        $s202 = 1237;

     label42:
        $i114 = $i111 + $s202;

        $i113 = 31 * $i114;

        $i112 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_68_wCharScale>;

        $i115 = $i113 + $i112;

        return $i115;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r2;
        org.apache.poi.hwpf.usermodel.DateAndTime $r182, $r185, $r214, $r225, $r232;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i16, $i18, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67;
        java.lang.String $r249;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56;
        org.apache.poi.hwpf.usermodel.ShadingDescriptor $r115;
        byte[] $r235;
        byte $b7, $b11, $b12, $b13, $b14, $b15, $b19, $b22, $b23, $b24, $b40, $b48;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r109, $r110, $r111, $r112, $r113, $r114, $r116, $r117, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r178, $r179, $r180, $r181, $r183, $r184, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r226, $r227, $r228, $r229, $r230, $r231, $r233, $r234, $r236, $r237, $r238, $r239, $r240, $r241, $r242, $r243, $r244, $r245, $r246, $r247, $r248, $r250;
        short $s17, $s20, $s21, $s39, $s41, $s42;
        org.apache.poi.hwpf.usermodel.BorderCode $r118;
        org.apache.poi.hwpf.model.Colorref $r83;
        org.apache.poi.hwpf.model.Hyphenation $r108, $r177;

        r2 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r250 = new java.lang.StringBuilder;

        specialinvoke $r250.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CHP]\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .grpfChp              = ");

        $r1 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getGrpfChp()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r4 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fBold                    = ");

        $z0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFBold()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r6 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fItalic                  = ");

        $z1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFItalic()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r8 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fRMarkDel                = ");

        $z2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFRMarkDel()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r10 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fOutline                 = ");

        $z3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFOutline()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r12 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fFldVanish               = ");

        $z4 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFFldVanish()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r14 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fSmallCaps               = ");

        $z5 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFSmallCaps()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r16 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fCaps                    = ");

        $z6 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFCaps()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r18 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fVanish                  = ");

        $z7 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFVanish()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r20 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fRMark                   = ");

        $z8 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFRMark()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r22 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fSpec                    = ");

        $z9 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFSpec()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r24 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fStrike                  = ");

        $z10 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFStrike()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r26 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fObj                     = ");

        $z11 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFObj()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r28 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fShadow                  = ");

        $z12 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFShadow()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r30 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fLowerCase               = ");

        $z13 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFLowerCase()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r32 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fData                    = ");

        $z14 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFData()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r34 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fOle2                    = ");

        $z15 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFOle2()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r36 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fEmboss                  = ");

        $z16 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFEmboss()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z16);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r38 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fImprint                 = ");

        $z17 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFImprint()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z17);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r40 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fDStrike                 = ");

        $z18 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFDStrike()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r42 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fUsePgsuSettings         = ");

        $z19 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFUsePgsuSettings()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z19);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r44 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fBoldBi                  = ");

        $z20 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFBoldBi()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z20);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r46 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fComplexScripts          = ");

        $z21 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFComplexScripts()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z21);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r48 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fItalicBi                = ");

        $z22 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFItalicBi()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z22);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r50 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fBiDi                    = ");

        $z23 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFBiDi()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z23);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r52 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fIcoBi                   = ");

        $z24 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFIcoBi()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z24);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r54 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fNonGlyph                = ");

        $z25 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFNonGlyph()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z25);

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r56 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fBoldOther               = ");

        $z26 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFBoldOther()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z26);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r58 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fItalicOther             = ");

        $z27 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFItalicOther()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z27);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r60 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fNoProof                 = ");

        $z28 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFNoProof()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z28);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r62 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fWebHidden               = ");

        $z29 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFWebHidden()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z29);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r64 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fFitText                 = ");

        $z30 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFFitText()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z30);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r66 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fCalc                    = ");

        $z31 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFCalc()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z31);

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r68 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fFmtLineProp             = ");

        $z32 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFFmtLineProp()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z32);

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hps                  = ");

        $r70 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getHps()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ftcAscii             = ");

        $r72 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFtcAscii()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ftcFE                = ");

        $r74 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFtcFE()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ftcOther             = ");

        $r76 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i4 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFtcOther()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ftcBi                = ");

        $r78 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i5 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFtcBi()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .dxaSpace             = ");

        $r80 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i6 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getDxaSpace()>();

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .cv                   = ");

        $r82 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r83 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref getCv()>();

        $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r83);

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ico                  = ");

        $r85 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b7 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getIco()>();

        $i50 = (int) $b7;

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .pctCharWidth         = ");

        $r87 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i8 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getPctCharWidth()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .lidDefault           = ");

        $r89 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i9 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getLidDefault()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .lidFE                = ");

        $r91 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i10 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getLidFE()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .kcd                  = ");

        $r93 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b11 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getKcd()>();

        $i51 = (int) $b11;

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fUndetermine         = ");

        $r95 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z33 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFUndetermine()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z33);

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .iss                  = ");

        $r97 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b12 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getIss()>();

        $i52 = (int) $b12;

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i52);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fSpecSymbol          = ");

        $r99 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z34 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFSpecSymbol()>();

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z34);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .idct                 = ");

        $r101 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b13 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getIdct()>();

        $i53 = (int) $b13;

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .idctHint             = ");

        $r103 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b14 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getIdctHint()>();

        $i54 = (int) $b14;

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i54);

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .kul                  = ");

        $r105 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b15 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getKul()>();

        $i55 = (int) $b15;

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i55);

        virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hresi                = ");

        $r107 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r108 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation getHresi()>();

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r108);

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hpsKern              = ");

        $r110 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i16 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getHpsKern()>();

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hpsPos               = ");

        $r112 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $s17 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: short getHpsPos()>();

        $i56 = (int) $s17;

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i56);

        virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .shd                  = ");

        $r114 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r115 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor getShd()>();

        $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r115);

        virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .brc                  = ");

        $r117 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r118 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode getBrc()>();

        $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r118);

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ibstRMark            = ");

        $r120 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i18 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getIbstRMark()>();

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .sfxtText             = ");

        $r122 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b19 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getSfxtText()>();

        $i57 = (int) $b19;

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i57);

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fDblBdr              = ");

        $r124 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z35 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFDblBdr()>();

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z35);

        virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fBorderWS            = ");

        $r126 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z36 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFBorderWS()>();

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z36);

        virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ufel                 = ");

        $r128 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $s20 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: short getUfel()>();

        $i58 = (int) $s20;

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i58);

        virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r130 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .itypFELayout             = ");

        $s21 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: short getItypFELayout()>();

        $i59 = (int) $s21;

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i59);

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r132 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fTNY                     = ");

        $z37 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFTNY()>();

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z37);

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r134 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fWarichu                 = ");

        $z38 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFWarichu()>();

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z38);

        virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r136 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fKumimoji                = ");

        $z39 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFKumimoji()>();

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z39);

        virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r138 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fRuby                    = ");

        $z40 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFRuby()>();

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z40);

        virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r140 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fLSFitText               = ");

        $z41 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFLSFitText()>();

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z41);

        virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r142 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .spare                    = ");

        $b22 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getSpare()>();

        $i60 = (int) $b22;

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i60);

        virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .copt                 = ");

        $r144 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b23 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getCopt()>();

        $i61 = (int) $b23;

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i61);

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r146 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .iWarichuBracket          = ");

        $b24 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getIWarichuBracket()>();

        $i62 = (int) $b24;

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i62);

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r148 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fWarichuNoOpenBracket     = ");

        $z42 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFWarichuNoOpenBracket()>();

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z42);

        virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r150 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fTNYCompress             = ");

        $z43 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFTNYCompress()>();

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z43);

        virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r152 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fTNYFetchTxm             = ");

        $z44 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFTNYFetchTxm()>();

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z44);

        virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r154 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fCellFitText             = ");

        $z45 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFCellFitText()>();

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z45);

        virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r156 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .unused                   = ");

        $z46 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isUnused()>();

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z46);

        virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hpsAsci              = ");

        $r158 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i25 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getHpsAsci()>();

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hpsFE                = ");

        $r160 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i26 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getHpsFE()>();

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hpsBi                = ");

        $r162 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i27 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getHpsBi()>();

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ftcSym               = ");

        $r164 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i28 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFtcSym()>();

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .xchSym               = ");

        $r166 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i29 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getXchSym()>();

        $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fcPic                = ");

        $r168 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i30 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFcPic()>();

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fcObj                = ");

        $r170 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i31 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFcObj()>();

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .lTagObj              = ");

        $r172 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i32 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getLTagObj()>();

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i32);

        virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fcData               = ");

        $r174 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i33 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFcData()>();

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hresiOld             = ");

        $r176 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r177 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation getHresiOld()>();

        $r178 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r177);

        virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ibstRMarkDel         = ");

        $r179 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i34 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getIbstRMarkDel()>();

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .dttmRMark            = ");

        $r181 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r182 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime getDttmRMark()>();

        $r183 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r182);

        virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .dttmRMarkDel         = ");

        $r184 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r185 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime getDttmRMarkDel()>();

        $r186 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r185);

        virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .istd                 = ");

        $r187 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i35 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getIstd()>();

        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .idslRMReason         = ");

        $r189 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i36 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getIdslRMReason()>();

        $r190 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .idslReasonDel        = ");

        $r191 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i37 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getIdslReasonDel()>();

        $r192 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .cpg                  = ");

        $r193 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i38 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getCpg()>();

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .Highlight            = ");

        $r195 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $s39 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: short getHighlight()>();

        $i63 = (int) $s39;

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i63);

        virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r197 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .icoHighlight             = ");

        $b40 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getIcoHighlight()>();

        $i64 = (int) $b40;

        $r198 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i64);

        virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r199 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fHighlight               = ");

        $z47 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFHighlight()>();

        $r200 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z47);

        virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .CharsetFlags         = ");

        $r201 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $s41 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: short getCharsetFlags()>();

        $i65 = (int) $s41;

        $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i65);

        virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r203 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fChsDiff                 = ");

        $z48 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFChsDiff()>();

        $r204 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z48);

        virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r205 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fMacChs                  = ");

        $z49 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean isFMacChs()>();

        $r206 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z49);

        virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .chse                 = ");

        $r207 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $s42 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: short getChse()>();

        $i66 = (int) $s42;

        $r208 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i66);

        virtualinvoke $r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fPropRMark           = ");

        $r209 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z50 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFPropRMark()>();

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z50);

        virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ibstPropRMark        = ");

        $r211 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i43 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getIbstPropRMark()>();

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .dttmPropRMark        = ");

        $r213 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r214 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime getDttmPropRMark()>();

        $r215 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r214);

        virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fConflictOrig        = ");

        $r216 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z51 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFConflictOrig()>();

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z51);

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fConflictOtherDel    = ");

        $r218 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z52 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFConflictOtherDel()>();

        $r219 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z52);

        virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .wConflict            = ");

        $r220 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i44 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getWConflict()>();

        $r221 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i44);

        virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .IbstConflict         = ");

        $r222 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i45 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getIbstConflict()>();

        $r223 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);

        virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .dttmConflict         = ");

        $r224 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r225 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime getDttmConflict()>();

        $r226 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r225);

        virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fDispFldRMark        = ");

        $r227 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z53 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFDispFldRMark()>();

        $r228 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z53);

        virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ibstDispFldRMark     = ");

        $r229 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i46 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getIbstDispFldRMark()>();

        $r230 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .dttmDispFldRMark     = ");

        $r231 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r232 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime getDttmDispFldRMark()>();

        $r233 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r232);

        virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .xstDispFldRMark      = ");

        $r234 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r235 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte[] getXstDispFldRMark()>();

        $r236 = virtualinvoke $r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r235);

        virtualinvoke $r236.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fcObjp               = ");

        $r237 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i47 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getFcObjp()>();

        $r238 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i47);

        virtualinvoke $r238.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .lbrCRJ               = ");

        $r239 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b48 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte getLbrCRJ()>();

        $i67 = (int) $b48;

        $r240 = virtualinvoke $r239.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i67);

        virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fSpecVanish          = ");

        $r241 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z54 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFSpecVanish()>();

        $r242 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z54);

        virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fHasOldProps         = ");

        $r243 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z55 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFHasOldProps()>();

        $r244 = virtualinvoke $r243.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z55);

        virtualinvoke $r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .fSdtVanish           = ");

        $r245 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z56 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean getFSdtVanish()>();

        $r246 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z56);

        virtualinvoke $r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .wCharScale           = ");

        $r247 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i49 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.CHPAbstractType: int getWCharScale()>();

        $r248 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49);

        virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[/CHP]\n");

        $r249 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r249;
    }

    public int getGrpfChp()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        return $i0;
    }

    public void setGrpfChp(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = i0;

        return;
    }

    public int getHps()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_2_hps>;

        return $i0;
    }

    public void setHps(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_2_hps> = i0;

        return;
    }

    public int getFtcAscii()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_3_ftcAscii>;

        return $i0;
    }

    public void setFtcAscii(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_3_ftcAscii> = i0;

        return;
    }

    public int getFtcFE()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_4_ftcFE>;

        return $i0;
    }

    public void setFtcFE(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_4_ftcFE> = i0;

        return;
    }

    public int getFtcOther()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_5_ftcOther>;

        return $i0;
    }

    public void setFtcOther(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_5_ftcOther> = i0;

        return;
    }

    public int getFtcBi()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_6_ftcBi>;

        return $i0;
    }

    public void setFtcBi(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_6_ftcBi> = i0;

        return;
    }

    public int getDxaSpace()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_7_dxaSpace>;

        return $i0;
    }

    public void setDxaSpace(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_7_dxaSpace> = i0;

        return;
    }

    public org.apache.poi.hwpf.model.Colorref getCv()
    {
        org.apache.poi.hwpf.model.Colorref $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv>;

        return $r1;
    }

    public void setCv(org.apache.poi.hwpf.model.Colorref)
    {
        org.apache.poi.hwpf.model.Colorref r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.model.Colorref;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Colorref field_8_cv> = r1;

        return;
    }

    public byte getIco()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_9_ico>;

        return $b0;
    }

    public void setIco(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_9_ico> = b0;

        return;
    }

    public int getPctCharWidth()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_10_pctCharWidth>;

        return $i0;
    }

    public void setPctCharWidth(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_10_pctCharWidth> = i0;

        return;
    }

    public int getLidDefault()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_11_lidDefault>;

        return $i0;
    }

    public void setLidDefault(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_11_lidDefault> = i0;

        return;
    }

    public int getLidFE()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_12_lidFE>;

        return $i0;
    }

    public void setLidFE(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_12_lidFE> = i0;

        return;
    }

    public byte getKcd()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_13_kcd>;

        return $b0;
    }

    public void setKcd(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_13_kcd> = b0;

        return;
    }

    public boolean getFUndetermine()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_14_fUndetermine>;

        return $z0;
    }

    public void setFUndetermine(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_14_fUndetermine> = z0;

        return;
    }

    public byte getIss()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_15_iss>;

        return $b0;
    }

    public void setIss(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_15_iss> = b0;

        return;
    }

    public boolean getFSpecSymbol()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_16_fSpecSymbol>;

        return $z0;
    }

    public void setFSpecSymbol(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_16_fSpecSymbol> = z0;

        return;
    }

    public byte getIdct()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_17_idct>;

        return $b0;
    }

    public void setIdct(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_17_idct> = b0;

        return;
    }

    public byte getIdctHint()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_18_idctHint>;

        return $b0;
    }

    public void setIdctHint(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_18_idctHint> = b0;

        return;
    }

    public byte getKul()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_19_kul>;

        return $b0;
    }

    public void setKul(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_19_kul> = b0;

        return;
    }

    public org.apache.poi.hwpf.model.Hyphenation getHresi()
    {
        org.apache.poi.hwpf.model.Hyphenation $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi>;

        return $r1;
    }

    public void setHresi(org.apache.poi.hwpf.model.Hyphenation)
    {
        org.apache.poi.hwpf.model.Hyphenation r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.model.Hyphenation;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_20_hresi> = r1;

        return;
    }

    public int getHpsKern()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_21_hpsKern>;

        return $i0;
    }

    public void setHpsKern(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_21_hpsKern> = i0;

        return;
    }

    public short getHpsPos()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_22_hpsPos>;

        return $s0;
    }

    public void setHpsPos(short)
    {
        short s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_22_hpsPos> = s0;

        return;
    }

    public org.apache.poi.hwpf.usermodel.ShadingDescriptor getShd()
    {
        org.apache.poi.hwpf.usermodel.ShadingDescriptor $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd>;

        return $r1;
    }

    public void setShd(org.apache.poi.hwpf.usermodel.ShadingDescriptor)
    {
        org.apache.poi.hwpf.usermodel.ShadingDescriptor r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.ShadingDescriptor;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.ShadingDescriptor field_23_shd> = r1;

        return;
    }

    public org.apache.poi.hwpf.usermodel.BorderCode getBrc()
    {
        org.apache.poi.hwpf.usermodel.BorderCode $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc>;

        return $r1;
    }

    public void setBrc(org.apache.poi.hwpf.usermodel.BorderCode)
    {
        org.apache.poi.hwpf.usermodel.BorderCode r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.BorderCode;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.BorderCode field_24_brc> = r1;

        return;
    }

    public int getIbstRMark()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_25_ibstRMark>;

        return $i0;
    }

    public void setIbstRMark(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_25_ibstRMark> = i0;

        return;
    }

    public byte getSfxtText()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_26_sfxtText>;

        return $b0;
    }

    public void setSfxtText(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_26_sfxtText> = b0;

        return;
    }

    public boolean getFDblBdr()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_27_fDblBdr>;

        return $z0;
    }

    public void setFDblBdr(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_27_fDblBdr> = z0;

        return;
    }

    public boolean getFBorderWS()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_28_fBorderWS>;

        return $z0;
    }

    public void setFBorderWS(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_28_fBorderWS> = z0;

        return;
    }

    public short getUfel()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        return $s0;
    }

    public void setUfel(short)
    {
        short s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel> = s0;

        return;
    }

    public byte getCopt()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        return $b0;
    }

    public void setCopt(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt> = b0;

        return;
    }

    public int getHpsAsci()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_31_hpsAsci>;

        return $i0;
    }

    public void setHpsAsci(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_31_hpsAsci> = i0;

        return;
    }

    public int getHpsFE()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_32_hpsFE>;

        return $i0;
    }

    public void setHpsFE(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_32_hpsFE> = i0;

        return;
    }

    public int getHpsBi()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_33_hpsBi>;

        return $i0;
    }

    public void setHpsBi(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_33_hpsBi> = i0;

        return;
    }

    public int getFtcSym()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_34_ftcSym>;

        return $i0;
    }

    public void setFtcSym(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_34_ftcSym> = i0;

        return;
    }

    public int getXchSym()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_35_xchSym>;

        return $i0;
    }

    public void setXchSym(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_35_xchSym> = i0;

        return;
    }

    public int getFcPic()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_36_fcPic>;

        return $i0;
    }

    public void setFcPic(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_36_fcPic> = i0;

        return;
    }

    public int getFcObj()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_37_fcObj>;

        return $i0;
    }

    public void setFcObj(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_37_fcObj> = i0;

        return;
    }

    public int getLTagObj()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_38_lTagObj>;

        return $i0;
    }

    public void setLTagObj(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_38_lTagObj> = i0;

        return;
    }

    public int getFcData()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_39_fcData>;

        return $i0;
    }

    public void setFcData(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_39_fcData> = i0;

        return;
    }

    public org.apache.poi.hwpf.model.Hyphenation getHresiOld()
    {
        org.apache.poi.hwpf.model.Hyphenation $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld>;

        return $r1;
    }

    public void setHresiOld(org.apache.poi.hwpf.model.Hyphenation)
    {
        org.apache.poi.hwpf.model.Hyphenation r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.model.Hyphenation;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.model.Hyphenation field_40_hresiOld> = r1;

        return;
    }

    public int getIbstRMarkDel()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_41_ibstRMarkDel>;

        return $i0;
    }

    public void setIbstRMarkDel(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_41_ibstRMarkDel> = i0;

        return;
    }

    public org.apache.poi.hwpf.usermodel.DateAndTime getDttmRMark()
    {
        org.apache.poi.hwpf.usermodel.DateAndTime $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark>;

        return $r1;
    }

    public void setDttmRMark(org.apache.poi.hwpf.usermodel.DateAndTime)
    {
        org.apache.poi.hwpf.usermodel.DateAndTime r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.DateAndTime;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_42_dttmRMark> = r1;

        return;
    }

    public org.apache.poi.hwpf.usermodel.DateAndTime getDttmRMarkDel()
    {
        org.apache.poi.hwpf.usermodel.DateAndTime $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel>;

        return $r1;
    }

    public void setDttmRMarkDel(org.apache.poi.hwpf.usermodel.DateAndTime)
    {
        org.apache.poi.hwpf.usermodel.DateAndTime r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.DateAndTime;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_43_dttmRMarkDel> = r1;

        return;
    }

    public int getIstd()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_44_istd>;

        return $i0;
    }

    public void setIstd(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_44_istd> = i0;

        return;
    }

    public int getIdslRMReason()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_45_idslRMReason>;

        return $i0;
    }

    public void setIdslRMReason(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_45_idslRMReason> = i0;

        return;
    }

    public int getIdslReasonDel()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_46_idslReasonDel>;

        return $i0;
    }

    public void setIdslReasonDel(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_46_idslReasonDel> = i0;

        return;
    }

    public int getCpg()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_47_cpg>;

        return $i0;
    }

    public void setCpg(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_47_cpg> = i0;

        return;
    }

    public short getHighlight()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight>;

        return $s0;
    }

    public void setHighlight(short)
    {
        short s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight> = s0;

        return;
    }

    public short getCharsetFlags()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags>;

        return $s0;
    }

    public void setCharsetFlags(short)
    {
        short s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags> = s0;

        return;
    }

    public short getChse()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_50_chse>;

        return $s0;
    }

    public void setChse(short)
    {
        short s0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_50_chse> = s0;

        return;
    }

    public boolean getFPropRMark()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_51_fPropRMark>;

        return $z0;
    }

    public void setFPropRMark(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_51_fPropRMark> = z0;

        return;
    }

    public int getIbstPropRMark()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_52_ibstPropRMark>;

        return $i0;
    }

    public void setIbstPropRMark(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_52_ibstPropRMark> = i0;

        return;
    }

    public org.apache.poi.hwpf.usermodel.DateAndTime getDttmPropRMark()
    {
        org.apache.poi.hwpf.usermodel.DateAndTime $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark>;

        return $r1;
    }

    public void setDttmPropRMark(org.apache.poi.hwpf.usermodel.DateAndTime)
    {
        org.apache.poi.hwpf.usermodel.DateAndTime r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.DateAndTime;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_53_dttmPropRMark> = r1;

        return;
    }

    public boolean getFConflictOrig()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_54_fConflictOrig>;

        return $z0;
    }

    public void setFConflictOrig(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_54_fConflictOrig> = z0;

        return;
    }

    public boolean getFConflictOtherDel()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_55_fConflictOtherDel>;

        return $z0;
    }

    public void setFConflictOtherDel(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_55_fConflictOtherDel> = z0;

        return;
    }

    public int getWConflict()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_56_wConflict>;

        return $i0;
    }

    public void setWConflict(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_56_wConflict> = i0;

        return;
    }

    public int getIbstConflict()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_57_IbstConflict>;

        return $i0;
    }

    public void setIbstConflict(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_57_IbstConflict> = i0;

        return;
    }

    public org.apache.poi.hwpf.usermodel.DateAndTime getDttmConflict()
    {
        org.apache.poi.hwpf.usermodel.DateAndTime $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict>;

        return $r1;
    }

    public void setDttmConflict(org.apache.poi.hwpf.usermodel.DateAndTime)
    {
        org.apache.poi.hwpf.usermodel.DateAndTime r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.DateAndTime;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_58_dttmConflict> = r1;

        return;
    }

    public boolean getFDispFldRMark()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_59_fDispFldRMark>;

        return $z0;
    }

    public void setFDispFldRMark(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_59_fDispFldRMark> = z0;

        return;
    }

    public int getIbstDispFldRMark()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_60_ibstDispFldRMark>;

        return $i0;
    }

    public void setIbstDispFldRMark(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_60_ibstDispFldRMark> = i0;

        return;
    }

    public org.apache.poi.hwpf.usermodel.DateAndTime getDttmDispFldRMark()
    {
        org.apache.poi.hwpf.usermodel.DateAndTime $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark>;

        return $r1;
    }

    public void setDttmDispFldRMark(org.apache.poi.hwpf.usermodel.DateAndTime)
    {
        org.apache.poi.hwpf.usermodel.DateAndTime r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.DateAndTime;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.hwpf.usermodel.DateAndTime field_61_dttmDispFldRMark> = r1;

        return;
    }

    public byte[] getXstDispFldRMark()
    {
        byte[] $r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte[] field_62_xstDispFldRMark>;

        return $r1;
    }

    public void setXstDispFldRMark(byte[])
    {
        byte[] r1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte[] field_62_xstDispFldRMark> = r1;

        return;
    }

    public int getFcObjp()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_63_fcObjp>;

        return $i0;
    }

    public void setFcObjp(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_63_fcObjp> = i0;

        return;
    }

    public byte getLbrCRJ()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_64_lbrCRJ>;

        return $b0;
    }

    public void setLbrCRJ(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_64_lbrCRJ> = b0;

        return;
    }

    public boolean getFSpecVanish()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_65_fSpecVanish>;

        return $z0;
    }

    public void setFSpecVanish(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_65_fSpecVanish> = z0;

        return;
    }

    public boolean getFHasOldProps()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_66_fHasOldProps>;

        return $z0;
    }

    public void setFHasOldProps(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_66_fHasOldProps> = z0;

        return;
    }

    public boolean getFSdtVanish()
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $z0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_67_fSdtVanish>;

        return $z0;
    }

    public void setFSdtVanish(boolean)
    {
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: boolean field_67_fSdtVanish> = z0;

        return;
    }

    public int getWCharScale()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_68_wCharScale>;

        return $i0;
    }

    public void setWCharScale(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_68_wCharScale> = i0;

        return;
    }

    public void setFBold(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBold>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFBold()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBold>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFItalic(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalic>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFItalic()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalic>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFRMarkDel(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRMarkDel>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFRMarkDel()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRMarkDel>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFOutline(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fOutline>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFOutline()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fOutline>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFFldVanish(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFldVanish>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFFldVanish()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFldVanish>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFSmallCaps(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fSmallCaps>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFSmallCaps()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fSmallCaps>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFCaps(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCaps>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFCaps()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCaps>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFVanish(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fVanish>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFVanish()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fVanish>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFRMark(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRMark>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFRMark()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRMark>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFSpec(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fSpec>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFSpec()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fSpec>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFStrike(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fStrike>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFStrike()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fStrike>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFObj(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fObj>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFObj()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fObj>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFShadow(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fShadow>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFShadow()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fShadow>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFLowerCase(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fLowerCase>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFLowerCase()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fLowerCase>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFData(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fData>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFData()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fData>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFOle2(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fOle2>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFOle2()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fOle2>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFEmboss(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fEmboss>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFEmboss()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fEmboss>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFImprint(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fImprint>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFImprint()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fImprint>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFDStrike(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fDStrike>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFDStrike()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fDStrike>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFUsePgsuSettings(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fUsePgsuSettings>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFUsePgsuSettings()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fUsePgsuSettings>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFBoldBi(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBoldBi>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFBoldBi()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBoldBi>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFComplexScripts(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fComplexScripts>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFComplexScripts()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fComplexScripts>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFItalicBi(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalicBi>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFItalicBi()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalicBi>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFBiDi(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBiDi>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFBiDi()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBiDi>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFIcoBi(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fIcoBi>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFIcoBi()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fIcoBi>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFNonGlyph(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fNonGlyph>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFNonGlyph()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fNonGlyph>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFBoldOther(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBoldOther>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFBoldOther()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBoldOther>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFItalicOther(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalicOther>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFItalicOther()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalicOther>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFNoProof(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fNoProof>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFNoProof()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fNoProof>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFWebHidden(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWebHidden>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFWebHidden()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWebHidden>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFFitText(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFitText>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFFitText()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFitText>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFCalc(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCalc>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFCalc()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCalc>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFFmtLineProp(boolean)
    {
        org.apache.poi.util.BitField $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFmtLineProp>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp> = $i1;

        return;
    }

    public boolean isFFmtLineProp()
    {
        org.apache.poi.util.BitField $r1;
        int $i0;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFmtLineProp>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: int field_1_grpfChp>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setItypFELayout(short)
    {
        org.apache.poi.util.BitField $r1;
        short s0, $s1, $s3;
        int $i2, $i4, $i5;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        s0 := @parameter0: short;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField itypFELayout>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i4 = (int) $s1;

        $i5 = (int) s0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel> = $s3;

        return;
    }

    public short getItypFELayout()
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField itypFELayout>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $s2 = (short) $i1;

        return $s2;
    }

    public void setFTNY(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNY>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel> = $s2;

        return;
    }

    public boolean isFTNY()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNY>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFWarichu(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWarichu>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel> = $s2;

        return;
    }

    public boolean isFWarichu()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWarichu>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFKumimoji(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fKumimoji>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel> = $s2;

        return;
    }

    public boolean isFKumimoji()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fKumimoji>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFRuby(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRuby>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel> = $s2;

        return;
    }

    public boolean isFRuby()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRuby>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFLSFitText(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fLSFitText>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel> = $s2;

        return;
    }

    public boolean isFLSFitText()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fLSFitText>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setSpare(byte)
    {
        org.apache.poi.util.BitField $r1;
        short $s1, $s3;
        byte b0;
        int $i2, $i4, $i5;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField spare>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i4 = (int) $s1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel> = $s3;

        return;
    }

    public byte getSpare()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        byte $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField spare>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_29_ufel>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setIWarichuBracket(byte)
    {
        org.apache.poi.util.BitField $r1;
        byte b0, $b1, $b3;
        int $i2, $i4, $i5;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField iWarichuBracket>;

        $b1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i4 = (int) $b1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $b3 = (byte) $i2;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt> = $b3;

        return;
    }

    public byte getIWarichuBracket()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField iWarichuBracket>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setFWarichuNoOpenBracket(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWarichuNoOpenBracket>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt> = $b2;

        return;
    }

    public boolean isFWarichuNoOpenBracket()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWarichuNoOpenBracket>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFTNYCompress(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNYCompress>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt> = $b2;

        return;
    }

    public boolean isFTNYCompress()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNYCompress>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFTNYFetchTxm(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNYFetchTxm>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt> = $b2;

        return;
    }

    public boolean isFTNYFetchTxm()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNYFetchTxm>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFCellFitText(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCellFitText>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt> = $b2;

        return;
    }

    public boolean isFCellFitText()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCellFitText>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setUnused(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField unused>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt> = $b2;

        return;
    }

    public boolean isUnused()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField unused>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: byte field_30_copt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setIcoHighlight(byte)
    {
        org.apache.poi.util.BitField $r1;
        short $s1, $s3;
        byte b0;
        int $i2, $i4, $i5;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField icoHighlight>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight>;

        $i4 = (int) $s1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight> = $s3;

        return;
    }

    public byte getIcoHighlight()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        byte $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField icoHighlight>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setFHighlight(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fHighlight>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight> = $s2;

        return;
    }

    public boolean isFHighlight()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fHighlight>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_48_Highlight>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFChsDiff(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fChsDiff>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags> = $s2;

        return;
    }

    public boolean isFChsDiff()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fChsDiff>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFMacChs(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fMacChs>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags> = $s2;

        return;
    }

    public boolean isFMacChs()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hwpf.model.types.CHPAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.CHPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fMacChs>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.CHPAbstractType: short field_49_CharsetFlags>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99;
        int $i1, $i3;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte LBRCRJ_BOTH> = 3;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte LBRCRJ_RIGHT> = 2;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte LBRCRJ_LEFT> = 1;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte LBRCRJ_NONE> = 0;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte SFXTTEXT_SHIMMER> = 6;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte SFXTTEXT_MARCHING_RED_ANTS> = 5;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte SFXTTEXT_MARCHING_ANTS> = 4;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte SFXTTEXT_SPARKLE_TEXT> = 3;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte SFXTTEXT_BACKGROUND_BLINK> = 2;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte SFXTTEXT_LAS_VEGAS_LIGHTS> = 1;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte SFXTTEXT_NO> = 0;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DASH_LONG_HEAVY> = 55;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_WAVE_DOUBLE> = 43;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DASH_LONG> = 39;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_WAVE_HEAVY> = 27;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DOT_DOT_DASH_HEAVY> = 26;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DOT_DASH_HEAVY> = 25;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DASHED_HEAVY> = 23;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DOTTED_HEAVY> = 20;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_WAVE> = 11;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DOT_DOT_DASH> = 10;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DOT_DASH> = 9;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DOT> = 8;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DASH> = 7;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_THICK> = 6;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_HIDDEN> = 5;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DOTTED> = 4;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_DOUBLE> = 3;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_BY_WORD> = 2;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_SINGLE> = 1;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KUL_NONE> = 0;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte ISS_SUBSCRIPTED> = 2;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte ISS_SUPERSCRIPTED> = 1;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte ISS_NONE> = 0;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KCD_UNDER_DOT> = 4;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KCD_CIRCLE> = 3;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KCD_COMMA> = 2;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KCD_DOT> = 1;

        <org.apache.poi.hwpf.model.types.CHPAbstractType: byte KCD_NON> = 0;

        $r50 = new org.apache.poi.util.BitField;

        specialinvoke $r50.<org.apache.poi.util.BitField: void <init>(int)>(1);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBold> = $r50;

        $r51 = new org.apache.poi.util.BitField;

        specialinvoke $r51.<org.apache.poi.util.BitField: void <init>(int)>(2);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalic> = $r51;

        $r52 = new org.apache.poi.util.BitField;

        specialinvoke $r52.<org.apache.poi.util.BitField: void <init>(int)>(4);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRMarkDel> = $r52;

        $r53 = new org.apache.poi.util.BitField;

        specialinvoke $r53.<org.apache.poi.util.BitField: void <init>(int)>(8);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fOutline> = $r53;

        $r54 = new org.apache.poi.util.BitField;

        specialinvoke $r54.<org.apache.poi.util.BitField: void <init>(int)>(16);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFldVanish> = $r54;

        $r55 = new org.apache.poi.util.BitField;

        specialinvoke $r55.<org.apache.poi.util.BitField: void <init>(int)>(32);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fSmallCaps> = $r55;

        $r56 = new org.apache.poi.util.BitField;

        specialinvoke $r56.<org.apache.poi.util.BitField: void <init>(int)>(64);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCaps> = $r56;

        $r57 = new org.apache.poi.util.BitField;

        specialinvoke $r57.<org.apache.poi.util.BitField: void <init>(int)>(128);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fVanish> = $r57;

        $r58 = new org.apache.poi.util.BitField;

        specialinvoke $r58.<org.apache.poi.util.BitField: void <init>(int)>(256);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRMark> = $r58;

        $r59 = new org.apache.poi.util.BitField;

        specialinvoke $r59.<org.apache.poi.util.BitField: void <init>(int)>(512);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fSpec> = $r59;

        $r60 = new org.apache.poi.util.BitField;

        specialinvoke $r60.<org.apache.poi.util.BitField: void <init>(int)>(1024);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fStrike> = $r60;

        $r61 = new org.apache.poi.util.BitField;

        specialinvoke $r61.<org.apache.poi.util.BitField: void <init>(int)>(2048);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fObj> = $r61;

        $r62 = new org.apache.poi.util.BitField;

        specialinvoke $r62.<org.apache.poi.util.BitField: void <init>(int)>(4096);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fShadow> = $r62;

        $r63 = new org.apache.poi.util.BitField;

        specialinvoke $r63.<org.apache.poi.util.BitField: void <init>(int)>(8192);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fLowerCase> = $r63;

        $r64 = new org.apache.poi.util.BitField;

        specialinvoke $r64.<org.apache.poi.util.BitField: void <init>(int)>(16384);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fData> = $r64;

        $r65 = new org.apache.poi.util.BitField;

        $i1 = (int) 32768;

        specialinvoke $r65.<org.apache.poi.util.BitField: void <init>(int)>($i1);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fOle2> = $r65;

        $r66 = new org.apache.poi.util.BitField;

        specialinvoke $r66.<org.apache.poi.util.BitField: void <init>(int)>(65536);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fEmboss> = $r66;

        $r67 = new org.apache.poi.util.BitField;

        specialinvoke $r67.<org.apache.poi.util.BitField: void <init>(int)>(131072);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fImprint> = $r67;

        $r68 = new org.apache.poi.util.BitField;

        specialinvoke $r68.<org.apache.poi.util.BitField: void <init>(int)>(262144);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fDStrike> = $r68;

        $r69 = new org.apache.poi.util.BitField;

        specialinvoke $r69.<org.apache.poi.util.BitField: void <init>(int)>(524288);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fUsePgsuSettings> = $r69;

        $r70 = new org.apache.poi.util.BitField;

        specialinvoke $r70.<org.apache.poi.util.BitField: void <init>(int)>(1048576);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBoldBi> = $r70;

        $r71 = new org.apache.poi.util.BitField;

        specialinvoke $r71.<org.apache.poi.util.BitField: void <init>(int)>(1048576);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fComplexScripts> = $r71;

        $r72 = new org.apache.poi.util.BitField;

        specialinvoke $r72.<org.apache.poi.util.BitField: void <init>(int)>(2097152);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalicBi> = $r72;

        $r73 = new org.apache.poi.util.BitField;

        specialinvoke $r73.<org.apache.poi.util.BitField: void <init>(int)>(4194304);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBiDi> = $r73;

        $r74 = new org.apache.poi.util.BitField;

        specialinvoke $r74.<org.apache.poi.util.BitField: void <init>(int)>(8388608);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fIcoBi> = $r74;

        $r75 = new org.apache.poi.util.BitField;

        specialinvoke $r75.<org.apache.poi.util.BitField: void <init>(int)>(16777216);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fNonGlyph> = $r75;

        $r76 = new org.apache.poi.util.BitField;

        specialinvoke $r76.<org.apache.poi.util.BitField: void <init>(int)>(33554432);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fBoldOther> = $r76;

        $r77 = new org.apache.poi.util.BitField;

        specialinvoke $r77.<org.apache.poi.util.BitField: void <init>(int)>(67108864);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fItalicOther> = $r77;

        $r78 = new org.apache.poi.util.BitField;

        specialinvoke $r78.<org.apache.poi.util.BitField: void <init>(int)>(134217728);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fNoProof> = $r78;

        $r79 = new org.apache.poi.util.BitField;

        specialinvoke $r79.<org.apache.poi.util.BitField: void <init>(int)>(268435456);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWebHidden> = $r79;

        $r80 = new org.apache.poi.util.BitField;

        specialinvoke $r80.<org.apache.poi.util.BitField: void <init>(int)>(536870912);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFitText> = $r80;

        $r81 = new org.apache.poi.util.BitField;

        specialinvoke $r81.<org.apache.poi.util.BitField: void <init>(int)>(1073741824);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCalc> = $r81;

        $r82 = new org.apache.poi.util.BitField;

        specialinvoke $r82.<org.apache.poi.util.BitField: void <init>(int)>(-2147483648);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fFmtLineProp> = $r82;

        $r83 = new org.apache.poi.util.BitField;

        specialinvoke $r83.<org.apache.poi.util.BitField: void <init>(int)>(255);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField itypFELayout> = $r83;

        $r84 = new org.apache.poi.util.BitField;

        specialinvoke $r84.<org.apache.poi.util.BitField: void <init>(int)>(256);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNY> = $r84;

        $r85 = new org.apache.poi.util.BitField;

        specialinvoke $r85.<org.apache.poi.util.BitField: void <init>(int)>(512);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWarichu> = $r85;

        $r86 = new org.apache.poi.util.BitField;

        specialinvoke $r86.<org.apache.poi.util.BitField: void <init>(int)>(1024);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fKumimoji> = $r86;

        $r87 = new org.apache.poi.util.BitField;

        specialinvoke $r87.<org.apache.poi.util.BitField: void <init>(int)>(2048);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fRuby> = $r87;

        $r88 = new org.apache.poi.util.BitField;

        specialinvoke $r88.<org.apache.poi.util.BitField: void <init>(int)>(4096);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fLSFitText> = $r88;

        $r89 = new org.apache.poi.util.BitField;

        $i3 = (int) 57344;

        specialinvoke $r89.<org.apache.poi.util.BitField: void <init>(int)>($i3);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField spare> = $r89;

        $r90 = new org.apache.poi.util.BitField;

        specialinvoke $r90.<org.apache.poi.util.BitField: void <init>(int)>(7);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField iWarichuBracket> = $r90;

        $r91 = new org.apache.poi.util.BitField;

        specialinvoke $r91.<org.apache.poi.util.BitField: void <init>(int)>(8);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fWarichuNoOpenBracket> = $r91;

        $r92 = new org.apache.poi.util.BitField;

        specialinvoke $r92.<org.apache.poi.util.BitField: void <init>(int)>(16);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNYCompress> = $r92;

        $r93 = new org.apache.poi.util.BitField;

        specialinvoke $r93.<org.apache.poi.util.BitField: void <init>(int)>(32);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fTNYFetchTxm> = $r93;

        $r94 = new org.apache.poi.util.BitField;

        specialinvoke $r94.<org.apache.poi.util.BitField: void <init>(int)>(64);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fCellFitText> = $r94;

        $r95 = new org.apache.poi.util.BitField;

        specialinvoke $r95.<org.apache.poi.util.BitField: void <init>(int)>(128);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField unused> = $r95;

        $r96 = new org.apache.poi.util.BitField;

        specialinvoke $r96.<org.apache.poi.util.BitField: void <init>(int)>(31);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField icoHighlight> = $r96;

        $r97 = new org.apache.poi.util.BitField;

        specialinvoke $r97.<org.apache.poi.util.BitField: void <init>(int)>(32);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fHighlight> = $r97;

        $r98 = new org.apache.poi.util.BitField;

        specialinvoke $r98.<org.apache.poi.util.BitField: void <init>(int)>(1);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fChsDiff> = $r98;

        $r99 = new org.apache.poi.util.BitField;

        specialinvoke $r99.<org.apache.poi.util.BitField: void <init>(int)>(32);

        <org.apache.poi.hwpf.model.types.CHPAbstractType: org.apache.poi.util.BitField fMacChs> = $r99;

        return;
    }
}
