public class org.apache.jena.riot.tokens.TokenizerFactory extends java.lang.Object
{

    public void <init>()
    {
        org.apache.jena.riot.tokens.TokenizerFactory r0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.jena.riot.tokens.Tokenizer makeTokenizer(java.io.Reader)
    {
        org.apache.jena.riot.tokens.TokenizerText $r2;
        java.io.Reader r0;
        org.apache.jena.atlas.io.PeekReader $r1;

        r0 := @parameter0: java.io.Reader;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader make(java.io.Reader)>(r0);

        $r2 = new org.apache.jena.riot.tokens.TokenizerText;

        specialinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        return $r2;
    }

    public static org.apache.jena.riot.tokens.Tokenizer makeTokenizerUTF8(java.io.InputStream)
    {
        org.apache.jena.riot.tokens.TokenizerText $r2;
        org.apache.jena.atlas.io.PeekReader $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader makeUTF8(java.io.InputStream)>(r0);

        $r2 = new org.apache.jena.riot.tokens.TokenizerText;

        specialinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        return $r2;
    }

    public static org.apache.jena.riot.tokens.Tokenizer makeTokenizerASCII(java.io.InputStream)
    {
        org.apache.jena.riot.tokens.TokenizerText $r2;
        org.apache.jena.atlas.io.PeekReader $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader makeASCII(java.io.InputStream)>(r0);

        $r2 = new org.apache.jena.riot.tokens.TokenizerText;

        specialinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        return $r2;
    }

    public static org.apache.jena.riot.tokens.Tokenizer makeTokenizerASCII(java.lang.String)
    {
        byte[] $r1;
        java.io.ByteArrayInputStream $r2;
        org.apache.jena.riot.tokens.Tokenizer $r3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: byte[] asUTF8bytes(java.lang.String)>(r0);

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        $r3 = staticinvoke <org.apache.jena.riot.tokens.TokenizerFactory: org.apache.jena.riot.tokens.Tokenizer makeTokenizerASCII(java.io.InputStream)>($r2);

        return $r3;
    }

    public static org.apache.jena.riot.tokens.Tokenizer makeTokenizerString(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText $r2;
        java.lang.String r0;
        org.apache.jena.atlas.io.PeekReader $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader readString(java.lang.String)>(r0);

        $r2 = new org.apache.jena.riot.tokens.TokenizerText;

        specialinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        return $r2;
    }
}
