public class org.apache.tika.server.HTMLHelper extends java.lang.Object
{
    private static final java.lang.String PATH;
    private static final java.lang.String TITLE_VAR;
    private static final java.lang.String BODY_VAR;
    private java.lang.String PRE_BODY;
    private java.lang.String POST_BODY;

    public void <init>()
    {
        org.apache.tika.server.HTMLHelper r0;
        java.lang.IllegalStateException $r9;
        java.io.IOException $r8;
        java.lang.IllegalArgumentException $r7;
        int $i0, $i1, $i2;
        java.lang.Class $r1;
        java.lang.String $r3, $r4, $r5, $r6;
        java.io.InputStream $r2;

        r0 := @this: org.apache.tika.server.HTMLHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/tikaserver-template.html");

        if $r2 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Template Not Found - /tikaserver-template.html");

        throw $r7;

     label1:
        $r3 = staticinvoke <org.apache.tika.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>($r2, "UTF-8");

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("[[BODY]]");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<org.apache.tika.server.HTMLHelper: java.lang.String PRE_BODY> = $r4;

        $r5 = "[[BODY]]";

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

        r0.<org.apache.tika.server.HTMLHelper: java.lang.String POST_BODY> = $r6;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unable to read template");

        throw $r9;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void generateHeader(java.lang.StringBuffer, java.lang.String)
    {
        org.apache.tika.server.HTMLHelper r1;
        java.lang.StringBuffer r0;
        java.lang.String r2, $r3, $r4;

        r1 := @this: org.apache.tika.server.HTMLHelper;

        r0 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.lang.String;

        $r3 = r1.<org.apache.tika.server.HTMLHelper: java.lang.String PRE_BODY>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[[TITLE]]", r2);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        return;
    }

    public void generateFooter(java.lang.StringBuffer)
    {
        org.apache.tika.server.HTMLHelper r1;
        java.lang.String $r2;
        java.lang.StringBuffer r0;

        r1 := @this: org.apache.tika.server.HTMLHelper;

        r0 := @parameter0: java.lang.StringBuffer;

        $r2 = r1.<org.apache.tika.server.HTMLHelper: java.lang.String POST_BODY>;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.tika.server.HTMLHelper: java.lang.String BODY_VAR> = "[[BODY]]";

        <org.apache.tika.server.HTMLHelper: java.lang.String TITLE_VAR> = "[[TITLE]]";

        <org.apache.tika.server.HTMLHelper: java.lang.String PATH> = "/tikaserver-template.html";

        return;
    }
}
