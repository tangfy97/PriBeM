public final class org.apache.commons.fileupload.util.Streams extends java.lang.Object
{
    private static final int DEFAULT_BUFFER_SIZE;

    private void <init>()
    {
        org.apache.commons.fileupload.util.Streams r0;

        r0 := @this: org.apache.commons.fileupload.util.Streams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long copy(java.io.InputStream, java.io.OutputStream, boolean) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r2;
        long $l0;
        java.io.InputStream r0;
        boolean z0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        $r2 = newarray (byte)[8192];

        $l0 = staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])>(r0, r1, z0, $r2);

        return $l0;
    }

    public static long copy(java.io.InputStream, java.io.OutputStream, boolean, byte[]) throws java.io.IOException
    {
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7;
        byte[] r2;
        long $l1, l2, l3;
        int $i0, $i5;
        boolean z0;
        java.io.OutputStream r0, r8;
        java.io.InputStream r1, r9;

        r1 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        r2 := @parameter3: byte[];

        r8 = r0;

        r9 = r1;

     label01:
        l2 = 0L;

     label02:
        $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2);

        $i5 = (int) -1;

        if $i0 != $i5 goto label03;

        goto label05;

     label03:
        if $i0 <= 0 goto label04;

        $l1 = (long) $i0;

        l2 = l2 + $l1;

        if r0 == null goto label04;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0);

     label04:
        goto label02;

     label05:
        if r0 == null goto label08;

        if z0 == 0 goto label06;

        virtualinvoke r0.<java.io.OutputStream: void close()>();

        goto label07;

     label06:
        virtualinvoke r0.<java.io.OutputStream: void flush()>();

     label07:
        r8 = null;

     label08:
        virtualinvoke r1.<java.io.InputStream: void close()>();

        r9 = null;

        l3 = l2;

     label09:
        if null == null goto label13;

     label10:
        virtualinvoke r9.<java.io.InputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r7 := @caughtexception;

     label13:
        if z0 == 0 goto label17;

        if r8 == null goto label17;

     label14:
        virtualinvoke r8.<java.io.OutputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r6 := @caughtexception;

     label17:
        return l3;

     label18:
        $r5 := @caughtexception;

     label19:
        if r9 == null goto label23;

     label20:
        virtualinvoke r9.<java.io.InputStream: void close()>();

     label21:
        goto label23;

     label22:
        $r4 := @caughtexception;

     label23:
        if z0 == 0 goto label27;

        if r8 == null goto label27;

     label24:
        virtualinvoke r8.<java.io.OutputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r3 := @caughtexception;

     label27:
        throw $r5;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label01 to label09 with label18;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public static java.lang.String asString(java.io.InputStream) throws java.io.IOException
    {
        java.lang.String $r2;
        java.io.ByteArrayOutputStream $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean)>(r1, $r0, 1);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String asString(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r0;
        java.lang.String r2, $r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean)>(r1, $r0, 1);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>(r2);

        return $r3;
    }

    public static java.lang.String checkFileName(java.lang.String)
    {
        org.apache.commons.fileupload.InvalidFileNameException $r9;
        char $c2;
        java.lang.StringBuffer $r4, $r5, $r7, $r8;
        int $i0, $i1, i3, $i5, $i6;
        java.lang.String r0, $r6;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label6;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(0);

        $i5 = (int) -1;

        if $i0 == $i5 goto label6;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label5;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i6 = (int) $c2;

        lookupswitch($i6)
        {
            case 0: goto label2;
            default: goto label3;
        };

     label2:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\0");

        goto label4;

     label3:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $r9 = new org.apache.commons.fileupload.InvalidFileNameException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid file name: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.commons.fileupload.InvalidFileNameException: void <init>(java.lang.String,java.lang.String)>(r0, $r6);

        throw $r9;

     label6:
        return r0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.fileupload.util.Streams: int DEFAULT_BUFFER_SIZE> = 8192;

        return;
    }
}
