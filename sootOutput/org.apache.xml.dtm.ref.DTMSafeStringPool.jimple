public class org.apache.xml.dtm.ref.DTMSafeStringPool extends org.apache.xml.dtm.ref.DTMStringPool
{

    public void <init>()
    {
        org.apache.xml.dtm.ref.DTMSafeStringPool r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMSafeStringPool;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMStringPool: void <init>()>();

        return;
    }

    public synchronized void removeAllElements()
    {
        org.apache.xml.dtm.ref.DTMSafeStringPool r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMSafeStringPool;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMStringPool: void removeAllElements()>();

        return;
    }

    public synchronized java.lang.String indexToString(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        int i0;
        java.lang.String $r1;
        org.apache.xml.dtm.ref.DTMSafeStringPool r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMSafeStringPool;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.xml.dtm.ref.DTMStringPool: java.lang.String indexToString(int)>(i0);

        return $r1;
    }

    public synchronized int stringToIndex(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        org.apache.xml.dtm.ref.DTMSafeStringPool r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMSafeStringPool;

        r1 := @parameter0: java.lang.String;

        $i0 = specialinvoke r0.<org.apache.xml.dtm.ref.DTMStringPool: int stringToIndex(java.lang.String)>(r1);

        return $i0;
    }

    public static void main(java.lang.String[])
    {
        boolean $z0;
        java.lang.String[] $r0, r34;
        java.lang.StringBuffer $r4, $r6, $r7, $r8, $r9, $r12, $r14, $r15, $r16, $r17, $r21, $r23, $r24, $r25, $r26, $r28, $r30, $r31, $r32;
        int $i0, $i1, i2, i3, $i4, i5, $i6, i7, $i8;
        java.lang.String $r3, $r10, $r11, $r18, $r19, $r20, $r27, $r33;
        java.io.PrintStream $r2, $r5, $r13, $r22, $r29;
        org.apache.xml.dtm.ref.DTMSafeStringPool $r1;

        r34 := @parameter0: java.lang.String[];

        $r0 = newarray (java.lang.String)[40];

        $r0[0] = "Zero";

        $r0[1] = "One";

        $r0[2] = "Two";

        $r0[3] = "Three";

        $r0[4] = "Four";

        $r0[5] = "Five";

        $r0[6] = "Six";

        $r0[7] = "Seven";

        $r0[8] = "Eight";

        $r0[9] = "Nine";

        $r0[10] = "Ten";

        $r0[11] = "Eleven";

        $r0[12] = "Twelve";

        $r0[13] = "Thirteen";

        $r0[14] = "Fourteen";

        $r0[15] = "Fifteen";

        $r0[16] = "Sixteen";

        $r0[17] = "Seventeen";

        $r0[18] = "Eighteen";

        $r0[19] = "Nineteen";

        $r0[20] = "Twenty";

        $r0[21] = "Twenty-One";

        $r0[22] = "Twenty-Two";

        $r0[23] = "Twenty-Three";

        $r0[24] = "Twenty-Four";

        $r0[25] = "Twenty-Five";

        $r0[26] = "Twenty-Six";

        $r0[27] = "Twenty-Seven";

        $r0[28] = "Twenty-Eight";

        $r0[29] = "Twenty-Nine";

        $r0[30] = "Thirty";

        $r0[31] = "Thirty-One";

        $r0[32] = "Thirty-Two";

        $r0[33] = "Thirty-Three";

        $r0[34] = "Thirty-Four";

        $r0[35] = "Thirty-Five";

        $r0[36] = "Thirty-Six";

        $r0[37] = "Thirty-Seven";

        $r0[38] = "Thirty-Eight";

        $r0[39] = "Thirty-Nine";

        $r1 = new org.apache.xml.dtm.ref.DTMSafeStringPool;

        specialinvoke $r1.<org.apache.xml.dtm.ref.DTMSafeStringPool: void <init>()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("If no complaints are printed below, we passed initial test.");

        i2 = 0;

        goto label11;

     label01:
        i3 = 0;

        goto label04;

     label02:
        $r3 = $r0[i3];

        $i0 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMStringPool: int stringToIndex(java.lang.String)>($r3);

        if $i0 == i3 goto label03;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tMismatch populating pool: assigned ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for create ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label03:
        i3 = i3 + 1;

     label04:
        $i4 = lengthof $r0;

        if i3 < $i4 goto label02;

        i5 = 0;

        goto label07;

     label05:
        $r11 = $r0[i5];

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMStringPool: int stringToIndex(java.lang.String)>($r11);

        if $i1 == i5 goto label06;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tMismatch in stringToIndex: returned ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for lookup ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label06:
        i5 = i5 + 1;

     label07:
        $i6 = lengthof $r0;

        if i5 < $i6 goto label05;

        i7 = 0;

        goto label10;

     label08:
        $r19 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMStringPool: java.lang.String indexToString(int)>(i7);

        $r20 = $r0[i7];

        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z0 != 0 goto label09;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tMismatch in indexToString: returned");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for lookup ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i7);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label09:
        i7 = i7 + 1;

     label10:
        $i8 = lengthof $r0;

        if i7 < $i8 goto label08;

        virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMStringPool: void removeAllElements()>();

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nPass ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" complete\n");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);

        i2 = i2 + 1;

     label11:
        if i2 <= 1 goto label01;

        return;
    }
}
