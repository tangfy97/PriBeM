class com.mycila.inject.internal.guava.collect.AbstractMultimap$3 extends com.mycila.inject.internal.guava.collect.Multimaps$EntrySet
{
    final com.mycila.inject.internal.guava.collect.AbstractMultimap this$0;

    void <init>(com.mycila.inject.internal.guava.collect.AbstractMultimap)
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$3 r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$3;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.AbstractMultimap;

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$3: com.mycila.inject.internal.guava.collect.AbstractMultimap this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Multimaps$EntrySet: void <init>()>();

        return;
    }

    com.mycila.inject.internal.guava.collect.Multimap multimap()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$3 r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$3;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$3: com.mycila.inject.internal.guava.collect.AbstractMultimap this$0>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$3 r0;
        java.util.Iterator $r2;
        com.mycila.inject.internal.guava.collect.AbstractMultimap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$3;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$3: com.mycila.inject.internal.guava.collect.AbstractMultimap this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.AbstractMultimap: java.util.Iterator createEntryIterator()>();

        return $r2;
    }
}
