public abstract class org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler extends org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler
{
    private javax.management.modelmbean.ModelMBeanNotificationInfo[] notificationInfos;
    private final java.util.Map notificationInfoMappings;

    public void <init>()
    {
        org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler r0;
        java.util.HashMap $r1;

        r0 := @this: org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler;

        specialinvoke r0.<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: java.util.Map notificationInfoMappings> = $r1;

        return;
    }

    public void setNotificationInfos(org.springframework.jmx.export.metadata.ManagedNotification[])
    {
        javax.management.modelmbean.ModelMBeanNotificationInfo $r3;
        org.springframework.jmx.export.metadata.ManagedNotification[] r0;
        org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler r4;
        javax.management.modelmbean.ModelMBeanNotificationInfo[] r1;
        int $i0, $i1, i2;
        org.springframework.jmx.export.metadata.ManagedNotification r2;

        r4 := @this: org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler;

        r0 := @parameter0: org.springframework.jmx.export.metadata.ManagedNotification[];

        $i0 = lengthof r0;

        r1 = newarray (javax.management.modelmbean.ModelMBeanNotificationInfo)[$i0];

        i2 = 0;

        goto label2;

     label1:
        r2 = r0[i2];

        $r3 = staticinvoke <org.springframework.jmx.export.metadata.JmxMetadataUtils: javax.management.modelmbean.ModelMBeanNotificationInfo convertToModelMBeanNotificationInfo(org.springframework.jmx.export.metadata.ManagedNotification)>(r2);

        r1[i2] = $r3;

        i2 = i2 + 1;

     label2:
        $i1 = lengthof r0;

        if i2 < $i1 goto label1;

        r4.<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanNotificationInfo[] notificationInfos> = r1;

        return;
    }

    public void setNotificationInfoMappings(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler r5;
        javax.management.modelmbean.ModelMBeanNotificationInfo[] $r10;
        java.util.Map r0, $r6;
        java.lang.Object $r3, $r7, $r9;
        java.lang.String $r8;
        boolean $z0;

        r5 := @this: org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = r5.<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: java.util.Map notificationInfoMappings>;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = specialinvoke r5.<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanNotificationInfo[] extractNotificationMetadata(java.lang.Object)>($r9);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r10);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    protected javax.management.modelmbean.ModelMBeanNotificationInfo[] getNotificationInfo(java.lang.Object, java.lang.String)
    {
        org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler r1;
        javax.management.modelmbean.ModelMBeanNotificationInfo[] r5, $r6;
        java.util.Map $r2;
        java.lang.Object $r3, r4;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler;

        r4 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.String;

        r5 = (javax.management.modelmbean.ModelMBeanNotificationInfo[]) null;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r2 = r1.<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: java.util.Map notificationInfoMappings>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (javax.management.modelmbean.ModelMBeanNotificationInfo[]) $r3;

     label1:
        if r5 != null goto label2;

        r5 = r1.<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanNotificationInfo[] notificationInfos>;

     label2:
        if r5 == null goto label3;

        $r6 = r5;

        goto label4;

     label3:
        $r6 = newarray (javax.management.modelmbean.ModelMBeanNotificationInfo)[0];

     label4:
        return $r6;
    }

    private javax.management.modelmbean.ModelMBeanNotificationInfo[] extractNotificationMetadata(java.lang.Object)
    {
        java.lang.Object[] $r9;
        javax.management.modelmbean.ModelMBeanNotificationInfo $r6, $r12;
        java.util.ArrayList $r2;
        org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler r13;
        javax.management.modelmbean.ModelMBeanNotificationInfo[] $r8, $r10, $r11;
        int $i0;
        org.springframework.jmx.export.metadata.ManagedNotification r5, r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r3;
        java.util.Collection r15;
        java.lang.IllegalArgumentException $r1, $r7;
        java.lang.Object r0, $r4;

        r13 := @this: org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.springframework.jmx.export.metadata.ManagedNotification;

        if $z0 == 0 goto label1;

        r14 = (org.springframework.jmx.export.metadata.ManagedNotification) r0;

        $r11 = newarray (javax.management.modelmbean.ModelMBeanNotificationInfo)[1];

        $r12 = staticinvoke <org.springframework.jmx.export.metadata.JmxMetadataUtils: javax.management.modelmbean.ModelMBeanNotificationInfo convertToModelMBeanNotificationInfo(org.springframework.jmx.export.metadata.ManagedNotification)>(r14);

        $r11[0] = $r12;

        return $r11;

     label1:
        $z1 = r0 instanceof java.util.Collection;

        if $z1 == 0 goto label5;

        r15 = (java.util.Collection) r0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke r15.<java.util.Collection: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z3 = $r4 instanceof org.springframework.jmx.export.metadata.ManagedNotification;

        if $z3 != 0 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property \'notificationInfoMappings\' only accepts ManagedNotifications for Map values");

        throw $r7;

     label3:
        r5 = (org.springframework.jmx.export.metadata.ManagedNotification) $r4;

        $r6 = staticinvoke <org.springframework.jmx.export.metadata.JmxMetadataUtils: javax.management.modelmbean.ModelMBeanNotificationInfo convertToModelMBeanNotificationInfo(org.springframework.jmx.export.metadata.ManagedNotification)>(r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

     label4:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r8 = newarray (javax.management.modelmbean.ModelMBeanNotificationInfo)[$i0];

        $r9 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (javax.management.modelmbean.ModelMBeanNotificationInfo[]) $r9;

        return $r10;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property \'notificationInfoMappings\' only accepts ManagedNotifications for Map values");

        throw $r1;
    }
}
