public class org.codehaus.jackson.map.ser.CustomSerializerFactory extends org.codehaus.jackson.map.ser.BeanSerializerFactory
{
    protected java.util.HashMap _directClassMappings;
    protected org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride;
    protected java.util.HashMap _transitiveClassMappings;
    protected java.util.HashMap _interfaceMappings;

    public void <init>()
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: void <init>(org.codehaus.jackson.map.SerializerFactory$Config)>(null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.SerializerFactory$Config)
    {
        org.codehaus.jackson.map.SerializerFactory$Config r1;
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: org.codehaus.jackson.map.SerializerFactory$Config;

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory: void <init>(org.codehaus.jackson.map.SerializerFactory$Config)>(r1);

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings> = null;

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings> = null;

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings> = null;

        return;
    }

    public org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config)
    {
        java.lang.IllegalStateException $r4;
        org.codehaus.jackson.map.SerializerFactory$Config r3;
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0, $r2;
        java.lang.Class $r1, $r7;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r11;
        java.lang.String $r8, $r12;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r3 := @parameter0: org.codehaus.jackson.map.SerializerFactory$Config;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Lorg/codehaus/jackson/map/ser/CustomSerializerFactory;" goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subtype of CustomSerializerFactory (");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has not properly overridden method \'withAdditionalSerializers\': can not instantiate subtype with ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("additional serializer definitions");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label1:
        $r2 = new org.codehaus.jackson.map.ser.CustomSerializerFactory;

        specialinvoke $r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: void <init>(org.codehaus.jackson.map.SerializerFactory$Config)>(r3);

        return $r2;
    }

    public void addGenericMapping(java.lang.Class, org.codehaus.jackson.map.JsonSerializer)
    {
        java.util.HashMap $r3, $r5, $r6, $r7, $r8, $r9;
        org.codehaus.jackson.map.JsonSerializer r4;
        org.codehaus.jackson.map.ser.CustomSerializerFactory r2;
        java.lang.Class r1;
        org.codehaus.jackson.map.type.ClassKey $r0;
        boolean $z0;

        r2 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        $r0 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke $r0.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r1);

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label2;

        $r7 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        if $r7 != null goto label1;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings> = $r9;

     label1:
        $r8 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r4);

        goto label4;

     label2:
        $r3 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings>;

        if $r3 != null goto label3;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings> = $r6;

     label3:
        $r5 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r4);

     label4:
        return;
    }

    public void addSpecificMapping(java.lang.Class, org.codehaus.jackson.map.JsonSerializer)
    {
        java.util.HashMap $r3, $r5, $r6;
        org.codehaus.jackson.map.ser.CustomSerializerFactory r2;
        int $i0;
        java.lang.String $r10, $r13, $r17, $r20;
        org.codehaus.jackson.map.type.ClassKey $r0;
        boolean $z0, $z1;
        org.codehaus.jackson.map.JsonSerializer r4;
        java.lang.IllegalArgumentException $r7, $r14;
        java.lang.Class r1;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r15, $r16, $r18, $r19;

        r2 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        $r0 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke $r0.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r1);

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not add specific mapping for an interface (");

        $r17 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z1 == 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not add specific mapping for an abstract class (");

        $r10 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label2:
        $r3 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings>;

        if $r3 != null goto label3;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings> = $r6;

     label3:
        $r5 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r4);

        return;
    }

    public void setEnumSerializer(org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        org.codehaus.jackson.map.JsonSerializer r1;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: org.codehaus.jackson.map.JsonSerializer;

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride> = r1;

        return;
    }

    public org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.JsonSerializer $r4, $r6;
        org.codehaus.jackson.map.SerializationConfig r3;
        org.codehaus.jackson.map.BeanProperty r5;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r3 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        r5 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer findCustomSerializer(java.lang.Class,org.codehaus.jackson.map.SerializationConfig)>($r2, r3);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r6 = specialinvoke r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r3, r1, r5);

        return $r6;
    }

    protected org.codehaus.jackson.map.JsonSerializer findCustomSerializer(java.lang.Class, org.codehaus.jackson.map.SerializationConfig)
    {
        java.util.HashMap $r3, $r4, $r5, $r6, $r9, $r13;
        org.codehaus.jackson.map.SerializationConfig r15;
        org.codehaus.jackson.map.ser.CustomSerializerFactory r2;
        org.codehaus.jackson.map.type.ClassKey $r0;
        boolean $z0;
        org.codehaus.jackson.map.JsonSerializer $r8, $r11, $r12, r16, r18, r19;
        java.lang.Class r1, r17, r20;
        java.lang.Object $r7, $r10, $r14;

        r2 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: java.lang.Class;

        r15 := @parameter1: org.codehaus.jackson.map.SerializationConfig;

        $r0 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke $r0.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r1);

        $r3 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings>;

        if $r3 == null goto label1;

        $r13 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        r16 = (org.codehaus.jackson.map.JsonSerializer) $r14;

        if r16 == null goto label1;

        return r16;

     label1:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isEnum()>();

        if $z0 == 0 goto label2;

        $r11 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride>;

        if $r11 == null goto label2;

        $r12 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride>;

        return $r12;

     label2:
        $r4 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings>;

        if $r4 == null goto label5;

        r17 = r1;

     label3:
        if r17 == null goto label5;

        virtualinvoke $r0.<org.codehaus.jackson.map.type.ClassKey: void reset(java.lang.Class)>(r17);

        $r9 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        r18 = (org.codehaus.jackson.map.JsonSerializer) $r10;

        if r18 == null goto label4;

        return r18;

     label4:
        r17 = virtualinvoke r17.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label3;

     label5:
        $r5 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        if $r5 == null goto label9;

        virtualinvoke $r0.<org.codehaus.jackson.map.type.ClassKey: void reset(java.lang.Class)>(r1);

        $r6 = r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        r19 = (org.codehaus.jackson.map.JsonSerializer) $r7;

        if r19 == null goto label6;

        return r19;

     label6:
        r20 = r1;

     label7:
        if r20 == null goto label9;

        $r8 = virtualinvoke r2.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey)>(r20, $r0);

        if $r8 == null goto label8;

        return $r8;

     label8:
        r20 = virtualinvoke r20.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label7;

     label9:
        return null;
    }

    protected org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class, org.codehaus.jackson.map.type.ClassKey)
    {
        java.lang.Class[] $r1;
        java.util.HashMap $r5;
        org.codehaus.jackson.map.JsonSerializer $r7, r8;
        org.codehaus.jackson.map.ser.CustomSerializerFactory r4;
        int i0, i1;
        java.lang.Class r0, r2;
        java.lang.Object $r6;
        org.codehaus.jackson.map.type.ClassKey r3;

        r4 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: org.codehaus.jackson.map.type.ClassKey;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = $r1[i1];

        virtualinvoke r3.<org.codehaus.jackson.map.type.ClassKey: void reset(java.lang.Class)>(r2);

        $r5 = r4.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r8 = (org.codehaus.jackson.map.JsonSerializer) $r6;

        if r8 == null goto label2;

        return r8;

     label2:
        $r7 = virtualinvoke r4.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey)>(r2, r3);

        if $r7 == null goto label3;

        return $r7;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return null;
    }
}
