public class org.apache.tika.language.LanguageProfilerBuilder extends java.lang.Object
{
    static final int ABSOLUTE_MIN_NGRAM_LENGTH;
    static final int ABSOLUTE_MAX_NGRAM_LENGTH;
    static final int DEFAULT_MIN_NGRAM_LENGTH;
    static final int DEFAULT_MAX_NGRAM_LENGTH;
    static final java.lang.String FILE_EXTENSION;
    static final int MAX_SIZE;
    static final char SEPARATOR;
    private static final java.lang.String SEP_CHARSEQ;
    private java.lang.String name;
    private java.util.List sorted;
    private int minLength;
    private int maxLength;
    private int[] ngramcounts;
    private java.util.Map ngrams;
    private org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word;

    public void <init>(java.lang.String, int, int)
    {
        int i0, i1;
        org.apache.tika.language.LanguageProfilerBuilder r0;
        org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer $r1;
        java.util.HashMap $r2;
        java.lang.String r3;

        r0 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.lang.String name> = null;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted> = null;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int minLength> = 3;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength> = 3;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts> = null;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams> = null;

        $r1 = new org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer;

        specialinvoke $r1.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: void <init>()>();

        r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(4000);

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams> = $r2;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int minLength> = i0;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength> = i1;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.lang.String name> = r3;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.tika.language.LanguageProfilerBuilder r0;
        org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer $r1;
        java.util.HashMap $r2;
        java.lang.String r3;

        r0 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.lang.String name> = null;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted> = null;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int minLength> = 3;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength> = 3;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts> = null;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams> = null;

        $r1 = new org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer;

        specialinvoke $r1.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: void <init>()>();

        r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(4000);

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams> = $r2;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int minLength> = 3;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength> = 3;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.lang.String name> = r3;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.tika.language.LanguageProfilerBuilder r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        $r1 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.lang.String name>;

        return $r1;
    }

    public void add(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r1;
        int $i0, $i1, i2;
        org.apache.tika.language.LanguageProfilerBuilder r0;

        r0 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r1 := @parameter0: java.lang.StringBuffer;

        i2 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int minLength>;

     label1:
        $i0 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength>;

        if i2 > $i0 goto label2;

        $i1 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i2 >= $i1 goto label2;

        specialinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder: void add(java.lang.StringBuffer,int)>(r1, i2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void add(org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer)
    {
        java.lang.CharSequence $r2;
        org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer r0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.apache.tika.language.LanguageProfilerBuilder r1;

        r1 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r0 := @parameter0: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer;

        $i0 = virtualinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: int length()>();

        $i1 = r1.<org.apache.tika.language.LanguageProfilerBuilder: int minLength>;

        if $i0 < $i1 goto label2;

        $i2 = r1.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength>;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);

        i5 = r1.<org.apache.tika.language.LanguageProfilerBuilder: int minLength>;

     label1:
        if i5 > $i3 goto label2;

        $i4 = $i0 - i5;

        $r2 = virtualinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: java.lang.CharSequence subSequence(int,int)>($i4, $i0);

        specialinvoke r1.<org.apache.tika.language.LanguageProfilerBuilder: void add(java.lang.CharSequence)>($r2);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    private void add(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        org.apache.tika.language.LanguageProfilerBuilder$NGramEntry $r5, r7;
        java.util.Map $r3, $r6;
        org.apache.tika.language.LanguageProfilerBuilder r2;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = <org.apache.tika.language.LanguageProfilerBuilder: java.lang.String SEP_CHARSEQ>;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r2.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r7 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r4;

        if r7 != null goto label2;

        $r5 = new org.apache.tika.language.LanguageProfilerBuilder$NGramEntry;

        specialinvoke $r5.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: void <init>(java.lang.CharSequence)>(r0);

        r7 = $r5;

        $r6 = r2.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r5);

     label2:
        virtualinvoke r7.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: void inc()>();

        return;
    }

    public void analyze(java.lang.StringBuilder)
    {
        java.util.Map $r1, $r15;
        int $i0, $i3, i4, $i5;
        org.apache.tika.language.LanguageProfilerBuilder r0;
        boolean $z0;
        org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        char $c1, $c2;
        java.lang.StringBuilder r4;

        r0 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r4 := @parameter0: java.lang.StringBuilder;

        $r1 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        if $r1 == null goto label1;

        $r15 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        interfaceinvoke $r15.<java.util.Map: void clear()>();

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted> = null;

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts> = null;

     label1:
        $r2 = r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word>;

        $r3 = virtualinvoke $r2.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer clear()>();

        virtualinvoke $r3.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer append(char)>(95);

        i4 = 0;

     label2:
        $i5 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();

        if i4 >= $i5 goto label5;

        $c1 = virtualinvoke r4.<java.lang.StringBuilder: char charAt(int)>(i4);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c2);

        if $z0 == 0 goto label3;

        $r13 = r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word>;

        $r14 = virtualinvoke $r13.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer append(char)>($c2);

        specialinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder: void add(org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer)>($r14);

        goto label4;

     label3:
        $r8 = r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word>;

        $i3 = virtualinvoke $r8.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: int length()>();

        if $i3 <= 1 goto label4;

        $r9 = r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word>;

        $r10 = virtualinvoke $r9.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer append(char)>(95);

        specialinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder: void add(org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer)>($r10);

        $r11 = r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word>;

        $r12 = virtualinvoke $r11.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer clear()>();

        virtualinvoke $r12.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer append(char)>(95);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        $r5 = r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word>;

        $i0 = virtualinvoke $r5.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: int length()>();

        if $i0 <= 1 goto label6;

        $r6 = r0.<org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word>;

        $r7 = virtualinvoke $r6.<org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer: org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer append(char)>(95);

        specialinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder: void add(org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer)>($r7);

     label6:
        virtualinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder: void normalize()>();

        return;
    }

    private void add(java.lang.StringBuffer, int)
    {
        java.lang.CharSequence $r2;
        java.lang.StringBuffer r0;
        int $i0, i1, $i2, $i3, i4;
        org.apache.tika.language.LanguageProfilerBuilder r1;

        r1 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r0 := @parameter0: java.lang.StringBuffer;

        i1 := @parameter1: int;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        $i2 = $i0 - i1;

        if i4 > $i2 goto label2;

        $i3 = i4 + i1;

        $r2 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.CharSequence subSequence(int,int)>(i4, $i3);

        specialinvoke r1.<org.apache.tika.language.LanguageProfilerBuilder: void add(java.lang.CharSequence)>($r2);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    protected void normalize()
    {
        org.apache.tika.language.LanguageProfilerBuilder$NGramEntry r13, r14;
        int[] $r4, $r9, $r10, $r12;
        java.util.Map $r1, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.tika.language.LanguageProfilerBuilder r0;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r7;
        java.util.Collection $r2, $r6;
        float $f0, $f1, $f2;
        java.lang.Object $r8, $r11;

        r0 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        $r1 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $r4 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts>;

        if $r4 != null goto label2;

        $i3 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength>;

        $i4 = $i3 + 1;

        $r10 = newarray (int)[$i4];

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts> = $r10;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r11;

        $r12 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts>;

        $i5 = virtualinvoke r13.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: int size()>();

        $i6 = $r12[$i5];

        $i7 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: int access$000(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>(r13);

        $i8 = $i6 + $i7;

        $r12[$i5] = $i8;

        goto label1;

     label2:
        $r5 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r8;

        $i0 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: int access$000(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>(r14);

        $f0 = (float) $i0;

        $r9 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts>;

        $i1 = virtualinvoke r14.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: int size()>();

        $i2 = $r9[$i1];

        $f1 = (float) $i2;

        $f2 = $f0 / $f1;

        staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: float access$102(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry,float)>(r14, $f2);

        goto label3;

     label4:
        return;
    }

    public java.util.List getSorted()
    {
        java.util.Collection $r4;
        java.util.ArrayList $r2;
        java.util.List $r1, $r5, $r6, $r7, $r8, $r9;
        java.util.Map $r3;
        int $i0;
        org.apache.tika.language.LanguageProfilerBuilder r0;

        r0 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        $r1 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted> = $r2;

        $r5 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r5);

        $r6 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 <= 1000 goto label1;

        $r7 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, 1000);

        r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted> = $r8;

     label1:
        $r9 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List sorted>;

        return $r9;
    }

    public java.lang.String toString()
    {
        org.apache.tika.language.LanguageProfilerBuilder$NGramEntry r10;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r11, $r13, $r14, $r15, $r16, $r17;
        int $i0;
        org.apache.tika.language.LanguageProfilerBuilder r2;
        java.lang.String $r3, $r8;
        boolean $z0;
        java.util.Iterator $r7;
        java.lang.CharSequence $r12;
        java.util.List $r6;
        float $f0;
        java.lang.Object $r9;

        r2 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NGramProfile: ");

        $r3 = r2.<org.apache.tika.language.LanguageProfilerBuilder: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r6 = virtualinvoke r2.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List getSorted()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r9;

        $r11 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r12 = r10.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: java.lang.CharSequence seq>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $i0 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: int access$000(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>(r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $f0 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: float access$100(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>(r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]\n");

        goto label1;

     label2:
        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public float getSimilarity(org.apache.tika.language.LanguageProfilerBuilder) throws org.apache.tika.exception.TikaException
    {
        java.util.Map $r8, $r10, $r15, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.lang.CharSequence $r7, $r9, $r14, $r16;
        java.lang.Exception $r20;
        java.util.List $r1, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12;
        org.apache.tika.language.LanguageProfilerBuilder$NGramEntry $r12, $r19, r22, r23;
        org.apache.tika.exception.TikaException $r21;
        org.apache.tika.language.LanguageProfilerBuilder r0, r3;
        java.util.Iterator $r2, $r5;
        java.lang.Object $r6, $r11, $r13, $r18;

        r3 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r0 := @parameter0: org.apache.tika.language.LanguageProfilerBuilder;

        f12 = 0.0F;

     label01:
        $r1 = virtualinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List getSorted()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r13 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r13;

        $r15 = r3.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r14 = r22.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: java.lang.CharSequence seq>;

        $z3 = interfaceinvoke $r15.<java.util.Map: boolean containsKey(java.lang.Object)>($r14);

        if $z3 == 0 goto label03;

        $f7 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: float access$100(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>(r22);

        $r17 = r3.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r16 = r22.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: java.lang.CharSequence seq>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        $r19 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r18;

        $f8 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: float access$100(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>($r19);

        $f9 = $f7 - $f8;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f9);

        $f11 = $f10 / 2.0F;

        f12 = f12 + $f11;

        goto label04;

     label03:
        $f6 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: float access$100(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>(r22);

        f12 = f12 + $f6;

     label04:
        goto label02;

     label05:
        $r4 = virtualinvoke r3.<org.apache.tika.language.LanguageProfilerBuilder: java.util.List getSorted()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r6;

        $r8 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r7 = r23.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: java.lang.CharSequence seq>;

        $z2 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z2 == 0 goto label07;

        $f1 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: float access$100(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>(r23);

        $r10 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r9 = r23.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: java.lang.CharSequence seq>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r12 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r11;

        $f2 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: float access$100(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>($r12);

        $f3 = $f1 - $f2;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $f5 = $f4 / 2.0F;

        f12 = f12 + $f5;

        goto label08;

     label07:
        $f0 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: float access$100(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)>(r23);

        f12 = f12 + $f0;

     label08:
        goto label06;

     label09:
        goto label11;

     label10:
        $r20 := @caughtexception;

        $r21 = new org.apache.tika.exception.TikaException;

        specialinvoke $r21.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("Could not calculate a score how well NGramProfiles match each other");

        throw $r21;

     label11:
        return f12;

        catch java.lang.Exception from label01 to label09 with label10;
    }

    public void load(java.io.InputStream) throws java.io.IOException
    {
        org.apache.tika.language.LanguageProfilerBuilder$NGramEntry $r16;
        int[] $r2, $r12;
        java.util.Map $r1, $r10;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.tika.language.LanguageProfilerBuilder r0;
        java.lang.String $r6, $r7, $r8, $r13;
        java.lang.CharSequence $r11;
        char $c2;
        java.io.InputStreamReader $r14;
        java.io.BufferedReader $r15;
        java.io.InputStream r5;

        r0 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r5 := @parameter0: java.io.InputStream;

        $r1 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $i0 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength>;

        $i1 = $i0 + 1;

        $r2 = newarray (int)[$i1];

        r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts> = $r2;

        $r15 = new java.io.BufferedReader;

        $r14 = new java.io.InputStreamReader;

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r5, "UTF-8");

        specialinvoke $r15.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);

     label1:
        $r13 = virtualinvoke $r15.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r13 == null goto label3;

        $c2 = virtualinvoke $r13.<java.lang.String: char charAt(int)>(0);

        $i11 = (int) $c2;

        if $i11 == 35 goto label1;

        $i3 = virtualinvoke $r13.<java.lang.String: int indexOf(int)>(32);

        $r6 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i4 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i5 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int minLength>;

        if $i4 < $i5 goto label2;

        $i6 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength>;

        if $i4 > $i6 goto label2;

        $i7 = $i3 + 1;

        $r8 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>($i7);

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r16 = new org.apache.tika.language.LanguageProfilerBuilder$NGramEntry;

        specialinvoke $r16.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: void <init>(java.lang.String,int)>($r7, $i8);

        $r10 = r0.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r11 = virtualinvoke $r16.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: java.lang.CharSequence getSeq()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r16);

        $r12 = r0.<org.apache.tika.language.LanguageProfilerBuilder: int[] ngramcounts>;

        $i9 = $r12[$i4];

        $i10 = $i9 + $i8;

        $r12[$i4] = $i10;

     label2:
        goto label1;

     label3:
        virtualinvoke r0.<org.apache.tika.language.LanguageProfilerBuilder: void normalize()>();

        return;
    }

    public static org.apache.tika.language.LanguageProfilerBuilder create(java.lang.String, java.io.InputStream, java.lang.String) throws org.apache.tika.exception.TikaException
    {
        byte[] r4;
        java.io.BufferedInputStream $r16;
        org.apache.tika.exception.TikaException $r20;
        int $i0, $i2;
        org.apache.tika.language.LanguageProfilerBuilder $r15;
        java.lang.String r1, r7, $r12, $r14, $r18;
        java.io.IOException $r8;
        java.lang.StringBuilder $r11, $r13, $r17, $r19;
        java.io.InputStream r3;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.InputStream;

        r7 := @parameter2: java.lang.String;

        $r15 = new org.apache.tika.language.LanguageProfilerBuilder;

        specialinvoke $r15.<org.apache.tika.language.LanguageProfilerBuilder: void <init>(java.lang.String,int,int)>(r1, 3, 3);

        $r16 = new java.io.BufferedInputStream;

        specialinvoke $r16.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r3);

        r4 = newarray (byte)[4096];

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

     label1:
        $i0 = virtualinvoke $r16.<java.io.BufferedInputStream: int read(byte[])>(r4);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r4, 0, $i0, r7);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        goto label1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r20 = new org.apache.tika.exception.TikaException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create profile, ");

        $r12 = virtualinvoke $r8.<java.io.IOException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r14);

        throw $r20;

     label4:
        virtualinvoke $r15.<org.apache.tika.language.LanguageProfilerBuilder: void analyze(java.lang.StringBuilder)>($r17);

        return $r15;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void save(java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r7, $r25;
        java.util.Date $r3;
        java.util.Map $r11, $r13;
        java.lang.CharSequence $r27;
        java.util.Collection $r12;
        java.util.List r29;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r18, $r20, $r21, $r22, $r23;
        org.apache.tika.language.LanguageProfilerBuilder$NGramEntry[] $r14, r16;
        java.lang.Object[] $r15;
        org.apache.tika.language.LanguageProfilerBuilder$NGramEntry $r26, $r28, r30;
        java.util.ArrayList $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        org.apache.tika.language.LanguageProfilerBuilder r10;
        java.lang.String $r6, $r19, $r24;
        java.io.OutputStream r0;
        java.lang.Object $r17;

        r10 := @this: org.apache.tika.language.LanguageProfilerBuilder;

        r0 := @parameter0: java.io.OutputStream;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# NgramProfile generated at ");

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for Apache Tika Language Identification\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r7);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r29 = $r9;

        $r11 = r10.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>();

        $r13 = r10.<org.apache.tika.language.LanguageProfilerBuilder: java.util.Map ngrams>;

        $i0 = interfaceinvoke $r13.<java.util.Map: int size()>();

        $r14 = newarray (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry)[$i0];

        $r15 = interfaceinvoke $r12.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        r16 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry[]) $r15;

        i7 = r10.<org.apache.tika.language.LanguageProfilerBuilder: int minLength>;

     label1:
        $i1 = r10.<org.apache.tika.language.LanguageProfilerBuilder: int maxLength>;

        if i7 > $i1 goto label6;

        i8 = 0;

     label2:
        $i4 = lengthof r16;

        if i8 >= $i4 goto label4;

        $r26 = r16[i8];

        $r27 = virtualinvoke $r26.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: java.lang.CharSequence getSeq()>();

        $i6 = interfaceinvoke $r27.<java.lang.CharSequence: int length()>();

        if $i6 != i7 goto label3;

        $r28 = r16[i8];

        interfaceinvoke r29.<java.util.List: boolean add(java.lang.Object)>($r28);

     label3:
        i8 = i8 + 1;

        goto label2;

     label4:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r29);

        $i5 = interfaceinvoke r29.<java.util.List: int size()>();

        if $i5 <= 1000 goto label5;

        r29 = interfaceinvoke r29.<java.util.List: java.util.List subList(int,int)>(0, 1000);

     label5:
        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>(r29);

        interfaceinvoke r29.<java.util.List: void clear()>();

        i7 = i7 + 1;

        goto label1;

     label6:
        i9 = 0;

     label7:
        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i9 >= $i2 goto label8;

        $r17 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i9);

        r30 = (org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r30.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: java.lang.String toString()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i3 = virtualinvoke r30.<org.apache.tika.language.LanguageProfilerBuilder$NGramEntry: int getCount()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke $r24.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r25);

        i9 = i9 + 1;

        goto label7;

     label8:
        virtualinvoke r0.<java.io.OutputStream: void flush()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        byte b1;
        java.lang.Exception $r50;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r15, $r25, $r26, $r33, $r34, $r35, $r40, $r41, $r42, $r43, $r44, $r57, $r60, $r65, $r68, $r72;
        java.lang.String $r9, $r16, $r27, $r36, $r45, $r46, $r47, $r48, r51, r52, r53, r54;
        java.io.FileOutputStream $r59;
        java.io.File $r55, $r58, $r61, $r63, $r66, $r69;
        boolean $z0, $z1, $z2;
        float $f0, $f1;
        java.lang.String[] r0;
        int $i0, i2, $i3, i4, i5, i6, i7, i8, i9, $i11;
        org.apache.tika.language.LanguageProfilerBuilder $r3, $r19, $r22, $r30, $r71;
        java.io.PrintStream $r13, $r24, $r39, $r49;
        java.io.FileInputStream $r56, $r62, $r64, $r67, $r70;

        r0 := @parameter0: java.lang.String[];

        b1 = 0;

        r51 = "";

        r52 = "";

        r53 = "";

        r54 = "";

        $i0 = lengthof r0;

        if $i0 != 0 goto label01;

        $r49 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("Usage: NGramProfile [-create profilename filename encoding] [-similarity file1 file2] [-score profile-name filename encoding]");

        $i11 = (int) -1;

        staticinvoke <java.lang.System: void exit(int)>($i11);

     label01:
        i2 = 0;

     label02:
        $i3 = lengthof r0;

        if i2 >= $i3 goto label06;

        $r46 = r0[i2];

        $z0 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>("-create");

        if $z0 == 0 goto label03;

        b1 = 1;

        i4 = i2 + 1;

        r51 = r0[i4];

        i5 = i4 + 1;

        r52 = r0[i5];

        i2 = i5 + 1;

        r54 = r0[i2];

     label03:
        $r47 = r0[i2];

        $z1 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>("-similarity");

        if $z1 == 0 goto label04;

        b1 = 2;

        i6 = i2 + 1;

        r52 = r0[i6];

        i7 = i6 + 1;

        r53 = r0[i7];

        i2 = i7 + 1;

        r54 = r0[i2];

     label04:
        $r48 = r0[i2];

        $z2 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>("-score");

        if $z2 == 0 goto label05;

        b1 = 3;

        i8 = i2 + 1;

        r51 = r0[i8];

        i9 = i8 + 1;

        r52 = r0[i9];

        i2 = i9 + 1;

        r54 = r0[i2];

     label05:
        i2 = i2 + 1;

        goto label02;

     label06:
        tableswitch(b1)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            default: goto label10;
        };

     label07:
        $r55 = new java.io.File;

        specialinvoke $r55.<java.io.File: void <init>(java.lang.String)>(r52);

        $r56 = new java.io.FileInputStream;

        specialinvoke $r56.<java.io.FileInputStream: void <init>(java.io.File)>($r55);

        $r30 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder create(java.lang.String,java.io.InputStream,java.lang.String)>(r51, $r56, r54);

        virtualinvoke $r56.<java.io.FileInputStream: void close()>();

        $r58 = new java.io.File;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ngp");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.io.File: void <init>(java.lang.String)>($r36);

        $r59 = new java.io.FileOutputStream;

        specialinvoke $r59.<java.io.FileOutputStream: void <init>(java.io.File)>($r58);

        virtualinvoke $r30.<org.apache.tika.language.LanguageProfilerBuilder: void save(java.io.OutputStream)>($r59);

        $r39 = <java.lang.System: java.io.PrintStream out>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new profile ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ngp");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was created.");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r45);

        goto label10;

     label08:
        $r61 = new java.io.File;

        specialinvoke $r61.<java.io.File: void <init>(java.lang.String)>(r52);

        $r62 = new java.io.FileInputStream;

        specialinvoke $r62.<java.io.FileInputStream: void <init>(java.io.File)>($r61);

        $r19 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder create(java.lang.String,java.io.InputStream,java.lang.String)>(r52, $r62, r54);

        virtualinvoke $r19.<org.apache.tika.language.LanguageProfilerBuilder: void normalize()>();

        $r63 = new java.io.File;

        specialinvoke $r63.<java.io.File: void <init>(java.lang.String)>(r53);

        $r64 = new java.io.FileInputStream;

        specialinvoke $r64.<java.io.FileInputStream: void <init>(java.io.File)>($r63);

        $r22 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder create(java.lang.String,java.io.InputStream,java.lang.String)>(r53, $r64, r54);

        virtualinvoke $r22.<org.apache.tika.language.LanguageProfilerBuilder: void normalize()>();

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Similarity is ");

        $f1 = virtualinvoke $r19.<org.apache.tika.language.LanguageProfilerBuilder: float getSimilarity(org.apache.tika.language.LanguageProfilerBuilder)>($r22);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);

        goto label10;

     label09:
        $r66 = new java.io.File;

        specialinvoke $r66.<java.io.File: void <init>(java.lang.String)>(r52);

        $r67 = new java.io.FileInputStream;

        specialinvoke $r67.<java.io.FileInputStream: void <init>(java.io.File)>($r66);

        $r3 = staticinvoke <org.apache.tika.language.LanguageProfilerBuilder: org.apache.tika.language.LanguageProfilerBuilder create(java.lang.String,java.io.InputStream,java.lang.String)>(r52, $r67, r54);

        $r69 = new java.io.File;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ngp");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<java.io.File: void <init>(java.lang.String)>($r9);

        $r70 = new java.io.FileInputStream;

        specialinvoke $r70.<java.io.FileInputStream: void <init>(java.io.File)>($r69);

        $r71 = new org.apache.tika.language.LanguageProfilerBuilder;

        specialinvoke $r71.<org.apache.tika.language.LanguageProfilerBuilder: void <init>(java.lang.String,int,int)>(r51, 3, 3);

        virtualinvoke $r71.<org.apache.tika.language.LanguageProfilerBuilder: void load(java.io.InputStream)>($r70);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Score is ");

        $f0 = virtualinvoke $r71.<org.apache.tika.language.LanguageProfilerBuilder: float getSimilarity(org.apache.tika.language.LanguageProfilerBuilder)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label10:
        goto label12;

     label11:
        $r50 := @caughtexception;

        virtualinvoke $r50.<java.lang.Exception: void printStackTrace()>();

     label12:
        return;

        catch java.lang.Exception from label06 to label10 with label11;
    }

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0;

        <org.apache.tika.language.LanguageProfilerBuilder: char SEPARATOR> = 95;

        <org.apache.tika.language.LanguageProfilerBuilder: int MAX_SIZE> = 1000;

        <org.apache.tika.language.LanguageProfilerBuilder: java.lang.String FILE_EXTENSION> = "ngp";

        <org.apache.tika.language.LanguageProfilerBuilder: int DEFAULT_MAX_NGRAM_LENGTH> = 3;

        <org.apache.tika.language.LanguageProfilerBuilder: int DEFAULT_MIN_NGRAM_LENGTH> = 3;

        <org.apache.tika.language.LanguageProfilerBuilder: int ABSOLUTE_MAX_NGRAM_LENGTH> = 3;

        <org.apache.tika.language.LanguageProfilerBuilder: int ABSOLUTE_MIN_NGRAM_LENGTH> = 3;

        $r0 = new java.lang.String;

        $r1 = newarray (char)[1];

        $r1[0] = 95;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);

        <org.apache.tika.language.LanguageProfilerBuilder: java.lang.String SEP_CHARSEQ> = $r0;

        return;
    }
}
