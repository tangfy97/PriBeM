class org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1 extends java.lang.Object implements com.google.common.base.Function
{
    final org.waveprotocol.wave.federation.xmpp.XmppFederationHost this$0;

    void <init>(org.waveprotocol.wave.federation.xmpp.XmppFederationHost)
    {
        org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1 r0;
        org.waveprotocol.wave.federation.xmpp.XmppFederationHost r1;

        r0 := @this: org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1;

        r1 := @parameter0: org.waveprotocol.wave.federation.xmpp.XmppFederationHost;

        r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1: org.waveprotocol.wave.federation.xmpp.XmppFederationHost this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.federation.WaveletFederationListener apply(java.lang.String)
    {
        org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1 r2;
        org.waveprotocol.wave.federation.xmpp.XmppFederationHostForDomain $r0;
        org.waveprotocol.wave.federation.xmpp.XmppManager $r4;
        java.lang.String r1, $r8;
        org.waveprotocol.wave.federation.xmpp.XmppDisco $r6;
        org.waveprotocol.wave.federation.xmpp.XmppFederationHost $r3, $r5, $r7;

        r2 := @this: org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.waveprotocol.wave.federation.xmpp.XmppFederationHostForDomain;

        $r3 = r2.<org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1: org.waveprotocol.wave.federation.xmpp.XmppFederationHost this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.xmpp.XmppFederationHost: org.waveprotocol.wave.federation.xmpp.XmppManager access$000(org.waveprotocol.wave.federation.xmpp.XmppFederationHost)>($r3);

        $r5 = r2.<org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1: org.waveprotocol.wave.federation.xmpp.XmppFederationHost this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.federation.xmpp.XmppFederationHost: org.waveprotocol.wave.federation.xmpp.XmppDisco access$100(org.waveprotocol.wave.federation.xmpp.XmppFederationHost)>($r5);

        $r7 = r2.<org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1: org.waveprotocol.wave.federation.xmpp.XmppFederationHost this$0>;

        $r8 = staticinvoke <org.waveprotocol.wave.federation.xmpp.XmppFederationHost: java.lang.String access$200(org.waveprotocol.wave.federation.xmpp.XmppFederationHost)>($r7);

        specialinvoke $r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationHostForDomain: void <init>(java.lang.String,org.waveprotocol.wave.federation.xmpp.XmppManager,org.waveprotocol.wave.federation.xmpp.XmppDisco,java.lang.String)>(r1, $r4, $r6, $r8);

        return $r0;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1 r0;
        org.waveprotocol.wave.federation.WaveletFederationListener $r3;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationHost$1: org.waveprotocol.wave.federation.WaveletFederationListener apply(java.lang.String)>($r2);

        return $r3;
    }
}
