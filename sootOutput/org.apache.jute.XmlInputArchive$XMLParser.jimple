class org.apache.jute.XmlInputArchive$XMLParser extends org.xml.sax.helpers.DefaultHandler
{
    private boolean charsValid;
    private java.util.ArrayList valList;

    private void <init>(java.util.ArrayList)
    {
        org.apache.jute.XmlInputArchive$XMLParser r0;
        java.util.ArrayList r1;

        r0 := @this: org.apache.jute.XmlInputArchive$XMLParser;

        r1 := @parameter0: java.util.ArrayList;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.apache.jute.XmlInputArchive$XMLParser: boolean charsValid> = 0;

        r0.<org.apache.jute.XmlInputArchive$XMLParser: java.util.ArrayList valList> = r1;

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.jute.XmlInputArchive$XMLParser r0;

        r0 := @this: org.apache.jute.XmlInputArchive$XMLParser;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.jute.XmlInputArchive$XMLParser r0;

        r0 := @this: org.apache.jute.XmlInputArchive$XMLParser;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.jute.XmlInputArchive$XMLParser r0;
        org.apache.jute.XmlInputArchive$Value $r11, $r18;
        java.util.ArrayList $r12, $r17;
        org.xml.sax.Attributes r16;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, r14, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: org.apache.jute.XmlInputArchive$XMLParser;

        r14 := @parameter0: java.lang.String;

        r15 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r16 := @parameter3: org.xml.sax.Attributes;

        r0.<org.apache.jute.XmlInputArchive$XMLParser: boolean charsValid> = 0;

        $r2 = "boolean";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = "i4";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r4 = "int";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label1;

        $r5 = "string";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 != 0 goto label1;

        $r6 = "double";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 != 0 goto label1;

        $r7 = "ex:i1";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 != 0 goto label1;

        $r8 = "ex:i8";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 != 0 goto label1;

        $r9 = "ex:float";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label2;

     label1:
        r0.<org.apache.jute.XmlInputArchive$XMLParser: boolean charsValid> = 1;

        $r17 = r0.<org.apache.jute.XmlInputArchive$XMLParser: java.util.ArrayList valList>;

        $r18 = new org.apache.jute.XmlInputArchive$Value;

        specialinvoke $r18.<org.apache.jute.XmlInputArchive$Value: void <init>(java.lang.String)>(r1);

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        goto label4;

     label2:
        $r10 = "struct";

        $z8 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z8 != 0 goto label3;

        $r13 = "array";

        $z9 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z9 == 0 goto label4;

     label3:
        $r12 = r0.<org.apache.jute.XmlInputArchive$XMLParser: java.util.ArrayList valList>;

        $r11 = new org.apache.jute.XmlInputArchive$Value;

        specialinvoke $r11.<org.apache.jute.XmlInputArchive$Value: void <init>(java.lang.String)>(r1);

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label4:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.jute.XmlInputArchive$XMLParser r0;
        org.apache.jute.XmlInputArchive$Value $r3;
        java.util.ArrayList $r5;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String r1, $r2, $r8, $r9, r10, r11;
        boolean $z0, $z1;

        r0 := @this: org.apache.jute.XmlInputArchive$XMLParser;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r0.<org.apache.jute.XmlInputArchive$XMLParser: boolean charsValid> = 0;

        $r2 = "struct";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r9 = "array";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $r5 = r0.<org.apache.jute.XmlInputArchive$XMLParser: java.util.ArrayList valList>;

        $r3 = new org.apache.jute.XmlInputArchive$Value;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.jute.XmlInputArchive$Value: void <init>(java.lang.String)>($r8);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label2:
        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.jute.XmlInputArchive$XMLParser r0;
        org.apache.jute.XmlInputArchive$Value r4;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1, i2, i3;
        char[] r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive$XMLParser;

        r5 := @parameter0: char[];

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        $z0 = r0.<org.apache.jute.XmlInputArchive$XMLParser: boolean charsValid>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.jute.XmlInputArchive$XMLParser: java.util.ArrayList valList>;

        $r1 = r0.<org.apache.jute.XmlInputArchive$XMLParser: java.util.ArrayList valList>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r4 = (org.apache.jute.XmlInputArchive$Value) $r3;

        virtualinvoke r4.<org.apache.jute.XmlInputArchive$Value: void addChars(char[],int,int)>(r5, i2, i3);

     label1:
        return;
    }

    void <init>(java.util.ArrayList, org.apache.jute.XmlInputArchive$1)
    {
        org.apache.jute.XmlInputArchive$XMLParser r0;
        org.apache.jute.XmlInputArchive$1 r2;
        java.util.ArrayList r1;

        r0 := @this: org.apache.jute.XmlInputArchive$XMLParser;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: org.apache.jute.XmlInputArchive$1;

        specialinvoke r0.<org.apache.jute.XmlInputArchive$XMLParser: void <init>(java.util.ArrayList)>(r1);

        return;
    }
}
