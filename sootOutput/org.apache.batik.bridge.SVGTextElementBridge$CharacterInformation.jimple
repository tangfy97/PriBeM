public class org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation extends java.lang.Object
{
    org.apache.batik.gvt.text.TextSpanLayout layout;
    int glyphIndexStart;
    int glyphIndexEnd;
    int characterIndex;

    protected void <init>()
    {
        org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isVertical()
    {
        org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation r0;
        org.apache.batik.gvt.text.TextSpanLayout $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation;

        $r1 = r0.<org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation: org.apache.batik.gvt.text.TextSpanLayout layout>;

        $z0 = interfaceinvoke $r1.<org.apache.batik.gvt.text.TextSpanLayout: boolean isVertical()>();

        return $z0;
    }

    public double getComputedOrientationAngle()
    {
        org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation r0;
        int $i0;
        org.apache.batik.gvt.text.TextSpanLayout $r1;
        double $d0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation;

        $r1 = r0.<org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation: org.apache.batik.gvt.text.TextSpanLayout layout>;

        $i0 = r0.<org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation: int characterIndex>;

        $d0 = interfaceinvoke $r1.<org.apache.batik.gvt.text.TextSpanLayout: double getComputedOrientationAngle(int)>($i0);

        return $d0;
    }
}
