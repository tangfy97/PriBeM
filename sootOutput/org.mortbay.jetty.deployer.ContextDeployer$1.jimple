class org.mortbay.jetty.deployer.ContextDeployer$1 extends java.lang.Object implements java.io.FilenameFilter
{
    private final org.mortbay.jetty.deployer.ContextDeployer this$0;

    void <init>(org.mortbay.jetty.deployer.ContextDeployer)
    {
        org.mortbay.jetty.deployer.ContextDeployer$1 r0;
        org.mortbay.jetty.deployer.ContextDeployer r1;

        r0 := @this: org.mortbay.jetty.deployer.ContextDeployer$1;

        r1 := @parameter0: org.mortbay.jetty.deployer.ContextDeployer;

        r0.<org.mortbay.jetty.deployer.ContextDeployer$1: org.mortbay.jetty.deployer.ContextDeployer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        java.lang.String r0;
        org.mortbay.jetty.deployer.ContextDeployer$1 r2;
        java.lang.Exception $r1;
        java.io.File r3;
        boolean $z0;

        r2 := @this: org.mortbay.jetty.deployer.ContextDeployer$1;

        r3 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.String;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        $r1 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r1);

        return 0;

        catch java.lang.Exception from label1 to label2 with label4;
    }
}
