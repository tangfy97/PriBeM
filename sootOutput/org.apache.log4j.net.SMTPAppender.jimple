public class org.apache.log4j.net.SMTPAppender extends org.apache.log4j.AppenderSkeleton implements org.apache.log4j.xml.UnrecognizedElementHandler
{
    private java.lang.String 'to';
    private java.lang.String cc;
    private java.lang.String bcc;
    private java.lang.String 'from';
    private java.lang.String replyTo;
    private java.lang.String subject;
    private java.lang.String smtpHost;
    private java.lang.String smtpUsername;
    private java.lang.String smtpPassword;
    private java.lang.String smtpProtocol;
    private int smtpPort;
    private boolean smtpDebug;
    private int bufferSize;
    private boolean locationInfo;
    private boolean sendOnClose;
    protected org.apache.log4j.helpers.CyclicBuffer cb;
    protected javax.mail.Message msg;
    protected org.apache.log4j.spi.TriggeringEventEvaluator evaluator;
    static java.lang.Class class$org$apache$log4j$spi$TriggeringEventEvaluator;

    public void <init>()
    {
        org.apache.log4j.net.SMTPAppender r0;
        org.apache.log4j.net.DefaultEvaluator $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = new org.apache.log4j.net.DefaultEvaluator;

        specialinvoke $r1.<org.apache.log4j.net.DefaultEvaluator: void <init>()>();

        specialinvoke r0.<org.apache.log4j.net.SMTPAppender: void <init>(org.apache.log4j.spi.TriggeringEventEvaluator)>($r1);

        return;
    }

    public void <init>(org.apache.log4j.spi.TriggeringEventEvaluator)
    {
        org.apache.log4j.net.SMTPAppender r0;
        org.apache.log4j.helpers.CyclicBuffer $r3;
        int $i0, $i2;
        org.apache.log4j.spi.TriggeringEventEvaluator r2;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r2 := @parameter0: org.apache.log4j.spi.TriggeringEventEvaluator;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.log4j.net.SMTPAppender: int smtpPort> = $i2;

        r0.<org.apache.log4j.net.SMTPAppender: boolean smtpDebug> = 0;

        r0.<org.apache.log4j.net.SMTPAppender: int bufferSize> = 512;

        r0.<org.apache.log4j.net.SMTPAppender: boolean locationInfo> = 0;

        r0.<org.apache.log4j.net.SMTPAppender: boolean sendOnClose> = 0;

        $r3 = new org.apache.log4j.helpers.CyclicBuffer;

        $i0 = r0.<org.apache.log4j.net.SMTPAppender: int bufferSize>;

        specialinvoke $r3.<org.apache.log4j.helpers.CyclicBuffer: void <init>(int)>($i0);

        r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.helpers.CyclicBuffer cb> = $r3;

        r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator> = r2;

        return;
    }

    public void activateOptions()
    {
        javax.mail.Message $r3, $r9, $r14;
        java.lang.Throwable $r11;
        org.apache.log4j.spi.OptionHandler $r7;
        javax.mail.internet.MimeMessage $r13;
        org.apache.log4j.net.SMTPAppender r0;
        org.apache.log4j.spi.TriggeringEventEvaluator $r5, $r6;
        javax.mail.Session $r1;
        java.lang.String $r4, $r8, $r10;
        java.io.UnsupportedEncodingException $r12;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: javax.mail.Session createSession()>();

        $r13 = new javax.mail.internet.MimeMessage;

        specialinvoke $r13.<javax.mail.internet.MimeMessage: void <init>(javax.mail.Session)>($r1);

        $r14 = (javax.mail.Message) $r13;

        r0.<org.apache.log4j.net.SMTPAppender: javax.mail.Message msg> = $r14;

     label1:
        $r3 = r0.<org.apache.log4j.net.SMTPAppender: javax.mail.Message msg>;

        virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: void addressMessage(javax.mail.Message)>($r3);

        $r4 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String subject>;

        if $r4 == null goto label5;

     label2:
        $r9 = r0.<org.apache.log4j.net.SMTPAppender: javax.mail.Message msg>;

        $r8 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String subject>;

        $r10 = staticinvoke <javax.mail.internet.MimeUtility: java.lang.String encodeText(java.lang.String,java.lang.String,java.lang.String)>($r8, "UTF-8", null);

        virtualinvoke $r9.<javax.mail.Message: void setSubject(java.lang.String)>($r10);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Unable to encode SMTP subject", $r12);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Could not activate SMTPAppender options.", $r11);

     label7:
        $r5 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator>;

        $z0 = $r5 instanceof org.apache.log4j.spi.OptionHandler;

        if $z0 == 0 goto label8;

        $r6 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator>;

        $r7 = (org.apache.log4j.spi.OptionHandler) $r6;

        interfaceinvoke $r7.<org.apache.log4j.spi.OptionHandler: void activateOptions()>();

     label8:
        return;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
        catch javax.mail.MessagingException from label1 to label5 with label6;
    }

    protected void addressMessage(javax.mail.Message) throws javax.mail.MessagingException
    {
        javax.mail.Message r2;
        javax.mail.Address $r24;
        javax.mail.internet.InternetAddress[] $r7, $r11, $r15, $r18;
        javax.mail.internet.InternetAddress $r20;
        org.apache.log4j.net.SMTPAppender r0;
        javax.mail.Address[] $r25, $r26, $r27, $r28;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r3, $r4, $r5, $r8, $r9, $r12, $r13, $r16, $r17, $r19, $r21, $r22, $r23;
        javax.mail.Message$RecipientType $r6, $r10, $r14;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r2 := @parameter0: javax.mail.Message;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'from'>;

        if $r1 == null goto label1;

        $r19 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'from'>;

        $r20 = virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: javax.mail.internet.InternetAddress getAddress(java.lang.String)>($r19);

        $r24 = (javax.mail.Address) $r20;

        virtualinvoke r2.<javax.mail.Message: void setFrom(javax.mail.Address)>($r24);

        goto label2;

     label1:
        virtualinvoke r2.<javax.mail.Message: void setFrom()>();

     label2:
        $r3 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String replyTo>;

        if $r3 == null goto label3;

        $r16 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String replyTo>;

        $i3 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i3 <= 0 goto label3;

        $r17 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String replyTo>;

        $r18 = virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: javax.mail.internet.InternetAddress[] parseAddress(java.lang.String)>($r17);

        $r25 = (javax.mail.Address[]) $r18;

        virtualinvoke r2.<javax.mail.Message: void setReplyTo(javax.mail.Address[])>($r25);

     label3:
        $r21 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'to'>;

        if $r21 == null goto label4;

        $r12 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'to'>;

        $i2 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

        $r14 = <javax.mail.Message$RecipientType: javax.mail.Message$RecipientType TO>;

        $r13 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'to'>;

        $r15 = virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: javax.mail.internet.InternetAddress[] parseAddress(java.lang.String)>($r13);

        $r26 = (javax.mail.Address[]) $r15;

        virtualinvoke r2.<javax.mail.Message: void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[])>($r14, $r26);

     label4:
        $r22 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String cc>;

        if $r22 == null goto label5;

        $r8 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String cc>;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        $r10 = <javax.mail.Message$RecipientType: javax.mail.Message$RecipientType CC>;

        $r9 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String cc>;

        $r11 = virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: javax.mail.internet.InternetAddress[] parseAddress(java.lang.String)>($r9);

        $r27 = (javax.mail.Address[]) $r11;

        virtualinvoke r2.<javax.mail.Message: void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[])>($r10, $r27);

     label5:
        $r23 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String bcc>;

        if $r23 == null goto label6;

        $r4 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String bcc>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        $r6 = <javax.mail.Message$RecipientType: javax.mail.Message$RecipientType BCC>;

        $r5 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String bcc>;

        $r7 = virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: javax.mail.internet.InternetAddress[] parseAddress(java.lang.String)>($r5);

        $r28 = (javax.mail.Address[]) $r7;

        virtualinvoke r2.<javax.mail.Message: void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[])>($r6, $r28);

     label6:
        return;
    }

    protected javax.mail.Session createSession()
    {
        java.lang.SecurityException $r28;
        org.apache.log4j.net.SMTPAppender$1 $r12, r32;
        boolean $z0, $z1;
        org.apache.log4j.net.SMTPAppender r2;
        java.lang.StringBuffer $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r19, $r20, $r24, $r25, $r27;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r11, $r16, $r17, $r21, $r22, $r23, $r26, r31, $r34;
        java.util.Properties $r0, $r1, $r29, r30;
        javax.mail.Session $r33;

        r2 := @this: org.apache.log4j.net.SMTPAppender;

     label01:
        $r0 = new java.util.Properties;

        $r1 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        specialinvoke $r0.<java.util.Properties: void <init>(java.util.Properties)>($r1);

        r30 = $r0;

     label02:
        goto label04;

     label03:
        $r28 := @caughtexception;

        $r29 = new java.util.Properties;

        specialinvoke $r29.<java.util.Properties: void <init>()>();

        r30 = $r29;

     label04:
        r31 = "mail.smtp";

        $r3 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpProtocol>;

        if $r3 == null goto label05;

        $r23 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpProtocol>;

        virtualinvoke r30.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("mail.transport.protocol", $r23);

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("mail.");

        $r26 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpProtocol>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        r31 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

     label05:
        $r4 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpHost>;

        if $r4 == null goto label06;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r31);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".host");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        $r22 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpHost>;

        virtualinvoke r30.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

     label06:
        $i0 = r2.<org.apache.log4j.net.SMTPAppender: int smtpPort>;

        if $i0 <= 0 goto label07;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r31);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".port");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $i1 = r2.<org.apache.log4j.net.SMTPAppender: int smtpPort>;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        virtualinvoke r30.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

     label07:
        r32 = null;

        $r5 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpPassword>;

        if $r5 == null goto label08;

        $r7 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpUsername>;

        if $r7 == null goto label08;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r31);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".auth");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r30.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, "true");

        $r12 = new org.apache.log4j.net.SMTPAppender$1;

        specialinvoke $r12.<org.apache.log4j.net.SMTPAppender$1: void <init>(org.apache.log4j.net.SMTPAppender)>(r2);

        r32 = $r12;

     label08:
        $r33 = staticinvoke <javax.mail.Session: javax.mail.Session getInstance(java.util.Properties,javax.mail.Authenticator)>(r30, r32);

        $r34 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpProtocol>;

        if $r34 == null goto label09;

        $r6 = r2.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpProtocol>;

        virtualinvoke $r33.<javax.mail.Session: void setProtocolForAddress(java.lang.String,java.lang.String)>("rfc822", $r6);

     label09:
        $z0 = r2.<org.apache.log4j.net.SMTPAppender: boolean smtpDebug>;

        if $z0 == 0 goto label10;

        $z1 = r2.<org.apache.log4j.net.SMTPAppender: boolean smtpDebug>;

        virtualinvoke $r33.<javax.mail.Session: void setDebug(boolean)>($z1);

     label10:
        return $r33;

        catch java.lang.SecurityException from label01 to label02 with label03;
    }

    public void append(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.net.SMTPAppender r0;
        org.apache.log4j.helpers.CyclicBuffer $r2;
        org.apache.log4j.spi.TriggeringEventEvaluator $r3;
        org.apache.log4j.spi.LoggingEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $z0 = virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: boolean checkEntryConditions()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String getThreadName()>();

        virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String getNDC()>();

        virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: void getMDCCopy()>();

        $z1 = r0.<org.apache.log4j.net.SMTPAppender: boolean locationInfo>;

        if $z1 == 0 goto label2;

        virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.LocationInfo getLocationInformation()>();

     label2:
        virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String getRenderedMessage()>();

        virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String[] getThrowableStrRep()>();

        $r2 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.helpers.CyclicBuffer cb>;

        virtualinvoke $r2.<org.apache.log4j.helpers.CyclicBuffer: void add(org.apache.log4j.spi.LoggingEvent)>(r1);

        $r3 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator>;

        $z2 = interfaceinvoke $r3.<org.apache.log4j.spi.TriggeringEventEvaluator: boolean isTriggeringEvent(org.apache.log4j.spi.LoggingEvent)>(r1);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: void sendBuffer()>();

     label3:
        return;
    }

    protected boolean checkEntryConditions()
    {
        javax.mail.Message $r1;
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.StringBuffer $r4, $r6, $r8, $r9, $r11, $r13, $r15, $r16;
        org.apache.log4j.spi.TriggeringEventEvaluator $r2;
        java.lang.String $r7, $r10, $r14, $r17;
        org.apache.log4j.spi.ErrorHandler $r5, $r12, $r18;
        org.apache.log4j.Layout $r3;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: javax.mail.Message msg>;

        if $r1 != null goto label1;

        $r18 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        interfaceinvoke $r18.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String)>("Message object not configured.");

        return 0;

     label1:
        $r2 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator>;

        if $r2 != null goto label2;

        $r12 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No TriggeringEventEvaluator is set for appender [");

        $r14 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String)>($r17);

        return 0;

     label2:
        $r3 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        if $r3 != null goto label3;

        $r5 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No layout set for appender named [");

        $r7 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String)>($r10);

        return 0;

     label3:
        return 1;
    }

    public synchronized void close()
    {
        org.apache.log4j.net.SMTPAppender r0;
        org.apache.log4j.helpers.CyclicBuffer $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r0.<org.apache.log4j.AppenderSkeleton: boolean closed> = 1;

        $z0 = r0.<org.apache.log4j.net.SMTPAppender: boolean sendOnClose>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.helpers.CyclicBuffer cb>;

        $i0 = virtualinvoke $r1.<org.apache.log4j.helpers.CyclicBuffer: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: void sendBuffer()>();

     label1:
        return;
    }

    javax.mail.internet.InternetAddress getAddress(java.lang.String)
    {
        java.lang.Throwable $r2;
        org.apache.log4j.spi.ErrorHandler $r5;
        java.lang.Exception $r12;
        javax.mail.internet.InternetAddress $r10;
        org.apache.log4j.net.SMTPAppender r3;
        java.lang.StringBuffer $r6, $r7, $r8, $r11;
        java.lang.String r1, $r9;

        r3 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

     label1:
        $r10 = new javax.mail.internet.InternetAddress;

        specialinvoke $r10.<javax.mail.internet.InternetAddress: void <init>(java.lang.String)>(r1);

     label2:
        return $r10;

     label3:
        $r2 := @caughtexception;

        $r5 = r3.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not parse address [");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = (java.lang.Exception) $r2;

        interfaceinvoke $r5.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r9, $r12, 6);

        return null;

        catch javax.mail.internet.AddressException from label1 to label2 with label3;
    }

    javax.mail.internet.InternetAddress[] parseAddress(java.lang.String)
    {
        java.lang.Throwable $r2;
        javax.mail.internet.InternetAddress[] $r1;
        org.apache.log4j.spi.ErrorHandler $r5;
        java.lang.Exception $r11;
        org.apache.log4j.net.SMTPAppender r3;
        java.lang.StringBuffer $r6, $r7, $r8, $r10;
        java.lang.String r0, $r9;

        r3 := @this: org.apache.log4j.net.SMTPAppender;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <javax.mail.internet.InternetAddress: javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean)>(r0, 1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r5 = r3.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not parse address [");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = (java.lang.Exception) $r2;

        interfaceinvoke $r5.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r9, $r11, 6);

        return null;

        catch javax.mail.internet.AddressException from label1 to label2 with label3;
    }

    public java.lang.String getTo()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'to'>;

        return $r1;
    }

    public boolean requiresLayout()
    {
        org.apache.log4j.net.SMTPAppender r0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        return 1;
    }

    protected java.lang.String formatBody()
    {
        java.lang.String[] $r13;
        org.apache.log4j.net.SMTPAppender r1;
        java.lang.StringBuffer $r0;
        org.apache.log4j.helpers.CyclicBuffer $r4, $r8;
        int $i0, $i1, i2, i3;
        java.lang.String $r3, $r6, $r7, $r11, $r14, $r15;
        boolean $z0;
        org.apache.log4j.spi.LoggingEvent $r9;
        org.apache.log4j.Layout $r2, $r5, $r10, $r12;

        r1 := @this: org.apache.log4j.net.SMTPAppender;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r3 = virtualinvoke $r2.<org.apache.log4j.Layout: java.lang.String getHeader()>();

        if $r3 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label1:
        $r4 = r1.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.helpers.CyclicBuffer cb>;

        $i0 = virtualinvoke $r4.<org.apache.log4j.helpers.CyclicBuffer: int length()>();

        i2 = 0;

     label2:
        if i2 >= $i0 goto label5;

        $r8 = r1.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.helpers.CyclicBuffer cb>;

        $r9 = virtualinvoke $r8.<org.apache.log4j.helpers.CyclicBuffer: org.apache.log4j.spi.LoggingEvent get()>();

        $r10 = r1.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r11 = virtualinvoke $r10.<org.apache.log4j.Layout: java.lang.String format(org.apache.log4j.spi.LoggingEvent)>($r9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = r1.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $z0 = virtualinvoke $r12.<org.apache.log4j.Layout: boolean ignoresThrowable()>();

        if $z0 == 0 goto label4;

        $r13 = virtualinvoke $r9.<org.apache.log4j.spi.LoggingEvent: java.lang.String[] getThrowableStrRep()>();

        if $r13 == null goto label4;

        i3 = 0;

     label3:
        $i1 = lengthof $r13;

        if i3 >= $i1 goto label4;

        $r14 = $r13[i3];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r15 = <org.apache.log4j.Layout: java.lang.String LINE_SEP>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        i3 = i3 + 1;

        goto label3;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        $r5 = r1.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r6 = virtualinvoke $r5.<org.apache.log4j.Layout: java.lang.String getFooter()>();

        if $r6 == null goto label6;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label6:
        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    protected void sendBuffer()
    {
        javax.mail.Message $r27, $r28, $r30;
        byte[] $r13;
        java.util.Date $r40;
        boolean z0, $z1;
        javax.mail.internet.MimeMultipart $r39;
        java.lang.Exception $r19;
        org.apache.log4j.Layout $r7, $r15, $r23;
        java.lang.Throwable $r18;
        java.io.ByteArrayOutputStream $r32;
        javax.mail.internet.MimeBodyPart r25, $r31, $r36, $r38;
        javax.mail.Part $r43;
        javax.mail.Multipart $r41, $r44;
        javax.mail.BodyPart $r42;
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.StringBuffer $r9, $r10, $r35, $r37;
        int $i0, $i2, i4, i5, $i6, $i7;
        java.io.OutputStreamWriter $r33;
        java.lang.String $r1, $r8, $r11, $r16, $r22, $r24;
        java.io.OutputStream $r4;
        char $c1, $c3;
        java.lang.RuntimeException $r17;
        javax.mail.internet.InternetHeaders $r34;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

     label01:
        $r1 = virtualinvoke r0.<org.apache.log4j.net.SMTPAppender: java.lang.String formatBody()>();

        z0 = 1;

        i4 = 0;

     label02:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i4 >= $i0 goto label05;

        if z0 == 0 goto label05;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c1;

        if $i6 > 127 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        z0 = $z1;

        i4 = i4 + 1;

        goto label02;

     label05:
        if z0 == 0 goto label06;

        $r31 = new javax.mail.internet.MimeBodyPart;

        specialinvoke $r31.<javax.mail.internet.MimeBodyPart: void <init>()>();

        r25 = $r31;

        $r15 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r16 = virtualinvoke $r15.<org.apache.log4j.Layout: java.lang.String getContentType()>();

        virtualinvoke $r31.<javax.mail.internet.MimeBodyPart: void setContent(java.lang.Object,java.lang.String)>($r1, $r16);

        goto label12;

     label06:
        $r32 = new java.io.ByteArrayOutputStream;

        specialinvoke $r32.<java.io.ByteArrayOutputStream: void <init>()>();

        $r33 = new java.io.OutputStreamWriter;

        $r4 = staticinvoke <javax.mail.internet.MimeUtility: java.io.OutputStream encode(java.io.OutputStream,java.lang.String)>($r32, "quoted-printable");

        specialinvoke $r33.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r4, "UTF-8");

        virtualinvoke $r33.<java.io.Writer: void write(java.lang.String)>($r1);

        virtualinvoke $r33.<java.io.Writer: void close()>();

        $r34 = new javax.mail.internet.InternetHeaders;

        specialinvoke $r34.<javax.mail.internet.InternetHeaders: void <init>()>();

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r7 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r8 = virtualinvoke $r7.<org.apache.log4j.Layout: java.lang.String getContentType()>();

        $r9 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; charset=UTF-8");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r34.<javax.mail.internet.InternetHeaders: void setHeader(java.lang.String,java.lang.String)>("Content-Type", $r11);

        virtualinvoke $r34.<javax.mail.internet.InternetHeaders: void setHeader(java.lang.String,java.lang.String)>("Content-Transfer-Encoding", "quoted-printable");

        $r36 = new javax.mail.internet.MimeBodyPart;

        $r13 = virtualinvoke $r32.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r36.<javax.mail.internet.MimeBodyPart: void <init>(javax.mail.internet.InternetHeaders,byte[])>($r34, $r13);

        r25 = $r36;

     label07:
        goto label12;

     label08:
        $r19 := @caughtexception;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        i5 = 0;

     label09:
        $i2 = virtualinvoke $r37.<java.lang.StringBuffer: int length()>();

        if i5 >= $i2 goto label11;

        $c3 = virtualinvoke $r37.<java.lang.StringBuffer: char charAt(int)>(i5);

        $i7 = (int) $c3;

        if $i7 < 128 goto label10;

        virtualinvoke $r37.<java.lang.StringBuffer: void setCharAt(int,char)>(i5, 63);

     label10:
        i5 = i5 + 1;

        goto label09;

     label11:
        $r38 = new javax.mail.internet.MimeBodyPart;

        specialinvoke $r38.<javax.mail.internet.MimeBodyPart: void <init>()>();

        r25 = $r38;

        $r22 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r24 = virtualinvoke $r23.<org.apache.log4j.Layout: java.lang.String getContentType()>();

        virtualinvoke $r38.<javax.mail.internet.MimeBodyPart: void setContent(java.lang.Object,java.lang.String)>($r22, $r24);

     label12:
        $r39 = new javax.mail.internet.MimeMultipart;

        specialinvoke $r39.<javax.mail.internet.MimeMultipart: void <init>()>();

        $r41 = (javax.mail.Multipart) $r39;

        $r42 = (javax.mail.BodyPart) r25;

        virtualinvoke $r41.<javax.mail.Multipart: void addBodyPart(javax.mail.BodyPart)>($r42);

        $r27 = r0.<org.apache.log4j.net.SMTPAppender: javax.mail.Message msg>;

        $r43 = (javax.mail.Part) $r27;

        $r44 = (javax.mail.Multipart) $r39;

        interfaceinvoke $r43.<javax.mail.Part: void setContent(javax.mail.Multipart)>($r44);

        $r28 = r0.<org.apache.log4j.net.SMTPAppender: javax.mail.Message msg>;

        $r40 = new java.util.Date;

        specialinvoke $r40.<java.util.Date: void <init>()>();

        virtualinvoke $r28.<javax.mail.Message: void setSentDate(java.util.Date)>($r40);

        $r30 = r0.<org.apache.log4j.net.SMTPAppender: javax.mail.Message msg>;

        staticinvoke <javax.mail.Transport: void send(javax.mail.Message)>($r30);

     label13:
        goto label16;

     label14:
        $r18 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Error occured while sending e-mail notification.", $r18);

        goto label16;

     label15:
        $r17 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Error occured while sending e-mail notification.", $r17);

     label16:
        return;

        catch java.lang.Exception from label06 to label07 with label08;
        catch javax.mail.MessagingException from label01 to label13 with label14;
        catch java.lang.RuntimeException from label01 to label13 with label15;
    }

    public java.lang.String getEvaluatorClass()
    {
        org.apache.log4j.net.SMTPAppender r0;
        org.apache.log4j.spi.TriggeringEventEvaluator $r1, $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

     label2:
        return $r4;
    }

    public java.lang.String getFrom()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'from'>;

        return $r1;
    }

    public java.lang.String getReplyTo()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String replyTo>;

        return $r1;
    }

    public java.lang.String getSubject()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String subject>;

        return $r1;
    }

    public void setFrom(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'from'> = r1;

        return;
    }

    public void setReplyTo(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String replyTo> = r1;

        return;
    }

    public void setSubject(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String subject> = r1;

        return;
    }

    public void setBufferSize(int)
    {
        int i0;
        org.apache.log4j.net.SMTPAppender r0;
        org.apache.log4j.helpers.CyclicBuffer $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        i0 := @parameter0: int;

        r0.<org.apache.log4j.net.SMTPAppender: int bufferSize> = i0;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.helpers.CyclicBuffer cb>;

        virtualinvoke $r1.<org.apache.log4j.helpers.CyclicBuffer: void resize(int)>(i0);

        return;
    }

    public void setSMTPHost(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpHost> = r1;

        return;
    }

    public java.lang.String getSMTPHost()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpHost>;

        return $r1;
    }

    public void setTo(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String 'to'> = r1;

        return;
    }

    public int getBufferSize()
    {
        int $i0;
        org.apache.log4j.net.SMTPAppender r0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $i0 = r0.<org.apache.log4j.net.SMTPAppender: int bufferSize>;

        return $i0;
    }

    public void setEvaluatorClass(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        org.apache.log4j.spi.TriggeringEventEvaluator $r3, $r5;
        java.lang.Class $r2, $r6;
        java.lang.Object $r4;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.log4j.net.SMTPAppender: java.lang.Class class$org$apache$log4j$spi$TriggeringEventEvaluator>;

        if $r2 != null goto label1;

        $r6 = staticinvoke <org.apache.log4j.net.SMTPAppender: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.TriggeringEventEvaluator");

        <org.apache.log4j.net.SMTPAppender: java.lang.Class class$org$apache$log4j$spi$TriggeringEventEvaluator> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.log4j.net.SMTPAppender: java.lang.Class class$org$apache$log4j$spi$TriggeringEventEvaluator>;

     label2:
        $r3 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator>;

        $r4 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>(r1, $r6, $r3);

        $r5 = (org.apache.log4j.spi.TriggeringEventEvaluator) $r4;

        r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator> = $r5;

        return;
    }

    public void setLocationInfo(boolean)
    {
        org.apache.log4j.net.SMTPAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.net.SMTPAppender: boolean locationInfo> = z0;

        return;
    }

    public boolean getLocationInfo()
    {
        org.apache.log4j.net.SMTPAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $z0 = r0.<org.apache.log4j.net.SMTPAppender: boolean locationInfo>;

        return $z0;
    }

    public void setCc(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String cc> = r1;

        return;
    }

    public java.lang.String getCc()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String cc>;

        return $r1;
    }

    public void setBcc(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String bcc> = r1;

        return;
    }

    public java.lang.String getBcc()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String bcc>;

        return $r1;
    }

    public void setSMTPPassword(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpPassword> = r1;

        return;
    }

    public void setSMTPUsername(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpUsername> = r1;

        return;
    }

    public void setSMTPDebug(boolean)
    {
        org.apache.log4j.net.SMTPAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.net.SMTPAppender: boolean smtpDebug> = z0;

        return;
    }

    public java.lang.String getSMTPPassword()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpPassword>;

        return $r1;
    }

    public java.lang.String getSMTPUsername()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpUsername>;

        return $r1;
    }

    public boolean getSMTPDebug()
    {
        org.apache.log4j.net.SMTPAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $z0 = r0.<org.apache.log4j.net.SMTPAppender: boolean smtpDebug>;

        return $z0;
    }

    public final void setEvaluator(org.apache.log4j.spi.TriggeringEventEvaluator)
    {
        org.apache.log4j.spi.TriggeringEventEvaluator r0;
        org.apache.log4j.net.SMTPAppender r1;
        java.lang.NullPointerException $r2;

        r1 := @this: org.apache.log4j.net.SMTPAppender;

        r0 := @parameter0: org.apache.log4j.spi.TriggeringEventEvaluator;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("trigger");

        throw $r2;

     label1:
        r1.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator> = r0;

        return;
    }

    public final org.apache.log4j.spi.TriggeringEventEvaluator getEvaluator()
    {
        org.apache.log4j.spi.TriggeringEventEvaluator $r1;
        org.apache.log4j.net.SMTPAppender r0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: org.apache.log4j.spi.TriggeringEventEvaluator evaluator>;

        return $r1;
    }

    public boolean parseUnrecognizedElement(org.w3c.dom.Element, java.util.Properties) throws java.lang.Exception
    {
        java.util.Properties r3;
        org.apache.log4j.net.SMTPAppender r6;
        org.w3c.dom.Element r0;
        org.apache.log4j.spi.TriggeringEventEvaluator $r7;
        java.lang.Class $r4, $r8;
        java.lang.Object $r5;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r6 := @this: org.apache.log4j.net.SMTPAppender;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.util.Properties;

        $r1 = "triggeringPolicy";

        $r2 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r4 = <org.apache.log4j.net.SMTPAppender: java.lang.Class class$org$apache$log4j$spi$TriggeringEventEvaluator>;

        if $r4 != null goto label1;

        $r8 = staticinvoke <org.apache.log4j.net.SMTPAppender: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.TriggeringEventEvaluator");

        <org.apache.log4j.net.SMTPAppender: java.lang.Class class$org$apache$log4j$spi$TriggeringEventEvaluator> = $r8;

        goto label2;

     label1:
        $r8 = <org.apache.log4j.net.SMTPAppender: java.lang.Class class$org$apache$log4j$spi$TriggeringEventEvaluator>;

     label2:
        $r5 = staticinvoke <org.apache.log4j.xml.DOMConfigurator: java.lang.Object parseElement(org.w3c.dom.Element,java.util.Properties,java.lang.Class)>(r0, r3, $r8);

        $z1 = $r5 instanceof org.apache.log4j.spi.TriggeringEventEvaluator;

        if $z1 == 0 goto label3;

        $r7 = (org.apache.log4j.spi.TriggeringEventEvaluator) $r5;

        virtualinvoke r6.<org.apache.log4j.net.SMTPAppender: void setEvaluator(org.apache.log4j.spi.TriggeringEventEvaluator)>($r7);

     label3:
        return 1;

     label4:
        return 0;
    }

    public final java.lang.String getSMTPProtocol()
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpProtocol>;

        return $r1;
    }

    public final void setSMTPProtocol(java.lang.String)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpProtocol> = r1;

        return;
    }

    public final int getSMTPPort()
    {
        int $i0;
        org.apache.log4j.net.SMTPAppender r0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $i0 = r0.<org.apache.log4j.net.SMTPAppender: int smtpPort>;

        return $i0;
    }

    public final void setSMTPPort(int)
    {
        int i0;
        org.apache.log4j.net.SMTPAppender r0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        i0 := @parameter0: int;

        r0.<org.apache.log4j.net.SMTPAppender: int smtpPort> = i0;

        return;
    }

    public final boolean getSendOnClose()
    {
        org.apache.log4j.net.SMTPAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        $z0 = r0.<org.apache.log4j.net.SMTPAppender: boolean sendOnClose>;

        return $z0;
    }

    public final void setSendOnClose(boolean)
    {
        org.apache.log4j.net.SMTPAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.net.SMTPAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.net.SMTPAppender: boolean sendOnClose> = z0;

        return;
    }

    static java.lang.String access$000(org.apache.log4j.net.SMTPAppender)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpUsername>;

        return $r1;
    }

    static java.lang.String access$100(org.apache.log4j.net.SMTPAppender)
    {
        org.apache.log4j.net.SMTPAppender r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.log4j.net.SMTPAppender;

        $r1 = r0.<org.apache.log4j.net.SMTPAppender: java.lang.String smtpPassword>;

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
