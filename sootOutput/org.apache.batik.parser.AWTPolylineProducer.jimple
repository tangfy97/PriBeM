public class org.apache.batik.parser.AWTPolylineProducer extends java.lang.Object implements org.apache.batik.parser.PointsHandler, org.apache.batik.parser.ShapeProducer
{
    protected java.awt.geom.GeneralPath path;
    protected boolean newPath;
    protected int windingRule;

    public void <init>()
    {
        org.apache.batik.parser.AWTPolylineProducer r0;

        r0 := @this: org.apache.batik.parser.AWTPolylineProducer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.awt.Shape createShape(java.io.Reader, int) throws java.io.IOException, org.apache.batik.parser.ParseException
    {
        java.awt.Shape $r3;
        org.apache.batik.parser.PointsParser $r0;
        int i0;
        org.apache.batik.parser.AWTPolylineProducer $r1;
        java.io.Reader r2;

        r2 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        $r0 = new org.apache.batik.parser.PointsParser;

        specialinvoke $r0.<org.apache.batik.parser.PointsParser: void <init>()>();

        $r1 = new org.apache.batik.parser.AWTPolylineProducer;

        specialinvoke $r1.<org.apache.batik.parser.AWTPolylineProducer: void <init>()>();

        virtualinvoke $r1.<org.apache.batik.parser.AWTPolylineProducer: void setWindingRule(int)>(i0);

        virtualinvoke $r0.<org.apache.batik.parser.PointsParser: void setPointsHandler(org.apache.batik.parser.PointsHandler)>($r1);

        virtualinvoke $r0.<org.apache.batik.parser.AbstractParser: void parse(java.io.Reader)>(r2);

        $r3 = virtualinvoke $r1.<org.apache.batik.parser.AWTPolylineProducer: java.awt.Shape getShape()>();

        return $r3;
    }

    public void setWindingRule(int)
    {
        int i0;
        org.apache.batik.parser.AWTPolylineProducer r0;

        r0 := @this: org.apache.batik.parser.AWTPolylineProducer;

        i0 := @parameter0: int;

        r0.<org.apache.batik.parser.AWTPolylineProducer: int windingRule> = i0;

        return;
    }

    public int getWindingRule()
    {
        int $i0;
        org.apache.batik.parser.AWTPolylineProducer r0;

        r0 := @this: org.apache.batik.parser.AWTPolylineProducer;

        $i0 = r0.<org.apache.batik.parser.AWTPolylineProducer: int windingRule>;

        return $i0;
    }

    public java.awt.Shape getShape()
    {
        org.apache.batik.parser.AWTPolylineProducer r0;
        java.awt.geom.GeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPolylineProducer;

        $r1 = r0.<org.apache.batik.parser.AWTPolylineProducer: java.awt.geom.GeneralPath path>;

        return $r1;
    }

    public void startPoints() throws org.apache.batik.parser.ParseException
    {
        int $i0;
        org.apache.batik.parser.AWTPolylineProducer r0;
        java.awt.geom.GeneralPath $r1;

        r0 := @this: org.apache.batik.parser.AWTPolylineProducer;

        $r1 = new java.awt.geom.GeneralPath;

        $i0 = r0.<org.apache.batik.parser.AWTPolylineProducer: int windingRule>;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>(int)>($i0);

        r0.<org.apache.batik.parser.AWTPolylineProducer: java.awt.geom.GeneralPath path> = $r1;

        r0.<org.apache.batik.parser.AWTPolylineProducer: boolean newPath> = 1;

        return;
    }

    public void point(float, float) throws org.apache.batik.parser.ParseException
    {
        float f0, f1;
        org.apache.batik.parser.AWTPolylineProducer r0;
        java.awt.geom.GeneralPath $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.parser.AWTPolylineProducer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = r0.<org.apache.batik.parser.AWTPolylineProducer: boolean newPath>;

        if $z0 == 0 goto label1;

        r0.<org.apache.batik.parser.AWTPolylineProducer: boolean newPath> = 0;

        $r2 = r0.<org.apache.batik.parser.AWTPolylineProducer: java.awt.geom.GeneralPath path>;

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void moveTo(float,float)>(f0, f1);

        goto label2;

     label1:
        $r1 = r0.<org.apache.batik.parser.AWTPolylineProducer: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void lineTo(float,float)>(f0, f1);

     label2:
        return;
    }

    public void endPoints() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.AWTPolylineProducer r0;

        r0 := @this: org.apache.batik.parser.AWTPolylineProducer;

        return;
    }
}
