public abstract class org.apache.cxf.io.AbstractWrappedOutputStream extends java.io.OutputStream
{
    protected java.io.OutputStream wrappedStream;
    protected boolean written;
    protected boolean allowFlush;

    protected void <init>()
    {
        org.apache.cxf.io.AbstractWrappedOutputStream r0;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean allowFlush> = 1;

        return;
    }

    protected void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.cxf.io.AbstractWrappedOutputStream r0;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean allowFlush> = 1;

        r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream> = r1;

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r1, $r3;
        byte[] r2;
        int i0, i1;
        org.apache.cxf.io.AbstractWrappedOutputStream r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean written>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.cxf.io.AbstractWrappedOutputStream: void onFirstWrite()>();

        r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean written> = 1;

     label1:
        $r1 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream>;

        if $r1 == null goto label2;

        $r3 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r2, i0, i1);

     label2:
        return;
    }

    protected void onFirstWrite() throws java.io.IOException
    {
        org.apache.cxf.io.AbstractWrappedOutputStream r0;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        org.apache.cxf.io.AbstractWrappedOutputStream r0;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.cxf.io.AbstractWrappedOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        int i0;
        org.apache.cxf.io.AbstractWrappedOutputStream r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean written>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.cxf.io.AbstractWrappedOutputStream: void onFirstWrite()>();

        r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean written> = 1;

     label1:
        $r1 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(i0);

     label2:
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        org.apache.cxf.io.AbstractWrappedOutputStream r0;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        $r1 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        org.apache.cxf.io.AbstractWrappedOutputStream r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        $z0 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean written>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream>;

        if $r1 == null goto label1;

        $z1 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean allowFlush>;

        if $z1 == 0 goto label1;

        $r2 = r0.<org.apache.cxf.io.AbstractWrappedOutputStream: java.io.OutputStream wrappedStream>;

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label1:
        return;
    }

    public void allowFlush(boolean)
    {
        org.apache.cxf.io.AbstractWrappedOutputStream r0;
        boolean z0;

        r0 := @this: org.apache.cxf.io.AbstractWrappedOutputStream;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.io.AbstractWrappedOutputStream: boolean allowFlush> = z0;

        return;
    }
}
