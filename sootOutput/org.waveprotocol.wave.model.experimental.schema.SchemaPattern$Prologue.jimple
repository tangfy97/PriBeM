public final class org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue extends java.util.AbstractList
{
    private final java.util.List entries;

    void <init>(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue: java.util.List entries> = r1;

        return;
    }

    public org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry get(int)
    {
        java.util.List $r1;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry $r3;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue r0;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue: java.util.List entries>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry) $r2;

        return $r3;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue;

        $r1 = r0.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue: java.util.List entries>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public volatile java.lang.Object get(int)
    {
        int i0;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry $r1;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$Prologue: org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry get(int)>(i0);

        return $r1;
    }
}
