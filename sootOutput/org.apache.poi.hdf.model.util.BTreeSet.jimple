public final class org.apache.poi.hdf.model.util.BTreeSet extends java.util.AbstractSet
{
    public org.apache.poi.hdf.model.util.BTreeSet$BTreeNode root;
    private java.util.Comparator comparator;
    private int order;
    int size;

    public void <init>()
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;

        r0 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        specialinvoke r0.<org.apache.poi.hdf.model.util.BTreeSet: void <init>(int)>(6);

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;
        java.util.Collection r1;

        r0 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<org.apache.poi.hdf.model.util.BTreeSet: void <init>(int)>(6);

        virtualinvoke r0.<org.apache.poi.hdf.model.util.BTreeSet: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void <init>(int)
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;
        int i0;

        r0 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.hdf.model.util.BTreeSet: void <init>(int,java.util.Comparator)>(i0, null);

        return;
    }

    public void <init>(int, java.util.Comparator)
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;
        int i0;
        org.apache.poi.hdf.model.util.BTreeSet$BTreeNode $r2;
        java.util.Comparator r1;

        r0 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Comparator;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.poi.hdf.model.util.BTreeSet: java.util.Comparator comparator> = null;

        r0.<org.apache.poi.hdf.model.util.BTreeSet: int size> = 0;

        r0.<org.apache.poi.hdf.model.util.BTreeSet: int order> = i0;

        r0.<org.apache.poi.hdf.model.util.BTreeSet: java.util.Comparator comparator> = r1;

        $r2 = new org.apache.poi.hdf.model.util.BTreeSet$BTreeNode;

        specialinvoke $r2.<org.apache.poi.hdf.model.util.BTreeSet$BTreeNode: void <init>(org.apache.poi.hdf.model.util.BTreeSet,org.apache.poi.hdf.model.util.BTreeSet$BTreeNode)>(r0, null);

        r0.<org.apache.poi.hdf.model.util.BTreeSet: org.apache.poi.hdf.model.util.BTreeSet$BTreeNode root> = $r2;

        return;
    }

    public boolean add(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.poi.hdf.model.util.BTreeSet r1;
        int $i1;
        java.lang.Object r0;
        org.apache.poi.hdf.model.util.BTreeSet$BTreeNode $r2;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;

        r1 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.apache.poi.hdf.model.util.BTreeSet: org.apache.poi.hdf.model.util.BTreeSet$BTreeNode root>;

        $i1 = (int) -1;

        $z0 = virtualinvoke $r2.<org.apache.poi.hdf.model.util.BTreeSet$BTreeNode: boolean insert(java.lang.Object,int)>(r0, $i1);

        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;
        java.lang.Object r1;
        org.apache.poi.hdf.model.util.BTreeSet$BTreeNode $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.poi.hdf.model.util.BTreeSet: org.apache.poi.hdf.model.util.BTreeSet$BTreeNode root>;

        $z0 = virtualinvoke $r2.<org.apache.poi.hdf.model.util.BTreeSet$BTreeNode: boolean includes(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.poi.hdf.model.util.BTreeSet r1;
        int $i1;
        java.lang.Object r0;
        org.apache.poi.hdf.model.util.BTreeSet$BTreeNode $r2;
        boolean $z0;

        r1 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<org.apache.poi.hdf.model.util.BTreeSet: org.apache.poi.hdf.model.util.BTreeSet$BTreeNode root>;

        $i1 = (int) -1;

        $z0 = virtualinvoke $r2.<org.apache.poi.hdf.model.util.BTreeSet$BTreeNode: boolean delete(java.lang.Object,int)>(r0, $i1);

        return $z0;
    }

    public int size()
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;
        int $i0;

        r0 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        $i0 = r0.<org.apache.poi.hdf.model.util.BTreeSet: int size>;

        return $i0;
    }

    public void clear()
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;
        org.apache.poi.hdf.model.util.BTreeSet$BTreeNode $r1;

        r0 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        $r1 = new org.apache.poi.hdf.model.util.BTreeSet$BTreeNode;

        specialinvoke $r1.<org.apache.poi.hdf.model.util.BTreeSet$BTreeNode: void <init>(org.apache.poi.hdf.model.util.BTreeSet,org.apache.poi.hdf.model.util.BTreeSet$BTreeNode)>(r0, null);

        r0.<org.apache.poi.hdf.model.util.BTreeSet: org.apache.poi.hdf.model.util.BTreeSet$BTreeNode root> = $r1;

        r0.<org.apache.poi.hdf.model.util.BTreeSet: int size> = 0;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.poi.hdf.model.util.BTreeSet$Iterator $r0;
        org.apache.poi.hdf.model.util.BTreeSet r1;

        r1 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        $r0 = new org.apache.poi.hdf.model.util.BTreeSet$Iterator;

        specialinvoke $r0.<org.apache.poi.hdf.model.util.BTreeSet$Iterator: void <init>(org.apache.poi.hdf.model.util.BTreeSet)>(r1);

        return $r0;
    }

    public static java.util.ArrayList findProperties(int, int, org.apache.poi.hdf.model.util.BTreeSet$BTreeNode)
    {
        org.apache.poi.hdf.model.util.BTreeSet$Entry[] r2;
        org.apache.poi.hdf.model.hdftypes.PropertyNode r8;
        java.util.ArrayList $r0, $r9, $r10, $r11;
        int $i0, i1, i2, $i3, $i4, i5;
        org.apache.poi.hdf.model.util.BTreeSet$BTreeNode r1, r5;
        java.lang.Object $r7;
        org.apache.poi.hdf.model.util.BTreeSet$Entry $r3, $r4, $r6;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.hdf.model.util.BTreeSet$BTreeNode;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r2 = r1.<org.apache.poi.hdf.model.util.BTreeSet$BTreeNode: org.apache.poi.hdf.model.util.BTreeSet$Entry[] entries>;

        i5 = 0;

     label1:
        $i0 = lengthof r2;

        if i5 >= $i0 goto label8;

        $r3 = r2[i5];

        if $r3 == null goto label8;

        $r4 = r2[i5];

        r5 = $r4.<org.apache.poi.hdf.model.util.BTreeSet$Entry: org.apache.poi.hdf.model.util.BTreeSet$BTreeNode child>;

        $r6 = r2[i5];

        $r7 = $r6.<org.apache.poi.hdf.model.util.BTreeSet$Entry: java.lang.Object element>;

        r8 = (org.apache.poi.hdf.model.hdftypes.PropertyNode) $r7;

        if r8 == null goto label6;

        $i3 = virtualinvoke r8.<org.apache.poi.hdf.model.hdftypes.PropertyNode: int getStart()>();

        $i4 = virtualinvoke r8.<org.apache.poi.hdf.model.hdftypes.PropertyNode: int getEnd()>();

        if $i3 >= i2 goto label4;

        if $i3 < i1 goto label3;

        if r5 == null goto label2;

        $r11 = staticinvoke <org.apache.poi.hdf.model.util.BTreeSet: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.model.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r11);

     label2:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label5;

     label3:
        if i1 >= $i4 goto label5;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label5;

     label4:
        if r5 == null goto label8;

        $r10 = staticinvoke <org.apache.poi.hdf.model.util.BTreeSet: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.model.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r10);

        goto label8;

     label5:
        goto label7;

     label6:
        if r5 == null goto label7;

        $r9 = staticinvoke <org.apache.poi.hdf.model.util.BTreeSet: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.model.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r9);

     label7:
        i5 = i5 + 1;

        goto label1;

     label8:
        return $r0;
    }

    int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;
        int $i0;
        java.lang.Object r2, r3;
        java.lang.Comparable $r5;
        java.util.Comparator $r1, $r4;

        r0 := @this: org.apache.poi.hdf.model.util.BTreeSet;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.poi.hdf.model.util.BTreeSet: java.util.Comparator comparator>;

        if $r1 != null goto label1;

        $r5 = (java.lang.Comparable) r2;

        $i0 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r3);

        goto label2;

     label1:
        $r4 = r0.<org.apache.poi.hdf.model.util.BTreeSet: java.util.Comparator comparator>;

        $i0 = interfaceinvoke $r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, r3);

     label2:
        return $i0;
    }

    static int access$200(org.apache.poi.hdf.model.util.BTreeSet)
    {
        org.apache.poi.hdf.model.util.BTreeSet r0;
        int $i0;

        r0 := @parameter0: org.apache.poi.hdf.model.util.BTreeSet;

        $i0 = r0.<org.apache.poi.hdf.model.util.BTreeSet: int order>;

        return $i0;
    }
}
