public class org.mortbay.jetty.servlet.Holder extends org.mortbay.component.AbstractLifeCycle implements java.io.Serializable
{
    protected transient java.lang.Class _class;
    protected java.lang.String _className;
    protected java.lang.String _displayName;
    protected java.util.Map _initParams;
    protected boolean _extInstance;
    protected java.lang.String _name;
    protected org.mortbay.jetty.servlet.ServletHandler _servletHandler;
    static java.lang.Class class$org$mortbay$jetty$servlet$Holder;

    protected void <init>()
    {
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void <init>()>();

        return;
    }

    protected void <init>(java.lang.Class)
    {
        org.mortbay.jetty.servlet.Holder r0;
        java.lang.StringBuffer $r3, $r5, $r6, $r7;
        int $i0;
        java.lang.Class r1;
        java.lang.String $r2, $r4, $r8;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void <init>()>();

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class> = r1;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _className> = $r2;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _name> = $r8;

     label1:
        return;
    }

    public void doStart() throws java.lang.Exception
    {
        org.mortbay.jetty.servlet.Holder r0;
        int $i1, $i3;
        java.lang.String $r4, $r7, $r9, $r12;
        boolean $z0, $z1;
        java.lang.Exception $r10;
        javax.servlet.UnavailableException $r14, $r15;
        java.lang.Class $r1, $r2, $r3, $r5, $r6, $r13;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class>;

        if $r1 != null goto label2;

        $r7 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _className>;

        if $r7 == null goto label1;

        $r9 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _className>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

     label1:
        $r14 = new javax.servlet.UnavailableException;

        $i1 = (int) -1;

        specialinvoke $r14.<javax.servlet.UnavailableException: void <init>(java.lang.String,int)>("No class for Servlet or Filter", $i1);

        throw $r14;

     label2:
        $r2 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class>;

        if $r2 != null goto label8;

     label3:
        $r3 = <org.mortbay.jetty.servlet.Holder: java.lang.Class class$org$mortbay$jetty$servlet$Holder>;

        if $r3 != null goto label4;

        $r13 = staticinvoke <org.mortbay.jetty.servlet.Holder: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.servlet.Holder");

        <org.mortbay.jetty.servlet.Holder: java.lang.Class class$org$mortbay$jetty$servlet$Holder> = $r13;

        goto label5;

     label4:
        $r13 = <org.mortbay.jetty.servlet.Holder: java.lang.Class class$org$mortbay$jetty$servlet$Holder>;

     label5:
        $r4 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _className>;

        $r5 = staticinvoke <org.mortbay.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>($r13, $r4);

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class> = $r5;

        $z0 = staticinvoke <org.mortbay.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label6;

        $r6 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class>;

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String,java.lang.Object)>("Holding {}", $r6);

     label6:
        goto label8;

     label7:
        $r10 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r10);

        $r15 = new javax.servlet.UnavailableException;

        $r12 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        $i3 = (int) -1;

        specialinvoke $r15.<javax.servlet.UnavailableException: void <init>(java.lang.String,int)>($r12, $i3);

        throw $r15;

     label8:
        return;

        catch java.lang.Exception from label3 to label6 with label7;
    }

    public void doStop()
    {
        org.mortbay.jetty.servlet.Holder r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $z0 = r0.<org.mortbay.jetty.servlet.Holder: boolean _extInstance>;

        if $z0 != 0 goto label1;

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class> = null;

     label1:
        return;
    }

    public java.lang.String getClassName()
    {
        java.lang.String $r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _className>;

        return $r1;
    }

    public java.lang.Class getHeldClass()
    {
        java.lang.Class $r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class>;

        return $r1;
    }

    public java.lang.String getDisplayName()
    {
        java.lang.String $r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _displayName>;

        return $r1;
    }

    public java.lang.String getInitParameter(java.lang.String)
    {
        org.mortbay.jetty.servlet.Holder r0;
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        java.lang.String r2, $r5;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.util.Enumeration getInitParameterNames()
    {
        java.util.List $r5;
        org.mortbay.jetty.servlet.Holder r0;
        java.util.Enumeration $r4, $r6;
        java.util.Map $r1, $r2;
        java.util.Set $r3;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams>;

        if $r1 != null goto label1;

        $r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        $r6 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r5);

        return $r6;

     label1:
        $r2 = r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r3);

        return $r4;
    }

    public java.util.Map getInitParameters()
    {
        org.mortbay.jetty.servlet.Holder r0;
        java.util.Map $r1;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _name>;

        return $r1;
    }

    public org.mortbay.jetty.servlet.ServletHandler getServletHandler()
    {
        org.mortbay.jetty.servlet.Holder r0;
        org.mortbay.jetty.servlet.ServletHandler $r1;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        return $r1;
    }

    public synchronized java.lang.Object newInstance() throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        org.mortbay.jetty.servlet.Holder r0;
        java.lang.StringBuffer $r5, $r6, $r8;
        java.lang.InstantiationException $r4;
        java.lang.Class $r1, $r2;
        java.lang.Object $r3;
        java.lang.String $r7, $r9;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class>;

        if $r1 != null goto label1;

        $r4 = new java.lang.InstantiationException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!");

        $r7 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _className>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.InstantiationException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        return $r3;
    }

    public void destroyInstance(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void setClassName(java.lang.String)
    {
        java.lang.String r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _className> = r1;

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class> = null;

        return;
    }

    public void setHeldClass(java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.String $r2;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.Class;

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.Class _class> = r1;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _className> = $r2;

        return;
    }

    public void setDisplayName(java.lang.String)
    {
        java.lang.String r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _displayName> = r1;

        return;
    }

    public void setInitParameter(java.lang.String, java.lang.String)
    {
        org.mortbay.jetty.servlet.Holder r0;
        java.util.Map $r1, $r4;
        java.util.HashMap $r5;
        java.lang.String r2, r3;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(int)>(3);

        r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams> = $r5;

     label1:
        $r4 = r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public void setInitParameters(java.util.Map)
    {
        org.mortbay.jetty.servlet.Holder r0;
        java.util.Map r1;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r1 := @parameter0: java.util.Map;

        r0.<org.mortbay.jetty.servlet.Holder: java.util.Map _initParams> = r1;

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _name> = r1;

        return;
    }

    public void setServletHandler(org.mortbay.jetty.servlet.ServletHandler)
    {
        org.mortbay.jetty.servlet.Holder r0;
        org.mortbay.jetty.servlet.ServletHandler r1;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        r1 := @parameter0: org.mortbay.jetty.servlet.ServletHandler;

        r0.<org.mortbay.jetty.servlet.Holder: org.mortbay.jetty.servlet.ServletHandler _servletHandler> = r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.mortbay.jetty.servlet.Holder r0;

        r0 := @this: org.mortbay.jetty.servlet.Holder;

        $r1 = r0.<org.mortbay.jetty.servlet.Holder: java.lang.String _name>;

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
