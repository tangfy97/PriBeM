public class ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder extends ucar.nc2.dataset.transform.AbstractCoordTransBuilder
{

    public void <init>()
    {
        ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder;

        specialinvoke r0.<ucar.nc2.dataset.transform.AbstractCoordTransBuilder: void <init>()>();

        return;
    }

    public java.lang.String getTransformName()
    {
        java.lang.String $r0;
        ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder r1;

        r1 := @this: ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder;

        $r0 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String GRID_MAPPING_NAME>;

        return $r0;
    }

    public ucar.nc2.dataset.TransformType getTransformType()
    {
        ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder r1;
        ucar.nc2.dataset.TransformType $r0;

        r1 := @this: ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder;

        $r0 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Projection>;

        return $r0;
    }

    public ucar.nc2.dataset.CoordinateTransform makeCoordinateTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        ucar.nc2.dataset.ProjectionCT $r9;
        ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder r0;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection $r8;
        ucar.nc2.Attribute $r7;
        int[] $r3, $r5, r13;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r4, $r6, $r10, $r11;
        ucar.nc2.dataset.NetcdfDataset r12;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder;

        r12 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        $r2 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_AREADIR>;

        $r3 = specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder: int[] getIntArray(ucar.nc2.Variable,java.lang.String)>(r1, $r2);

        $r4 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_NAVBLOCK>;

        $r5 = specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder: int[] getIntArray(ucar.nc2.Variable,java.lang.String)>(r1, $r4);

        r13 = null;

        $r6 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_AUXBLOCK>;

        $r7 = virtualinvoke r1.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>($r6);

        if $r7 == null goto label1;

        $r11 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_AUXBLOCK>;

        r13 = specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder: int[] getIntArray(ucar.nc2.Variable,java.lang.String)>(r1, $r11);

     label1:
        $r8 = new ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        specialinvoke $r8.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void <init>(int[],int[],int[])>($r3, $r5, r13);

        $r9 = new ucar.nc2.dataset.ProjectionCT;

        $r10 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getShortName()>();

        specialinvoke $r9.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>($r10, "FGDC", $r8);

        return $r9;
    }

    private int[] getIntArray(ucar.nc2.Variable, java.lang.String)
    {
        ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder r17;
        int[] $r6, $r7;
        ucar.nc2.Variable r0;
        java.lang.String r1, $r11, $r16;
        java.lang.IllegalArgumentException $r8;
        ucar.ma2.Array $r3;
        ucar.nc2.Attribute $r2;
        java.lang.Class $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r15;

        r17 := @this: ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder;

        r0 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("McIDASArea coordTransformVariable ");

        $r11 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: ucar.ma2.Array getValues()>();

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5 = virtualinvoke $r3.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r4);

        $r6 = (int[]) $r5;

        $r7 = (int[]) $r6;

        return $r7;
    }
}
