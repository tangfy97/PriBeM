public final class facebook4j.internal.http.RequestMethod extends java.lang.Object implements java.io.Serializable
{
    private final java.lang.String name;
    private static final java.util.Map instances;
    public static final facebook4j.internal.http.RequestMethod GET;
    public static final facebook4j.internal.http.RequestMethod POST;
    public static final facebook4j.internal.http.RequestMethod DELETE;
    public static final facebook4j.internal.http.RequestMethod HEAD;
    public static final facebook4j.internal.http.RequestMethod PUT;
    private static final long serialVersionUID;

    private void <init>(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.internal.http.RequestMethod r0;
        java.util.Map $r2;

        r0 := @this: facebook4j.internal.http.RequestMethod;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<facebook4j.internal.http.RequestMethod: java.lang.String name> = r1;

        $r2 = <facebook4j.internal.http.RequestMethod: java.util.Map instances>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0);

        return;
    }

    public final java.lang.String name()
    {
        java.lang.String $r1;
        facebook4j.internal.http.RequestMethod r0;

        r0 := @this: facebook4j.internal.http.RequestMethod;

        $r1 = r0.<facebook4j.internal.http.RequestMethod: java.lang.String name>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3, $r4;
        facebook4j.internal.http.RequestMethod r0, r2;
        boolean $z0, $z1;

        r0 := @this: facebook4j.internal.http.RequestMethod;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof facebook4j.internal.http.RequestMethod;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (facebook4j.internal.http.RequestMethod) r1;

        $r4 = r0.<facebook4j.internal.http.RequestMethod: java.lang.String name>;

        $r3 = r2.<facebook4j.internal.http.RequestMethod: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        facebook4j.internal.http.RequestMethod r0;

        r0 := @this: facebook4j.internal.http.RequestMethod;

        $r1 = r0.<facebook4j.internal.http.RequestMethod: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        facebook4j.internal.http.RequestMethod r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6;
        java.lang.String $r3, $r7;

        r2 := @this: facebook4j.internal.http.RequestMethod;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestMethod{name=\'");

        $r3 = r2.<facebook4j.internal.http.RequestMethod: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static facebook4j.internal.http.RequestMethod getInstance(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0;
        facebook4j.internal.http.RequestMethod $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <facebook4j.internal.http.RequestMethod: java.util.Map instances>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (facebook4j.internal.http.RequestMethod) $r2;

        return $r3;
    }

    private java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        java.lang.String $r1;
        facebook4j.internal.http.RequestMethod r0, $r2;

        r0 := @this: facebook4j.internal.http.RequestMethod;

        $r1 = r0.<facebook4j.internal.http.RequestMethod: java.lang.String name>;

        $r2 = staticinvoke <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod getInstance(java.lang.String)>($r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        facebook4j.internal.http.RequestMethod $r1, $r2, $r3, $r4, $r5;

        <facebook4j.internal.http.RequestMethod: long serialVersionUID> = -4399222582680270381L;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(5);

        <facebook4j.internal.http.RequestMethod: java.util.Map instances> = $r0;

        $r1 = new facebook4j.internal.http.RequestMethod;

        specialinvoke $r1.<facebook4j.internal.http.RequestMethod: void <init>(java.lang.String)>("GET");

        <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod GET> = $r1;

        $r2 = new facebook4j.internal.http.RequestMethod;

        specialinvoke $r2.<facebook4j.internal.http.RequestMethod: void <init>(java.lang.String)>("POST");

        <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod POST> = $r2;

        $r3 = new facebook4j.internal.http.RequestMethod;

        specialinvoke $r3.<facebook4j.internal.http.RequestMethod: void <init>(java.lang.String)>("DELETE");

        <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod DELETE> = $r3;

        $r4 = new facebook4j.internal.http.RequestMethod;

        specialinvoke $r4.<facebook4j.internal.http.RequestMethod: void <init>(java.lang.String)>("HEAD");

        <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod HEAD> = $r4;

        $r5 = new facebook4j.internal.http.RequestMethod;

        specialinvoke $r5.<facebook4j.internal.http.RequestMethod: void <init>(java.lang.String)>("PUT");

        <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod PUT> = $r5;

        return;
    }
}
