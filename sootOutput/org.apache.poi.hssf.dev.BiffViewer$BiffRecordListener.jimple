final class org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener extends java.lang.Object implements org.apache.poi.hssf.dev.BiffViewer$IBiffRecordListener
{
    private final java.io.Writer _hexDumpWriter;
    private java.util.List _headers;
    private final boolean _zeroAlignEachRecord;
    private final boolean _noHeader;

    public void <init>(java.io.Writer, boolean, boolean)
    {
        java.io.Writer r1;
        org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener r0;
        boolean z0, z1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: java.io.Writer _hexDumpWriter> = r1;

        r0.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: boolean _zeroAlignEachRecord> = z0;

        r0.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: boolean _noHeader> = z1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: java.util.List _headers> = $r2;

        return;
    }

    public void processRecord(int, int, int, int, byte[])
    {
        byte[] r3;
        org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener r1;
        java.io.IOException $r6;
        java.lang.RuntimeException $r7;
        java.util.List $r4;
        int i0, i1, i2, i3, $i4;
        java.io.Writer $r5;
        char[] $r2;
        java.lang.String $r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r3 := @parameter4: byte[];

        $r0 = staticinvoke <org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: java.lang.String formatRecordDetails(int,int,int,int)>(i0, i1, i2, i3);

        $z0 = r1.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: boolean _noHeader>;

        if $z0 != 0 goto label1;

        $r4 = r1.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: java.util.List _headers>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

     label1:
        $r5 = r1.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: java.io.Writer _hexDumpWriter>;

        if $r5 == null goto label5;

     label2:
        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>($r0);

        $r2 = <org.apache.poi.hssf.dev.BiffViewer: char[] NEW_LINE_CHARS>;

        virtualinvoke $r5.<java.io.Writer: void write(char[])>($r2);

        $i4 = i2 + 4;

        $z1 = r1.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: boolean _zeroAlignEachRecord>;

        staticinvoke <org.apache.poi.hssf.dev.BiffViewer: void hexDumpAligned(java.io.Writer,byte[],int,int,boolean)>($r5, r3, $i4, i0, $z1);

        virtualinvoke $r5.<java.io.Writer: void flush()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public java.util.List getRecentHeaders()
    {
        org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener r0;
        java.util.List r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener;

        r1 = r0.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: java.util.List _headers>;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hssf.dev.BiffViewer$BiffRecordListener: java.util.List _headers> = $r2;

        return r1;
    }

    private static java.lang.String formatRecordDetails(int, int, int, int)
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r13;
        int i0, i1, i2, i3;
        java.lang.String $r14;
        char[] $r2, $r8, $r10;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(64);

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Offset=");

        $r2 = staticinvoke <org.apache.poi.util.HexDump: char[] intToHex(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" recno=");

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" sid=");

        $r8 = staticinvoke <org.apache.poi.util.HexDump: char[] shortToHex(int)>(i2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" size=");

        $r10 = staticinvoke <org.apache.poi.util.HexDump: char[] shortToHex(int)>(i3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }
}
