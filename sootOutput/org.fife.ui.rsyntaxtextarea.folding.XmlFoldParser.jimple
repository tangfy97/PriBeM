public class org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser extends java.lang.Object implements org.fife.ui.rsyntaxtextarea.folding.FoldParser
{
    private static final char[] MARKUP_CLOSING_TAG_START;
    private static final char[] MARKUP_SHORT_TAG_END;
    private static final char[] MLC_END;

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List getFolds(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r1;
        javax.swing.text.BadLocationException $r11;
        java.util.ArrayList $r0;
        org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r4, $r5, $r6, $r9, $r10, r13;
        char[] $r2, $r3, $r7, $r8;
        org.fife.ui.rsyntaxtextarea.Token r14;

        r12 := @this: org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r13 = null;

        $i0 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        z8 = 0;

        i8 = 0;

     label01:
        i9 = 0;

     label02:
        if i9 >= $i0 goto label14;

        r14 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i9);

     label03:
        if r14 == null goto label13;

        $z0 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z0 == 0 goto label13;

        $z1 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean isComment()>();

        if $z1 == 0 goto label07;

        if z8 == 0 goto label06;

        $r8 = <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: char[] MLC_END>;

        $z7 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean endsWith(char[])>($r8);

        if $z7 == 0 goto label12;

        $i6 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i5 = r14.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i7 = $i6 + $i5;

        i10 = $i7 - 1;

        if r13 != null goto label04;

        $r10 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        specialinvoke $r10.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(1, r1, i8);

        virtualinvoke $r10.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i10);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        r13 = null;

        goto label05;

     label04:
        $r9 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(1, i8);

        virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i10);

        r13 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

     label05:
        z8 = 0;

        i8 = 0;

        goto label12;

     label06:
        $i4 = r14.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i4 != 2 goto label12;

        $r7 = <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: char[] MLC_END>;

        $z6 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean endsWith(char[])>($r7);

        if $z6 != 0 goto label12;

        z8 = 1;

        i8 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        goto label12;

     label07:
        $z2 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(int,char)>(25, 60);

        if $z2 == 0 goto label09;

        if r13 != null goto label08;

        $r6 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i3 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        specialinvoke $r6.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(0, r1, $i3);

        r13 = $r6;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label12;

     label08:
        $i2 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        r13 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(0, $i2);

        goto label12;

     label09:
        $r2 = <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: char[] MARKUP_SHORT_TAG_END>;

        $z3 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean is(int,char[])>(25, $r2);

        if $z3 == 0 goto label10;

        if r13 == null goto label12;

        $r5 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        staticinvoke <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: void removeFold(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List)>(r13, $r0);

        r13 = $r5;

        goto label12;

     label10:
        $r3 = <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: char[] MARKUP_CLOSING_TAG_START>;

        $z4 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean is(int,char[])>(25, $r3);

        if $z4 == 0 goto label12;

        if r13 == null goto label12;

        $i1 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>($i1);

        $r4 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        $z5 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isOnSingleLine()>();

        if $z5 == 0 goto label11;

        staticinvoke <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: void removeFold(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List)>(r13, $r0);

     label11:
        r13 = $r4;

     label12:
        r14 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label03;

     label13:
        i9 = i9 + 1;

        goto label02;

     label14:
        goto label16;

     label15:
        $r11 := @caughtexception;

        virtualinvoke $r11.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label16:
        return $r0;

        catch javax.swing.text.BadLocationException from label01 to label14 with label15;
    }

    private static final void removeFold(org.fife.ui.rsyntaxtextarea.folding.Fold, java.util.List)
    {
        java.util.List r1;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.folding.Fold;

        r1 := @parameter1: java.util.List;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean removeFromParent()>();

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>($i1);

     label1:
        return;
    }

    static void <clinit>()
    {
        char[] $r0, $r1, $r2;

        $r0 = newarray (char)[2];

        $r0[0] = 60;

        $r0[1] = 47;

        <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: char[] MARKUP_CLOSING_TAG_START> = $r0;

        $r1 = newarray (char)[2];

        $r1[0] = 47;

        $r1[1] = 62;

        <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: char[] MARKUP_SHORT_TAG_END> = $r1;

        $r2 = newarray (char)[3];

        $r2[0] = 45;

        $r2[1] = 45;

        $r2[2] = 62;

        <org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: char[] MLC_END> = $r2;

        return;
    }
}
