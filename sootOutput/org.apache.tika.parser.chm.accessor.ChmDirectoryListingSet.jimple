public class org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet extends java.lang.Object
{
    private java.util.List dlel;
    private byte[] data;
    private int placeHolder;
    private long dataOffset;
    private int controlDataIndex;
    private int resetTableIndex;
    private boolean isNotControlDataFound;
    private boolean isNotResetTableFound;

    public void <init>(byte[], org.apache.tika.parser.chm.accessor.ChmItsfHeader, org.apache.tika.parser.chm.accessor.ChmItspHeader) throws org.apache.tika.exception.TikaException
    {
        byte[] r2;
        org.apache.tika.parser.chm.accessor.ChmItspHeader r4;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r3;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;
        java.util.ArrayList $r5;
        int $i1, $i3, $i5;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r2 := @parameter0: byte[];

        r3 := @parameter1: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r4 := @parameter2: org.apache.tika.parser.chm.accessor.ChmItspHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int placeHolder> = $i1;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: long dataOffset> = -1L;

        $i3 = (int) -1;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int controlDataIndex> = $i3;

        $i5 = (int) -1;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int resetTableIndex> = $i5;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: boolean isNotControlDataFound> = 1;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: boolean isNotResetTableFound> = 1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setDirectoryListingEntryList(java.util.List)>($r5);

        staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: void assertByteArrayNotNull(byte[])>(r2);

        specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setData(byte[])>(r2);

        specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void enumerateChmDirectoryListingList(org.apache.tika.parser.chm.accessor.ChmItsfHeader,org.apache.tika.parser.chm.accessor.ChmItspHeader)>(r3, r4);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r3;
        int $i0;
        java.lang.String $r5, $r7, $r9, $r14, $r15;
        java.util.List $r4, $r12;
        java.lang.StringBuilder $r0, $r1, $r2, $r6, $r8, $r10, $r11, $r13;

        r3 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("list:=");

        $r4 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("number of list items:=");

        $r12 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public int getControlDataIndex()
    {
        int $i0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        $i0 = r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int controlDataIndex>;

        return $i0;
    }

    protected void setControlDataIndex(int)
    {
        int i0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int controlDataIndex> = i0;

        return;
    }

    public int getResetTableIndex()
    {
        int $i0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        $i0 = r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int resetTableIndex>;

        return $i0;
    }

    protected void setResetTableIndex(int)
    {
        int i0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int resetTableIndex> = i0;

        return;
    }

    private int getPlaceHolder()
    {
        int $i0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        $i0 = r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int placeHolder>;

        return $i0;
    }

    private void setPlaceHolder(int)
    {
        int i0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int placeHolder> = i0;

        return;
    }

    private void enumerateChmDirectoryListingList(org.apache.tika.parser.chm.accessor.ChmItsfHeader, org.apache.tika.parser.chm.accessor.ChmItspHeader)
    {
        byte[] $r3, $r4, r7, r8, r9;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r2;
        java.lang.Exception $r6;
        java.lang.Throwable $r5;
        long $l2, $l4, $l5, $l7, $l9, $l13, $l16, $l20, $l23;
        int $i0, $i1, $i3, i6, $i8, $i10, $i11, i12, $i14, $i15, $i17, $i18, $i19, $i21, $i22, $i24, $i25, $i26, i27, i28;
        org.apache.tika.parser.chm.accessor.ChmItspHeader r0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r1;

        r2 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r0 := @parameter1: org.apache.tika.parser.chm.accessor.ChmItspHeader;

     label01:
        $i0 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItspHeader: int getIndex_head()>();

        $i1 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItspHeader: int getUnknown_0024()>();

        $l2 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirOffset()>();

        $i3 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItspHeader: int getHeader_len()>();

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        i6 = (int) $l5;

        $l7 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDataOffset()>();

        specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setDataOffset(long)>($l7);

        i27 = 0;

        i28 = $i0;

     label02:
        if i28 > $i1 goto label05;

        $i8 = 1 + i28;

        $l9 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItspHeader: long getBlock_len()>();

        $i10 = (int) $l9;

        $i11 = $i8 * $i10;

        i12 = $i11 + i6;

        if i28 != 0 goto label03;

        $l20 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItspHeader: long getBlock_len()>();

        $i21 = (int) $l20;

        r7 = newarray (byte)[$i21];

        $r4 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: byte[] getData()>();

        $i22 = 1 + i28;

        $l23 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItspHeader: long getBlock_len()>();

        $i24 = (int) $l23;

        $i25 = $i22 * $i24;

        $i26 = $i25 + i6;

        r8 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] copyOfRange(byte[],int,int)>($r4, i6, $i26);

        i27 = i12;

        goto label04;

     label03:
        $l13 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItspHeader: long getBlock_len()>();

        $i14 = (int) $l13;

        r9 = newarray (byte)[$i14];

        $r3 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: byte[] getData()>();

        $i15 = 1 + i28;

        $l16 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItspHeader: long getBlock_len()>();

        $i17 = (int) $l16;

        $i18 = $i15 * $i17;

        $i19 = $i18 + i6;

        r8 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] copyOfRange(byte[],int,int)>($r3, i27, $i19);

        i27 = i12;

     label04:
        specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void enumerateOneSegment(byte[])>(r8);

        i28 = i28 + 1;

        goto label02;

     label05:
        specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setData(byte[])>(null);

        goto label10;

     label06:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label07:
        specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setData(byte[])>(null);

        goto label10;

     label08:
        $r5 := @caughtexception;

     label09:
        specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setData(byte[])>(null);

        throw $r5;

     label10:
        return;

        catch java.lang.Exception from label01 to label05 with label06;
        catch java.lang.Throwable from label01 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void checkControlData(org.apache.tika.parser.chm.accessor.DirectoryListingEntry)
    {
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry r1;
        java.util.List $r3;
        int $i0;
        java.lang.String $r2;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.DirectoryListingEntry;

        $z0 = r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: boolean isNotControlDataFound>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("ControlData");

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setControlDataIndex(int)>($i0);

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: boolean isNotControlDataFound> = 0;

     label1:
        return;
    }

    private void checkResetTable(org.apache.tika.parser.chm.accessor.DirectoryListingEntry)
    {
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry r1;
        java.util.List $r3;
        int $i0;
        java.lang.String $r2;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.DirectoryListingEntry;

        $z0 = r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: boolean isNotResetTableFound>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("ResetTable");

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setResetTableIndex(int)>($i0);

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: boolean isNotResetTableFound> = 0;

     label1:
        return;
    }

    private void enumerateOneSegment(byte[])
    {
        byte[] r0, $r2, $r4, $r8;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r5;
        byte $b5, $b8, $b21;
        boolean $z0;
        java.lang.Exception $r11;
        java.util.List $r12;
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry $r13;
        org.apache.tika.parser.chm.core.ChmCommons$EntryType $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27;
        java.lang.String $r1, $r3, $r14;

        r5 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r0 := @parameter0: byte[];

     label01:
        if r0 == null goto label09;

        $r1 = "::";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: int indexOf(byte[],byte[])>(r0, $r2);

        $r3 = "/";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i1 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: int indexOf(byte[],byte[])>(r0, $r4);

        if $i1 >= $i0 goto label02;

        specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i1);

        goto label03;

     label02:
        specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i0);

     label03:
        $i2 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        if $i2 <= 0 goto label09;

        $i3 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i4 = $i3 - 1;

        $b5 = r0[$i4];

        $i26 = (int) $b5;

        if $i26 == 115 goto label09;

     label04:
        $i6 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i7 = $i6 - 1;

        $b8 = r0[$i7];

        $i27 = (int) $b8;

        if $i27 <= 0 goto label07;

        $r13 = new org.apache.tika.parser.chm.accessor.DirectoryListingEntry;

        specialinvoke $r13.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void <init>()>();

        specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void doNameCheck(byte[],org.apache.tika.parser.chm.accessor.DirectoryListingEntry)>(r0, $r13);

        $r14 = new java.lang.String;

        $i11 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i12 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i13 = virtualinvoke $r13.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getNameLength()>();

        $i14 = $i12 + $i13;

        $r8 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] copyOfRange(byte[],int,int)>(r0, $i11, $i14);

        specialinvoke $r14.<java.lang.String: void <init>(byte[],java.lang.String)>($r8, "UTF-8");

        virtualinvoke $r13.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void setName(java.lang.String)>($r14);

        specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void checkControlData(org.apache.tika.parser.chm.accessor.DirectoryListingEntry)>($r13);

        specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void checkResetTable(org.apache.tika.parser.chm.accessor.DirectoryListingEntry)>($r13);

        $i15 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i16 = virtualinvoke $r13.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getNameLength()>();

        $i17 = $i15 + $i16;

        specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i17);

        $i18 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i19 = lengthof r0;

        if $i18 >= $i19 goto label05;

        $i20 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $b21 = r0[$i20];

        if $b21 != 0 goto label05;

        $r10 = <org.apache.tika.parser.chm.core.ChmCommons$EntryType: org.apache.tika.parser.chm.core.ChmCommons$EntryType UNCOMPRESSED>;

        virtualinvoke $r13.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void setEntryType(org.apache.tika.parser.chm.core.ChmCommons$EntryType)>($r10);

        goto label06;

     label05:
        $r9 = <org.apache.tika.parser.chm.core.ChmCommons$EntryType: org.apache.tika.parser.chm.core.ChmCommons$EntryType COMPRESSED>;

        virtualinvoke $r13.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void setEntryType(org.apache.tika.parser.chm.core.ChmCommons$EntryType)>($r9);

     label06:
        $i22 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i23 = $i22 + 1;

        specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i23);

        $i24 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getEncint(byte[])>(r0);

        virtualinvoke $r13.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void setOffset(int)>($i24);

        $i25 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getEncint(byte[])>(r0);

        virtualinvoke $r13.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void setLength(int)>($i25);

        $r12 = virtualinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label08;

     label07:
        $i9 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i10 = $i9 + 1;

        specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i10);

     label08:
        $z0 = specialinvoke r5.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: boolean hasNext(byte[])>(r0);

        if $z0 != 0 goto label04;

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

     label11:
        return;

        catch java.lang.Exception from label01 to label09 with label10;
    }

    private void doNameCheck(byte[], org.apache.tika.parser.chm.accessor.DirectoryListingEntry)
    {
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry r2;
        byte[] r0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r1;
        byte $b2, $b5, $b8, $b10, $b15, $b16;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i9, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i21;

        r1 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r0 := @parameter0: byte[];

        r2 := @parameter1: org.apache.tika.parser.chm.accessor.DirectoryListingEntry;

        $i0 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i1 = $i0 - 1;

        $b2 = r0[$i1];

        $i17 = (int) $b2;

        if $i17 != 115 goto label1;

        $i13 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i14 = $i13 - 1;

        $b15 = r0[$i14];

        $b16 = $b15 & 33;

        $i18 = (int) $b16;

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void setNameLength(int)>($i18);

        goto label3;

     label1:
        $i3 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i4 = $i3 + 1;

        $b5 = r0[$i4];

        $i19 = (int) $b5;

        if $i19 != 47 goto label2;

        $i9 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $b10 = r0[$i9];

        $i20 = (int) $b10;

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void setNameLength(int)>($i20);

        $i11 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i12 = $i11 + 1;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i12);

        goto label3;

     label2:
        $i6 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i7 = $i6 - 1;

        $b8 = r0[$i7];

        $i21 = (int) $b8;

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: void setNameLength(int)>($i21);

     label3:
        return;
    }

    private boolean hasNext(byte[])
    {
        byte[] r1;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;
        byte $b3, $b5, $b10, $b14;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r1 := @parameter0: byte[];

     label1:
        $i0 = specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i1 = lengthof r1;

        if $i0 >= $i1 goto label4;

        $i2 = specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $b3 = r1[$i2];

        $i16 = (int) $b3;

        if $i16 != 47 goto label2;

        $i12 = specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i13 = $i12 + 1;

        $b14 = r1[$i13];

        $i17 = (int) $b14;

        if $i17 == 58 goto label2;

        $i15 = specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i15);

        return 1;

     label2:
        $i4 = specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $b5 = r1[$i4];

        $i18 = (int) $b5;

        if $i18 != 58 goto label3;

        $i8 = specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i9 = $i8 + 1;

        $b10 = r1[$i9];

        $i19 = (int) $b10;

        if $i19 != 58 goto label3;

        $i11 = specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i11);

        return 1;

     label3:
        $i6 = specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i7 = $i6 + 1;

        specialinvoke r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i7);

        goto label1;

     label4:
        return 0;
    }

    private int getEncint(byte[])
    {
        byte[] r0, r2;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r1;
        byte $b4, $b5, $b6, $b9, $b10;
        int $i0, $i1, $i2, $i3, $i7, $i8, $i11, $i12, $i13;
        java.math.BigInteger $r3, $r5, r7, $r8, $r9;

        r1 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r2 := @parameter0: byte[];

        r7 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        r0 = newarray (byte)[1];

        $i0 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i1 = lengthof r2;

        if $i0 >= $i1 goto label3;

     label1:
        $i3 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $b4 = r2[$i3];

        $i13 = (int) $b4;

        if $i13 >= 0 goto label2;

        $b9 = $b4 & 127;

        $b10 = (byte) $b9;

        r0[0] = $b10;

        $r5 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(7);

        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(byte[])>(r0);

        r7 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r8);

        $i11 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i12 = $i11 + 1;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i12);

        goto label1;

     label2:
        $b5 = $b4 & 127;

        $b6 = (byte) $b5;

        r0[0] = $b6;

        $r3 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(7);

        $r9 = new java.math.BigInteger;

        specialinvoke $r9.<java.math.BigInteger: void <init>(byte[])>(r0);

        r7 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r9);

        $i7 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getPlaceHolder()>();

        $i8 = $i7 + 1;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void setPlaceHolder(int)>($i8);

     label3:
        $i2 = virtualinvoke r7.<java.math.BigInteger: int intValue()>();

        return $i2;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        return;
    }

    public void setDirectoryListingEntryList(java.util.List)
    {
        java.util.List r1;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List dlel> = r1;

        return;
    }

    public java.util.List getDirectoryListingEntryList()
    {
        java.util.List $r1;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        $r1 = r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List dlel>;

        return $r1;
    }

    private void setData(byte[])
    {
        byte[] r1;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r1 := @parameter0: byte[];

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: byte[] data> = r1;

        return;
    }

    private byte[] getData()
    {
        byte[] $r1;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        $r1 = r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: byte[] data>;

        return $r1;
    }

    private void setDataOffset(long)
    {
        long l0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: long dataOffset> = l0;

        return;
    }

    public long getDataOffset()
    {
        long $l0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        $l0 = r0.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: long dataOffset>;

        return $l0;
    }
}
