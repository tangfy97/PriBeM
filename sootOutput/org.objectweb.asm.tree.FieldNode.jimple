public class org.objectweb.asm.tree.FieldNode extends org.objectweb.asm.FieldVisitor
{
    public int access;
    public java.lang.String name;
    public java.lang.String desc;
    public java.lang.String signature;
    public java.lang.Object value;
    public java.util.List visibleAnnotations;
    public java.util.List invisibleAnnotations;
    public java.util.List attrs;

    public void <init>(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        int i0;
        org.objectweb.asm.tree.FieldNode r0;
        java.lang.Object r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.objectweb.asm.tree.FieldNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        specialinvoke r0.<org.objectweb.asm.tree.FieldNode: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(262144, i0, r1, r2, r3, r4);

        return;
    }

    public void <init>(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        int i0, i1;
        org.objectweb.asm.tree.FieldNode r0;
        java.lang.Object r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.objectweb.asm.tree.FieldNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.Object;

        specialinvoke r0.<org.objectweb.asm.FieldVisitor: void <init>(int)>(i0);

        r0.<org.objectweb.asm.tree.FieldNode: int access> = i1;

        r0.<org.objectweb.asm.tree.FieldNode: java.lang.String name> = r1;

        r0.<org.objectweb.asm.tree.FieldNode: java.lang.String desc> = r2;

        r0.<org.objectweb.asm.tree.FieldNode: java.lang.String signature> = r3;

        r0.<org.objectweb.asm.tree.FieldNode: java.lang.Object value> = r4;

        return;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.tree.AnnotationNode $r0;
        java.util.ArrayList $r5, $r8;
        java.util.List $r3, $r4, $r6, $r7;
        org.objectweb.asm.tree.FieldNode r2;
        java.lang.String r1;
        boolean z0;

        r2 := @this: org.objectweb.asm.tree.FieldNode;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new org.objectweb.asm.tree.AnnotationNode;

        specialinvoke $r0.<org.objectweb.asm.tree.AnnotationNode: void <init>(java.lang.String)>(r1);

        if z0 == 0 goto label2;

        $r6 = r2.<org.objectweb.asm.tree.FieldNode: java.util.List visibleAnnotations>;

        if $r6 != null goto label1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(1);

        r2.<org.objectweb.asm.tree.FieldNode: java.util.List visibleAnnotations> = $r8;

     label1:
        $r7 = r2.<org.objectweb.asm.tree.FieldNode: java.util.List visibleAnnotations>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r0);

        goto label4;

     label2:
        $r3 = r2.<org.objectweb.asm.tree.FieldNode: java.util.List invisibleAnnotations>;

        if $r3 != null goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(1);

        r2.<org.objectweb.asm.tree.FieldNode: java.util.List invisibleAnnotations> = $r5;

     label3:
        $r4 = r2.<org.objectweb.asm.tree.FieldNode: java.util.List invisibleAnnotations>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

     label4:
        return $r0;
    }

    public void visitAttribute(org.objectweb.asm.Attribute)
    {
        java.util.List $r1, $r3;
        org.objectweb.asm.Attribute r2;
        org.objectweb.asm.tree.FieldNode r0;
        java.util.ArrayList $r4;

        r0 := @this: org.objectweb.asm.tree.FieldNode;

        r2 := @parameter0: org.objectweb.asm.Attribute;

        $r1 = r0.<org.objectweb.asm.tree.FieldNode: java.util.List attrs>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(1);

        r0.<org.objectweb.asm.tree.FieldNode: java.util.List attrs> = $r4;

     label1:
        $r3 = r0.<org.objectweb.asm.tree.FieldNode: java.util.List attrs>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void visitEnd()
    {
        org.objectweb.asm.tree.FieldNode r0;

        r0 := @this: org.objectweb.asm.tree.FieldNode;

        return;
    }

    public void check(int)
    {
        int i0;
        org.objectweb.asm.tree.FieldNode r0;

        r0 := @this: org.objectweb.asm.tree.FieldNode;

        i0 := @parameter0: int;

        return;
    }

    public void accept(org.objectweb.asm.ClassVisitor)
    {
        org.objectweb.asm.ClassVisitor r0;
        java.util.List $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r20;
        org.objectweb.asm.tree.FieldNode r1;
        org.objectweb.asm.tree.AnnotationNode r24, r25;
        org.objectweb.asm.AnnotationVisitor $r19, $r23;
        org.objectweb.asm.FieldVisitor $r6;
        int $i0, $i1, i2, i3, $i4, i5, i6, $i7, i8, i9;
        org.objectweb.asm.Attribute $r15;
        java.lang.String $r3, $r4, $r5, $r18, $r22;
        java.lang.Object $r2, $r14, $r17, $r21;

        r1 := @this: org.objectweb.asm.tree.FieldNode;

        r0 := @parameter0: org.objectweb.asm.ClassVisitor;

        $i0 = r1.<org.objectweb.asm.tree.FieldNode: int access>;

        $r5 = r1.<org.objectweb.asm.tree.FieldNode: java.lang.String name>;

        $r4 = r1.<org.objectweb.asm.tree.FieldNode: java.lang.String desc>;

        $r3 = r1.<org.objectweb.asm.tree.FieldNode: java.lang.String signature>;

        $r2 = r1.<org.objectweb.asm.tree.FieldNode: java.lang.Object value>;

        $r6 = virtualinvoke r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($i0, $r5, $r4, $r3, $r2);

        if $r6 != null goto label01;

        return;

     label01:
        $r7 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List visibleAnnotations>;

        if $r7 != null goto label02;

        $i1 = 0;

        goto label03;

     label02:
        $r8 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List visibleAnnotations>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

     label03:
        i2 = $i1;

        i3 = 0;

     label04:
        if i3 >= i2 goto label05;

        $r20 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List visibleAnnotations>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i3);

        r24 = (org.objectweb.asm.tree.AnnotationNode) $r21;

        $r22 = r24.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        $r23 = virtualinvoke $r6.<org.objectweb.asm.FieldVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r22, 1);

        virtualinvoke r24.<org.objectweb.asm.tree.AnnotationNode: void accept(org.objectweb.asm.AnnotationVisitor)>($r23);

        i3 = i3 + 1;

        goto label04;

     label05:
        $r9 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List invisibleAnnotations>;

        if $r9 != null goto label06;

        $i4 = 0;

        goto label07;

     label06:
        $r10 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List invisibleAnnotations>;

        $i4 = interfaceinvoke $r10.<java.util.List: int size()>();

     label07:
        i5 = $i4;

        i6 = 0;

     label08:
        if i6 >= i5 goto label09;

        $r16 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List invisibleAnnotations>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i6);

        r25 = (org.objectweb.asm.tree.AnnotationNode) $r17;

        $r18 = r25.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        $r19 = virtualinvoke $r6.<org.objectweb.asm.FieldVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r18, 0);

        virtualinvoke r25.<org.objectweb.asm.tree.AnnotationNode: void accept(org.objectweb.asm.AnnotationVisitor)>($r19);

        i6 = i6 + 1;

        goto label08;

     label09:
        $r11 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List attrs>;

        if $r11 != null goto label10;

        $i7 = 0;

        goto label11;

     label10:
        $r12 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List attrs>;

        $i7 = interfaceinvoke $r12.<java.util.List: int size()>();

     label11:
        i8 = $i7;

        i9 = 0;

     label12:
        if i9 >= i8 goto label13;

        $r13 = r1.<org.objectweb.asm.tree.FieldNode: java.util.List attrs>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i9);

        $r15 = (org.objectweb.asm.Attribute) $r14;

        virtualinvoke $r6.<org.objectweb.asm.FieldVisitor: void visitAttribute(org.objectweb.asm.Attribute)>($r15);

        i9 = i9 + 1;

        goto label12;

     label13:
        virtualinvoke $r6.<org.objectweb.asm.FieldVisitor: void visitEnd()>();

        return;
    }
}
