public final class org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder extends java.lang.Object
{
    private final org.waveprotocol.wave.model.util.StringSet endKeys;
    private final org.waveprotocol.wave.model.util.StringMap changes;
    private static java.util.Comparator TRIPLET_COMPARATOR;

    public void <init>()
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder r0;
        org.waveprotocol.wave.model.util.StringSet $r1;
        org.waveprotocol.wave.model.util.StringMap $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringSet createStringSet()>();

        r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringSet endKeys> = $r1;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap createStringMap()>();

        r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringMap changes> = $r2;

        return;
    }

    public org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder end(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder r0;
        org.waveprotocol.wave.model.util.StringSet $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.util.StringMap $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringMap changes>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringMap: void remove(java.lang.String)>(r1);

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringSet endKeys>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringSet: void add(java.lang.String)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder change(java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder r0;
        org.waveprotocol.wave.model.util.StringSet $r2;
        java.lang.String r1, r3, r4;
        org.waveprotocol.wave.model.util.StringMap $r5;
        org.waveprotocol.wave.model.util.Pair $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringSet endKeys>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringSet: void remove(java.lang.String)>(r1);

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringMap changes>;

        $r6 = staticinvoke <org.waveprotocol.wave.model.util.Pair: org.waveprotocol.wave.model.util.Pair of(java.lang.Object,java.lang.Object)>(r3, r4);

        interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r1, $r6);

        return r0;
    }

    public org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap build()
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder r0;
        org.waveprotocol.wave.model.util.StringSet $r1, $r6;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[] r4;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$2 $r5;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3 $r7;
        java.lang.String[] r2;
        org.waveprotocol.wave.model.util.StringMap $r3, $r8;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$AnnotationBoundaryMapImpl $r10;
        int $i0, $i1;
        java.util.Comparator $r9;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringSet endKeys>;

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.util.StringSet: int countEntries()>();

        r2 = newarray (java.lang.String)[$i0];

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringMap changes>;

        $i1 = interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringMap: int countEntries()>();

        r4 = newarray (org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet)[$i1];

        $r6 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringSet endKeys>;

        $r5 = new org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$2;

        specialinvoke $r5.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$2: void <init>(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder,java.lang.String[])>(r0, r2);

        interfaceinvoke $r6.<org.waveprotocol.wave.model.util.StringSet: void each(org.waveprotocol.wave.model.util.ReadableStringSet$Proc)>($r5);

        $r8 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.util.StringMap changes>;

        $r7 = new org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3;

        specialinvoke $r7.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: void <init>(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder,org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[])>(r0, r4);

        interfaceinvoke $r8.<org.waveprotocol.wave.model.util.StringMap: void each(org.waveprotocol.wave.model.util.ReadableStringMap$ProcV)>($r7);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r2);

        $r9 = <org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: java.util.Comparator TRIPLET_COMPARATOR>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r4, $r9);

        $r10 = new org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$AnnotationBoundaryMapImpl;

        specialinvoke $r10.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$AnnotationBoundaryMapImpl: void <init>(java.lang.String[],org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[])>(r2, r4);

        return $r10;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1 $r0;

        $r0 = new org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1: void <init>()>();

        <org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: java.util.Comparator TRIPLET_COMPARATOR> = $r0;

        return;
    }
}
