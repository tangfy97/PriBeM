public class ucar.nc2.ft.point.PointIteratorFiltered extends ucar.nc2.ft.point.PointIteratorAbstract
{
    private ucar.nc2.ft.PointFeatureIterator orgIter;
    private ucar.unidata.geoloc.LatLonRect filter_bb;
    private ucar.nc2.units.DateRange filter_date;
    private ucar.nc2.ft.PointFeature pointFeature;
    private boolean finished;

    void <init>(ucar.nc2.ft.PointFeatureIterator, ucar.unidata.geoloc.LatLonRect, ucar.nc2.units.DateRange)
    {
        ucar.nc2.ft.point.PointIteratorFiltered r0;
        ucar.nc2.ft.PointFeatureIterator r1;
        ucar.unidata.geoloc.LatLonRect r2;
        ucar.nc2.units.DateRange r3;

        r0 := @this: ucar.nc2.ft.point.PointIteratorFiltered;

        r1 := @parameter0: ucar.nc2.ft.PointFeatureIterator;

        r2 := @parameter1: ucar.unidata.geoloc.LatLonRect;

        r3 := @parameter2: ucar.nc2.units.DateRange;

        specialinvoke r0.<ucar.nc2.ft.point.PointIteratorAbstract: void <init>()>();

        r0.<ucar.nc2.ft.point.PointIteratorFiltered: boolean finished> = 0;

        r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeatureIterator orgIter> = r1;

        r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.unidata.geoloc.LatLonRect filter_bb> = r2;

        r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.units.DateRange filter_date> = r3;

        return;
    }

    public void setBufferSize(int)
    {
        ucar.nc2.ft.point.PointIteratorFiltered r0;
        int i0;
        ucar.nc2.ft.PointFeatureIterator $r1;

        r0 := @this: ucar.nc2.ft.point.PointIteratorFiltered;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeatureIterator orgIter>;

        interfaceinvoke $r1.<ucar.nc2.ft.PointFeatureIterator: void setBufferSize(int)>(i0);

        return;
    }

    public void finish()
    {
        ucar.nc2.ft.point.PointIteratorFiltered r0;
        ucar.nc2.ft.PointFeatureIterator $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.PointIteratorFiltered;

        $z0 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: boolean finished>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeatureIterator orgIter>;

        interfaceinvoke $r1.<ucar.nc2.ft.PointFeatureIterator: void finish()>();

        virtualinvoke r0.<ucar.nc2.ft.point.PointIteratorFiltered: void finishCalcBounds()>();

        r0.<ucar.nc2.ft.point.PointIteratorFiltered: boolean finished> = 1;

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        ucar.nc2.ft.point.PointIteratorFiltered r0;
        ucar.nc2.ft.PointFeature $r1, $r2;
        boolean z0, $z2, $z3, $z4;

        r0 := @this: ucar.nc2.ft.point.PointIteratorFiltered;

        $r1 = specialinvoke r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeature nextFilteredDataPoint()>();

        r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeature pointFeature> = $r1;

        $r2 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeature pointFeature>;

        if $r2 != null goto label1;

        $z4 = 1;

        $z3 = 1;

        goto label2;

     label1:
        $z4 = 0;

        $z3 = 0;

     label2:
        z0 = $z3;

        if $z4 == 0 goto label3;

        virtualinvoke r0.<ucar.nc2.ft.point.PointIteratorFiltered: void finish()>();

     label3:
        if z0 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public ucar.nc2.ft.PointFeature next() throws java.io.IOException
    {
        ucar.nc2.ft.point.PointIteratorFiltered r0;
        ucar.nc2.ft.PointFeature $r1, $r2, $r3;

        r0 := @this: ucar.nc2.ft.point.PointIteratorFiltered;

        $r1 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeature pointFeature>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeature pointFeature>;

        virtualinvoke r0.<ucar.nc2.ft.point.PointIteratorFiltered: void calcBounds(ucar.nc2.ft.PointFeature)>($r2);

        $r3 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeature pointFeature>;

        return $r3;
    }

    private boolean filter(ucar.nc2.ft.PointFeature)
    {
        java.util.Date $r8;
        ucar.nc2.ft.point.PointIteratorFiltered r0;
        ucar.unidata.geoloc.LatLonRect $r2, $r4;
        ucar.nc2.units.DateRange $r1, $r7;
        ucar.nc2.ft.PointFeature r3;
        ucar.unidata.geoloc.EarthLocation $r5, $r6;
        double $d0, $d1;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.point.PointIteratorFiltered;

        r3 := @parameter0: ucar.nc2.ft.PointFeature;

        $r1 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.units.DateRange filter_date>;

        if $r1 == null goto label1;

        $r7 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.units.DateRange filter_date>;

        $r8 = interfaceinvoke r3.<ucar.nc2.ft.PointFeature: java.util.Date getObservationTimeAsDate()>();

        $z1 = virtualinvoke $r7.<ucar.nc2.units.DateRange: boolean included(java.util.Date)>($r8);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.unidata.geoloc.LatLonRect filter_bb>;

        if $r2 == null goto label2;

        $r4 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.unidata.geoloc.LatLonRect filter_bb>;

        $r5 = interfaceinvoke r3.<ucar.nc2.ft.PointFeature: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d0 = interfaceinvoke $r5.<ucar.unidata.geoloc.EarthLocation: double getLatitude()>();

        $r6 = interfaceinvoke r3.<ucar.nc2.ft.PointFeature: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d1 = interfaceinvoke $r6.<ucar.unidata.geoloc.EarthLocation: double getLongitude()>();

        $z0 = virtualinvoke $r4.<ucar.unidata.geoloc.LatLonRect: boolean contains(double,double)>($d0, $d1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    private ucar.nc2.ft.PointFeature nextFilteredDataPoint() throws java.io.IOException
    {
        ucar.nc2.ft.point.PointIteratorFiltered r0;
        ucar.nc2.ft.PointFeatureIterator $r1, $r2, $r3, $r4, $r5;
        ucar.nc2.ft.PointFeature r6;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.ft.point.PointIteratorFiltered;

        $r1 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeatureIterator orgIter>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeatureIterator orgIter>;

        $z0 = interfaceinvoke $r2.<ucar.nc2.ft.PointFeatureIterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r3 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeatureIterator orgIter>;

        r6 = interfaceinvoke $r3.<ucar.nc2.ft.PointFeatureIterator: ucar.nc2.ft.PointFeature next()>();

     label3:
        $z1 = specialinvoke r0.<ucar.nc2.ft.point.PointIteratorFiltered: boolean filter(ucar.nc2.ft.PointFeature)>(r6);

        if $z1 != 0 goto label5;

        $r4 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeatureIterator orgIter>;

        $z2 = interfaceinvoke $r4.<ucar.nc2.ft.PointFeatureIterator: boolean hasNext()>();

        if $z2 != 0 goto label4;

        return null;

     label4:
        $r5 = r0.<ucar.nc2.ft.point.PointIteratorFiltered: ucar.nc2.ft.PointFeatureIterator orgIter>;

        r6 = interfaceinvoke $r5.<ucar.nc2.ft.PointFeatureIterator: ucar.nc2.ft.PointFeature next()>();

        goto label3;

     label5:
        return r6;
    }
}
