public class org.apache.batik.ext.awt.image.rendered.PadRed extends org.apache.batik.ext.awt.image.rendered.AbstractRed
{
    static final boolean DEBUG;
    org.apache.batik.ext.awt.image.PadMode padMode;
    java.awt.RenderingHints hints;

    public void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed, java.awt.Rectangle, org.apache.batik.ext.awt.image.PadMode, java.awt.RenderingHints)
    {
        java.awt.Rectangle r2;
        org.apache.batik.ext.awt.image.rendered.PadRed r0;
        java.awt.RenderingHints r6;
        java.awt.image.SampleModel $r4;
        org.apache.batik.ext.awt.image.PadMode r5;
        org.apache.batik.ext.awt.image.rendered.CachableRed r1;
        java.awt.image.ColorModel $r3;
        int $i0, $i1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed;

        r1 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        r2 := @parameter1: java.awt.Rectangle;

        r5 := @parameter2: org.apache.batik.ext.awt.image.PadMode;

        r6 := @parameter3: java.awt.RenderingHints;

        $r3 = interfaceinvoke r1.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $r4 = staticinvoke <org.apache.batik.ext.awt.image.rendered.PadRed: java.awt.image.SampleModel fixSampleModel(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle)>(r1, r2);

        $i1 = r2.<java.awt.Rectangle: int x>;

        $i0 = r2.<java.awt.Rectangle: int y>;

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,java.awt.image.ColorModel,java.awt.image.SampleModel,int,int,java.util.Map)>(r1, r2, $r3, $r4, $i1, $i0, null);

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed: org.apache.batik.ext.awt.image.PadMode padMode> = r5;

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed: java.awt.RenderingHints hints> = r6;

        return;
    }

    public java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)
    {
        java.awt.Rectangle $r4, $r6, $r13;
        org.apache.batik.ext.awt.image.rendered.PadRed r0;
        org.apache.batik.ext.awt.image.PadMode $r7, $r8, $r9, $r10, $r11, $r12;
        java.util.Vector $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        org.apache.batik.ext.awt.image.rendered.CachableRed r3;
        java.lang.Object $r2;
        java.awt.image.WritableRaster r5, $r14;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed;

        r5 := @parameter0: java.awt.image.WritableRaster;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: java.util.Vector getSources()>();

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(0);

        r3 = (org.apache.batik.ext.awt.image.rendered.CachableRed) $r2;

        $r4 = interfaceinvoke r3.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $r6 = virtualinvoke r5.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();

        $z0 = virtualinvoke $r6.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>($r4);

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke $r6.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>($r4);

        $i5 = $r13.<java.awt.Rectangle: int x>;

        $i4 = $r13.<java.awt.Rectangle: int y>;

        $i3 = $r13.<java.awt.Rectangle: int width>;

        $i2 = $r13.<java.awt.Rectangle: int height>;

        $i1 = $r13.<java.awt.Rectangle: int x>;

        $i0 = $r13.<java.awt.Rectangle: int y>;

        $r14 = virtualinvoke r5.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>($i5, $i4, $i3, $i2, $i1, $i0, null);

        interfaceinvoke r3.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>($r14);

     label1:
        $r8 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed: org.apache.batik.ext.awt.image.PadMode padMode>;

        $r7 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        if $r8 != $r7 goto label2;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.PadRed: void handleZero(java.awt.image.WritableRaster)>(r5);

        goto label4;

     label2:
        $r10 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed: org.apache.batik.ext.awt.image.PadMode padMode>;

        $r9 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode REPLICATE>;

        if $r10 != $r9 goto label3;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.PadRed: void handleReplicate(java.awt.image.WritableRaster)>(r5);

        goto label4;

     label3:
        $r12 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed: org.apache.batik.ext.awt.image.PadMode padMode>;

        $r11 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode WRAP>;

        if $r12 != $r11 goto label4;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.PadRed: void handleWrap(java.awt.image.WritableRaster)>(r5);

     label4:
        return r5;
    }

    protected void handleZero(java.awt.image.WritableRaster)
    {
        java.util.Vector $r1;
        org.apache.batik.ext.awt.image.rendered.CachableRed r3;
        org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter $r7;
        java.awt.Rectangle $r4, $r6, $r8, $r9;
        org.apache.batik.ext.awt.image.rendered.PadRed r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, i57, $i58, $i59, i60, $i61, $i62, $i63, $i64, $i65, $i66, i67, $i68, $i69, $i70, $i71, $i72, $i73, i74;
        java.lang.Object $r2;
        java.awt.image.WritableRaster r5;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed;

        r5 := @parameter0: java.awt.image.WritableRaster;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: java.util.Vector getSources()>();

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(0);

        r3 = (org.apache.batik.ext.awt.image.rendered.CachableRed) $r2;

        $r4 = interfaceinvoke r3.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $r6 = virtualinvoke r5.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();

        $r7 = staticinvoke <org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter getZeroRecter(java.awt.image.WritableRaster)>(r5);

        $r8 = new java.awt.Rectangle;

        $i3 = $r6.<java.awt.Rectangle: int x>;

        $i2 = $r6.<java.awt.Rectangle: int y>;

        $i1 = $r6.<java.awt.Rectangle: int width>;

        $i0 = $r6.<java.awt.Rectangle: int height>;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        $r9 = new java.awt.Rectangle;

        $i7 = $r6.<java.awt.Rectangle: int x>;

        $i6 = $r6.<java.awt.Rectangle: int y>;

        $i5 = $r6.<java.awt.Rectangle: int width>;

        $i4 = $r6.<java.awt.Rectangle: int height>;

        specialinvoke $r9.<java.awt.Rectangle: void <init>(int,int,int,int)>($i7, $i6, $i5, $i4);

        $i9 = $r8.<java.awt.Rectangle: int x>;

        $i8 = $r4.<java.awt.Rectangle: int x>;

        if $i9 >= $i8 goto label2;

        $i51 = $r4.<java.awt.Rectangle: int x>;

        $i50 = $r8.<java.awt.Rectangle: int x>;

        i57 = $i51 - $i50;

        $i52 = $r8.<java.awt.Rectangle: int width>;

        if i57 <= $i52 goto label1;

        i57 = $r8.<java.awt.Rectangle: int width>;

     label1:
        $r9.<java.awt.Rectangle: int width> = i57;

        virtualinvoke $r7.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: void zeroRect(java.awt.Rectangle)>($r9);

        $i53 = $r8.<java.awt.Rectangle: int x>;

        $i54 = $i53 + i57;

        $r8.<java.awt.Rectangle: int x> = $i54;

        $i55 = $r8.<java.awt.Rectangle: int width>;

        $i56 = $i55 - i57;

        $r8.<java.awt.Rectangle: int width> = $i56;

     label2:
        $i58 = $r8.<java.awt.Rectangle: int y>;

        $i59 = $r4.<java.awt.Rectangle: int y>;

        if $i58 >= $i59 goto label4;

        $i41 = $r4.<java.awt.Rectangle: int y>;

        $i40 = $r8.<java.awt.Rectangle: int y>;

        i60 = $i41 - $i40;

        $i42 = $r8.<java.awt.Rectangle: int height>;

        if i60 <= $i42 goto label3;

        i60 = $r8.<java.awt.Rectangle: int height>;

     label3:
        $i43 = $r8.<java.awt.Rectangle: int x>;

        $r9.<java.awt.Rectangle: int x> = $i43;

        $i44 = $r8.<java.awt.Rectangle: int y>;

        $r9.<java.awt.Rectangle: int y> = $i44;

        $i45 = $r8.<java.awt.Rectangle: int width>;

        $r9.<java.awt.Rectangle: int width> = $i45;

        $r9.<java.awt.Rectangle: int height> = i60;

        virtualinvoke $r7.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: void zeroRect(java.awt.Rectangle)>($r9);

        $i46 = $r8.<java.awt.Rectangle: int y>;

        $i47 = $i46 + i60;

        $r8.<java.awt.Rectangle: int y> = $i47;

        $i48 = $r8.<java.awt.Rectangle: int height>;

        $i49 = $i48 - i60;

        $r8.<java.awt.Rectangle: int height> = $i49;

     label4:
        $i61 = $r8.<java.awt.Rectangle: int y>;

        $i62 = $r8.<java.awt.Rectangle: int height>;

        $i63 = $i61 + $i62;

        $i64 = $r4.<java.awt.Rectangle: int y>;

        $i65 = $r4.<java.awt.Rectangle: int height>;

        $i66 = $i64 + $i65;

        if $i63 <= $i66 goto label6;

        $i26 = $r8.<java.awt.Rectangle: int y>;

        $i25 = $r8.<java.awt.Rectangle: int height>;

        $i30 = $i26 + $i25;

        $i28 = $r4.<java.awt.Rectangle: int y>;

        $i27 = $r4.<java.awt.Rectangle: int height>;

        $i29 = $i28 + $i27;

        i67 = $i30 - $i29;

        $i31 = $r8.<java.awt.Rectangle: int height>;

        if i67 <= $i31 goto label5;

        i67 = $r8.<java.awt.Rectangle: int height>;

     label5:
        $i33 = $r8.<java.awt.Rectangle: int y>;

        $i32 = $r8.<java.awt.Rectangle: int height>;

        $i34 = $i33 + $i32;

        $i39 = $i34 - i67;

        $i35 = $r8.<java.awt.Rectangle: int x>;

        $r9.<java.awt.Rectangle: int x> = $i35;

        $r9.<java.awt.Rectangle: int y> = $i39;

        $i36 = $r8.<java.awt.Rectangle: int width>;

        $r9.<java.awt.Rectangle: int width> = $i36;

        $r9.<java.awt.Rectangle: int height> = i67;

        virtualinvoke $r7.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: void zeroRect(java.awt.Rectangle)>($r9);

        $i37 = $r8.<java.awt.Rectangle: int height>;

        $i38 = $i37 - i67;

        $r8.<java.awt.Rectangle: int height> = $i38;

     label6:
        $i68 = $r8.<java.awt.Rectangle: int x>;

        $i69 = $r8.<java.awt.Rectangle: int width>;

        $i70 = $i68 + $i69;

        $i71 = $r4.<java.awt.Rectangle: int x>;

        $i72 = $r4.<java.awt.Rectangle: int width>;

        $i73 = $i71 + $i72;

        if $i70 <= $i73 goto label8;

        $i11 = $r8.<java.awt.Rectangle: int x>;

        $i10 = $r8.<java.awt.Rectangle: int width>;

        $i15 = $i11 + $i10;

        $i13 = $r4.<java.awt.Rectangle: int x>;

        $i12 = $r4.<java.awt.Rectangle: int width>;

        $i14 = $i13 + $i12;

        i74 = $i15 - $i14;

        $i16 = $r8.<java.awt.Rectangle: int width>;

        if i74 <= $i16 goto label7;

        i74 = $r8.<java.awt.Rectangle: int width>;

     label7:
        $i18 = $r8.<java.awt.Rectangle: int x>;

        $i17 = $r8.<java.awt.Rectangle: int width>;

        $i19 = $i18 + $i17;

        $i24 = $i19 - i74;

        $r9.<java.awt.Rectangle: int x> = $i24;

        $i20 = $r8.<java.awt.Rectangle: int y>;

        $r9.<java.awt.Rectangle: int y> = $i20;

        $r9.<java.awt.Rectangle: int width> = i74;

        $i21 = $r8.<java.awt.Rectangle: int height>;

        $r9.<java.awt.Rectangle: int height> = $i21;

        virtualinvoke $r7.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: void zeroRect(java.awt.Rectangle)>($r9);

        $i22 = $r8.<java.awt.Rectangle: int width>;

        $i23 = $i22 - i74;

        $r8.<java.awt.Rectangle: int width> = $i23;

     label8:
        return;
    }

    protected void handleReplicate(java.awt.image.WritableRaster)
    {
        java.util.Vector $r1;
        org.apache.batik.ext.awt.image.rendered.CachableRed r3;
        int[] $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.awt.Rectangle $r4, $r6, $r7;
        org.apache.batik.ext.awt.image.rendered.PadRed r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, i74, $i75, i76, $i77, i78, $i79, i80, i81, i82, i83, i84, i85, i86, $i87, i88, $i89, i90, $i91, $i92, $i93, $i94, $i95, i96, i97, i98, i99, i100, i101, $i102, $i103, i104, i105, i106, i107;
        java.lang.Object $r2;
        java.awt.image.WritableRaster r5, $r16, $r17;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed;

        r5 := @parameter0: java.awt.image.WritableRaster;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: java.util.Vector getSources()>();

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(0);

        r3 = (org.apache.batik.ext.awt.image.rendered.CachableRed) $r2;

        $r4 = interfaceinvoke r3.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $r6 = virtualinvoke r5.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();

        i0 = $r6.<java.awt.Rectangle: int x>;

        i1 = $r6.<java.awt.Rectangle: int y>;

        i2 = $r6.<java.awt.Rectangle: int width>;

        i3 = $r6.<java.awt.Rectangle: int height>;

        $i4 = $r4.<java.awt.Rectangle: int x>;

        if $i4 <= i0 goto label01;

        $i73 = $r4.<java.awt.Rectangle: int x>;

        goto label02;

     label01:
        $i73 = i0;

     label02:
        i74 = $i73;

        $i6 = $r4.<java.awt.Rectangle: int x>;

        $i5 = $r4.<java.awt.Rectangle: int width>;

        $i7 = $i6 + $i5;

        $i10 = $i7 - 1;

        $i8 = i0 + i2;

        $i9 = $i8 - 1;

        if $i10 >= $i9 goto label03;

        $i71 = $r4.<java.awt.Rectangle: int x>;

        $i70 = $r4.<java.awt.Rectangle: int width>;

        $i72 = $i71 + $i70;

        $i75 = $i72 - 1;

        goto label04;

     label03:
        $i11 = i0 + i2;

        $i75 = $i11 - 1;

     label04:
        i76 = $i75;

        $i12 = $r4.<java.awt.Rectangle: int y>;

        if $i12 <= i1 goto label05;

        $i77 = $r4.<java.awt.Rectangle: int y>;

        goto label06;

     label05:
        $i77 = i1;

     label06:
        i78 = $i77;

        $i14 = $r4.<java.awt.Rectangle: int y>;

        $i13 = $r4.<java.awt.Rectangle: int height>;

        $i15 = $i14 + $i13;

        $i18 = $i15 - 1;

        $i16 = i1 + i3;

        $i17 = $i16 - 1;

        if $i18 >= $i17 goto label07;

        $i66 = $r4.<java.awt.Rectangle: int y>;

        $i65 = $r4.<java.awt.Rectangle: int height>;

        $i67 = $i66 + $i65;

        $i79 = $i67 - 1;

        goto label08;

     label07:
        $i19 = i1 + i3;

        $i79 = $i19 - 1;

     label08:
        i80 = i74;

        $i20 = i76 - i74;

        $i68 = $i20 + 1;

        i81 = $i68;

        i82 = i78;

        $i21 = $i79 - i78;

        $i69 = $i21 + 1;

        i83 = $i69;

        if $i68 >= 0 goto label09;

        i80 = 0;

        i81 = 0;

     label09:
        if $i69 >= 0 goto label10;

        i82 = 0;

        i83 = 0;

     label10:
        $r7 = new java.awt.Rectangle;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>(i80, i82, i81, i83);

        $i22 = $r4.<java.awt.Rectangle: int y>;

        if i1 >= $i22 goto label16;

        i84 = $r7.<java.awt.Rectangle: int width>;

        i85 = $r7.<java.awt.Rectangle: int x>;

        i86 = $r7.<java.awt.Rectangle: int x>;

        $i53 = i0 + i2;

        $i55 = $i53 - 1;

        $i54 = $r4.<java.awt.Rectangle: int x>;

        if $i55 > $i54 goto label11;

        i84 = 1;

        i85 = $r4.<java.awt.Rectangle: int x>;

        $i64 = i0 + i2;

        i86 = $i64 - 1;

        goto label12;

     label11:
        $i57 = $r4.<java.awt.Rectangle: int x>;

        $i56 = $r4.<java.awt.Rectangle: int width>;

        $i58 = $i57 + $i56;

        if i0 < $i58 goto label12;

        i84 = 1;

        $i62 = $r4.<java.awt.Rectangle: int x>;

        $i61 = $r4.<java.awt.Rectangle: int width>;

        $i63 = $i62 + $i61;

        i85 = $i63 - 1;

        i86 = i0;

     label12:
        $i87 = $r4.<java.awt.Rectangle: int y>;

        $r16 = virtualinvoke r5.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>(i86, i1, i84, 1, i85, $i87, null);

        interfaceinvoke r3.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>($r16);

        i88 = i1 + 1;

        $i89 = $r4.<java.awt.Rectangle: int y>;

        i90 = $i89;

        $i91 = i1 + i3;

        if $i91 >= $i89 goto label13;

        i90 = i1 + i3;

     label13:
        if i88 >= i90 goto label16;

        $i59 = i88 - 1;

        $r14 = (int[]) null;

        $r15 = virtualinvoke r5.<java.awt.image.Raster: int[] getPixels(int,int,int,int,int[])>(i86, $i59, i84, 1, $r14);

        goto label15;

     label14:
        virtualinvoke r5.<java.awt.image.WritableRaster: void setPixels(int,int,int,int,int[])>(i86, i88, i84, 1, $r15);

        i88 = i88 + 1;

     label15:
        $i60 = $r4.<java.awt.Rectangle: int y>;

        if i88 < $i60 goto label14;

     label16:
        $i92 = i1 + i3;

        $i93 = $r4.<java.awt.Rectangle: int y>;

        $i94 = $r4.<java.awt.Rectangle: int height>;

        $i95 = $i93 + $i94;

        if $i92 <= $i95 goto label22;

        i96 = $r7.<java.awt.Rectangle: int width>;

        i97 = $r7.<java.awt.Rectangle: int x>;

        $i39 = $r4.<java.awt.Rectangle: int y>;

        $i38 = $r4.<java.awt.Rectangle: int height>;

        $i40 = $i39 + $i38;

        i98 = $i40 - 1;

        i99 = $r7.<java.awt.Rectangle: int x>;

        $i42 = $r4.<java.awt.Rectangle: int y>;

        $i41 = $r4.<java.awt.Rectangle: int height>;

        i100 = $i42 + $i41;

        if i100 >= i1 goto label17;

        i100 = i1;

     label17:
        $i44 = i0 + i2;

        $i43 = $r4.<java.awt.Rectangle: int x>;

        if $i44 > $i43 goto label18;

        i96 = 1;

        i97 = $r4.<java.awt.Rectangle: int x>;

        $i52 = i0 + i2;

        i99 = $i52 - 1;

        goto label19;

     label18:
        $i46 = $r4.<java.awt.Rectangle: int x>;

        $i45 = $r4.<java.awt.Rectangle: int width>;

        $i47 = $i46 + $i45;

        if i0 < $i47 goto label19;

        i96 = 1;

        $i50 = $r4.<java.awt.Rectangle: int x>;

        $i49 = $r4.<java.awt.Rectangle: int width>;

        $i51 = $i50 + $i49;

        i97 = $i51 - 1;

        i99 = i0;

     label19:
        $r17 = virtualinvoke r5.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>(i99, i100, i96, 1, i97, i98, null);

        interfaceinvoke r3.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>($r17);

        i101 = i100 + 1;

        $i102 = i1 + i3;

        if i101 >= $i102 goto label22;

        $i48 = i101 - 1;

        $r12 = (int[]) null;

        $r13 = virtualinvoke r5.<java.awt.image.Raster: int[] getPixels(int,int,int,int,int[])>(i99, $i48, i96, 1, $r12);

        goto label21;

     label20:
        virtualinvoke r5.<java.awt.image.WritableRaster: void setPixels(int,int,int,int,int[])>(i99, i101, i96, 1, $r13);

        i101 = i101 + 1;

     label21:
        if i101 < $i102 goto label20;

     label22:
        $i103 = $r4.<java.awt.Rectangle: int x>;

        if i0 >= $i103 goto label26;

        i104 = $r4.<java.awt.Rectangle: int x>;

        $i36 = i0 + i2;

        $i35 = $r4.<java.awt.Rectangle: int x>;

        if $i36 > $i35 goto label23;

        $i37 = i0 + i2;

        i104 = $i37 - 1;

     label23:
        i105 = i0;

        $r10 = (int[]) null;

        $r11 = virtualinvoke r5.<java.awt.image.Raster: int[] getPixels(int,int,int,int,int[])>(i104, i1, 1, i3, $r10);

        goto label25;

     label24:
        virtualinvoke r5.<java.awt.image.WritableRaster: void setPixels(int,int,int,int,int[])>(i105, i1, 1, i3, $r11);

        i105 = i105 + 1;

     label25:
        if i105 < i104 goto label24;

     label26:
        $i26 = i0 + i2;

        $i24 = $r4.<java.awt.Rectangle: int x>;

        $i23 = $r4.<java.awt.Rectangle: int width>;

        $i25 = $i24 + $i23;

        if $i26 <= $i25 goto label30;

        $i28 = $r4.<java.awt.Rectangle: int x>;

        $i27 = $r4.<java.awt.Rectangle: int width>;

        $i29 = $i28 + $i27;

        i106 = $i29 - 1;

        $i31 = $r4.<java.awt.Rectangle: int x>;

        $i30 = $r4.<java.awt.Rectangle: int width>;

        $i32 = $i31 + $i30;

        if i0 < $i32 goto label27;

        i106 = i0;

     label27:
        i107 = i106 + 1;

        $i33 = i0 + i2;

        $i34 = $i33 - 1;

        $r8 = (int[]) null;

        $r9 = virtualinvoke r5.<java.awt.image.Raster: int[] getPixels(int,int,int,int,int[])>(i106, i1, 1, i3, $r8);

        goto label29;

     label28:
        virtualinvoke r5.<java.awt.image.WritableRaster: void setPixels(int,int,int,int,int[])>(i107, i1, 1, i3, $r9);

        i107 = i107 + 1;

     label29:
        if i107 < $i34 goto label28;

     label30:
        return;
    }

    protected void handleWrap(java.awt.image.WritableRaster)
    {
        org.apache.batik.ext.awt.image.rendered.PadRed r0;
        java.awt.image.WritableRaster r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed;

        r1 := @parameter0: java.awt.image.WritableRaster;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.PadRed: void handleZero(java.awt.image.WritableRaster)>(r1);

        return;
    }

    protected static java.awt.image.SampleModel fixSampleModel(org.apache.batik.ext.awt.image.rendered.CachableRed, java.awt.Rectangle)
    {
        java.awt.Rectangle r2;
        java.awt.image.SampleModel $r1, $r3;
        org.apache.batik.ext.awt.image.rendered.CachableRed r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;

        r0 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        r2 := @parameter1: java.awt.Rectangle;

        $i0 = staticinvoke <org.apache.batik.ext.awt.image.rendered.AbstractTiledRed: int getDefaultTileSize()>();

        $r1 = interfaceinvoke r0.<java.awt.image.RenderedImage: java.awt.image.SampleModel getSampleModel()>();

        $i1 = virtualinvoke $r1.<java.awt.image.SampleModel: int getWidth()>();

        i5 = $i1;

        if $i1 >= $i0 goto label1;

        i5 = $i0;

     label1:
        $i2 = r2.<java.awt.Rectangle: int width>;

        if i5 <= $i2 goto label2;

        i5 = r2.<java.awt.Rectangle: int width>;

     label2:
        $i3 = virtualinvoke $r1.<java.awt.image.SampleModel: int getHeight()>();

        i6 = $i3;

        if $i3 >= $i0 goto label3;

        i6 = $i0;

     label3:
        $i4 = r2.<java.awt.Rectangle: int height>;

        if i6 <= $i4 goto label4;

        i6 = r2.<java.awt.Rectangle: int height>;

     label4:
        $r3 = virtualinvoke $r1.<java.awt.image.SampleModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>(i5, i6);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.rendered.PadRed: boolean DEBUG> = 0;

        return;
    }
}
