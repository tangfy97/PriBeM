class ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard extends ucar.nc2.ft.point.PointDatasetImpl
{
    private ucar.nc2.ft.point.standard.TableAnalyzer analyser;
    private ucar.nc2.units.DateUnit timeUnit;

    void <init>(ucar.nc2.constants.FeatureType, ucar.nc2.ft.point.standard.TableAnalyzer, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.lang.IllegalStateException $r10;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard r0;
        java.util.Formatter $r3, r40;
        ucar.nc2.constants.FeatureType $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, r44, $r47, $r48, $r49;
        boolean $z0;
        ucar.nc2.ft.point.standard.StandardProfileCollectionImpl $r32;
        ucar.nc2.ft.point.standard.StandardStationProfileCollectionImpl $r28;
        java.lang.Exception $r37, $r39;
        java.util.List $r8, $r46;
        ucar.nc2.ft.point.standard.StandardStationCollectionImpl $r30;
        ucar.nc2.ft.point.standard.StandardPointCollectionImpl $r34;
        ucar.nc2.ft.point.standard.NestedTable r12;
        java.lang.Object[] $r2, $r42;
        ucar.nc2.ft.point.standard.TableAnalyzer r6;
        java.util.ArrayList $r7, $r45;
        int $i0;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl $r24;
        java.lang.String $r5, $r43;
        org.slf4j.Logger $r38;
        java.util.Iterator $r9;
        ucar.nc2.ft.point.standard.StandardSectionCollectionImpl $r26;
        ucar.nc2.units.DateUnit $r13, $r25, $r27, $r29, $r31, $r33, $r35, $r36, $r41;
        java.lang.Class $r4;
        java.lang.Object $r11;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard;

        r44 := @parameter0: ucar.nc2.constants.FeatureType;

        r6 := @parameter1: ucar.nc2.ft.point.standard.TableAnalyzer;

        r1 := @parameter2: ucar.nc2.dataset.NetcdfDataset;

        r40 := @parameter3: java.util.Formatter;

        specialinvoke r0.<ucar.nc2.ft.point.PointDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType)>(r1, null);

        $r3 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: java.util.Formatter parseInfo>;

        $r2 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r2[0] = $r5;

        virtualinvoke $r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" PointFeatureDatasetImpl=%s\n", $r2);

        r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.ft.point.standard.TableAnalyzer analyser> = r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = virtualinvoke r6.<ucar.nc2.ft.point.standard.TableAnalyzer: java.util.List getFlatTables()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.ft.point.standard.NestedTable) $r11;

        $r13 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit>;

        if $r13 != null goto label08;

     label02:
        $r36 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: ucar.nc2.units.DateUnit getTimeUnit()>();

        r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit> = $r36;

     label03:
        goto label08;

     label04:
        $r39 := @caughtexception;

        if null == r40 goto label05;

        $r42 = newarray (java.lang.Object)[1];

        $r43 = virtualinvoke $r39.<java.lang.Exception: java.lang.String getMessage()>();

        $r42[0] = $r43;

        virtualinvoke r40.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s\n", $r42);

     label05:
        $r41 = new ucar.nc2.units.DateUnit;

        specialinvoke $r41.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>("seconds since 1970-01-01");

        r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit> = $r41;

     label06:
        goto label08;

     label07:
        $r37 := @caughtexception;

        $r38 = staticinvoke <ucar.nc2.ft.point.standard.PointDatasetStandardFactory: org.slf4j.Logger access$000()>();

        interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Illegal time units", $r37);

     label08:
        $r45 = new java.util.ArrayList;

        $r46 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: java.util.List getDataVariables()>();

        specialinvoke $r45.<java.util.ArrayList: void <init>(java.util.Collection)>($r46);

        r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: java.util.List dataVariables> = $r45;

        $r47 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: ucar.nc2.constants.FeatureType getFeatureType()>();

        r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.constants.FeatureType featureType> = $r47;

        $r48 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: ucar.nc2.constants.FeatureType getFeatureType()>();

        $r49 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        if $r48 != $r49 goto label09;

        $r34 = new ucar.nc2.ft.point.standard.StandardPointCollectionImpl;

        $r35 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit>;

        specialinvoke $r34.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit)>(r12, $r35);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r34);

        goto label14;

     label09:
        $r14 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: ucar.nc2.constants.FeatureType getFeatureType()>();

        $r15 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType PROFILE>;

        if $r14 != $r15 goto label10;

        $r32 = new ucar.nc2.ft.point.standard.StandardProfileCollectionImpl;

        $r33 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit>;

        specialinvoke $r32.<ucar.nc2.ft.point.standard.StandardProfileCollectionImpl: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit)>(r12, $r33);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r32);

        goto label14;

     label10:
        $r16 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: ucar.nc2.constants.FeatureType getFeatureType()>();

        $r17 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        if $r16 != $r17 goto label11;

        $r30 = new ucar.nc2.ft.point.standard.StandardStationCollectionImpl;

        $r31 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit>;

        specialinvoke $r30.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit)>(r12, $r31);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r30);

        goto label14;

     label11:
        $r18 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: ucar.nc2.constants.FeatureType getFeatureType()>();

        $r19 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION_PROFILE>;

        if $r18 != $r19 goto label12;

        $r28 = new ucar.nc2.ft.point.standard.StandardStationProfileCollectionImpl;

        $r29 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit>;

        specialinvoke $r28.<ucar.nc2.ft.point.standard.StandardStationProfileCollectionImpl: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit)>(r12, $r29);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r28);

        goto label14;

     label12:
        $r20 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: ucar.nc2.constants.FeatureType getFeatureType()>();

        $r21 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType SECTION>;

        if $r20 != $r21 goto label13;

        $r26 = new ucar.nc2.ft.point.standard.StandardSectionCollectionImpl;

        $r27 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit>;

        specialinvoke $r26.<ucar.nc2.ft.point.standard.StandardSectionCollectionImpl: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit)>(r12, $r27);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label14;

     label13:
        $r22 = virtualinvoke r12.<ucar.nc2.ft.point.standard.NestedTable: ucar.nc2.constants.FeatureType getFeatureType()>();

        $r23 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        if $r22 != $r23 goto label14;

        $r24 = new ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        $r25 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.units.DateUnit timeUnit>;

        specialinvoke $r24.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit)>(r12, $r25);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r24);

     label14:
        goto label01;

     label15:
        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 != 0 goto label16;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No feature collections found");

        throw $r10;

     label16:
        virtualinvoke r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: void setPointFeatureCollection(java.util.List)>($r7);

        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label07;
    }

    public void getDetailInfo(java.util.Formatter)
    {
        ucar.nc2.ft.point.standard.TableAnalyzer $r2;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard r0;
        java.util.Formatter r1;

        r0 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard;

        r1 := @parameter0: java.util.Formatter;

        specialinvoke r0.<ucar.nc2.ft.point.PointDatasetImpl: void getDetailInfo(java.util.Formatter)>(r1);

        $r2 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.ft.point.standard.TableAnalyzer analyser>;

        virtualinvoke $r2.<ucar.nc2.ft.point.standard.TableAnalyzer: void getDetailInfo(java.util.Formatter)>(r1);

        return;
    }

    public ucar.nc2.constants.FeatureType getFeatureType()
    {
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard r0;
        ucar.nc2.constants.FeatureType $r1;

        r0 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard;

        $r1 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.constants.FeatureType featureType>;

        return $r1;
    }

    public java.lang.String getImplementationName()
    {
        ucar.nc2.ft.point.standard.TableAnalyzer $r1, $r3;
        java.lang.String $r2, $r4;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard r0;

        r0 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard;

        $r1 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.ft.point.standard.TableAnalyzer analyser>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.ft.point.standard.TableAnalyzer analyser>;

        $r4 = virtualinvoke $r3.<ucar.nc2.ft.point.standard.TableAnalyzer: java.lang.String getImplementationName()>();

        return $r4;

     label1:
        $r2 = specialinvoke r0.<ucar.nc2.ft.point.PointDatasetImpl: java.lang.String getImplementationName()>();

        return $r2;
    }

    ucar.nc2.ft.point.standard.TableAnalyzer getTableAnalyzer()
    {
        ucar.nc2.ft.point.standard.TableAnalyzer $r1;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard r0;

        r0 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard;

        $r1 = r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.ft.point.standard.TableAnalyzer analyser>;

        return $r1;
    }
}
