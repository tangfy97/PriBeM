public class org.apache.solr.common.cloud.SolrZooKeeper extends org.apache.zookeeper.ZooKeeper
{
    final java.util.Set spawnedThreads;

    public void <init>(java.lang.String, int, org.apache.zookeeper.Watcher) throws java.io.IOException
    {
        org.apache.zookeeper.Watcher r2;
        int i0;
        java.lang.String r1;
        java.util.concurrent.CopyOnWriteArraySet $r3;
        org.apache.solr.common.cloud.SolrZooKeeper r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZooKeeper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.zookeeper.Watcher;

        specialinvoke r0.<org.apache.zookeeper.ZooKeeper: void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)>(r1, i0, r2);

        $r3 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<org.apache.solr.common.cloud.SolrZooKeeper: java.util.Set spawnedThreads> = $r3;

        return;
    }

    public org.apache.zookeeper.ClientCnxn getConnection()
    {
        org.apache.zookeeper.ClientCnxn $r1;
        org.apache.solr.common.cloud.SolrZooKeeper r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZooKeeper;

        $r1 = r0.<org.apache.solr.common.cloud.SolrZooKeeper: org.apache.zookeeper.ClientCnxn cnxn>;

        return $r1;
    }

    public void pauseCnxn(long)
    {
        java.util.Set $r2;
        long l0;
        org.apache.solr.common.cloud.SolrZooKeeper r1;
        org.apache.solr.common.cloud.SolrZooKeeper$1 $r0;

        r1 := @this: org.apache.solr.common.cloud.SolrZooKeeper;

        l0 := @parameter0: long;

        $r0 = new org.apache.solr.common.cloud.SolrZooKeeper$1;

        specialinvoke $r0.<org.apache.solr.common.cloud.SolrZooKeeper$1: void <init>(org.apache.solr.common.cloud.SolrZooKeeper,long)>(r1, l0);

        $r2 = r1.<org.apache.solr.common.cloud.SolrZooKeeper: java.util.Set spawnedThreads>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r0);

        virtualinvoke $r0.<java.lang.Thread: void start()>();

        return;
    }

    public synchronized void close() throws java.lang.InterruptedException
    {
        java.util.Iterator $r2;
        java.lang.Thread r4;
        java.util.Set $r1;
        java.lang.Object $r3;
        org.apache.solr.common.cloud.SolrZooKeeper r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.solr.common.cloud.SolrZooKeeper;

        $r1 = r0.<org.apache.solr.common.cloud.SolrZooKeeper: java.util.Set spawnedThreads>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Thread) $r3;

        $z1 = virtualinvoke r4.<java.lang.Thread: boolean isAlive()>();

        if $z1 == 0 goto label2;

        virtualinvoke r4.<java.lang.Thread: void interrupt()>();

     label2:
        goto label1;

     label3:
        specialinvoke r0.<org.apache.zookeeper.ZooKeeper: void close()>();

        return;
    }
}
