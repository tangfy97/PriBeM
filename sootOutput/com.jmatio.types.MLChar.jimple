public class com.jmatio.types.MLChar extends com.jmatio.types.MLArray implements com.jmatio.types.GenericArrayCreator
{
    java.lang.Character[] chars;

    public void <init>(java.lang.String, java.lang.String)
    {
        int[] $r2;
        int $i0;
        com.jmatio.types.MLChar r0;
        java.lang.String r1, r3;

        r0 := @this: com.jmatio.types.MLChar;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = newarray (int)[2];

        $r2[0] = 1;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $r2[1] = $i0;

        specialinvoke r0.<com.jmatio.types.MLChar: void <init>(java.lang.String,int[],int,int)>(r1, $r2, 4, 0);

        virtualinvoke r0.<com.jmatio.types.MLChar: void set(java.lang.String)>(r3);

        return;
    }

    public void <init>(java.lang.String, java.lang.String[])
    {
        com.jmatio.types.MLChar r0;
        java.lang.String[] r3;
        int[] $r2;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.String r1, $r4;

        r0 := @this: com.jmatio.types.MLChar;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String[];

        $r2 = newarray (int)[2];

        $i0 = lengthof r3;

        $r2[0] = $i0;

        $i1 = lengthof r3;

        if $i1 <= 0 goto label1;

        $i2 = staticinvoke <com.jmatio.types.MLChar: int getMaxLength(java.lang.String[])>(r3);

        goto label2;

     label1:
        $i2 = 0;

     label2:
        $r2[1] = $i2;

        specialinvoke r0.<com.jmatio.types.MLChar: void <init>(java.lang.String,int[],int,int)>(r1, $r2, 4, 0);

        i3 = 0;

     label3:
        $i4 = lengthof r3;

        if i3 >= $i4 goto label4;

        $r4 = r3[i3];

        virtualinvoke r0.<com.jmatio.types.MLChar: void set(java.lang.String,int)>($r4, i3);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    private static int getMaxLength(java.lang.String[])
    {
        int $i0, $i1, i2, i3;
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label3;

        $r1 = r0[i3];

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= i2 goto label2;

        i2 = $i1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public void <init>(java.lang.String, java.lang.String[], int)
    {
        com.jmatio.types.MLChar r0;
        java.lang.String[] r3;
        int[] $r2;
        int $i0, i1, i2, i3, i4;
        java.lang.String r1, r4;

        r0 := @this: com.jmatio.types.MLChar;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        $r2 = newarray (int)[2];

        $i0 = lengthof r3;

        $r2[0] = $i0;

        $r2[1] = i1;

        specialinvoke r0.<com.jmatio.types.MLChar: void <init>(java.lang.String,int[],int,int)>(r1, $r2, 4, 0);

        i3 = 0;

        i2 = lengthof r3;

        i4 = 0;

     label1:
        if i4 >= i2 goto label2;

        r4 = r3[i4];

        virtualinvoke r0.<com.jmatio.types.MLChar: void set(java.lang.String,int)>(r4, i3);

        i3 = i3 + 1;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(java.lang.String, int[], int, int)
    {
        com.jmatio.types.MLChar r0;
        int[] r2;
        int i0, i1, $i2, $i3;
        java.lang.Character[] $r3;
        java.lang.String r1;

        r0 := @this: com.jmatio.types.MLChar;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.jmatio.types.MLArray: void <init>(java.lang.String,int[],int,int)>(r1, r2, i0, i1);

        $i2 = virtualinvoke r0.<com.jmatio.types.MLChar: int getM()>();

        $i3 = virtualinvoke r0.<com.jmatio.types.MLChar: int getN()>();

        $r3 = virtualinvoke r0.<com.jmatio.types.MLChar: java.lang.Character[] createArray(int,int)>($i2, $i3);

        r0.<com.jmatio.types.MLChar: java.lang.Character[] chars> = $r3;

        return;
    }

    public java.lang.Character[] createArray(int, int)
    {
        int i0, i1, $i2;
        java.lang.Character[] $r0;
        com.jmatio.types.MLChar r1;

        r1 := @this: com.jmatio.types.MLChar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 * i1;

        $r0 = newarray (java.lang.Character)[$i2];

        return $r0;
    }

    public void setChar(char, int)
    {
        java.lang.Character $r2;
        int i0;
        java.lang.Character[] $r1;
        com.jmatio.types.MLChar r0;
        char c1;

        r0 := @this: com.jmatio.types.MLChar;

        c1 := @parameter0: char;

        i0 := @parameter1: int;

        $r1 = r0.<com.jmatio.types.MLChar: java.lang.Character[] chars>;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        $r1[i0] = $r2;

        return;
    }

    public void set(java.lang.String)
    {
        int $i0, $i1, i3;
        char[] $r1;
        com.jmatio.types.MLChar r2;
        char $c2;
        java.lang.String r0;

        r2 := @this: com.jmatio.types.MLChar;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r2.<com.jmatio.types.MLChar: int getN()>();

        if i3 >= $i0 goto label2;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label2;

        $c2 = $r1[i3];

        virtualinvoke r2.<com.jmatio.types.MLChar: void setChar(char,int)>($c2, i3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void set(java.lang.String, int)
    {
        com.jmatio.types.MLChar r0;
        char $c6;
        int $i0, $i1, $i2, i3, $i4, $i5, $i7, $i8, i9;
        java.lang.String r1;

        r0 := @this: com.jmatio.types.MLChar;

        r1 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        $i0 = virtualinvoke r0.<com.jmatio.types.MLChar: int getM()>();

        i9 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.jmatio.types.MLChar: int getN()>();

        if i9 >= $i1 goto label4;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i9 >= $i2 goto label2;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i9);

        $i7 = $i0 * i9;

        $i8 = i3 + $i7;

        virtualinvoke r0.<com.jmatio.types.MLChar: void setChar(char,int)>($c6, $i8);

        goto label3;

     label2:
        $i4 = $i0 * i9;

        $i5 = i3 + $i4;

        virtualinvoke r0.<com.jmatio.types.MLChar: void setChar(char,int)>(32, $i5);

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        return;
    }

    public java.lang.Character getChar(int, int)
    {
        java.lang.Character $r2;
        int i0, i1, $i2;
        java.lang.Character[] $r1;
        com.jmatio.types.MLChar r0;

        r0 := @this: com.jmatio.types.MLChar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jmatio.types.MLChar: java.lang.Character[] chars>;

        $i2 = virtualinvoke r0.<com.jmatio.types.MLChar: int getIndex(int,int)>(i0, i1);

        $r2 = $r1[$i2];

        return $r2;
    }

    public java.lang.Character[] exportChar()
    {
        java.lang.Character[] $r1;
        com.jmatio.types.MLChar r0;

        r0 := @this: com.jmatio.types.MLChar;

        $r1 = r0.<com.jmatio.types.MLChar: java.lang.Character[] chars>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.jmatio.types.MLChar r1, $r2;
        java.lang.Character[] $r3, $r4;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.jmatio.types.MLChar;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.jmatio.types.MLChar;

        if $z0 == 0 goto label1;

        $r4 = r1.<com.jmatio.types.MLChar: java.lang.Character[] chars>;

        $r2 = (com.jmatio.types.MLChar) r0;

        $r3 = $r2.<com.jmatio.types.MLChar: java.lang.Character[] chars>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r3);

        return $z2;

     label1:
        $z1 = specialinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z1;
    }

    public java.lang.String getString(int)
    {
        com.jmatio.types.MLChar r1;
        java.lang.Character $r4;
        java.lang.StringBuffer $r0;
        int $i0, i1, i2;
        java.lang.String $r2, $r3;

        r1 := @this: com.jmatio.types.MLChar;

        i1 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<com.jmatio.types.MLChar: int getN()>();

        if i2 >= $i0 goto label2;

        $r4 = virtualinvoke r1.<com.jmatio.types.MLChar: java.lang.Character getChar(int,int)>(i1, i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r3;
    }

    public java.lang.String contentToString()
    {
        com.jmatio.types.MLChar r2;
        java.lang.Character $r9;
        java.lang.StringBuffer $r0, $r8;
        int $i0, $i1, i2, i3;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String $r3, $r6, $r7;

        r2 := @this: com.jmatio.types.MLChar;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<com.jmatio.types.MLChar: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = \n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        i2 = 0;

     label1:
        $i0 = virtualinvoke r2.<com.jmatio.types.MLChar: int getM()>();

        if i2 >= $i0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        i3 = 0;

     label2:
        $i1 = virtualinvoke r2.<com.jmatio.types.MLChar: int getN()>();

        if i3 >= $i1 goto label3;

        $r9 = virtualinvoke r2.<com.jmatio.types.MLChar: java.lang.Character getChar(int,int)>(i2, i3);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i2 = i2 + 1;

        goto label1;

     label4:
        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public volatile java.lang.Object[] createArray(int, int)
    {
        int i0, i1;
        java.lang.Character[] $r1;
        com.jmatio.types.MLChar r0;

        r0 := @this: com.jmatio.types.MLChar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.jmatio.types.MLChar: java.lang.Character[] createArray(int,int)>(i0, i1);

        return $r1;
    }
}
