public class ucar.nc2.ft.grid.GridDatasetStandardFactory extends java.lang.Object implements ucar.nc2.ft.FeatureDatasetFactory
{

    public void <init>()
    {
        ucar.nc2.ft.grid.GridDatasetStandardFactory r0;

        r0 := @this: ucar.nc2.ft.grid.GridDatasetStandardFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridDataset $r2;
        java.util.Formatter r6;
        java.util.List $r4;
        ucar.nc2.ft.grid.GridDatasetStandardFactory r5;
        int $i0;
        ucar.nc2.constants.FeatureType r0, $r1;
        ucar.nc2.dataset.NetcdfDataset r3;

        r5 := @this: ucar.nc2.ft.grid.GridDatasetStandardFactory;

        r0 := @parameter0: ucar.nc2.constants.FeatureType;

        r3 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r6 := @parameter2: java.util.Formatter;

        $r1 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        if r0 != $r1 goto label1;

        $r2 = new ucar.nc2.dt.grid.GridDataset;

        specialinvoke $r2.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r3);

        $r4 = virtualinvoke $r2.<ucar.nc2.dt.grid.GridDataset: java.util.List getGrids()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        return $r2;

     label1:
        return null;
    }

    public ucar.nc2.ft.FeatureDataset open(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.lang.Object, ucar.nc2.util.CancelTask, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r5;
        ucar.nc2.ft.grid.GridDatasetStandardFactory r2;
        ucar.nc2.dt.grid.GridDataset $r1;
        java.lang.Object r0;
        ucar.nc2.constants.FeatureType r3;
        ucar.nc2.dataset.NetcdfDataset r4;
        java.util.Formatter r6;

        r2 := @this: ucar.nc2.ft.grid.GridDatasetStandardFactory;

        r3 := @parameter0: ucar.nc2.constants.FeatureType;

        r4 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter2: java.lang.Object;

        r5 := @parameter3: ucar.nc2.util.CancelTask;

        r6 := @parameter4: java.util.Formatter;

        $r1 = (ucar.nc2.dt.grid.GridDataset) r0;

        return $r1;
    }

    public ucar.nc2.constants.FeatureType[] getFeatureType()
    {
        ucar.nc2.constants.FeatureType[] $r0;
        ucar.nc2.ft.grid.GridDatasetStandardFactory r2;
        ucar.nc2.constants.FeatureType $r1;

        r2 := @this: ucar.nc2.ft.grid.GridDatasetStandardFactory;

        $r0 = newarray (ucar.nc2.constants.FeatureType)[1];

        $r1 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        $r0[0] = $r1;

        return $r0;
    }
}
