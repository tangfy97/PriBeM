abstract class org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue extends java.lang.Object
{
    private final java.util.List events;
    final org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0;

    private void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue r0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r1;
        java.util.ArrayList $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: java.util.List events> = $r2;

        return;
    }

    abstract void unqueue(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap);

    final void queue(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r1;
        java.util.List $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    final void flush()
    {
        java.util.List $r1, $r3;
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue r0;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: java.util.List events>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap) $r4;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: void unqueue(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>(r5);

        goto label1;

     label2:
        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: java.util.List events>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer, org.waveprotocol.wave.model.document.operation.algorithm.Composer$1)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$1 r2;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue r0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.algorithm.Composer$1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>(r1);

        return;
    }
}
