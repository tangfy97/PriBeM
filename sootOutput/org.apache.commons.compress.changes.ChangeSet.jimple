public final class org.apache.commons.compress.changes.ChangeSet extends java.lang.Object
{
    private final java.util.Set changes;

    public void <init>()
    {
        org.apache.commons.compress.changes.ChangeSet r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: org.apache.commons.compress.changes.ChangeSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes> = $r1;

        return;
    }

    public void delete(java.lang.String)
    {
        org.apache.commons.compress.changes.Change $r1;
        java.lang.String r2;
        org.apache.commons.compress.changes.ChangeSet r0;

        r0 := @this: org.apache.commons.compress.changes.ChangeSet;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.apache.commons.compress.changes.Change;

        specialinvoke $r1.<org.apache.commons.compress.changes.Change: void <init>(java.lang.String,int)>(r2, 1);

        specialinvoke r0.<org.apache.commons.compress.changes.ChangeSet: void addDeletion(org.apache.commons.compress.changes.Change)>($r1);

        return;
    }

    public void deleteDir(java.lang.String)
    {
        org.apache.commons.compress.changes.Change $r1;
        java.lang.String r2;
        org.apache.commons.compress.changes.ChangeSet r0;

        r0 := @this: org.apache.commons.compress.changes.ChangeSet;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.apache.commons.compress.changes.Change;

        specialinvoke $r1.<org.apache.commons.compress.changes.Change: void <init>(java.lang.String,int)>(r2, 4);

        specialinvoke r0.<org.apache.commons.compress.changes.ChangeSet: void addDeletion(org.apache.commons.compress.changes.Change)>($r1);

        return;
    }

    public void add(org.apache.commons.compress.archivers.ArchiveEntry, java.io.InputStream)
    {
        org.apache.commons.compress.archivers.ArchiveEntry r1;
        org.apache.commons.compress.changes.ChangeSet r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.commons.compress.changes.ChangeSet;

        r1 := @parameter0: org.apache.commons.compress.archivers.ArchiveEntry;

        r2 := @parameter1: java.io.InputStream;

        virtualinvoke r0.<org.apache.commons.compress.changes.ChangeSet: void add(org.apache.commons.compress.archivers.ArchiveEntry,java.io.InputStream,boolean)>(r1, r2, 1);

        return;
    }

    public void add(org.apache.commons.compress.archivers.ArchiveEntry, java.io.InputStream, boolean)
    {
        org.apache.commons.compress.archivers.ArchiveEntry r2;
        org.apache.commons.compress.changes.ChangeSet r0;
        org.apache.commons.compress.changes.Change $r1;
        java.io.InputStream r3;
        boolean z0;

        r0 := @this: org.apache.commons.compress.changes.ChangeSet;

        r2 := @parameter0: org.apache.commons.compress.archivers.ArchiveEntry;

        r3 := @parameter1: java.io.InputStream;

        z0 := @parameter2: boolean;

        $r1 = new org.apache.commons.compress.changes.Change;

        specialinvoke $r1.<org.apache.commons.compress.changes.Change: void <init>(org.apache.commons.compress.archivers.ArchiveEntry,java.io.InputStream,boolean)>(r2, r3, z0);

        specialinvoke r0.<org.apache.commons.compress.changes.ChangeSet: void addAddition(org.apache.commons.compress.changes.Change)>($r1);

        return;
    }

    private void addAddition(org.apache.commons.compress.changes.Change)
    {
        org.apache.commons.compress.archivers.ArchiveEntry $r9, $r10, $r11;
        org.apache.commons.compress.changes.ChangeSet r2;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r6;
        java.util.Set $r3, $r4, $r5, $r12;
        org.apache.commons.compress.changes.Change r0, r8;
        java.lang.Object $r7;
        java.io.InputStream $r1;

        r2 := @this: org.apache.commons.compress.changes.ChangeSet;

        r0 := @parameter0: org.apache.commons.compress.changes.Change;

        $i0 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: int type()>();

        if 2 != $i0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: java.io.InputStream getInput()>();

        if $r1 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r2.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r5 = r2.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.commons.compress.changes.Change) $r7;

        $i1 = virtualinvoke r8.<org.apache.commons.compress.changes.Change: int type()>();

        if $i1 != 2 goto label5;

        $r9 = virtualinvoke r8.<org.apache.commons.compress.changes.Change: org.apache.commons.compress.archivers.ArchiveEntry getEntry()>();

        if $r9 == null goto label5;

        $r10 = virtualinvoke r8.<org.apache.commons.compress.changes.Change: org.apache.commons.compress.archivers.ArchiveEntry getEntry()>();

        $r11 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: org.apache.commons.compress.archivers.ArchiveEntry getEntry()>();

        $z2 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label5;

        $z3 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: boolean isReplaceMode()>();

        if $z3 == 0 goto label4;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        $r12 = r2.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r0);

        return;

     label4:
        return;

     label5:
        goto label3;

     label6:
        $r4 = r2.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r0);

        return;
    }

    private void addDeletion(org.apache.commons.compress.changes.Change)
    {
        org.apache.commons.compress.archivers.ArchiveEntry $r9, $r10;
        org.apache.commons.compress.changes.ChangeSet r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r2, $r11, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r6;
        java.util.Set $r4, $r5, $r16;
        org.apache.commons.compress.changes.Change r0, r8;
        java.lang.Object $r7;
        java.lang.StringBuilder $r12, $r13, $r14;

        r3 := @this: org.apache.commons.compress.changes.ChangeSet;

        r0 := @parameter0: org.apache.commons.compress.changes.Change;

        $i0 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: int type()>();

        if 1 == $i0 goto label1;

        $i4 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: int type()>();

        if 4 != $i4 goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: java.lang.String targetFile()>();

        if $r1 != null goto label3;

     label2:
        return;

     label3:
        $r2 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: java.lang.String targetFile()>();

        if $r2 == null goto label8;

        $r4 = r3.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        $r5 = r3.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.commons.compress.changes.Change) $r7;

        $i1 = virtualinvoke r8.<org.apache.commons.compress.changes.Change: int type()>();

        if $i1 != 2 goto label7;

        $r9 = virtualinvoke r8.<org.apache.commons.compress.changes.Change: org.apache.commons.compress.archivers.ArchiveEntry getEntry()>();

        if $r9 == null goto label7;

        $r10 = virtualinvoke r8.<org.apache.commons.compress.changes.Change: org.apache.commons.compress.archivers.ArchiveEntry getEntry()>();

        $r11 = interfaceinvoke $r10.<org.apache.commons.compress.archivers.ArchiveEntry: java.lang.String getName()>();

        if $r11 != null goto label5;

        goto label4;

     label5:
        $i2 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: int type()>();

        if 1 != $i2 goto label6;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label6;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        goto label7;

     label6:
        $i3 = virtualinvoke r0.<org.apache.commons.compress.changes.Change: int type()>();

        if 4 != $i3 goto label7;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.*");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean matches(java.lang.String)>($r15);

        if $z1 == 0 goto label7;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

     label7:
        goto label4;

     label8:
        $r16 = r3.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>(r0);

        return;
    }

    java.util.Set getChanges()
    {
        java.util.Set $r2;
        java.util.LinkedHashSet $r0;
        org.apache.commons.compress.changes.ChangeSet r1;

        r1 := @this: org.apache.commons.compress.changes.ChangeSet;

        $r0 = new java.util.LinkedHashSet;

        $r2 = r1.<org.apache.commons.compress.changes.ChangeSet: java.util.Set changes>;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r2);

        return $r0;
    }
}
