class org.eclipse.jetty.client.SelectConnector$Manager extends org.eclipse.jetty.io.nio.SelectorManager
{
    org.eclipse.jetty.util.log.Logger LOG;
    final org.eclipse.jetty.client.SelectConnector this$0;

    void <init>(org.eclipse.jetty.client.SelectConnector)
    {
        org.eclipse.jetty.client.SelectConnector$Manager r0;
        org.eclipse.jetty.client.SelectConnector r1;
        org.eclipse.jetty.util.log.Logger $r2;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r1 := @parameter0: org.eclipse.jetty.client.SelectConnector;

        r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectorManager: void <init>()>();

        $r2 = staticinvoke <org.eclipse.jetty.client.SelectConnector: org.eclipse.jetty.util.log.Logger access$000()>();

        r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.util.log.Logger LOG> = $r2;

        return;
    }

    public boolean dispatch(java.lang.Runnable)
    {
        org.eclipse.jetty.client.SelectConnector$Manager r0;
        org.eclipse.jetty.client.HttpClient $r2;
        org.eclipse.jetty.client.SelectConnector $r1;
        java.lang.Runnable r3;
        org.eclipse.jetty.util.thread.ThreadPool $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r3 := @parameter0: java.lang.Runnable;

        $r1 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.client.SelectConnector: org.eclipse.jetty.client.HttpClient access$100(org.eclipse.jetty.client.SelectConnector)>($r1);

        $r4 = $r2.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        $z0 = interfaceinvoke $r4.<org.eclipse.jetty.util.thread.ThreadPool: boolean dispatch(java.lang.Runnable)>(r3);

        return $z0;
    }

    protected void endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)
    {
        org.eclipse.jetty.client.SelectConnector$Manager r0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r1;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r1 := @parameter0: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        return;
    }

    protected void endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)
    {
        org.eclipse.jetty.client.SelectConnector$Manager r0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r1;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r1 := @parameter0: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        return;
    }

    protected void endPointUpgraded(org.eclipse.jetty.io.ConnectedEndPoint, org.eclipse.jetty.io.Connection)
    {
        org.eclipse.jetty.client.SelectConnector$Manager r0;
        org.eclipse.jetty.io.ConnectedEndPoint r1;
        org.eclipse.jetty.io.Connection r2;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r1 := @parameter0: org.eclipse.jetty.io.ConnectedEndPoint;

        r2 := @parameter1: org.eclipse.jetty.io.Connection;

        return;
    }

    public org.eclipse.jetty.io.nio.AsyncConnection newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.AsyncEndPoint, java.lang.Object)
    {
        org.eclipse.jetty.client.SelectConnector$Manager r1;
        org.eclipse.jetty.io.Buffers $r4, $r7;
        org.eclipse.jetty.client.SelectConnector $r2, $r5;
        org.eclipse.jetty.client.HttpClient $r3, $r6;
        org.eclipse.jetty.client.AsyncHttpConnection $r0;
        java.nio.channels.SocketChannel r9;
        org.eclipse.jetty.io.AsyncEndPoint r8;
        java.lang.Object r10;

        r1 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r9 := @parameter0: java.nio.channels.SocketChannel;

        r8 := @parameter1: org.eclipse.jetty.io.AsyncEndPoint;

        r10 := @parameter2: java.lang.Object;

        $r0 = new org.eclipse.jetty.client.AsyncHttpConnection;

        $r2 = r1.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0>;

        $r3 = staticinvoke <org.eclipse.jetty.client.SelectConnector: org.eclipse.jetty.client.HttpClient access$100(org.eclipse.jetty.client.SelectConnector)>($r2);

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.io.Buffers getRequestBuffers()>();

        $r5 = r1.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0>;

        $r6 = staticinvoke <org.eclipse.jetty.client.SelectConnector: org.eclipse.jetty.client.HttpClient access$100(org.eclipse.jetty.client.SelectConnector)>($r5);

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.io.Buffers getResponseBuffers()>();

        specialinvoke $r0.<org.eclipse.jetty.client.AsyncHttpConnection: void <init>(org.eclipse.jetty.io.Buffers,org.eclipse.jetty.io.Buffers,org.eclipse.jetty.io.EndPoint)>($r4, $r7, r8);

        return $r0;
    }

    protected org.eclipse.jetty.io.nio.SelectChannelEndPoint newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey) throws java.io.IOException
    {
        org.eclipse.jetty.client.AbstractHttpConnection $r22;
        org.eclipse.jetty.client.SelectConnector $r1, $r11, $r24;
        java.lang.Integer $r27;
        org.eclipse.jetty.client.HttpClient $r12;
        java.nio.channels.SocketChannel r3;
        java.util.Map $r2, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.client.HttpDestination $r28;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint $r9;
        org.eclipse.jetty.io.nio.AsyncConnection $r15;
        org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint $r16, $r20;
        org.eclipse.jetty.client.SelectConnector$Manager r0;
        java.lang.Object[] $r17, $r23;
        long $l0;
        javax.net.ssl.SSLEngine $r21;
        org.eclipse.jetty.io.nio.SelectorManager $r13;
        int $i1, $i2;
        java.lang.Boolean $r19;
        java.nio.channels.SelectionKey r7;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet r10;
        org.eclipse.jetty.util.thread.Timeout$Task r5;
        org.eclipse.jetty.io.AsyncEndPoint r29;
        java.lang.Object $r4, $r8, $r14;
        org.eclipse.jetty.util.log.Logger $r6, $r18, $r25;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r3 := @parameter0: java.nio.channels.SocketChannel;

        r10 := @parameter1: org.eclipse.jetty.io.nio.SelectorManager$SelectSet;

        r7 := @parameter2: java.nio.channels.SelectionKey;

        $r1 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.client.SelectConnector: java.util.Map access$200(org.eclipse.jetty.client.SelectConnector)>($r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        r5 = (org.eclipse.jetty.util.thread.Timeout$Task) $r4;

        if r5 == null goto label1;

        virtualinvoke r5.<org.eclipse.jetty.util.thread.Timeout$Task: void cancel()>();

     label1:
        $r6 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r25 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.util.log.Logger LOG>;

        $r23 = newarray (java.lang.Object)[1];

        $r24 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0>;

        $r26 = staticinvoke <org.eclipse.jetty.client.SelectConnector: java.util.Map access$200(org.eclipse.jetty.client.SelectConnector)>($r24);

        $i2 = interfaceinvoke $r26.<java.util.Map: int size()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r23[0] = $r27;

        interfaceinvoke $r25.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Channels with connection pending: {}", $r23);

     label2:
        $r8 = virtualinvoke r7.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();

        $r28 = (org.eclipse.jetty.client.HttpDestination) $r8;

        $r9 = new org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $r11 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0>;

        $r12 = staticinvoke <org.eclipse.jetty.client.SelectConnector: org.eclipse.jetty.client.HttpClient access$100(org.eclipse.jetty.client.SelectConnector)>($r11);

        $l0 = virtualinvoke $r12.<org.eclipse.jetty.client.HttpClient: long getIdleTimeout()>();

        $i1 = (int) $l0;

        specialinvoke $r9.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void <init>(java.nio.channels.SocketChannel,org.eclipse.jetty.io.nio.SelectorManager$SelectSet,java.nio.channels.SelectionKey,int)>(r3, r10, r7, $i1);

        r29 = $r9;

        $z1 = virtualinvoke $r28.<org.eclipse.jetty.client.HttpDestination: boolean isSecure()>();

        if $z1 == 0 goto label3;

        $r18 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.util.log.Logger LOG>;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = r3;

        $z4 = virtualinvoke $r28.<org.eclipse.jetty.client.HttpDestination: boolean isProxied()>();

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r17[1] = $r19;

        interfaceinvoke $r18.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("secure to {}, proxied={}", $r17);

        $r20 = new org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint;

        $r21 = specialinvoke r0.<org.eclipse.jetty.client.SelectConnector$Manager: javax.net.ssl.SSLEngine newSslEngine(java.nio.channels.SocketChannel)>(r3);

        specialinvoke $r20.<org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint: void <init>(org.eclipse.jetty.io.AsyncEndPoint,javax.net.ssl.SSLEngine)>($r9, $r21);

        r29 = $r20;

     label3:
        $r13 = virtualinvoke r10.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: org.eclipse.jetty.io.nio.SelectorManager getManager()>();

        $r14 = virtualinvoke r7.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();

        $r15 = virtualinvoke $r13.<org.eclipse.jetty.io.nio.SelectorManager: org.eclipse.jetty.io.nio.AsyncConnection newConnection(java.nio.channels.SocketChannel,org.eclipse.jetty.io.AsyncEndPoint,java.lang.Object)>(r3, r29, $r14);

        interfaceinvoke r29.<org.eclipse.jetty.io.AsyncEndPoint: void setConnection(org.eclipse.jetty.io.Connection)>($r15);

        $r22 = (org.eclipse.jetty.client.AbstractHttpConnection) $r15;

        virtualinvoke $r22.<org.eclipse.jetty.client.AbstractHttpConnection: void setDestination(org.eclipse.jetty.client.HttpDestination)>($r28);

        $z2 = virtualinvoke $r28.<org.eclipse.jetty.client.HttpDestination: boolean isSecure()>();

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke $r28.<org.eclipse.jetty.client.HttpDestination: boolean isProxied()>();

        if $z3 != 0 goto label4;

        $r16 = (org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint) r29;

        virtualinvoke $r16.<org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint: void upgrade()>();

     label4:
        virtualinvoke $r28.<org.eclipse.jetty.client.HttpDestination: void onNewConnection(org.eclipse.jetty.client.AbstractHttpConnection)>($r22);

        return $r9;
    }

    private synchronized javax.net.ssl.SSLEngine newSslEngine(java.nio.channels.SocketChannel) throws java.io.IOException
    {
        org.eclipse.jetty.client.SelectConnector$Manager r0;
        java.net.Socket $r5, $r8;
        org.eclipse.jetty.util.ssl.SslContextFactory $r3;
        org.eclipse.jetty.client.SelectConnector $r1;
        javax.net.ssl.SSLEngine r9;
        org.eclipse.jetty.client.HttpClient $r2;
        java.net.InetAddress $r6;
        java.nio.channels.SocketChannel r4;
        int $i0;
        java.lang.String $r7;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r4 := @parameter0: java.nio.channels.SocketChannel;

        $r1 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.client.SelectConnector: org.eclipse.jetty.client.HttpClient access$100(org.eclipse.jetty.client.SelectConnector)>($r1);

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.util.ssl.SslContextFactory getSslContextFactory()>();

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r6 = virtualinvoke $r5.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $r7 = virtualinvoke $r6.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r8 = virtualinvoke r4.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $i0 = virtualinvoke $r8.<java.net.Socket: int getPort()>();

        r9 = virtualinvoke $r3.<org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.SSLEngine newSslEngine(java.lang.String,int)>($r7, $i0);

        goto label2;

     label1:
        r9 = virtualinvoke $r3.<org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.SSLEngine newSslEngine()>();

     label2:
        virtualinvoke r9.<javax.net.ssl.SSLEngine: void setUseClientMode(boolean)>(1);

        virtualinvoke r9.<javax.net.ssl.SSLEngine: void beginHandshake()>();

        return r9;
    }

    protected void connectionFailed(java.nio.channels.SocketChannel, java.lang.Throwable, java.lang.Object)
    {
        org.eclipse.jetty.client.SelectConnector$Manager r0;
        java.lang.Throwable r7;
        org.eclipse.jetty.client.SelectConnector $r1;
        java.nio.channels.SocketChannel r3;
        org.eclipse.jetty.util.thread.Timeout$Task r5;
        java.util.Map $r2;
        java.lang.Object $r4, r6;
        boolean $z0;
        org.eclipse.jetty.client.HttpDestination $r8;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$Manager;

        r3 := @parameter0: java.nio.channels.SocketChannel;

        r7 := @parameter1: java.lang.Throwable;

        r6 := @parameter2: java.lang.Object;

        $r1 = r0.<org.eclipse.jetty.client.SelectConnector$Manager: org.eclipse.jetty.client.SelectConnector this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.client.SelectConnector: java.util.Map access$200(org.eclipse.jetty.client.SelectConnector)>($r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        r5 = (org.eclipse.jetty.util.thread.Timeout$Task) $r4;

        if r5 == null goto label1;

        virtualinvoke r5.<org.eclipse.jetty.util.thread.Timeout$Task: void cancel()>();

     label1:
        $z0 = r6 instanceof org.eclipse.jetty.client.HttpDestination;

        if $z0 == 0 goto label2;

        $r8 = (org.eclipse.jetty.client.HttpDestination) r6;

        virtualinvoke $r8.<org.eclipse.jetty.client.HttpDestination: void onConnectionFailed(java.lang.Throwable)>(r7);

        goto label3;

     label2:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectorManager: void connectionFailed(java.nio.channels.SocketChannel,java.lang.Throwable,java.lang.Object)>(r3, r7, r6);

     label3:
        return;
    }
}
