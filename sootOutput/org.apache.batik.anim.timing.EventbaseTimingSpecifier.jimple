public class org.apache.batik.anim.timing.EventbaseTimingSpecifier extends org.apache.batik.anim.timing.EventLikeTimingSpecifier implements org.w3c.dom.events.EventListener
{
    protected java.lang.String eventbaseID;
    protected org.apache.batik.anim.timing.TimedElement eventbase;
    protected org.w3c.dom.events.EventTarget eventTarget;
    protected java.lang.String eventNamespaceURI;
    protected java.lang.String eventType;
    protected java.lang.String eventName;

    public void <init>(org.apache.batik.anim.timing.TimedElement, boolean, float, java.lang.String, java.lang.String)
    {
        org.apache.batik.anim.timing.TimedDocumentRoot $r4;
        org.apache.batik.anim.timing.EventbaseTimingSpecifier r0;
        org.apache.batik.anim.timing.TimedElement r1;
        org.w3c.dom.events.EventTarget $r7, $r8;
        float f0;
        java.lang.String r2, r3, $r5, $r6;
        boolean z0;

        r0 := @this: org.apache.batik.anim.timing.EventbaseTimingSpecifier;

        r1 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.batik.anim.timing.EventLikeTimingSpecifier: void <init>(org.apache.batik.anim.timing.TimedElement,boolean,float)>(r1, z0, f0);

        r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventbaseID> = r2;

        r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventName> = r3;

        $r4 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot getRoot()>();

        $r5 = virtualinvoke $r4.<org.apache.batik.anim.timing.TimedDocumentRoot: java.lang.String getEventNamespaceURI(java.lang.String)>(r3);

        r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventNamespaceURI> = $r5;

        $r6 = virtualinvoke $r4.<org.apache.batik.anim.timing.TimedDocumentRoot: java.lang.String getEventType(java.lang.String)>(r3);

        r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventType> = $r6;

        if r2 != null goto label1;

        $r8 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.w3c.dom.events.EventTarget getAnimationEventTarget()>();

        r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: org.w3c.dom.events.EventTarget eventTarget> = $r8;

        goto label2;

     label1:
        $r7 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.w3c.dom.events.EventTarget getEventTargetById(java.lang.String)>(r2);

        r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: org.w3c.dom.events.EventTarget eventTarget> = $r7;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        byte $b0;
        java.lang.StringBuffer $r0, $r3, $r5, $r6, $r7, $r9, $r10;
        java.lang.String $r2, $r4, $r8, $r11, $r12, $r13;
        org.apache.batik.anim.timing.EventbaseTimingSpecifier r1;
        float $f0;

        r1 := @this: org.apache.batik.anim.timing.EventbaseTimingSpecifier;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventbaseID>;

        if $r2 != null goto label1;

        $r12 = "";

        goto label2;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r1.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventbaseID>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r12 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r8 = r1.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $f0 = r1.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label3;

        $r13 = specialinvoke r1.<org.apache.batik.anim.timing.OffsetTimingSpecifier: java.lang.String toString()>();

        goto label4;

     label3:
        $r13 = "";

     label4:
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public void initialize()
    {
        org.apache.batik.anim.timing.EventbaseTimingSpecifier r0;
        org.w3c.dom.events.EventTarget $r1;
        java.lang.String $r2, $r3;
        org.apache.batik.dom.events.NodeEventTarget $r4;

        r0 := @this: org.apache.batik.anim.timing.EventbaseTimingSpecifier;

        $r1 = r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: org.w3c.dom.events.EventTarget eventTarget>;

        $r4 = (org.apache.batik.dom.events.NodeEventTarget) $r1;

        $r3 = r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventNamespaceURI>;

        $r2 = r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventType>;

        interfaceinvoke $r4.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>($r3, $r2, r0, 0, null);

        return;
    }

    public void deinitialize()
    {
        org.apache.batik.anim.timing.EventbaseTimingSpecifier r0;
        org.w3c.dom.events.EventTarget $r1;
        java.lang.String $r2, $r3;
        org.apache.batik.dom.events.NodeEventTarget $r4;

        r0 := @this: org.apache.batik.anim.timing.EventbaseTimingSpecifier;

        $r1 = r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: org.w3c.dom.events.EventTarget eventTarget>;

        $r4 = (org.apache.batik.dom.events.NodeEventTarget) $r1;

        $r3 = r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventNamespaceURI>;

        $r2 = r0.<org.apache.batik.anim.timing.EventbaseTimingSpecifier: java.lang.String eventType>;

        interfaceinvoke $r4.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r3, $r2, r0, 0);

        return;
    }

    public void handleEvent(org.w3c.dom.events.Event)
    {
        org.w3c.dom.events.Event r1;
        org.apache.batik.anim.timing.EventbaseTimingSpecifier r0;
        org.apache.batik.anim.timing.TimedElement $r2;

        r0 := @this: org.apache.batik.anim.timing.EventbaseTimingSpecifier;

        r1 := @parameter0: org.w3c.dom.events.Event;

        $r2 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        virtualinvoke $r2.<org.apache.batik.anim.timing.TimedElement: void eventOccurred(org.apache.batik.anim.timing.TimingSpecifier,org.w3c.dom.events.Event)>(r0, r1);

        return;
    }

    public void resolve(org.w3c.dom.events.Event)
    {
        org.apache.batik.anim.timing.InstanceTime $r4;
        long $l0;
        org.apache.batik.anim.timing.TimedDocumentRoot $r2;
        org.apache.batik.anim.timing.EventbaseTimingSpecifier r0;
        org.apache.batik.anim.timing.TimedElement $r1, $r5;
        org.w3c.dom.events.Event r3;
        float $f0, $f1, $f2;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.timing.EventbaseTimingSpecifier;

        r3 := @parameter0: org.w3c.dom.events.Event;

        $r1 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $r2 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot getRoot()>();

        $l0 = interfaceinvoke r3.<org.w3c.dom.events.Event: long getTimeStamp()>();

        $f0 = virtualinvoke $r2.<org.apache.batik.anim.timing.TimedDocumentRoot: float convertEpochTime(long)>($l0);

        $r4 = new org.apache.batik.anim.timing.InstanceTime;

        $f1 = r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $f2 = $f0 + $f1;

        specialinvoke $r4.<org.apache.batik.anim.timing.InstanceTime: void <init>(org.apache.batik.anim.timing.TimingSpecifier,float,boolean)>(r0, $f2, 1);

        $r5 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z0 = r0.<org.apache.batik.anim.timing.TimingSpecifier: boolean isBegin>;

        virtualinvoke $r5.<org.apache.batik.anim.timing.TimedElement: float addInstanceTime(org.apache.batik.anim.timing.InstanceTime,boolean)>($r4, $z0);

        return;
    }
}
