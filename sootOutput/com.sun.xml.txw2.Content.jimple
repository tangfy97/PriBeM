abstract class com.sun.xml.txw2.Content extends java.lang.Object
{
    private com.sun.xml.txw2.Content next;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        com.sun.xml.txw2.Content r0;

        r0 := @this: com.sun.xml.txw2.Content;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    final com.sun.xml.txw2.Content getNext()
    {
        com.sun.xml.txw2.Content r0, $r1;

        r0 := @this: com.sun.xml.txw2.Content;

        $r1 = r0.<com.sun.xml.txw2.Content: com.sun.xml.txw2.Content next>;

        return $r1;
    }

    final void setNext(com.sun.xml.txw2.Document, com.sun.xml.txw2.Content)
    {
        com.sun.xml.txw2.Content r0, r1, $r3, $r9;
        com.sun.xml.txw2.Document r2;
        java.lang.AssertionError $r4, $r12;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r11;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.txw2.Content;

        r2 := @parameter0: com.sun.xml.txw2.Document;

        r1 := @parameter1: com.sun.xml.txw2.Content;

        $z0 = <com.sun.xml.txw2.Content: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $z1 = <com.sun.xml.txw2.Content: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r3 = r0.<com.sun.xml.txw2.Content: com.sun.xml.txw2.Content next>;

        if $r3 == null goto label2;

        $r4 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("next of ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already set to ");

        $r9 = r0.<com.sun.xml.txw2.Content: com.sun.xml.txw2.Content next>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);

        throw $r4;

     label2:
        r0.<com.sun.xml.txw2.Content: com.sun.xml.txw2.Content next> = r1;

        virtualinvoke r2.<com.sun.xml.txw2.Document: void run()>();

        return;
    }

    boolean isReadyToCommit()
    {
        com.sun.xml.txw2.Content r0;

        r0 := @this: com.sun.xml.txw2.Content;

        return 1;
    }

    abstract boolean concludesPendingStartTag();

    abstract void accept(com.sun.xml.txw2.ContentVisitor);

    public void written()
    {
        com.sun.xml.txw2.Content r0;

        r0 := @this: com.sun.xml.txw2.Content;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/txw2/Content;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.txw2.Content: boolean $assertionsDisabled> = $z1;

        return;
    }
}
