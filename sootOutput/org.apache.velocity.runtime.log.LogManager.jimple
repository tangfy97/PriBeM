public class org.apache.velocity.runtime.log.LogManager extends java.lang.Object
{
    static java.lang.Class class$org$apache$velocity$runtime$log$LogChute;

    public void <init>()
    {
        org.apache.velocity.runtime.log.LogManager r0;

        r0 := @this: org.apache.velocity.runtime.log.LogManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.apache.velocity.runtime.log.LogChute createLogChute(org.apache.velocity.runtime.RuntimeServices) throws java.lang.Exception
    {
        org.apache.velocity.runtime.log.SystemLogChute $r5;
        org.apache.velocity.exception.VelocityException $r22, $r37, $r48, $r81, $r87;
        java.lang.Exception $r42, $r76, $r82;
        java.util.ArrayList $r3;
        java.lang.StringBuffer $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r19, $r20, $r26, $r27, $r28, $r31, $r34, $r35, $r43, $r44, $r45, $r46, $r50, $r51, $r52, $r54, $r55, $r56, $r57, $r59, $r60, $r63, $r64, $r65, $r66, $r68, $r69, $r70, $r71, $r73, $r74, $r77, $r78, $r79, $r83, $r84, $r85;
        java.lang.String r7, $r11, $r18, $r21, $r29, $r33, $r36, $r47, $r53, $r58, $r61, $r67, $r72, $r75, $r80, $r86;
        org.apache.velocity.runtime.log.LogChute $r25, $r30, $r40, $r41;
        java.lang.UnsupportedOperationException $r49;
        org.apache.velocity.runtime.log.Log $r1;
        org.apache.velocity.runtime.log.LogChuteSystem $r23, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.velocity.runtime.log.LogSystem $r24, $r39;
        java.util.List r88;
        org.apache.velocity.runtime.RuntimeServices r0;
        int $i0;
        java.lang.NoClassDefFoundError $r62;
        java.util.Iterator $r89;
        java.lang.Object $r2, $r4, $r6, $r12;
        java.lang.Class $r17, $r32, $r90;

        r0 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        $r1 = interfaceinvoke r0.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        $r2 = interfaceinvoke r0.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object getProperty(java.lang.String)>("runtime.log.logsystem");

        if $r2 == null goto label09;

        $z5 = $r2 instanceof org.apache.velocity.runtime.log.LogChute;

        if $z5 == 0 goto label04;

     label01:
        $r40 = (org.apache.velocity.runtime.log.LogChute) $r2;

        interfaceinvoke $r40.<org.apache.velocity.runtime.log.LogChute: void init(org.apache.velocity.runtime.RuntimeServices)>(r0);

        $r41 = (org.apache.velocity.runtime.log.LogChute) $r2;

     label02:
        return $r41;

     label03:
        $r82 := @caughtexception;

        $r83 = new java.lang.StringBuffer;

        specialinvoke $r83.<java.lang.StringBuffer: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not init runtime.log.logsystem ");

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r86, $r82);

        $r87 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r87.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r86, $r82);

        throw $r87;

     label04:
        $z6 = $r2 instanceof org.apache.velocity.runtime.log.LogSystem;

        if $z6 == 0 goto label08;

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>("LogSystem has been deprecated. Please use a LogChute implementation.");

     label05:
        $r38 = new org.apache.velocity.runtime.log.LogChuteSystem;

        $r39 = (org.apache.velocity.runtime.log.LogSystem) $r2;

        specialinvoke $r38.<org.apache.velocity.runtime.log.LogChuteSystem: void <init>(org.apache.velocity.runtime.log.LogSystem)>($r39);

        interfaceinvoke $r38.<org.apache.velocity.runtime.log.LogChute: void init(org.apache.velocity.runtime.RuntimeServices)>(r0);

     label06:
        return $r38;

     label07:
        $r76 := @caughtexception;

        $r77 = new java.lang.StringBuffer;

        specialinvoke $r77.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not init runtime.log.logsystem ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r80, $r76);

        $r81 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r81.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r80, $r76);

        throw $r81;

     label08:
        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" object set as runtime.log.logsystem is not a valid log implementation.");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r36);

        $r37 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r37.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r36);

        throw $r37;

     label09:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r88 = $r3;

        $r4 = interfaceinvoke r0.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object getProperty(java.lang.String)>("runtime.log.logsystem.class");

        $z0 = $r4 instanceof java.util.List;

        if $z0 == 0 goto label10;

        r88 = (java.util.List) $r4;

        goto label11;

     label10:
        $z1 = $r4 instanceof java.lang.String;

        if $z1 == 0 goto label11;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label11:
        $r89 = interfaceinvoke r88.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z9 = interfaceinvoke $r89.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label29;

        $r6 = interfaceinvoke $r89.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        if r7 == null goto label28;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i0 <= 0 goto label28;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Trying to use logger class ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r11);

     label13:
        $r12 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Object getNewInstance(java.lang.String)>(r7);

        $z2 = $r12 instanceof org.apache.velocity.runtime.log.LogChute;

        if $z2 == 0 goto label15;

        $r25 = (org.apache.velocity.runtime.log.LogChute) $r12;

        interfaceinvoke $r25.<org.apache.velocity.runtime.log.LogChute: void init(org.apache.velocity.runtime.RuntimeServices)>(r0);

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Using logger class ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r29);

        $r30 = (org.apache.velocity.runtime.log.LogChute) $r12;

     label14:
        return $r30;

     label15:
        $z3 = $r12 instanceof org.apache.velocity.runtime.log.LogSystem;

        if $z3 == 0 goto label17;

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>("LogSystem has been deprecated. Please use a LogChute implementation.");

        $r23 = new org.apache.velocity.runtime.log.LogChuteSystem;

        $r24 = (org.apache.velocity.runtime.log.LogSystem) $r12;

        specialinvoke $r23.<org.apache.velocity.runtime.log.LogChuteSystem: void <init>(org.apache.velocity.runtime.log.LogSystem)>($r24);

        interfaceinvoke $r23.<org.apache.velocity.runtime.log.LogChute: void init(org.apache.velocity.runtime.RuntimeServices)>(r0);

     label16:
        return $r23;

     label17:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified logger class ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not implement the ");

        $r17 = <org.apache.velocity.runtime.log.LogManager: java.lang.Class class$org$apache$velocity$runtime$log$LogChute>;

        if $r17 != null goto label18;

        $r90 = staticinvoke <org.apache.velocity.runtime.log.LogManager: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.log.LogChute");

        <org.apache.velocity.runtime.log.LogManager: java.lang.Class class$org$apache$velocity$runtime$log$LogChute> = $r90;

        goto label19;

     label18:
        $r90 = <org.apache.velocity.runtime.log.LogManager: java.lang.Class class$org$apache$velocity$runtime$log$LogChute>;

     label19:
        $r18 = virtualinvoke $r90.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" interface.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r21);

        $z4 = staticinvoke <org.apache.velocity.runtime.log.LogManager: boolean isProbablyProvidedLogChute(java.lang.String)>(r7);

        if $z4 == 0 goto label20;

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("This appears to be a ClassLoader issue.  Check for multiple Velocity jars in your classpath.");

     label20:
        $r22 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r22.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r21);

        throw $r22;

     label21:
        $r62 := @caughtexception;

        $z8 = staticinvoke <org.apache.velocity.runtime.log.LogManager: boolean isProbablyProvidedLogChute(java.lang.String)>(r7);

        if $z8 == 0 goto label22;

        $r68 = new java.lang.StringBuffer;

        specialinvoke $r68.<java.lang.StringBuffer: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Target log system for ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not available (");

        $r72 = virtualinvoke $r62.<java.lang.NoClassDefFoundError: java.lang.String toString()>();

        $r73 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").  Falling back to next log system...");

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r75);

        goto label23;

     label22:
        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Couldn\'t find class ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" or necessary supporting classes in classpath.");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object,java.lang.Throwable)>($r67, $r62);

     label23:
        goto label28;

     label24:
        $r49 := @caughtexception;

        $z7 = staticinvoke <org.apache.velocity.runtime.log.LogManager: boolean isProbablyProvidedLogChute(java.lang.String)>(r7);

        if $z7 == 0 goto label25;

        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Target log system for ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not supported (");

        $r58 = virtualinvoke $r49.<java.lang.UnsupportedOperationException: java.lang.String toString()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").  Falling back to next log system...");

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r61);

        goto label26;

     label25:
        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Couldn\'t find necessary resources for ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object,java.lang.Throwable)>($r53, $r49);

     label26:
        goto label28;

     label27:
        $r42 := @caughtexception;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to initialize an instance of ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with the current runtime configuration.");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r47, $r42);

        $r48 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r48.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r47, $r42);

        throw $r48;

     label28:
        goto label12;

     label29:
        $r5 = new org.apache.velocity.runtime.log.SystemLogChute;

        specialinvoke $r5.<org.apache.velocity.runtime.log.SystemLogChute: void <init>()>();

        interfaceinvoke $r5.<org.apache.velocity.runtime.log.LogChute: void init(org.apache.velocity.runtime.RuntimeServices)>(r0);

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>("Using SystemLogChute.");

        return $r5;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.NoClassDefFoundError from label13 to label14 with label21;
        catch java.lang.NoClassDefFoundError from label15 to label16 with label21;
        catch java.lang.NoClassDefFoundError from label17 to label21 with label21;
        catch java.lang.UnsupportedOperationException from label13 to label14 with label24;
        catch java.lang.UnsupportedOperationException from label15 to label16 with label24;
        catch java.lang.UnsupportedOperationException from label17 to label21 with label24;
        catch java.lang.Exception from label13 to label14 with label27;
        catch java.lang.Exception from label15 to label16 with label27;
        catch java.lang.Exception from label17 to label21 with label27;
    }

    private static boolean isProbablyProvidedLogChute(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.velocity.runtime.log");

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("LogChute");

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static void updateLog(org.apache.velocity.runtime.log.Log, org.apache.velocity.runtime.RuntimeServices) throws java.lang.Exception
    {
        org.apache.velocity.runtime.RuntimeServices r0;
        org.apache.velocity.runtime.log.Log r2;
        org.apache.velocity.runtime.log.HoldingLogChute r4;
        org.apache.velocity.runtime.log.LogChute $r1, $r3;
        boolean $z0;

        r2 := @parameter0: org.apache.velocity.runtime.log.Log;

        r0 := @parameter1: org.apache.velocity.runtime.RuntimeServices;

        $r1 = staticinvoke <org.apache.velocity.runtime.log.LogManager: org.apache.velocity.runtime.log.LogChute createLogChute(org.apache.velocity.runtime.RuntimeServices)>(r0);

        $r3 = virtualinvoke r2.<org.apache.velocity.runtime.log.Log: org.apache.velocity.runtime.log.LogChute getLogChute()>();

        virtualinvoke r2.<org.apache.velocity.runtime.log.Log: void setLogChute(org.apache.velocity.runtime.log.LogChute)>($r1);

        $z0 = $r3 instanceof org.apache.velocity.runtime.log.HoldingLogChute;

        if $z0 == 0 goto label1;

        r4 = (org.apache.velocity.runtime.log.HoldingLogChute) $r3;

        virtualinvoke r4.<org.apache.velocity.runtime.log.HoldingLogChute: void transferTo(org.apache.velocity.runtime.log.LogChute)>($r1);

     label1:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
