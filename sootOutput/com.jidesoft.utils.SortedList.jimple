public class com.jidesoft.utils.SortedList extends java.lang.Object implements java.util.List
{
    private java.util.Comparator comparator;
    private java.util.List delegate;

    public void <init>(java.util.List, java.util.Comparator)
    {
        java.util.List r1;
        java.util.Comparator r2;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.utils.SortedList: java.util.List delegate> = r1;

        r0.<com.jidesoft.utils.SortedList: java.util.Comparator comparator> = r2;

        return;
    }

    public void add(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r1;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.jidesoft.utils.SortedList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.util.List $r1, $r3, $r4, $r7;
        int $i0, $i1, i2;
        java.lang.Object r2, $r6;
        java.util.Comparator $r5;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $r5 = r0.<com.jidesoft.utils.SortedList: java.util.Comparator comparator>;

        $r4 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        $i1 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, r2);

        if $i1 <= 0 goto label2;

        $r7 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        interfaceinvoke $r7.<java.util.List: void add(int,java.lang.Object)>(i2, r2);

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return 1;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.Object $r2;
        com.jidesoft.utils.SortedList r3;
        boolean $z0;

        r3 := @this: com.jidesoft.utils.SortedList;

        r0 := @parameter0: java.util.Collection;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r3.<com.jidesoft.utils.SortedList: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return 1;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.Collection r1;
        int i0;
        com.jidesoft.utils.SortedList r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.SortedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        $z0 = virtualinvoke r0.<com.jidesoft.utils.SortedList: boolean addAll(java.util.Collection)>(r1);

        return $z0;
    }

    public void clear()
    {
        java.util.List $r1;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.List $r2;
        java.lang.Object r1;
        com.jidesoft.utils.SortedList r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.List $r2;
        java.util.Collection r1;
        com.jidesoft.utils.SortedList r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r2;
        java.lang.Object r1;
        com.jidesoft.utils.SortedList r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(int)
    {
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public int hashCode()
    {
        int $i0;
        java.util.List $r1;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.List $r2;
        int $i0;
        java.lang.Object r1;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public boolean isEmpty()
    {
        java.util.List $r1;
        com.jidesoft.utils.SortedList r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.SortedList;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.List $r2;
        int $i0;
        java.lang.Object r1;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $i0 = interfaceinvoke $r2.<java.util.List: int lastIndexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        java.util.List $r1;
        java.util.ListIterator $r2;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

        return $r2;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.List $r1;
        java.util.ListIterator $r2;
        int i0;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>(i0);

        return $r2;
    }

    public java.lang.Object remove(int)
    {
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);

        return $r2;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.List $r2;
        java.lang.Object r1;
        com.jidesoft.utils.SortedList r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.List $r2;
        java.util.Collection r1;
        com.jidesoft.utils.SortedList r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean removeAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.List $r2;
        java.util.Collection r1;
        com.jidesoft.utils.SortedList r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean retainAll(java.util.Collection)>(r1);

        return $z0;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.List $r2;
        int i0;
        java.lang.Object r1, $r3;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return $r3;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r1, $r2;
        int i0, i1;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        return $r2;
    }

    public java.lang.Object[] toArray()
    {
        java.util.List $r1;
        java.lang.Object[] $r2;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        $r1 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] r1, $r3;
        com.jidesoft.utils.SortedList r0;

        r0 := @this: com.jidesoft.utils.SortedList;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<com.jidesoft.utils.SortedList: java.util.List delegate>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r3;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r6;
        java.util.Iterator $r3;
        java.lang.String[] r7;
        com.jidesoft.utils.SortedList$1 $r2;
        java.util.ArrayList $r1;
        java.lang.Object $r4;
        java.lang.String r5;
        com.jidesoft.utils.SortedList $r0;
        boolean $z0;

        r7 := @parameter0: java.lang.String[];

        $r0 = new com.jidesoft.utils.SortedList;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new com.jidesoft.utils.SortedList$1;

        specialinvoke $r2.<com.jidesoft.utils.SortedList$1: void <init>()>();

        specialinvoke $r0.<com.jidesoft.utils.SortedList: void <init>(java.util.List,java.util.Comparator)>($r1, $r2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("test");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("aaa");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("ddd");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("ccc");

        $r3 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r5);

        goto label1;

     label2:
        return;
    }
}
