public class org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption extends org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary
{
    public static final java.lang.String FILTER_NAME;
    public static final int DEFAULT_REVISION;
    public static final int REVISION2;
    public static final int REVISION3;
    public static final int REVISION4;
    public static final int DEFAULT_PERMISSIONS;
    private static final int PRINT_BIT;
    private static final int MODIFICATION_BIT;
    private static final int EXTRACT_BIT;
    private static final int MODIFY_ANNOTATIONS_BIT;
    private static final int FILL_IN_FORM_BIT;
    private static final int EXTRACT_FOR_ACCESSIBILITY_BIT;
    private static final int ASSEMBLE_DOCUMENT_BIT;
    private static final int DEGRADED_PRINT_BIT;

    public void <init>()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2, $r3;
        int $i1;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary: void <init>()>();

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>;

        $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("Standard");

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, $r3);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: void setVersion(int)>(1);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: void setRevision(int)>(2);

        $i1 = (int) -4;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: void setPermissions(int)>($i1);

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r1);

        return;
    }

    public int getRevision()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.cos.COSNumber r4;
        int i0;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        i0 = 0;

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("R");

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        r4 = (org.apache.pdfbox.cos.COSNumber) $r3;

        if r4 == null goto label1;

        i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>();

     label1:
        return i0;
    }

    public void setRevision(int)
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        int i0;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("R");

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r2, i0);

        return;
    }

    public byte[] getOwnerKey()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        byte[] r5;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        org.apache.pdfbox.cos.COSString r4;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        r5 = null;

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("O");

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        r4 = (org.apache.pdfbox.cos.COSString) $r3;

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

     label1:
        return r5;
    }

    public void setOwnerKey(byte[]) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDictionary $r3;
        org.apache.pdfbox.cos.COSName $r4;
        byte[] r1;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r2;
        org.apache.pdfbox.cos.COSString $r0;

        r2 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        r1 := @parameter0: byte[];

        $r0 = new org.apache.pdfbox.cos.COSString;

        specialinvoke $r0.<org.apache.pdfbox.cos.COSString: void <init>()>();

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSString: void append(byte[])>(r1);

        $r3 = r2.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r4 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("O");

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r0);

        return;
    }

    public byte[] getUserKey()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        byte[] r5;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        org.apache.pdfbox.cos.COSString r4;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        r5 = null;

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("U");

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        r4 = (org.apache.pdfbox.cos.COSString) $r3;

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

     label1:
        return r5;
    }

    public void setUserKey(byte[]) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDictionary $r3;
        org.apache.pdfbox.cos.COSName $r4;
        byte[] r1;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r2;
        org.apache.pdfbox.cos.COSString $r0;

        r2 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        r1 := @parameter0: byte[];

        $r0 = new org.apache.pdfbox.cos.COSString;

        specialinvoke $r0.<org.apache.pdfbox.cos.COSString: void <init>()>();

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSString: void append(byte[])>(r1);

        $r3 = r2.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r4 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("U");

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r0);

        return;
    }

    public int getPermissions()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSInteger r4;
        org.apache.pdfbox.cos.COSBase $r3;
        int i0;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        i0 = 0;

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("P");

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        r4 = (org.apache.pdfbox.cos.COSInteger) $r3;

        if r4 == null goto label1;

        i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

     label1:
        return i0;
    }

    public void setPermissions(int)
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        int i0;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary encryptionDictionary>;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("P");

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r2, i0);

        return;
    }

    private boolean isPermissionBitOn(int)
    {
        int $i0, i1, $i2, $i3, $i4;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getPermissions()>();

        $i2 = i1 - 1;

        $i3 = 1 << $i2;

        $i4 = $i0 & $i3;

        if $i4 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean setPermissionBit(int, boolean)
    {
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i13;
        boolean z0, $z1;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getPermissions()>();

        if z0 == 0 goto label1;

        $i9 = i1 - 1;

        $i10 = 1 << $i9;

        i11 = $i0 | $i10;

        goto label2;

     label1:
        $i2 = i1 - 1;

        $i3 = 1 << $i2;

        $i13 = (int) -1;

        $i4 = $i13 ^ $i3;

        i11 = $i0 & $i4;

     label2:
        virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: void setPermissions(int)>(i11);

        $i5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getPermissions()>();

        $i6 = i1 - 1;

        $i7 = 1 << $i6;

        $i8 = $i5 & $i7;

        if $i8 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public boolean canPrint()
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean isPermissionBitOn(int)>(3);

        return $z0;
    }

    public void setCanPrint(boolean)
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean setPermissionBit(int,boolean)>(3, z0);

        return;
    }

    public boolean canModify()
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean isPermissionBitOn(int)>(4);

        return $z0;
    }

    public void setCanModify(boolean)
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean setPermissionBit(int,boolean)>(4, z0);

        return;
    }

    public boolean canExtractContent()
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean isPermissionBitOn(int)>(5);

        return $z0;
    }

    public void setCanExtractContent(boolean)
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean setPermissionBit(int,boolean)>(5, z0);

        return;
    }

    public boolean canModifyAnnotations()
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean isPermissionBitOn(int)>(6);

        return $z0;
    }

    public void setCanModifyAnnotations(boolean)
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean setPermissionBit(int,boolean)>(6, z0);

        return;
    }

    public boolean canFillInForm()
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean isPermissionBitOn(int)>(9);

        return $z0;
    }

    public void setCanFillInForm(boolean)
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean setPermissionBit(int,boolean)>(9, z0);

        return;
    }

    public boolean canExtractForAccessibility()
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean isPermissionBitOn(int)>(10);

        return $z0;
    }

    public void setCanExtractForAccessibility(boolean)
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean setPermissionBit(int,boolean)>(10, z0);

        return;
    }

    public boolean canAssembleDocument()
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean isPermissionBitOn(int)>(11);

        return $z0;
    }

    public void setCanAssembleDocument(boolean)
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean setPermissionBit(int,boolean)>(11, z0);

        return;
    }

    public boolean canPrintDegraded()
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean isPermissionBitOn(int)>(12);

        return $z0;
    }

    public void setCanPrintDegraded(boolean)
    {
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: boolean setPermissionBit(int,boolean)>(12, z0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int DEGRADED_PRINT_BIT> = 12;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int ASSEMBLE_DOCUMENT_BIT> = 11;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int EXTRACT_FOR_ACCESSIBILITY_BIT> = 10;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int FILL_IN_FORM_BIT> = 9;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int MODIFY_ANNOTATIONS_BIT> = 6;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int EXTRACT_BIT> = 5;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int MODIFICATION_BIT> = 4;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int PRINT_BIT> = 3;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int DEFAULT_PERMISSIONS> = -4;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int REVISION4> = 4;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int REVISION3> = 3;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int REVISION2> = 2;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int DEFAULT_REVISION> = 3;

        <org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: java.lang.String FILTER_NAME> = "Standard";

        return;
    }
}
