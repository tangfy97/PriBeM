public class org.eclipse.jdt.internal.compiler.parser.RecoveredMethod extends org.eclipse.jdt.internal.compiler.parser.RecoveredElement implements org.eclipse.jdt.internal.compiler.parser.TerminalTokens
{
    public org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration;
    public org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations;
    public int annotationCount;
    public int modifiers;
    public int modifiersStart;
    public org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes;
    public int localTypeCount;
    public org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody;
    public boolean discardBody;
    int pendingModifiers;
    int pendingModifersSourceStart;
    org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations;
    int pendingAnnotationCount;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration, org.eclipse.jdt.internal.compiler.parser.RecoveredElement, int, org.eclipse.jdt.internal.compiler.parser.Parser)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        int i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r3;
        org.eclipse.jdt.internal.compiler.parser.Parser r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter2: int;

        r2 := @parameter3: org.eclipse.jdt.internal.compiler.parser.Parser;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void <init>(org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int,org.eclipse.jdt.internal.compiler.parser.Parser)>(r1, i0, r2);

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean discardBody> = 1;

        $i4 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifersSourceStart> = $i4;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration> = r3;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean bodyStartsAtHeaderEnd()>();

        if $z0 == 0 goto label1;

        $z2 = 0;

        goto label2;

     label1:
        $z2 = 1;

     label2:
        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace> = $z2;

        $z1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace>;

        if $z1 == 0 goto label3;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        $i2 = $i1 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance> = $i2;

     label3:
        return;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r2, $r4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r6, $r7, $r8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1, $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Block;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i0 <= 0 goto label2;

        $i6 = r3.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i5 = $r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i6 <= $i5 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void resetPendingModifiers()>();

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r6 != null goto label1;

        return r0;

     label1:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>(r3, i1);

        return $r8;

     label2:
        $z0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace>;

        if $z0 != 0 goto label3;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace> = 1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance> = $i4;

     label3:
        $r2 = new org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void <init>(org.eclipse.jdt.internal.compiler.ast.Block,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r3, r0, i1);

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody> = $r2;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i2 != 0 goto label4;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        return $r4;

     label4:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, int)
    {
        char[][] $r6;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r2, $r3, $r9, $r10, $r11, $r15;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r12;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r4, $r5;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        char[] $r13, $r14;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r7, $r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        i5 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void resetPendingModifiers()>();

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int modifiers>;

        $i13 = (int) -17;

        $i1 = $i0 & $i13;

        if $i1 != 0 goto label1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r4 == null goto label1;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getTypeName()>();

        $i6 = lengthof $r6;

        if $i6 != 1 goto label3;

        $r13 = $r6[0];

        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        $r14 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] sourceName()>();

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r13, $r14);

        if $z1 == 0 goto label3;

     label1:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r15 != null goto label2;

        return r0;

     label2:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $i3 = $i2 - 1;

        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int previousAvailableLineEnd(int)>($i3);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void updateSourceEndIfNecessary(int)>($i4);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,int)>(r1, i5);

        return $r3;

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i7 = $r7.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i7 <= 0 goto label5;

        $i11 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i10 = $r8.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i11 <= $i10 goto label5;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r9 != null goto label4;

        return r0;

     label4:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,int)>(r1, i5);

        return $r11;

     label5:
        $z0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace>;

        if $z0 != 0 goto label6;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace> = 1;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance> = $i9;

     label6:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r6, $r9;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r2, $r4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r5, $r8, $r11, $r12, $r13, r14;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1, $r7, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        i1 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i0 == 0 goto label2;

        $i7 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceStart>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i6 = $r10.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i7 <= $i6 goto label2;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r11 != null goto label1;

        return r0;

     label1:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,int)>(r3, i1);

        return $r13;

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        if $r2 != null goto label6;

        $r6 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i2 = $r7.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        $r6.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart> = $i2;

        r14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r6, 1);

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        if $i3 <= 0 goto label5;

        i8 = 0;

        goto label4;

     label3:
        $r9 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        r14 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r9, 1);

        i8 = i8 + 1;

     label4:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        $i5 = $i4 - 1;

        if i8 < $i5 goto label3;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance> = 1;

     label5:
        $r8 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,int)>(r3, i1);

        return $r8;

     label6:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,int,boolean)>(r3, i1, 1);

        return $r5;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r6, $r9;
        org.eclipse.jdt.internal.compiler.ast.Statement r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r2, $r4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r5, $r8, $r11, $r12, $r13, r14;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1, $r7, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        i1 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i0 == 0 goto label2;

        $i7 = r3.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceStart>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i6 = $r10.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i7 <= $i6 goto label2;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r11 != null goto label1;

        return r0;

     label1:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int)>(r3, i1);

        return $r13;

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        if $r2 != null goto label6;

        $r6 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i2 = $r7.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        $r6.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart> = $i2;

        r14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r6, 1);

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        if $i3 <= 0 goto label5;

        i8 = 0;

        goto label4;

     label3:
        $r9 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        r14 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r9, 1);

        i8 = i8 + 1;

     label4:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        $i5 = $i4 - 1;

        if i8 < $i5 goto label3;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance> = 1;

     label5:
        $r8 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int)>(r3, i1);

        return $r8;

     label6:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int,boolean)>(r3, i1, 1);

        return $r5;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r3, $r16;
        org.eclipse.jdt.internal.compiler.ast.Block $r7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType $r25;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType[] $r14, $r15, $r17, $r18, $r19, $r26;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        org.eclipse.jdt.internal.compiler.parser.Parser $r9, $r10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r4, $r5, $r24;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r6, $r11, $r12, $r13, $r21, $r22, $r23;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1, $r8, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i6 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i0 == 0 goto label02;

        $i24 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i23 = $r20.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i24 <= $i23 goto label02;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r21 != null goto label01;

        return r0;

     label01:
        $r22 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int)>(r2, i6);

        return $r23;

     label02:
        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i2 = $i1 & 256;

        if $i2 != 0 goto label03;

        $r9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $z0 = $r9.<org.eclipse.jdt.internal.compiler.parser.Parser: boolean methodRecoveryActivated>;

        if $z0 != 0 goto label03;

        $r10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $z1 = $r10.<org.eclipse.jdt.internal.compiler.parser.Parser: boolean statementRecoveryActivated>;

        if $z1 == 0 goto label05;

     label03:
        $r24 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        if $r24 != null goto label04;

        $r7 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i7 = $r8.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        $r7.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart> = $i7;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r7, 1);

     label04:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifiers>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifersSourceStart>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attachPendingModifiers(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[],int,int,int)>($r3, $i5, $i4, $i3);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void resetPendingModifiers()>();

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int,boolean)>(r2, i6, 1);

        return $r6;

     label05:
        $i8 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i9 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i8);

        tableswitch($i9)
        {
            case 2: goto label06;
            case 3: goto label08;
            case 4: goto label06;
            default: goto label08;
        };

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void resetPendingModifiers()>();

        $i10 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        $i11 = $i10 - 1;

        $i12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int previousAvailableLineEnd(int)>($i11);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void updateSourceEndIfNecessary(int)>($i12);

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r11 != null goto label07;

        return r0;

     label07:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int)>(r2, i6);

        return $r13;

     label08:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        if $r14 != null goto label09;

        $r19 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredType)[5];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes> = $r19;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int localTypeCount> = 0;

        goto label10;

     label09:
        $i14 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int localTypeCount>;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        $i13 = lengthof $r15;

        if $i14 != $i13 goto label10;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int localTypeCount>;

        $i21 = 2 * $i20;

        $r17 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredType)[$i21];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes> = $r17;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int localTypeCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, $r17, 0, $i22);

     label10:
        $r25 = new org.eclipse.jdt.internal.compiler.parser.RecoveredType;

        specialinvoke $r25.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: void <init>(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r2, r0, i6);

        $r26 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        $i25 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int localTypeCount>;

        $i26 = $i25 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int localTypeCount> = $i26;

        $r26[$i25] = $r25;

        $i27 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount>;

        if $i27 <= 0 goto label11;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount>;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifiers>;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifersSourceStart>;

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[],int,int,int)>($r16, $i19, $i18, $i17);

     label11:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void resetPendingModifiers()>();

        $z2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace>;

        if $z2 != 0 goto label12;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace> = 1;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        $i16 = $i15 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance> = $i16;

     label12:
        return $r25;
    }

    public boolean bodyStartsAtHeaderEnd()
    {
        int $i0, $i1, $i2;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1, $r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i0 = $r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        $i1 = $i0 + 1;

        if $i2 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.eclipse.jdt.internal.compiler.ast.ASTNode parseTree()
    {
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        return $r1;
    }

    public void resetPendingModifiers()
    {
        int $i1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = null;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount> = 0;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifiers> = 0;

        $i1 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifersSourceStart> = $i1;

        return;
    }

    public int sourceEnd()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        return $i0;
    }

    public java.lang.String toString(int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r4, $r13;
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation $r14;
        java.lang.StringBuffer $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType $r11;
        java.lang.String $r2, $r7, $r9, $r12, $r15;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType[] $r5, $r10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r6, $r8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r1;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r3;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: java.lang.String tabString(int)>(i0);

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Recovered method:\n");

        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i1 = i0 + 1;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: java.lang.StringBuffer print(int,java.lang.StringBuffer)>($i1, $r0);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations>;

        if $r4 == null goto label3;

        i7 = 0;

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r13 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations>;

        $r14 = $r13[i7];

        $i6 = i0 + 1;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation: java.lang.String toString(int)>($i6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        i7 = i7 + 1;

     label2:
        $i5 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount>;

        if i7 < $i5 goto label1;

     label3:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        if $r5 == null goto label6;

        i8 = 0;

        goto label5;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r10 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        $r11 = $r10[i8];

        $i4 = i0 + 1;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: java.lang.String toString(int)>($i4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        i8 = i8 + 1;

     label5:
        $i3 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int localTypeCount>;

        if i8 < $i3 goto label4;

     label6:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        if $r6 == null goto label7;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r8 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        $i2 = i0 + 1;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: java.lang.String toString(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label7:
        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public void updateBodyStart(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        i0 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace> = 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart> = i0;

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration updatedMethodDeclaration()
    {
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r61;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r16, $r60;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r25, $r32, $r62;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r18, $r24, $r27, $r30, $r34, $r36, $r38;
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r45, $r49;
        org.eclipse.jdt.internal.compiler.ast.Block $r17;
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation $r46, $r50;
        org.eclipse.jdt.internal.compiler.ast.Statement $r28, $r31;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r47, $r51;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r42, $r44, $r55, $r56;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, $i33;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r19, $r20, $r21, $r22, $r23, $r26, $r29, $r33, $r35, $r37, $r39, $r40, $r41, $r43, $r48, $r52, $r53, $r54, $r57, $r58, $r59;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int modifiers>;

        if $i0 == 0 goto label01;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i23 = $r57.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int modifiers>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int modifiers>;

        $i24 = $i23 | $i22;

        $r57.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int modifiers> = $i24;

        $i26 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int modifiersStart>;

        $r58 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i25 = $r58.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        if $i26 >= $i25 goto label01;

        $r59 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i27 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int modifiersStart>;

        $r59.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart> = $i27;

     label01:
        $i28 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount>;

        if $i28 <= 0 goto label07;

        $r41 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r42 = $r41.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r42 != null goto label02;

        $i29 = 0;

        goto label03;

     label02:
        $r43 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r44 = $r43.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $i29 = lengthof $r44;

     label03:
        $i17 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount>;

        $i18 = $i29 + $i17;

        $r56 = newarray (org.eclipse.jdt.internal.compiler.ast.Annotation)[$i18];

        if $i29 <= 0 goto label04;

        $r54 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r55 = $r54.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r55, 0, $r56, $i21, $i29);

     label04:
        i30 = 0;

        goto label06;

     label05:
        $r45 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations>;

        $r46 = $r45[i30];

        $r47 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation: org.eclipse.jdt.internal.compiler.ast.Annotation updatedAnnotationReference()>();

        $r56[i30] = $r47;

        i30 = i30 + 1;

     label06:
        $i19 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount>;

        if i30 < $i19 goto label05;

        $r48 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r48.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r56;

        $r49 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations>;

        $r50 = $r49[0];

        $r51 = $r50.<org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation: org.eclipse.jdt.internal.compiler.ast.Annotation 'annotation'>;

        i31 = $r51.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceStart>;

        $r52 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i20 = $r52.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        if i31 >= $i20 goto label07;

        $r53 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r53.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart> = i31;

     label07:
        $r60 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        if $r60 == null goto label10;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block updatedBlock()>();

        if $r17 == null goto label12;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r18 = $r17.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r19.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements> = $r18;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i12 = $r20.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i12 != 0 goto label08;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i15 = $r17.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        $r39.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd> = $i15;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i16 = $r17.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        $r40.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyEnd> = $i16;

     label08:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $z0 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isConstructor()>();

        if $z0 == 0 goto label12;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        r61 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) $r22;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r24 = $r23.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r24 == null goto label09;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r27 = $r26.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r28 = $r27[0];

        $z1 = $r28 instanceof org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        if $z1 == 0 goto label09;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r30 = $r29.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r31 = $r30[0];

        $r32 = (org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall) $r31;

        r61.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall> = $r32;

        $r33 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r34 = $r33.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        i32 = lengthof $r34;

        $r35 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r38 = $r35.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i13 = i32 - 1;

        $r36 = newarray (org.eclipse.jdt.internal.compiler.ast.Statement)[$i13];

        $r37.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements> = $r36;

        $i14 = i32 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r38, 1, $r36, 0, $i14);

     label09:
        $r62 = r61.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r62 != null goto label12;

        $r25 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.SuperReference: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall implicitSuperConstructorCall()>();

        r61.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall> = $r25;

        goto label12;

     label10:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i1 != 0 goto label12;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i4 = $r4.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        $i6 = $i4 + 1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i5 = $r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        if $i6 != $i5 goto label11;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i9 = $r10.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        $r11.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd> = $i9;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i10 = $r12.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        $r13.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart> = $i10;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i11 = $r14.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        $r15.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyEnd> = $i11;

        goto label12;

     label11:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i7 = $r6.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        $r7.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd> = $i7;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i8 = $r8.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        $r9.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyEnd> = $i8;

     label12:
        $i33 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int localTypeCount>;

        if $i33 <= 0 goto label13;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i2 = $r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bits>;

        $i3 = $i2 | 2;

        $r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bits> = $i3;

     label13:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        return $r2;
    }

    public void updateFromParserState()
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r24;
        org.eclipse.jdt.internal.compiler.parser.Parser $r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        int[] $r4, $r6, $r8, $r9, $r26, $r34, $r35, $r40;
        org.eclipse.jdt.internal.compiler.ast.ASTNode $r21, $r23, $r31, $r37, $r39, r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, i57, i58, i59, $i60, $i61, i62, $i63, $i64, i65, $i66, $i67, i68, $i69, i70, i71, i72, $i74;
        org.eclipse.jdt.internal.compiler.ast.MemberValuePair[] $r32, r41;
        char[][] $r25;
        org.eclipse.jdt.internal.compiler.ast.ASTNode[] $r5, $r7, $r20, $r22, $r30, $r33, $r36, $r38;
        char[] $r28, $r29;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z9, $z10, z11, z13, $z14, $z15, $z16, $z17;
        org.eclipse.jdt.internal.compiler.ast.Argument $r15, r43;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r1, $r10;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r27;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r3, $r11, $r12, $r16, $r17, $r18, $r19;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean bodyStartsAtHeaderEnd()>();

        if $z0 == 0 goto label32;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 == null goto label32;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i0 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int listLength>;

        if $i0 <= 0 goto label32;

        $i1 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        if $i1 <= 0 goto label32;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i3 = $r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        $i2 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int rParenPos>;

        if $i3 != $i2 goto label09;

        $r35 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int[] astLengthStack>;

        $i53 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        i57 = $r35[$i53];

        $i54 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        i58 = $i54 - i57;

        if i58 < 0 goto label01;

        $z17 = 1;

        $z16 = 1;

        goto label02;

     label01:
        $z17 = 0;

        $z16 = 0;

     label02:
        z9 = $z16;

        if $z17 == 0 goto label07;

        $r36 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.ASTNode[] astStack>;

        $r37 = $r36[i58];

        $z6 = $r37 instanceof org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        if $z6 != 0 goto label03;

        z9 = 0;

     label03:
        i59 = 1;

        $i56 = i57 + 1;

        goto label06;

     label04:
        $r38 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.ASTNode[] astStack>;

        $i55 = i58 + i59;

        $r39 = $r38[$i55];

        $z7 = $r39 instanceof org.eclipse.jdt.internal.compiler.ast.TypeReference;

        if $z7 != 0 goto label05;

        z9 = 0;

     label05:
        i59 = i59 + 1;

     label06:
        if i59 < $i56 goto label04;

     label07:
        if z9 == 0 goto label08;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: void consumeMethodHeaderThrowsClause()>();

        goto label32;

     label08:
        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int listLength> = 0;

        goto label32;

     label09:
        $i4 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int currentToken>;

        if $i4 == 28 goto label10;

        $i52 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int currentToken>;

        if $i52 != 27 goto label11;

     label10:
        $r4 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int[] astLengthStack>;

        $i5 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        $i6 = $r4[$i5];

        $i7 = $i6 - 1;

        $r4[$i5] = $i7;

        $i8 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        $i9 = $i8 - 1;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr> = $i9;

        $i10 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int listLength>;

        $i11 = $i10 - 1;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int listLength> = $i11;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int currentToken> = 0;

     label11:
        $r40 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int[] astLengthStack>;

        $i60 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        $i61 = $r40[$i60];

        i62 = $i61;

        $i63 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        $i64 = $i63 - $i61;

        i65 = $i64 + 1;

        $i66 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int rParenPos>;

        $i67 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int lParenPos>;

        if $i66 >= $i67 goto label12;

        $z10 = 1;

        goto label13;

     label12:
        $z10 = 0;

     label13:
        z11 = $z10;

        r41 = (org.eclipse.jdt.internal.compiler.ast.MemberValuePair[]) null;

        goto label15;

     label14:
        $r33 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.ASTNode[] astStack>;

        $r32 = newarray (org.eclipse.jdt.internal.compiler.ast.MemberValuePair)[i62];

        r41 = $r32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r33, i65, $r32, 0, i62);

        $i45 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        $i46 = $i45 - 1;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr> = $i46;

        $i47 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        $i48 = $i47 - i62;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr> = $i48;

        $r34 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int[] astLengthStack>;

        $i49 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        i62 = $r34[$i49];

        $i50 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        $i51 = $i50 - i62;

        i65 = $i51 + 1;

        z11 = 1;

     label15:
        if i62 <= 0 goto label16;

        $r30 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.ASTNode[] astStack>;

        $i44 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        $r31 = $r30[$i44];

        $z5 = $r31 instanceof org.eclipse.jdt.internal.compiler.ast.MemberValuePair;

        if $z5 != 0 goto label14;

     label16:
        i68 = 0;

        goto label22;

     label17:
        $r5 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.ASTNode[] astStack>;

        $i12 = i65 + i68;

        r42 = $r5[$i12];

        $z1 = r42 instanceof org.eclipse.jdt.internal.compiler.ast.Argument;

        if $z1 == 0 goto label20;

        r43 = (org.eclipse.jdt.internal.compiler.ast.Argument) r42;

        $r24 = r43.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r25 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getTypeName()>();

        $i36 = r43.<org.eclipse.jdt.internal.compiler.ast.Argument: int modifiers>;

        $i74 = (int) -17;

        $i37 = $i36 & $i74;

        if $i37 != 0 goto label18;

        $i41 = lengthof $r25;

        if $i41 != 1 goto label19;

        $r28 = $r25[0];

        $r27 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        $r29 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] sourceName()>();

        $z4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r28, $r29);

        if $z4 == 0 goto label19;

     label18:
        $r26 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int[] astLengthStack>;

        $i38 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        $r26[$i38] = i68;

        $i39 = i65 + i68;

        $i40 = $i39 - 1;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr> = $i40;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int listLength> = i68;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int currentToken> = 0;

        goto label23;

     label19:
        if z11 == 0 goto label21;

        $i42 = r43.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceEnd>;

        $i43 = $i42 + 1;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int rParenPos> = $i43;

        goto label21;

     label20:
        $r6 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int[] astLengthStack>;

        $i13 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        $r6[$i13] = i68;

        $i14 = i65 + i68;

        $i15 = $i14 - 1;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr> = $i15;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int listLength> = i68;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int currentToken> = 0;

        goto label23;

     label21:
        i68 = i68 + 1;

     label22:
        if i68 < i62 goto label17;

     label23:
        $i69 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int listLength>;

        if $i69 <= 0 goto label31;

        $i25 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        if $i25 <= 0 goto label31;

        $r9 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int[] astLengthStack>;

        $i26 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        i70 = $r9[$i26];

        $i27 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        i71 = $i27 - i70;

        if i71 < 0 goto label24;

        $z15 = 1;

        $z14 = 1;

        goto label25;

     label24:
        $z15 = 0;

        $z14 = 0;

     label25:
        z13 = $z14;

        if $z15 == 0 goto label30;

        $r20 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.ASTNode[] astStack>;

        $r21 = $r20[i71];

        $z2 = $r21 instanceof org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        if $z2 != 0 goto label26;

        z13 = 0;

     label26:
        i72 = 1;

        $i35 = i70 + 1;

        goto label29;

     label27:
        $r22 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.ASTNode[] astStack>;

        $i34 = i71 + i72;

        $r23 = $r22[$i34];

        $z3 = $r23 instanceof org.eclipse.jdt.internal.compiler.ast.Argument;

        if $z3 != 0 goto label28;

        z13 = 0;

     label28:
        i72 = i72 + 1;

     label29:
        if i72 < $i35 goto label27;

     label30:
        if z13 == 0 goto label31;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: void consumeMethodHeaderRightParen()>();

        $r10 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.parser.RecoveredElement currentElement>;

        if $r10 != r0 goto label31;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r14 = $r11.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r13 = $r12.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $i28 = lengthof $r13;

        $i29 = $i28 - 1;

        $r15 = $r14[$i29];

        $i30 = $r15.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceEnd>;

        $r16.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd> = $i30;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i31 = $r17.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        $i32 = $i31 + 1;

        $r18.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart> = $i32;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i33 = $r19.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int lastCheckPoint> = $i33;

     label31:
        if r41 == null goto label32;

        $r7 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.ASTNode[] astStack>;

        $i16 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        $i18 = $i16 + 1;

        $i17 = lengthof r41;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r41, 0, $r7, $i18, $i17);

        $i20 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr>;

        $i19 = lengthof r41;

        $i21 = $i20 + $i19;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astPtr> = $i21;

        $r8 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int[] astLengthStack>;

        $i22 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr>;

        $i23 = $i22 + 1;

        $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int astLengthPtr> = $i23;

        $i24 = lengthof r41;

        $r8[$i23] = $i24;

     label32:
        return;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType $r5;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r11, $r12;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isAnnotationMethod()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void updateSourceEndIfNecessary(int,int)>(i0, i1);

        $z3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace>;

        if $z3 != 0 goto label1;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r9 == null goto label1;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int,int)>(i0, i1);

        return $r11;

     label1:
        return r0;

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r2 == null goto label3;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $z1 = $r3 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredType;

        if $z1 == 0 goto label3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r5 = (org.eclipse.jdt.internal.compiler.parser.RecoveredType) $r4;

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration>;

        i2 = $r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i3 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>(i2);

        if $i3 != 2 goto label3;

        $z2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace>;

        if $z2 != 0 goto label3;

        $i5 = i0 - 1;

        $i4 = i0 - 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: void updateSourceEndIfNecessary(int,int)>($i5, $i4);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int,int)>(i0, i1);

        return $r8;

     label3:
        $r12 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int,int)>(i0, i1);

        return $r12;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnOpeningBrace(int, int)
    {
        int $i0, i1, i2, $i3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r2;
        org.eclipse.jdt.internal.compiler.parser.Parser $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance>;

        if $i0 != 0 goto label3;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i3 = $r1.<org.eclipse.jdt.internal.compiler.parser.Parser: int lastIgnoredToken>;

        lookupswitch($i3)
        {
            case -1: goto label1;
            case 105: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: boolean foundOpeningBrace> = 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int bracketBalance> = 1;

     label3:
        $r2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnOpeningBrace(int,int)>(i1, i2);

        return $r2;
    }

    public void updateParseTree()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration updatedMethodDeclaration()>();

        return;
    }

    public void updateSourceEndIfNecessary(int, int)
    {
        int $i0, i1, $i2, i3, $i4, $i5, $i6;
        org.eclipse.jdt.internal.compiler.parser.Parser $r2, $r6, $r8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1, $r3, $r4, $r5, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        i3 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i0 != 0 goto label2;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i2 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: int rBraceSuccessorStart>;

        if $i2 < i1 goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i5 = $r6.<org.eclipse.jdt.internal.compiler.parser.Parser: int rBraceEnd>;

        $r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd> = $i5;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i6 = $r8.<org.eclipse.jdt.internal.compiler.parser.Parser: int rBraceStart>;

        $r7.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyEnd> = $i6;

        goto label2;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd> = i1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i4 = i3 - 1;

        $r4.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyEnd> = $i4;

     label2:
        return;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement addAnnotationName(int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r1, $r2, $r3, $r4, $r5, $r7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation $r6;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        if $r1 != null goto label1;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation)[5];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = $r5;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount> = 0;

        goto label2;

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i0 = lengthof $r2;

        if $i1 != $i0 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount>;

        $i7 = 2 * $i6;

        $r3 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation)[$i7];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = $r3;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i8);

     label2:
        $r6 = new org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation: void <init>(int,int,int,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(i2, i3, i4, r0, i5);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingAnnotationCount> = $i10;

        $r7[$i9] = $r6;

        return $r6;
    }

    public void addModifier(int, int)
    {
        int i0, $i1, $i2, $i3, i4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifiers>;

        $i2 = $i1 | i0;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifiers> = $i2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifersSourceStart>;

        if $i3 >= 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int pendingModifersSourceStart> = i4;

     label1:
        return;
    }

    void attach(org.eclipse.jdt.internal.compiler.ast.TypeParameter[], int)
    {
        int[] $r7, $r8;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r12;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r3;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration $r15;
        org.eclipse.jdt.internal.compiler.parser.Parser $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] r2;
        org.eclipse.jdt.internal.compiler.parser.Scanner r5;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1, $r6, $r9, $r10, $r11, $r13, $r14, $r16, $r17;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter[];

        i10 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int modifiers>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $i1 = lengthof r2;

        $i2 = $i1 - 1;

        $r3 = r2[$i2];

        i3 = $r3.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceEnd>;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        r5 = $r4.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.parser.Scanner scanner>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i5 = $r6.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        $r7 = r5.<org.eclipse.jdt.internal.compiler.parser.Scanner: int[] lineEnds>;

        $i4 = r5.<org.eclipse.jdt.internal.compiler.parser.Scanner: int linePtr>;

        $i6 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>($i5, $r7, 0, $i4);

        $r8 = r5.<org.eclipse.jdt.internal.compiler.parser.Scanner: int[] lineEnds>;

        $i7 = r5.<org.eclipse.jdt.internal.compiler.parser.Scanner: int linePtr>;

        $i8 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>(i3, $r8, 0, $i7);

        if $i6 == $i8 goto label2;

        return;

     label2:
        $i9 = $r4.<org.eclipse.jdt.internal.compiler.parser.Parser: int modifiersSourceStart>;

        if $i9 <= i3 goto label3;

        $i12 = $r4.<org.eclipse.jdt.internal.compiler.parser.Parser: int modifiersSourceStart>;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i11 = $r17.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        if $i12 >= $i11 goto label3;

        return;

     label3:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $z0 = $r9 instanceof org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        if $z0 == 0 goto label4;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r15 = (org.eclipse.jdt.internal.compiler.ast.MethodDeclaration) $r14;

        $r15.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters> = r2;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r16.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart> = i10;

        goto label5;

     label4:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $z1 = $r10 instanceof org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        if $z1 == 0 goto label5;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r12 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) $r11;

        $r12.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters> = r2;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $r13.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart> = i10;

     label5:
        return;
    }

    public void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] r3, $r4, $r8;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation $r5, $r9;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r0;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i0 <= 0 goto label8;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        r2 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if r2 == null goto label7;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation)[i0];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations> = $r4;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount> = 0;

        i6 = 0;

        goto label6;

     label1:
        i7 = 0;

        goto label4;

     label2:
        $r5 = r3[i6];

        $r7 = $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation: org.eclipse.jdt.internal.compiler.ast.Annotation 'annotation'>;

        $r6 = r2[i7];

        if $r7 != $r6 goto label3;

        goto label5;

     label3:
        i7 = i7 + 1;

     label4:
        $i3 = lengthof r2;

        if i7 < $i3 goto label2;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount> = $i5;

        $r9 = r3[i6];

        $r8[$i4] = $r9;

     label5:
        i6 = i6 + 1;

     label6:
        if i6 < i0 goto label1;

        goto label8;

     label7:
        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations> = r3;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int annotationCount> = i0;

     label8:
        if i1 == 0 goto label9;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int modifiers> = i1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: int modifiersStart> = i2;

     label9:
        return;
    }
}
