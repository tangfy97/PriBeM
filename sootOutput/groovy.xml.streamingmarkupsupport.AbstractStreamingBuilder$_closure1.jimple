class groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$lang$GroovyRuntimeException;
    static java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1 r2;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;

        r2 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public transient java.lang.Object doCall(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        boolean $z0;
        org.codehaus.groovy.runtime.GStringImpl $r37;
        java.lang.Throwable $r43;
        java.lang.Object[] $r12, $r22, r28, $r36, $r38;
        java.lang.String[] $r41;
        groovy.lang.Reference $r1, $r3, $r5, $r7, $r15;
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1 r25;
        java.lang.Object r0, r2, r4, r6, $r11, $r13, $r14, $r16, $r21, $r23, $r24, r26, r27, $r39, $r40, $r42;
        java.lang.Class $r8, $r9, $r10, $r17, $r18, $r19, $r20, $r29, $r30, $r31, $r32, $r33, $r34, $r35;

        r25 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1;

        r0 := @parameter0: java.lang.Object;

        r26 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r27 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r28 := @parameter6: java.lang.Object[];

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r5 = new groovy.lang.Reference;

        specialinvoke $r5.<groovy.lang.Reference: void <init>(java.lang.Object)>(r4);

        $r7 = new groovy.lang.Reference;

        specialinvoke $r7.<groovy.lang.Reference: void <init>(java.lang.Object)>(r6);

        $r8 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0>;

        if $r8 != null goto label01;

        $r29 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0> = $r29;

        goto label02;

     label01:
        $r29 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0>;

     label02:
        $r9 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r9 != null goto label03;

        $r30 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r30;

        goto label04;

     label03:
        $r30 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r10 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r10 != null goto label05;

        $r31 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r31;

        goto label06;

     label05:
        $r31 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label06:
        $r11 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r12 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke $r7.<groovy.lang.Reference: java.lang.Object get()>();

        $r12[0] = $r13;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r31, $r11, "getAt", $r12);

        $r15 = new groovy.lang.Reference;

        specialinvoke $r15.<groovy.lang.Reference: void <init>(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<groovy.lang.Reference: java.lang.Object get()>();

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r16, null);

        if $z0 == 0 goto label09;

        $r20 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r20 != null goto label07;

        $r32 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r32;

        goto label08;

     label07:
        $r32 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label08:
        $r21 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r22 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke $r7.<groovy.lang.Reference: java.lang.Object get()>();

        $r22[0] = $r23;

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r32, $r21, "getAt", $r22);

        virtualinvoke $r15.<groovy.lang.Reference: void set(java.lang.Object)>($r24);

        goto label09;

     label09:
        $r17 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r17 != null goto label10;

        $r19 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        $r33 = $r19;

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r19;

        goto label11;

     label10:
        $r33 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label11:
        $r18 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$GroovyRuntimeException>;

        if $r18 != null goto label12;

        $r34 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyRuntimeException");

        $r35 = $r34;

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$GroovyRuntimeException> = $r34;

        goto label13;

     label12:
        $r35 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$GroovyRuntimeException>;

     label13:
        $r36 = newarray (java.lang.Object)[1];

        $r37 = new org.codehaus.groovy.runtime.GStringImpl;

        $r38 = newarray (java.lang.Object)[2];

        $r39 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r38[0] = $r39;

        $r40 = virtualinvoke $r15.<groovy.lang.Reference: java.lang.Object get()>();

        $r38[1] = $r40;

        $r41 = newarray (java.lang.String)[3];

        $r41[0] = "Tag ";

        $r41[1] = " is not allowed in namespace ";

        $r41[2] = "";

        specialinvoke $r37.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r38, $r41);

        $r36[0] = $r37;

        $r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>($r33, $r35, $r36);

        $r43 = (java.lang.Throwable) $r42;

        throw $r43;
    }

    public transient java.lang.Object call(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] $r12, r19;
        groovy.lang.Reference $r1, $r3, $r5, $r7;
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1 r11;
        java.lang.Object r0, r2, r4, r6, $r13, r14, $r15, $r16, r17, $r18, $r20;
        java.lang.Class $r8, r9, $r10, $r21, $r22;

        r11 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1;

        r0 := @parameter0: java.lang.Object;

        r14 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r17 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r19 := @parameter6: java.lang.Object[];

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r5 = new groovy.lang.Reference;

        specialinvoke $r5.<groovy.lang.Reference: void <init>(java.lang.Object)>(r4);

        $r7 = new groovy.lang.Reference;

        specialinvoke $r7.<groovy.lang.Reference: void <init>(java.lang.Object)>(r6);

        $r8 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0>;

        if $r8 != null goto label1;

        $r21 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0> = $r21;

        goto label2;

     label1:
        $r21 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$0>;

     label2:
        r9 = $r21;

        $r10 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r10 != null goto label3;

        $r22 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r22;

        goto label4;

     label3:
        $r22 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r12 = newarray (java.lang.Object)[7];

        $r13 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r12[0] = $r13;

        $r12[1] = r14;

        $r15 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r12[2] = $r15;

        $r16 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r12[3] = $r16;

        $r12[4] = r17;

        $r18 = virtualinvoke $r7.<groovy.lang.Reference: java.lang.Object get()>();

        $r12[5] = $r18;

        $r12[6] = r19;

        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r9, r11, "doCall", $r12);

        return $r20;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
