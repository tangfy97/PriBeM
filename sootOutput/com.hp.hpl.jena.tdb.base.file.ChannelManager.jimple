public class com.hp.hpl.jena.tdb.base.file.ChannelManager extends java.lang.Object
{
    private static java.util.Map name2channel;
    private static java.util.Map channel2name;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.base.file.ChannelManager r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.ChannelManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.nio.channels.FileChannel acquire(java.lang.String)
    {
        java.lang.String r0;
        java.nio.channels.FileChannel $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.nio.channels.FileChannel acquire(java.lang.String,java.lang.String)>(r0, "rw");

        return $r1;
    }

    public static java.nio.channels.FileChannel acquire(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.nio.channels.FileChannel $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.nio.channels.FileChannel openref$(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    private static java.nio.channels.FileChannel openref$(java.lang.String, java.lang.String)
    {
        java.util.Map $r1, $r5, $r6;
        com.hp.hpl.jena.tdb.base.file.FileException $r7;
        java.lang.Object $r2;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String r0, r3, $r11;
        java.nio.channels.FileChannel $r4, $r12, r13;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".jrnl");

        if $z0 != 0 goto label1;

        $r12 = staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.nio.channels.FileChannel open$(java.lang.String,java.lang.String)>(r0, r3);

        return $r12;

     label1:
        $r1 = <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map name2channel>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r13 = (java.nio.channels.FileChannel) $r2;

        if r13 == null goto label2;

        $r7 = new com.hp.hpl.jena.tdb.base.file.FileException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already open: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label2:
        $r4 = staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.nio.channels.FileChannel open$(java.lang.String,java.lang.String)>(r0, r3);

        $r5 = <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map name2channel>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

        $r6 = <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map channel2name>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r0);

        return $r4;
    }

    private static java.nio.channels.FileChannel open$(java.lang.String, java.lang.String)
    {
        java.io.RandomAccessFile $r0;
        java.io.IOException $r4;
        com.hp.hpl.jena.tdb.base.file.FileException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String r1, r2, $r12;
        java.nio.channels.FileChannel $r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r0 = new java.io.RandomAccessFile;

        specialinvoke $r0.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = virtualinvoke $r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.hp.hpl.jena.tdb.base.file.FileException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (mode=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void release(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0;
        java.nio.channels.FileChannel r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map name2channel>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.nio.channels.FileChannel) $r2;

        if r3 == null goto label1;

        staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: void release(java.nio.channels.FileChannel)>(r3);

     label1:
        return;
    }

    public static void release(java.nio.channels.FileChannel)
    {
        java.util.Map $r1, $r3;
        java.lang.Object $r2;
        java.lang.String $r5;
        java.nio.channels.FileChannel r0;
        java.lang.Exception $r4;

        r0 := @parameter0: java.nio.channels.FileChannel;

     label1:
        virtualinvoke r0.<java.nio.channels.FileChannel: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r1 = <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map channel2name>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        $r5 = (java.lang.String) $r2;

        if $r5 == null goto label5;

        $r3 = <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map name2channel>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void reset()
    {
        staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: void releaseAll(java.lang.String)>(null);

        return;
    }

    public static void releaseAll(java.lang.String)
    {
        java.util.Iterator $r3, $r4;
        java.util.Set $r2;
        java.util.ArrayList $r0;
        java.util.Map $r1, $r8;
        java.lang.Object $r5, $r6, $r9;
        java.lang.String r7, r10;
        java.nio.channels.FileChannel r11;
        boolean $z0, $z1, $z2;

        r7 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map name2channel>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r6;

        if r7 == null goto label2;

        $z2 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>(r7);

        if $z2 == 0 goto label3;

     label2:
        $r8 = <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map name2channel>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

     label3:
        goto label1;

     label4:
        $r4 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.nio.channels.FileChannel) $r5;

        staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: void release(java.nio.channels.FileChannel)>(r11);

        goto label5;

     label6:
        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map name2channel> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.util.Map channel2name> = $r1;

        return;
    }
}
