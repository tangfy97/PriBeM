class com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7 extends com.sun.xml.bind.v2.schemagen.Tree$Term
{
    final com.sun.xml.bind.v2.model.core.MapPropertyInfo val$mp;
    final com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1;

    void <init>(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace, com.sun.xml.bind.v2.model.core.MapPropertyInfo)
    {
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7 r0;
        com.sun.xml.bind.v2.model.core.MapPropertyInfo r2;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace r1;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7;

        r1 := @parameter0: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace;

        r2 := @parameter1: com.sun.xml.bind.v2.model.core.MapPropertyInfo;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1> = r1;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.model.core.MapPropertyInfo val$mp> = r2;

        specialinvoke r0.<com.sun.xml.bind.v2.schemagen.Tree$Term: void <init>()>();

        return;
    }

    protected void write(com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer, boolean, boolean)
    {
        com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement $r4, $r9, $r12, $r13;
        com.sun.xml.bind.v2.model.core.MapPropertyInfo $r1, $r7, $r17, $r20;
        com.sun.xml.bind.v2.schemagen.xmlschema.ExplicitGroup $r11, $r16;
        com.sun.xml.bind.v2.schemagen.Form $r6;
        java.lang.String $r8;
        boolean $z0, z1, z2;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7 r0;
        com.sun.xml.bind.v2.model.core.NonElement $r19, $r22;
        com.sun.xml.bind.v2.schemagen.xmlschema.Occurs $r14;
        com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType $r10, $r15;
        com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer r3;
        javax.xml.namespace.QName $r2;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace $r5, $r18, $r21;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7;

        r3 := @parameter0: com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r1 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.model.core.MapPropertyInfo val$mp>;

        $r2 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.core.MapPropertyInfo: javax.xml.namespace.QName getXmlName()>();

        $r4 = interfaceinvoke r3.<com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement element()>();

        $r5 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r6 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: com.sun.xml.bind.v2.schemagen.Form access$1900(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace)>($r5);

        virtualinvoke $r6.<com.sun.xml.bind.v2.schemagen.Form: void writeForm(com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement,javax.xml.namespace.QName)>($r4, $r2);

        $r7 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.model.core.MapPropertyInfo val$mp>;

        $z0 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.core.MapPropertyInfo: boolean isCollectionNillable()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r4.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.Element nillable(boolean)>(1);

     label1:
        $r8 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r9 = interfaceinvoke $r4.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement name(java.lang.String)>($r8);

        virtualinvoke r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: void writeOccurs(com.sun.xml.bind.v2.schemagen.xmlschema.Occurs,boolean,boolean)>($r9, z1, z2);

        $r10 = interfaceinvoke $r9.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType complexType()>();

        $r11 = interfaceinvoke $r10.<com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType: com.sun.xml.bind.v2.schemagen.xmlschema.ExplicitGroup sequence()>();

        $r12 = interfaceinvoke $r11.<com.sun.xml.bind.v2.schemagen.xmlschema.ExplicitGroup: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement element()>();

        $r13 = interfaceinvoke $r12.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement name(java.lang.String)>("entry");

        $r14 = interfaceinvoke $r13.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.Occurs minOccurs(int)>(0);

        interfaceinvoke $r14.<com.sun.xml.bind.v2.schemagen.xmlschema.Occurs: com.sun.xml.bind.v2.schemagen.xmlschema.Occurs maxOccurs(java.lang.String)>("unbounded");

        $r15 = interfaceinvoke $r12.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType complexType()>();

        $r16 = interfaceinvoke $r15.<com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType: com.sun.xml.bind.v2.schemagen.xmlschema.ExplicitGroup sequence()>();

        $r18 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r17 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.model.core.MapPropertyInfo val$mp>;

        $r19 = interfaceinvoke $r17.<com.sun.xml.bind.v2.model.core.MapPropertyInfo: com.sun.xml.bind.v2.model.core.NonElement getKeyType()>();

        staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: void access$2300(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace,com.sun.xml.bind.v2.schemagen.xmlschema.ExplicitGroup,java.lang.String,com.sun.xml.bind.v2.model.core.NonElement)>($r18, $r16, "key", $r19);

        $r21 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r20 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7: com.sun.xml.bind.v2.model.core.MapPropertyInfo val$mp>;

        $r22 = interfaceinvoke $r20.<com.sun.xml.bind.v2.model.core.MapPropertyInfo: com.sun.xml.bind.v2.model.core.NonElement getValueType()>();

        staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: void access$2300(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace,com.sun.xml.bind.v2.schemagen.xmlschema.ExplicitGroup,java.lang.String,com.sun.xml.bind.v2.model.core.NonElement)>($r21, $r16, "value", $r22);

        return;
    }
}
