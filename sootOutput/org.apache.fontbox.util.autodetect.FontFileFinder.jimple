public class org.apache.fontbox.util.autodetect.FontFileFinder extends java.lang.Object
{
    private org.apache.fontbox.util.autodetect.FontDirFinder fontDirFinder;

    public void <init>()
    {
        org.apache.fontbox.util.autodetect.FontFileFinder r0;

        r0 := @this: org.apache.fontbox.util.autodetect.FontFileFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder fontDirFinder> = null;

        return;
    }

    private org.apache.fontbox.util.autodetect.FontDirFinder determineDirFinder()
    {
        org.apache.fontbox.util.autodetect.WindowsFontDirFinder $r3;
        org.apache.fontbox.util.autodetect.FontFileFinder r4;
        org.apache.fontbox.util.autodetect.MacFontDirFinder $r2;
        org.apache.fontbox.util.autodetect.UnixFontDirFinder $r1;
        java.lang.String $r0;
        boolean $z0, $z1;

        r4 := @this: org.apache.fontbox.util.autodetect.FontFileFinder;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("Windows");

        if $z0 == 0 goto label1;

        $r3 = new org.apache.fontbox.util.autodetect.WindowsFontDirFinder;

        specialinvoke $r3.<org.apache.fontbox.util.autodetect.WindowsFontDirFinder: void <init>()>();

        return $r3;

     label1:
        $z1 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("Mac");

        if $z1 == 0 goto label2;

        $r2 = new org.apache.fontbox.util.autodetect.MacFontDirFinder;

        specialinvoke $r2.<org.apache.fontbox.util.autodetect.MacFontDirFinder: void <init>()>();

        return $r2;

     label2:
        $r1 = new org.apache.fontbox.util.autodetect.UnixFontDirFinder;

        specialinvoke $r1.<org.apache.fontbox.util.autodetect.UnixFontDirFinder: void <init>()>();

        return $r1;
    }

    public java.util.List find() throws java.io.IOException
    {
        org.apache.fontbox.util.autodetect.FontFileFinder r0;
        java.util.Iterator $r5;
        java.io.File r7;
        java.util.ArrayList $r4;
        org.apache.fontbox.util.autodetect.FontDirFinder $r1, $r2, $r8;
        java.util.List $r3;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.apache.fontbox.util.autodetect.FontFileFinder;

        $r1 = r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder fontDirFinder>;

        if $r1 != null goto label1;

        $r8 = specialinvoke r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder determineDirFinder()>();

        r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder fontDirFinder> = $r8;

     label1:
        $r2 = r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder fontDirFinder>;

        $r3 = interfaceinvoke $r2.<org.apache.fontbox.util.autodetect.FontDirFinder: java.util.List find()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.io.File) $r6;

        specialinvoke r0.<org.apache.fontbox.util.autodetect.FontFileFinder: void walk(java.io.File,java.util.List)>(r7, $r4);

        goto label2;

     label3:
        return $r4;
    }

    public java.util.List find(java.lang.String) throws java.io.IOException
    {
        org.apache.fontbox.util.autodetect.FontFileFinder r3;
        java.lang.String r2;
        java.io.File $r1;
        java.util.ArrayList $r0;
        boolean $z0;

        r3 := @this: org.apache.fontbox.util.autodetect.FontFileFinder;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        specialinvoke r3.<org.apache.fontbox.util.autodetect.FontFileFinder: void walk(java.io.File,java.util.List)>($r1, $r0);

     label1:
        return $r0;
    }

    public java.util.Map getCommonTTFMapping()
    {
        org.apache.fontbox.util.autodetect.FontDirFinder $r1, $r2, $r4;
        org.apache.fontbox.util.autodetect.FontFileFinder r0;
        java.util.Map $r3;

        r0 := @this: org.apache.fontbox.util.autodetect.FontFileFinder;

        $r1 = r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder fontDirFinder>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder determineDirFinder()>();

        r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder fontDirFinder> = $r4;

     label1:
        $r2 = r0.<org.apache.fontbox.util.autodetect.FontFileFinder: org.apache.fontbox.util.autodetect.FontDirFinder fontDirFinder>;

        $r3 = interfaceinvoke $r2.<org.apache.fontbox.util.autodetect.FontDirFinder: java.util.Map getCommonTTFMapping()>();

        return $r3;
    }

    private void walk(java.io.File, java.util.List)
    {
        org.apache.fontbox.util.autodetect.FontFileFinder r3;
        java.io.File r0, r2;
        java.util.List r4;
        int i0, i1;
        java.net.URI $r5;
        java.lang.String $r6;
        java.io.File[] $r1;
        boolean $z0, $z1, $z2, $z3;

        r3 := @this: org.apache.fontbox.util.autodetect.FontFileFinder;

        r0 := @parameter0: java.io.File;

        r4 := @parameter1: java.util.List;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label5;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 == null goto label5;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r2 = $r1[i1];

        $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z3 == 0 goto label2;

        goto label4;

     label2:
        specialinvoke r3.<org.apache.fontbox.util.autodetect.FontFileFinder: void walk(java.io.File,java.util.List)>(r2, r4);

        goto label4;

     label3:
        $z2 = specialinvoke r3.<org.apache.fontbox.util.autodetect.FontFileFinder: boolean checkFontfile(java.io.File)>(r2);

        if $z2 == 0 goto label4;

        $r5 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private boolean checkFontfile(java.io.File)
    {
        org.apache.fontbox.util.autodetect.FontFileFinder r3;
        java.io.File r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2, $z3;

        r3 := @this: org.apache.fontbox.util.autodetect.FontFileFinder;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".ttf");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".otf");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".pfb");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".ttc");

        if $z3 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
