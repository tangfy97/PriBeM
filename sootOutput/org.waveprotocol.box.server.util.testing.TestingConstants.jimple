public interface  org.waveprotocol.box.server.util.testing.TestingConstants extends java.lang.Object
{
    public static final java.lang.String BLIP_ID;
    public static final java.lang.String MESSAGE;
    public static final java.lang.String MESSAGE2;
    public static final java.lang.String MESSAGE3;
    public static final java.lang.String DOMAIN;
    public static final java.lang.String OTHER_USER_NAME;
    public static final java.lang.String OTHER_USER;
    public static final org.waveprotocol.wave.model.wave.ParticipantId OTHER_PARTICIPANT;
    public static final int PORT;
    public static final java.lang.String USER_NAME;
    public static final java.lang.String USER;
    public static final char[] PASSWORD;
    public static final org.waveprotocol.wave.model.wave.ParticipantId PARTICIPANT;
    public static final org.waveprotocol.wave.model.id.WaveId WAVE_ID;
    public static final org.waveprotocol.wave.model.id.WaveletId WAVELET_ID;
    public static final org.waveprotocol.wave.model.id.WaveletName WAVELET_NAME;

    static void <clinit>()
    {
        org.waveprotocol.wave.model.id.WaveletName $r8;
        org.waveprotocol.wave.model.id.WaveId $r4, $r7;
        org.waveprotocol.wave.model.id.WaveletId $r5, $r6;
        org.waveprotocol.wave.model.wave.ParticipantId $r0, $r3;
        char[] $r2;
        java.lang.String $r1;

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String USER> = "user@host.com";

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String USER_NAME> = "user";

        <org.waveprotocol.box.server.util.testing.TestingConstants: int PORT> = 9876;

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String OTHER_USER> = "other@host.com";

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String OTHER_USER_NAME> = "other";

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String DOMAIN> = "host.com";

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String MESSAGE3> = "There is no spoon";

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String MESSAGE2> = "Why\'s the rum gone?";

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String MESSAGE> = "The quick brown fox jumps over the lazy dog";

        <org.waveprotocol.box.server.util.testing.TestingConstants: java.lang.String BLIP_ID> = "b+blip";

        $r0 = new org.waveprotocol.wave.model.wave.ParticipantId;

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.ParticipantId: void <init>(java.lang.String)>("other@host.com");

        <org.waveprotocol.box.server.util.testing.TestingConstants: org.waveprotocol.wave.model.wave.ParticipantId OTHER_PARTICIPANT> = $r0;

        $r1 = "password";

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <org.waveprotocol.box.server.util.testing.TestingConstants: char[] PASSWORD> = $r2;

        $r3 = new org.waveprotocol.wave.model.wave.ParticipantId;

        specialinvoke $r3.<org.waveprotocol.wave.model.wave.ParticipantId: void <init>(java.lang.String)>("user@host.com");

        <org.waveprotocol.box.server.util.testing.TestingConstants: org.waveprotocol.wave.model.wave.ParticipantId PARTICIPANT> = $r3;

        $r4 = staticinvoke <org.waveprotocol.wave.model.id.WaveId: org.waveprotocol.wave.model.id.WaveId of(java.lang.String,java.lang.String)>("host.com", "w+wave");

        <org.waveprotocol.box.server.util.testing.TestingConstants: org.waveprotocol.wave.model.id.WaveId WAVE_ID> = $r4;

        $r5 = staticinvoke <org.waveprotocol.wave.model.id.WaveletId: org.waveprotocol.wave.model.id.WaveletId of(java.lang.String,java.lang.String)>("host.com", "wavelet");

        <org.waveprotocol.box.server.util.testing.TestingConstants: org.waveprotocol.wave.model.id.WaveletId WAVELET_ID> = $r5;

        $r7 = <org.waveprotocol.box.server.util.testing.TestingConstants: org.waveprotocol.wave.model.id.WaveId WAVE_ID>;

        $r6 = <org.waveprotocol.box.server.util.testing.TestingConstants: org.waveprotocol.wave.model.id.WaveletId WAVELET_ID>;

        $r8 = staticinvoke <org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletName of(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>($r7, $r6);

        <org.waveprotocol.box.server.util.testing.TestingConstants: org.waveprotocol.wave.model.id.WaveletName WAVELET_NAME> = $r8;

        return;
    }
}
