public final class org.apache.lucene.analysis.CachingTokenFilter extends org.apache.lucene.analysis.TokenFilter
{
    private java.util.List cache;
    private java.util.Iterator iterator;
    private org.apache.lucene.util.AttributeSource$State finalState;

    public void <init>(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.CachingTokenFilter r0;
        org.apache.lucene.analysis.TokenStream r1;

        r0 := @this: org.apache.lucene.analysis.CachingTokenFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.List cache> = null;

        r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.Iterator iterator> = null;

        return;
    }

    public final boolean incrementToken() throws java.io.IOException
    {
        java.util.Iterator $r2, $r3, $r8;
        org.apache.lucene.util.AttributeSource$State $r5;
        java.util.List $r1, $r7;
        org.apache.lucene.analysis.CachingTokenFilter r0;
        java.lang.Object $r4;
        java.util.LinkedList $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.CachingTokenFilter;

        $r1 = r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.List cache>;

        if $r1 != null goto label1;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.List cache> = $r6;

        specialinvoke r0.<org.apache.lucene.analysis.CachingTokenFilter: void fillCache()>();

        $r7 = r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.List cache>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.Iterator iterator> = $r8;

     label1:
        $r2 = r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.Iterator iterator>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.lucene.util.AttributeSource$State) $r4;

        virtualinvoke r0.<org.apache.lucene.analysis.CachingTokenFilter: void restoreState(org.apache.lucene.util.AttributeSource$State)>($r5);

        return 1;
    }

    public final void end()
    {
        org.apache.lucene.analysis.CachingTokenFilter r0;
        org.apache.lucene.util.AttributeSource$State $r1, $r2;

        r0 := @this: org.apache.lucene.analysis.CachingTokenFilter;

        $r1 = r0.<org.apache.lucene.analysis.CachingTokenFilter: org.apache.lucene.util.AttributeSource$State finalState>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.analysis.CachingTokenFilter: org.apache.lucene.util.AttributeSource$State finalState>;

        virtualinvoke r0.<org.apache.lucene.analysis.CachingTokenFilter: void restoreState(org.apache.lucene.util.AttributeSource$State)>($r2);

     label1:
        return;
    }

    public void reset()
    {
        java.util.List $r1, $r2;
        java.util.Iterator $r3;
        org.apache.lucene.analysis.CachingTokenFilter r0;

        r0 := @this: org.apache.lucene.analysis.CachingTokenFilter;

        $r1 = r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.List cache>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.List cache>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.Iterator iterator> = $r3;

     label1:
        return;
    }

    private void fillCache() throws java.io.IOException
    {
        java.util.List $r4;
        org.apache.lucene.analysis.TokenStream $r1, $r2;
        org.apache.lucene.analysis.CachingTokenFilter r0;
        org.apache.lucene.util.AttributeSource$State $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.CachingTokenFilter;

     label1:
        $r1 = r0.<org.apache.lucene.analysis.CachingTokenFilter: org.apache.lucene.analysis.TokenStream input>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.lucene.analysis.CachingTokenFilter: java.util.List cache>;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.CachingTokenFilter: org.apache.lucene.util.AttributeSource$State captureState()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r2 = r0.<org.apache.lucene.analysis.CachingTokenFilter: org.apache.lucene.analysis.TokenStream input>;

        virtualinvoke $r2.<org.apache.lucene.analysis.TokenStream: void end()>();

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.CachingTokenFilter: org.apache.lucene.util.AttributeSource$State captureState()>();

        r0.<org.apache.lucene.analysis.CachingTokenFilter: org.apache.lucene.util.AttributeSource$State finalState> = $r3;

        return;
    }
}
