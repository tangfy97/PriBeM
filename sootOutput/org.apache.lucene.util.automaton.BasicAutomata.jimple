public final class org.apache.lucene.util.automaton.BasicAutomata extends java.lang.Object
{

    private void <init>()
    {
        org.apache.lucene.util.automaton.BasicAutomata r0;

        r0 := @this: org.apache.lucene.util.automaton.BasicAutomata;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.lucene.util.automaton.Automaton makeEmpty()
    {
        org.apache.lucene.util.automaton.State $r1;
        org.apache.lucene.util.automaton.Automaton $r0;

        $r0 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        $r1 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r1.<org.apache.lucene.util.automaton.State: void <init>()>();

        $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial> = $r1;

        $r0.<org.apache.lucene.util.automaton.Automaton: boolean deterministic> = 1;

        return $r0;
    }

    public static org.apache.lucene.util.automaton.Automaton makeEmptyString()
    {
        org.apache.lucene.util.automaton.Automaton $r0;

        $r0 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        $r0.<org.apache.lucene.util.automaton.Automaton: java.lang.String singleton> = "";

        $r0.<org.apache.lucene.util.automaton.Automaton: boolean deterministic> = 1;

        return $r0;
    }

    public static org.apache.lucene.util.automaton.Automaton makeAnyString()
    {
        org.apache.lucene.util.automaton.State $r1;
        org.apache.lucene.util.automaton.Automaton $r0;
        org.apache.lucene.util.automaton.Transition $r2;

        $r0 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        $r1 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r1.<org.apache.lucene.util.automaton.State: void <init>()>();

        $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial> = $r1;

        $r1.<org.apache.lucene.util.automaton.State: boolean accept> = 1;

        $r2 = new org.apache.lucene.util.automaton.Transition;

        specialinvoke $r2.<org.apache.lucene.util.automaton.Transition: void <init>(int,int,org.apache.lucene.util.automaton.State)>(0, 1114111, $r1);

        virtualinvoke $r1.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r2);

        $r0.<org.apache.lucene.util.automaton.Automaton: boolean deterministic> = 1;

        return $r0;
    }

    public static org.apache.lucene.util.automaton.Automaton makeAnyChar()
    {
        org.apache.lucene.util.automaton.Automaton $r0;

        $r0 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.Automaton makeCharRange(int,int)>(0, 1114111);

        return $r0;
    }

    public static org.apache.lucene.util.automaton.Automaton makeChar(int)
    {
        org.apache.lucene.util.automaton.Automaton $r0;
        int i0;
        char[] $r2;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        $r1 = new java.lang.String;

        $r2 = staticinvoke <java.lang.Character: char[] toChars(int)>(i0);

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        $r0.<org.apache.lucene.util.automaton.Automaton: java.lang.String singleton> = $r1;

        $r0.<org.apache.lucene.util.automaton.Automaton: boolean deterministic> = 1;

        return $r0;
    }

    public static org.apache.lucene.util.automaton.Automaton makeCharRange(int, int)
    {
        org.apache.lucene.util.automaton.Automaton $r0, $r4;
        org.apache.lucene.util.automaton.Transition $r3;
        int i0, i1;
        org.apache.lucene.util.automaton.State $r1, $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != i1 goto label1;

        $r4 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.Automaton makeChar(int)>(i0);

        return $r4;

     label1:
        $r0 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        $r1 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r1.<org.apache.lucene.util.automaton.State: void <init>()>();

        $r2 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r2.<org.apache.lucene.util.automaton.State: void <init>()>();

        $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial> = $r1;

        $r2.<org.apache.lucene.util.automaton.State: boolean accept> = 1;

        if i0 > i1 goto label2;

        $r3 = new org.apache.lucene.util.automaton.Transition;

        specialinvoke $r3.<org.apache.lucene.util.automaton.Transition: void <init>(int,int,org.apache.lucene.util.automaton.State)>(i0, i1, $r2);

        virtualinvoke $r1.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r3);

     label2:
        $r0.<org.apache.lucene.util.automaton.Automaton: boolean deterministic> = 1;

        return $r0;
    }

    private static org.apache.lucene.util.automaton.State anyOfRightLength(java.lang.String, int)
    {
        org.apache.lucene.util.automaton.Transition $r2;
        int $i0, i1, $i2;
        org.apache.lucene.util.automaton.State $r0, $r3;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r0 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r0.<org.apache.lucene.util.automaton.State: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != i1 goto label1;

        virtualinvoke $r0.<org.apache.lucene.util.automaton.State: void setAccept(boolean)>(1);

        goto label2;

     label1:
        $r2 = new org.apache.lucene.util.automaton.Transition;

        $i2 = i1 + 1;

        $r3 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State anyOfRightLength(java.lang.String,int)>(r1, $i2);

        specialinvoke $r2.<org.apache.lucene.util.automaton.Transition: void <init>(int,int,org.apache.lucene.util.automaton.State)>(48, 57, $r3);

        virtualinvoke $r0.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r2);

     label2:
        return $r0;
    }

    private static org.apache.lucene.util.automaton.State atLeast(java.lang.String, int, java.util.Collection, boolean)
    {
        int $i0, i1, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String r1;
        boolean z0, $z1;
        java.util.Collection r2;
        org.apache.lucene.util.automaton.Transition $r8, $r9;
        char $c2, $c5;
        org.apache.lucene.util.automaton.State $r4, $r6, $r7;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r2 := @parameter2: java.util.Collection;

        z0 := @parameter3: boolean;

        $r7 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r7.<org.apache.lucene.util.automaton.State: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != i1 goto label1;

        virtualinvoke $r7.<org.apache.lucene.util.automaton.State: void setAccept(boolean)>(1);

        goto label5;

     label1:
        if z0 == 0 goto label2;

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r7);

     label2:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        $r8 = new org.apache.lucene.util.automaton.Transition;

        $i6 = i1 + 1;

        if z0 == 0 goto label3;

        $i7 = (int) $c2;

        if $i7 != 48 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r6 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State atLeast(java.lang.String,int,java.util.Collection,boolean)>(r1, $i6, r2, $z1);

        $i8 = (int) $c2;

        specialinvoke $r8.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>($i8, $r6);

        virtualinvoke $r7.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r8);

        $i9 = (int) $c2;

        if $i9 >= 57 goto label5;

        $r9 = new org.apache.lucene.util.automaton.Transition;

        $i10 = (int) $c2;

        $i3 = $i10 + 1;

        $c5 = (char) $i3;

        $i4 = i1 + 1;

        $r4 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State anyOfRightLength(java.lang.String,int)>(r1, $i4);

        $i11 = (int) $c5;

        specialinvoke $r9.<org.apache.lucene.util.automaton.Transition: void <init>(int,int,org.apache.lucene.util.automaton.State)>($i11, 57, $r4);

        virtualinvoke $r7.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r9);

     label5:
        return $r7;
    }

    private static org.apache.lucene.util.automaton.State atMost(java.lang.String, int)
    {
        int $i0, i1, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r1;
        org.apache.lucene.util.automaton.Transition $r7, $r8;
        char $c2, $c3, $c7;
        org.apache.lucene.util.automaton.State $r3, $r5, $r6;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r6 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r6.<org.apache.lucene.util.automaton.State: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != i1 goto label1;

        virtualinvoke $r6.<org.apache.lucene.util.automaton.State: void setAccept(boolean)>(1);

        goto label2;

     label1:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        $r7 = new org.apache.lucene.util.automaton.Transition;

        $c3 = (char) i1;

        $i8 = (int) $c3;

        $i4 = $i8 + 1;

        $r3 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State atMost(java.lang.String,int)>(r1, $i4);

        $i9 = (int) $c2;

        specialinvoke $r7.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>($i9, $r3);

        virtualinvoke $r6.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r7);

        $i10 = (int) $c2;

        if $i10 <= 48 goto label2;

        $r8 = new org.apache.lucene.util.automaton.Transition;

        $i11 = (int) $c2;

        $i5 = $i11 - 1;

        $c7 = (char) $i5;

        $i6 = i1 + 1;

        $r5 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State anyOfRightLength(java.lang.String,int)>(r1, $i6);

        $i12 = (int) $c7;

        specialinvoke $r8.<org.apache.lucene.util.automaton.Transition: void <init>(int,int,org.apache.lucene.util.automaton.State)>(48, $i12, $r5);

        virtualinvoke $r6.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r8);

     label2:
        return $r6;
    }

    private static org.apache.lucene.util.automaton.State between(java.lang.String, java.lang.String, int, java.util.Collection, boolean)
    {
        boolean z0, $z1, $z2;
        java.util.Collection r3;
        int $i0, i1, $i4, $i5, $i6, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        java.lang.String r1, r2;
        org.apache.lucene.util.automaton.Transition $r13, $r14, $r15, $r16;
        char $c2, $c3, $c7, $c8;
        org.apache.lucene.util.automaton.State $r5, $r7, $r9, $r11, $r12;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r3 := @parameter3: java.util.Collection;

        z0 := @parameter4: boolean;

        $r12 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r12.<org.apache.lucene.util.automaton.State: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != i1 goto label1;

        virtualinvoke $r12.<org.apache.lucene.util.automaton.State: void setAccept(boolean)>(1);

        goto label8;

     label1:
        if z0 == 0 goto label2;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r12);

     label2:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i1);

        $i13 = (int) $c2;

        $i14 = (int) $c3;

        if $i13 != $i14 goto label5;

        $r13 = new org.apache.lucene.util.automaton.Transition;

        $i9 = i1 + 1;

        if z0 == 0 goto label3;

        $i15 = (int) $c2;

        if $i15 != 48 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r7 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State between(java.lang.String,java.lang.String,int,java.util.Collection,boolean)>(r1, r2, $i9, r3, $z1);

        $i16 = (int) $c2;

        specialinvoke $r13.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>($i16, $r7);

        virtualinvoke $r12.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r13);

        goto label8;

     label5:
        $r14 = new org.apache.lucene.util.automaton.Transition;

        $i10 = i1 + 1;

        if z0 == 0 goto label6;

        $i17 = (int) $c2;

        if $i17 != 48 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        $r9 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State atLeast(java.lang.String,int,java.util.Collection,boolean)>(r1, $i10, r3, $z2);

        $i18 = (int) $c2;

        specialinvoke $r14.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>($i18, $r9);

        virtualinvoke $r12.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r14);

        $r15 = new org.apache.lucene.util.automaton.Transition;

        $i11 = i1 + 1;

        $r11 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State atMost(java.lang.String,int)>(r2, $i11);

        $i19 = (int) $c3;

        specialinvoke $r15.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>($i19, $r11);

        virtualinvoke $r12.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r15);

        $i20 = (int) $c2;

        $i12 = $i20 + 1;

        $i21 = (int) $c3;

        if $i12 >= $i21 goto label8;

        $r16 = new org.apache.lucene.util.automaton.Transition;

        $i22 = (int) $c2;

        $i4 = $i22 + 1;

        $c7 = (char) $i4;

        $i23 = (int) $c3;

        $i5 = $i23 - 1;

        $c8 = (char) $i5;

        $i6 = i1 + 1;

        $r5 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State anyOfRightLength(java.lang.String,int)>(r1, $i6);

        $i24 = (int) $c7;

        $i25 = (int) $c8;

        specialinvoke $r16.<org.apache.lucene.util.automaton.Transition: void <init>(int,int,org.apache.lucene.util.automaton.State)>($i24, $i25, $r5);

        virtualinvoke $r12.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r16);

     label8:
        return $r12;
    }

    public static org.apache.lucene.util.automaton.Automaton makeInterval(int, int, int) throws java.lang.IllegalArgumentException
    {
        java.util.ArrayList $r8, $r10;
        org.apache.lucene.util.automaton.StatePair $r18;
        int i0, i1, i2, $i3, i4, i5, i6;
        java.lang.String $r1, $r2, $r5, $r7;
        boolean $z0, $z1;
        java.util.Iterator $r11;
        org.apache.lucene.util.automaton.Automaton $r0;
        org.apache.lucene.util.automaton.Transition $r12;
        org.apache.lucene.util.automaton.State $r9, $r13, $r14, r16, $r17, $r19;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r6;
        java.lang.Object $r15;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        if i0 > i1 goto label01;

        if i2 <= 0 goto label02;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i3 <= i2 goto label02;

     label01:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label02:
        if i2 <= 0 goto label03;

        i4 = i2;

        goto label04;

     label03:
        i4 = virtualinvoke $r2.<java.lang.String: int length()>();

     label04:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i5 = virtualinvoke $r1.<java.lang.String: int length()>();

     label05:
        if i5 >= i4 goto label06;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i5 = i5 + 1;

        goto label05;

     label06:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        i6 = virtualinvoke $r2.<java.lang.String: int length()>();

     label07:
        if i6 >= i4 goto label08;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i6 = i6 + 1;

        goto label07;

     label08:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        if i2 > 0 goto label09;

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        $r9 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.State between(java.lang.String,java.lang.String,int,java.util.Collection,boolean)>($r5, $r7, 0, $r8, $z1);

        $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial> = $r9;

        if i2 > 0 goto label14;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r15 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.lucene.util.automaton.State) $r15;

        $r17 = $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial>;

        if $r17 == r16 goto label12;

        $r18 = new org.apache.lucene.util.automaton.StatePair;

        $r19 = $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial>;

        specialinvoke $r18.<org.apache.lucene.util.automaton.StatePair: void <init>(org.apache.lucene.util.automaton.State,org.apache.lucene.util.automaton.State)>($r19, r16);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label12:
        goto label11;

     label13:
        staticinvoke <org.apache.lucene.util.automaton.BasicOperations: void addEpsilons(org.apache.lucene.util.automaton.Automaton,java.util.Collection)>($r0, $r10);

        $r14 = $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial>;

        $r12 = new org.apache.lucene.util.automaton.Transition;

        $r13 = $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial>;

        specialinvoke $r12.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>(48, $r13);

        virtualinvoke $r14.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r12);

        $r0.<org.apache.lucene.util.automaton.Automaton: boolean deterministic> = 0;

        goto label15;

     label14:
        $r0.<org.apache.lucene.util.automaton.Automaton: boolean deterministic> = 1;

     label15:
        virtualinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void checkMinimizeAlways()>();

        return $r0;
    }

    public static org.apache.lucene.util.automaton.Automaton makeString(java.lang.String)
    {
        java.lang.String r1;
        org.apache.lucene.util.automaton.Automaton $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        $r0.<org.apache.lucene.util.automaton.Automaton: java.lang.String singleton> = r1;

        $r0.<org.apache.lucene.util.automaton.Automaton: boolean deterministic> = 1;

        return $r0;
    }

    public static org.apache.lucene.util.automaton.Automaton makeString(int[], int, int)
    {
        org.apache.lucene.util.automaton.Automaton $r0;
        org.apache.lucene.util.automaton.Transition $r3;
        org.apache.lucene.util.automaton.State $r1, $r2, r5;
        int[] r4;
        int i0, i1, $i2, $i3, i4;

        r4 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        virtualinvoke $r0.<org.apache.lucene.util.automaton.Automaton: void setDeterministic(boolean)>(1);

        $r1 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r1.<org.apache.lucene.util.automaton.State: void <init>()>();

        r5 = $r1;

        $r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial> = $r1;

        i4 = i0;

     label1:
        $i2 = i0 + i1;

        if i4 >= $i2 goto label2;

        $r2 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r2.<org.apache.lucene.util.automaton.State: void <init>()>();

        $r3 = new org.apache.lucene.util.automaton.Transition;

        $i3 = r4[i4];

        specialinvoke $r3.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>($i3, $r2);

        virtualinvoke r5.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r3);

        r5 = $r2;

        i4 = i4 + 1;

        goto label1;

     label2:
        r5.<org.apache.lucene.util.automaton.State: boolean accept> = 1;

        return $r0;
    }

    public static org.apache.lucene.util.automaton.Automaton makeStringUnion(java.util.Collection)
    {
        org.apache.lucene.util.automaton.Automaton $r1, $r2;
        java.util.Collection r0;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.Automaton makeEmpty()>();

        return $r2;

     label1:
        $r1 = staticinvoke <org.apache.lucene.util.automaton.DaciukMihovAutomatonBuilder: org.apache.lucene.util.automaton.Automaton build(java.util.Collection)>(r0);

        return $r1;
    }
}
