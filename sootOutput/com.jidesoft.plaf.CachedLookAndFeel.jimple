class com.jidesoft.plaf.CachedLookAndFeel extends javax.swing.LookAndFeel
{
    static java.lang.ClassLoader currentLoader;
    javax.swing.UIDefaults customDefaults;

    public static void install()
    {
        java.lang.Object[] $r3;
        java.lang.Class[] $r0;
        java.lang.reflect.Field $r6;
        java.lang.Exception $r8;
        com.jidesoft.plaf.CachedLookAndFeel $r7;
        java.lang.Class $r1, $r5;
        java.lang.Object $r4;
        java.lang.reflect.Method $r2;

     label1:
        $r1 = class "Ljavax/swing/UIManager;";

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = null;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getLAFState", $r0);

        virtualinvoke $r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = null;

        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("multiLookAndFeel");

        virtualinvoke $r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r7 = new com.jidesoft.plaf.CachedLookAndFeel;

        specialinvoke $r7.<com.jidesoft.plaf.CachedLookAndFeel: void <init>()>();

        virtualinvoke $r6.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r4, $r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>()
    {
        com.jidesoft.plaf.CachedLookAndFeel$CustomUIDefaults $r1, $r2;
        com.jidesoft.plaf.CachedLookAndFeel r0;

        r0 := @this: com.jidesoft.plaf.CachedLookAndFeel;

        specialinvoke r0.<javax.swing.LookAndFeel: void <init>()>();

        $r1 = new com.jidesoft.plaf.CachedLookAndFeel$CustomUIDefaults;

        specialinvoke $r1.<com.jidesoft.plaf.CachedLookAndFeel$CustomUIDefaults: void <init>()>();

        r0.<com.jidesoft.plaf.CachedLookAndFeel: javax.swing.UIDefaults customDefaults> = $r1;

        $r2 = new com.jidesoft.plaf.CachedLookAndFeel$CustomUIDefaults;

        specialinvoke $r2.<com.jidesoft.plaf.CachedLookAndFeel$CustomUIDefaults: void <init>()>();

        r0.<com.jidesoft.plaf.CachedLookAndFeel: javax.swing.UIDefaults customDefaults> = $r2;

        return;
    }

    public java.lang.String getName()
    {
        com.jidesoft.plaf.CachedLookAndFeel r0;

        r0 := @this: com.jidesoft.plaf.CachedLookAndFeel;

        return "CachedLookAndFeel";
    }

    public java.lang.String getID()
    {
        com.jidesoft.plaf.CachedLookAndFeel r0;

        r0 := @this: com.jidesoft.plaf.CachedLookAndFeel;

        return "CachedLookAndFeel";
    }

    public java.lang.String getDescription()
    {
        com.jidesoft.plaf.CachedLookAndFeel r0;

        r0 := @this: com.jidesoft.plaf.CachedLookAndFeel;

        return "Provide customized behaviour for getUI() method";
    }

    public boolean isNativeLookAndFeel()
    {
        com.jidesoft.plaf.CachedLookAndFeel r0;

        r0 := @this: com.jidesoft.plaf.CachedLookAndFeel;

        return 0;
    }

    public boolean isSupportedLookAndFeel()
    {
        com.jidesoft.plaf.CachedLookAndFeel r0;

        r0 := @this: com.jidesoft.plaf.CachedLookAndFeel;

        return 1;
    }

    public javax.swing.UIDefaults getDefaults()
    {
        javax.swing.UIDefaults $r1;
        com.jidesoft.plaf.CachedLookAndFeel r0;

        r0 := @this: com.jidesoft.plaf.CachedLookAndFeel;

        $r1 = r0.<com.jidesoft.plaf.CachedLookAndFeel: javax.swing.UIDefaults customDefaults>;

        return $r1;
    }

    public static void installJideExtension(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0;

        r0 := @parameter0: java.lang.ClassLoader;

        staticinvoke <com.jidesoft.plaf.CachedLookAndFeel: void installJideExtension(java.lang.ClassLoader,boolean)>(r0, 0);

        return;
    }

    public static void installJideExtension(java.lang.ClassLoader, boolean)
    {
        java.lang.Object[] $r6;
        java.lang.Class[] $r3;
        java.lang.Integer $r7;
        java.lang.Exception $r8;
        int $i0;
        java.lang.Class $r2, $r4;
        java.lang.ClassLoader r0, $r1;
        java.lang.reflect.Method $r5;
        boolean z0;

        r0 := @parameter0: java.lang.ClassLoader;

        z0 := @parameter1: boolean;

        $r1 = <com.jidesoft.plaf.CachedLookAndFeel: java.lang.ClassLoader currentLoader>;

        if $r1 != r0 goto label1;

        if z0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.jidesoft.plaf.LookAndFeelFactory");

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[0] = $r4;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("installJideExtension", $r3);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getDefaultStyle()>();

        staticinvoke <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>("jidesoft.extensionInstalled", null);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r7;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        <com.jidesoft.plaf.CachedLookAndFeel: java.lang.ClassLoader currentLoader> = r0;

        staticinvoke <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClassLoader", r0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void reinstallJideExtension()
    {
        java.lang.ClassLoader $r0;

        $r0 = <com.jidesoft.plaf.CachedLookAndFeel: java.lang.ClassLoader currentLoader>;

        staticinvoke <com.jidesoft.plaf.CachedLookAndFeel: void installJideExtension(java.lang.ClassLoader,boolean)>($r0, 1);

        return;
    }

    private static void removeCachedClass(javax.swing.UIDefaults, java.lang.Class)
    {
        javax.swing.UIDefaults r1;
        java.lang.Class r0;
        java.lang.String $r2;

        r1 := @parameter0: javax.swing.UIDefaults;

        r0 := @parameter1: java.lang.Class;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<javax.swing.UIDefaults: java.lang.Object remove(java.lang.Object)>($r2);

        virtualinvoke r1.<javax.swing.UIDefaults: java.lang.Object remove(java.lang.Object)>(r0);

     label1:
        return;
    }

    static void access$000(javax.swing.UIDefaults, java.lang.Class)
    {
        javax.swing.UIDefaults r0;
        java.lang.Class r1;

        r0 := @parameter0: javax.swing.UIDefaults;

        r1 := @parameter1: java.lang.Class;

        staticinvoke <com.jidesoft.plaf.CachedLookAndFeel: void removeCachedClass(javax.swing.UIDefaults,java.lang.Class)>(r0, r1);

        return;
    }
}
