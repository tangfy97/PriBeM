public class org.apache.neethi.builders.converters.OMToStaxConverter extends org.apache.neethi.builders.converters.AbstractOMConverter implements org.apache.neethi.builders.converters.Converter
{

    public void <init>()
    {
        org.apache.neethi.builders.converters.OMToStaxConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.OMToStaxConverter;

        specialinvoke r0.<org.apache.neethi.builders.converters.AbstractOMConverter: void <init>()>();

        return;
    }

    public javax.xml.stream.XMLStreamReader convert(org.apache.axiom.om.OMElement)
    {
        org.apache.axiom.om.OMElement r0;
        javax.xml.stream.XMLStreamReader $r1;
        org.apache.neethi.builders.converters.OMToStaxConverter r2;

        r2 := @this: org.apache.neethi.builders.converters.OMToStaxConverter;

        r0 := @parameter0: org.apache.axiom.om.OMElement;

        $r1 = interfaceinvoke r0.<org.apache.axiom.om.OMElement: javax.xml.stream.XMLStreamReader getXMLStreamReader()>();

        return $r1;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.apache.axiom.om.OMElement $r2;
        javax.xml.stream.XMLStreamReader $r3;
        org.apache.neethi.builders.converters.OMToStaxConverter r0;
        java.lang.Object r1;

        r0 := @this: org.apache.neethi.builders.converters.OMToStaxConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.axiom.om.OMElement) r1;

        $r3 = virtualinvoke r0.<org.apache.neethi.builders.converters.OMToStaxConverter: javax.xml.stream.XMLStreamReader convert(org.apache.axiom.om.OMElement)>($r2);

        return $r3;
    }

    public volatile java.util.Iterator getChildren(java.lang.Object)
    {
        org.apache.axiom.om.OMElement $r2;
        java.util.Iterator $r3;
        org.apache.neethi.builders.converters.OMToStaxConverter r0;
        java.lang.Object r1;

        r0 := @this: org.apache.neethi.builders.converters.OMToStaxConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.axiom.om.OMElement) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractOMConverter: java.util.Iterator getChildren(org.apache.axiom.om.OMElement)>($r2);

        return $r3;
    }

    public volatile java.util.Map getAttributes(java.lang.Object)
    {
        org.apache.axiom.om.OMElement $r2;
        org.apache.neethi.builders.converters.OMToStaxConverter r0;
        java.util.Map $r3;
        java.lang.Object r1;

        r0 := @this: org.apache.neethi.builders.converters.OMToStaxConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.axiom.om.OMElement) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractOMConverter: java.util.Map getAttributes(org.apache.axiom.om.OMElement)>($r2);

        return $r3;
    }

    public volatile javax.xml.namespace.QName getQName(java.lang.Object)
    {
        org.apache.axiom.om.OMElement $r2;
        org.apache.neethi.builders.converters.OMToStaxConverter r0;
        java.lang.Object r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.neethi.builders.converters.OMToStaxConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.axiom.om.OMElement) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractOMConverter: javax.xml.namespace.QName getQName(org.apache.axiom.om.OMElement)>($r2);

        return $r3;
    }
}
