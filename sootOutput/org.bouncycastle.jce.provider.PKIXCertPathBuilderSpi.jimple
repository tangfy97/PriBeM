public class org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi extends java.security.cert.CertPathBuilderSpi
{
    private java.lang.Exception certPathException;

    public void <init>()
    {
        org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi r0;

        r0 := @this: org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi;

        specialinvoke r0.<java.security.cert.CertPathBuilderSpi: void <init>()>();

        return;
    }

    public java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters) throws java.security.cert.CertPathBuilderException, java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.X509Certificate r25;
        java.security.cert.CertPathParameters r0;
        org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi r12;
        org.bouncycastle.x509.ExtendedPKIXParameters $r2;
        org.bouncycastle.jce.exception.ExtCertPathBuilderException $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.bouncycastle.x509.X509CertStoreSelector $r5, $r8;
        java.util.Collection $r7, $r10;
        org.bouncycastle.x509.ExtendedPKIXBuilderParameters r53;
        java.security.cert.CertPathBuilderResult r54;
        java.lang.Exception $r13, $r15, $r16, $r18, $r20, $r22;
        java.security.cert.PKIXBuilderParameters $r1;
        java.util.List $r6, $r9;
        java.lang.StringBuilder $r28, $r29, $r32, $r33, $r36, $r37, $r40, $r41, $r44, $r45, $r48, $r49;
        java.lang.Throwable $r23;
        java.util.ArrayList $r3;
        java.security.InvalidAlgorithmParameterException $r39;
        java.security.cert.CertPathBuilderException $r14, $r17, $r19, $r26, $r27;
        org.bouncycastle.jce.provider.AnnotatedException $r51;
        java.lang.String $r21, $r31, $r35, $r38, $r43, $r47, $r50;
        org.bouncycastle.util.Selector $r4;
        java.util.Iterator $r11;
        java.lang.Object $r24;
        java.lang.Class $r30, $r34, $r42, $r46;

        r12 := @this: org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi;

        r0 := @parameter0: java.security.cert.CertPathParameters;

        $z0 = r0 instanceof java.security.cert.PKIXBuilderParameters;

        if $z0 != 0 goto label01;

        $z6 = r0 instanceof org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        if $z6 != 0 goto label01;

        $r39 = new java.security.InvalidAlgorithmParameterException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameters must be an instance of ");

        $r42 = class "Ljava/security/cert/PKIXBuilderParameters;";

        $r43 = virtualinvoke $r42.<java.lang.Class: java.lang.String getName()>();

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r46 = class "Lorg/bouncycastle/x509/ExtendedPKIXBuilderParameters;";

        $r47 = virtualinvoke $r46.<java.lang.Class: java.lang.String getName()>();

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r50);

        throw $r39;

     label01:
        $z1 = r0 instanceof org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        if $z1 == 0 goto label02;

        r53 = (org.bouncycastle.x509.ExtendedPKIXBuilderParameters) r0;

        goto label03;

     label02:
        $r1 = (java.security.cert.PKIXBuilderParameters) r0;

        $r2 = staticinvoke <org.bouncycastle.x509.ExtendedPKIXBuilderParameters: org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)>($r1);

        r53 = (org.bouncycastle.x509.ExtendedPKIXBuilderParameters) $r2;

     label03:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r53.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: org.bouncycastle.util.Selector getTargetConstraints()>();

        $z2 = $r4 instanceof org.bouncycastle.x509.X509CertStoreSelector;

        if $z2 != 0 goto label04;

        $r27 = new java.security.cert.CertPathBuilderException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TargetConstraints must be an instance of ");

        $r30 = class "Lorg/bouncycastle/x509/X509CertStoreSelector;";

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r34 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $r35 = virtualinvoke $r34.<java.lang.Class: java.lang.String getName()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class.");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>($r38);

        throw $r27;

     label04:
        $r5 = (org.bouncycastle.x509.X509CertStoreSelector) $r4;

        $r6 = virtualinvoke r53.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getStores()>();

        $r7 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r5, $r6);

        $r8 = (org.bouncycastle.x509.X509CertStoreSelector) $r4;

        $r9 = virtualinvoke r53.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getCertStores()>();

        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r8, $r9);

        interfaceinvoke $r7.<java.util.Collection: boolean addAll(java.util.Collection)>($r10);

     label05:
        goto label07;

     label06:
        $r51 := @caughtexception;

        $r52 = new org.bouncycastle.jce.exception.ExtCertPathBuilderException;

        specialinvoke $r52.<org.bouncycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("Error finding target certificate.", $r51);

        throw $r52;

     label07:
        $z3 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label08;

        $r26 = new java.security.cert.CertPathBuilderException;

        specialinvoke $r26.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>("No certificate found matching targetContraints.");

        throw $r26;

     label08:
        r54 = null;

        $r11 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        if r54 != null goto label10;

        $r24 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.security.cert.X509Certificate) $r24;

        r54 = virtualinvoke r12.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)>(r25, r53, $r3);

        goto label09;

     label10:
        if r54 != null goto label12;

        $r15 = r12.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.lang.Exception certPathException>;

        if $r15 == null goto label12;

        $r16 = r12.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.lang.Exception certPathException>;

        $z5 = $r16 instanceof org.bouncycastle.jce.provider.AnnotatedException;

        if $z5 == 0 goto label11;

        $r19 = new java.security.cert.CertPathBuilderException;

        $r20 = r12.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.lang.Exception certPathException>;

        $r21 = virtualinvoke $r20.<java.lang.Exception: java.lang.String getMessage()>();

        $r22 = r12.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.lang.Exception certPathException>;

        $r23 = virtualinvoke $r22.<java.lang.Exception: java.lang.Throwable getCause()>();

        specialinvoke $r19.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r23);

        throw $r19;

     label11:
        $r17 = new java.security.cert.CertPathBuilderException;

        $r18 = r12.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.lang.Exception certPathException>;

        specialinvoke $r17.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("Possible certificate chain could not be validated.", $r18);

        throw $r17;

     label12:
        if r54 != null goto label13;

        $r13 = r12.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.lang.Exception certPathException>;

        if $r13 != null goto label13;

        $r14 = new java.security.cert.CertPathBuilderException;

        specialinvoke $r14.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>("Unable to find certificate chain.");

        throw $r14;

     label13:
        return r54;

        catch org.bouncycastle.jce.provider.AnnotatedException from label04 to label05 with label06;
    }

    protected java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate, org.bouncycastle.x509.ExtendedPKIXBuilderParameters, java.util.List)
    {
        java.security.cert.X509Certificate r1, r34;
        org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi r13;
        java.security.cert.CertificateFactory $r4;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r10;
        org.bouncycastle.x509.ExtendedPKIXBuilderParameters r2;
        java.util.Set $r3, $r6;
        java.security.cert.CertPathValidator $r5;
        java.security.cert.CertPathBuilderResult r32;
        java.security.cert.CertPathValidatorResult $r16;
        java.lang.Exception $r26, $r28, $r30;
        java.security.cert.PolicyNode $r19;
        java.util.List r0;
        java.security.cert.TrustAnchor $r8, $r18;
        java.security.cert.CertificateParsingException $r24;
        java.security.cert.PKIXCertPathValidatorResult r33;
        java.util.HashSet $r40;
        int $i0, $i1, $i2, $i3, $i5;
        org.bouncycastle.jce.provider.AnnotatedException $r21, $r22, $r36, $r37, $r39, $r41, $r42;
        java.lang.String $r7;
        java.util.Iterator $r11;
        java.security.PublicKey $r20;
        java.security.cert.CertPath $r15;
        java.lang.RuntimeException $r35;
        java.security.cert.PKIXCertPathBuilderResult $r38;
        java.lang.Object $r12;

        r13 := @this: org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 := @parameter1: org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        r0 := @parameter2: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r3 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.Set getExcludedCerts()>();

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label02;

        return null;

     label02:
        $i0 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: int getMaxPathLength()>();

        $i5 = (int) -1;

        if $i0 == $i5 goto label03;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $i3 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: int getMaxPathLength()>();

        if $i2 <= $i3 goto label03;

        return null;

     label03:
        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        r32 = null;

     label04:
        $r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "BC");

        $r5 = staticinvoke <java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)>("PKIX", "BC");

     label05:
        goto label07;

     label06:
        $r30 := @caughtexception;

        $r35 = new java.lang.RuntimeException;

        specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String)>("Exception creating support classes.");

        throw $r35;

     label07:
        $r6 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.Set getTrustAnchors()>();

        $r7 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.lang.String getSigProvider()>();

        $r8 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)>(r1, $r6, $r7);

        if $r8 == null goto label16;

     label08:
        $r15 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>(r0);

     label09:
        goto label11;

     label10:
        $r28 := @caughtexception;

        $r36 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r36.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path could not be constructed from certificate list.", $r28);

        throw $r36;

     label11:
        $r16 = virtualinvoke $r5.<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>($r15, r2);

        r33 = (java.security.cert.PKIXCertPathValidatorResult) $r16;

     label12:
        goto label14;

     label13:
        $r26 := @caughtexception;

        $r37 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r37.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path could not be validated.", $r26);

        throw $r37;

     label14:
        $r38 = new java.security.cert.PKIXCertPathBuilderResult;

        $r18 = virtualinvoke r33.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor getTrustAnchor()>();

        $r19 = virtualinvoke r33.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode getPolicyTree()>();

        $r20 = virtualinvoke r33.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey getPublicKey()>();

        specialinvoke $r38.<java.security.cert.PKIXCertPathBuilderResult: void <init>(java.security.cert.CertPath,java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>($r15, $r18, $r19, $r20);

     label15:
        return $r38;

     label16:
        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)>(r1, r2);

     label17:
        goto label19;

     label18:
        $r24 := @caughtexception;

        $r39 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r39.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No additiontal X.509 stores can be added from certificate locations.", $r24);

        throw $r39;

     label19:
        $r40 = new java.util.HashSet;

        specialinvoke $r40.<java.util.HashSet: void <init>()>();

     label20:
        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findIssuerCerts(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters)>(r1, r2);

        interfaceinvoke $r40.<java.util.Collection: boolean addAll(java.util.Collection)>($r10);

     label21:
        goto label23;

     label22:
        $r22 := @caughtexception;

        $r41 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r41.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot find issuer certificate for certificate in certification path.", $r22);

        throw $r41;

     label23:
        $z2 = interfaceinvoke $r40.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label24;

        $r42 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r42.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No issuer certificate for certificate in certification path found.");

        throw $r42;

     label24:
        $r11 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>();

     label25:
        $z3 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label26;

        if r32 != null goto label26;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r34 = (java.security.cert.X509Certificate) $r12;

        r32 = virtualinvoke r13.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)>(r34, r2, r0);

        goto label25;

     label26:
        goto label28;

     label27:
        $r21 := @caughtexception;

        r13.<org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi: java.lang.Exception certPathException> = $r21;

     label28:
        if r32 != null goto label29;

        interfaceinvoke r0.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label29:
        return r32;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.security.cert.CertificateParsingException from label16 to label17 with label18;
        catch org.bouncycastle.jce.provider.AnnotatedException from label20 to label21 with label22;
        catch org.bouncycastle.jce.provider.AnnotatedException from label07 to label15 with label27;
        catch org.bouncycastle.jce.provider.AnnotatedException from label16 to label26 with label27;
    }
}
