public class org.waveprotocol.wave.communication.gwt.JsonMessage extends com.google.gwt.core.client.JavaScriptObject
{
    private static final org.waveprotocol.wave.communication.gwt.JsonSerializer serializer;
    private static boolean registerToString;

    protected void <init>()
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage r0;

        r0 := @this: org.waveprotocol.wave.communication.gwt.JsonMessage;

        specialinvoke r0.<com.google.gwt.core.client.JavaScriptObject: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.communication.gwt.JsonMessage createJsonMessage()
    {
        com.google.gwt.core.client.JavaScriptObject $r0, $r1;
        org.waveprotocol.wave.communication.gwt.JsonMessage r2;

        $r0 = staticinvoke <com.google.gwt.core.client.JavaScriptObject: com.google.gwt.core.client.JavaScriptObject createObject()>();

        $r1 = virtualinvoke $r0.<com.google.gwt.core.client.JavaScriptObject: com.google.gwt.core.client.JavaScriptObject cast()>();

        r2 = (org.waveprotocol.wave.communication.gwt.JsonMessage) $r1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: void registerNativeJsonMessageToString(org.waveprotocol.wave.communication.gwt.JsonMessage)>(r2);

        return r2;
    }

    public final native void clear();

    public final native void copyFrom(org.waveprotocol.wave.communication.gwt.JsonMessage);

    public final java.lang.String toJson()
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage r0;
        org.waveprotocol.wave.communication.gwt.JsonSerializer $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.communication.gwt.JsonMessage;

        $r1 = <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonSerializer serializer>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.communication.gwt.JsonSerializer: java.lang.String serialize(com.google.gwt.core.client.JavaScriptObject)>(r0);

        return $r2;
    }

    public static org.waveprotocol.wave.communication.gwt.JsonMessage parse(java.lang.String) throws org.waveprotocol.wave.communication.json.JsonException
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage $r1, $r3;
        com.google.gwt.core.client.JavaScriptObject $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonMessage createJsonMessage(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.communication.gwt.JsonMessage: com.google.gwt.core.client.JavaScriptObject cast()>();

        $r3 = (org.waveprotocol.wave.communication.gwt.JsonMessage) $r2;

        return $r3;
    }

    public static org.waveprotocol.wave.communication.gwt.JsonMessage createJsonMessage(java.lang.String) throws org.waveprotocol.wave.communication.json.JsonException
    {
        com.google.gwt.core.client.JavaScriptObject $r2;
        org.waveprotocol.wave.communication.gwt.JsonMessage r5;
        java.lang.String r0;
        org.waveprotocol.wave.communication.gwt.JsonSerializer $r1;
        com.google.gwt.core.client.JavaScriptException $r3;
        org.waveprotocol.wave.communication.json.JsonException $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonSerializer serializer>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.communication.gwt.JsonSerializer: com.google.gwt.core.client.JavaScriptObject parse(java.lang.String)>(r0);

        r5 = (org.waveprotocol.wave.communication.gwt.JsonMessage) $r2;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: void registerNativeJsonMessageToString(org.waveprotocol.wave.communication.gwt.JsonMessage)>(r5);

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.waveprotocol.wave.communication.json.JsonException;

        specialinvoke $r4.<org.waveprotocol.wave.communication.json.JsonException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch com.google.gwt.core.client.JavaScriptException from label1 to label2 with label3;
    }

    public static org.waveprotocol.wave.communication.gwt.JsonMessage createJsonMessage(org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.json.JsonException
    {
        com.google.gwt.core.client.JavaScriptObject $r3;
        org.waveprotocol.wave.communication.gwt.JsonMessage r6;
        org.waveprotocol.wave.communication.gwt.JsonSerializer $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.communication.json.RawStringData r0;
        com.google.gwt.core.client.JavaScriptException $r4;
        org.waveprotocol.wave.communication.json.JsonException $r5;

        r0 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

     label1:
        $r1 = <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonSerializer serializer>;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.communication.json.RawStringData: java.lang.String getBaseString()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.communication.gwt.JsonSerializer: com.google.gwt.core.client.JavaScriptObject parse(java.lang.String)>($r2);

        r6 = (org.waveprotocol.wave.communication.gwt.JsonMessage) $r3;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void registerRawStringData(com.google.gwt.core.client.JavaScriptObject,org.waveprotocol.wave.communication.json.RawStringData)>(r6, r0);

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: void registerNativeJsonMessageToString(org.waveprotocol.wave.communication.gwt.JsonMessage)>(r6);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.waveprotocol.wave.communication.json.JsonException;

        specialinvoke $r5.<org.waveprotocol.wave.communication.json.JsonException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch com.google.gwt.core.client.JavaScriptException from label1 to label2 with label3;
    }

    public final native boolean nativeIsEqualTo(java.lang.Object);

    private static final java.lang.String jsonMessageToJson(org.waveprotocol.wave.communication.gwt.JsonMessage)
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage r0;
        java.lang.String $r1;

        r0 := @parameter0: org.waveprotocol.wave.communication.gwt.JsonMessage;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: java.lang.String toJson()>();

        return $r1;
    }

    public static void enableJsoToString()
    {
        <org.waveprotocol.wave.communication.gwt.JsonMessage: boolean registerToString> = 1;

        return;
    }

    public static void disableJsoToString()
    {
        <org.waveprotocol.wave.communication.gwt.JsonMessage: boolean registerToString> = 0;

        return;
    }

    protected static final void registerNativeJsonMessageToString(org.waveprotocol.wave.communication.gwt.JsonMessage)
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage r0;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.communication.gwt.JsonMessage;

        $z0 = <org.waveprotocol.wave.communication.gwt.JsonMessage: boolean registerToString>;

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: void nativeRegisterNativeJsonMessageToString(org.waveprotocol.wave.communication.gwt.JsonMessage)>(r0);

     label1:
        return;
    }

    private static final native void nativeRegisterNativeJsonMessageToString(org.waveprotocol.wave.communication.gwt.JsonMessage);

    static void <clinit>()
    {
        org.waveprotocol.wave.communication.gwt.BrowserAidedJsonSerailizer $r1;
        org.waveprotocol.wave.communication.gwt.JavascriptJsonSerializer $r0;
        boolean $z0, $z1;

        <org.waveprotocol.wave.communication.gwt.JsonMessage: boolean registerToString> = 0;

        $z0 = staticinvoke <com.google.gwt.core.client.GWT: boolean isClient()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.waveprotocol.wave.communication.gwt.BrowserAidedJsonSerailizer: boolean hasBrowserSupport()>();

        if $z1 == 0 goto label1;

        $r1 = new org.waveprotocol.wave.communication.gwt.BrowserAidedJsonSerailizer;

        specialinvoke $r1.<org.waveprotocol.wave.communication.gwt.BrowserAidedJsonSerailizer: void <init>()>();

        <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonSerializer serializer> = $r1;

        goto label2;

     label1:
        $r0 = new org.waveprotocol.wave.communication.gwt.JavascriptJsonSerializer;

        specialinvoke $r0.<org.waveprotocol.wave.communication.gwt.JavascriptJsonSerializer: void <init>()>();

        <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonSerializer serializer> = $r0;

     label2:
        return;
    }
}
