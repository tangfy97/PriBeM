class com.mycila.inject.internal.cglib.proxy.FixedValueGenerator extends java.lang.Object implements com.mycila.inject.internal.cglib.proxy.CallbackGenerator
{
    public static final com.mycila.inject.internal.cglib.proxy.FixedValueGenerator INSTANCE;
    private static final com.mycila.inject.internal.asm.Type FIXED_VALUE;
    private static final com.mycila.inject.internal.cglib.core.Signature LOAD_OBJECT;

    void <init>()
    {
        com.mycila.inject.internal.cglib.proxy.FixedValueGenerator r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.FixedValueGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void generate(com.mycila.inject.internal.cglib.core.ClassEmitter, com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context, java.util.List)
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.cglib.core.Signature $r7;
        com.mycila.inject.internal.asm.Type $r8, $r9;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r6;
        com.mycila.inject.internal.cglib.core.MethodInfo r3;
        com.mycila.inject.internal.cglib.core.ClassEmitter r5;
        java.util.List r0;
        com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context r4;
        int $i0;
        com.mycila.inject.internal.cglib.proxy.FixedValueGenerator r10;
        java.lang.Object $r2;
        boolean $z0;

        r10 := @this: com.mycila.inject.internal.cglib.proxy.FixedValueGenerator;

        r5 := @parameter0: com.mycila.inject.internal.cglib.core.ClassEmitter;

        r4 := @parameter1: com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context;

        r0 := @parameter2: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.mycila.inject.internal.cglib.core.MethodInfo) $r2;

        $r6 = interfaceinvoke r4.<com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context: com.mycila.inject.internal.cglib.core.CodeEmitter beginMethod(com.mycila.inject.internal.cglib.core.ClassEmitter,com.mycila.inject.internal.cglib.core.MethodInfo)>(r5, r3);

        $i0 = interfaceinvoke r4.<com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context: int getIndex(com.mycila.inject.internal.cglib.core.MethodInfo)>(r3);

        interfaceinvoke r4.<com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context: void emitCallback(com.mycila.inject.internal.cglib.core.CodeEmitter,int)>($r6, $i0);

        $r8 = <com.mycila.inject.internal.cglib.proxy.FixedValueGenerator: com.mycila.inject.internal.asm.Type FIXED_VALUE>;

        $r7 = <com.mycila.inject.internal.cglib.proxy.FixedValueGenerator: com.mycila.inject.internal.cglib.core.Signature LOAD_OBJECT>;

        virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void invoke_interface(com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.cglib.core.Signature)>($r8, $r7);

        $r9 = virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: com.mycila.inject.internal.asm.Type getReturnType()>();

        virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void unbox_or_zero(com.mycila.inject.internal.asm.Type)>($r9);

        virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void end_method()>();

        goto label1;

     label2:
        return;
    }

    public void generateStatic(com.mycila.inject.internal.cglib.core.CodeEmitter, com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context, java.util.List)
    {
        java.util.List r3;
        com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context r2;
        com.mycila.inject.internal.cglib.proxy.FixedValueGenerator r0;
        com.mycila.inject.internal.cglib.core.CodeEmitter r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.FixedValueGenerator;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r2 := @parameter1: com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context;

        r3 := @parameter2: java.util.List;

        return;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.proxy.FixedValueGenerator $r0;
        com.mycila.inject.internal.asm.Type $r1;
        com.mycila.inject.internal.cglib.core.Signature $r2;

        $r0 = new com.mycila.inject.internal.cglib.proxy.FixedValueGenerator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.proxy.FixedValueGenerator: void <init>()>();

        <com.mycila.inject.internal.cglib.proxy.FixedValueGenerator: com.mycila.inject.internal.cglib.proxy.FixedValueGenerator INSTANCE> = $r0;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.asm.Type parseType(java.lang.String)>("com.mycila.inject.internal.cglib.proxy.FixedValue");

        <com.mycila.inject.internal.cglib.proxy.FixedValueGenerator: com.mycila.inject.internal.asm.Type FIXED_VALUE> = $r1;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("Object loadObject()");

        <com.mycila.inject.internal.cglib.proxy.FixedValueGenerator: com.mycila.inject.internal.cglib.core.Signature LOAD_OBJECT> = $r2;

        return;
    }
}
