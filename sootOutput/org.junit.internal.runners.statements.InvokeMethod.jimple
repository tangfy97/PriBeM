public class org.junit.internal.runners.statements.InvokeMethod extends org.junit.runners.model.Statement
{
    private final org.junit.runners.model.FrameworkMethod fTestMethod;
    private java.lang.Object fTarget;

    public void <init>(org.junit.runners.model.FrameworkMethod, java.lang.Object)
    {
        org.junit.internal.runners.statements.InvokeMethod r0;
        java.lang.Object r2;
        org.junit.runners.model.FrameworkMethod r1;

        r0 := @this: org.junit.internal.runners.statements.InvokeMethod;

        r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        r0.<org.junit.internal.runners.statements.InvokeMethod: org.junit.runners.model.FrameworkMethod fTestMethod> = r1;

        r0.<org.junit.internal.runners.statements.InvokeMethod: java.lang.Object fTarget> = r2;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        org.junit.internal.runners.statements.InvokeMethod r0;
        java.lang.Object[] $r1;
        org.junit.runners.model.FrameworkMethod $r3;
        java.lang.Object $r2;

        r0 := @this: org.junit.internal.runners.statements.InvokeMethod;

        $r3 = r0.<org.junit.internal.runners.statements.InvokeMethod: org.junit.runners.model.FrameworkMethod fTestMethod>;

        $r2 = r0.<org.junit.internal.runners.statements.InvokeMethod: java.lang.Object fTarget>;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r3.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r2, $r1);

        return;
    }
}
