public class org.bouncycastle.asn1.DERTaggedObject extends org.bouncycastle.asn1.ASN1TaggedObject
{
    private static final byte[] ZERO_BYTES;

    public void <init>(int, org.bouncycastle.asn1.DEREncodable)
    {
        int i0;
        org.bouncycastle.asn1.DERTaggedObject r0;
        org.bouncycastle.asn1.DEREncodable r1;

        r0 := @this: org.bouncycastle.asn1.DERTaggedObject;

        i0 := @parameter0: int;

        r1 := @parameter1: org.bouncycastle.asn1.DEREncodable;

        specialinvoke r0.<org.bouncycastle.asn1.ASN1TaggedObject: void <init>(int,org.bouncycastle.asn1.DEREncodable)>(i0, r1);

        return;
    }

    public void <init>(boolean, int, org.bouncycastle.asn1.DEREncodable)
    {
        org.bouncycastle.asn1.DERTaggedObject r0;
        org.bouncycastle.asn1.DEREncodable r1;
        int i0;
        boolean z0;

        r0 := @this: org.bouncycastle.asn1.DERTaggedObject;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: org.bouncycastle.asn1.DEREncodable;

        specialinvoke r0.<org.bouncycastle.asn1.ASN1TaggedObject: void <init>(boolean,int,org.bouncycastle.asn1.DEREncodable)>(z0, i0, r1);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.bouncycastle.asn1.DERTaggedObject r0;
        org.bouncycastle.asn1.DERSequence $r1;

        r0 := @this: org.bouncycastle.asn1.DERTaggedObject;

        i0 := @parameter0: int;

        $r1 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r1.<org.bouncycastle.asn1.DERSequence: void <init>()>();

        specialinvoke r0.<org.bouncycastle.asn1.ASN1TaggedObject: void <init>(boolean,int,org.bouncycastle.asn1.DEREncodable)>(0, i0, $r1);

        return;
    }

    void encode(org.bouncycastle.asn1.DEROutputStream) throws java.io.IOException
    {
        byte[] $r2, $r5;
        org.bouncycastle.asn1.DERObject $r4;
        org.bouncycastle.asn1.DEREncodable $r3;
        org.bouncycastle.asn1.DERTaggedObject r0;
        short s7;
        byte $b1, $b2;
        int $i0, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        org.bouncycastle.asn1.DEROutputStream r1;

        r0 := @this: org.bouncycastle.asn1.DERTaggedObject;

        r1 := @parameter0: org.bouncycastle.asn1.DEROutputStream;

        $z0 = r0.<org.bouncycastle.asn1.DERTaggedObject: boolean empty>;

        if $z0 != 0 goto label5;

        $r3 = r0.<org.bouncycastle.asn1.DERTaggedObject: org.bouncycastle.asn1.DEREncodable obj>;

        $r4 = interfaceinvoke $r3.<org.bouncycastle.asn1.DEREncodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.DERObject: byte[] getEncoded(java.lang.String)>("DER");

        $z1 = r0.<org.bouncycastle.asn1.DERTaggedObject: boolean explicit>;

        if $z1 == 0 goto label1;

        $i6 = r0.<org.bouncycastle.asn1.DERTaggedObject: int tagNo>;

        virtualinvoke r1.<org.bouncycastle.asn1.DEROutputStream: void writeEncoded(int,int,byte[])>(160, $i6, $r5);

        goto label4;

     label1:
        $b1 = $r5[0];

        $b2 = $b1 & 32;

        if $b2 == 0 goto label2;

        s7 = 160;

        goto label3;

     label2:
        s7 = 128;

     label3:
        $i3 = r0.<org.bouncycastle.asn1.DERTaggedObject: int tagNo>;

        virtualinvoke r1.<org.bouncycastle.asn1.DEROutputStream: void writeTag(int,int)>(s7, $i3);

        $i4 = lengthof $r5;

        $i5 = $i4 - 1;

        virtualinvoke r1.<org.bouncycastle.asn1.DEROutputStream: void write(byte[],int,int)>($r5, 1, $i5);

     label4:
        goto label6;

     label5:
        $i0 = r0.<org.bouncycastle.asn1.DERTaggedObject: int tagNo>;

        $r2 = <org.bouncycastle.asn1.DERTaggedObject: byte[] ZERO_BYTES>;

        virtualinvoke r1.<org.bouncycastle.asn1.DEROutputStream: void writeEncoded(int,int,byte[])>(160, $i0, $r2);

     label6:
        return;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];

        <org.bouncycastle.asn1.DERTaggedObject: byte[] ZERO_BYTES> = $r0;

        return;
    }
}
