public final class org.apache.lucene.util.PagedBytes$PagedBytesDataInput extends org.apache.lucene.store.DataInput
{
    private int currentBlockIndex;
    private int currentBlockUpto;
    private byte[] currentBlock;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.util.PagedBytes this$0;

    void <init>(org.apache.lucene.util.PagedBytes)
    {
        byte[] $r4;
        java.util.List $r2;
        java.lang.Object $r3;
        org.apache.lucene.util.PagedBytes r1;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        r1 := @parameter0: org.apache.lucene.util.PagedBytes;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0> = r1;

        specialinvoke r0.<org.apache.lucene.store.DataInput: void <init>()>();

        $r2 = staticinvoke <org.apache.lucene.util.PagedBytes: java.util.List access$000(org.apache.lucene.util.PagedBytes)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (byte[]) $r3;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: byte[] currentBlock> = $r4;

        return;
    }

    public org.apache.lucene.util.PagedBytes$PagedBytesDataInput clone()
    {
        long $l0;
        org.apache.lucene.util.PagedBytes $r1;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0, $r2;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        $r1 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$PagedBytesDataInput getDataInput()>();

        $l0 = virtualinvoke r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: long getPosition()>();

        virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: void setPosition(long)>($l0);

        return $r2;
    }

    public long getPosition()
    {
        long $l1, $l3, $l5, $l6, $l7;
        org.apache.lucene.util.PagedBytes $r1;
        int $i0, $i2, $i4;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        $i0 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockIndex>;

        $l1 = (long) $i0;

        $r1 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0>;

        $i2 = staticinvoke <org.apache.lucene.util.PagedBytes: int access$400(org.apache.lucene.util.PagedBytes)>($r1);

        $l3 = (long) $i2;

        $l6 = $l1 * $l3;

        $i4 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto>;

        $l5 = (long) $i4;

        $l7 = $l6 + $l5;

        return $l7;
    }

    public void setPosition(long)
    {
        byte[] $r5;
        long l0, $l2, $l6, $l7;
        org.apache.lucene.util.PagedBytes $r1, $r2, $r6;
        int $i1, $i3, $i4, $i5, $i8;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0>;

        $i1 = staticinvoke <org.apache.lucene.util.PagedBytes: int access$200(org.apache.lucene.util.PagedBytes)>($r1);

        $l2 = l0 >> $i1;

        $i3 = (int) $l2;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockIndex> = $i3;

        $r2 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0>;

        $r3 = staticinvoke <org.apache.lucene.util.PagedBytes: java.util.List access$000(org.apache.lucene.util.PagedBytes)>($r2);

        $i4 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockIndex>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i4);

        $r5 = (byte[]) $r4;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: byte[] currentBlock> = $r5;

        $r6 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0>;

        $i5 = staticinvoke <org.apache.lucene.util.PagedBytes: int access$300(org.apache.lucene.util.PagedBytes)>($r6);

        $l6 = (long) $i5;

        $l7 = l0 & $l6;

        $i8 = (int) $l7;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto> = $i8;

        return;
    }

    public byte readByte()
    {
        byte[] $r2;
        org.apache.lucene.util.PagedBytes $r1;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        $i0 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto>;

        $r1 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0>;

        $i1 = staticinvoke <org.apache.lucene.util.PagedBytes: int access$400(org.apache.lucene.util.PagedBytes)>($r1);

        if $i0 != $i1 goto label1;

        specialinvoke r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: void nextBlock()>();

     label1:
        $r2 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: byte[] currentBlock>;

        $i2 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto> = $i3;

        $b4 = $r2[$i2];

        return $b4;
    }

    public void readBytes(byte[], int, int)
    {
        byte[] r1, $r2, $r3;
        java.lang.AssertionError $r4;
        org.apache.lucene.util.PagedBytes $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        r1 := @parameter0: byte[];

        i8 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = <org.apache.lucene.util.PagedBytes$PagedBytesDataInput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i6 = lengthof r1;

        $i5 = i8 + i0;

        if $i6 >= $i5 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $i7 = i8 + i0;

     label2:
        $r5 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0>;

        $i9 = staticinvoke <org.apache.lucene.util.PagedBytes: int access$400(org.apache.lucene.util.PagedBytes)>($r5);

        $i10 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto>;

        $i11 = $i9 - $i10;

        $i12 = $i7 - i8;

        if $i11 >= $i12 goto label3;

        $r3 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: byte[] currentBlock>;

        $i4 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i4, r1, i8, $i11);

        specialinvoke r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: void nextBlock()>();

        i8 = i8 + $i11;

        goto label4;

     label3:
        $r2 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: byte[] currentBlock>;

        $i1 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, r1, i8, $i12);

        $i2 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto>;

        $i3 = $i2 + $i12;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto> = $i3;

        goto label5;

     label4:
        goto label2;

     label5:
        return;
    }

    private void nextBlock()
    {
        byte[] $r4;
        org.apache.lucene.util.PagedBytes $r1;
        java.util.List $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        $i0 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockIndex> = $i1;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockUpto> = 0;

        $r1 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes this$0>;

        $r2 = staticinvoke <org.apache.lucene.util.PagedBytes: java.util.List access$000(org.apache.lucene.util.PagedBytes)>($r1);

        $i2 = r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int currentBlockIndex>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (byte[]) $r3;

        r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: byte[] currentBlock> = $r4;

        return;
    }

    public volatile org.apache.lucene.store.DataInput clone()
    {
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0, $r1;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        $r1 = virtualinvoke r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes$PagedBytesDataInput clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0, $r1;

        r0 := @this: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        $r1 = virtualinvoke r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes$PagedBytesDataInput clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/PagedBytes;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.PagedBytes$PagedBytesDataInput: boolean $assertionsDisabled> = $z1;

        return;
    }
}
