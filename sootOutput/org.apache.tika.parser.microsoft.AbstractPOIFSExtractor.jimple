abstract class org.apache.tika.parser.microsoft.AbstractPOIFSExtractor extends java.lang.Object
{
    private final org.apache.tika.extractor.EmbeddedDocumentExtractor extractor;
    private org.apache.tika.config.TikaConfig tikaConfig;
    private org.apache.tika.mime.MimeTypes mimeTypes;
    private org.apache.tika.detect.Detector detector;
    private static final org.apache.commons.logging.Log logger;

    protected void <init>(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor $r10;
        org.apache.tika.config.TikaConfig $r5;
        org.apache.tika.extractor.EmbeddedDocumentExtractor r3;
        org.apache.tika.detect.Detector $r9;
        org.apache.tika.parser.ParseContext r1;
        org.apache.tika.mime.MimeTypes $r7;
        org.apache.tika.parser.microsoft.AbstractPOIFSExtractor r0;
        java.lang.Object $r2, $r4, $r6, $r8;

        r0 := @this: org.apache.tika.parser.microsoft.AbstractPOIFSExtractor;

        r1 := @parameter0: org.apache.tika.parser.ParseContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/tika/extractor/EmbeddedDocumentExtractor;");

        r3 = (org.apache.tika.extractor.EmbeddedDocumentExtractor) $r2;

        if r3 != null goto label1;

        $r10 = new org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;

        specialinvoke $r10.<org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor: void <init>(org.apache.tika.parser.ParseContext)>(r1);

        r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.extractor.EmbeddedDocumentExtractor extractor> = $r10;

        goto label2;

     label1:
        r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.extractor.EmbeddedDocumentExtractor extractor> = r3;

     label2:
        $r4 = virtualinvoke r1.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/tika/config/TikaConfig;");

        $r5 = (org.apache.tika.config.TikaConfig) $r4;

        r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.config.TikaConfig tikaConfig> = $r5;

        $r6 = virtualinvoke r1.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/tika/mime/MimeTypes;");

        $r7 = (org.apache.tika.mime.MimeTypes) $r6;

        r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.mime.MimeTypes mimeTypes> = $r7;

        $r8 = virtualinvoke r1.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/tika/detect/Detector;");

        $r9 = (org.apache.tika.detect.Detector) $r8;

        r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.detect.Detector detector> = $r9;

        return;
    }

    protected org.apache.tika.config.TikaConfig getTikaConfig()
    {
        org.apache.tika.parser.microsoft.AbstractPOIFSExtractor r0;
        org.apache.tika.config.TikaConfig $r1, $r2, $r3;

        r0 := @this: org.apache.tika.parser.microsoft.AbstractPOIFSExtractor;

        $r1 = r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.config.TikaConfig tikaConfig>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.tika.config.TikaConfig: org.apache.tika.config.TikaConfig getDefaultConfig()>();

        r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.config.TikaConfig tikaConfig> = $r3;

     label1:
        $r2 = r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.config.TikaConfig tikaConfig>;

        return $r2;
    }

    protected org.apache.tika.detect.Detector getDetector()
    {
        org.apache.tika.parser.microsoft.AbstractPOIFSExtractor r0;
        org.apache.tika.config.TikaConfig $r2;
        org.apache.tika.detect.Detector $r1, $r3, $r4, $r5;

        r0 := @this: org.apache.tika.parser.microsoft.AbstractPOIFSExtractor;

        $r1 = r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.detect.Detector detector>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.detect.Detector detector>;

        return $r5;

     label1:
        $r2 = virtualinvoke r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.config.TikaConfig getTikaConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.tika.config.TikaConfig: org.apache.tika.detect.Detector getDetector()>();

        r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.detect.Detector detector> = $r3;

        $r4 = r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.detect.Detector detector>;

        return $r4;
    }

    protected org.apache.tika.mime.MimeTypes getMimeTypes()
    {
        org.apache.tika.mime.MimeTypes $r1, $r3, $r4, $r5;
        org.apache.tika.parser.microsoft.AbstractPOIFSExtractor r0;
        org.apache.tika.config.TikaConfig $r2;

        r0 := @this: org.apache.tika.parser.microsoft.AbstractPOIFSExtractor;

        $r1 = r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.mime.MimeTypes mimeTypes>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.mime.MimeTypes mimeTypes>;

        return $r5;

     label1:
        $r2 = virtualinvoke r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.config.TikaConfig getTikaConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.tika.config.TikaConfig: org.apache.tika.mime.MimeTypes getMimeRepository()>();

        r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.mime.MimeTypes mimeTypes> = $r3;

        $r4 = r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.mime.MimeTypes mimeTypes>;

        return $r4;
    }

    protected void handleEmbeddedResource(org.apache.tika.io.TikaInputStream, java.lang.String, java.lang.String, java.lang.String, org.apache.tika.sax.XHTMLContentHandler, boolean) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r9;
        org.apache.tika.sax.XHTMLContentHandler r7;
        org.apache.tika.extractor.EmbeddedDocumentExtractor $r5, $r8;
        org.apache.tika.metadata.Metadata $r0;
        org.apache.tika.parser.microsoft.AbstractPOIFSExtractor r4;
        org.apache.tika.io.TikaInputStream r6;
        java.lang.String r1, r2, r3;
        boolean $z0, z1;

        r4 := @this: org.apache.tika.parser.microsoft.AbstractPOIFSExtractor;

        r6 := @parameter0: org.apache.tika.io.TikaInputStream;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r7 := @parameter4: org.apache.tika.sax.XHTMLContentHandler;

        z1 := @parameter5: boolean;

     label1:
        $r0 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r0.<org.apache.tika.metadata.Metadata: void <init>()>();

        if r1 == null goto label2;

        virtualinvoke $r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("tika.mime.file", r1);

        virtualinvoke $r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", r1);

     label2:
        if r2 == null goto label3;

        virtualinvoke $r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("embeddedRelationshipId", r2);

     label3:
        if r3 == null goto label4;

        virtualinvoke $r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", r3);

     label4:
        $r5 = r4.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.extractor.EmbeddedDocumentExtractor extractor>;

        $z0 = interfaceinvoke $r5.<org.apache.tika.extractor.EmbeddedDocumentExtractor: boolean shouldParseEmbedded(org.apache.tika.metadata.Metadata)>($r0);

        if $z0 == 0 goto label5;

        $r8 = r4.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.extractor.EmbeddedDocumentExtractor extractor>;

        interfaceinvoke $r8.<org.apache.tika.extractor.EmbeddedDocumentExtractor: void parseEmbedded(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,boolean)>(r6, r7, $r0, z1);

     label5:
        virtualinvoke r6.<org.apache.tika.io.TikaInputStream: void close()>();

        goto label8;

     label6:
        $r9 := @caughtexception;

     label7:
        virtualinvoke r6.<org.apache.tika.io.TikaInputStream: void close()>();

        throw $r9;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected void handleEmbeddedOfficeDoc(org.apache.poi.poifs.filesystem.DirectoryEntry, org.apache.tika.sax.XHTMLContentHandler) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] $r18, $r39, $r62;
        org.apache.tika.metadata.Metadata $r1, $r24, $r52;
        org.apache.tika.parser.microsoft.AbstractPOIFSExtractor r15;
        java.lang.Exception $r57, $r63;
        org.apache.poi.poifs.filesystem.DirectoryNode $r36;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r31, $r33, $r34, $r40, $r42, $r43, $r45, $r64, $r66, $r68;
        java.lang.Throwable $r56, $r71;
        org.apache.tika.mime.MediaType $r6, $r25, $r53;
        org.apache.tika.exception.TikaException $r58;
        java.lang.String $r2, $r7, $r9, $r12, $r14, $r27, $r29, $r30, $r32, $r35, $r38, $r41, $r44, $r46, $r54, $r55, $r67, $r69, r74;
        org.apache.tika.sax.XHTMLContentHandler r16;
        org.apache.tika.detect.Detector $r23;
        org.apache.tika.mime.MimeTypeException $r59;
        org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType $r3, $r4, $r5;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r21, $r48;
        org.apache.tika.mime.MimeType $r28;
        org.apache.poi.poifs.filesystem.Entry $r20, $r47, $r61;
        org.apache.poi.poifs.filesystem.DocumentEntry $r49, r73;
        boolean $z0, $z1;
        org.apache.poi.poifs.filesystem.DirectoryEntry r0;
        java.io.FileNotFoundException $r60;
        org.apache.poi.poifs.filesystem.Ole10Native $r37;
        org.apache.poi.poifs.filesystem.Ole10NativeException $r70;
        org.apache.tika.extractor.EmbeddedDocumentExtractor $r17, $r75;
        int $i0;
        org.apache.tika.io.TikaInputStream $r19, $r22, $r50, r72;
        org.apache.tika.parser.pkg.ZipContainerDetector $r51;
        org.apache.tika.mime.MimeTypes $r26;
        org.apache.commons.logging.Log $r65;

        r15 := @this: org.apache.tika.parser.microsoft.AbstractPOIFSExtractor;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r16 := @parameter1: org.apache.tika.sax.XHTMLContentHandler;

        $z0 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: boolean hasEntry(java.lang.String)>("Package");

        if $z0 == 0 goto label05;

        $r47 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("Package");

        $r48 = new org.apache.poi.poifs.filesystem.DocumentInputStream;

        $r49 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r47;

        specialinvoke $r48.<org.apache.poi.poifs.filesystem.DocumentInputStream: void <init>(org.apache.poi.poifs.filesystem.DocumentEntry)>($r49);

        $r50 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream)>($r48);

     label01:
        $r51 = new org.apache.tika.parser.pkg.ZipContainerDetector;

        specialinvoke $r51.<org.apache.tika.parser.pkg.ZipContainerDetector: void <init>()>();

        $r52 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r52.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r53 = virtualinvoke $r51.<org.apache.tika.parser.pkg.ZipContainerDetector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r50, $r52);

        $r54 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        $r55 = virtualinvoke $r53.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: void handleEmbeddedResource(org.apache.tika.io.TikaInputStream,java.lang.String,java.lang.String,java.lang.String,org.apache.tika.sax.XHTMLContentHandler,boolean)>($r50, null, $r54, $r55, r16, 1);

     label02:
        virtualinvoke $r50.<org.apache.tika.io.TikaInputStream: void close()>();

        return;

     label03:
        $r71 := @caughtexception;

     label04:
        virtualinvoke $r50.<org.apache.tika.io.TikaInputStream: void close()>();

        throw $r71;

     label05:
        $r1 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r1.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        virtualinvoke $r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("embeddedRelationshipId", $r2);

        $r3 = staticinvoke <org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType detectType(org.apache.poi.poifs.filesystem.DirectoryEntry)>(r0);

        r72 = null;

     label06:
        $r4 = <org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType OLE10_NATIVE>;

        if $r3 != $r4 goto label12;

     label07:
        $r36 = (org.apache.poi.poifs.filesystem.DirectoryNode) r0;

        $r37 = staticinvoke <org.apache.poi.poifs.filesystem.Ole10Native: org.apache.poi.poifs.filesystem.Ole10Native createFromEmbeddedOleObject(org.apache.poi.poifs.filesystem.DirectoryNode)>($r36);

        $r38 = virtualinvoke $r37.<org.apache.poi.poifs.filesystem.Ole10Native: java.lang.String getLabel()>();

        if $r38 == null goto label08;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r44 = virtualinvoke $r37.<org.apache.poi.poifs.filesystem.Ole10Native: java.lang.String getLabel()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r46);

     label08:
        $r39 = virtualinvoke $r37.<org.apache.poi.poifs.filesystem.Ole10Native: byte[] getDataBuffer()>();

        r72 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[])>($r39);

     label09:
        goto label24;

     label10:
        $r70 := @caughtexception;

        goto label24;

     label11:
        $r63 := @caughtexception;

        $r65 = <org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.commons.logging.Log logger>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unexpected exception while parsing possible OLE10_NATIVE embedded document ");

        $r67 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r65.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r69, $r63);

        goto label24;

     label12:
        $r5 = <org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType COMP_OBJ>;

        if $r3 != $r5 goto label23;

     label13:
        $r20 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("CONTENTS");

        r73 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r20;

     label14:
        goto label16;

     label15:
        $r60 := @caughtexception;

        $r61 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("Contents");

        r73 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r61;

     label16:
        $r21 = new org.apache.poi.poifs.filesystem.DocumentInputStream;

        specialinvoke $r21.<org.apache.poi.poifs.filesystem.DocumentInputStream: void <init>(org.apache.poi.poifs.filesystem.DocumentEntry)>(r73);

        $i0 = interfaceinvoke r73.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r62 = newarray (byte)[$i0];

        virtualinvoke $r21.<org.apache.poi.poifs.filesystem.DocumentInputStream: void readFully(byte[])>($r62);

        $r22 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[])>($r62);

        r72 = $r22;

        $r23 = virtualinvoke r15.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.detect.Detector getDetector()>();

        $r24 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r24.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r25 = interfaceinvoke $r23.<org.apache.tika.detect.Detector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r22, $r24);

        r74 = virtualinvoke $r3.<org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: java.lang.String getExtension()>();

     label17:
        $r26 = virtualinvoke r15.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.mime.MimeTypes getMimeTypes()>();

        $r27 = virtualinvoke $r25.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        $r28 = virtualinvoke $r26.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType forName(java.lang.String)>($r27);

        r74 = virtualinvoke $r28.<org.apache.tika.mime.MimeType: java.lang.String getExtension()>();

     label18:
        goto label20;

     label19:
        $r59 := @caughtexception;

     label20:
        $r29 = virtualinvoke $r25.<org.apache.tika.mime.MediaType: java.lang.String getType()>();

        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r35);

     label21:
        goto label24;

     label22:
        $r57 := @caughtexception;

        $r58 = new org.apache.tika.exception.TikaException;

        specialinvoke $r58.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid embedded resource", $r57);

        throw $r58;

     label23:
        $r6 = virtualinvoke $r3.<org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.mime.MediaType getType()>();

        $r7 = virtualinvoke $r6.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r12 = virtualinvoke $r3.<org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: java.lang.String getExtension()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r14);

     label24:
        $r75 = r15.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.extractor.EmbeddedDocumentExtractor extractor>;

        $z1 = interfaceinvoke $r75.<org.apache.tika.extractor.EmbeddedDocumentExtractor: boolean shouldParseEmbedded(org.apache.tika.metadata.Metadata)>($r1);

        if $z1 == 0 goto label26;

        if r72 != null goto label25;

        $r18 = newarray (byte)[0];

        $r19 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[])>($r18);

        r72 = $r19;

        virtualinvoke $r19.<org.apache.tika.io.TikaInputStream: void setOpenContainer(java.lang.Object)>(r0);

     label25:
        $r17 = r15.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.tika.extractor.EmbeddedDocumentExtractor extractor>;

        interfaceinvoke $r17.<org.apache.tika.extractor.EmbeddedDocumentExtractor: void parseEmbedded(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,boolean)>(r72, r16, $r1, 1);

     label26:
        if r72 == null goto label30;

        virtualinvoke r72.<org.apache.tika.io.TikaInputStream: void close()>();

        goto label30;

     label27:
        $r56 := @caughtexception;

     label28:
        if r72 == null goto label29;

        virtualinvoke r72.<org.apache.tika.io.TikaInputStream: void close()>();

     label29:
        throw $r56;

     label30:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch org.apache.poi.poifs.filesystem.Ole10NativeException from label07 to label09 with label10;
        catch java.lang.Exception from label07 to label09 with label11;
        catch java.io.FileNotFoundException from label13 to label14 with label15;
        catch org.apache.tika.mime.MimeTypeException from label17 to label18 with label19;
        catch java.lang.Exception from label13 to label21 with label22;
        catch java.lang.Throwable from label06 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/tika/parser/microsoft/AbstractPOIFSExtractor;");

        <org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: org.apache.commons.logging.Log logger> = $r0;

        return;
    }
}
