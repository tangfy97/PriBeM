public class org.apache.poi.hssf.record.DConRefRecord extends org.apache.poi.hssf.record.StandardRecord
{
    public static final short sid;
    private int firstRow;
    private int lastRow;
    private int firstCol;
    private int lastCol;
    private int charCount;
    private int charType;
    private byte[] path;
    private byte[] _unused;

    public void <init>(byte[])
    {
        byte[] r1, $r2, $r3, $r4;
        short $s0, $s3, $s4, $s7;
        byte $b13;
        org.apache.poi.hssf.record.RecordFormatException $r7, $r8;
        int $i1, $i2, $i5, $i6, $i8, $i9, $i10, $i11, i12, $i14, $i15, i16, $i17, $i18, $i19, $i20, $i21;
        org.apache.poi.hssf.record.DConRefRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $s0 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, 0);

        $i17 = (int) $s0;

        if $i17 == 81 goto label1;

        $r7 = new org.apache.poi.hssf.record.RecordFormatException;

        specialinvoke $r7.<org.apache.poi.hssf.record.RecordFormatException: void <init>(java.lang.String)>("incompatible sid.");

        throw $r7;

     label1:
        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r1, 4);

        r0.<org.apache.poi.hssf.record.DConRefRecord: int firstRow> = $i1;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r1, 6);

        r0.<org.apache.poi.hssf.record.DConRefRecord: int lastRow> = $i2;

        $s3 = staticinvoke <org.apache.poi.util.LittleEndian: short getUByte(byte[],int)>(r1, 8);

        $i18 = (int) $s3;

        r0.<org.apache.poi.hssf.record.DConRefRecord: int firstCol> = $i18;

        $s4 = staticinvoke <org.apache.poi.util.LittleEndian: short getUByte(byte[],int)>(r1, 9);

        $i19 = (int) $s4;

        r0.<org.apache.poi.hssf.record.DConRefRecord: int lastCol> = $i19;

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r1, 10);

        r0.<org.apache.poi.hssf.record.DConRefRecord: int charCount> = $i5;

        $i6 = r0.<org.apache.poi.hssf.record.DConRefRecord: int charCount>;

        if $i6 >= 2 goto label2;

        $r8 = new org.apache.poi.hssf.record.RecordFormatException;

        specialinvoke $r8.<org.apache.poi.hssf.record.RecordFormatException: void <init>(java.lang.String)>("Character count must be >= 2");

        throw $r8;

     label2:
        $s7 = staticinvoke <org.apache.poi.util.LittleEndian: short getUByte(byte[],int)>(r1, 12);

        $i20 = (int) $s7;

        r0.<org.apache.poi.hssf.record.DConRefRecord: int charType> = $i20;

        $i11 = r0.<org.apache.poi.hssf.record.DConRefRecord: int charCount>;

        $i8 = r0.<org.apache.poi.hssf.record.DConRefRecord: int charType>;

        $i9 = $i8 & 1;

        $i10 = $i9 + 1;

        i12 = $i11 * $i10;

        $r2 = staticinvoke <org.apache.poi.util.LittleEndian: byte[] getByteArray(byte[],int,int)>(r1, 13, i12);

        r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path> = $r2;

        i16 = 13 + i12;

        $r3 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $b13 = $r3[0];

        $i21 = (int) $b13;

        if $i21 != 2 goto label3;

        $i14 = r0.<org.apache.poi.hssf.record.DConRefRecord: int charType>;

        $i15 = $i14 + 1;

        $r4 = staticinvoke <org.apache.poi.util.LittleEndian: byte[] getByteArray(byte[],int,int)>(r1, i16, $i15);

        r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] _unused> = $r4;

     label3:
        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        byte[] $r2, $r3, $r4, $r5;
        short $s0, $s13;
        org.apache.poi.hssf.record.RecordInputStream r1;
        byte $b12;
        org.apache.poi.hssf.record.RecordFormatException $r12;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i14, $i15, $i16;
        java.lang.String $r10;
        org.apache.poi.hssf.record.DConRefRecord r0;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short getSid()>();

        $i14 = (int) $s0;

        if $i14 == 81 goto label1;

        $r12 = new org.apache.poi.hssf.record.RecordFormatException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong sid: ");

        $s13 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short getSid()>();

        $i15 = (int) $s13;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.poi.hssf.record.RecordFormatException: void <init>(java.lang.String)>($r10);

        throw $r12;

     label1:
        $i1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r0.<org.apache.poi.hssf.record.DConRefRecord: int firstRow> = $i1;

        $i2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r0.<org.apache.poi.hssf.record.DConRefRecord: int lastRow> = $i2;

        $i3 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUByte()>();

        r0.<org.apache.poi.hssf.record.DConRefRecord: int firstCol> = $i3;

        $i4 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUByte()>();

        r0.<org.apache.poi.hssf.record.DConRefRecord: int lastCol> = $i4;

        $i5 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r0.<org.apache.poi.hssf.record.DConRefRecord: int charCount> = $i5;

        $i6 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUByte()>();

        $i7 = $i6 & 1;

        r0.<org.apache.poi.hssf.record.DConRefRecord: int charType> = $i7;

        $i10 = r0.<org.apache.poi.hssf.record.DConRefRecord: int charCount>;

        $i8 = r0.<org.apache.poi.hssf.record.DConRefRecord: int charType>;

        $i9 = $i8 + 1;

        i11 = $i10 * $i9;

        $r2 = newarray (byte)[i11];

        r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path> = $r2;

        $r3 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: void readFully(byte[])>($r3);

        $r4 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $b12 = $r4[0];

        $i16 = (int) $b12;

        if $i16 != 2 goto label2;

        $r5 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte[] readRemainder()>();

        r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] _unused> = $r5;

     label2:
        return;
    }

    protected int getDataSize()
    {
        byte[] $r1, $r2, $r3;
        org.apache.poi.hssf.record.DConRefRecord r0;
        byte $b1;
        int $i0, $i2, i3, $i4;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $r1 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $i0 = lengthof $r1;

        i3 = 9 + $i0;

        $r2 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $b1 = $r2[0];

        $i4 = (int) $b1;

        if $i4 != 2 goto label1;

        $r3 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] _unused>;

        $i2 = lengthof $r3;

        i3 = i3 + $i2;

     label1:
        return i3;
    }

    protected void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        byte[] $r2, $r3, $r4;
        org.apache.poi.hssf.record.DConRefRecord r1;
        byte $b6;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;

        r1 := @this: org.apache.poi.hssf.record.DConRefRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.DConRefRecord: int firstRow>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $i1 = r1.<org.apache.poi.hssf.record.DConRefRecord: int lastRow>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i1);

        $i2 = r1.<org.apache.poi.hssf.record.DConRefRecord: int firstCol>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i2);

        $i3 = r1.<org.apache.poi.hssf.record.DConRefRecord: int lastCol>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i3);

        $i4 = r1.<org.apache.poi.hssf.record.DConRefRecord: int charCount>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i4);

        $i5 = r1.<org.apache.poi.hssf.record.DConRefRecord: int charType>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i5);

        $r2 = r1.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void write(byte[])>($r2);

        $r3 = r1.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $b6 = $r3[0];

        $i7 = (int) $b6;

        if $i7 != 2 goto label1;

        $r4 = r1.<org.apache.poi.hssf.record.DConRefRecord: byte[] _unused>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void write(byte[])>($r4);

     label1:
        return;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.DConRefRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        return 81;
    }

    public int getFirstColumn()
    {
        int $i0;
        org.apache.poi.hssf.record.DConRefRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $i0 = r0.<org.apache.poi.hssf.record.DConRefRecord: int firstCol>;

        return $i0;
    }

    public int getFirstRow()
    {
        int $i0;
        org.apache.poi.hssf.record.DConRefRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $i0 = r0.<org.apache.poi.hssf.record.DConRefRecord: int firstRow>;

        return $i0;
    }

    public int getLastColumn()
    {
        int $i0;
        org.apache.poi.hssf.record.DConRefRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $i0 = r0.<org.apache.poi.hssf.record.DConRefRecord: int lastCol>;

        return $i0;
    }

    public int getLastRow()
    {
        int $i0;
        org.apache.poi.hssf.record.DConRefRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $i0 = r0.<org.apache.poi.hssf.record.DConRefRecord: int lastRow>;

        return $i0;
    }

    public java.lang.String toString()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r15, $r17;
        org.apache.poi.hssf.record.DConRefRecord r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16;

        r2 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[DCONREF]\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .ref\n");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        .firstrow   = ");

        $i0 = r2.<org.apache.poi.hssf.record.DConRefRecord: int firstRow>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        .lastrow    = ");

        $i1 = r2.<org.apache.poi.hssf.record.DConRefRecord: int lastRow>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        .firstcol   = ");

        $i2 = r2.<org.apache.poi.hssf.record.DConRefRecord: int firstCol>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        .lastcol    = ");

        $i3 = r2.<org.apache.poi.hssf.record.DConRefRecord: int lastCol>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .cch            = ");

        $i4 = r2.<org.apache.poi.hssf.record.DConRefRecord: int charCount>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .stFile\n");

        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        .h          = ");

        $i5 = r2.<org.apache.poi.hssf.record.DConRefRecord: int charType>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        .rgb        = ");

        $r15 = virtualinvoke r2.<org.apache.poi.hssf.record.DConRefRecord: java.lang.String getReadablePath()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[/DCONREF]\n");

        $r17 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public byte[] getPath()
    {
        byte[] $r1, $r2, $r3;
        int $i0;
        org.apache.poi.hssf.record.DConRefRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $r2 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $r1 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $i0 = lengthof $r1;

        $r3 = staticinvoke <org.apache.poi.util.ArrayUtil: byte[] copyOf(byte[],int)>($r2, $i0);

        return $r3;
    }

    public java.lang.String getReadablePath()
    {
        byte[] $r1, $r2, $r4, $r5, $r6, $r8;
        org.apache.poi.hssf.record.DConRefRecord r0;
        byte $b0;
        int $i1, $i2, i3, $i4;
        java.lang.String $r7, $r9;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $r1 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        if $r1 == null goto label3;

        i3 = 1;

     label1:
        $r2 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $b0 = $r2[i3];

        $i4 = (int) $b0;

        if $i4 >= 32 goto label2;

        $r8 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $i2 = lengthof $r8;

        if i3 >= $i2 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r9 = new java.lang.String;

        $r5 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $r4 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $i1 = lengthof $r4;

        $r6 = staticinvoke <org.apache.poi.util.ArrayUtil: byte[] copyOfRange(byte[],int,int)>($r5, i3, $i1);

        specialinvoke $r9.<java.lang.String: void <init>(byte[])>($r6);

        $r7 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\u0003", "/");

        return $r7;

     label3:
        return null;
    }

    public boolean isExternalRef()
    {
        byte[] $r1;
        org.apache.poi.hssf.record.DConRefRecord r0;
        byte $b0;

        r0 := @this: org.apache.poi.hssf.record.DConRefRecord;

        $r1 = r0.<org.apache.poi.hssf.record.DConRefRecord: byte[] path>;

        $b0 = $r1[0];

        if $b0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.DConRefRecord: short sid> = 81;

        return;
    }
}
