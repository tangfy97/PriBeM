public abstract class com.jidesoft.swing.NavigationComponentHelper extends java.lang.Object
{
    private int _rolloverRow;
    private java.awt.Point _mousePosition;

    public void <init>()
    {
        int $i1;
        com.jidesoft.swing.NavigationComponentHelper r0;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow> = $i1;

        r0.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Point _mousePosition> = null;

        return;
    }

    protected abstract java.awt.Rectangle getRowBounds(int);

    protected abstract int rowAtPoint(java.awt.Point);

    protected abstract int[] getSelectedRows();

    public void mouseMoved(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.NavigationComponentHelper r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseExited(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.NavigationComponentHelper r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mousePressed(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.NavigationComponentHelper r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseReleased(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.NavigationComponentHelper r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseClicked(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.NavigationComponentHelper r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseEntered(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.NavigationComponentHelper r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void focusGained(java.awt.event.FocusEvent)
    {
        com.jidesoft.swing.NavigationComponentHelper r0;
        java.awt.event.FocusEvent r1;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: java.awt.event.FocusEvent;

        return;
    }

    public void focusLost(java.awt.event.FocusEvent)
    {
        com.jidesoft.swing.NavigationComponentHelper r0;
        java.awt.event.FocusEvent r1;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: java.awt.event.FocusEvent;

        return;
    }

    public void paint(java.awt.Graphics, javax.swing.JComponent)
    {
        javax.swing.JComponent r3;
        com.jidesoft.swing.NavigationComponentHelper r0;
        int[] $r1;
        int $i0, i1, i2, $i3, i4, $i6;
        java.awt.Graphics r2;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r2 := @parameter0: java.awt.Graphics;

        r3 := @parameter1: javax.swing.JComponent;

        $i0 = r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow>;

        $i6 = (int) -1;

        if $i0 == $i6 goto label1;

        $i3 = r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow>;

        virtualinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: void paintRolloverRow(java.awt.Graphics,javax.swing.JComponent,int)>(r2, r3, $i3);

     label1:
        $r1 = virtualinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: int[] getSelectedRows()>();

        if $r1 == null goto label3;

        i1 = lengthof $r1;

        i4 = 0;

     label2:
        if i4 >= i1 goto label3;

        i2 = $r1[i4];

        virtualinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: void paintSelectedRow(java.awt.Graphics,javax.swing.JComponent,int)>(r2, r3, i2);

        i4 = i4 + 1;

        goto label2;

     label3:
        return;
    }

    protected void paintSelectedRow(java.awt.Graphics, javax.swing.JComponent, int)
    {
        javax.swing.JComponent r1;
        java.awt.Color $r2;
        java.awt.Rectangle $r3;
        com.jidesoft.swing.NavigationComponentHelper r0;
        int i0, $i1, $i2, $i3, $i4;
        java.awt.Graphics r4;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r4 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: javax.swing.JComponent;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Color getSelectionColor(javax.swing.JComponent)>(r1);

        $r3 = virtualinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Rectangle getRowBounds(int)>(i0);

        $i1 = $r3.<java.awt.Rectangle: int width>;

        $i2 = $i1 - 1;

        $r3.<java.awt.Rectangle: int width> = $i2;

        $i3 = $r3.<java.awt.Rectangle: int height>;

        $i4 = $i3 - 1;

        $r3.<java.awt.Rectangle: int height> = $i4;

        specialinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: void paintRow(java.awt.Graphics,int,java.awt.Rectangle,java.awt.Color,int,int,int,int)>(r4, i0, $r3, $r2, 30, 70, 50, 128);

        return;
    }

    protected java.awt.Color getSelectionColor(javax.swing.JComponent)
    {
        java.awt.Color $r0, $r2, $r3, $r4, $r5, r7;
        javax.swing.JComponent r1;
        com.jidesoft.swing.NavigationComponentHelper r6;
        boolean $z0, $z1;

        r6 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("NavigationComponent.selectionBackground");

        r7 = $r0;

        if $r0 != null goto label1;

        r7 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.selectionBackground");

     label1:
        $z0 = virtualinvoke r1.<javax.swing.JComponent: boolean hasFocus()>();

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color toGrayscale(java.awt.Color)>(r7);

        $r3 = virtualinvoke $r2.<java.awt.Color: java.awt.Color brighter()>();

        r7 = $r3;

        $r4 = <java.awt.Color: java.awt.Color WHITE>;

        $z1 = virtualinvoke $r4.<java.awt.Color: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(202, 202, 202);

        r7 = $r5;

     label2:
        return r7;
    }

    protected void paintRolloverRow(java.awt.Graphics, javax.swing.JComponent, int)
    {
        java.awt.Color $r0;
        javax.swing.JComponent r4;
        java.awt.Rectangle $r2;
        com.jidesoft.swing.NavigationComponentHelper r1;
        int i0, $i1, $i2, $i3, $i4;
        java.awt.Graphics r3;

        r1 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r3 := @parameter0: java.awt.Graphics;

        r4 := @parameter1: javax.swing.JComponent;

        i0 := @parameter2: int;

        $r0 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.selectionBackground");

        $r2 = virtualinvoke r1.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Rectangle getRowBounds(int)>(i0);

        if $r2 != null goto label1;

        return;

     label1:
        $i1 = $r2.<java.awt.Rectangle: int width>;

        $i2 = $i1 - 1;

        $r2.<java.awt.Rectangle: int width> = $i2;

        $i3 = $r2.<java.awt.Rectangle: int height>;

        $i4 = $i3 - 1;

        $r2.<java.awt.Rectangle: int height> = $i4;

        specialinvoke r1.<com.jidesoft.swing.NavigationComponentHelper: void paintRow(java.awt.Graphics,int,java.awt.Rectangle,java.awt.Color,int,int,int,int)>(r3, i0, $r2, $r0, 10, 40, 20, 100);

        return;
    }

    private void paintRow(java.awt.Graphics, int, java.awt.Rectangle, java.awt.Color, int, int, int, int)
    {
        java.awt.Color $r6, r7, $r9, $r10, $r12;
        com.jidesoft.swing.NavigationComponentHelper r13;
        java.awt.Graphics r0;
        float $f0, $f1, $f2, $f3;
        java.awt.MultipleGradientPaint$CycleMethod $r11;
        java.awt.Rectangle r3;
        float[] $r4;
        java.awt.Graphics2D $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i27, $i28, $i29, i30;
        java.awt.LinearGradientPaint $r2;
        java.lang.Object $r1;
        java.awt.Color[] $r5;

        r13 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r0 := @parameter0: java.awt.Graphics;

        i30 := @parameter1: int;

        r3 := @parameter2: java.awt.Rectangle;

        r7 := @parameter3: java.awt.Color;

        i9 := @parameter4: int;

        i13 := @parameter5: int;

        i17 := @parameter6: int;

        i25 := @parameter7: int;

        $r1 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object setupShapeAntialiasing(java.awt.Graphics)>(r0);

        $r8 = (java.awt.Graphics2D) r0;

        $r2 = new java.awt.LinearGradientPaint;

        $i0 = r3.<java.awt.Rectangle: int x>;

        $f0 = (float) $i0;

        $i1 = r3.<java.awt.Rectangle: int y>;

        $f1 = (float) $i1;

        $i2 = r3.<java.awt.Rectangle: int x>;

        $f2 = (float) $i2;

        $i4 = r3.<java.awt.Rectangle: int y>;

        $i3 = r3.<java.awt.Rectangle: int height>;

        $i5 = $i4 + $i3;

        $f3 = (float) $i5;

        $r4 = newarray (float)[3];

        $r4[0] = 0.5F;

        $r4[1] = 0.95F;

        $r4[2] = 1.0F;

        $r5 = newarray (java.awt.Color)[3];

        $r6 = new java.awt.Color;

        $i6 = virtualinvoke r7.<java.awt.Color: int getRed()>();

        $i7 = virtualinvoke r7.<java.awt.Color: int getGreen()>();

        $i8 = virtualinvoke r7.<java.awt.Color: int getBlue()>();

        specialinvoke $r6.<java.awt.Color: void <init>(int,int,int,int)>($i6, $i7, $i8, i9);

        $r5[0] = $r6;

        $r9 = new java.awt.Color;

        $i10 = virtualinvoke r7.<java.awt.Color: int getRed()>();

        $i11 = virtualinvoke r7.<java.awt.Color: int getGreen()>();

        $i12 = virtualinvoke r7.<java.awt.Color: int getBlue()>();

        specialinvoke $r9.<java.awt.Color: void <init>(int,int,int,int)>($i10, $i11, $i12, i13);

        $r5[1] = $r9;

        $r10 = new java.awt.Color;

        $i14 = virtualinvoke r7.<java.awt.Color: int getRed()>();

        $i15 = virtualinvoke r7.<java.awt.Color: int getGreen()>();

        $i16 = virtualinvoke r7.<java.awt.Color: int getBlue()>();

        specialinvoke $r10.<java.awt.Color: void <init>(int,int,int,int)>($i14, $i15, $i16, i17);

        $r5[2] = $r10;

        $r11 = <java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod NO_CYCLE>;

        specialinvoke $r2.<java.awt.LinearGradientPaint: void <init>(float,float,float,float,float[],java.awt.Color[],java.awt.MultipleGradientPaint$CycleMethod)>($f0, $f1, $f2, $f3, $r4, $r5, $r11);

        virtualinvoke $r8.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r2);

        $i21 = r3.<java.awt.Rectangle: int x>;

        $i20 = r3.<java.awt.Rectangle: int y>;

        $i19 = r3.<java.awt.Rectangle: int width>;

        $i18 = r3.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<java.awt.Graphics: void fillRoundRect(int,int,int,int,int,int)>($i21, $i20, $i19, $i18, 5, 5);

        $r12 = new java.awt.Color;

        $i22 = virtualinvoke r7.<java.awt.Color: int getRed()>();

        $i23 = virtualinvoke r7.<java.awt.Color: int getGreen()>();

        $i24 = virtualinvoke r7.<java.awt.Color: int getBlue()>();

        specialinvoke $r12.<java.awt.Color: void <init>(int,int,int,int)>($i22, $i23, $i24, i25);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i29 = r3.<java.awt.Rectangle: int x>;

        $i28 = r3.<java.awt.Rectangle: int y>;

        $i27 = r3.<java.awt.Rectangle: int width>;

        $i26 = r3.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<java.awt.Graphics: void drawRoundRect(int,int,int,int,int,int)>($i29, $i28, $i27, $i26, 5, 5);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void restoreShapeAntialiasing(java.awt.Graphics,java.lang.Object)>(r0, $r1);

        return;
    }

    public void setup(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.swing.NavigationComponentHelper r1;
        com.jidesoft.swing.NavigationComponentHelper$1 $r0;
        com.jidesoft.swing.NavigationComponentHelper$2 $r3;

        r1 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.swing.NavigationComponentHelper$1;

        specialinvoke $r0.<com.jidesoft.swing.NavigationComponentHelper$1: void <init>(com.jidesoft.swing.NavigationComponentHelper,javax.swing.JComponent)>(r1, r2);

        virtualinvoke r2.<javax.swing.JComponent: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r0);

        virtualinvoke r2.<javax.swing.JComponent: void addMouseListener(java.awt.event.MouseListener)>($r0);

        $r3 = new com.jidesoft.swing.NavigationComponentHelper$2;

        specialinvoke $r3.<com.jidesoft.swing.NavigationComponentHelper$2: void <init>(com.jidesoft.swing.NavigationComponentHelper,javax.swing.JComponent)>(r1, r2);

        virtualinvoke r2.<javax.swing.JComponent: void addFocusListener(java.awt.event.FocusListener)>($r3);

        return;
    }

    public void repaintSelections(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        java.awt.Rectangle $r3, $r4;
        com.jidesoft.swing.NavigationComponentHelper r0;
        int[] $r1;
        int $i0, $i1, i2, i3, $i4, i5, $i7;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        r2 := @parameter0: javax.swing.JComponent;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: int[] getSelectedRows()>();

        if $r1 == null goto label2;

        i2 = lengthof $r1;

        i5 = 0;

     label1:
        if i5 >= i2 goto label2;

        i3 = $r1[i5];

        $r4 = virtualinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Rectangle getRowBounds(int)>(i3);

        $r4.<java.awt.Rectangle: int x> = 0;

        $i4 = virtualinvoke r2.<javax.swing.JComponent: int getWidth()>();

        $r4.<java.awt.Rectangle: int width> = $i4;

        virtualinvoke r2.<javax.swing.JComponent: void repaint(java.awt.Rectangle)>($r4);

        i5 = i5 + 1;

        goto label1;

     label2:
        $i0 = r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow>;

        $i7 = (int) -1;

        if $i0 == $i7 goto label3;

        $i1 = r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow>;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Rectangle getRowBounds(int)>($i1);

        virtualinvoke r2.<javax.swing.JComponent: void repaint(java.awt.Rectangle)>($r3);

     label3:
        return;
    }

    public int getRolloverRow()
    {
        int $i0;
        com.jidesoft.swing.NavigationComponentHelper r0;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        $i0 = r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow>;

        return $i0;
    }

    public void setRolloverRow(int)
    {
        int i0;
        com.jidesoft.swing.NavigationComponentHelper r0;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow> = i0;

        return;
    }

    public java.awt.Point getMousePosition()
    {
        java.awt.Point $r1;
        com.jidesoft.swing.NavigationComponentHelper r0;

        r0 := @this: com.jidesoft.swing.NavigationComponentHelper;

        $r1 = r0.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Point _mousePosition>;

        return $r1;
    }

    static java.awt.Point access$002(com.jidesoft.swing.NavigationComponentHelper, java.awt.Point)
    {
        java.awt.Point r1;
        com.jidesoft.swing.NavigationComponentHelper r0;

        r0 := @parameter0: com.jidesoft.swing.NavigationComponentHelper;

        r1 := @parameter1: java.awt.Point;

        r0.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Point _mousePosition> = r1;

        return r1;
    }

    static int access$100(com.jidesoft.swing.NavigationComponentHelper)
    {
        int $i0;
        com.jidesoft.swing.NavigationComponentHelper r0;

        r0 := @parameter0: com.jidesoft.swing.NavigationComponentHelper;

        $i0 = r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow>;

        return $i0;
    }

    static int access$102(com.jidesoft.swing.NavigationComponentHelper, int)
    {
        int i0;
        com.jidesoft.swing.NavigationComponentHelper r0;

        r0 := @parameter0: com.jidesoft.swing.NavigationComponentHelper;

        i0 := @parameter1: int;

        r0.<com.jidesoft.swing.NavigationComponentHelper: int _rolloverRow> = i0;

        return i0;
    }

    static java.awt.Point access$000(com.jidesoft.swing.NavigationComponentHelper)
    {
        java.awt.Point $r1;
        com.jidesoft.swing.NavigationComponentHelper r0;

        r0 := @parameter0: com.jidesoft.swing.NavigationComponentHelper;

        $r1 = r0.<com.jidesoft.swing.NavigationComponentHelper: java.awt.Point _mousePosition>;

        return $r1;
    }
}
