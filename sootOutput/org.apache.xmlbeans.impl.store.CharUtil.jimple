public final class org.apache.xmlbeans.impl.store.CharUtil extends java.lang.Object
{
    private static int CHARUTIL_INITIAL_BUFSIZE;
    private static java.lang.ThreadLocal tl_charUtil;
    private org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter;
    private static final int MAX_COPY;
    private int _charBufSize;
    private int _currentOffset;
    private char[] _currentBuffer;
    public int _offSrc;
    public int _cchSrc;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil;

    public void <init>(int)
    {
        int i0;
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator $r1;
        org.apache.xmlbeans.impl.store.CharUtil r0;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.xmlbeans.impl.store.CharUtil$CharIterator;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void <init>()>();

        r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter> = $r1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _charBufSize> = i0;

        return;
    }

    public org.apache.xmlbeans.impl.store.CharUtil$CharIterator getCharIterator(java.lang.Object, int, int)
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator $r2, $r3;
        int i0, i1;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        java.lang.Object r1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void init(java.lang.Object,int,int)>(r1, i0, i1);

        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        return $r3;
    }

    public org.apache.xmlbeans.impl.store.CharUtil$CharIterator getCharIterator(java.lang.Object, int, int, int)
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator $r2, $r3;
        int i0, i1, i2;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        java.lang.Object r1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void init(java.lang.Object,int,int,int)>(r1, i0, i1, i2);

        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        return $r3;
    }

    public static org.apache.xmlbeans.impl.store.CharUtil getThreadLocalCharUtil()
    {
        java.lang.ThreadLocal $r0, $r6;
        int $i0;
        java.lang.Object $r1, $r3;
        org.apache.xmlbeans.impl.store.CharUtil $r4, r7;
        java.lang.ref.SoftReference r2, $r5;

        $r0 = <org.apache.xmlbeans.impl.store.CharUtil: java.lang.ThreadLocal tl_charUtil>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.lang.ref.SoftReference) $r1;

        $r3 = virtualinvoke r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r7 = (org.apache.xmlbeans.impl.store.CharUtil) $r3;

        if r7 != null goto label1;

        $r4 = new org.apache.xmlbeans.impl.store.CharUtil;

        $i0 = <org.apache.xmlbeans.impl.store.CharUtil: int CHARUTIL_INITIAL_BUFSIZE>;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.CharUtil: void <init>(int)>($i0);

        r7 = $r4;

        $r6 = <org.apache.xmlbeans.impl.store.CharUtil: java.lang.ThreadLocal tl_charUtil>;

        $r5 = new java.lang.ref.SoftReference;

        specialinvoke $r5.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r4);

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>($r5);

     label1:
        return r7;
    }

    public static void getString(java.lang.StringBuffer, java.lang.Object, int, int)
    {
        java.lang.AssertionError $r8;
        java.lang.StringBuffer r1;
        int i0, i1, $i2, $i3;
        java.lang.String r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin $r2;
        char[] $r6, $r7;
        java.lang.Object r0;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r0, i1, i0);

        if $z3 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        if i0 != 0 goto label2;

        return;

     label2:
        $z1 = r0 instanceof char[];

        if $z1 == 0 goto label3;

        $r6 = (char[]) r0;

        $r7 = (char[]) $r6;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r7, i1, i0);

        goto label7;

     label3:
        $z2 = r0 instanceof java.lang.String;

        if $z2 == 0 goto label6;

        r3 = (java.lang.String) r0;

        if i1 != 0 goto label4;

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        if i0 != $i3 goto label4;

        $r5 = (java.lang.String) r0;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        goto label5;

     label4:
        $i2 = i1 + i0;

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i1, $i2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label5:
        goto label7;

     label6:
        $r2 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r0;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void access$000(org.apache.xmlbeans.impl.store.CharUtil$CharJoin,java.lang.StringBuffer,int,int)>($r2, r1, i1, i0);

     label7:
        return;
    }

    public static void getChars(char[], int, java.lang.Object, int, int)
    {
        java.lang.AssertionError $r6, $r7;
        int i0, i1, i2, $i3, $i4;
        java.lang.String $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin $r2;
        char[] r1, $r4, $r5;
        java.lang.Object r0;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.Object;

        i2 := @parameter3: int;

        i0 := @parameter4: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z4 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r0, i2, i0);

        if $z4 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        if r1 == null goto label2;

        if i1 < 0 goto label2;

        $i4 = lengthof r1;

        if i1 <= $i4 goto label3;

     label2:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label3:
        if i0 != 0 goto label4;

        return;

     label4:
        $z2 = r0 instanceof char[];

        if $z2 == 0 goto label5;

        $r4 = (char[]) r0;

        $r5 = (char[]) $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, i2, r1, i1, i0);

        goto label7;

     label5:
        $z3 = r0 instanceof java.lang.String;

        if $z3 == 0 goto label6;

        $r3 = (java.lang.String) r0;

        $i3 = i2 + i0;

        virtualinvoke $r3.<java.lang.String: void getChars(int,int,char[],int)>(i2, $i3, r1, i1);

        goto label7;

     label6:
        $r2 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r0;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void access$100(org.apache.xmlbeans.impl.store.CharUtil$CharJoin,char[],int,int,int)>($r2, r1, i1, i2, i0);

     label7:
        return;
    }

    public static java.lang.String getString(java.lang.Object, int, int)
    {
        java.lang.AssertionError $r8;
        java.lang.StringBuffer $r1;
        int i0, i1, $i2, $i3;
        java.lang.String $r3, $r4, $r5, r9;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin $r2;
        char[] $r6, $r7;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r0, i1, i0);

        if $z3 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        if i0 != 0 goto label2;

        return "";

     label2:
        $z1 = r0 instanceof char[];

        if $z1 == 0 goto label3;

        $r5 = new java.lang.String;

        $r6 = (char[]) r0;

        $r7 = (char[]) $r6;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>($r7, i1, i0);

        return $r5;

     label3:
        $z2 = r0 instanceof java.lang.String;

        if $z2 == 0 goto label5;

        r9 = (java.lang.String) r0;

        if i1 != 0 goto label4;

        $i3 = virtualinvoke r9.<java.lang.String: int length()>();

        if i0 != $i3 goto label4;

        return r9;

     label4:
        $i2 = i1 + i0;

        $r4 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(i1, $i2);

        return $r4;

     label5:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r0;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void access$000(org.apache.xmlbeans.impl.store.CharUtil$CharJoin,java.lang.StringBuffer,int,int)>($r2, $r1, i1, i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static final boolean isWhiteSpace(char)
    {
        int $i1;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 13: goto label1;
            case 32: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public final boolean isWhiteSpace(java.lang.Object, int, int)
    {
        java.lang.AssertionError $r10;
        int $i1, $i3, i5, i6, $i8, $i10;
        java.lang.String r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        char $c0, $c2, $c4;
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator $r2, $r3, $r4, $r5;
        char[] $r6, r8;
        java.lang.Object r0;
        org.apache.xmlbeans.impl.store.CharUtil r1;

        r1 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        r0 := @parameter0: java.lang.Object;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z7 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r0, i5, i6);

        if $z7 != 0 goto label01;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label01:
        if i6 > 0 goto label02;

        return 1;

     label02:
        $z1 = r0 instanceof char[];

        if $z1 == 0 goto label06;

        $r6 = (char[]) r0;

        r8 = (char[]) $r6;

     label03:
        if i6 <= 0 goto label05;

        $i3 = i5;

        i5 = i5 + 1;

        $c4 = r8[$i3];

        $z6 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c4);

        if $z6 != 0 goto label04;

        return 0;

     label04:
        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label03;

     label05:
        return 1;

     label06:
        $z2 = r0 instanceof java.lang.String;

        if $z2 == 0 goto label10;

        r9 = (java.lang.String) r0;

     label07:
        if i6 <= 0 goto label09;

        $i1 = i5;

        i5 = i5 + 1;

        $c2 = virtualinvoke r9.<java.lang.String: char charAt(int)>($i1);

        $z5 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c2);

        if $z5 != 0 goto label08;

        return 0;

     label08:
        $i10 = (int) -1;

        i6 = i6 + $i10;

        goto label07;

     label09:
        return 1;

     label10:
        z8 = 1;

        $r2 = r1.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void init(java.lang.Object,int,int)>(r0, i5, i6);

     label11:
        $r3 = r1.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        $z3 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r5 = r1.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        $c0 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char next()>();

        $z4 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c0);

        if $z4 != 0 goto label11;

        z8 = 0;

        goto label12;

     label12:
        $r4 = r1.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void release()>();

        return z8;
    }

    public java.lang.Object stripLeft(java.lang.Object, int, int)
    {
        java.lang.AssertionError $r10;
        int i3, i4, i5, $i7, $i9;
        java.lang.String r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        char $c0, $c1, $c2;
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator $r2, $r3, $r4, $r5;
        char[] $r6, r8;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        java.lang.Object r1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        r1 := @parameter0: java.lang.Object;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z7 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r1, i3, i4);

        if $z7 != 0 goto label01;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label01:
        if i4 <= 0 goto label11;

        $z1 = r1 instanceof char[];

        if $z1 == 0 goto label04;

        $r6 = (char[]) r1;

        r8 = (char[]) $r6;

     label02:
        if i4 <= 0 goto label03;

        $c2 = r8[i3];

        $z6 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c2);

        if $z6 == 0 goto label03;

        $i7 = (int) -1;

        i4 = i4 + $i7;

        i3 = i3 + 1;

        goto label02;

     label03:
        goto label11;

     label04:
        $z2 = r1 instanceof java.lang.String;

        if $z2 == 0 goto label07;

        r9 = (java.lang.String) r1;

     label05:
        if i4 <= 0 goto label06;

        $c1 = virtualinvoke r9.<java.lang.String: char charAt(int)>(i3);

        $z5 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c1);

        if $z5 == 0 goto label06;

        $i9 = (int) -1;

        i4 = i4 + $i9;

        i3 = i3 + 1;

        goto label05;

     label06:
        goto label11;

     label07:
        i5 = 0;

        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void init(java.lang.Object,int,int)>(r1, i3, i4);

     label08:
        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        $z3 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r5 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        $c0 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char next()>();

        $z4 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c0);

        if $z4 != 0 goto label09;

        goto label10;

     label09:
        i5 = i5 + 1;

        goto label08;

     label10:
        $r4 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void release()>();

        i3 = i3 + i5;

     label11:
        if i4 != 0 goto label12;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = 0;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = 0;

        return null;

     label12:
        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = i3;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = i4;

        return r1;
    }

    public java.lang.Object stripRight(java.lang.Object, int, int)
    {
        char $c1;
        java.lang.AssertionError $r7;
        org.apache.xmlbeans.impl.store.CharUtil$CharIterator $r2, $r3, $r4, $r5;
        int i0, i2, $i4;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r1, i0, i2);

        if $z3 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        if i2 <= 0 goto label5;

        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void init(java.lang.Object,int,int,int)>(r1, i0, i2, i2);

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        $z1 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: boolean hasPrev()>();

        if $z1 == 0 goto label4;

        $r5 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        $c1 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: char prev()>();

        $z2 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c1);

        if $z2 != 0 goto label3;

        goto label4;

     label3:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label2;

     label4:
        $r4 = r0.<org.apache.xmlbeans.impl.store.CharUtil: org.apache.xmlbeans.impl.store.CharUtil$CharIterator _charIter>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.CharUtil$CharIterator: void release()>();

     label5:
        if i2 != 0 goto label6;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = 0;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = 0;

        return null;

     label6:
        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = i0;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = i2;

        return r1;
    }

    public java.lang.Object insertChars(int, java.lang.Object, int, int, java.lang.Object, int, int)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin $r1, $r4, $r6, $r7, r13;
        java.lang.AssertionError $r5, $r9, $r10, $r11;
        int i0, i1, $i2, $i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        char[] $r8;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        java.lang.Object r2, r3, r12;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        i4 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        i5 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.Object;

        i6 := @parameter5: int;

        i0 := @parameter6: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z6 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r2, i5, i1);

        if $z6 != 0 goto label01;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $z5 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r3, i6, i0);

        if $z5 != 0 goto label02;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label02:
        $z2 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z2 != 0 goto label04;

        if i4 < 0 goto label03;

        if i4 <= i1 goto label04;

     label03:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label04:
        if i0 != 0 goto label05;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = i1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = i5;

        return r2;

     label05:
        if i1 != 0 goto label06;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = i0;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = i6;

        return r3;

     label06:
        $i2 = i1 + i0;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = $i2;

        $i3 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        if $i3 > 64 goto label07;

        $i13 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $z4 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: boolean canAllocate(int)>($i13);

        if $z4 == 0 goto label07;

        $i14 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $r8 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] allocate(int)>($i14);

        $i15 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r8, $i15, r2, i5, i4);

        $i16 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        $i17 = $i16 + i4;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r8, $i17, r3, i6, i0);

        $i18 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        $i19 = $i18 + i4;

        $i22 = $i19 + i0;

        $i21 = i5 + i4;

        $i20 = i1 - i4;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r8, $i22, r2, $i21, $i20);

        r12 = $r8;

        goto label12;

     label07:
        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = 0;

        if i4 != 0 goto label08;

        $r7 = new org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        specialinvoke $r7.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void <init>(java.lang.Object,int,int,java.lang.Object,int)>(r3, i6, i0, r2, i5);

        r13 = $r7;

        goto label10;

     label08:
        if i4 != i1 goto label09;

        $r6 = new org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        specialinvoke $r6.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void <init>(java.lang.Object,int,int,java.lang.Object,int)>(r2, i5, i1, r3, i6);

        r13 = $r6;

        goto label10;

     label09:
        $r1 = new org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void <init>(java.lang.Object,int,int,java.lang.Object,int)>(r2, i5, i4, r3, i6);

        $r4 = new org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        $i8 = i4 + i0;

        $i7 = i5 + i4;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void <init>(java.lang.Object,int,int,java.lang.Object,int)>($r1, 0, $i8, r2, $i7);

        r13 = $r4;

     label10:
        $i23 = r13.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

        if $i23 <= 64 goto label11;

        $i12 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        $i11 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        r12 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: java.lang.Object saveChars(java.lang.Object,int,int)>(r13, $i12, $i11);

        goto label12;

     label11:
        r12 = r13;

     label12:
        $z7 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z7 != 0 goto label13;

        $i10 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        $i9 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r12, $i10, $i9);

        if $z3 != 0 goto label13;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label13:
        return r12;
    }

    public java.lang.Object removeChars(int, int, java.lang.Object, int, int)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin $r1;
        java.lang.AssertionError $r3, $r5, $r6, $r7;
        int i0, i1, $i2, $i3, i4, $i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        char[] $r4;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        java.lang.Object r2, r8;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        i4 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        i7 := @parameter3: int;

        i0 := @parameter4: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z5 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r2, i7, i0);

        if $z5 != 0 goto label01;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        if i4 < 0 goto label02;

        if i4 <= i0 goto label03;

     label02:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label03:
        $z2 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z2 != 0 goto label05;

        if i1 < 0 goto label04;

        $i23 = i4 + i1;

        if $i23 <= i0 goto label05;

     label04:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label05:
        $i2 = i0 - i1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = $i2;

        $i3 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        if $i3 != 0 goto label06;

        r8 = null;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = 0;

        goto label11;

     label06:
        if i4 != 0 goto label07;

        r8 = r2;

        $i22 = i7 + i1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = $i22;

        goto label11;

     label07:
        $i5 = i4 + i1;

        if $i5 != i0 goto label08;

        r8 = r2;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = i7;

        goto label11;

     label08:
        i6 = i0 - i1;

        if i6 > 64 goto label09;

        $z4 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: boolean canAllocate(int)>(i6);

        if $z4 == 0 goto label09;

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] allocate(int)>(i6);

        $i14 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r4, $i14, r2, i7, i4);

        $i15 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        $i20 = $i15 + i4;

        $i16 = i7 + i4;

        $i19 = $i16 + i1;

        $i17 = i0 - i4;

        $i18 = $i17 - i1;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r4, $i20, r2, $i19, $i18);

        r8 = $r4;

        $i21 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = $i21;

        goto label11;

     label09:
        $r1 = new org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        $i8 = i7 + i4;

        $i9 = $i8 + i1;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void <init>(java.lang.Object,int,int,java.lang.Object,int)>(r2, i7, i4, r2, $i9);

        $i10 = $r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

        if $i10 <= 64 goto label10;

        $i13 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: java.lang.Object saveChars(java.lang.Object,int,int)>($r1, 0, $i13);

        goto label11;

     label10:
        r8 = $r1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = 0;

     label11:
        $z6 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z6 != 0 goto label12;

        $i12 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        $i11 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r8, $i12, $i11);

        if $z3 != 0 goto label12;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label12:
        return r8;
    }

    private static int sizeof(java.lang.Object)
    {
        java.lang.AssertionError $r4;
        int $i0, $i1;
        char[] $r2, $r3;
        java.lang.Object r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Object;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 == null goto label1;

        $z1 = r0 instanceof java.lang.String;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof char[];

        if $z2 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $z3 = r0 instanceof char[];

        if $z3 == 0 goto label2;

        $r2 = (char[]) r0;

        $r3 = (char[]) $r2;

        $i0 = lengthof $r3;

        return $i0;

     label2:
        if r0 != null goto label3;

        $i1 = 0;

        goto label4;

     label3:
        $r1 = (java.lang.String) r0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label4:
        return $i1;
    }

    private boolean canAllocate(int)
    {
        int $i0, $i1, i2, $i3;
        char[] $r1, $r2;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        $i1 = lengthof $r2;

        $i0 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset>;

        $i3 = $i1 - $i0;

        if $i3 < i2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private char[] allocate(int)
    {
        boolean $z0, $z1;
        java.lang.AssertionError $r4, $r9;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        char[] $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r10;
        org.apache.xmlbeans.impl.store.CharUtil r0;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        i3 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r7 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        if $r7 == null goto label1;

        $r8 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        $i17 = lengthof $r8;

        $i16 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset>;

        $i18 = $i17 - $i16;

        if $i18 > 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r10 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        if $r10 != null goto label2;

        $i14 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _charBufSize>;

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i14);

        $r5 = newarray (char)[$i15];

        r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer> = $r5;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset> = 0;

     label2:
        $i0 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset>;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = $i0;

        $r1 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        $i2 = lengthof $r1;

        $i1 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset>;

        $i4 = $i2 - $i1;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i3);

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = $i5;

        $r6 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        $z1 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $i11 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset>;

        $i10 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $i13 = $i11 + $i10;

        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        $i12 = lengthof $r3;

        if $i13 <= $i12 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        $i7 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset>;

        $i6 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $i8 = $i7 + $i6;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset> = $i8;

        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer>;

        $i9 = lengthof $r2;

        if $i8 != $i9 goto label4;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] _currentBuffer> = null;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _currentOffset> = 0;

     label4:
        return $r6;
    }

    public java.lang.Object saveChars(java.lang.Object, int, int)
    {
        int i0, i1;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: java.lang.Object saveChars(java.lang.Object,int,int,java.lang.Object,int,int)>(r1, i0, i1, null, 0, 0);

        return $r2;
    }

    public java.lang.Object saveChars(java.lang.Object, int, int, java.lang.Object, int, int)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin $r6, $r9, $r18;
        java.lang.AssertionError $r4, $r7, $r8, $r12, $r13, $r14, $r15, $r16;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, $i21, $i22, i23, i24;
        char[] $r1, $r5;
        org.apache.xmlbeans.impl.store.CharUtil r0;
        java.lang.Object r2, r3, $r10, $r11, r17, $r19, $r20;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil;

        r2 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.Object;

        i3 := @parameter4: int;

        i2 := @parameter5: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z12 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r2, i1, i0);

        if $z12 != 0 goto label01;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $z11 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r3, i3, i2);

        if $z11 != 0 goto label02;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label02:
        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] allocate(int)>(i0);

        $i17 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        $i18 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $z2 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        if $i18 <= i0 goto label03;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label03:
        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r1, $i17, r2, i1, $i18);

        $i16 = $i18 + i2;

        i19 = $i16;

        if i2 != 0 goto label04;

        r17 = $r1;

        i20 = $i17;

        goto label11;

     label04:
        if r3 != $r1 goto label06;

        $i15 = i3 + i2;

        if $i15 != $i17 goto label06;

        $z9 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z9 != 0 goto label05;

        $z10 = r3 instanceof char[];

        if $z10 != 0 goto label05;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label05:
        r17 = r3;

        i20 = i3;

        goto label11;

     label06:
        $z3 = r3 instanceof org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        if $z3 == 0 goto label08;

        $r9 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r3;

        $r10 = $r9.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        if $r10 != $r1 goto label08;

        $i11 = i3 + i2;

        $i10 = $r9.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        $i13 = $i11 - $i10;

        $i12 = $r9.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        $i14 = $i13 + $i12;

        if $i14 != $i17 goto label08;

        $z7 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z7 != 0 goto label07;

        $r11 = $r9.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $z8 = $r11 instanceof char[];

        if $z8 != 0 goto label07;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label07:
        r17 = r3;

        i20 = i3;

        goto label11;

     label08:
        $r18 = new org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        specialinvoke $r18.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void <init>(java.lang.Object,int,int,java.lang.Object,int)>(r3, i3, i2, $r1, $i17);

        i20 = 0;

        $i21 = $r18.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

        if $i21 <= 64 goto label09;

        $r19 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: java.lang.Object saveChars(java.lang.Object,int,int)>($r18, 0, $i16);

        goto label10;

     label09:
        $r19 = $r18;

     label10:
        r17 = $r19;

     label11:
        $i22 = i0 - $i18;

        if $i22 <= 0 goto label16;

        $r5 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: char[] allocate(int)>($i22);

        i23 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        i24 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $z5 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z5 != 0 goto label12;

        if i24 == $i22 goto label12;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label12:
        $z6 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z6 != 0 goto label13;

        if i23 == 0 goto label13;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label13:
        $i6 = i0 - $i22;

        $i7 = i1 + $i6;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r5, i23, r2, $i7, $i22);

        $r6 = new org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        specialinvoke $r6.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void <init>(java.lang.Object,int,int,java.lang.Object,int)>(r17, i20, $i16, $r5, i23);

        i20 = 0;

        $i9 = $i16 + $i22;

        i19 = $i9;

        $i8 = $r6.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

        if $i8 <= 64 goto label14;

        $r20 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil: java.lang.Object saveChars(java.lang.Object,int,int)>($r6, 0, $i9);

        goto label15;

     label14:
        $r20 = $r6;

     label15:
        r17 = $r20;

     label16:
        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc> = i20;

        r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc> = i19;

        $z13 = <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled>;

        if $z13 != 0 goto label17;

        $i5 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _offSrc>;

        $i4 = r0.<org.apache.xmlbeans.impl.store.CharUtil: int _cchSrc>;

        $z4 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r17, $i5, $i4);

        if $z4 != 0 goto label17;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label17:
        return r17;
    }

    private static void dumpText(java.io.PrintStream, java.lang.String)
    {
        java.io.PrintStream r0;
        char $c1;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r1;

        r0 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\"");

        i2 = 0;

     label01:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label10;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if i2 != 36 goto label02;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("...");

        goto label10;

     label02:
        $i3 = (int) $c1;

        if $i3 != 10 goto label03;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\n");

        goto label09;

     label03:
        $i4 = (int) $c1;

        if $i4 != 13 goto label04;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\r");

        goto label09;

     label04:
        $i5 = (int) $c1;

        if $i5 != 9 goto label05;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\t");

        goto label09;

     label05:
        $i6 = (int) $c1;

        if $i6 != 12 goto label06;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\f");

        goto label09;

     label06:
        $i7 = (int) $c1;

        if $i7 != 12 goto label07;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\f");

        goto label09;

     label07:
        $i8 = (int) $c1;

        if $i8 != 34 goto label08;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\\"");

        goto label09;

     label08:
        virtualinvoke r0.<java.io.PrintStream: void print(char)>($c1);

     label09:
        i2 = i2 + 1;

        goto label01;

     label10:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\"");

        return;
    }

    public static void dump(java.lang.Object, int, int)
    {
        java.io.PrintStream $r1, $r2;
        int i0, i1;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void dumpChars(java.io.PrintStream,java.lang.Object,int,int)>($r1, r0, i0, i1);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println()>();

        return;
    }

    public static void dumpChars(java.io.PrintStream, java.lang.Object, int, int)
    {
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r7, $r11, $r12, r13;
        boolean $z0, $z1, $z2;
        java.io.PrintStream r0;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin $r9;
        char[] $r10, r14;
        java.lang.Object r8;

        r0 := @parameter0: java.io.PrintStream;

        r8 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("off=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", cch=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r7);

        if r8 != null goto label01;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("<null-src>");

        goto label11;

     label01:
        $z0 = r8 instanceof java.lang.String;

        if $z0 == 0 goto label05;

        r13 = (java.lang.String) r8;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("String");

        if i0 != 0 goto label02;

        $i12 = virtualinvoke r13.<java.lang.String: int length()>();

        if i1 == $i12 goto label04;

     label02:
        if i0 < 0 goto label03;

        $i7 = virtualinvoke r13.<java.lang.String: int length()>();

        if i0 > $i7 goto label03;

        $i8 = i0 + i1;

        if $i8 < 0 goto label03;

        $i9 = i0 + i1;

        $i10 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i9 <= $i10 goto label04;

     label03:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" (Error)");

        return;

     label04:
        $i11 = i0 + i1;

        $r12 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(i0, $i11);

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void dumpText(java.io.PrintStream,java.lang.String)>(r0, $r12);

        goto label11;

     label05:
        $z1 = r8 instanceof char[];

        if $z1 == 0 goto label09;

        $r10 = (char[]) r8;

        r14 = (char[]) $r10;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("char[]");

        if i0 != 0 goto label06;

        $i6 = lengthof r14;

        if i1 == $i6 goto label08;

     label06:
        if i0 < 0 goto label07;

        $i2 = lengthof r14;

        if i0 > $i2 goto label07;

        $i3 = i0 + i1;

        if $i3 < 0 goto label07;

        $i5 = i0 + i1;

        $i4 = lengthof r14;

        if $i5 <= $i4 goto label08;

     label07:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" (Error)");

        return;

     label08:
        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>(r14, i0, i1);

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void dumpText(java.io.PrintStream,java.lang.String)>(r0, $r11);

        goto label11;

     label09:
        $z2 = r8 instanceof org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        if $z2 == 0 goto label10;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("CharJoin");

        $r9 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r8;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void access$200(org.apache.xmlbeans.impl.store.CharUtil$CharJoin,java.io.PrintStream,int,int)>($r9, r0, i0, i1);

        goto label11;

     label10:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("Unknown text source");

     label11:
        return;
    }

    public static boolean isValid(java.lang.Object, int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin $r1;
        char[] $r2, r3;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 < 0 goto label01;

        if i1 >= 0 goto label02;

     label01:
        return 0;

     label02:
        if r0 != null goto label05;

        if i1 != 0 goto label03;

        if i0 != 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        return $z4;

     label05:
        $z0 = r0 instanceof char[];

        if $z0 == 0 goto label08;

        $r2 = (char[]) r0;

        r3 = (char[]) $r2;

        $i5 = lengthof r3;

        if i1 > $i5 goto label06;

        $i7 = i1 + i0;

        $i6 = lengthof r3;

        if $i7 > $i6 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        return $z5;

     label08:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label11;

        r4 = (java.lang.String) r0;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if i1 > $i2 goto label09;

        $i3 = i1 + i0;

        $i4 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i3 > $i4 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        return $z6;

     label11:
        $z2 = r0 instanceof org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        if $z2 == 0 goto label12;

        $r1 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r0;

        $z3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: boolean isValid(int,int)>(i1, i0);

        return $z3;

     label12:
        return 0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static int access$300()
    {
        int $i0;

        $i0 = <org.apache.xmlbeans.impl.store.CharUtil: int CHARUTIL_INITIAL_BUFSIZE>;

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.impl.store.CharUtil$1 $r3;
        int $i1;
        java.lang.Class $r0, $r2;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.store.CharUtil: int MAX_COPY> = 64;

        $r0 = <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.CharUtil");

        <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil>;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.CharUtil: boolean $assertionsDisabled> = $z1;

        $i1 = (int) 32768;

        <org.apache.xmlbeans.impl.store.CharUtil: int CHARUTIL_INITIAL_BUFSIZE> = $i1;

        $r3 = new org.apache.xmlbeans.impl.store.CharUtil$1;

        specialinvoke $r3.<org.apache.xmlbeans.impl.store.CharUtil$1: void <init>()>();

        <org.apache.xmlbeans.impl.store.CharUtil: java.lang.ThreadLocal tl_charUtil> = $r3;

        return;
    }
}
