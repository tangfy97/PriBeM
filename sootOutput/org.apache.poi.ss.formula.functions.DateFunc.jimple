public final class org.apache.poi.ss.formula.functions.DateFunc extends org.apache.poi.ss.formula.functions.Fixed3ArgFunction
{
    public static final org.apache.poi.ss.formula.functions.Function instance;

    private void <init>()
    {
        org.apache.poi.ss.formula.functions.DateFunc r0;

        r0 := @this: org.apache.poi.ss.formula.functions.DateFunc;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.Fixed3ArgFunction: void <init>()>();

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r5;
        int i0, i1, $i2, $i3, $i4;
        org.apache.poi.ss.formula.eval.EvaluationException $r4;
        double $d0, $d1, $d2, $d3, $d4;
        org.apache.poi.ss.formula.functions.DateFunc r6;
        org.apache.poi.ss.formula.eval.ValueEval r0, r1, r2;
        org.apache.poi.ss.formula.eval.NumberEval $r3;

        r6 := @this: org.apache.poi.ss.formula.functions.DateFunc;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        r1 := @parameter3: org.apache.poi.ss.formula.eval.ValueEval;

        r2 := @parameter4: org.apache.poi.ss.formula.eval.ValueEval;

     label1:
        $d0 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, i1);

        $d1 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r1, i0, i1);

        $d2 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r2, i0, i1);

        $i2 = staticinvoke <org.apache.poi.ss.formula.functions.DateFunc: int getYear(double)>($d0);

        $d3 = $d1 - 1.0;

        $i4 = (int) $d3;

        $i3 = (int) $d2;

        $d4 = staticinvoke <org.apache.poi.ss.formula.functions.DateFunc: double evaluate(int,int,int)>($i2, $i4, $i3);

        staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: void checkValue(double)>($d4);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r5;

     label4:
        $r3 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r3.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>($d4);

        return $r3;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label2 with label3;
    }

    private static double evaluate(int, int, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r1;
        java.util.GregorianCalendar $r5;
        java.util.Date $r3;
        int i0, $i1, $i2, i3, i4, i5, $i7, $i9;
        org.apache.poi.ss.formula.eval.EvaluationException $r4;
        double $d0;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        if i3 >= 0 goto label1;

        $r4 = new org.apache.poi.ss.formula.eval.EvaluationException;

        $r1 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID>;

        specialinvoke $r4.<org.apache.poi.ss.formula.eval.EvaluationException: void <init>(org.apache.poi.ss.formula.eval.ErrorEval)>($r1);

        throw $r4;

     label1:
        if i4 >= 0 goto label2;

        $i7 = (int) -1;

        i3 = i3 + $i7;

        i4 = i4 + 12;

        goto label1;

     label2:
        if i3 != 1900 goto label3;

        if i4 != 1 goto label3;

        if i0 != 29 goto label3;

        return 60.0;

     label3:
        i5 = i0;

        if i3 != 1900 goto label6;

        if i4 != 0 goto label4;

        if i0 >= 60 goto label5;

     label4:
        if i4 != 1 goto label6;

        if i0 < 30 goto label6;

     label5:
        $i9 = (int) -1;

        i5 = i0 + $i9;

     label6:
        $r5 = new java.util.GregorianCalendar;

        specialinvoke $r5.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r5.<java.util.Calendar: void set(int,int,int,int,int,int)>(i3, i4, i5, 0, 0, 0);

        virtualinvoke $r5.<java.util.Calendar: void set(int,int)>(14, 0);

        if i0 >= 0 goto label7;

        $i1 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(1);

        if $i1 != 1900 goto label7;

        if i4 <= 1 goto label7;

        $i2 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2);

        if $i2 >= 2 goto label7;

        virtualinvoke $r5.<java.util.Calendar: void add(int,int)>(5, 1);

     label7:
        $r3 = virtualinvoke $r5.<java.util.Calendar: java.util.Date getTime()>();

        $d0 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: double getExcelDate(java.util.Date,boolean)>($r3, 0);

        return $d0;
    }

    private static int getYear(double)
    {
        int i0, $i1, $i3;
        double d0;

        d0 := @parameter0: double;

        i0 = (int) d0;

        if i0 >= 0 goto label1;

        $i3 = (int) -1;

        return $i3;

     label1:
        if i0 >= 1900 goto label2;

        $i1 = 1900 + i0;

        goto label3;

     label2:
        $i1 = i0;

     label3:
        return $i1;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.functions.DateFunc $r0;

        $r0 = new org.apache.poi.ss.formula.functions.DateFunc;

        specialinvoke $r0.<org.apache.poi.ss.formula.functions.DateFunc: void <init>()>();

        <org.apache.poi.ss.formula.functions.DateFunc: org.apache.poi.ss.formula.functions.Function instance> = $r0;

        return;
    }
}
