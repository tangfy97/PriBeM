public final class org.codehaus.jackson.map.deser.impl.BeanPropertyMap extends java.lang.Object
{
    private final org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets;
    private final int _hashMask;
    private final int _size;

    public void <init>(java.util.Collection)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty r5;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r0;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r6;
        boolean $z0;
        java.util.Iterator $r3;
        java.util.Collection r1;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] r2;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int _size> = $i0;

        $i1 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int _size>;

        $i2 = staticinvoke <org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int findSize(int)>($i1);

        $i3 = $i2 - 1;

        r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int _hashMask> = $i3;

        r2 = newarray (org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket)[$i2];

        $r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r4;

        $r6 = virtualinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getName()>();

        $i4 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

        $i5 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int _hashMask>;

        i6 = $i4 & $i5;

        $r7 = new org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket;

        $r8 = r2[i6];

        specialinvoke $r7.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: void <init>(org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket,java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>($r8, $r6, r5);

        r2[i6] = $r7;

        goto label1;

     label2:
        r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets> = r2;

        return;
    }

    public void assignIndexes()
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r2;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r0;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket r3;
        int i0, $i1, i2, i3;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] r1;

        r0 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        i2 = 0;

        r1 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        r3 = r1[i3];

     label2:
        if r3 == null goto label3;

        $r2 = r3.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.SettableBeanProperty value>;

        $i1 = i2;

        i2 = i2 + 1;

        virtualinvoke $r2.<org.codehaus.jackson.map.deser.SettableBeanProperty: void assignIndex(int)>($i1);

        r3 = r3.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next>;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    private static final int findSize(int)
    {
        int i0, $i1, i2, $i3, i4;

        i0 := @parameter0: int;

        if i0 > 32 goto label1;

        $i3 = i0 + i0;

        goto label2;

     label1:
        $i1 = i0 >> 2;

        $i3 = i0 + $i1;

     label2:
        i2 = $i3;

        i4 = 2;

     label3:
        if i4 >= i2 goto label4;

        i4 = i4 + i4;

        goto label3;

     label4:
        return i4;
    }

    public int size()
    {
        int $i0;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r0;

        r0 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        $i0 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int _size>;

        return $i0;
    }

    public java.util.Iterator allProperties()
    {
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] $r2;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r1;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl $r0;

        r1 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        $r0 = new org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl;

        $r2 = r1.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: void <init>(org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[])>($r2);

        return $r0;
    }

    public org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r5, $r7, $r8;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r1;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket $r4, r9;
        int $i0, $i1, i2;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] $r2;
        java.lang.String r0, $r3, $r6;

        r1 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        $i1 = r1.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int _hashMask>;

        i2 = $i0 & $i1;

        $r2 = r1.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        r9 = $r2[i2];

        if r9 != null goto label1;

        return null;

     label1:
        $r3 = r9.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: java.lang.String key>;

        if $r3 != r0 goto label2;

        $r8 = r9.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.SettableBeanProperty value>;

        return $r8;

     label2:
        $r4 = r9.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next>;

        r9 = $r4;

        if $r4 == null goto label3;

        $r6 = $r4.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: java.lang.String key>;

        if $r6 != r0 goto label2;

        $r7 = $r4.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.SettableBeanProperty value>;

        return $r7;

     label3:
        $r5 = specialinvoke r1.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty _findWithEquals(java.lang.String,int)>(r0, i2);

        return $r5;
    }

    public void replace(org.codehaus.jackson.map.deser.SettableBeanProperty)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty r0, $r14;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r2;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket $r5, $r13, r17, r18;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r12, $r15, $r16;
        java.util.NoSuchElementException $r7;
        boolean $z0, z1, z2, z3;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] $r3, $r4, $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r2 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        r0 := @parameter0: org.codehaus.jackson.map.deser.SettableBeanProperty;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $r3 = r2.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        $i1 = lengthof $r3;

        $i2 = $i1 - 1;

        i3 = $i0 & $i2;

        r17 = null;

        z1 = 0;

        z3 = 0;

        z2 = 0;

        $r4 = r2.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        r18 = $r4[i3];

     label1:
        if r18 == null goto label4;

        if z3 != 0 goto label2;

        $r16 = r18.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: java.lang.String key>;

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        goto label3;

     label2:
        $r13 = new org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket;

        $r15 = r18.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: java.lang.String key>;

        $r14 = r18.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.SettableBeanProperty value>;

        specialinvoke $r13.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: void <init>(org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket,java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r17, $r15, $r14);

        r17 = $r13;

     label3:
        r18 = r18.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next>;

        goto label1;

     label4:
        if z2 != 0 goto label5;

        $r7 = new java.util.NoSuchElementException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No entry \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' found, can\'t replace");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label5:
        $r6 = r2.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        $r5 = new org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: void <init>(org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket,java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r17, $r1, r0);

        $r6[i3] = $r5;

        return;
    }

    public void remove(org.codehaus.jackson.map.deser.SettableBeanProperty)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty r0, $r13;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r2;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket $r12, r16, r17;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r11, $r14, $r15;
        java.util.NoSuchElementException $r6;
        boolean $z0, z1, z2, z3;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] $r3, $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r2 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        r0 := @parameter0: org.codehaus.jackson.map.deser.SettableBeanProperty;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $r3 = r2.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        $i1 = lengthof $r3;

        $i2 = $i1 - 1;

        i3 = $i0 & $i2;

        r16 = null;

        z1 = 0;

        z3 = 0;

        z2 = 0;

        $r4 = r2.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        r17 = $r4[i3];

     label1:
        if r17 == null goto label4;

        if z3 != 0 goto label2;

        $r15 = r17.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: java.lang.String key>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        goto label3;

     label2:
        $r12 = new org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket;

        $r14 = r17.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: java.lang.String key>;

        $r13 = r17.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.SettableBeanProperty value>;

        specialinvoke $r12.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: void <init>(org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket,java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r16, $r14, $r13);

        r16 = $r12;

     label3:
        r17 = r17.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next>;

        goto label1;

     label4:
        if z2 != 0 goto label5;

        $r6 = new java.util.NoSuchElementException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No entry \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' found, can\'t remove");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label5:
        $r5 = r2.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        $r5[i3] = r16;

        return;
    }

    private org.codehaus.jackson.map.deser.SettableBeanProperty _findWithEquals(java.lang.String, int)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r4;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r0;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket r5;
        int i0;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] $r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        r5 = $r1[i0];

     label1:
        if r5 == null goto label3;

        $r3 = r5.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: java.lang.String key>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r5.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.SettableBeanProperty value>;

        return $r4;

     label2:
        r5 = r5.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next>;

        goto label1;

     label3:
        return null;
    }
}
