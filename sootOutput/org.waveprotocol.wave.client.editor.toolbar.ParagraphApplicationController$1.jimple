class org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.waveprotocol.wave.model.document.util.Range val$range;
    final boolean val$isOn;
    final org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController this$0;

    void <init>(org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController, org.waveprotocol.wave.model.document.util.Range, boolean)
    {
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController r1;
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1 r0;
        org.waveprotocol.wave.model.document.util.Range r2;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController;

        r2 := @parameter1: org.waveprotocol.wave.model.document.util.Range;

        z0 := @parameter2: boolean;

        r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController this$0> = r1;

        r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: org.waveprotocol.wave.model.document.util.Range val$range> = r2;

        r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: boolean val$isOn> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle $r7;
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController $r1, $r6;
        org.waveprotocol.wave.client.editor.EditorContext $r2;
        org.waveprotocol.wave.client.editor.content.CMutableDocument $r3;
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1 r0;
        int $i0, $i1;
        org.waveprotocol.wave.model.document.util.Range $r4, $r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.EditorContext access$000(org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController)>($r1);

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.EditorContext: org.waveprotocol.wave.client.editor.content.CMutableDocument getDocument()>();

        $r4 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: org.waveprotocol.wave.model.document.util.Range val$range>;

        $i0 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.util.Range: int getStart()>();

        $r5 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: org.waveprotocol.wave.model.document.util.Range val$range>;

        $i1 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.util.Range: int getEnd()>();

        $r6 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController this$0>;

        $r7 = staticinvoke <org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle access$100(org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController)>($r6);

        $z0 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: boolean val$isOn>;

        staticinvoke <org.waveprotocol.wave.client.editor.content.paragraph.Paragraph: void apply(org.waveprotocol.wave.model.document.indexed.LocationMapper,int,int,org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle,boolean)>($r3, $i0, $i1, $r7, $z0);

        return;
    }
}
