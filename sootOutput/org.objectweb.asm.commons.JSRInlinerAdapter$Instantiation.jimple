class org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation extends java.util.AbstractMap
{
    final org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation previous;
    public final java.util.BitSet subroutine;
    public final java.util.Map rangeTable;
    public final org.objectweb.asm.tree.LabelNode returnLabel;
    final org.objectweb.asm.commons.JSRInlinerAdapter this$0;

    void <init>(org.objectweb.asm.commons.JSRInlinerAdapter, org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation, java.util.BitSet)
    {
        org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation r0, r3, $r8, r19;
        java.util.HashMap $r2;
        java.util.Map $r10;
        int $i0, $i1, i2;
        java.lang.String $r18;
        org.objectweb.asm.tree.InsnList $r5, $r6;
        org.objectweb.asm.tree.LabelNode r9, $r11, $r12, r20;
        java.lang.RuntimeException $r14;
        org.objectweb.asm.tree.AbstractInsnNode $r7;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.util.BitSet r4, $r13;
        org.objectweb.asm.commons.JSRInlinerAdapter r1;

        r0 := @this: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation;

        r1 := @parameter0: org.objectweb.asm.commons.JSRInlinerAdapter;

        r3 := @parameter1: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation;

        r4 := @parameter2: java.util.BitSet;

        r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter this$0> = r1;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: java.util.Map rangeTable> = $r2;

        r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation previous> = r3;

        r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: java.util.BitSet subroutine> = r4;

        r19 = r3;

     label01:
        if r19 == null goto label03;

        $r13 = r19.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: java.util.BitSet subroutine>;

        if $r13 != r4 goto label02;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recursive invocation of ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label02:
        r19 = r19.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation previous>;

        goto label01;

     label03:
        if r3 == null goto label04;

        $r12 = new org.objectweb.asm.tree.LabelNode;

        specialinvoke $r12.<org.objectweb.asm.tree.LabelNode: void <init>()>();

        r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.tree.LabelNode returnLabel> = $r12;

        goto label05;

     label04:
        r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.tree.LabelNode returnLabel> = null;

     label05:
        r20 = null;

        i2 = 0;

        $r5 = r1.<org.objectweb.asm.commons.JSRInlinerAdapter: org.objectweb.asm.tree.InsnList instructions>;

        $i0 = virtualinvoke $r5.<org.objectweb.asm.tree.InsnList: int size()>();

     label06:
        if i2 >= $i0 goto label10;

        $r6 = r1.<org.objectweb.asm.commons.JSRInlinerAdapter: org.objectweb.asm.tree.InsnList instructions>;

        $r7 = virtualinvoke $r6.<org.objectweb.asm.tree.InsnList: org.objectweb.asm.tree.AbstractInsnNode get(int)>(i2);

        $i1 = virtualinvoke $r7.<org.objectweb.asm.tree.AbstractInsnNode: int getType()>();

        if $i1 != 8 goto label08;

        r9 = (org.objectweb.asm.tree.LabelNode) $r7;

        if r20 != null goto label07;

        $r11 = new org.objectweb.asm.tree.LabelNode;

        specialinvoke $r11.<org.objectweb.asm.tree.LabelNode: void <init>()>();

        r20 = $r11;

     label07:
        $r10 = r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: java.util.Map rangeTable>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r20);

        goto label09;

     label08:
        $r8 = virtualinvoke r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation findOwner(int)>(i2);

        if $r8 != r0 goto label09;

        r20 = null;

     label09:
        i2 = i2 + 1;

        goto label06;

     label10:
        return;
    }

    public org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation findOwner(int)
    {
        org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation r0, r5, r6;
        int i0;
        java.util.BitSet $r1, $r3, $r4;
        org.objectweb.asm.commons.JSRInlinerAdapter $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation;

        i0 := @parameter0: int;

        $r1 = r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: java.util.BitSet subroutine>;

        $z0 = virtualinvoke $r1.<java.util.BitSet: boolean get(int)>(i0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter this$0>;

        $r3 = $r2.<org.objectweb.asm.commons.JSRInlinerAdapter: java.util.BitSet dualCitizens>;

        $z1 = virtualinvoke $r3.<java.util.BitSet: boolean get(int)>(i0);

        if $z1 != 0 goto label2;

        return r0;

     label2:
        r5 = r0;

        r6 = r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation previous>;

     label3:
        if r6 == null goto label5;

        $r4 = r6.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: java.util.BitSet subroutine>;

        $z2 = virtualinvoke $r4.<java.util.BitSet: boolean get(int)>(i0);

        if $z2 == 0 goto label4;

        r5 = r6;

     label4:
        r6 = r6.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation previous>;

        goto label3;

     label5:
        return r5;
    }

    public org.objectweb.asm.tree.LabelNode gotoLabel(org.objectweb.asm.tree.LabelNode)
    {
        org.objectweb.asm.tree.InsnList $r3;
        org.objectweb.asm.tree.LabelNode r2, $r7;
        org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation r0, $r4;
        java.util.Map $r5;
        int $i0;
        java.lang.Object $r6;
        org.objectweb.asm.commons.JSRInlinerAdapter $r1;

        r0 := @this: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation;

        r2 := @parameter0: org.objectweb.asm.tree.LabelNode;

        $r1 = r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter this$0>;

        $r3 = $r1.<org.objectweb.asm.commons.JSRInlinerAdapter: org.objectweb.asm.tree.InsnList instructions>;

        $i0 = virtualinvoke $r3.<org.objectweb.asm.tree.InsnList: int indexOf(org.objectweb.asm.tree.AbstractInsnNode)>(r2);

        $r4 = virtualinvoke r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation findOwner(int)>($i0);

        $r5 = $r4.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: java.util.Map rangeTable>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r7 = (org.objectweb.asm.tree.LabelNode) $r6;

        return $r7;
    }

    public org.objectweb.asm.tree.LabelNode rangeLabel(org.objectweb.asm.tree.LabelNode)
    {
        java.util.Map $r2;
        org.objectweb.asm.tree.LabelNode r1, $r4;
        org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation r0;
        java.lang.Object $r3;

        r0 := @this: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation;

        r1 := @parameter0: org.objectweb.asm.tree.LabelNode;

        $r2 = r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: java.util.Map rangeTable>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.objectweb.asm.tree.LabelNode) $r3;

        return $r4;
    }

    public java.util.Set entrySet()
    {
        org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation r0;

        r0 := @this: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation;

        return null;
    }

    public org.objectweb.asm.tree.LabelNode get(java.lang.Object)
    {
        org.objectweb.asm.tree.LabelNode $r2, $r3;
        org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation r0;
        java.lang.Object r1;

        r0 := @this: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.objectweb.asm.tree.LabelNode) r1;

        $r3 = virtualinvoke r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.tree.LabelNode gotoLabel(org.objectweb.asm.tree.LabelNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        org.objectweb.asm.tree.LabelNode $r2;
        org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation r0;
        java.lang.Object r1;

        r0 := @this: org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation: org.objectweb.asm.tree.LabelNode get(java.lang.Object)>(r1);

        return $r2;
    }
}
