public class org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces extends java.lang.Object implements org.apache.xml.dtm.ref.IncrementalSAXSource
{
    java.lang.reflect.Method fParseSomeSetup;
    java.lang.reflect.Method fParseSome;
    java.lang.Object fPullParserConfig;
    java.lang.reflect.Method fConfigSetInput;
    java.lang.reflect.Method fConfigParse;
    java.lang.reflect.Method fSetInputSource;
    java.lang.reflect.Constructor fConfigInputSourceCtor;
    java.lang.reflect.Method fConfigSetByteStream;
    java.lang.reflect.Method fConfigSetCharStream;
    java.lang.reflect.Method fConfigSetEncoding;
    java.lang.reflect.Method fReset;
    org.apache.xerces.parsers.SAXParser fIncrementalParser;
    private boolean fParseInProgress;
    static final java.lang.Object[] noparms;
    static final java.lang.Object[] parmsfalse;
    static java.lang.Class class$org$apache$xerces$parsers$SAXParser;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$io$InputStream;
    static java.lang.Class class$java$io$Reader;
    static java.lang.Class class$org$xml$sax$InputSource;

    public void <init>() throws java.lang.NoSuchMethodException
    {
        java.lang.reflect.Method $r16, $r24, $r27, $r30, $r33, $r36, $r41, $r42;
        org.apache.xerces.parsers.SAXParser $r12, $r34, $r40, $r43;
        java.lang.Exception $r38;
        java.lang.ClassLoader $r1, $r6, $r13;
        java.lang.Object[] $r9;
        java.lang.reflect.Constructor $r5, $r21;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0, $r39;
        java.lang.Class[] $r3, $r15, $r17, $r22, $r25, $r28, $r31, $r37;
        java.lang.Class $r2, $r4, $r7, $r14, $r18, $r19, $r20, $r23, $r26, $r29, $r32, $r35, $r44, $r45, $r46, $r47, $r48, $r49, $r50;
        java.lang.Object $r8, $r10, $r11;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSomeSetup> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSome> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object fPullParserConfig> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetInput> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigParse> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fSetInputSource> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Constructor fConfigInputSourceCtor> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetByteStream> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetCharStream> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetEncoding> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fReset> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: boolean fParseInProgress> = 0;

     label01:
        $r1 = staticinvoke <org.apache.xml.dtm.ref.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r2 = staticinvoke <org.apache.xml.dtm.ref.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xerces.xni.parser.XMLParserConfiguration", $r1, 1);

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = $r2;

        $r4 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$org$apache$xerces$parsers$SAXParser>;

        if $r4 != null goto label02;

        $r44 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$(java.lang.String)>("org.apache.xerces.parsers.SAXParser");

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$org$apache$xerces$parsers$SAXParser> = $r44;

        goto label03;

     label02:
        $r44 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$org$apache$xerces$parsers$SAXParser>;

     label03:
        $r5 = virtualinvoke $r44.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        $r6 = staticinvoke <org.apache.xml.dtm.ref.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r7 = staticinvoke <org.apache.xml.dtm.ref.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xerces.parsers.StandardParserConfiguration", $r6, 1);

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>();

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object fPullParserConfig> = $r8;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object fPullParserConfig>;

        $r9[0] = $r10;

        $r11 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r9);

        $r12 = (org.apache.xerces.parsers.SAXParser) $r11;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser> = $r12;

        $r13 = staticinvoke <org.apache.xml.dtm.ref.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r14 = staticinvoke <org.apache.xml.dtm.ref.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xerces.xni.parser.XMLInputSource", $r13, 1);

        $r15 = newarray (java.lang.Class)[1];

        $r15[0] = $r14;

        $r16 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setInputSource", $r15);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetInput> = $r16;

        $r17 = newarray (java.lang.Class)[3];

        $r18 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String>;

        if $r18 != null goto label04;

        $r45 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String> = $r45;

        goto label05;

     label04:
        $r45 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String>;

     label05:
        $r17[0] = $r45;

        $r19 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String>;

        if $r19 != null goto label06;

        $r46 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String> = $r46;

        goto label07;

     label06:
        $r46 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String>;

     label07:
        $r17[1] = $r46;

        $r20 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String>;

        if $r20 != null goto label08;

        $r47 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String> = $r47;

        goto label09;

     label08:
        $r47 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String>;

     label09:
        $r17[2] = $r47;

        $r21 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r17);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Constructor fConfigInputSourceCtor> = $r21;

        $r22 = newarray (java.lang.Class)[1];

        $r23 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$io$InputStream>;

        if $r23 != null goto label10;

        $r48 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$(java.lang.String)>("java.io.InputStream");

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$io$InputStream> = $r48;

        goto label11;

     label10:
        $r48 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$io$InputStream>;

     label11:
        $r22[0] = $r48;

        $r24 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setByteStream", $r22);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetByteStream> = $r24;

        $r25 = newarray (java.lang.Class)[1];

        $r26 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$io$Reader>;

        if $r26 != null goto label12;

        $r49 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$(java.lang.String)>("java.io.Reader");

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$io$Reader> = $r49;

        goto label13;

     label12:
        $r49 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$io$Reader>;

     label13:
        $r25[0] = $r49;

        $r27 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setCharacterStream", $r25);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetCharStream> = $r27;

        $r28 = newarray (java.lang.Class)[1];

        $r29 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String>;

        if $r29 != null goto label14;

        $r50 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String> = $r50;

        goto label15;

     label14:
        $r50 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$java$lang$String>;

     label15:
        $r28[0] = $r50;

        $r30 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setEncoding", $r28);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetEncoding> = $r30;

        $r31 = newarray (java.lang.Class)[1];

        $r32 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r31[0] = $r32;

        $r33 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("parse", $r31);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigParse> = $r33;

        $r37 = newarray (java.lang.Class)[0];

        $r34 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        $r35 = virtualinvoke $r34.<java.lang.Object: java.lang.Class getClass()>();

        $r36 = virtualinvoke $r35.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("reset", $r37);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fReset> = $r36;

     label16:
        goto label18;

     label17:
        $r38 := @caughtexception;

        $r39 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        $r40 = new org.apache.xerces.parsers.SAXParser;

        specialinvoke $r40.<org.apache.xerces.parsers.SAXParser: void <init>()>();

        specialinvoke $r39.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: void <init>(org.apache.xerces.parsers.SAXParser)>($r40);

        $r41 = $r39.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSomeSetup>;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSomeSetup> = $r41;

        $r42 = $r39.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSome>;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSome> = $r42;

        $r43 = $r39.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser> = $r43;

     label18:
        return;

        catch java.lang.Exception from label01 to label16 with label17;
    }

    public void <init>(org.apache.xerces.parsers.SAXParser) throws java.lang.NoSuchMethodException
    {
        org.apache.xerces.parsers.SAXParser r1;
        java.lang.Class[] $r3, $r7;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0;
        java.lang.Class $r2, $r4, $r8;
        java.lang.reflect.Method $r5, $r6;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        r1 := @parameter0: org.apache.xerces.parsers.SAXParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSomeSetup> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSome> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object fPullParserConfig> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetInput> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigParse> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fSetInputSource> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Constructor fConfigInputSourceCtor> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetByteStream> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetCharStream> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetEncoding> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fReset> = null;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: boolean fParseInProgress> = 0;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser> = r1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$org$xml$sax$InputSource>;

        if $r4 != null goto label1;

        $r8 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$(java.lang.String)>("org.xml.sax.InputSource");

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$org$xml$sax$InputSource> = $r8;

        goto label2;

     label1:
        $r8 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Class class$org$xml$sax$InputSource>;

     label2:
        $r3[0] = $r8;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("parseSomeSetup", $r3);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSomeSetup> = $r5;

        $r7 = newarray (java.lang.Class)[0];

        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("parseSome", $r7);

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSome> = $r6;

        return;
    }

    public static org.apache.xml.dtm.ref.IncrementalSAXSource createIncrementalSAXSource()
    {
        org.apache.xerces.parsers.SAXParser $r3;
        java.lang.NoSuchMethodException $r1;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces $r0;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Filter $r2;

     label1:
        $r0 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        specialinvoke $r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: void <init>()>();

        return $r0;

     label2:
        $r1 := @caughtexception;

        $r2 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Filter;

        specialinvoke $r2.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void <init>()>();

        $r3 = new org.apache.xerces.parsers.SAXParser;

        specialinvoke $r3.<org.apache.xerces.parsers.SAXParser: void <init>()>();

        virtualinvoke $r2.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setXMLReader(org.xml.sax.XMLReader)>($r3);

        return $r2;

        catch java.lang.NoSuchMethodException from label1 to label2 with label2;
    }

    public static org.apache.xml.dtm.ref.IncrementalSAXSource createIncrementalSAXSource(org.apache.xerces.parsers.SAXParser)
    {
        org.apache.xerces.parsers.SAXParser r1;
        java.lang.NoSuchMethodException $r2;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces $r0;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Filter $r3;

        r1 := @parameter0: org.apache.xerces.parsers.SAXParser;

     label1:
        $r0 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        specialinvoke $r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: void <init>(org.apache.xerces.parsers.SAXParser)>(r1);

        return $r0;

     label2:
        $r2 := @caughtexception;

        $r3 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Filter;

        specialinvoke $r3.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void <init>()>();

        virtualinvoke $r3.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setXMLReader(org.xml.sax.XMLReader)>(r1);

        return $r3;

        catch java.lang.NoSuchMethodException from label1 to label2 with label2;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0;
        org.apache.xerces.parsers.SAXParser $r2;
        org.xml.sax.ContentHandler r1;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        $r2 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r1);

        return;
    }

    public void setLexicalHandler(org.xml.sax.ext.LexicalHandler)
    {
        org.xml.sax.ext.LexicalHandler r1;
        org.xml.sax.SAXNotRecognizedException $r4;
        org.apache.xerces.parsers.SAXParser $r2;
        org.xml.sax.SAXNotSupportedException $r3;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        r1 := @parameter0: org.xml.sax.ext.LexicalHandler;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r1);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label3;
        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label4;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0;
        org.apache.xerces.parsers.SAXParser $r2;
        org.xml.sax.DTDHandler r1;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        $r2 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r1);

        return;
    }

    public void startParse(org.xml.sax.InputSource) throws org.xml.sax.SAXException
    {
        org.xml.sax.InputSource r2;
        org.apache.xerces.parsers.SAXParser $r1;
        java.lang.Exception $r9;
        org.xml.sax.SAXException $r3, $r5, $r7, $r10;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0;
        java.lang.String $r4, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        r2 := @parameter0: org.xml.sax.InputSource;

        $r1 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        if $r1 != null goto label1;

        $r7 = new org.xml.sax.SAXException;

        $r8 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_STARTPARSE_NEEDS_SAXPARSER", null);

        specialinvoke $r7.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label1:
        $z0 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: boolean fParseInProgress>;

        if $z0 == 0 goto label2;

        $r5 = new org.xml.sax.SAXException;

        $r6 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_STARTPARSE_WHILE_PARSING", null);

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        $z1 = specialinvoke r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: boolean parseSomeSetup(org.xml.sax.InputSource)>(r2);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label5:
        if $z1 != 0 goto label6;

        $r3 = new org.xml.sax.SAXException;

        $r4 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_INIT_PARSER", null);

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.Object deliverMoreNodes(boolean)
    {
        java.io.IOException $r4;
        java.lang.Exception $r2;
        java.io.Serializable r7;
        org.xml.sax.SAXException $r3, $r5;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0;
        java.lang.Boolean $r1, $r6;
        boolean z0, $z1;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: boolean fParseInProgress> = 0;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r1;

     label1:
        $z1 = specialinvoke r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: boolean parseSome()>();

        if $z1 == 0 goto label2;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label3;

     label2:
        $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label3:
        r7 = $r6;

     label4:
        goto label8;

     label5:
        $r5 := @caughtexception;

        r7 = $r5;

        goto label8;

     label6:
        $r4 := @caughtexception;

        r7 = $r4;

        goto label8;

     label7:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        r7 = $r3;

     label8:
        return r7;

        catch org.xml.sax.SAXException from label1 to label4 with label5;
        catch java.io.IOException from label1 to label4 with label6;
        catch java.lang.Exception from label1 to label4 with label7;
    }

    private boolean parseSomeSetup(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
    {
        java.lang.Object[] $r2, $r8, $r13, r20;
        java.lang.reflect.Constructor $r11;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0;
        java.lang.Boolean $r7;
        java.lang.String $r9, $r10, $r18;
        java.lang.reflect.Method $r1, $r5, $r15, $r17, $r19, $r22, $r24;
        boolean $z0, $z1;
        org.xml.sax.InputSource r3;
        org.apache.xerces.parsers.SAXParser $r4, $r21;
        java.io.Reader $r16;
        java.lang.Object $r6, $r12, $r23;
        java.io.InputStream $r14;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        r3 := @parameter0: org.xml.sax.InputSource;

        $r1 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetInput>;

        if $r1 == null goto label1;

        $r8 = newarray (java.lang.Object)[3];

        $r9 = virtualinvoke r3.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r8[0] = $r9;

        $r10 = virtualinvoke r3.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        $r8[1] = $r10;

        $r8[2] = null;

        $r11 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Constructor fConfigInputSourceCtor>;

        $r12 = virtualinvoke $r11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

        $r13 = newarray (java.lang.Object)[1];

        $r14 = virtualinvoke r3.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $r13[0] = $r14;

        $r15 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetByteStream>;

        virtualinvoke $r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

        $r16 = virtualinvoke r3.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        $r13[0] = $r16;

        $r17 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetCharStream>;

        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

        $r18 = virtualinvoke r3.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        $r13[0] = $r18;

        $r19 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetEncoding>;

        virtualinvoke $r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

        r20 = newarray (java.lang.Object)[0];

        $r22 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fReset>;

        $r21 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        virtualinvoke $r22.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r21, r20);

        $r13[0] = $r12;

        $r24 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetInput>;

        $r23 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object fPullParserConfig>;

        virtualinvoke $r24.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r23, $r13);

        $z1 = specialinvoke r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: boolean parseSome()>();

        return $z1;

     label1:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r5 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSomeSetup>;

        $r4 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r2);

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private boolean parseSome() throws org.xml.sax.SAXException, java.io.IOException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        org.apache.xerces.parsers.SAXParser $r3;
        java.lang.Object[] $r2, $r7;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces r0;
        java.lang.Boolean $r6, $r11, r12;
        java.lang.Object $r5, $r8, $r10;
        java.lang.reflect.Method $r1, $r4, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces;

        $r1 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigSetInput>;

        if $r1 == null goto label1;

        $r9 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fConfigParse>;

        $r8 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object fPullParserConfig>;

        $r7 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object[] parmsfalse>;

        $r10 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r8, $r7);

        r12 = (java.lang.Boolean) $r10;

        $r11 = (java.lang.Boolean) r12;

        $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $r4 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.reflect.Method fParseSome>;

        $r3 = r0.<org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xerces.parsers.SAXParser fIncrementalParser>;

        $r2 = <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object[] noparms>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r2);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static void main(java.lang.String[])
    {
        org.apache.xml.dtm.ref.IncrementalSAXSource $r2;
        boolean $z0, $z1, $z2, z3;
        java.lang.Exception $r12;
        org.xml.sax.SAXException $r18;
        org.apache.xml.dtm.ref.CoroutineManager $r21;
        java.lang.String[] r5;
        int $i0, $i1, $i2, $i3, i4, $i5, $i7, $i9;
        java.lang.Boolean $r14, $r15, $r20;
        java.lang.String $r7, $r9, $r10;
        java.io.PrintStream $r0, $r4, $r8, $r13, $r16, $r17;
        org.xml.sax.InputSource $r23;
        org.apache.xml.utils.WrappedRuntimeException $r24;
        org.apache.xml.serialize.XMLSerializer $r22;
        java.lang.Object r19;

        r5 := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Starting...");

        $r21 = new org.apache.xml.dtm.ref.CoroutineManager;

        specialinvoke $r21.<org.apache.xml.dtm.ref.CoroutineManager: void <init>()>();

        $i7 = (int) -1;

        $i0 = virtualinvoke $r21.<org.apache.xml.dtm.ref.CoroutineManager: int co_joinCoroutineSet(int)>($i7);

        $i9 = (int) -1;

        if $i0 != $i9 goto label01;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("ERROR: Couldn\'t allocate coroutine number.\n");

        return;

     label01:
        $r2 = staticinvoke <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: org.apache.xml.dtm.ref.IncrementalSAXSource createIncrementalSAXSource()>();

        $r22 = new org.apache.xml.serialize.XMLSerializer;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r22.<org.apache.xml.serialize.XMLSerializer: void <init>(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)>($r4, null);

        interfaceinvoke $r2.<org.apache.xml.dtm.ref.IncrementalSAXSource: void setContentHandler(org.xml.sax.ContentHandler)>($r22);

        interfaceinvoke $r2.<org.apache.xml.dtm.ref.IncrementalSAXSource: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>($r22);

        i4 = 0;

        goto label11;

     label02:
        $r23 = new org.xml.sax.InputSource;

        $r7 = r5[i4];

        specialinvoke $r23.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r7);

        z3 = 1;

        interfaceinvoke $r2.<org.apache.xml.dtm.ref.IncrementalSAXSource: void startParse(org.xml.sax.InputSource)>($r23);

        r19 = interfaceinvoke $r2.<org.apache.xml.dtm.ref.IncrementalSAXSource: java.lang.Object deliverMoreNodes(boolean)>(1);

        goto label05;

     label03:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("\nSome parsing successful, trying more.\n");

        $i2 = i4 + 1;

        $i1 = lengthof r5;

        if $i2 >= $i1 goto label04;

        $r10 = "!";

        $i3 = i4 + 1;

        $r9 = r5[$i3];

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label04;

        i4 = i4 + 1;

        z3 = 0;

     label04:
        r19 = interfaceinvoke $r2.<org.apache.xml.dtm.ref.IncrementalSAXSource: java.lang.Object deliverMoreNodes(boolean)>(z3);

     label05:
        $r20 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if r19 == $r20 goto label03;

        $z1 = r19 instanceof java.lang.Boolean;

        if $z1 == 0 goto label06;

        $r15 = (java.lang.Boolean) r19;

        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r15 != $r14 goto label06;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("\nParser ended (EOF or on request).\n");

        goto label08;

     label06:
        if r19 != null goto label07;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("\nUNEXPECTED: Parser says shut down prematurely.\n");

        goto label08;

     label07:
        $z2 = r19 instanceof java.lang.Exception;

        if $z2 == 0 goto label08;

        $r24 = new org.apache.xml.utils.WrappedRuntimeException;

        $r12 = (java.lang.Exception) r19;

        specialinvoke $r24.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r12);

        throw $r24;

     label08:
        goto label10;

     label09:
        $r18 := @caughtexception;

        virtualinvoke $r18.<java.lang.Throwable: void printStackTrace()>();

     label10:
        i4 = i4 + 1;

     label11:
        $i5 = lengthof r5;

        if i4 < $i5 goto label02;

        return;

        catch org.xml.sax.SAXException from label02 to label08 with label09;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Boolean $r2;
        java.lang.Object[] $r0, $r1;

        $r0 = newarray (java.lang.Object)[0];

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object[] noparms> = $r0;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r1[0] = $r2;

        <org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces: java.lang.Object[] parmsfalse> = $r1;

        return;
    }
}
