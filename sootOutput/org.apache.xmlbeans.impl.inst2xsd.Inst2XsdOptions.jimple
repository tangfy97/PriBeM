public class org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions extends java.lang.Object
{
    public static final int DESIGN_RUSSIAN_DOLL;
    public static final int DESIGN_SALAMI_SLICE;
    public static final int DESIGN_VENETIAN_BLIND;
    private int _design;
    public static final int SIMPLE_CONTENT_TYPES_SMART;
    public static final int SIMPLE_CONTENT_TYPES_STRING;
    private int _simpleContentTypes;
    public static final int ENUMERATION_NEVER;
    public static final int ENUMERATION_NOT_MORE_THAN_DEFAULT;
    private int _enumerations;
    private boolean _verbose;

    public void <init>()
    {
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _design> = 3;

        r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _simpleContentTypes> = 1;

        r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _enumerations> = 10;

        r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: boolean _verbose> = 0;

        return;
    }

    public int getDesign()
    {
        int $i0;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _design>;

        return $i0;
    }

    public void setDesign(int)
    {
        int i0;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown value for design type.");

        throw $r1;

     label1:
        r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _design> = i0;

        return;
    }

    public boolean isUseEnumerations()
    {
        int $i0;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _enumerations>;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getUseEnumerations()
    {
        int $i0;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _enumerations>;

        return $i0;
    }

    public void setUseEnumerations(int)
    {
        int i0;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("UseEnumerations must be set to a value bigger than 1");

        throw $r1;

     label1:
        r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _enumerations> = i0;

        return;
    }

    public int getSimpleContentTypes()
    {
        int $i0;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _simpleContentTypes>;

        return $i0;
    }

    public void setSimpleContentTypes(int)
    {
        int i0;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown value for simpleContentTypes.");

        throw $r1;

     label1:
        r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int _simpleContentTypes> = i0;

        return;
    }

    public boolean isVerbose()
    {
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $z0 = r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: boolean _verbose>;

        return $z0;
    }

    public void setVerbose(boolean)
    {
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: boolean _verbose> = z0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int ENUMERATION_NOT_MORE_THAN_DEFAULT> = 10;

        <org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int ENUMERATION_NEVER> = 1;

        <org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int SIMPLE_CONTENT_TYPES_STRING> = 2;

        <org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int SIMPLE_CONTENT_TYPES_SMART> = 1;

        <org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int DESIGN_VENETIAN_BLIND> = 3;

        <org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int DESIGN_SALAMI_SLICE> = 2;

        <org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int DESIGN_RUSSIAN_DOLL> = 1;

        return;
    }
}
