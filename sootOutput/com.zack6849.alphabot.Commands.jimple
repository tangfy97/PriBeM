public class com.zack6849.alphabot.Commands extends java.lang.Object
{
    static bsh.Interpreter interpreter;
    static java.util.List owners;
    static java.lang.String perms;
    static java.lang.String password;
    static com.zack6849.alphabot.Utils utils;

    public void <init>()
    {
        com.zack6849.alphabot.Commands r0;

        r0 := @this: com.zack6849.alphabot.Commands;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void shortenUrl(org.pircbotx.hooks.events.MessageEvent)
    {
        int $i0;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.String $r1, $r4, $r5;
        org.pircbotx.User $r3;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        if $i0 != 2 goto label1;

        $r4 = $r2[1];

        $r5 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String shortenUrl(java.lang.String)>($r4);

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r5);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r3, "Improper usage! correct usage: $shorten http://google.com/");

     label2:
        return;
    }

    public static void listOperators(org.pircbotx.hooks.events.MessageEvent)
    {
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r9, $r22;
        java.lang.StringBuilder $r14, $r15, $r16, $r26, $r27, $r28;
        org.pircbotx.User $r13, r32, r33;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.ArrayList $r7, $r20;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r11, $r12, $r17, $r19, $r24, $r25, $r29, $r31;
        java.util.Iterator $r10, $r23;
        char $c0;
        org.pircbotx.Channel $r8, $r21;
        java.lang.Object $r18, $r30;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = $r2[0];

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r5 = <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label3;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        $r21 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r22 = virtualinvoke $r21.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r23 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r30 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.pircbotx.User) $r30;

        $r31 = virtualinvoke r32.<org.pircbotx.User: java.lang.String getNick()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label1;

     label2:
        $r24 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[\\[\'\']|[\'\\]\'\']", "");

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current channel operators are ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r29);

     label3:
        $r6 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z1 == 0 goto label6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r9 = virtualinvoke $r8.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r18 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.pircbotx.User) $r18;

        $r19 = virtualinvoke r33.<org.pircbotx.User: java.lang.String getNick()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label4;

     label5:
        $r11 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[\\[\'\']|[\'\\]\'\']", "");

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current channel operators are ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r13, $r17);

     label6:
        return;
    }

    public static void joinChannel(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r4, $r8, $r10, $r12, $r13;
        org.pircbotx.PircBotX $r3, $r7, $r9;
        boolean $z0, $z1;
        org.pircbotx.Channel $r5;
        org.pircbotx.User $r6, $r11;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        if $i0 != 2 goto label3;

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r4 = $r2[1];

        $r5 = virtualinvoke $r3.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>($r4);

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = virtualinvoke $r5.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r6);

        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r12 = virtualinvoke $r11.<org.pircbotx.User: java.lang.String getNick()>();

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r12);

        if $z1 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>("k <3");

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r8 = $r2[1];

        virtualinvoke $r7.<org.pircbotx.PircBotX: void joinChannel(java.lang.String)>($r8);

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r10 = $r2[1];

        virtualinvoke $r9.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>($r10);

        goto label3;

     label2:
        $r13 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r13);

     label3:
        return;
    }

    public static void google(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i1, $i2, i3;
        java.lang.String $r1, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r22, r25;
        org.pircbotx.PircBotX $r6, $r13;
        boolean $z0;
        char $c0;
        org.pircbotx.Channel $r7;
        java.lang.StringBuilder $r20, $r21, $r23, $r24;
        org.pircbotx.User $r14;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = $r2[0];

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        r25 = "";

        $i1 = lengthof $r2;

        if $i1 < 2 goto label4;

        i3 = 1;

     label1:
        $i2 = lengthof $r2;

        if i3 >= $i2 goto label2;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r22 = $r2[i3];

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        i3 = i3 + 1;

        goto label1;

     label2:
        $r5 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label3;

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r14 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r15 = virtualinvoke r25.<java.lang.String: java.lang.String trim()>();

        $r16 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String google(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("%3F", "?");

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("%3D", "=");

        $r19 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String unescapeHtml(java.lang.String)>($r18);

        virtualinvoke $r13.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r14, $r19);

        return;

     label3:
        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r8 = virtualinvoke r25.<java.lang.String: java.lang.String trim()>();

        $r9 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String google(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("%3F", "?");

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("%3D", "=");

        $r12 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String unescapeHtml(java.lang.String)>($r11);

        virtualinvoke $r6.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r7, $r12);

     label4:
        return;
    }

    public static void setDelay(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        long $l2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.Integer $r13, $r18;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r7, $r10, $r12, $r17, $r21;
        org.pircbotx.PircBotX $r11;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r15, $r16, $r19, $r20;
        org.pircbotx.User $r4, $r14;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        if $i0 != 2 goto label2;

        $r3 = $r2[1];

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNumeric(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r12 = $r2[1];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $l2 = (long) $i1;

        virtualinvoke $r11.<org.pircbotx.PircBotX: void setMessageDelay(long)>($l2);

        $r14 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message delay set to ");

        $r17 = $r2[1];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" milliseconds!");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r14, $r21);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The argument ");

        $r7 = $r2[1];

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a number!");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r4, $r10);

     label2:
        return;
    }

    public static void authenticate(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.String $r2;
        org.pircbotx.PircBotX $r1;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r2 = <com.zack6849.alphabot.Commands: java.lang.String password>;

        virtualinvoke $r1.<org.pircbotx.PircBotX: void identify(java.lang.String)>($r2);

        return;
    }

    public static void listFiles(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.PircBotX $r11, $r17, $r29, $r31;
        boolean $z0, z1, z2, z3;
        java.lang.StringBuilder $r1, $r3, $r4, $r13, $r14, $r15, $r19, $r20, $r21, $r23, $r24, $r27, $r28;
        org.pircbotx.User $r12, $r30;
        org.pircbotx.hooks.events.MessageEvent r6;
        int $i1, $i2, i3;
        java.lang.String $r2, $r5, $r7, $r8, $r9, $r16, $r22, $r26, r33;
        char $c0;
        java.io.File $r0, $r25;
        org.pircbotx.Channel $r18, $r32;
        java.io.File[] $r10;

        r6 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r0 = new java.io.File;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <com.zack6849.alphabot.Config: java.lang.String CURRENT_DIR>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/dcc/");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r5);

        r33 = "";

        $r7 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $c0 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(0);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r9 = <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label1;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        goto label2;

     label1:
        z1 = 0;

        z3 = 0;

        z2 = 0;

     label2:
        $r10 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $i1 = lengthof $r10;

        if $i1 != 0 goto label5;

        if z2 == 0 goto label3;

        $r31 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r32 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r31.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r32, "no files in that directory!");

        goto label4;

     label3:
        $r29 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r30 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r29.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r30, "no files in that directory.");

     label4:
        return;

     label5:
        i3 = 0;

     label6:
        $i2 = lengthof $r10;

        if i3 >= $i2 goto label7;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r25 = $r10[i3];

        $r26 = virtualinvoke $r25.<java.io.File: java.lang.String getName()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        i3 = i3 + 1;

        goto label6;

     label7:
        if z3 == 0 goto label8;

        $r17 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r18 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("available files: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r18, $r22);

        goto label9;

     label8:
        $r11 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r12 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("available files: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r12, $r16);

     label9:
        return;
    }

    public static void sendFile(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.Thread $r3;
        int $i0;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.String $r1;
        com.zack6849.alphabot.Commands$1 $r4;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        if $i0 != 2 goto label1;

        $r3 = new java.lang.Thread;

        $r4 = new com.zack6849.alphabot.Commands$1;

        specialinvoke $r4.<com.zack6849.alphabot.Commands$1: void <init>(java.lang.String[],org.pircbotx.hooks.events.MessageEvent)>($r2, r0);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

     label1:
        return;
    }

    public static void globalSay(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0, $i1, i2;
        java.lang.String $r1, $r4, $r5, $r9, $r12, $r14, $r17;
        org.pircbotx.PircBotX $r13, $r16;
        org.pircbotx.Channel $r15;
        java.lang.StringBuilder $r3, $r7, $r8, $r10, $r11, $r18;
        org.pircbotx.User $r6;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i2 = 2;

     label1:
        $i0 = lengthof $r2;

        if i2 >= $i0 goto label2;

        $r17 = $r2[i2];

        $r18 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i1 = lengthof $r2;

        if $i1 < 3 goto label3;

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r14 = $r2[1];

        $r15 = virtualinvoke $r13.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>($r14);

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        virtualinvoke $r16.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r15, $r5);

        goto label4;

     label3:
        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usage: ");

        $r9 = <com.zack6849.alphabot.Bot: java.lang.String prefix>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GSAY #CHANNEL MESSAGE");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r6, $r12);

     label4:
        return;
    }

    public static void slap(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r6, $r9, $r11, $r17, $r20;
        org.pircbotx.PircBotX $r10, $r13;
        org.pircbotx.Channel $r14;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r15, $r16, $r18, $r19;
        org.pircbotx.User $r3, $r12;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        if $i0 != 2 goto label1;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r11 = $r2[1];

        $r12 = virtualinvoke $r10.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r11);

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r14 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("slaps ");

        $r17 = virtualinvoke $r12.<org.pircbotx.User: java.lang.String getNick()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" around a bit with a stack trace");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<org.pircbotx.PircBotX: void sendAction(org.pircbotx.Channel,java.lang.String)>($r14, $r20);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usage: ");

        $r6 = <com.zack6849.alphabot.Bot: java.lang.String prefix>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("slap <username>");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r3, $r9);

     label2:
        return;
    }

    public static void partChannel(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r4, $r13, $r14;
        org.pircbotx.PircBotX $r3, $r6, $r10;
        boolean $z0, $z1;
        java.util.Set $r8;
        org.pircbotx.Channel $r5, $r7, $r11;
        org.pircbotx.User $r9, $r12;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        if $i0 != 1 goto label3;

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r8 = virtualinvoke $r7.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label1;

        $r12 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r13 = virtualinvoke $r12.<org.pircbotx.User: java.lang.String getNick()>();

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r13);

        if $z1 == 0 goto label2;

     label1:
        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r10.<org.pircbotx.PircBotX: void partChannel(org.pircbotx.Channel)>($r11);

        goto label4;

     label2:
        $r14 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r14);

        goto label4;

     label3:
        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r4 = $r2[1];

        $r5 = virtualinvoke $r3.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>($r4);

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        virtualinvoke $r6.<org.pircbotx.PircBotX: void partChannel(org.pircbotx.Channel)>($r5);

     label4:
        return;
    }

    public static void sendAction(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0, i1;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r1, $r4, $r5;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i1 = 1;

     label1:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r5 = $r2[i1];

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        return;
    }

    public static void nope(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r5;
        org.pircbotx.hooks.events.MessageEvent r0;
        org.pircbotx.Channel $r3, $r7;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.lang.String $r1, $r4, $r9, $r12;
        org.pircbotx.PircBotX $r2, $r6;
        boolean $z0;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("@");

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = $r5[1];

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": http://www.youtube.com/watch?v=gvdf5n-zI14");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r7, $r12);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r2.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r3, "nope: http://www.youtube.com/watch?v=gvdf5n-zI14");

     label2:
        return;
    }

    public static void changeNickName(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r4, $r5, $r7;
        org.pircbotx.PircBotX $r6;
        org.pircbotx.User $r3;
        boolean $z0;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $i0 = lengthof $r2;

        if $i0 != 2 goto label1;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = $r2[1];

        virtualinvoke $r6.<org.pircbotx.PircBotX: void changeNick(java.lang.String)>($r7);

        goto label3;

     label1:
        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>("Usage: nick <new nickname>");

        goto label3;

     label2:
        $r5 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r5);

     label3:
        return;
    }

    public static void setPrefix(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r7, $r11, $r14, $r16, $r21, $r22;
        org.pircbotx.PircBotX $r10;
        boolean $z0, $z1, $z2;
        java.util.Set $r4, $r18;
        org.pircbotx.Channel $r3, $r17;
        java.lang.StringBuilder $r9, $r12, $r13, $r15;
        org.pircbotx.User $r5, $r6, $r8, $r19, $r20;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.Channel: java.util.Set getVoices()>();

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r17 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r18 = virtualinvoke $r17.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r19 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z1 = interfaceinvoke $r18.<java.util.Set: boolean contains(java.lang.Object)>($r19);

        if $z1 != 0 goto label1;

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r21 = virtualinvoke $r20.<org.pircbotx.User: java.lang.String getNick()>();

        $z2 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r21);

        if $z2 == 0 goto label3;

     label1:
        $i0 = lengthof $r2;

        if $i0 != 2 goto label2;

        $r7 = $r2[1];

        <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER> = $r7;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r11 = virtualinvoke $r10.<org.pircbotx.PircBotX: java.lang.String getNick()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' prefix was set to :");

        $r14 = <com.zack6849.alphabot.Bot: java.lang.String prefix>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r8, $r16);

        goto label4;

     label2:
        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r6, "Usage: $Bot prefix <new Bot prefix>");

        goto label4;

     label3:
        $r22 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r22);

     label4:
        return;
    }

    public static void listChannels(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.PircBotX $r5, $r10, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r6;
        java.lang.StringBuilder $r12, $r13, $r14, $r18, $r19, $r20, $r24, $r25, $r27, $r28;
        org.pircbotx.User $r17;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.String $r1, $r3, $r4, $r8, $r9, $r15, $r21, $r26, r29;
        java.util.Iterator $r7;
        char $c0;
        org.pircbotx.Channel $r11, r23;
        java.lang.Object $r22;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = $r2[0];

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        r29 = "";

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.PircBotX: java.util.Set getChannels()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r22 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.pircbotx.Channel) $r22;

        $z3 = virtualinvoke r23.<org.pircbotx.Channel: boolean isSecret()>();

        if $z3 != 0 goto label2;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r26 = virtualinvoke r23.<org.pircbotx.Channel: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        goto label1;

     label3:
        $r8 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label4;

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r17 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current channels: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r17, $r21);

        goto label5;

     label4:
        $r9 = <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z2 == 0 goto label5;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current channels: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r11, $r15);

     label5:
        return;
    }

    public static void checkAccount(org.pircbotx.hooks.events.MessageEvent)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r16, $r18, $r19, $r20, $r22, $r25, $r27, $r28, $r29, $r31, $r33, $r35, $r36, $r37, $r38, $r39, $r41, $r43, $r44, $r45, $r46, $r47;
        org.pircbotx.User $r5, $r15, $r24;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i1;
        java.lang.Boolean $r13;
        java.lang.String $r1, $r3, $r4, $r8, $r11, $r12, $r14, $r17, $r21, $r23, $r26, $r30, $r32, $r34, $r40, $r42, $r48, $r49;
        char $c0;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = $r2[0];

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $i1 = lengthof $r2;

        if $i1 != 2 goto label5;

        $r12 = $r2[1];

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean checkAccount(java.lang.String)>($r12);

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r14 = <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14);

        if $z1 == 0 goto label2;

        $z3 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label1;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = $r2[1];

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u000309");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u000f");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paid for minecraft");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r48);

        goto label2;

     label1:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = $r2[1];

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u000304");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has not ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u000f");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paid for minecraft");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r40);

     label2:
        $r49 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r49);

        if $z4 == 0 goto label4;

        $z2 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label3;

        $r24 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = $r2[1];

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u000309");

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r24, $r32);

        goto label4;

     label3:
        $r15 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = $r2[1];

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u000304");

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r15, $r23);

     label4:
        goto label6;

     label5:
        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You failed to specify a username! usage:  ");

        $r8 = <com.zack6849.alphabot.Bot: java.lang.String prefix>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paid <username>");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r5, $r11);

     label6:
        return;
    }

    public static void checkMojangServers(org.pircbotx.hooks.events.MessageEvent)
    {
        java.net.URL $r6, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.pircbotx.User $r20, $r38, $r39;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.String $r1, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r41, $r42, $r43;
        char $c0;
        java.io.IOException $r35, $r40;
        java.io.InputStreamReader $r8, $r23;
        java.io.BufferedReader $r7, $r22;
        java.io.InputStream $r9, $r24;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = $r2[0];

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r5 = <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label06;

     label01:
        $r21 = new java.net.URL;

        specialinvoke $r21.<java.net.URL: void <init>(java.lang.String)>("http://status.mojang.com/check");

        $r22 = new java.io.BufferedReader;

        $r23 = new java.io.InputStreamReader;

        $r24 = virtualinvoke $r21.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r23.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r24);

        specialinvoke $r22.<java.io.BufferedReader: void <init>(java.io.Reader)>($r23);

     label02:
        $r25 = virtualinvoke $r22.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r25 == null goto label03;

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("red", "\u000304Offline\u000f");

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("green", "\u000309Online\u000f");

        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[", "");

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("]", "");

        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{", "");

        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("}", "");

        $r32 = virtualinvoke $r31.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", " is currently ");

        $r33 = virtualinvoke $r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "");

        $r34 = virtualinvoke $r33.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(",", ", ");

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r34);

        goto label02;

     label03:
        goto label06;

     label04:
        $r40 := @caughtexception;

        $r41 = virtualinvoke $r40.<java.io.IOException: java.lang.String getMessage()>();

        $z3 = virtualinvoke $r41.<java.lang.String: boolean contains(java.lang.CharSequence)>("503");

        if $z3 == 0 goto label05;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>("The minecraft status server is temporarily unavailable, please try again later");

     label05:
        $r42 = virtualinvoke $r40.<java.io.IOException: java.lang.String getMessage()>();

        $z4 = virtualinvoke $r42.<java.lang.String: boolean contains(java.lang.CharSequence)>("404");

        if $z4 == 0 goto label06;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>("Uhoh, it would appear as if the haspaid page has been removed or relocated >_>");

     label06:
        $r43 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r43);

        if $z5 == 0 goto label12;

     label07:
        $r6 = new java.net.URL;

        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>("http://status.mojang.com/check");

        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

        $r9 = virtualinvoke $r6.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

     label08:
        $r10 = virtualinvoke $r7.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r10 == null goto label09;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("red", "\u000304Offline\u000f");

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("green", "\u000309Online\u000f");

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[", "");

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("]", "");

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{", "");

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("}", "");

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", " is currently ");

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "");

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(",", ", ");

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r20, $r19);

        goto label08;

     label09:
        goto label12;

     label10:
        $r35 := @caughtexception;

        $r36 = virtualinvoke $r35.<java.io.IOException: java.lang.String getMessage()>();

        $z1 = virtualinvoke $r36.<java.lang.String: boolean contains(java.lang.CharSequence)>("503");

        if $z1 == 0 goto label11;

        $r39 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r39, "The minecraft status server is temporarily unavailable, please try again later");

     label11:
        $r37 = virtualinvoke $r35.<java.io.IOException: java.lang.String getMessage()>();

        $z2 = virtualinvoke $r37.<java.lang.String: boolean contains(java.lang.CharSequence)>("404");

        if $z2 == 0 goto label12;

        $r38 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r38, "Uhoh, it would appear as if the haspaid page has been removed or relocated >_>");

     label12:
        return;

        catch java.io.IOException from label01 to label03 with label04;
        catch java.io.IOException from label07 to label09 with label10;
    }

    public static void say(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r5;
        org.pircbotx.hooks.events.MessageEvent r0;
        int i0, $i1;
        java.lang.String $r2, $r4, $r6, $r7, $r10, $r14;
        org.pircbotx.PircBotX $r8;
        boolean $z0, $z1;
        org.pircbotx.Channel $r9, $r12;
        java.lang.StringBuilder $r3, $r11;
        org.pircbotx.User $r1, $r13;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        $r12 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z1 = virtualinvoke $r12.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r13);

        if $z1 == 0 goto label4;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i0 = 1;

     label2:
        $i1 = lengthof $r5;

        if i0 >= $i1 goto label3;

        $r10 = $r5[i0];

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i0 = i0 + 1;

        goto label2;

     label3:
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r8.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r9, $r7);

        goto label5;

     label4:
        $r14 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r14);

     label5:
        return;
    }

    public static void checkServerStatus(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.Integer $r12;
        java.net.InetAddress $r10, $r14;
        org.pircbotx.PircBotX $r6;
        boolean $z0, $z1;
        java.util.logging.Logger $r18, $r23;
        org.pircbotx.User $r8;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.logging.Level $r19, $r24;
        int $i1, $i2, $i3;
        java.lang.String $r1, $r3, $r4, $r5, $r9, $r11, $r13, $r17, $r22, r25, $r26;
        char $c0;
        java.net.UnknownHostException $r15, $r20;
        org.pircbotx.Channel $r7;
        java.lang.Class $r16, $r21;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        r25 = null;

        $i1 = lengthof $r2;

        if $i1 != 2 goto label04;

     label01:
        $r13 = $r2[1];

        $r14 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r13);

        r25 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String checkServerStatus(java.net.InetAddress,int)>($r14, 25565);

     label02:
        goto label08;

     label03:
        $r20 := @caughtexception;

        $r21 = class "Lcom/zack6849/alphabot/Commands;";

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r22);

        $r24 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r23.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r24, null, $r20);

        goto label08;

     label04:
        $i2 = lengthof $r2;

        if $i2 != 3 goto label08;

     label05:
        $r9 = $r2[1];

        $r10 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r9);

        $r11 = $r2[2];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r11);

        $i3 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        r25 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String checkServerStatus(java.net.InetAddress,int)>($r10, $i3);

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

        $r16 = class "Lcom/zack6849/alphabot/Commands;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r17);

        $r19 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r19, null, $r15);

     label08:
        $r26 = <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r26);

        if $z1 == 0 goto label09;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r8, r25);

     label09:
        $r5 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label10;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r6.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r7, r25);

     label10:
        return;

        catch java.net.UnknownHostException from label01 to label02 with label03;
        catch java.net.UnknownHostException from label05 to label06 with label07;
    }

    public static void kill(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.String $r2, $r3, $r13, $r17, $r19;
        org.pircbotx.PircBotX $r4, $r7, $r10;
        boolean $z0, $z1;
        java.util.Iterator $r6;
        java.util.Set $r5;
        org.pircbotx.Channel r9;
        java.lang.Object $r8;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r18;
        org.pircbotx.User $r1, $r16;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r5 = virtualinvoke $r4.<org.pircbotx.PircBotX: java.util.Set getChannels()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.pircbotx.Channel) $r8;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PART ");

        $r13 = virtualinvoke r9.<org.pircbotx.Channel: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : Killed by ");

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r17 = virtualinvoke $r16.<org.pircbotx.User: java.lang.String getNick()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r19);

        goto label1;

     label2:
        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        virtualinvoke $r7.<org.pircbotx.PircBotX: void quitServer()>();

        goto label4;

     label3:
        $r3 = <com.zack6849.alphabot.Config: java.lang.String PERMISSIONS_DENIED>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r3);

     label4:
        return;
    }

    public static void op(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r7, $r12, $r13;
        org.pircbotx.PircBotX $r6, $r9;
        boolean $z0, $z1;
        java.util.Set $r4;
        org.pircbotx.Channel $r3, $r10;
        org.pircbotx.User $r5, $r8, $r11;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r12 = virtualinvoke $r11.<org.pircbotx.User: java.lang.String getNick()>();

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r12);

        if $z1 == 0 goto label3;

     label1:
        $i0 = lengthof $r2;

        if $i0 != 2 goto label2;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = $r2[1];

        $r8 = virtualinvoke $r6.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r7);

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r9.<org.pircbotx.PircBotX: void op(org.pircbotx.Channel,org.pircbotx.User)>($r10, $r8);

        goto label4;

     label2:
        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>("Usage: op <username>");

        goto label4;

     label3:
        $r13 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r13);

     label4:
        return;
    }

    public static void deop(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r5;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r4, $r7, $r13, $r16, $r20, $r21;
        org.pircbotx.PircBotX $r6, $r9, $r17;
        boolean $z0, $z1;
        java.util.Set $r2;
        org.pircbotx.Channel $r1, $r10, $r18;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;
        org.pircbotx.User $r3, $r8, $r19;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r19 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r20 = virtualinvoke $r19.<org.pircbotx.User: java.lang.String getNick()>();

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r20);

        if $z1 == 0 goto label4;

     label1:
        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r5;

        if $i0 != 2 goto label2;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = $r5[1];

        $r8 = virtualinvoke $r6.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r7);

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sorry ");

        $r13 = virtualinvoke $r8.<org.pircbotx.User: java.lang.String getNick()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" </3");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r10, $r16);

        $r17 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r17.<org.pircbotx.PircBotX: void deOp(org.pircbotx.Channel,org.pircbotx.User)>($r18, $r8);

        goto label3;

     label2:
        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>("Usage: deop <username>");

     label3:
        goto label5;

     label4:
        $r21 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r21);

     label5:
        return;
    }

    public static void voice(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r5;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r4, $r7, $r12, $r13;
        org.pircbotx.PircBotX $r6, $r9;
        boolean $z0, $z1;
        java.util.Set $r2;
        org.pircbotx.Channel $r1, $r10;
        org.pircbotx.User $r3, $r8, $r11;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r12 = virtualinvoke $r11.<org.pircbotx.User: java.lang.String getNick()>();

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r12);

        if $z1 == 0 goto label4;

     label1:
        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r5;

        if $i0 != 2 goto label2;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = $r5[1];

        $r8 = virtualinvoke $r6.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r7);

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r9.<org.pircbotx.PircBotX: void voice(org.pircbotx.Channel,org.pircbotx.User)>($r10, $r8);

        goto label3;

     label2:
        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>("Usage: voice <username>");

     label3:
        goto label5;

     label4:
        $r13 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r13);

     label5:
        return;
    }

    public static void deVoice(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r5;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r4, $r7, $r12, $r13;
        org.pircbotx.PircBotX $r6, $r9;
        boolean $z0, $z1;
        java.util.Set $r2;
        org.pircbotx.Channel $r1, $r10;
        org.pircbotx.User $r3, $r8, $r11;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r12 = virtualinvoke $r11.<org.pircbotx.User: java.lang.String getNick()>();

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r12);

        if $z1 == 0 goto label4;

     label1:
        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r5;

        if $i0 != 2 goto label2;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = $r5[1];

        $r8 = virtualinvoke $r6.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r7);

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r9.<org.pircbotx.PircBotX: void deVoice(org.pircbotx.Channel,org.pircbotx.User)>($r10, $r8);

        goto label3;

     label2:
        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>("Usage: devoice <username>");

     label3:
        goto label5;

     label4:
        $r13 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r13);

     label5:
        return;
    }

    public static void quiet(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r9, $r15, $r17, $r19, $r24;
        org.pircbotx.PircBotX $r6, $r8, $r11, $r22;
        boolean $z0, $z1, $z2;
        java.util.Set $r4;
        org.pircbotx.Channel $r3, $r12, $r20;
        java.lang.StringBuilder $r13, $r14, $r16;
        org.pircbotx.User $r5, $r7, $r10, $r18, $r21, $r23;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r19 = virtualinvoke $r18.<org.pircbotx.User: java.lang.String getNick()>();

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r19);

        if $z1 != 0 goto label1;

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r21 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z2 = virtualinvoke $r20.<org.pircbotx.Channel: boolean hasVoice(org.pircbotx.User)>($r21);

        if $z2 == 0 goto label3;

     label1:
        $i0 = lengthof $r2;

        if $i0 != 2 goto label2;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = $r2[1];

        $r10 = virtualinvoke $r8.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r9);

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r12 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+1 ");

        $r15 = virtualinvoke $r10.<org.pircbotx.User: java.lang.String getNick()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>($r12, $r17);

        goto label4;

     label2:
        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r6.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r7, "Usage: quiet <username>");

        goto label4;

     label3:
        $r22 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r23 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r24 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke $r22.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r23, $r24);

     label4:
        return;
    }

    public static void unquiet(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r8, $r14, $r16, $r20, $r23;
        org.pircbotx.PircBotX $r5, $r7, $r10, $r21;
        boolean $z0, $z1, $z2;
        org.pircbotx.Channel $r3, $r11, $r17;
        java.lang.StringBuilder $r12, $r13, $r15;
        org.pircbotx.User $r4, $r6, $r9, $r18, $r19, $r22;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z0 = virtualinvoke $r3.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r4);

        if $z0 != 0 goto label1;

        $r17 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z1 = virtualinvoke $r17.<org.pircbotx.Channel: boolean hasVoice(org.pircbotx.User)>($r18);

        if $z1 != 0 goto label1;

        $r19 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r20 = virtualinvoke $r19.<org.pircbotx.User: java.lang.String getNick()>();

        $z2 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r20);

        if $z2 == 0 goto label3;

     label1:
        $i0 = lengthof $r2;

        if $i0 != 2 goto label2;

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r8 = $r2[1];

        $r9 = virtualinvoke $r7.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r8);

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-q ");

        $r14 = virtualinvoke $r9.<org.pircbotx.User: java.lang.String getNick()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>($r11, $r16);

        goto label4;

     label2:
        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r5.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r6, "Usage: unquiet <username>");

        goto label4;

     label3:
        $r21 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r22 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r23 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke $r21.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r22, $r23);

     label4:
        return;
    }

    public static void kick(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.PircBotX $r3, $r17, $r25, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.StringBuilder $r9, $r24, $r34, $r35, $r38, $r39;
        org.pircbotx.User $r5, $r6, $r19, $r27, $r28, $r36, $r41;
        java.lang.String[] $r2, $r11;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r4, $r10, $r12, $r13, $r15, $r20, $r22, $r23, $r26, $r30, $r37, $r40, $r42, $r44;
        org.pircbotx.Channel $r7, $r8, $r14, $r16, $r18, $r21, $r29, $r31, $r33, $r43, $r45, $r46;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        if $i0 > 2 goto label04;

        $r25 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r26 = $r2[1];

        $r27 = virtualinvoke $r25.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r26);

        $r28 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r29 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z6 = virtualinvoke $r29.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r28);

        if $z6 != 0 goto label01;

        $r41 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r42 = virtualinvoke $r41.<org.pircbotx.User: java.lang.String getNick()>();

        $z8 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r42);

        if $z8 != 0 goto label01;

        $r43 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z9 = virtualinvoke $r43.<org.pircbotx.Channel: boolean hasVoice(org.pircbotx.User)>($r28);

        if $z9 == 0 goto label03;

     label01:
        $r45 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z10 = virtualinvoke $r45.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r27);

        if $z10 != 0 goto label02;

        $r31 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z7 = virtualinvoke $r31.<org.pircbotx.Channel: boolean hasVoice(org.pircbotx.User)>($r27);

        if $z7 != 0 goto label02;

        $r32 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r33 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Surprise train! (Choo choo! -");

        $r36 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r37 = virtualinvoke $r36.<org.pircbotx.User: java.lang.String getNick()>();

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<org.pircbotx.PircBotX: void kick(org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>($r33, $r27, $r40);

        goto label04;

     label02:
        $r30 = <com.zack6849.alphabot.Config: java.lang.String PERMISSIONS_DENIED>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r30);

        goto label04;

     label03:
        $r44 = <com.zack6849.alphabot.Config: java.lang.String PERMISSIONS_DENIED>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r44);

     label04:
        $i2 = lengthof $r2;

        if $i2 < 3 goto label10;

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r4 = $r2[1];

        $r5 = virtualinvoke $r3.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r4);

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z0 = virtualinvoke $r7.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r5);

        if $z0 != 0 goto label10;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z1 = virtualinvoke $r8.<org.pircbotx.Channel: boolean hasVoice(org.pircbotx.User)>($r5);

        if $z1 != 0 goto label10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i3 = 2;

     label05:
        $i1 = lengthof $r11;

        if i3 >= $i1 goto label06;

        $r23 = $r11[i3];

        $r24 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i3 = i3 + 1;

        goto label05;

     label06:
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $r14 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z2 = virtualinvoke $r14.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r6);

        if $z2 != 0 goto label07;

        $r19 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r20 = virtualinvoke $r19.<org.pircbotx.User: java.lang.String getNick()>();

        $z4 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r20);

        if $z4 != 0 goto label07;

        $r21 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z5 = virtualinvoke $r21.<org.pircbotx.Channel: boolean hasVoice(org.pircbotx.User)>($r6);

        if $z5 == 0 goto label09;

     label07:
        $r46 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z11 = virtualinvoke $r46.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r5);

        if $z11 != 0 goto label08;

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $z3 = virtualinvoke $r16.<org.pircbotx.Channel: boolean hasVoice(org.pircbotx.User)>($r5);

        if $z3 != 0 goto label08;

        $r17 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r17.<org.pircbotx.PircBotX: void kick(org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>($r18, $r5, $r13);

        goto label10;

     label08:
        $r15 = <com.zack6849.alphabot.Config: java.lang.String PERMISSIONS_DENIED>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r15);

        goto label10;

     label09:
        $r22 = <com.zack6849.alphabot.Config: java.lang.String PERMISSIONS_DENIED>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r22);

     label10:
        return;
    }

    public static void ignore(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r4, $r6, $r9, $r12, $r14, $r17, $r19, $r21, $r24;
        org.pircbotx.PircBotX $r8;
        boolean $z0, $z1;
        java.util.List $r11, $r18;
        java.lang.StringBuilder $r13, $r15, $r16, $r20, $r22, $r23;
        org.pircbotx.User $r3, $r5, $r7, $r10;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r4);

        if $z0 == 0 goto label4;

        $i0 = lengthof $r2;

        if $i0 != 2 goto label3;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = $r2[1];

        $r10 = virtualinvoke $r8.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r9);

        $r11 = <com.zack6849.alphabot.Bot: java.util.List ignored>;

        $r12 = virtualinvoke $r10.<org.pircbotx.User: java.lang.String getHostmask()>();

        $z1 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>($r12);

        if $z1 != 0 goto label1;

        $r18 = <com.zack6849.alphabot.Bot: java.util.List ignored>;

        $r19 = virtualinvoke $r10.<org.pircbotx.User: java.lang.String getHostmask()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r10.<org.pircbotx.User: java.lang.String getHostmask()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was added to the ignore list.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r24);

        goto label2;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r10.<org.pircbotx.User: java.lang.String getHostmask()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already in the ignore list");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r17);

     label2:
        goto label5;

     label3:
        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r7, "usage: $ignore user");

        goto label5;

     label4:
        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r6 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r5, $r6);

     label5:
        return;
    }

    public static void unignore(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r4, $r9, $r11, $r14, $r17, $r18, $r21, $r24;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r6;
        java.util.List $r12, $r19;
        org.pircbotx.Channel $r5;
        java.lang.StringBuilder $r13, $r15, $r16, $r20, $r22, $r23;
        org.pircbotx.User $r3, $r7, $r8, $r10, $r25;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r25 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z3 = virtualinvoke $r25.<org.pircbotx.User: boolean isVerified()>();

        if $z3 != 0 goto label2;

     label1:
        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.Channel: java.util.Set getOps()>();

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label5;

     label2:
        $i0 = lengthof $r2;

        if $i0 != 2 goto label4;

        $r12 = <com.zack6849.alphabot.Bot: java.util.List ignored>;

        $r11 = $r2[1];

        $z2 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r11);

        if $z2 == 0 goto label3;

        $r19 = <com.zack6849.alphabot.Bot: java.util.List ignored>;

        $r18 = $r2[1];

        interfaceinvoke $r19.<java.util.List: boolean remove(java.lang.Object)>($r18);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = $r2[1];

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was removed from the ignore list.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r24);

        goto label6;

     label3:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = $r2[1];

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in the ignore list");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r17);

        goto label6;

     label4:
        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r10, "usage: $unignore user");

        goto label6;

     label5:
        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r9 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r8, $r9);

     label6:
        return;
    }

    public static void addAdmin(org.pircbotx.hooks.events.MessageEvent) throws org.apache.commons.configuration.ConfigurationException, java.io.IOException
    {
        org.pircbotx.PircBotX $r7;
        boolean $z0, $z1, $z2;
        java.util.List $r25;
        java.lang.StringBuilder $r11, $r13, $r14, $r18, $r19, $r21, $r28, $r30, $r31, $r35, $r36, $r37, $r38;
        org.pircbotx.User $r1, $r3, $r8, $r10, $r27;
        java.lang.String[] $r6, $r24;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.ArrayList $r16, $r23;
        int $i0;
        java.lang.String $r2, $r4, $r5, $r9, $r12, $r15, $r20, $r22, $r29, $r32, r34, r39;
        org.apache.commons.configuration.PropertiesConfiguration $r26;
        java.util.Iterator $r17;
        java.lang.Object $r33;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r2);

        if $z0 == 0 goto label6;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r6;

        if $i0 != 2 goto label4;

        $r9 = $r6[1];

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r9);

        if $z1 != 0 goto label3;

        r39 = "";

        $r16 = <com.zack6849.alphabot.Config: java.util.ArrayList ADMINS>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r33 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r34 = (java.lang.String) $r33;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r20 = $r6[1];

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = new java.util.ArrayList;

        $r24 = virtualinvoke $r22.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r25 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r24);

        specialinvoke $r23.<java.util.ArrayList: void <init>(java.util.Collection)>($r25);

        <com.zack6849.alphabot.Config: java.util.ArrayList ADMINS> = $r23;

        staticinvoke <com.zack6849.alphabot.Config: void reload()>();

        $r26 = staticinvoke <com.zack6849.alphabot.Config: org.apache.commons.configuration.PropertiesConfiguration getConfig()>();

        virtualinvoke $r26.<org.apache.commons.configuration.PropertiesConfiguration: void refresh()>();

        $r27 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = $r6[1];

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is now an administrator. reloaded the configuration.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r27, $r32);

        goto label5;

     label3:
        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = $r6[1];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already an admin!");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r10, $r15);

        goto label5;

     label4:
        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r7.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r8, "Usage: addowner <name>");

     label5:
        goto label7;

     label6:
        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r4 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r3, $r4);

     label7:
        return;
    }

    public static void delteAdmin(org.pircbotx.hooks.events.MessageEvent) throws org.apache.commons.configuration.ConfigurationException, java.io.IOException
    {
        org.pircbotx.PircBotX $r7;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r20;
        java.lang.StringBuilder $r11, $r13, $r14, $r23, $r25, $r26, $r31, $r32, $r33, $r34;
        org.pircbotx.User $r1, $r3, $r8, $r10, $r22;
        java.lang.String[] $r6, $r19;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.ArrayList $r16, $r18;
        int $i0;
        java.lang.String $r2, $r4, $r5, $r9, $r12, $r15, $r24, $r27, r29, $r30, r35;
        org.apache.commons.configuration.PropertiesConfiguration $r21;
        java.util.Iterator $r17;
        java.lang.Object $r28;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r2);

        if $z0 == 0 goto label7;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r6;

        if $i0 != 2 goto label5;

        $r9 = $r6[1];

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r9);

        if $z1 == 0 goto label4;

        r35 = "";

        $r16 = <com.zack6849.alphabot.Config: java.util.ArrayList ADMINS>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r28 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.lang.String) $r28;

        $r30 = $r6[1];

        $z3 = virtualinvoke r29.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r30);

        if $z3 != 0 goto label2;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        goto label1;

     label3:
        $r18 = new java.util.ArrayList;

        $r19 = virtualinvoke r35.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);

        specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r20);

        <com.zack6849.alphabot.Config: java.util.ArrayList ADMINS> = $r18;

        staticinvoke <com.zack6849.alphabot.Config: void reload()>();

        $r21 = staticinvoke <com.zack6849.alphabot.Config: org.apache.commons.configuration.PropertiesConfiguration getConfig()>();

        virtualinvoke $r21.<org.apache.commons.configuration.PropertiesConfiguration: void refresh()>();

        $r22 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = $r6[1];

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is no longer an administrator. reloaded the configuration.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r22, $r27);

        goto label6;

     label4:
        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = $r6[1];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an admin!");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r10, $r15);

        goto label6;

     label5:
        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r7.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r8, "Usage: delowner <name>");

     label6:
        goto label8;

     label7:
        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r4 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r3, $r4);

     label8:
        return;
    }

    public static void eat(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        org.pircbotx.Channel $r5;
        java.lang.StringBuilder $r6, $r9, $r10, $r11;
        java.lang.String $r1, r3, $r8, $r12;
        org.pircbotx.PircBotX $r4;
        org.pircbotx.User $r7;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("eat");

        r3 = $r2[1];

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r8 = virtualinvoke $r7.<org.pircbotx.User: java.lang.String getNick()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has eaten");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r5, $r12);

        return;
    }

    public static void setDebug(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.Boolean $r4;
        java.lang.String $r1, $r3, $r6, $r12, $r14;
        org.pircbotx.PircBotX $r7, $r8;
        boolean $z0, $z1;
        java.lang.StringBuilder $r10, $r11, $r13;
        org.pircbotx.User $r5, $r9;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = $r2[1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.User: java.lang.String getNick()>();

        $z1 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r6);

        if $z1 == 0 goto label1;

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        virtualinvoke $r7.<org.pircbotx.PircBotX: void setVerbose(boolean)>($z0);

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("debug set to ");

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r9, $r14);

     label1:
        return;
    }

    public static void getCommand(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.hooks.events.MessageEvent r6;
        org.pircbotx.Channel $r12;
        java.lang.String $r0, $r2, $r4, $r5, $r7, $r8;
        org.apache.commons.configuration.PropertiesConfiguration $r1, $r3;
        org.pircbotx.PircBotX $r9, $r11;
        org.pircbotx.User $r10;
        boolean $z0, $z1;

        r6 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = <com.zack6849.alphabot.Config: org.apache.commons.configuration.PropertiesConfiguration customcmd>;

        $r0 = <com.zack6849.alphabot.Bot: java.lang.String curcmd>;

        $z0 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration: boolean containsKey(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        $r3 = <com.zack6849.alphabot.Config: org.apache.commons.configuration.PropertiesConfiguration customcmd>;

        $r2 = <com.zack6849.alphabot.Bot: java.lang.String curcmd>;

        $r4 = virtualinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration: java.lang.String getString(java.lang.String)>($r2);

        $r5 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String colorEncode(java.lang.String)>($r4);

        $r7 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r8 = <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z1 == 0 goto label1;

        $r11 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r12 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r11.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r12, $r5);

        goto label2;

     label1:
        $r9 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r10 = virtualinvoke r6.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r9.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r10, $r5);

     label2:
        return;
    }

    public static void setCommand(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.PircBotX $r6, $r13;
        boolean $z0, $z1;
        java.util.logging.Logger $r31;
        java.lang.StringBuilder $r5, $r15, $r16, $r17, $r18, $r21, $r27;
        org.pircbotx.User $r7, $r14;
        org.apache.commons.configuration.ConfigurationException $r28;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.logging.Level $r32;
        int $i0, $i1, i2;
        java.lang.String $r1, r4, $r8, $r9, $r10, $r11, $r12, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r30;
        org.apache.commons.configuration.PropertiesConfiguration r3;
        java.lang.Class $r29;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r3 = <com.zack6849.alphabot.Config: org.apache.commons.configuration.PropertiesConfiguration customcmd>;

        r4 = $r2[1];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = lengthof $r2;

        if $i0 < 3 goto label8;

     label1:
        i2 = 2;

     label2:
        $i1 = lengthof $r2;

        if i2 >= $i1 goto label3;

        $r26 = $r2[i2];

        $r27 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label2;

     label3:
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(",", "\\\\,");

        $r11 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke r3.<org.apache.commons.configuration.PropertiesConfiguration: boolean containsKey(java.lang.String)>($r11);

        if $z0 != 0 goto label4;

        $r25 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke r3.<org.apache.commons.configuration.PropertiesConfiguration: void setProperty(java.lang.String,java.lang.Object)>($r25, $r10);

     label4:
        $r12 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke r3.<org.apache.commons.configuration.PropertiesConfiguration: boolean containsKey(java.lang.String)>($r12);

        if $z1 == 0 goto label5;

        $r23 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke r3.<org.apache.commons.configuration.PropertiesConfiguration: void clearProperty(java.lang.String)>($r23);

        $r24 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke r3.<org.apache.commons.configuration.PropertiesConfiguration: void setProperty(java.lang.String,java.lang.Object)>($r24, $r10);

     label5:
        virtualinvoke r3.<org.apache.commons.configuration.PropertiesConfiguration: void save()>();

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r14 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("command ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" set to ");

        $r19 = virtualinvoke $r10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\,", ",");

        $r20 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String colorEncode(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r14, $r22);

     label6:
        goto label9;

     label7:
        $r28 := @caughtexception;

        $r29 = class "Lcom/zack6849/alphabot/Commands;";

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r31 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r30);

        $r32 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r31.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r32, null, $r28);

        goto label9;

     label8:
        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r6.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r7, "Not enough arguments!");

     label9:
        return;

        catch org.apache.commons.configuration.ConfigurationException from label1 to label6 with label7;
    }

    public static void deleteCommand(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.PircBotX $r3, $r8;
        boolean $z0, $z1, $z2;
        java.util.logging.Logger $r23;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        org.pircbotx.User $r1, $r4, $r16, $r18;
        org.apache.commons.configuration.ConfigurationException $r20;
        java.lang.String[] $r26;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.logging.Level $r24;
        int $i0;
        java.lang.String $r2, $r14, $r19, $r22, $r25, $r27;
        org.apache.commons.configuration.PropertiesConfiguration $r5, $r6, $r7;
        org.pircbotx.Channel $r9, $r15, $r17;
        java.lang.Class $r21;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        $r15 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z1 = virtualinvoke $r15.<org.pircbotx.Channel: boolean hasVoice(org.pircbotx.User)>($r16);

        if $z1 != 0 goto label1;

        $r17 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $z2 = virtualinvoke $r17.<org.pircbotx.Channel: boolean isOp(org.pircbotx.User)>($r18);

        if $z2 == 0 goto label7;

     label1:
        $r25 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r27 = $r26[1];

        $i0 = lengthof $r26;

        if $i0 < 2 goto label5;

     label2:
        $r5 = <com.zack6849.alphabot.Config: org.apache.commons.configuration.PropertiesConfiguration customcmd>;

        virtualinvoke $r5.<org.apache.commons.configuration.PropertiesConfiguration: void clearProperty(java.lang.String)>($r27);

        $r6 = <com.zack6849.alphabot.Config: org.apache.commons.configuration.PropertiesConfiguration customcmd>;

        virtualinvoke $r6.<org.apache.commons.configuration.PropertiesConfiguration: void save()>();

        $r7 = <com.zack6849.alphabot.Config: org.apache.commons.configuration.PropertiesConfiguration customcmd>;

        virtualinvoke $r7.<org.apache.commons.configuration.PropertiesConfiguration: void refresh()>();

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("command ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.pircbotx.PircBotX: void sendMessage(org.pircbotx.Channel,java.lang.String)>($r9, $r14);

     label3:
        goto label6;

     label4:
        $r20 := @caughtexception;

        $r21 = class "Lcom/zack6849/alphabot/Commands;";

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r22);

        $r24 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r23.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r24, null, $r20);

        goto label6;

     label5:
        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r3.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r4, "Not enough arguments!");

     label6:
        goto label8;

     label7:
        $r19 = <com.zack6849.alphabot.Commands: java.lang.String perms>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r19);

     label8:
        return;

        catch org.apache.commons.configuration.ConfigurationException from label2 to label3 with label4;
    }

    public static void cycle(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0;
        java.lang.String $r1, $r12, r16;
        org.pircbotx.PircBotX $r3, $r5, $r6, $r8, $r9, $r13, $r15;
        boolean $z0;
        java.util.Set $r4;
        org.pircbotx.Channel $r7, $r11, $r14;
        org.pircbotx.User $r10;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        if $i0 != 1 goto label1;

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r12 = virtualinvoke $r11.<org.pircbotx.Channel: java.lang.String getName()>();

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r14 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r13.<org.pircbotx.PircBotX: void partChannel(org.pircbotx.Channel)>($r14);

        $r15 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        virtualinvoke $r15.<org.pircbotx.PircBotX: void joinChannel(java.lang.String)>($r12);

        goto label3;

     label1:
        r16 = $r2[1];

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.PircBotX: java.util.Set getChannelsNames()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r16);

        if $z0 != 0 goto label2;

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r9.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r10, "I\'m not in that channel!");

     label2:
        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = virtualinvoke $r6.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>(r16);

        virtualinvoke $r5.<org.pircbotx.PircBotX: void partChannel(org.pircbotx.Channel)>($r7);

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        virtualinvoke $r8.<org.pircbotx.PircBotX: void joinChannel(java.lang.String)>(r16);

     label3:
        return;
    }

    public static void sendRaw(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r5;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i0, i1;
        java.lang.StringBuilder $r3, $r10;
        java.lang.String $r2, $r4, $r7, $r8, $r9;
        org.pircbotx.PircBotX $r6;
        org.pircbotx.User $r1;
        boolean $z0;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i1 = 1;

     label1:
        $i0 = lengthof $r5;

        if i1 >= $i0 goto label2;

        $r9 = $r5[i1];

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r6.<org.pircbotx.PircBotX: void sendRawLineNow(java.lang.String)>($r8);

     label3:
        return;
    }

    public static void login(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.String $r2;
        org.pircbotx.PircBotX $r1;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r2 = <com.zack6849.alphabot.Config: java.lang.String PASSWORD>;

        virtualinvoke $r1.<org.pircbotx.PircBotX: void identify(java.lang.String)>($r2);

        return;
    }

    public static void encrypt(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r3;
        org.pircbotx.hooks.events.MessageEvent r1;
        int $i0, i1;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r8, $r13, $r17, $r18;
        boolean $z0;
        java.lang.StringBuilder $r0, $r10, $r11, $r12, $r14, $r15, $r16, $r19;
        org.pircbotx.User $r9;

        r1 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i1 = 1;

     label1:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r18 = $r3[i1];

        $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r6 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String encrypt(java.lang.String)>($r5);

        $r7 = virtualinvoke r1.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r8 = <com.zack6849.alphabot.Config: java.lang.String PUBLIC_IDENTIFIER>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z0 == 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ENCRYPTED STRING: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r17);

        goto label4;

     label3:
        $r9 = virtualinvoke r1.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ENCRYPTED STRING: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.zack6849.alphabot.Utils: void sendNotice(org.pircbotx.User,java.lang.String)>($r9, $r13);

     label4:
        return;
    }

    public static void spam(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r5;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.Thread $r9;
        int $i0, $i1, i2;
        java.lang.String $r2, $r3, $r4, r6, $r7, $r8, $r13, r16;
        boolean $z0;
        com.zack6849.alphabot.Commands$2 $r10;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;
        org.pircbotx.User $r1;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r2 = virtualinvoke $r1.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = staticinvoke <com.zack6849.alphabot.Utils: boolean isAdmin(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r6 = $r5[1];

        $r7 = $r5[2];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        r16 = "";

        i2 = 3;

     label1:
        $i1 = lengthof $r5;

        if i2 >= $i1 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r13 = $r5[i2];

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r16.<java.lang.String: java.lang.String trim()>();

        $r9 = new java.lang.Thread;

        $r10 = new com.zack6849.alphabot.Commands$2;

        specialinvoke $r10.<com.zack6849.alphabot.Commands$2: void <init>(int,org.pircbotx.hooks.events.MessageEvent,java.lang.String,java.lang.String)>($i0, r0, r6, $r8);

        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);

        virtualinvoke $r9.<java.lang.Thread: void start()>();

        goto label4;

     label3:
        $r3 = <com.zack6849.alphabot.Config: java.lang.String PERMISSIONS_DENIED>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r3);

     label4:
        return;
    }

    public static void ping(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.Integer $r7;
        org.pircbotx.PircBotX $r10, $r19;
        boolean $z0, $z1;
        java.lang.StringBuilder $r13, $r14, $r16, $r17, $r21, $r22, $r24, $r25;
        org.pircbotx.User $r11, $r20;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        int $i1, $i2;
        java.lang.String $r1, $r3, $r4, r5, $r6, $r8, $r9, $r12, $r15, $r18, $r23, $r26;
        char $c0;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $i1 = lengthof $r2;

        if $i1 == 3 goto label3;

        $r12 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);

        if $z1 == 0 goto label1;

        $r19 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid syntax! usage: ");

        $r23 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ping <host> <port>");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r20, $r26);

        goto label2;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid syntax! usage: ");

        $r15 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ping <host> <port>");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r18);

     label2:
        return;

     label3:
        r5 = $r2[1];

        $r6 = $r2[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r6);

        $i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r8 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String ping(java.lang.String,int)>(r5, $i2);

        $r9 = <com.zack6849.alphabot.Config: java.lang.String NOTICE_IDENTIFIER>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label4;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r10.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r11, $r8);

        goto label5;

     label4:
        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r8);

     label5:
        return;
    }

    public static void spy(org.pircbotx.hooks.events.MessageEvent)
    {
        org.pircbotx.PircBotX $r12, $r23;
        boolean $z0;
        java.lang.StringBuilder $r14, $r15, $r18, $r25, $r26, $r29;
        org.pircbotx.User $r13, $r24;
        java.lang.String[] $r2;
        java.util.HashMap $r4, $r7, $r21;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.lang.String $r1, $r3, $r5, $r6, $r8, $r10, $r11, $r16, $r17, $r19, $r20, $r22, $r27, $r28, $r30;
        org.pircbotx.Channel $r9;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r4 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r3 = $r2[1];

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r21 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r20 = $r2[1];

        $r22 = virtualinvoke $r20.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r22);

        $r23 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r24 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no longer spying on channel ");

        $r27 = $r2[1];

        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String toLowerCase()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r24, $r30);

        return;

     label1:
        $r7 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r6 = $r2[1];

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r10 = virtualinvoke $r9.<org.pircbotx.Channel: java.lang.String getName()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r11);

        $r12 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("now spying on channel ");

        $r16 = $r2[1];

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String toLowerCase()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r13, $r19);

        return;
    }

    public static void log(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.ArrayList $r4, $r6, $r15;
        java.lang.String $r1, $r3, $r5, $r11, $r13, $r14, $r20, $r22;
        org.pircbotx.PircBotX $r7, $r16;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r12, $r18, $r19, $r21;
        org.pircbotx.User $r8, $r17;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r4 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r3 = $r2[1];

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r15 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r14 = $r2[1];

        virtualinvoke $r15.<java.util.ArrayList: boolean remove(java.lang.Object)>($r14);

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r17 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no longer logging channel ");

        $r20 = $r2[1];

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r17, $r22);

        return;

     label1:
        $r6 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r5 = $r2[1];

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r7 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("now logging channel ");

        $r11 = $r2[1];

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>($r8, $r13);

        return;
    }

    public static void execute(org.pircbotx.hooks.events.MessageEvent)
    {
        com.zack6849.alphabot.Commands$3 $r8;
        java.lang.String[] $r6;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.ArrayList $r1;
        java.lang.Thread $r7;
        java.lang.String $r3, $r4, $r5;
        org.pircbotx.User $r2;
        boolean $z0;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList EXEC_ADMINS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r3 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getAccount(org.pircbotx.User)>($r2);

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r7 = new java.lang.Thread;

        $r8 = new com.zack6849.alphabot.Commands$3;

        specialinvoke $r8.<com.zack6849.alphabot.Commands$3: void <init>(org.pircbotx.hooks.events.MessageEvent,java.lang.String[])>(r0, $r6);

        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);

        virtualinvoke $r7.<java.lang.Thread: void start()>();

        goto label2;

     label1:
        $r4 = <com.zack6849.alphabot.Config: java.lang.String PERMISSIONS_DENIED>;

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r4);

     label2:
        return;
    }

    public static void run(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.Object[] $r11;
        java.lang.String[] $r2;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.logging.Level $r19;
        java.lang.String $r1, r3, $r13, $r15, $r17;
        org.pircbotx.PircBotX $r6;
        bsh.EvalError $r14;
        bsh.Interpreter $r4, $r5, $r7, $r9, $r12;
        java.util.logging.Logger $r18;
        org.pircbotx.Channel $r8;
        java.lang.Class $r16;
        org.pircbotx.User $r10;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r3 = $r2[1];

     label1:
        $r4 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        virtualinvoke $r4.<bsh.Interpreter: void set(java.lang.String,java.lang.Object)>("event", r0);

        $r5 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.PircBotX getBot()>();

        virtualinvoke $r5.<bsh.Interpreter: void set(java.lang.String,java.lang.Object)>("bot", $r6);

        $r7 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        virtualinvoke $r7.<bsh.Interpreter: void set(java.lang.String,java.lang.Object)>("chan", $r8);

        $r9 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        virtualinvoke $r9.<bsh.Interpreter: void set(java.lang.String,java.lang.Object)>("user", $r10);

        $r12 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r3;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("source(\"plugins/%s.bsh\")", $r11);

        virtualinvoke $r12.<bsh.Interpreter: java.lang.Object eval(java.lang.String)>($r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        $r15 = virtualinvoke $r14.<bsh.EvalError: java.lang.String getLocalizedMessage()>();

        virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: void respond(java.lang.String)>($r15);

        $r16 = class "Lcom/zack6849/alphabot/Commands;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r17);

        $r19 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r19, null, $r14);

     label4:
        return;

        catch bsh.EvalError from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        bsh.NameSpace $r5;
        bsh.UtilEvalError $r19;
        java.util.logging.Level $r18, $r23;
        java.lang.String $r2, $r10, $r11, $r16, $r21;
        com.zack6849.alphabot.Config $r8;
        boolean $z0;
        bsh.EvalError $r14;
        bsh.Interpreter $r0, $r4, $r7, $r9, $r12, $r13;
        java.util.logging.Logger $r17, $r22;
        com.zack6849.alphabot.Utils $r3, $r6;
        java.util.List $r1;
        java.lang.Class $r15, $r20;

        $r0 = new bsh.Interpreter;

        specialinvoke $r0.<bsh.Interpreter: void <init>()>();

        <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter> = $r0;

        $r1 = <com.zack6849.alphabot.Bot: java.util.List owners>;

        <com.zack6849.alphabot.Commands: java.util.List owners> = $r1;

        $r2 = <com.zack6849.alphabot.Config: java.lang.String PERMISSIONS_DENIED>;

        <com.zack6849.alphabot.Commands: java.lang.String perms> = $r2;

        $r3 = new com.zack6849.alphabot.Utils;

        specialinvoke $r3.<com.zack6849.alphabot.Utils: void <init>()>();

        <com.zack6849.alphabot.Commands: com.zack6849.alphabot.Utils utils> = $r3;

     label1:
        $r4 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        $r5 = virtualinvoke $r4.<bsh.Interpreter: bsh.NameSpace getNameSpace()>();

        virtualinvoke $r5.<bsh.NameSpace: void doSuperImport()>();

        $r7 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        $r6 = new com.zack6849.alphabot.Utils;

        specialinvoke $r6.<com.zack6849.alphabot.Utils: void <init>()>();

        virtualinvoke $r7.<bsh.Interpreter: void set(java.lang.String,java.lang.Object)>("utils", $r6);

        $r9 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        $r8 = new com.zack6849.alphabot.Config;

        specialinvoke $r8.<com.zack6849.alphabot.Config: void <init>()>();

        virtualinvoke $r9.<bsh.Interpreter: void set(java.lang.String,java.lang.Object)>("conf", $r8);

        $r10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("linux");

        if $z0 == 0 goto label2;

        $r13 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        virtualinvoke $r13.<bsh.Interpreter: java.lang.Object eval(java.lang.String)>("java.lang.String getStuff(java.lang.String command){ java.lang.String output = \"\";java.lang.Process p = Runtime.getRuntime().exec(new java.lang.String[] {\"/bin/sh\", \"-c\", command}); BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));java.lang.String temp = \"\";while((temp = in.readLine()) != null){ output += temp + \"\\t\"; } return output; }");

        goto label3;

     label2:
        $r12 = <com.zack6849.alphabot.Commands: bsh.Interpreter interpreter>;

        virtualinvoke $r12.<bsh.Interpreter: java.lang.Object eval(java.lang.String)>("java.lang.String getStuff(java.lang.String command){ java.lang.String output = \"\";java.lang.Process p = Runtime.getRuntime().exec(command}); BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));java.lang.String temp = \"\";while((temp = in.readLine()) != null){ output += temp + \"\\t\"; } return output; }");

     label3:
        goto label6;

     label4:
        $r19 := @caughtexception;

        $r20 = class "Lcom/zack6849/alphabot/Commands;";

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r22 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r21);

        $r23 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r22.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r23, null, $r19);

        goto label6;

     label5:
        $r14 := @caughtexception;

        $r15 = class "Lcom/zack6849/alphabot/Commands;";

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r16);

        $r18 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r17.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r18, null, $r14);

     label6:
        return;

        catch bsh.UtilEvalError from label1 to label3 with label4;
        catch bsh.EvalError from label1 to label3 with label5;
    }
}
