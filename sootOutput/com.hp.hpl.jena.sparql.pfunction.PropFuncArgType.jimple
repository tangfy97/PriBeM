public class com.hp.hpl.jena.sparql.pfunction.PropFuncArgType extends com.hp.hpl.jena.sparql.util.Symbol
{
    public static final com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_LIST;
    public static final com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_SINGLE;
    public static final com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_EITHER;

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.sparql.pfunction.PropFuncArgType r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.util.Symbol: void <init>(java.lang.String)>(r1);

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.pfunction.PropFuncArgType $r0, $r1, $r2;

        $r0 = new com.hp.hpl.jena.sparql.pfunction.PropFuncArgType;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: void <init>(java.lang.String)>("PF_ARG_LIST");

        <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_LIST> = $r0;

        $r1 = new com.hp.hpl.jena.sparql.pfunction.PropFuncArgType;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: void <init>(java.lang.String)>("PF_ARG_SINGLE");

        <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_SINGLE> = $r1;

        $r2 = new com.hp.hpl.jena.sparql.pfunction.PropFuncArgType;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: void <init>(java.lang.String)>("PF_ARG_EITHER");

        <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_EITHER> = $r2;

        return;
    }
}
