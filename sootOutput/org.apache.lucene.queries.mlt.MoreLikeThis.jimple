public final class org.apache.lucene.queries.mlt.MoreLikeThis extends java.lang.Object
{
    public static final int DEFAULT_MAX_NUM_TOKENS_PARSED;
    public static final int DEFAULT_MIN_TERM_FREQ;
    public static final int DEFAULT_MIN_DOC_FREQ;
    public static final int DEFAULT_MAX_DOC_FREQ;
    public static final boolean DEFAULT_BOOST;
    public static final java.lang.String[] DEFAULT_FIELD_NAMES;
    public static final int DEFAULT_MIN_WORD_LENGTH;
    public static final int DEFAULT_MAX_WORD_LENGTH;
    public static final java.util.Set DEFAULT_STOP_WORDS;
    private java.util.Set stopWords;
    public static final int DEFAULT_MAX_QUERY_TERMS;
    private org.apache.lucene.analysis.Analyzer analyzer;
    private int minTermFreq;
    private int minDocFreq;
    private int maxDocFreq;
    private boolean boost;
    private java.lang.String[] fieldNames;
    private int maxNumTokensParsed;
    private int minWordLen;
    private int maxWordLen;
    private int maxQueryTerms;
    private org.apache.lucene.search.similarities.TFIDFSimilarity similarity;
    private final org.apache.lucene.index.IndexReader ir;
    private float boostFactor;

    public float getBoostFactor()
    {
        float $f0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $f0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: float boostFactor>;

        return $f0;
    }

    public void setBoostFactor(float)
    {
        float f0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        f0 := @parameter0: float;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: float boostFactor> = f0;

        return;
    }

    public void <init>(org.apache.lucene.index.IndexReader)
    {
        org.apache.lucene.search.similarities.DefaultSimilarity $r2;
        org.apache.lucene.index.IndexReader r1;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        $r2 = new org.apache.lucene.search.similarities.DefaultSimilarity;

        specialinvoke $r2.<org.apache.lucene.search.similarities.DefaultSimilarity: void <init>()>();

        specialinvoke r0.<org.apache.lucene.queries.mlt.MoreLikeThis: void <init>(org.apache.lucene.index.IndexReader,org.apache.lucene.search.similarities.TFIDFSimilarity)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.lucene.index.IndexReader, org.apache.lucene.search.similarities.TFIDFSimilarity)
    {
        org.apache.lucene.search.similarities.TFIDFSimilarity r4;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        java.util.Set $r1;
        java.lang.String[] $r2;
        org.apache.lucene.index.IndexReader r3;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r3 := @parameter0: org.apache.lucene.index.IndexReader;

        r4 := @parameter1: org.apache.lucene.search.similarities.TFIDFSimilarity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.lucene.queries.mlt.MoreLikeThis: java.util.Set DEFAULT_STOP_WORDS>;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.util.Set stopWords> = $r1;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.analysis.Analyzer analyzer> = null;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minTermFreq> = 2;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minDocFreq> = 5;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxDocFreq> = 2147483647;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: boolean boost> = 0;

        $r2 = <org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] DEFAULT_FIELD_NAMES>;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames> = $r2;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxNumTokensParsed> = 5000;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minWordLen> = 0;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxWordLen> = 0;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms> = 25;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: float boostFactor> = 1.0F;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.index.IndexReader ir> = r3;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.search.similarities.TFIDFSimilarity similarity> = r4;

        return;
    }

    public org.apache.lucene.search.similarities.TFIDFSimilarity getSimilarity()
    {
        org.apache.lucene.search.similarities.TFIDFSimilarity $r1;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $r1 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.search.similarities.TFIDFSimilarity similarity>;

        return $r1;
    }

    public void setSimilarity(org.apache.lucene.search.similarities.TFIDFSimilarity)
    {
        org.apache.lucene.search.similarities.TFIDFSimilarity r1;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r1 := @parameter0: org.apache.lucene.search.similarities.TFIDFSimilarity;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.search.similarities.TFIDFSimilarity similarity> = r1;

        return;
    }

    public org.apache.lucene.analysis.Analyzer getAnalyzer()
    {
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        org.apache.lucene.analysis.Analyzer $r1;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $r1 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.analysis.Analyzer analyzer>;

        return $r1;
    }

    public void setAnalyzer(org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        org.apache.lucene.analysis.Analyzer r1;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.analysis.Analyzer analyzer> = r1;

        return;
    }

    public int getMinTermFreq()
    {
        int $i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $i0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minTermFreq>;

        return $i0;
    }

    public void setMinTermFreq(int)
    {
        int i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minTermFreq> = i0;

        return;
    }

    public int getMinDocFreq()
    {
        int $i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $i0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minDocFreq>;

        return $i0;
    }

    public void setMinDocFreq(int)
    {
        int i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minDocFreq> = i0;

        return;
    }

    public int getMaxDocFreq()
    {
        int $i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $i0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxDocFreq>;

        return $i0;
    }

    public void setMaxDocFreq(int)
    {
        int i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxDocFreq> = i0;

        return;
    }

    public void setMaxDocFreqPct(int)
    {
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.index.IndexReader $r1;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.index.IndexReader ir>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: int numDocs()>();

        $i2 = i0 * $i1;

        $i3 = $i2 / 100;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxDocFreq> = $i3;

        return;
    }

    public boolean isBoost()
    {
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $z0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: boolean boost>;

        return $z0;
    }

    public void setBoost(boolean)
    {
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        boolean z0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        z0 := @parameter0: boolean;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: boolean boost> = z0;

        return;
    }

    public java.lang.String[] getFieldNames()
    {
        java.lang.String[] $r1;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $r1 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames>;

        return $r1;
    }

    public void setFieldNames(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r1 := @parameter0: java.lang.String[];

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames> = r1;

        return;
    }

    public int getMinWordLen()
    {
        int $i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $i0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minWordLen>;

        return $i0;
    }

    public void setMinWordLen(int)
    {
        int i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minWordLen> = i0;

        return;
    }

    public int getMaxWordLen()
    {
        int $i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $i0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxWordLen>;

        return $i0;
    }

    public void setMaxWordLen(int)
    {
        int i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxWordLen> = i0;

        return;
    }

    public void setStopWords(java.util.Set)
    {
        java.util.Set r1;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r1 := @parameter0: java.util.Set;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.util.Set stopWords> = r1;

        return;
    }

    public java.util.Set getStopWords()
    {
        java.util.Set $r1;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $r1 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.util.Set stopWords>;

        return $r1;
    }

    public int getMaxQueryTerms()
    {
        int $i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $i0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms>;

        return $i0;
    }

    public void setMaxQueryTerms(int)
    {
        int i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms> = i0;

        return;
    }

    public int getMaxNumTokensParsed()
    {
        int $i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $i0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxNumTokensParsed>;

        return $i0;
    }

    public void setMaxNumTokensParsed(int)
    {
        int i0;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxNumTokensParsed> = i0;

        return;
    }

    public org.apache.lucene.search.Query like(int) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r3;
        java.lang.Object[] $r7;
        java.util.Collection $r5;
        java.lang.String[] $r1, $r6, $r8;
        org.apache.lucene.util.PriorityQueue $r2;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        int i0, $i1;
        org.apache.lucene.index.IndexReader $r4;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames>;

        if $r1 != null goto label1;

        $r4 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.index.IndexReader ir>;

        $r5 = staticinvoke <org.apache.lucene.index.MultiFields: java.util.Collection getIndexedFields(org.apache.lucene.index.IndexReader)>($r4);

        $i1 = interfaceinvoke $r5.<java.util.Collection: int size()>();

        $r6 = newarray (java.lang.String)[$i1];

        $r7 = interfaceinvoke $r5.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.String[]) $r7;

        r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames> = $r8;

     label1:
        $r2 = virtualinvoke r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.util.PriorityQueue retrieveTerms(int)>(i0);

        $r3 = specialinvoke r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.search.Query createQuery(org.apache.lucene.util.PriorityQueue)>($r2);

        return $r3;
    }

    public org.apache.lucene.search.Query like(java.io.Reader, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r4;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        org.apache.lucene.util.PriorityQueue $r3;
        java.io.Reader r1;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.util.PriorityQueue retrieveTerms(java.io.Reader,java.lang.String)>(r1, r2);

        $r4 = specialinvoke r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.search.Query createQuery(org.apache.lucene.util.PriorityQueue)>($r3);

        return $r4;
    }

    private org.apache.lucene.search.Query createQuery(org.apache.lucene.util.PriorityQueue)
    {
        java.lang.Float $r13, $r15;
        java.lang.Object[] $r3, r4;
        org.apache.lucene.index.Term $r6;
        org.apache.lucene.util.PriorityQueue r1;
        org.apache.lucene.queries.mlt.MoreLikeThis r11;
        int $i0, $i1, i2;
        java.lang.String $r9, $r10;
        org.apache.lucene.search.BooleanClause$Occur $r17;
        boolean $z0;
        org.apache.lucene.search.TermQuery $r5;
        org.apache.lucene.search.BooleanQuery $r0;
        float $f0, $f1, $f2, $f3, f4;
        org.apache.lucene.search.BooleanQuery$TooManyClauses $r16;
        java.lang.Object $r2, $r7, $r8, $r12, $r14;

        r11 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r1 := @parameter0: org.apache.lucene.util.PriorityQueue;

        $r0 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r0.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        i2 = 0;

        f4 = 0.0F;

     label1:
        $r2 = virtualinvoke r1.<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()>();

        if $r2 == null goto label8;

        $r3 = (java.lang.Object[]) $r2;

        r4 = (java.lang.Object[]) $r3;

        $r5 = new org.apache.lucene.search.TermQuery;

        $r6 = new org.apache.lucene.index.Term;

        $r7 = r4[1];

        $r10 = (java.lang.String) $r7;

        $r8 = r4[0];

        $r9 = (java.lang.String) $r8;

        specialinvoke $r6.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>($r10, $r9);

        specialinvoke $r5.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term)>($r6);

        $z0 = r11.<org.apache.lucene.queries.mlt.MoreLikeThis: boolean boost>;

        if $z0 == 0 goto label3;

        if i2 != 0 goto label2;

        $r14 = r4[2];

        $r15 = (java.lang.Float) $r14;

        f4 = virtualinvoke $r15.<java.lang.Float: float floatValue()>();

     label2:
        $r12 = r4[2];

        $r13 = (java.lang.Float) $r12;

        $f0 = virtualinvoke $r13.<java.lang.Float: float floatValue()>();

        $f1 = r11.<org.apache.lucene.queries.mlt.MoreLikeThis: float boostFactor>;

        $f2 = $f1 * $f0;

        $f3 = $f2 / f4;

        virtualinvoke $r5.<org.apache.lucene.search.TermQuery: void setBoost(float)>($f3);

     label3:
        $r17 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r5, $r17);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        goto label8;

     label6:
        i2 = i2 + 1;

        $i0 = r11.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms>;

        if $i0 <= 0 goto label7;

        $i1 = r11.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms>;

        if i2 < $i1 goto label7;

        goto label8;

     label7:
        goto label1;

     label8:
        return $r0;

        catch org.apache.lucene.search.BooleanQuery$TooManyClauses from label3 to label4 with label5;
    }

    private org.apache.lucene.util.PriorityQueue createQueue(java.util.Map) throws java.io.IOException
    {
        java.lang.Float $r13, $r14;
        org.apache.lucene.index.Term $r18;
        java.lang.Integer $r15, $r16;
        java.util.Map r3;
        boolean $z0;
        java.util.Set $r4;
        float $f0, $f1, f2;
        org.apache.lucene.index.IndexReader $r1, $r19;
        java.lang.Object[] $r12;
        java.lang.String[] $r10, $r20;
        long $l6, $l7;
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, i12, i13, $i14;
        org.apache.lucene.queries.mlt.MoreLikeThis$FreqQ $r2;
        java.lang.String r7, r17, r21, $r22;
        org.apache.lucene.queries.mlt.MoreLikeThis$Int $r9;
        org.apache.lucene.search.similarities.TFIDFSimilarity $r11;
        java.util.Iterator $r5;
        java.lang.Object $r6, $r8;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r3 := @parameter0: java.util.Map;

        $r1 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.index.IndexReader ir>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: int numDocs()>();

        $r2 = new org.apache.lucene.queries.mlt.MoreLikeThis$FreqQ;

        $i1 = interfaceinvoke r3.<java.util.Map: int size()>();

        specialinvoke $r2.<org.apache.lucene.queries.mlt.MoreLikeThis$FreqQ: void <init>(int)>($i1);

        $r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r9 = (org.apache.lucene.queries.mlt.MoreLikeThis$Int) $r8;

        i2 = $r9.<org.apache.lucene.queries.mlt.MoreLikeThis$Int: int x>;

        $i3 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minTermFreq>;

        if $i3 <= 0 goto label02;

        $i10 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minTermFreq>;

        if i2 >= $i10 goto label02;

        goto label01;

     label02:
        $r10 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames>;

        r21 = $r10[0];

        i12 = 0;

        $r20 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames>;

        $i11 = lengthof $r20;

        i13 = 0;

     label03:
        if i13 >= $i11 goto label08;

        r17 = $r20[i13];

        $r19 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.index.IndexReader ir>;

        $r18 = new org.apache.lucene.index.Term;

        specialinvoke $r18.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(r17, r7);

        $i9 = virtualinvoke $r19.<org.apache.lucene.index.IndexReader: int docFreq(org.apache.lucene.index.Term)>($r18);

        if $i9 <= i12 goto label04;

        $r22 = r17;

        goto label05;

     label04:
        $r22 = r21;

     label05:
        r21 = $r22;

        if $i9 <= i12 goto label06;

        $i14 = $i9;

        goto label07;

     label06:
        $i14 = i12;

     label07:
        i12 = $i14;

        i13 = i13 + 1;

        goto label03;

     label08:
        $i4 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minDocFreq>;

        if $i4 <= 0 goto label09;

        $i8 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int minDocFreq>;

        if i12 >= $i8 goto label09;

        goto label01;

     label09:
        $i5 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxDocFreq>;

        if i12 <= $i5 goto label10;

        goto label01;

     label10:
        if i12 != 0 goto label11;

        goto label01;

     label11:
        $r11 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.search.similarities.TFIDFSimilarity similarity>;

        $l7 = (long) i12;

        $l6 = (long) $i0;

        $f0 = virtualinvoke $r11.<org.apache.lucene.search.similarities.TFIDFSimilarity: float idf(long,long)>($l7, $l6);

        $f1 = (float) i2;

        f2 = $f1 * $f0;

        $r12 = newarray (java.lang.Object)[6];

        $r12[0] = r7;

        $r12[1] = r21;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        $r12[2] = $r13;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r12[3] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r12[4] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r12[5] = $r16;

        virtualinvoke $r2.<org.apache.lucene.queries.mlt.MoreLikeThis$FreqQ: java.lang.Object insertWithOverflow(java.lang.Object)>($r12);

        goto label01;

     label12:
        return $r2;
    }

    public java.lang.String describeParams()
    {
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r24;
        java.lang.String[] r12;
        org.apache.lucene.queries.mlt.MoreLikeThis r3;
        int $i0, $i1, $i2, i3, $i4, $i5, i6;
        java.lang.String $r22, r23, r25;

        r3 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxQueryTerms  : ");

        $i0 = r3.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minWordLen     : ");

        $i1 = r3.<org.apache.lucene.queries.mlt.MoreLikeThis: int minWordLen>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxWordLen     : ");

        $i2 = r3.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxWordLen>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fieldNames     : ");

        r25 = "";

        r12 = r3.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames>;

        i3 = lengthof r12;

        i6 = 0;

     label1:
        if i6 >= i3 goto label2;

        r23 = r12[i6];

        $r24 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        r25 = ", ";

        i6 = i6 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("boost          : ");

        $z0 = r3.<org.apache.lucene.queries.mlt.MoreLikeThis: boolean boost>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minTermFreq    : ");

        $i4 = r3.<org.apache.lucene.queries.mlt.MoreLikeThis: int minTermFreq>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minDocFreq     : ");

        $i5 = r3.<org.apache.lucene.queries.mlt.MoreLikeThis: int minDocFreq>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r22 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

    public org.apache.lucene.util.PriorityQueue retrieveTerms(int) throws java.io.IOException
    {
        org.apache.lucene.index.IndexableField r10;
        org.apache.lucene.index.Fields $r6;
        java.util.HashMap $r0;
        java.lang.String[] r2;
        org.apache.lucene.util.PriorityQueue $r3;
        org.apache.lucene.document.Document $r8;
        org.apache.lucene.queries.mlt.MoreLikeThis r1;
        int i0, i1, i2, i3, i4;
        java.lang.String r4, $r11;
        org.apache.lucene.index.Terms r13;
        org.apache.lucene.index.IndexableField[] $r9;
        java.io.StringReader $r12;
        org.apache.lucene.index.IndexReader $r5, $r7;

        r1 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i1 := @parameter0: int;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        r2 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] fieldNames>;

        i0 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label9;

        r4 = r2[i3];

        $r5 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.index.IndexReader ir>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.Fields getTermVectors(int)>(i1);

        if $r6 == null goto label2;

        r13 = virtualinvoke $r6.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r4);

        goto label3;

     label2:
        r13 = null;

     label3:
        if r13 != null goto label7;

        $r7 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.index.IndexReader ir>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.index.IndexReader: org.apache.lucene.document.Document document(int)>(i1);

        $r9 = virtualinvoke $r8.<org.apache.lucene.document.Document: org.apache.lucene.index.IndexableField[] getFields(java.lang.String)>(r4);

        i2 = lengthof $r9;

        i4 = 0;

     label4:
        if i4 >= i2 goto label6;

        r10 = $r9[i4];

        $r11 = interfaceinvoke r10.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        if $r11 == null goto label5;

        $r12 = new java.io.StringReader;

        specialinvoke $r12.<java.io.StringReader: void <init>(java.lang.String)>($r11);

        specialinvoke r1.<org.apache.lucene.queries.mlt.MoreLikeThis: void addTermFrequencies(java.io.Reader,java.util.Map,java.lang.String)>($r12, $r0, r4);

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        goto label8;

     label7:
        specialinvoke r1.<org.apache.lucene.queries.mlt.MoreLikeThis: void addTermFrequencies(java.util.Map,org.apache.lucene.index.Terms)>($r0, r13);

     label8:
        i3 = i3 + 1;

        goto label1;

     label9:
        $r3 = specialinvoke r1.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.util.PriorityQueue createQueue(java.util.Map)>($r0);

        return $r3;
    }

    private void addTermFrequencies(java.util.Map, org.apache.lucene.index.Terms) throws java.io.IOException
    {
        org.apache.lucene.index.Terms r0;
        org.apache.lucene.util.BytesRef $r8;
        long $l0;
        org.apache.lucene.index.TermsEnum $r1;
        org.apache.lucene.util.CharsRef $r2;
        org.apache.lucene.queries.mlt.MoreLikeThis r4;
        java.util.Map r5;
        int i1, $i2, $i3;
        java.lang.Object $r6;
        java.lang.String $r3;
        org.apache.lucene.queries.mlt.MoreLikeThis$Int $r7, r9;
        boolean $z0;

        r4 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r5 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.lucene.index.Terms;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        $r2 = new org.apache.lucene.util.CharsRef;

        specialinvoke $r2.<org.apache.lucene.util.CharsRef: void <init>()>();

     label1:
        $r8 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r8 == null goto label5;

        staticinvoke <org.apache.lucene.util.UnicodeUtil: void UTF8toUTF16(org.apache.lucene.util.BytesRef,org.apache.lucene.util.CharsRef)>($r8, $r2);

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.CharsRef: java.lang.String toString()>();

        $z0 = specialinvoke r4.<org.apache.lucene.queries.mlt.MoreLikeThis: boolean isNoiseWord(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $l0 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        i1 = (int) $l0;

        $r6 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r9 = (org.apache.lucene.queries.mlt.MoreLikeThis$Int) $r6;

        if r9 != null goto label3;

        $r7 = new org.apache.lucene.queries.mlt.MoreLikeThis$Int;

        specialinvoke $r7.<org.apache.lucene.queries.mlt.MoreLikeThis$Int: void <init>()>();

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7);

        $r7.<org.apache.lucene.queries.mlt.MoreLikeThis$Int: int x> = i1;

        goto label4;

     label3:
        $i2 = r9.<org.apache.lucene.queries.mlt.MoreLikeThis$Int: int x>;

        $i3 = $i2 + i1;

        r9.<org.apache.lucene.queries.mlt.MoreLikeThis$Int: int x> = $i3;

     label4:
        goto label1;

     label5:
        return;
    }

    private void addTermFrequencies(java.io.Reader, java.util.Map, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.queries.mlt.MoreLikeThis r0;
        java.util.Map r9;
        int $i0, $i1, $i2, i3;
        java.lang.String r2, $r8;
        org.apache.lucene.queries.mlt.MoreLikeThis$Int r11, $r12;
        boolean $z0, $z1;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute r7;
        java.lang.UnsupportedOperationException $r13;
        org.apache.lucene.analysis.TokenStream $r5;
        org.apache.lucene.analysis.Analyzer $r1, $r4;
        java.io.Reader r3;
        java.lang.Object $r10;
        org.apache.lucene.util.Attribute $r6;

        r0 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r3 := @parameter0: java.io.Reader;

        r9 := @parameter1: java.util.Map;

        r2 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.analysis.Analyzer analyzer>;

        if $r1 != null goto label1;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("To use MoreLikeThis without term vectors, you must provide an Analyzer");

        throw $r13;

     label1:
        $r4 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.analysis.Analyzer analyzer>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.analysis.Analyzer: org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String,java.io.Reader)>(r2, r3);

        i3 = 0;

        $r6 = virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        r7 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r6;

        virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: void reset()>();

     label2:
        $z1 = virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z1 == 0 goto label7;

        $r8 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        i3 = i3 + 1;

        $i0 = r0.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxNumTokensParsed>;

        if i3 <= $i0 goto label3;

        goto label7;

     label3:
        $z0 = specialinvoke r0.<org.apache.lucene.queries.mlt.MoreLikeThis: boolean isNoiseWord(java.lang.String)>($r8);

        if $z0 == 0 goto label4;

        goto label2;

     label4:
        $r10 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r11 = (org.apache.lucene.queries.mlt.MoreLikeThis$Int) $r10;

        if r11 != null goto label5;

        $r12 = new org.apache.lucene.queries.mlt.MoreLikeThis$Int;

        specialinvoke $r12.<org.apache.lucene.queries.mlt.MoreLikeThis$Int: void <init>()>();

        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r12);

        goto label6;

     label5:
        $i1 = r11.<org.apache.lucene.queries.mlt.MoreLikeThis$Int: int x>;

        $i2 = $i1 + 1;

        r11.<org.apache.lucene.queries.mlt.MoreLikeThis$Int: int x> = $i2;

     label6:
        goto label2;

     label7:
        virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: void end()>();

        virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: void close()>();

        return;
    }

    private boolean isNoiseWord(java.lang.String)
    {
        java.util.Set $r2, $r3;
        org.apache.lucene.queries.mlt.MoreLikeThis r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: int minWordLen>;

        if $i1 <= 0 goto label1;

        $i4 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: int minWordLen>;

        if $i0 >= $i4 goto label1;

        return 1;

     label1:
        $i2 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxWordLen>;

        if $i2 <= 0 goto label2;

        $i3 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxWordLen>;

        if $i0 <= $i3 goto label2;

        return 1;

     label2:
        $r2 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: java.util.Set stopWords>;

        if $r2 == null goto label3;

        $r3 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: java.util.Set stopWords>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public org.apache.lucene.util.PriorityQueue retrieveTerms(java.io.Reader, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.queries.mlt.MoreLikeThis r1;
        java.util.HashMap $r0;
        org.apache.lucene.util.PriorityQueue $r4;
        java.io.Reader r2;
        java.lang.String r3;

        r1 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r2 := @parameter0: java.io.Reader;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        specialinvoke r1.<org.apache.lucene.queries.mlt.MoreLikeThis: void addTermFrequencies(java.io.Reader,java.util.Map,java.lang.String)>(r2, $r0, r3);

        $r4 = specialinvoke r1.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.util.PriorityQueue createQueue(java.util.Map)>($r0);

        return $r4;
    }

    public java.lang.String[] retrieveInterestingTerms(int) throws java.io.IOException
    {
        java.lang.Object[] $r4, $r7, r9;
        org.apache.lucene.util.PriorityQueue $r2;
        java.lang.String[] $r5, $r6;
        java.util.ArrayList $r10;
        org.apache.lucene.queries.mlt.MoreLikeThis r1;
        int $i0, i1, $i2, $i3, i4, $i6;
        java.lang.Object $r3, $r8;

        r1 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        i1 := @parameter0: int;

        $r10 = new java.util.ArrayList;

        $i0 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms>;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = virtualinvoke r1.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.util.PriorityQueue retrieveTerms(int)>(i1);

        i4 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms>;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()>();

        if $r3 == null goto label2;

        $i3 = i4;

        $i6 = (int) -1;

        i4 = i4 + $i6;

        if $i3 <= 0 goto label2;

        $r7 = (java.lang.Object[]) $r3;

        r9 = (java.lang.Object[]) $r7;

        $r8 = r9[0];

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $i2 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $r6 = newarray (java.lang.String)[$i2];

        $r4 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    public java.lang.String[] retrieveInterestingTerms(java.io.Reader, java.lang.String) throws java.io.IOException
    {
        java.lang.Object[] $r6, $r9, r11;
        org.apache.lucene.util.PriorityQueue $r4;
        java.lang.String[] $r7, $r8;
        java.util.ArrayList $r12;
        org.apache.lucene.queries.mlt.MoreLikeThis r1;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String r3;
        java.io.Reader r2;
        java.lang.Object $r5, $r10;

        r1 := @this: org.apache.lucene.queries.mlt.MoreLikeThis;

        r2 := @parameter0: java.io.Reader;

        r3 := @parameter1: java.lang.String;

        $r12 = new java.util.ArrayList;

        $i0 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms>;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = virtualinvoke r1.<org.apache.lucene.queries.mlt.MoreLikeThis: org.apache.lucene.util.PriorityQueue retrieveTerms(java.io.Reader,java.lang.String)>(r2, r3);

        i3 = r1.<org.apache.lucene.queries.mlt.MoreLikeThis: int maxQueryTerms>;

     label1:
        $r5 = virtualinvoke $r4.<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()>();

        if $r5 == null goto label2;

        $i2 = i3;

        $i5 = (int) -1;

        i3 = i3 + $i5;

        if $i2 <= 0 goto label2;

        $r9 = (java.lang.Object[]) $r5;

        r11 = (java.lang.Object[]) $r9;

        $r10 = r11[0];

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $r8 = newarray (java.lang.String)[$i1];

        $r6 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r7 = (java.lang.String[]) $r6;

        return $r7;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.apache.lucene.queries.mlt.MoreLikeThis: int DEFAULT_MAX_QUERY_TERMS> = 25;

        <org.apache.lucene.queries.mlt.MoreLikeThis: int DEFAULT_MAX_WORD_LENGTH> = 0;

        <org.apache.lucene.queries.mlt.MoreLikeThis: int DEFAULT_MIN_WORD_LENGTH> = 0;

        <org.apache.lucene.queries.mlt.MoreLikeThis: boolean DEFAULT_BOOST> = 0;

        <org.apache.lucene.queries.mlt.MoreLikeThis: int DEFAULT_MAX_DOC_FREQ> = 2147483647;

        <org.apache.lucene.queries.mlt.MoreLikeThis: int DEFAULT_MIN_DOC_FREQ> = 5;

        <org.apache.lucene.queries.mlt.MoreLikeThis: int DEFAULT_MIN_TERM_FREQ> = 2;

        <org.apache.lucene.queries.mlt.MoreLikeThis: int DEFAULT_MAX_NUM_TOKENS_PARSED> = 5000;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "contents";

        <org.apache.lucene.queries.mlt.MoreLikeThis: java.lang.String[] DEFAULT_FIELD_NAMES> = $r0;

        <org.apache.lucene.queries.mlt.MoreLikeThis: java.util.Set DEFAULT_STOP_WORDS> = null;

        return;
    }
}
