public final class org.sat4j.opt.MinOneDecorator extends org.sat4j.tools.SolverDecorator implements org.sat4j.specs.IOptimizationProblem
{
    private static final long serialVersionUID;
    private int[] prevmodel;
    private boolean isSolutionOptimal;
    private int counter;
    private final org.sat4j.specs.IVecInt literals;
    private org.sat4j.specs.IConstr previousConstr;

    public void <init>(org.sat4j.specs.ISolver)
    {
        org.sat4j.core.VecInt $r2;
        org.sat4j.opt.MinOneDecorator r0;
        org.sat4j.specs.ISolver r1;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: void <init>(org.sat4j.specs.ISolver)>(r1);

        $r2 = new org.sat4j.core.VecInt;

        specialinvoke $r2.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IVecInt literals> = $r2;

        return;
    }

    public boolean admitABetterSolution() throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.specs.IVecInt $r1;
        org.sat4j.opt.MinOneDecorator r0;
        boolean $z0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        $r1 = <org.sat4j.core.VecInt: org.sat4j.specs.IVecInt EMPTY>;

        $z0 = virtualinvoke r0.<org.sat4j.opt.MinOneDecorator: boolean admitABetterSolution(org.sat4j.specs.IVecInt)>($r1);

        return $z0;
    }

    public boolean admitABetterSolution(org.sat4j.specs.IVecInt) throws org.sat4j.specs.TimeoutException
    {
        int[] $r2;
        org.sat4j.specs.IVecInt r1;
        org.sat4j.opt.MinOneDecorator r0;
        boolean $z0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        r0.<org.sat4j.opt.MinOneDecorator: boolean isSolutionOptimal> = 0;

        $z0 = virtualinvoke r0.<org.sat4j.opt.MinOneDecorator: boolean isSatisfiable(org.sat4j.specs.IVecInt,boolean)>(r1, 1);

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<org.sat4j.tools.SolverDecorator: int[] model()>();

        r0.<org.sat4j.opt.MinOneDecorator: int[] prevmodel> = $r2;

        specialinvoke r0.<org.sat4j.opt.MinOneDecorator: void calculateObjectiveValue()>();

        goto label2;

     label1:
        r0.<org.sat4j.opt.MinOneDecorator: boolean isSolutionOptimal> = 1;

     label2:
        return $z0;
    }

    public boolean hasNoObjectiveFunction()
    {
        org.sat4j.opt.MinOneDecorator r0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        return 0;
    }

    public boolean nonOptimalMeansSatisfiable()
    {
        org.sat4j.opt.MinOneDecorator r0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        return 1;
    }

    public java.lang.Number calculateObjective()
    {
        int $i0;
        org.sat4j.opt.MinOneDecorator r0;
        java.lang.Integer $r1;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        specialinvoke r0.<org.sat4j.opt.MinOneDecorator: void calculateObjectiveValue()>();

        $i0 = r0.<org.sat4j.opt.MinOneDecorator: int counter>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    private void calculateObjectiveValue()
    {
        int[] r1;
        int i0, i1, $i2, $i3, i4;
        org.sat4j.opt.MinOneDecorator r0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        r0.<org.sat4j.opt.MinOneDecorator: int counter> = 0;

        r1 = r0.<org.sat4j.opt.MinOneDecorator: int[] prevmodel>;

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        i1 = r1[i4];

        if i1 <= 0 goto label2;

        $i2 = r0.<org.sat4j.opt.MinOneDecorator: int counter>;

        $i3 = $i2 + 1;

        r0.<org.sat4j.opt.MinOneDecorator: int counter> = $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public void discardCurrentSolution() throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IConstr $r2, $r4, $r5;
        org.sat4j.specs.IVecInt $r1, $r3, $r6;
        org.sat4j.opt.MinOneDecorator r0;
        int $i0, $i1, $i2, i3;
        boolean $z0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        $r1 = r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IVecInt literals>;

        $z0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        i3 = 1;

     label1:
        $i2 = virtualinvoke r0.<org.sat4j.opt.MinOneDecorator: int nVars()>();

        if i3 > $i2 goto label2;

        $r6 = r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IVecInt literals>;

        interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i3);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IConstr previousConstr>;

        if $r2 == null goto label3;

        $r5 = r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IConstr previousConstr>;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: boolean removeConstr(org.sat4j.specs.IConstr)>($r5);

     label3:
        $r3 = r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IVecInt literals>;

        $i0 = r0.<org.sat4j.opt.MinOneDecorator: int counter>;

        $i1 = $i0 - 1;

        $r4 = virtualinvoke r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt,int)>($r3, $i1);

        r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IConstr previousConstr> = $r4;

        return;
    }

    public int[] model()
    {
        org.sat4j.opt.MinOneDecorator r0;
        int[] $r1;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        $r1 = r0.<org.sat4j.opt.MinOneDecorator: int[] prevmodel>;

        return $r1;
    }

    public void reset()
    {
        org.sat4j.specs.IVecInt $r1;
        org.sat4j.opt.MinOneDecorator r0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        $r1 = r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IVecInt literals>;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IConstr previousConstr> = null;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: void reset()>();

        return;
    }

    public java.lang.Number getObjectiveValue()
    {
        int $i0;
        org.sat4j.opt.MinOneDecorator r0;
        java.lang.Integer $r1;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        $i0 = r0.<org.sat4j.opt.MinOneDecorator: int counter>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public void discard() throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.opt.MinOneDecorator r0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        virtualinvoke r0.<org.sat4j.opt.MinOneDecorator: void discardCurrentSolution()>();

        return;
    }

    public void forceObjectiveValueTo(java.lang.Number) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ContradictionException $r3;
        org.sat4j.specs.IVecInt $r2;
        int $i0;
        org.sat4j.opt.MinOneDecorator r0;
        java.lang.Number r1;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        r1 := @parameter0: java.lang.Number;

     label1:
        $r2 = r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IVecInt literals>;

        $i0 = virtualinvoke r1.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<org.sat4j.opt.MinOneDecorator: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt,int)>($r2, $i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<org.sat4j.opt.MinOneDecorator: boolean isSolutionOptimal> = 1;

        throw $r3;

     label4:
        return;

        catch org.sat4j.specs.ContradictionException from label1 to label2 with label3;
    }

    public boolean isOptimal()
    {
        org.sat4j.opt.MinOneDecorator r0;
        boolean $z0;

        r0 := @this: org.sat4j.opt.MinOneDecorator;

        $z0 = r0.<org.sat4j.opt.MinOneDecorator: boolean isSolutionOptimal>;

        return $z0;
    }

    public static void <clinit>()
    {
        <org.sat4j.opt.MinOneDecorator: long serialVersionUID> = 1L;

        return;
    }
}
