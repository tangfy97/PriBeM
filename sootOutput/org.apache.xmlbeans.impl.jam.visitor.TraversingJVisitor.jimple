public class org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor extends org.apache.xmlbeans.impl.jam.visitor.JVisitor
{
    private org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate;

    public void <init>(org.apache.xmlbeans.impl.jam.visitor.JVisitor)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.JVisitor;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.JVisitor: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null jv");

        throw $r2;

     label1:
        r0.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate> = r1;

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.JPackage)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor $r2;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.JPackage r0;
        org.apache.xmlbeans.impl.jam.JClass[] $r3;
        org.apache.xmlbeans.impl.jam.JClass $r4;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JPackage;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JPackage: void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)>($r2);

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JPackage: org.apache.xmlbeans.impl.jam.JClass[] getClasses()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r4 = $r3[i1];

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visit(org.apache.xmlbeans.impl.jam.JClass)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitComment(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.JClass)
    {
        org.apache.xmlbeans.impl.jam.JConstructor[] $r4;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor $r2;
        org.apache.xmlbeans.impl.jam.JField $r8;
        org.apache.xmlbeans.impl.jam.JMethod[] $r5;
        org.apache.xmlbeans.impl.jam.JClass r0;
        org.apache.xmlbeans.impl.jam.JField[] $r3;
        org.apache.xmlbeans.impl.jam.JConstructor $r7;
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r1;
        int $i0, $i1, $i2, i3, i4, i5;
        org.apache.xmlbeans.impl.jam.JMethod $r6;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)>($r2);

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JField[] getDeclaredFields()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r3;

        if i3 >= $i0 goto label2;

        $r8 = $r3[i3];

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visit(org.apache.xmlbeans.impl.jam.JField)>($r8);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JConstructor[] getConstructors()>();

        i4 = 0;

     label3:
        $i1 = lengthof $r4;

        if i4 >= $i1 goto label4;

        $r7 = $r4[i4];

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visit(org.apache.xmlbeans.impl.jam.JConstructor)>($r7);

        i4 = i4 + 1;

        goto label3;

     label4:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JMethod[] getMethods()>();

        i5 = 0;

     label5:
        $i2 = lengthof $r5;

        if i5 >= $i2 goto label6;

        $r6 = $r5[i5];

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visit(org.apache.xmlbeans.impl.jam.JMethod)>($r6);

        i5 = i5 + 1;

        goto label5;

     label6:
        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitComment(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.JField)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor $r2;
        org.apache.xmlbeans.impl.jam.JField r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JField;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JField: void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)>($r2);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitComment(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.JConstructor)
    {
        org.apache.xmlbeans.impl.jam.JConstructor r0;
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JConstructor;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JConstructor: void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)>($r2);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitParameters(org.apache.xmlbeans.impl.jam.JInvokable)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitComment(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.JMethod)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r1;
        org.apache.xmlbeans.impl.jam.JMethod r0;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JMethod;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JMethod: void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)>($r2);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitParameters(org.apache.xmlbeans.impl.jam.JInvokable)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitComment(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.JParameter)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor $r2;
        org.apache.xmlbeans.impl.jam.JParameter r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JParameter;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JParameter: void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)>($r2);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visitComment(org.apache.xmlbeans.impl.jam.JAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.JAnnotation)
    {
        org.apache.xmlbeans.impl.jam.JAnnotation r0;
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JAnnotation;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JAnnotation: void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)>($r2);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.JComment)
    {
        org.apache.xmlbeans.impl.jam.JComment r0;
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JComment;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: org.apache.xmlbeans.impl.jam.visitor.JVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JComment: void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)>($r2);

        return;
    }

    private void visitParameters(org.apache.xmlbeans.impl.jam.JInvokable)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r2;
        org.apache.xmlbeans.impl.jam.JParameter $r3;
        org.apache.xmlbeans.impl.jam.JParameter[] $r1;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.JInvokable r0;

        r2 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JInvokable;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JInvokable: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        virtualinvoke r2.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visit(org.apache.xmlbeans.impl.jam.JParameter)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void visitAnnotations(org.apache.xmlbeans.impl.jam.JAnnotatedElement)
    {
        org.apache.xmlbeans.impl.jam.JAnnotatedElement r0;
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r2;
        org.apache.xmlbeans.impl.jam.JAnnotation[] $r1;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.JAnnotation $r3;

        r2 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JAnnotatedElement;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JAnnotatedElement: org.apache.xmlbeans.impl.jam.JAnnotation[] getAnnotations()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        virtualinvoke r2.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visit(org.apache.xmlbeans.impl.jam.JAnnotation)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void visitComment(org.apache.xmlbeans.impl.jam.JAnnotatedElement)
    {
        org.apache.xmlbeans.impl.jam.JComment $r1;
        org.apache.xmlbeans.impl.jam.JAnnotatedElement r0;
        org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor r2;

        r2 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JAnnotatedElement;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JAnnotatedElement: org.apache.xmlbeans.impl.jam.JComment getComment()>();

        if $r1 == null goto label1;

        virtualinvoke r2.<org.apache.xmlbeans.impl.jam.visitor.TraversingJVisitor: void visit(org.apache.xmlbeans.impl.jam.JComment)>($r1);

     label1:
        return;
    }
}
