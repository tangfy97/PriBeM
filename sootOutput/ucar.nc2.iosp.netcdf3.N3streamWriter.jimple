public abstract class ucar.nc2.iosp.netcdf3.N3streamWriter extends java.lang.Object
{
    protected ucar.nc2.NetcdfFile ncfile;
    protected java.util.Map vinfoMap;
    protected java.util.List vinfoList;
    protected boolean debug;
    protected boolean debugPos;
    protected boolean debugWriteData;
    protected int recStart;
    protected int recSize;
    protected boolean usePadding;
    protected long filePos;

    protected void <init>(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.iosp.netcdf3.N3streamWriter r0;
        java.util.HashMap $r1;
        ucar.nc2.NetcdfFile r3;
        java.util.ArrayList $r2;

        r0 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r3 := @parameter0: ucar.nc2.NetcdfFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: java.util.Map vinfoMap> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: java.util.List vinfoList> = $r2;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debug> = 0;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debugPos> = 0;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debugWriteData> = 0;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean usePadding> = 1;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: long filePos> = 0L;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.NetcdfFile ncfile> = r3;

        return;
    }

    public void writeHeader(java.io.DataOutputStream, int) throws java.io.IOException
    {
        byte[] $r3, $r4;
        ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo $r19, $r40, $r59;
        java.io.DataOutputStream r2;
        byte $b19;
        java.util.Map $r20, $r41;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r22, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r34, $r36, $r37, $r43, $r45, $r47, $r48, $r49, $r50, $r51, $r53, $r55, $r56, $r60, $r62, $r63;
        long $l2, $l3;
        java.lang.String $r17, $r25, $r33, $r38, $r46, $r52, $r57, $r64, $r66, $r67;
        ucar.nc2.iosp.netcdf3.N3streamWriter r0;
        ucar.nc2.Dimension $r6, r70;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.List $r8, $r10, $r21, $r42, $r69;
        ucar.nc2.NetcdfFile $r1, $r5, $r7, $r9, $r68;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i20, $i21, i22, i23, i24, $i25, i26, i27, i28, i29, i30, i31;
        ucar.nc2.Variable r71, r72, r73;
        java.io.PrintStream $r12, $r23, $r35, $r44, $r54, $r61;
        java.lang.Object $r18, $r39, $r58, $r65;

        r0 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r2 := @parameter0: java.io.DataOutputStream;

        i17 := @parameter1: int;

        $r1 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r1.<ucar.nc2.NetcdfFile: void finish()>();

        $r3 = <ucar.nc2.iosp.netcdf3.N3header: byte[] MAGIC>;

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>($r3);

        $r4 = <ucar.nc2.iosp.netcdf3.N3header: byte[] MAGIC>;

        i18 = lengthof $r4;

        $r5 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.NetcdfFile ncfile>;

        $r6 = virtualinvoke $r5.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension getUnlimitedDimension()>();

        if i17 >= 0 goto label03;

        if $r6 != null goto label01;

        $b19 = 0;

        goto label02;

     label01:
        $b19 = -1;

     label02:
        i17 = $b19;

     label03:
        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(i17);

        i20 = i18 + 4;

        $r68 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.NetcdfFile ncfile>;

        $r69 = virtualinvoke $r68.<ucar.nc2.NetcdfFile: java.util.List getDimensions()>();

        $i21 = interfaceinvoke $r69.<java.util.List: int size()>();

        if $i21 != 0 goto label04;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(0);

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(0);

        goto label05;

     label04:
        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(10);

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i21);

     label05:
        i22 = i20 + 8;

        i23 = 0;

     label06:
        if i23 >= $i21 goto label09;

        $r65 = interfaceinvoke $r69.<java.util.List: java.lang.Object get(int)>(i23);

        r70 = (ucar.nc2.Dimension) $r65;

        $r66 = virtualinvoke r70.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r67 = staticinvoke <ucar.nc2.iosp.netcdf3.N3iosp: java.lang.String makeValidNetcdfObjectName(java.lang.String)>($r66);

        $i16 = specialinvoke r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeString(java.io.DataOutputStream,java.lang.String)>(r2, $r67);

        i24 = i22 + $i16;

        $z10 = virtualinvoke r70.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z10 == 0 goto label07;

        $i25 = 0;

        goto label08;

     label07:
        $i25 = virtualinvoke r70.<ucar.nc2.Dimension: int getLength()>();

     label08:
        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i25);

        i22 = i24 + 4;

        i23 = i23 + 1;

        goto label06;

     label09:
        $r7 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.NetcdfFile ncfile>;

        $r8 = virtualinvoke $r7.<ucar.nc2.NetcdfFile: java.util.List getGlobalAttributes()>();

        $i0 = specialinvoke r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeAtts(java.io.DataOutputStream,java.util.List)>(r2, $r8);

        i26 = i22 + $i0;

        $z0 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debug>;

        if $z0 == 0 goto label10;

        $r61 = <java.lang.System: java.io.PrintStream out>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vars header starts at ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r64);

     label10:
        $r9 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.NetcdfFile ncfile>;

        $r10 = virtualinvoke $r9.<ucar.nc2.NetcdfFile: java.util.List getVariables()>();

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 != 0 goto label11;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(0);

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(0);

        goto label12;

     label11:
        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(11);

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i1);

     label12:
        i27 = i26 + 8;

        i28 = 0;

     label13:
        if i28 >= $i1 goto label16;

        $r58 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i28);

        r71 = (ucar.nc2.Variable) $r58;

        $z9 = r71 instanceof ucar.nc2.Structure;

        if $z9 == 0 goto label14;

        goto label15;

     label14:
        $r59 = specialinvoke r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo writeVar(java.io.DataOutputStream,ucar.nc2.Variable,int)>(null, r71, 0);

        $i15 = $r59.<ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo: int hsize>;

        i27 = i27 + $i15;

     label15:
        i28 = i28 + 1;

        goto label13;

     label16:
        i29 = i27;

        $z1 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debug>;

        if $z1 == 0 goto label17;

        $r54 = <java.lang.System: java.io.PrintStream out>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" non-record vars start at ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r57);

     label17:
        i30 = 0;

     label18:
        if i30 >= $i1 goto label21;

        $r39 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i30);

        r72 = (ucar.nc2.Variable) $r39;

        $z7 = virtualinvoke r72.<ucar.nc2.Variable: boolean isUnlimited()>();

        if $z7 != 0 goto label20;

        $r40 = specialinvoke r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo writeVar(java.io.DataOutputStream,ucar.nc2.Variable,int)>(r2, r72, i29);

        $r41 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: java.util.Map vinfoMap>;

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r72, $r40);

        $z8 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debugPos>;

        if $z8 == 0 goto label19;

        $r44 = <java.lang.System: java.io.PrintStream out>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r46 = virtualinvoke r72.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" begin at = ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end=");

        $i13 = $r40.<ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo: int vsize>;

        $i14 = i29 + $i13;

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label19:
        $i12 = $r40.<ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo: int vsize>;

        i29 = i29 + $i12;

        $r42 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: java.util.List vinfoList>;

        interfaceinvoke $r42.<java.util.List: boolean add(java.lang.Object)>($r40);

     label20:
        i30 = i30 + 1;

        goto label18;

     label21:
        $z2 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debug>;

        if $z2 == 0 goto label22;

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" record vars start at ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label22:
        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int recStart> = i29;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int recSize> = 0;

        i31 = 0;

     label23:
        if i31 >= $i1 goto label27;

        $r18 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i31);

        r73 = (ucar.nc2.Variable) $r18;

        $z4 = virtualinvoke r73.<ucar.nc2.Variable: boolean isUnlimited()>();

        if $z4 == 0 goto label26;

        $z5 = r73 instanceof ucar.nc2.Structure;

        if $z5 == 0 goto label24;

        goto label26;

     label24:
        $r19 = specialinvoke r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo writeVar(java.io.DataOutputStream,ucar.nc2.Variable,int)>(r2, r73, i29);

        $r20 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: java.util.Map vinfoMap>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r73, $r19);

        $z6 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debugPos>;

        if $z6 == 0 goto label25;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r25 = virtualinvoke r73.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(record) begin at = ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end=");

        $i9 = $r19.<ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo: int vsize>;

        $i10 = i29 + $i9;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        $i11 = $r19.<ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo: int vsize>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r33);

     label25:
        $i5 = $r19.<ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo: int vsize>;

        i29 = i29 + $i5;

        $i7 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int recSize>;

        $i6 = $r19.<ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo: int vsize>;

        $i8 = $i7 + $i6;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int recSize> = $i8;

        $r21 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: java.util.List vinfoList>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r19);

     label26:
        i31 = i31 + 1;

        goto label23;

     label27:
        $l2 = (long) i27;

        r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: long filePos> = $l2;

        $z3 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean debugPos>;

        if $z3 == 0 goto label28;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("header written filePos= ");

        $l3 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: long filePos>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recsize= ");

        $i4 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int recSize>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label28:
        return;
    }

    private ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo writeVar(java.io.DataOutputStream, ucar.nc2.Variable, int) throws java.io.IOException
    {
        ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo $r10;
        java.io.DataOutputStream r1;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.DataType $r5, $r9;
        java.util.List $r6, $r8;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i12, i13, i14;
        ucar.nc2.Variable r2;
        java.lang.String $r3, $r4;
        java.util.Iterator $r7;
        ucar.nc2.iosp.netcdf3.N3streamWriter r0;
        java.lang.Object $r11;
        ucar.nc2.Dimension r12;

        r0 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r1 := @parameter0: java.io.DataOutputStream;

        r2 := @parameter1: ucar.nc2.Variable;

        i3 := @parameter2: int;

        $r3 = virtualinvoke r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $r4 = staticinvoke <ucar.nc2.iosp.netcdf3.N3iosp: java.lang.String makeValidNetcdfObjectName(java.lang.String)>($r3);

        $i0 = specialinvoke r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeString(java.io.DataOutputStream,java.lang.String)>(r1, $r4);

        i9 = 0 + $i0;

        $r5 = virtualinvoke r2.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        i10 = virtualinvoke $r5.<ucar.ma2.DataType: int getSize()>();

        $r6 = virtualinvoke r2.<ucar.nc2.Variable: java.util.List getDimensions()>();

        if null == r1 goto label1;

        $i8 = interfaceinvoke $r6.<java.util.List: int size()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i8);

     label1:
        i11 = i9 + 4;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.Dimension) $r11;

        $i6 = specialinvoke r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int findDimensionIndex(ucar.nc2.Dimension)>(r12);

        if null == r1 goto label3;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i6);

     label3:
        i11 = i11 + 4;

        $z2 = virtualinvoke r12.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 != 0 goto label4;

        $i7 = virtualinvoke r12.<ucar.nc2.Dimension: int getLength()>();

        i10 = i10 * $i7;

     label4:
        goto label2;

     label5:
        $z0 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: boolean usePadding>;

        if $z0 == 0 goto label6;

        $i12 = staticinvoke <ucar.nc2.iosp.netcdf3.N3header: int padding(int)>(i10);

        goto label7;

     label6:
        $i12 = 0;

     label7:
        i13 = $i12;

        $i4 = i10 + $i12;

        $r8 = virtualinvoke r2.<ucar.nc2.Variable: java.util.List getAttributes()>();

        $i1 = specialinvoke r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeAtts(java.io.DataOutputStream,java.util.List)>(r1, $r8);

        $i5 = i11 + $i1;

        $r9 = virtualinvoke r2.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $i2 = staticinvoke <ucar.nc2.iosp.netcdf3.N3header: int getType(ucar.ma2.DataType)>($r9);

        if null == r1 goto label8;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i2);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i4);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(i3);

     label8:
        i14 = $i5 + 12;

        $r10 = new ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo;

        $z1 = virtualinvoke r2.<ucar.nc2.Variable: boolean isUnlimited()>();

        specialinvoke $r10.<ucar.nc2.iosp.netcdf3.N3streamWriter$Vinfo: void <init>(ucar.nc2.Variable,int,int,int,int,boolean)>(r2, i14, $i4, i3, i13, $z1);

        return $r10;
    }

    private int writeAtts(java.io.DataOutputStream, java.util.List) throws java.io.IOException
    {
        java.io.DataOutputStream r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14;
        java.lang.String $r5, $r6;
        java.lang.Number $r8;
        ucar.ma2.DataType $r7;
        java.util.List r0;
        ucar.nc2.Attribute r3;
        ucar.nc2.iosp.netcdf3.N3streamWriter r4;
        java.lang.Object $r2;

        r4 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r1 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if null == r1 goto label02;

        if $i0 != 0 goto label01;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(0);

        goto label02;

     label01:
        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(12);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i0);

     label02:
        i7 = 8;

        i8 = 0;

     label03:
        if i8 >= $i0 goto label10;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i8);

        r3 = (ucar.nc2.Attribute) $r2;

        $r5 = virtualinvoke r3.<ucar.nc2.Attribute: java.lang.String getName()>();

        $r6 = staticinvoke <ucar.nc2.iosp.netcdf3.N3iosp: java.lang.String makeValidNetcdfObjectName(java.lang.String)>($r5);

        $i1 = specialinvoke r4.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeString(java.io.DataOutputStream,java.lang.String)>(r1, $r6);

        i9 = i7 + $i1;

        $r7 = virtualinvoke r3.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $i2 = staticinvoke <ucar.nc2.iosp.netcdf3.N3header: int getType(ucar.ma2.DataType)>($r7);

        if null == r1 goto label04;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i2);

     label04:
        i10 = i9 + 4;

        if $i2 != 2 goto label05;

        $i6 = specialinvoke r4.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeStringValues(java.io.DataOutputStream,ucar.nc2.Attribute)>(r1, r3);

        i7 = i10 + $i6;

        goto label09;

     label05:
        $i3 = virtualinvoke r3.<ucar.nc2.Attribute: int getLength()>();

        if null == r1 goto label06;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i3);

     label06:
        i11 = i10 + 4;

        i12 = 0;

        i13 = 0;

     label07:
        if i13 >= $i3 goto label08;

        $r8 = virtualinvoke r3.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(i13);

        $i5 = specialinvoke r4.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeAttributeValue(java.io.DataOutputStream,java.lang.Number)>(r1, $r8);

        i12 = i12 + $i5;

        i13 = i13 + 1;

        goto label07;

     label08:
        i14 = i11 + i12;

        $i4 = virtualinvoke r4.<ucar.nc2.iosp.netcdf3.N3streamWriter: int pad(java.io.DataOutputStream,int,byte)>(r1, i12, 0);

        i7 = i14 + $i4;

     label09:
        i8 = i8 + 1;

        goto label03;

     label10:
        return i7;
    }

    private int writeStringValues(java.io.DataOutputStream, ucar.nc2.Attribute) throws java.io.IOException
    {
        ucar.nc2.Attribute r0;
        java.io.DataOutputStream r3;
        int $i0, $i1, $i2, i3;
        ucar.nc2.iosp.netcdf3.N3streamWriter r2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r5, $r6;

        r2 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r3 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: ucar.nc2.Attribute;

        $i0 = virtualinvoke r0.<ucar.nc2.Attribute: int getLength()>();

        if $i0 != 1 goto label1;

        $r6 = virtualinvoke r0.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $i2 = specialinvoke r2.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeString(java.io.DataOutputStream,java.lang.String)>(r3, $r6);

        return $i2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

     label2:
        if i3 >= $i0 goto label3;

        $r5 = virtualinvoke r0.<ucar.nc2.Attribute: java.lang.String getStringValue(int)>(i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke r2.<ucar.nc2.iosp.netcdf3.N3streamWriter: int writeString(java.io.DataOutputStream,java.lang.String)>(r3, $r4);

        return $i1;
    }

    private int writeAttributeValue(java.io.DataOutputStream, java.lang.Number) throws java.io.IOException
    {
        java.lang.IllegalStateException $r11;
        short $s1;
        java.io.DataOutputStream r8;
        byte $b2;
        int $i0, $i3, $i4;
        java.lang.String $r5, $r7;
        java.lang.Number r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0;
        float $f0;
        ucar.nc2.iosp.netcdf3.N3streamWriter r9;
        java.lang.StringBuilder $r3, $r6, $r10;
        java.lang.Class $r4;

        r9 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r8 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: java.lang.Number;

        $z0 = r0 instanceof java.lang.Byte;

        if $z0 == 0 goto label02;

        if null == r8 goto label01;

        $b2 = virtualinvoke r0.<java.lang.Number: byte byteValue()>();

        $i3 = (int) $b2;

        virtualinvoke r8.<java.io.DataOutputStream: void write(int)>($i3);

     label01:
        return 1;

     label02:
        $z1 = r0 instanceof java.lang.Short;

        if $z1 == 0 goto label04;

        if null == r8 goto label03;

        $s1 = virtualinvoke r0.<java.lang.Number: short shortValue()>();

        $i4 = (int) $s1;

        virtualinvoke r8.<java.io.DataOutputStream: void writeShort(int)>($i4);

     label03:
        return 2;

     label04:
        $z2 = r0 instanceof java.lang.Integer;

        if $z2 == 0 goto label06;

        if null == r8 goto label05;

        $i0 = virtualinvoke r0.<java.lang.Number: int intValue()>();

        virtualinvoke r8.<java.io.DataOutputStream: void writeInt(int)>($i0);

     label05:
        return 4;

     label06:
        $z3 = r0 instanceof java.lang.Float;

        if $z3 == 0 goto label08;

        if null == r8 goto label07;

        $f0 = virtualinvoke r0.<java.lang.Number: float floatValue()>();

        virtualinvoke r8.<java.io.DataOutputStream: void writeFloat(float)>($f0);

     label07:
        return 4;

     label08:
        $z4 = r0 instanceof java.lang.Double;

        if $z4 == 0 goto label10;

        if null == r8 goto label09;

        $d0 = virtualinvoke r0.<java.lang.Number: double doubleValue()>();

        virtualinvoke r8.<java.io.DataOutputStream: void writeDouble(double)>($d0);

     label09:
        return 8;

     label10:
        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown attribute type == ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r11;
    }

    private int writeString(java.io.DataOutputStream, java.lang.String) throws java.io.IOException
    {
        byte[] $r1;
        java.io.DataOutputStream r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        ucar.nc2.iosp.netcdf3.N3streamWriter r3;
        java.lang.String r0;

        r3 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r2 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        if null == r2 goto label1;

        $i5 = lengthof $r1;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i5);

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>($r1);

     label1:
        $i0 = lengthof $r1;

        $i1 = virtualinvoke r3.<ucar.nc2.iosp.netcdf3.N3streamWriter: int pad(java.io.DataOutputStream,int,byte)>(r2, $i0, 0);

        $i3 = $i1 + 4;

        $i2 = lengthof $r1;

        $i4 = $i3 + $i2;

        return $i4;
    }

    private int findDimensionIndex(ucar.nc2.Dimension)
    {
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        int $i0, i1;
        ucar.nc2.iosp.netcdf3.N3streamWriter r0;
        java.lang.StringBuilder $r4, $r5, $r7;
        ucar.nc2.Dimension r6, r10;
        java.lang.Object $r9;
        ucar.nc2.NetcdfFile $r1;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r6 := @parameter0: ucar.nc2.Dimension;

        $r1 = r0.<ucar.nc2.iosp.netcdf3.N3streamWriter: ucar.nc2.NetcdfFile ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.NetcdfFile: java.util.List getDimensions()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r9 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r10 = (ucar.nc2.Dimension) $r9;

        $z0 = virtualinvoke r10.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown Dimension == ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    protected int pad(java.io.DataOutputStream, int, byte) throws java.io.IOException
    {
        java.io.DataOutputStream r0;
        byte b2;
        int i0, $i1, i3, $i4;
        ucar.nc2.iosp.netcdf3.N3streamWriter r1;

        r1 := @this: ucar.nc2.iosp.netcdf3.N3streamWriter;

        r0 := @parameter0: java.io.DataOutputStream;

        i0 := @parameter1: int;

        b2 := @parameter2: byte;

        $i1 = staticinvoke <ucar.nc2.iosp.netcdf3.N3header: int padding(int)>(i0);

        if null == r0 goto label2;

        i3 = 0;

     label1:
        if i3 >= $i1 goto label2;

        $i4 = (int) b2;

        virtualinvoke r0.<java.io.DataOutputStream: void write(int)>($i4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $i1;
    }
}
