public class org.springframework.http.client.support.ProxyFactoryBean extends java.lang.Object implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.InitializingBean
{
    private java.net.Proxy$Type type;
    private java.lang.String hostname;
    private int port;
    private java.net.Proxy proxy;

    public void <init>()
    {
        int $i1;
        java.net.Proxy$Type $r1;
        org.springframework.http.client.support.ProxyFactoryBean r0;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        r0.<org.springframework.http.client.support.ProxyFactoryBean: java.net.Proxy$Type type> = $r1;

        $i1 = (int) -1;

        r0.<org.springframework.http.client.support.ProxyFactoryBean: int port> = $i1;

        return;
    }

    public void setType(java.net.Proxy$Type)
    {
        java.net.Proxy$Type r1;
        org.springframework.http.client.support.ProxyFactoryBean r0;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        r1 := @parameter0: java.net.Proxy$Type;

        r0.<org.springframework.http.client.support.ProxyFactoryBean: java.net.Proxy$Type type> = r1;

        return;
    }

    public void setHostname(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.http.client.support.ProxyFactoryBean r0;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.http.client.support.ProxyFactoryBean: java.lang.String hostname> = r1;

        return;
    }

    public void setPort(int)
    {
        int i0;
        org.springframework.http.client.support.ProxyFactoryBean r0;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        i0 := @parameter0: int;

        r0.<org.springframework.http.client.support.ProxyFactoryBean: int port> = i0;

        return;
    }

    public void afterPropertiesSet() throws java.lang.IllegalArgumentException
    {
        java.net.Proxy$Type $r1, $r9;
        java.net.Proxy $r12;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r2, $r5, $r7;
        boolean $z0;
        java.net.InetSocketAddress $r11;
        org.springframework.http.client.support.ProxyFactoryBean r0;
        java.lang.StringBuilder $r4, $r10;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        $r1 = r0.<org.springframework.http.client.support.ProxyFactoryBean: java.net.Proxy$Type type>;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>($r1, "\'type\' must not be null");

        $r2 = r0.<org.springframework.http.client.support.ProxyFactoryBean: java.lang.String hostname>;

        staticinvoke <org.springframework.util.Assert: void hasLength(java.lang.String,java.lang.String)>($r2, "\'hostname\' must not be empty");

        $i0 = r0.<org.springframework.http.client.support.ProxyFactoryBean: int port>;

        if $i0 < 0 goto label1;

        $i1 = r0.<org.springframework.http.client.support.ProxyFactoryBean: int port>;

        $i5 = (int) 65535;

        if $i1 > $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("\'port\' out of range: ");

        $i2 = r0.<org.springframework.http.client.support.ProxyFactoryBean: int port>;

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, $r5);

        $r11 = new java.net.InetSocketAddress;

        $r7 = r0.<org.springframework.http.client.support.ProxyFactoryBean: java.lang.String hostname>;

        $i3 = r0.<org.springframework.http.client.support.ProxyFactoryBean: int port>;

        specialinvoke $r11.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r7, $i3);

        $r12 = new java.net.Proxy;

        $r9 = r0.<org.springframework.http.client.support.ProxyFactoryBean: java.net.Proxy$Type type>;

        specialinvoke $r12.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r9, $r11);

        r0.<org.springframework.http.client.support.ProxyFactoryBean: java.net.Proxy proxy> = $r12;

        return;
    }

    public java.net.Proxy getObject()
    {
        java.net.Proxy $r1;
        org.springframework.http.client.support.ProxyFactoryBean r0;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        $r1 = r0.<org.springframework.http.client.support.ProxyFactoryBean: java.net.Proxy proxy>;

        return $r1;
    }

    public java.lang.Class getObjectType()
    {
        org.springframework.http.client.support.ProxyFactoryBean r0;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        return class "Ljava/net/Proxy;";
    }

    public boolean isSingleton()
    {
        org.springframework.http.client.support.ProxyFactoryBean r0;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        return 1;
    }

    public volatile java.lang.Object getObject() throws java.lang.Exception
    {
        java.net.Proxy $r1;
        org.springframework.http.client.support.ProxyFactoryBean r0;

        r0 := @this: org.springframework.http.client.support.ProxyFactoryBean;

        $r1 = virtualinvoke r0.<org.springframework.http.client.support.ProxyFactoryBean: java.net.Proxy getObject()>();

        return $r1;
    }
}
