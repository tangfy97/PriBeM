public class org.apache.log4j.helpers.UtilLoggingLevel extends org.apache.log4j.Level
{
    private static final long serialVersionUID;
    public static final int SEVERE_INT;
    public static final int WARNING_INT;
    public static final int CONFIG_INT;
    public static final int FINE_INT;
    public static final int FINER_INT;
    public static final int FINEST_INT;
    public static final int UNKNOWN_INT;
    public static final org.apache.log4j.helpers.UtilLoggingLevel SEVERE;
    public static final org.apache.log4j.helpers.UtilLoggingLevel WARNING;
    public static final org.apache.log4j.helpers.UtilLoggingLevel INFO;
    public static final org.apache.log4j.helpers.UtilLoggingLevel CONFIG;
    public static final org.apache.log4j.helpers.UtilLoggingLevel FINE;
    public static final org.apache.log4j.helpers.UtilLoggingLevel FINER;
    public static final org.apache.log4j.helpers.UtilLoggingLevel FINEST;

    protected void <init>(int, java.lang.String, int)
    {
        int i0, i1;
        java.lang.String r1;
        org.apache.log4j.helpers.UtilLoggingLevel r0;

        r0 := @this: org.apache.log4j.helpers.UtilLoggingLevel;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.log4j.Level: void <init>(int,java.lang.String,int)>(i0, r1, i1);

        return;
    }

    public static org.apache.log4j.helpers.UtilLoggingLevel toLevel(int, org.apache.log4j.helpers.UtilLoggingLevel)
    {
        org.apache.log4j.helpers.UtilLoggingLevel $r0, $r1, $r2, $r3, $r4, $r5, $r6, r7;
        int i0;

        i0 := @parameter0: int;

        r7 := @parameter1: org.apache.log4j.helpers.UtilLoggingLevel;

        lookupswitch(i0)
        {
            case 11000: goto label7;
            case 12000: goto label6;
            case 13000: goto label5;
            case 14000: goto label4;
            case 20000: goto label3;
            case 21000: goto label2;
            case 22000: goto label1;
            default: goto label8;
        };

     label1:
        $r0 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel SEVERE>;

        return $r0;

     label2:
        $r1 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel WARNING>;

        return $r1;

     label3:
        $r2 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel INFO>;

        return $r2;

     label4:
        $r3 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel CONFIG>;

        return $r3;

     label5:
        $r4 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINE>;

        return $r4;

     label6:
        $r5 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINER>;

        return $r5;

     label7:
        $r6 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINEST>;

        return $r6;

     label8:
        return r7;
    }

    public static org.apache.log4j.Level toLevel(int)
    {
        int i0;
        org.apache.log4j.helpers.UtilLoggingLevel $r0, $r1;

        i0 := @parameter0: int;

        $r0 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINEST>;

        $r1 = staticinvoke <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel toLevel(int,org.apache.log4j.helpers.UtilLoggingLevel)>(i0, $r0);

        return $r1;
    }

    public static java.util.List getAllPossibleLevels()
    {
        org.apache.log4j.helpers.UtilLoggingLevel $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINE>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r2 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINER>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r3 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINEST>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r4 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel INFO>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r5 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel CONFIG>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel WARNING>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel SEVERE>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        return $r0;
    }

    public static org.apache.log4j.Level toLevel(java.lang.String)
    {
        java.lang.String r0;
        org.apache.log4j.Level $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r2 = staticinvoke <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>(r0, $r1);

        return $r2;
    }

    public static org.apache.log4j.Level toLevel(java.lang.String, org.apache.log4j.Level)
    {
        org.apache.log4j.helpers.UtilLoggingLevel $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.log4j.Level r2;
        java.lang.String r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.log4j.Level;

        if r0 != null goto label1;

        return r2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("SEVERE");

        if $z0 == 0 goto label2;

        $r9 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel SEVERE>;

        return $r9;

     label2:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("WARNING");

        if $z1 == 0 goto label3;

        $r8 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel WARNING>;

        return $r8;

     label3:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("INFO");

        if $z2 == 0 goto label4;

        $r7 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel INFO>;

        return $r7;

     label4:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("CONFI");

        if $z3 == 0 goto label5;

        $r6 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel CONFIG>;

        return $r6;

     label5:
        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("FINE");

        if $z4 == 0 goto label6;

        $r5 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINE>;

        return $r5;

     label6:
        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("FINER");

        if $z5 == 0 goto label7;

        $r4 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINER>;

        return $r4;

     label7:
        $z6 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("FINEST");

        if $z6 == 0 goto label8;

        $r3 = <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINEST>;

        return $r3;

     label8:
        return r2;
    }

    static void <clinit>()
    {
        org.apache.log4j.helpers.UtilLoggingLevel $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        <org.apache.log4j.helpers.UtilLoggingLevel: int UNKNOWN_INT> = 10000;

        <org.apache.log4j.helpers.UtilLoggingLevel: int FINEST_INT> = 11000;

        <org.apache.log4j.helpers.UtilLoggingLevel: int FINER_INT> = 12000;

        <org.apache.log4j.helpers.UtilLoggingLevel: int FINE_INT> = 13000;

        <org.apache.log4j.helpers.UtilLoggingLevel: int CONFIG_INT> = 14000;

        <org.apache.log4j.helpers.UtilLoggingLevel: int WARNING_INT> = 21000;

        <org.apache.log4j.helpers.UtilLoggingLevel: int SEVERE_INT> = 22000;

        <org.apache.log4j.helpers.UtilLoggingLevel: long serialVersionUID> = 909301162611820211L;

        $r0 = new org.apache.log4j.helpers.UtilLoggingLevel;

        specialinvoke $r0.<org.apache.log4j.helpers.UtilLoggingLevel: void <init>(int,java.lang.String,int)>(22000, "SEVERE", 0);

        <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel SEVERE> = $r0;

        $r1 = new org.apache.log4j.helpers.UtilLoggingLevel;

        specialinvoke $r1.<org.apache.log4j.helpers.UtilLoggingLevel: void <init>(int,java.lang.String,int)>(21000, "WARNING", 4);

        <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel WARNING> = $r1;

        $r2 = new org.apache.log4j.helpers.UtilLoggingLevel;

        specialinvoke $r2.<org.apache.log4j.helpers.UtilLoggingLevel: void <init>(int,java.lang.String,int)>(20000, "INFO", 5);

        <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel INFO> = $r2;

        $r3 = new org.apache.log4j.helpers.UtilLoggingLevel;

        specialinvoke $r3.<org.apache.log4j.helpers.UtilLoggingLevel: void <init>(int,java.lang.String,int)>(14000, "CONFIG", 6);

        <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel CONFIG> = $r3;

        $r4 = new org.apache.log4j.helpers.UtilLoggingLevel;

        specialinvoke $r4.<org.apache.log4j.helpers.UtilLoggingLevel: void <init>(int,java.lang.String,int)>(13000, "FINE", 7);

        <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINE> = $r4;

        $r5 = new org.apache.log4j.helpers.UtilLoggingLevel;

        specialinvoke $r5.<org.apache.log4j.helpers.UtilLoggingLevel: void <init>(int,java.lang.String,int)>(12000, "FINER", 8);

        <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINER> = $r5;

        $r6 = new org.apache.log4j.helpers.UtilLoggingLevel;

        specialinvoke $r6.<org.apache.log4j.helpers.UtilLoggingLevel: void <init>(int,java.lang.String,int)>(11000, "FINEST", 9);

        <org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINEST> = $r6;

        return;
    }
}
