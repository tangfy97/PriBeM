public class org.gagravarr.ogg.OggPage extends java.lang.Object
{
    private int sid;
    private int seqNum;
    private long checksum;
    private long granulePosition;
    private boolean isBOS;
    private boolean isEOS;
    private boolean isContinue;
    private int numLVs;
    private byte[] lvs;
    private byte[] data;
    private java.io.ByteArrayOutputStream tmpData;

    protected void <init>(int, int)
    {
        byte[] $r1;
        org.gagravarr.ogg.OggPage r0;
        java.io.ByteArrayOutputStream $r2;
        int i0, i1;

        r0 := @this: org.gagravarr.ogg.OggPage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.gagravarr.ogg.OggPage: int numLVs> = 0;

        $r1 = newarray (byte)[255];

        r0.<org.gagravarr.ogg.OggPage: byte[] lvs> = $r1;

        r0.<org.gagravarr.ogg.OggPage: int sid> = i0;

        r0.<org.gagravarr.ogg.OggPage: int seqNum> = i1;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.gagravarr.ogg.OggPage: java.io.ByteArrayOutputStream tmpData> = $r2;

        return;
    }

    protected void <init>(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4, $r5, $r6;
        org.gagravarr.ogg.OggPage r0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        long $l13, $l18, $l24, $l30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i33;
        java.lang.String $r12;
        java.lang.IllegalArgumentException $r7;
        java.io.InputStream r2;

        r0 := @this: org.gagravarr.ogg.OggPage;

        r2 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.gagravarr.ogg.OggPage: int numLVs> = 0;

        $r1 = newarray (byte)[255];

        r0.<org.gagravarr.ogg.OggPage: byte[] lvs> = $r1;

        $i0 = virtualinvoke r2.<java.io.InputStream: int read()>();

        if $i0 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found Ogg page in format ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but we only support version 0");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label1:
        $i1 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label2;

        r0.<org.gagravarr.ogg.OggPage: boolean isContinue> = 1;

     label2:
        $i3 = $i1 & 2;

        if $i3 != 2 goto label3;

        r0.<org.gagravarr.ogg.OggPage: boolean isBOS> = 1;

     label3:
        $i4 = $i1 & 4;

        if $i4 != 4 goto label4;

        r0.<org.gagravarr.ogg.OggPage: boolean isEOS> = 1;

     label4:
        $i5 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i6 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i7 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i8 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i9 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i10 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i11 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i12 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $l13 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt(int,int,int,int,int,int,int,int)>($i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12);

        r0.<org.gagravarr.ogg.OggPage: long granulePosition> = $l13;

        $i14 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i15 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i16 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i17 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $l18 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt(int,int,int,int)>($i14, $i15, $i16, $i17);

        $i19 = (int) $l18;

        r0.<org.gagravarr.ogg.OggPage: int sid> = $i19;

        $i20 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i21 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i22 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i23 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $l24 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt(int,int,int,int)>($i20, $i21, $i22, $i23);

        $i25 = (int) $l24;

        r0.<org.gagravarr.ogg.OggPage: int seqNum> = $i25;

        $i26 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i27 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i28 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i29 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $l30 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt(int,int,int,int)>($i26, $i27, $i28, $i29);

        r0.<org.gagravarr.ogg.OggPage: long checksum> = $l30;

        $i31 = virtualinvoke r2.<java.io.InputStream: int read()>();

        r0.<org.gagravarr.ogg.OggPage: int numLVs> = $i31;

        $i32 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        $r3 = newarray (byte)[$i32];

        r0.<org.gagravarr.ogg.OggPage: byte[] lvs> = $r3;

        $r4 = r0.<org.gagravarr.ogg.OggPage: byte[] lvs>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void readFully(java.io.InputStream,byte[])>(r2, $r4);

        $i33 = virtualinvoke r0.<org.gagravarr.ogg.OggPage: int getDataSize()>();

        $r5 = newarray (byte)[$i33];

        r0.<org.gagravarr.ogg.OggPage: byte[] data> = $r5;

        $r6 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void readFully(java.io.InputStream,byte[])>(r2, $r6);

        return;
    }

    protected int addPacket(org.gagravarr.ogg.OggPacket, int)
    {
        byte[] $r1, $r3, $r5;
        java.io.ByteArrayOutputStream $r4;
        byte $b1;
        org.gagravarr.ogg.OggPacket r0;
        int i0, $i2, $i3, $i4, i5, i6, i7;
        boolean $z0, $z1;
        org.gagravarr.ogg.OggPage r2;

        r2 := @this: org.gagravarr.ogg.OggPage;

        r0 := @parameter0: org.gagravarr.ogg.OggPacket;

        i5 := @parameter1: int;

        $z0 = virtualinvoke r0.<org.gagravarr.ogg.OggPacket: boolean isBeginningOfStream()>();

        if $z0 == 0 goto label1;

        r2.<org.gagravarr.ogg.OggPage: boolean isBOS> = 1;

     label1:
        $z1 = virtualinvoke r0.<org.gagravarr.ogg.OggPacket: boolean isEndOfStream()>();

        if $z1 == 0 goto label2;

        r2.<org.gagravarr.ogg.OggPage: boolean isEOS> = 1;

     label2:
        $r1 = virtualinvoke r0.<org.gagravarr.ogg.OggPacket: byte[] getData()>();

        $i4 = lengthof $r1;

        i6 = r2.<org.gagravarr.ogg.OggPage: int numLVs>;

     label3:
        if i6 >= 255 goto label6;

        i0 = $i4 - i5;

        i7 = 255;

        if i0 >= 255 goto label4;

        i7 = i0;

     label4:
        $r3 = r2.<org.gagravarr.ogg.OggPage: byte[] lvs>;

        $b1 = staticinvoke <org.gagravarr.ogg.IOUtils: byte fromInt(int)>(i7);

        $r3[i6] = $b1;

        $r4 = r2.<org.gagravarr.ogg.OggPage: java.io.ByteArrayOutputStream tmpData>;

        $r5 = virtualinvoke r0.<org.gagravarr.ogg.OggPacket: byte[] getData()>();

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r5, i5, i7);

        $i2 = r2.<org.gagravarr.ogg.OggPage: int numLVs>;

        $i3 = $i2 + 1;

        r2.<org.gagravarr.ogg.OggPage: int numLVs> = $i3;

        i5 = i5 + i7;

        if i7 >= 255 goto label5;

        goto label6;

     label5:
        i6 = i6 + 1;

        goto label3;

     label6:
        return i5;
    }

    public boolean isChecksumValid()
    {
        byte[] $r1, $r2, $r3, $r4;
        long $l0, $l5, $l6;
        org.gagravarr.ogg.OggPage r0;
        byte $b1, $b7;
        int $i2, $i3, i4;
        boolean $z0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $l0 = r0.<org.gagravarr.ogg.OggPage: long checksum>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return 1;

     label1:
        $r1 = virtualinvoke r0.<org.gagravarr.ogg.OggPage: byte[] getHeader()>();

        $i2 = staticinvoke <org.gagravarr.ogg.CRCUtils: int getCRC(byte[])>($r1);

        i4 = $i2;

        $r2 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        if $r2 == null goto label2;

        $r3 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        $i3 = lengthof $r3;

        if $i3 <= 0 goto label2;

        $r4 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        i4 = staticinvoke <org.gagravarr.ogg.CRCUtils: int getCRC(byte[],int)>($r4, $i2);

     label2:
        $l5 = r0.<org.gagravarr.ogg.OggPage: long checksum>;

        $l6 = (long) i4;

        $b7 = $l5 cmp $l6;

        if $b7 != 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    protected long getChecksum()
    {
        long $l0;
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $l0 = r0.<org.gagravarr.ogg.OggPage: long checksum>;

        return $l0;
    }

    protected boolean hasSpaceFor(int)
    {
        org.gagravarr.ogg.OggPage r0;
        int i0, i1, $i2, $i3;
        double $d0, $d1, $d2;

        r0 := @this: org.gagravarr.ogg.OggPage;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 / 255.0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        i1 = (int) $d2;

        $i2 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        $i3 = $i2 + i1;

        if $i3 <= 255 goto label1;

        return 0;

     label1:
        return 1;
    }

    public int getPageSize()
    {
        org.gagravarr.ogg.OggPage r0;
        int $i0, $i1, i2, i3;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $i0 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        i2 = 27 + $i0;

        $i1 = virtualinvoke r0.<org.gagravarr.ogg.OggPage: int getDataSize()>();

        i3 = i2 + $i1;

        return i3;
    }

    public int getDataSize()
    {
        byte[] $r1;
        org.gagravarr.ogg.OggPage r0;
        byte $b1;
        int $i0, $i2, i3, i4;

        r0 := @this: org.gagravarr.ogg.OggPage;

        i3 = 0;

        i4 = 0;

     label1:
        $i0 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        if i4 >= $i0 goto label2;

        $r1 = r0.<org.gagravarr.ogg.OggPage: byte[] lvs>;

        $b1 = $r1[i4];

        $i2 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b1);

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    public int getSid()
    {
        int $i0;
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $i0 = r0.<org.gagravarr.ogg.OggPage: int sid>;

        return $i0;
    }

    public int getSequenceNumber()
    {
        int $i0;
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $i0 = r0.<org.gagravarr.ogg.OggPage: int seqNum>;

        return $i0;
    }

    public long getGranulePosition()
    {
        long $l0;
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $l0 = r0.<org.gagravarr.ogg.OggPage: long granulePosition>;

        return $l0;
    }

    public byte[] getData()
    {
        byte[] $r2, $r4, $r6, $r7;
        java.io.ByteArrayOutputStream $r1, $r3, $r5;
        org.gagravarr.ogg.OggPage r0;
        int $i0, $i1;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $r1 = r0.<org.gagravarr.ogg.OggPage: java.io.ByteArrayOutputStream tmpData>;

        if $r1 == null goto label2;

        $r2 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        if $r2 == null goto label1;

        $r5 = r0.<org.gagravarr.ogg.OggPage: java.io.ByteArrayOutputStream tmpData>;

        $i0 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: int size()>();

        $r6 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        $i1 = lengthof $r6;

        if $i0 == $i1 goto label2;

     label1:
        $r3 = r0.<org.gagravarr.ogg.OggPage: java.io.ByteArrayOutputStream tmpData>;

        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<org.gagravarr.ogg.OggPage: byte[] data> = $r4;

     label2:
        $r7 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        return $r7;
    }

    protected void setGranulePosition(long)
    {
        long l0;
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        l0 := @parameter0: long;

        r0.<org.gagravarr.ogg.OggPage: long granulePosition> = l0;

        return;
    }

    public boolean hasContinuation()
    {
        byte[] $r1;
        org.gagravarr.ogg.OggPage r0;
        byte $b3;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $i0 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.gagravarr.ogg.OggPage: byte[] lvs>;

        $i1 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        $i2 = $i1 - 1;

        $b3 = $r1[$i2];

        $i4 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b3);

        if $i4 != 255 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isContinuation()
    {
        org.gagravarr.ogg.OggPage r0;
        boolean $z0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $z0 = r0.<org.gagravarr.ogg.OggPage: boolean isContinue>;

        return $z0;
    }

    protected void setIsContinuation()
    {
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        r0.<org.gagravarr.ogg.OggPage: boolean isContinue> = 1;

        return;
    }

    protected void setIsEOS()
    {
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        r0.<org.gagravarr.ogg.OggPage: boolean isEOS> = 1;

        return;
    }

    protected int getNumLVs()
    {
        int $i0;
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $i0 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        return $i0;
    }

    public void writeHeader(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] $r1, $r2, $r4, $r5;
        long $l3, $l4;
        org.gagravarr.ogg.OggPage r0;
        int $i0, $i1, i2;

        r0 := @this: org.gagravarr.ogg.OggPage;

        r3 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<org.gagravarr.ogg.OggPage: byte[] getHeader()>();

        virtualinvoke r0.<org.gagravarr.ogg.OggPage: byte[] getData()>();

        $i0 = staticinvoke <org.gagravarr.ogg.CRCUtils: int getCRC(byte[])>($r1);

        i2 = $i0;

        $r2 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        if $r2 == null goto label1;

        $r4 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        $i1 = lengthof $r4;

        if $i1 <= 0 goto label1;

        $r5 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        i2 = staticinvoke <org.gagravarr.ogg.CRCUtils: int getCRC(byte[],int)>($r5, $i0);

     label1:
        $l3 = (long) i2;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>($r1, 22, $l3);

        $l4 = (long) i2;

        r0.<org.gagravarr.ogg.OggPage: long checksum> = $l4;

        virtualinvoke r3.<java.io.OutputStream: void write(byte[])>($r1);

        return;
    }

    protected byte[] getHeader()
    {
        byte[] r1, $r2;
        long $l2, $l4, $l6;
        byte $b8, b12;
        int $i0, $i1, $i3, $i5, $i7, $i9, $i10, $i11;
        boolean $z0, $z1, $z2;
        org.gagravarr.ogg.OggPage r0;

        r0 := @this: org.gagravarr.ogg.OggPage;

        $i0 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        $i1 = 27 + $i0;

        r1 = newarray (byte)[$i1];

        r1[0] = 79;

        r1[1] = 103;

        r1[2] = 103;

        r1[3] = 83;

        r1[4] = 0;

        b12 = 0;

        $z0 = r0.<org.gagravarr.ogg.OggPage: boolean isContinue>;

        if $z0 == 0 goto label1;

        b12 = (byte) 1;

     label1:
        $z1 = r0.<org.gagravarr.ogg.OggPage: boolean isBOS>;

        if $z1 == 0 goto label2;

        $i11 = b12 + 2;

        b12 = (byte) $i11;

     label2:
        $z2 = r0.<org.gagravarr.ogg.OggPage: boolean isEOS>;

        if $z2 == 0 goto label3;

        $i10 = b12 + 4;

        b12 = (byte) $i10;

     label3:
        r1[5] = b12;

        $l2 = r0.<org.gagravarr.ogg.OggPage: long granulePosition>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>(r1, 6, $l2);

        $i3 = r0.<org.gagravarr.ogg.OggPage: int sid>;

        $l4 = (long) $i3;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>(r1, 14, $l4);

        $i5 = r0.<org.gagravarr.ogg.OggPage: int seqNum>;

        $l6 = (long) $i5;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>(r1, 18, $l6);

        $i7 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        $b8 = staticinvoke <org.gagravarr.ogg.IOUtils: byte fromInt(int)>($i7);

        r1[26] = $b8;

        $r2 = r0.<org.gagravarr.ogg.OggPage: byte[] lvs>;

        $i9 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 27, $i9);

        return r1;
    }

    public java.lang.String toString()
    {
        org.gagravarr.ogg.OggPage r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: org.gagravarr.ogg.OggPage;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ogg Page - ");

        $i0 = virtualinvoke r2.<org.gagravarr.ogg.OggPage: int getSid()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $i1 = virtualinvoke r2.<org.gagravarr.ogg.OggPage: int getSequenceNumber()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $i2 = r2.<org.gagravarr.ogg.OggPage: int numLVs>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LVs");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public org.gagravarr.ogg.OggPage$OggPacketIterator getPacketIterator()
    {
        org.gagravarr.ogg.OggPage$OggPacketIterator $r0;
        org.gagravarr.ogg.OggPage r1;

        r1 := @this: org.gagravarr.ogg.OggPage;

        $r0 = new org.gagravarr.ogg.OggPage$OggPacketIterator;

        specialinvoke $r0.<org.gagravarr.ogg.OggPage$OggPacketIterator: void <init>(org.gagravarr.ogg.OggPage,org.gagravarr.ogg.OggPacketData,org.gagravarr.ogg.OggPage$1)>(r1, null, null);

        return $r0;
    }

    public org.gagravarr.ogg.OggPage$OggPacketIterator getPacketIterator(org.gagravarr.ogg.OggPacketData)
    {
        org.gagravarr.ogg.OggPage$OggPacketIterator $r0;
        org.gagravarr.ogg.OggPage r1;
        org.gagravarr.ogg.OggPacketData r2;

        r1 := @this: org.gagravarr.ogg.OggPage;

        r2 := @parameter0: org.gagravarr.ogg.OggPacketData;

        $r0 = new org.gagravarr.ogg.OggPage$OggPacketIterator;

        specialinvoke $r0.<org.gagravarr.ogg.OggPage$OggPacketIterator: void <init>(org.gagravarr.ogg.OggPage,org.gagravarr.ogg.OggPacketData,org.gagravarr.ogg.OggPage$1)>(r1, r2, null);

        return $r0;
    }

    static int access$100(org.gagravarr.ogg.OggPage)
    {
        int $i0;
        org.gagravarr.ogg.OggPage r0;

        r0 := @parameter0: org.gagravarr.ogg.OggPage;

        $i0 = r0.<org.gagravarr.ogg.OggPage: int numLVs>;

        return $i0;
    }

    static byte[] access$200(org.gagravarr.ogg.OggPage)
    {
        byte[] $r1;
        org.gagravarr.ogg.OggPage r0;

        r0 := @parameter0: org.gagravarr.ogg.OggPage;

        $r1 = r0.<org.gagravarr.ogg.OggPage: byte[] lvs>;

        return $r1;
    }

    static byte[] access$300(org.gagravarr.ogg.OggPage)
    {
        byte[] $r1;
        org.gagravarr.ogg.OggPage r0;

        r0 := @parameter0: org.gagravarr.ogg.OggPage;

        $r1 = r0.<org.gagravarr.ogg.OggPage: byte[] data>;

        return $r1;
    }

    static boolean access$400(org.gagravarr.ogg.OggPage)
    {
        org.gagravarr.ogg.OggPage r0;
        boolean $z0;

        r0 := @parameter0: org.gagravarr.ogg.OggPage;

        $z0 = r0.<org.gagravarr.ogg.OggPage: boolean isBOS>;

        return $z0;
    }

    static boolean access$500(org.gagravarr.ogg.OggPage)
    {
        org.gagravarr.ogg.OggPage r0;
        boolean $z0;

        r0 := @parameter0: org.gagravarr.ogg.OggPage;

        $z0 = r0.<org.gagravarr.ogg.OggPage: boolean isEOS>;

        return $z0;
    }
}
