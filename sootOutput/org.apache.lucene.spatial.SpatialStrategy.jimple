public abstract class org.apache.lucene.spatial.SpatialStrategy extends java.lang.Object
{
    protected final com.spatial4j.core.context.SpatialContext ctx;
    private final java.lang.String fieldName;

    public void <init>(com.spatial4j.core.context.SpatialContext, java.lang.String)
    {
        com.spatial4j.core.context.SpatialContext r1;
        int $i0;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3, $r4;
        org.apache.lucene.spatial.SpatialStrategy r0;

        r0 := @this: org.apache.lucene.spatial.SpatialStrategy;

        r1 := @parameter0: com.spatial4j.core.context.SpatialContext;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ctx is required");

        throw $r4;

     label1:
        r0.<org.apache.lucene.spatial.SpatialStrategy: com.spatial4j.core.context.SpatialContext ctx> = r1;

        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fieldName is required");

        throw $r3;

     label3:
        r0.<org.apache.lucene.spatial.SpatialStrategy: java.lang.String fieldName> = r2;

        return;
    }

    public com.spatial4j.core.context.SpatialContext getSpatialContext()
    {
        com.spatial4j.core.context.SpatialContext $r1;
        org.apache.lucene.spatial.SpatialStrategy r0;

        r0 := @this: org.apache.lucene.spatial.SpatialStrategy;

        $r1 = r0.<org.apache.lucene.spatial.SpatialStrategy: com.spatial4j.core.context.SpatialContext ctx>;

        return $r1;
    }

    public java.lang.String getFieldName()
    {
        java.lang.String $r1;
        org.apache.lucene.spatial.SpatialStrategy r0;

        r0 := @this: org.apache.lucene.spatial.SpatialStrategy;

        $r1 = r0.<org.apache.lucene.spatial.SpatialStrategy: java.lang.String fieldName>;

        return $r1;
    }

    public abstract org.apache.lucene.document.Field[] createIndexableFields(com.spatial4j.core.shape.Shape);

    public abstract org.apache.lucene.queries.function.ValueSource makeDistanceValueSource(com.spatial4j.core.shape.Point);

    public org.apache.lucene.search.Query makeQuery(org.apache.lucene.spatial.query.SpatialArgs)
    {
        org.apache.lucene.search.Filter $r3;
        org.apache.lucene.spatial.query.SpatialArgs r2;
        org.apache.lucene.search.ConstantScoreQuery $r0;
        org.apache.lucene.spatial.SpatialStrategy r1;

        r1 := @this: org.apache.lucene.spatial.SpatialStrategy;

        r2 := @parameter0: org.apache.lucene.spatial.query.SpatialArgs;

        $r0 = new org.apache.lucene.search.ConstantScoreQuery;

        $r3 = virtualinvoke r1.<org.apache.lucene.spatial.SpatialStrategy: org.apache.lucene.search.Filter makeFilter(org.apache.lucene.spatial.query.SpatialArgs)>(r2);

        specialinvoke $r0.<org.apache.lucene.search.ConstantScoreQuery: void <init>(org.apache.lucene.search.Filter)>($r3);

        return $r0;
    }

    public abstract org.apache.lucene.search.Filter makeFilter(org.apache.lucene.spatial.query.SpatialArgs);

    public final org.apache.lucene.queries.function.ValueSource makeRecipDistanceValueSource(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.distance.DistanceCalculator $r4;
        org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction $r7;
        com.spatial4j.core.shape.Shape r0;
        com.spatial4j.core.shape.Point $r6, $r8;
        double $d0, $d1, $d2, $d3, $d4, d5;
        com.spatial4j.core.shape.Rectangle $r1;
        com.spatial4j.core.context.SpatialContext $r3, $r5;
        org.apache.lucene.queries.function.ValueSource $r9;
        float $f0, f1;
        org.apache.lucene.spatial.SpatialStrategy r2;

        r2 := @this: org.apache.lucene.spatial.SpatialStrategy;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        $r1 = interfaceinvoke r0.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.Rectangle getBoundingBox()>();

        $r3 = r2.<org.apache.lucene.spatial.SpatialStrategy: com.spatial4j.core.context.SpatialContext ctx>;

        $r4 = virtualinvoke $r3.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.distance.DistanceCalculator getDistCalc()>();

        $r5 = r2.<org.apache.lucene.spatial.SpatialStrategy: com.spatial4j.core.context.SpatialContext ctx>;

        $d0 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $d1 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $r6 = virtualinvoke $r5.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>($d0, $d1);

        $d2 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $d3 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $d4 = interfaceinvoke $r4.<com.spatial4j.core.distance.DistanceCalculator: double distance(com.spatial4j.core.shape.Point,double,double)>($r6, $d2, $d3);

        d5 = $d4 * 0.5;

        $f0 = (float) d5;

        f1 = $f0 * 0.1F;

        $r7 = new org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction;

        $r8 = interfaceinvoke r0.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.Point getCenter()>();

        $r9 = virtualinvoke r2.<org.apache.lucene.spatial.SpatialStrategy: org.apache.lucene.queries.function.ValueSource makeDistanceValueSource(com.spatial4j.core.shape.Point)>($r8);

        specialinvoke $r7.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction: void <init>(org.apache.lucene.queries.function.ValueSource,float,float,float)>($r9, 1.0F, f1, f1);

        return $r7;
    }

    public java.lang.String toString()
    {
        com.spatial4j.core.context.SpatialContext $r9;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8, $r10;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r11;
        org.apache.lucene.spatial.SpatialStrategy r1;

        r1 := @this: org.apache.lucene.spatial.SpatialStrategy;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field:");

        $r6 = r1.<org.apache.lucene.spatial.SpatialStrategy: java.lang.String fieldName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ctx=");

        $r9 = r1.<org.apache.lucene.spatial.SpatialStrategy: com.spatial4j.core.context.SpatialContext ctx>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
