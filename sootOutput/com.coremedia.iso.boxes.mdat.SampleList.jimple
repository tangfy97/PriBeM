public class com.coremedia.iso.boxes.mdat.SampleList extends java.util.AbstractList
{
    java.util.List samples;

    public transient void <init>(com.coremedia.iso.boxes.TrackBox, com.coremedia.iso.IsoFile[])
    {
        com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList $r10;
        long $l0, $l2;
        com.coremedia.iso.boxes.mdat.SampleList r0;
        int $i1;
        boolean $z0;
        com.coremedia.iso.boxes.TrackBox r1;
        com.coremedia.iso.boxes.Box $r3;
        java.lang.RuntimeException $r12;
        com.coremedia.iso.boxes.Container $r2, $r4, $r5;
        java.util.List $r6;
        com.coremedia.iso.boxes.TrackHeaderBox $r8, $r11;
        com.googlecode.mp4parser.authoring.samples.FragmentedMp4SampleList $r7;
        com.coremedia.iso.IsoFile[] r9;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        r1 := @parameter0: com.coremedia.iso.boxes.TrackBox;

        r9 := @parameter1: com.coremedia.iso.IsoFile[];

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $r2 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.Container getParent()>();

        $r3 = (com.coremedia.iso.boxes.Box) $r2;

        $r4 = interfaceinvoke $r3.<com.coremedia.iso.boxes.Box: com.coremedia.iso.boxes.Container getParent()>();

        $r5 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.Container getParent()>();

        $r6 = interfaceinvoke $r5.<com.coremedia.iso.boxes.Container: java.util.List getBoxes(java.lang.Class)>(class "Lcom/coremedia/iso/boxes/fragment/MovieExtendsBox;");

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $i1 = lengthof r9;

        if $i1 <= 0 goto label1;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("The TrackBox comes from a standard MP4 file. Only use the additionalFragments param if you are dealing with ( fragmented MP4 files AND additional fragments in standalone files )");

        throw $r12;

     label1:
        $r10 = new com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList;

        $r11 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.TrackHeaderBox getTrackHeaderBox()>();

        $l2 = virtualinvoke $r11.<com.coremedia.iso.boxes.TrackHeaderBox: long getTrackId()>();

        specialinvoke $r10.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: void <init>(long,com.coremedia.iso.boxes.Container)>($l2, $r4);

        r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.List samples> = $r10;

        goto label3;

     label2:
        $r7 = new com.googlecode.mp4parser.authoring.samples.FragmentedMp4SampleList;

        $r8 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.TrackHeaderBox getTrackHeaderBox()>();

        $l0 = virtualinvoke $r8.<com.coremedia.iso.boxes.TrackHeaderBox: long getTrackId()>();

        specialinvoke $r7.<com.googlecode.mp4parser.authoring.samples.FragmentedMp4SampleList: void <init>(long,com.coremedia.iso.boxes.Container,com.coremedia.iso.IsoFile[])>($l0, $r4, r9);

        r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.List samples> = $r7;

     label3:
        return;
    }

    public com.googlecode.mp4parser.authoring.Sample get(int)
    {
        java.util.List $r1;
        com.googlecode.mp4parser.authoring.Sample $r3;
        com.coremedia.iso.boxes.mdat.SampleList r0;
        int i0;
        java.lang.Object $r2;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        i0 := @parameter0: int;

        $r1 = r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.List samples>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (com.googlecode.mp4parser.authoring.Sample) $r2;

        return $r3;
    }

    public int size()
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        $r1 = r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.List samples>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public volatile java.lang.Object get(int)
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        int i0;
        com.googlecode.mp4parser.authoring.Sample $r1;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.coremedia.iso.boxes.mdat.SampleList: com.googlecode.mp4parser.authoring.Sample get(int)>(i0);

        return $r1;
    }
}
