public class org.objectweb.asm.tree.analysis.BasicValue extends java.lang.Object implements org.objectweb.asm.tree.analysis.Value
{
    public static final org.objectweb.asm.tree.analysis.BasicValue UNINITIALIZED_VALUE;
    public static final org.objectweb.asm.tree.analysis.BasicValue INT_VALUE;
    public static final org.objectweb.asm.tree.analysis.BasicValue FLOAT_VALUE;
    public static final org.objectweb.asm.tree.analysis.BasicValue LONG_VALUE;
    public static final org.objectweb.asm.tree.analysis.BasicValue DOUBLE_VALUE;
    public static final org.objectweb.asm.tree.analysis.BasicValue REFERENCE_VALUE;
    public static final org.objectweb.asm.tree.analysis.BasicValue RETURNADDRESS_VALUE;
    private final org.objectweb.asm.Type type;

    public void <init>(org.objectweb.asm.Type)
    {
        org.objectweb.asm.Type r1;
        org.objectweb.asm.tree.analysis.BasicValue r0;

        r0 := @this: org.objectweb.asm.tree.analysis.BasicValue;

        r1 := @parameter0: org.objectweb.asm.Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type> = r1;

        return;
    }

    public org.objectweb.asm.Type getType()
    {
        org.objectweb.asm.Type $r1;
        org.objectweb.asm.tree.analysis.BasicValue r0;

        r0 := @this: org.objectweb.asm.tree.analysis.BasicValue;

        $r1 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        return $r1;
    }

    public int getSize()
    {
        byte $b0;
        org.objectweb.asm.tree.analysis.BasicValue r0;
        org.objectweb.asm.Type $r1, $r2, $r3, $r4;

        r0 := @this: org.objectweb.asm.tree.analysis.BasicValue;

        $r2 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        $r1 = <org.objectweb.asm.Type: org.objectweb.asm.Type LONG_TYPE>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        $r3 = <org.objectweb.asm.Type: org.objectweb.asm.Type DOUBLE_TYPE>;

        if $r4 != $r3 goto label2;

     label1:
        $b0 = 2;

        goto label3;

     label2:
        $b0 = 1;

     label3:
        return $b0;
    }

    public boolean isReference()
    {
        org.objectweb.asm.tree.analysis.BasicValue r0;
        int $i0, $i1;
        org.objectweb.asm.Type $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.objectweb.asm.tree.analysis.BasicValue;

        $r1 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        if $r1 == null goto label2;

        $r2 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        $i0 = virtualinvoke $r2.<org.objectweb.asm.Type: int getSort()>();

        if $i0 == 10 goto label1;

        $r3 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        $i1 = virtualinvoke $r3.<org.objectweb.asm.Type: int getSort()>();

        if $i1 != 9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.objectweb.asm.Type $r2, $r4, $r5, $r7;
        org.objectweb.asm.tree.analysis.BasicValue r1, $r3, $r6;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.objectweb.asm.tree.analysis.BasicValue;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.objectweb.asm.tree.analysis.BasicValue;

        if $z0 == 0 goto label5;

        $r2 = r1.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        if $r2 != null goto label4;

        $r6 = (org.objectweb.asm.tree.analysis.BasicValue) r0;

        $r7 = $r6.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        if $r7 != null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        $r5 = r1.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        $r3 = (org.objectweb.asm.tree.analysis.BasicValue) r0;

        $r4 = $r3.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        $z1 = virtualinvoke $r5.<org.objectweb.asm.Type: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        org.objectweb.asm.tree.analysis.BasicValue r0;
        int $i0;
        org.objectweb.asm.Type $r1, $r2;

        r0 := @this: org.objectweb.asm.tree.analysis.BasicValue;

        $r1 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        $i0 = virtualinvoke $r2.<org.objectweb.asm.Type: int hashCode()>();

     label2:
        return $i0;
    }

    public java.lang.String toString()
    {
        org.objectweb.asm.tree.analysis.BasicValue r0, $r1, $r2, $r3;
        java.lang.String $r5;
        org.objectweb.asm.Type $r4;

        r0 := @this: org.objectweb.asm.tree.analysis.BasicValue;

        $r1 = <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue UNINITIALIZED_VALUE>;

        if r0 != $r1 goto label1;

        return ".";

     label1:
        $r2 = <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue RETURNADDRESS_VALUE>;

        if r0 != $r2 goto label2;

        return "A";

     label2:
        $r3 = <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue REFERENCE_VALUE>;

        if r0 != $r3 goto label3;

        return "R";

     label3:
        $r4 = r0.<org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.Type type>;

        $r5 = virtualinvoke $r4.<org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        return $r5;
    }

    static void <clinit>()
    {
        org.objectweb.asm.Type $r2, $r4, $r6, $r8, $r10, $r12;
        org.objectweb.asm.tree.analysis.BasicValue $r0, $r1, $r3, $r5, $r7, $r9, $r11;

        $r0 = new org.objectweb.asm.tree.analysis.BasicValue;

        specialinvoke $r0.<org.objectweb.asm.tree.analysis.BasicValue: void <init>(org.objectweb.asm.Type)>(null);

        <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue UNINITIALIZED_VALUE> = $r0;

        $r1 = new org.objectweb.asm.tree.analysis.BasicValue;

        $r2 = <org.objectweb.asm.Type: org.objectweb.asm.Type INT_TYPE>;

        specialinvoke $r1.<org.objectweb.asm.tree.analysis.BasicValue: void <init>(org.objectweb.asm.Type)>($r2);

        <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue INT_VALUE> = $r1;

        $r3 = new org.objectweb.asm.tree.analysis.BasicValue;

        $r4 = <org.objectweb.asm.Type: org.objectweb.asm.Type FLOAT_TYPE>;

        specialinvoke $r3.<org.objectweb.asm.tree.analysis.BasicValue: void <init>(org.objectweb.asm.Type)>($r4);

        <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue FLOAT_VALUE> = $r3;

        $r5 = new org.objectweb.asm.tree.analysis.BasicValue;

        $r6 = <org.objectweb.asm.Type: org.objectweb.asm.Type LONG_TYPE>;

        specialinvoke $r5.<org.objectweb.asm.tree.analysis.BasicValue: void <init>(org.objectweb.asm.Type)>($r6);

        <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue LONG_VALUE> = $r5;

        $r7 = new org.objectweb.asm.tree.analysis.BasicValue;

        $r8 = <org.objectweb.asm.Type: org.objectweb.asm.Type DOUBLE_TYPE>;

        specialinvoke $r7.<org.objectweb.asm.tree.analysis.BasicValue: void <init>(org.objectweb.asm.Type)>($r8);

        <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue DOUBLE_VALUE> = $r7;

        $r9 = new org.objectweb.asm.tree.analysis.BasicValue;

        $r10 = staticinvoke <org.objectweb.asm.Type: org.objectweb.asm.Type getObjectType(java.lang.String)>("java/lang/Object");

        specialinvoke $r9.<org.objectweb.asm.tree.analysis.BasicValue: void <init>(org.objectweb.asm.Type)>($r10);

        <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue REFERENCE_VALUE> = $r9;

        $r11 = new org.objectweb.asm.tree.analysis.BasicValue;

        $r12 = <org.objectweb.asm.Type: org.objectweb.asm.Type VOID_TYPE>;

        specialinvoke $r11.<org.objectweb.asm.tree.analysis.BasicValue: void <init>(org.objectweb.asm.Type)>($r12);

        <org.objectweb.asm.tree.analysis.BasicValue: org.objectweb.asm.tree.analysis.BasicValue RETURNADDRESS_VALUE> = $r11;

        return;
    }
}
