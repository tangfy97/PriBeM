public class org.apache.lucene.queryparser.surround.parser.QueryParser extends java.lang.Object implements org.apache.lucene.queryparser.surround.parser.QueryParserConstants
{
    final int minimumPrefixLength;
    final int minimumCharsInTrunc;
    final java.lang.String truncationErrorMessage;
    final java.lang.String boostErrorMessage;
    final char truncator;
    final char anyChar;
    final char quote;
    final char fieldOperator;
    final char comma;
    final char carat;
    public org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source;
    public org.apache.lucene.queryparser.surround.parser.Token token;
    public org.apache.lucene.queryparser.surround.parser.Token jj_nt;
    private int jj_ntk;
    private org.apache.lucene.queryparser.surround.parser.Token jj_scanpos;
    private org.apache.lucene.queryparser.surround.parser.Token jj_lastpos;
    private int jj_la;
    private int jj_gen;
    private final int[] jj_la1;
    private static int[] jj_la1_0;
    private final org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns;
    private boolean jj_rescan;
    private int jj_gc;
    private final org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess jj_ls;
    private java.util.List jj_expentries;
    private int[] jj_expentry;
    private int jj_kind;
    private int[] jj_lasttokens;
    private int jj_endpos;

    public static org.apache.lucene.queryparser.surround.query.SrndQuery parse(java.lang.String) throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        java.lang.String r1;
        org.apache.lucene.queryparser.surround.query.SrndQuery $r2;
        org.apache.lucene.queryparser.surround.parser.QueryParser $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.lucene.queryparser.surround.parser.QueryParser;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void <init>()>();

        $r2 = virtualinvoke $r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery parse2(java.lang.String)>(r1);

        return $r2;
    }

    public void <init>()
    {
        org.apache.lucene.queryparser.surround.parser.FastCharStream $r1;
        java.io.StringReader $r2;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $r1 = new org.apache.lucene.queryparser.surround.parser.FastCharStream;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>("");

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char carat> = 94;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char comma> = 44;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char fieldOperator> = 58;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char quote> = 34;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char anyChar> = 63;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char truncator> = 42;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String boostErrorMessage> = "Cannot handle boost value: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String truncationErrorMessage> = "Too unrestrictive truncation: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumCharsInTrunc> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumPrefixLength> = 3;

        specialinvoke $r1.<org.apache.lucene.queryparser.surround.parser.FastCharStream: void <init>(java.io.Reader)>($r2);

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void <init>(org.apache.lucene.queryparser.surround.parser.CharStream)>($r1);

        return;
    }

    public org.apache.lucene.queryparser.surround.query.SrndQuery parse2(java.lang.String) throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r4;
        org.apache.lucene.queryparser.surround.parser.TokenMgrError $r5;
        org.apache.lucene.queryparser.surround.parser.ParseException $r6;
        org.apache.lucene.queryparser.surround.parser.FastCharStream $r1;
        java.io.StringReader $r2;
        java.lang.String r3, $r7;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r3 := @parameter0: java.lang.String;

        $r1 = new org.apache.lucene.queryparser.surround.parser.FastCharStream;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<org.apache.lucene.queryparser.surround.parser.FastCharStream: void <init>(java.io.Reader)>($r2);

        virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void ReInit(org.apache.lucene.queryparser.surround.parser.CharStream)>($r1);

     label1:
        $r4 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery TopSrndQuery()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        $r7 = virtualinvoke $r5.<org.apache.lucene.queryparser.surround.parser.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke $r6.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch org.apache.lucene.queryparser.surround.parser.TokenMgrError from label1 to label2 with label3;
    }

    protected org.apache.lucene.queryparser.surround.query.SrndQuery getFieldsQuery(org.apache.lucene.queryparser.surround.query.SrndQuery, java.util.ArrayList)
    {
        org.apache.lucene.queryparser.surround.query.FieldsQuery $r0;
        org.apache.lucene.queryparser.surround.query.SrndQuery r1;
        org.apache.lucene.queryparser.surround.parser.QueryParser r3;
        java.util.ArrayList r2;

        r3 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: org.apache.lucene.queryparser.surround.query.SrndQuery;

        r2 := @parameter1: java.util.ArrayList;

        $r0 = new org.apache.lucene.queryparser.surround.query.FieldsQuery;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.FieldsQuery: void <init>(org.apache.lucene.queryparser.surround.query.SrndQuery,java.util.List,char)>(r1, r2, 58);

        return $r0;
    }

    protected org.apache.lucene.queryparser.surround.query.SrndQuery getOrQuery(java.util.List, boolean, org.apache.lucene.queryparser.surround.parser.Token)
    {
        org.apache.lucene.queryparser.surround.parser.Token r2;
        java.util.List r1;
        org.apache.lucene.queryparser.surround.query.OrQuery $r0;
        java.lang.String $r3;
        org.apache.lucene.queryparser.surround.parser.QueryParser r4;
        boolean z0;

        r4 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.lucene.queryparser.surround.parser.Token;

        $r0 = new org.apache.lucene.queryparser.surround.query.OrQuery;

        $r3 = r2.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.OrQuery: void <init>(java.util.List,boolean,java.lang.String)>(r1, z0, $r3);

        return $r0;
    }

    protected org.apache.lucene.queryparser.surround.query.SrndQuery getAndQuery(java.util.List, boolean, org.apache.lucene.queryparser.surround.parser.Token)
    {
        org.apache.lucene.queryparser.surround.parser.Token r2;
        java.util.List r1;
        org.apache.lucene.queryparser.surround.query.AndQuery $r0;
        java.lang.String $r3;
        org.apache.lucene.queryparser.surround.parser.QueryParser r4;
        boolean z0;

        r4 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.lucene.queryparser.surround.parser.Token;

        $r0 = new org.apache.lucene.queryparser.surround.query.AndQuery;

        $r3 = r2.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.AndQuery: void <init>(java.util.List,boolean,java.lang.String)>(r1, z0, $r3);

        return $r0;
    }

    protected org.apache.lucene.queryparser.surround.query.SrndQuery getNotQuery(java.util.List, org.apache.lucene.queryparser.surround.parser.Token)
    {
        org.apache.lucene.queryparser.surround.parser.Token r2;
        java.util.List r1;
        org.apache.lucene.queryparser.surround.query.NotQuery $r0;
        java.lang.String $r3;
        org.apache.lucene.queryparser.surround.parser.QueryParser r4;

        r4 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.apache.lucene.queryparser.surround.parser.Token;

        $r0 = new org.apache.lucene.queryparser.surround.query.NotQuery;

        $r3 = r2.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.NotQuery: void <init>(java.util.List,java.lang.String)>(r1, $r3);

        return $r0;
    }

    protected static int getOpDistance(java.lang.String)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $i3 = 1;

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i3;
    }

    protected static void checkDistanceSubQueries(org.apache.lucene.queryparser.surround.query.DistanceQuery, java.lang.String) throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.parser.ParseException $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        java.lang.String $r1, r5, $r9;
        org.apache.lucene.queryparser.surround.query.DistanceQuery r0;

        r0 := @parameter0: org.apache.lucene.queryparser.surround.query.DistanceQuery;

        r5 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.DistanceQuery: java.lang.String distanceSubQueryNotAllowed()>();

        if $r1 == null goto label1;

        $r2 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operator ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label1:
        return;
    }

    protected org.apache.lucene.queryparser.surround.query.SrndQuery getDistanceQuery(java.util.List, boolean, org.apache.lucene.queryparser.surround.parser.Token, boolean) throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.parser.Token r2;
        java.util.List r1;
        int $i0;
        java.lang.String $r3, $r4, $r5;
        org.apache.lucene.queryparser.surround.query.DistanceQuery $r0;
        org.apache.lucene.queryparser.surround.parser.QueryParser r6;
        boolean z0, z1;

        r6 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.lucene.queryparser.surround.parser.Token;

        z1 := @parameter3: boolean;

        $r0 = new org.apache.lucene.queryparser.surround.query.DistanceQuery;

        $r3 = r2.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $i0 = staticinvoke <org.apache.lucene.queryparser.surround.parser.QueryParser: int getOpDistance(java.lang.String)>($r3);

        $r4 = r2.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.DistanceQuery: void <init>(java.util.List,boolean,int,java.lang.String,boolean)>(r1, z0, $i0, $r4, z1);

        $r5 = r2.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        staticinvoke <org.apache.lucene.queryparser.surround.parser.QueryParser: void checkDistanceSubQueries(org.apache.lucene.queryparser.surround.query.DistanceQuery,java.lang.String)>($r0, $r5);

        return $r0;
    }

    protected org.apache.lucene.queryparser.surround.query.SrndQuery getTermQuery(java.lang.String, boolean)
    {
        org.apache.lucene.queryparser.surround.query.SrndTermQuery $r0;
        java.lang.String r1;
        org.apache.lucene.queryparser.surround.parser.QueryParser r2;
        boolean z0;

        r2 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.lucene.queryparser.surround.query.SrndTermQuery;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.SrndTermQuery: void <init>(java.lang.String,boolean)>(r1, z0);

        return $r0;
    }

    protected boolean allowedSuffix(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0;
        org.apache.lucene.queryparser.surround.parser.QueryParser r1;
        boolean $z0;

        r1 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        if $i1 < 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected org.apache.lucene.queryparser.surround.query.SrndQuery getPrefixQuery(java.lang.String, boolean)
    {
        org.apache.lucene.queryparser.surround.query.SrndPrefixQuery $r0;
        java.lang.String r1;
        org.apache.lucene.queryparser.surround.parser.QueryParser r2;
        boolean z0;

        r2 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.lucene.queryparser.surround.query.SrndPrefixQuery;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: void <init>(java.lang.String,boolean,char)>(r1, z0, 42);

        return $r0;
    }

    protected boolean allowedTruncation(java.lang.String)
    {
        char $c1;
        int $i0, i2, i3, $i4, $i5;
        java.lang.String r0;
        org.apache.lucene.queryparser.surround.parser.QueryParser r1;
        boolean $z0;

        r1 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        if $i4 == 42 goto label2;

        $i5 = (int) $c1;

        if $i5 == 63 goto label2;

        i2 = i2 + 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if i2 < 3 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    protected org.apache.lucene.queryparser.surround.query.SrndQuery getTruncQuery(java.lang.String)
    {
        org.apache.lucene.queryparser.surround.query.SrndTruncQuery $r0;
        java.lang.String r1;
        org.apache.lucene.queryparser.surround.parser.QueryParser r2;

        r2 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.lucene.queryparser.surround.query.SrndTruncQuery;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.SrndTruncQuery: void <init>(java.lang.String,char,char)>(r1, 42, 63);

        return $r0;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery TopSrndQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r1;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery FieldsQuery()>();

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(0);

        return $r1;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery FieldsQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r2, $r3;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.ArrayList OptionalFields()>();

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery OrQuery()>();

        if $r1 != null goto label1;

        $r3 = $r2;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getFieldsQuery(org.apache.lucene.queryparser.surround.query.SrndQuery,java.util.ArrayList)>($r2, $r1);

     label2:
        return $r3;
    }

    public final java.util.ArrayList OptionalFields() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.parser.Token $r1;
        java.lang.String $r2;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        boolean $z0;
        java.util.ArrayList $r3, r4;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r4 = null;

     label1:
        $z0 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_2_1(int)>(2);

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(22);

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(16);

        if r4 != null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r4 = $r3;

     label2:
        $r2 = $r1.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label1;

     label3:
        return r4;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery OrQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r1, r6, $r7;
        java.util.ArrayList r4, $r8;
        org.apache.lucene.queryparser.surround.parser.Token r5;
        int[] $r3;
        int $i0, $i1, $i2, $i4;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r4 = null;

        r5 = null;

        r6 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery AndQuery()>();

     label01:
        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label02;

        $i2 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label03;

     label02:
        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label03:
        lookupswitch($i2)
        {
            case 8: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r3[0] = $i1;

        goto label08;

     label06:
        r5 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(8);

        if r4 != null goto label07;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label07:
        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery AndQuery()>();

        r6 = $r1;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label01;

     label08:
        if r4 != null goto label09;

        $r7 = r6;

        goto label10;

     label09:
        $r7 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getOrQuery(java.util.List,boolean,org.apache.lucene.queryparser.surround.parser.Token)>(r4, 1, r5);

     label10:
        return $r7;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery AndQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r1, r6, $r7;
        java.util.ArrayList r4, $r8;
        org.apache.lucene.queryparser.surround.parser.Token r5;
        int[] $r3;
        int $i0, $i1, $i2, $i4;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r4 = null;

        r5 = null;

        r6 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery NotQuery()>();

     label01:
        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label02;

        $i2 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label03;

     label02:
        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label03:
        lookupswitch($i2)
        {
            case 9: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r3[1] = $i1;

        goto label08;

     label06:
        r5 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(9);

        if r4 != null goto label07;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label07:
        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery NotQuery()>();

        r6 = $r1;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label01;

     label08:
        if r4 != null goto label09;

        $r7 = r6;

        goto label10;

     label09:
        $r7 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getAndQuery(java.util.List,boolean,org.apache.lucene.queryparser.surround.parser.Token)>(r4, 1, r5);

     label10:
        return $r7;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery NotQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r1, r6, $r7;
        java.util.ArrayList r4, $r8;
        org.apache.lucene.queryparser.surround.parser.Token r5;
        int[] $r3;
        int $i0, $i1, $i2, $i4;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r4 = null;

        r5 = null;

        r6 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery NQuery()>();

     label01:
        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label02;

        $i2 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label03;

     label02:
        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label03:
        lookupswitch($i2)
        {
            case 10: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r3[2] = $i1;

        goto label08;

     label06:
        r5 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(10);

        if r4 != null goto label07;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label07:
        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery NQuery()>();

        r6 = $r1;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label01;

     label08:
        if r4 != null goto label09;

        $r7 = r6;

        goto label10;

     label09:
        $r7 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getNotQuery(java.util.List,org.apache.lucene.queryparser.surround.parser.Token)>(r4, r5);

     label10:
        return $r7;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery NQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r3, r5;
        java.util.ArrayList $r6;
        org.apache.lucene.queryparser.surround.parser.Token $r1;
        int[] $r4;
        int $i0, $i1, $i2, $i4;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r5 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery WQuery()>();

     label1:
        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 12: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r4[3] = $i1;

        goto label7;

     label6:
        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(12);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery WQuery()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        r5 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getDistanceQuery(java.util.List,boolean,org.apache.lucene.queryparser.surround.parser.Token,boolean)>($r6, 1, $r1, 0);

        goto label1;

     label7:
        return r5;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery WQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r3, r5;
        java.util.ArrayList $r6;
        org.apache.lucene.queryparser.surround.parser.Token $r1;
        int[] $r4;
        int $i0, $i1, $i2, $i4;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r5 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery PrimaryQuery()>();

     label1:
        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 11: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r4[4] = $i1;

        goto label7;

     label6:
        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(11);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery PrimaryQuery()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        r5 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getDistanceQuery(java.util.List,boolean,org.apache.lucene.queryparser.surround.parser.Token,boolean)>($r6, 1, $r1, 1);

        goto label1;

     label7:
        return r5;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery PrimaryQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r3;
        org.apache.lucene.queryparser.surround.parser.ParseException $r4;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 8: goto label4;
            case 9: goto label4;
            case 10: goto label6;
            case 11: goto label4;
            case 12: goto label4;
            case 13: goto label3;
            case 14: goto label6;
            case 15: goto label6;
            case 16: goto label6;
            case 17: goto label6;
            case 18: goto label5;
            case 19: goto label5;
            case 20: goto label5;
            case 21: goto label5;
            case 22: goto label5;
            default: goto label6;
        };

     label3:
        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(13);

        r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery FieldsQuery()>();

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(14);

        goto label7;

     label4:
        r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery PrefixOperatorQuery()>();

        goto label7;

     label5:
        r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery SimpleTerm()>();

        goto label7;

     label6:
        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r1[5] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>($i6);

        $r4 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        specialinvoke $r4.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>()>();

        throw $r4;

     label7:
        virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void OptionalWeights(org.apache.lucene.queryparser.surround.query.SrndQuery)>(r3);

        return r3;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery PrefixOperatorQuery() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r3, $r6, $r9, $r12;
        org.apache.lucene.queryparser.surround.parser.Token $r1, $r4, $r7, $r10;
        int[] $r13;
        int $i0, $i1, $i2, $i4, $i6;
        org.apache.lucene.queryparser.surround.parser.ParseException $r15;
        java.util.List $r2, $r5, $r8, $r11;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 8: goto label3;
            case 9: goto label4;
            case 10: goto label7;
            case 11: goto label6;
            case 12: goto label5;
            default: goto label7;
        };

     label3:
        $r10 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(8);

        $r11 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List FieldsQueryList()>();

        $r12 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getOrQuery(java.util.List,boolean,org.apache.lucene.queryparser.surround.parser.Token)>($r11, 0, $r10);

        return $r12;

     label4:
        $r7 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(9);

        $r8 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List FieldsQueryList()>();

        $r9 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getAndQuery(java.util.List,boolean,org.apache.lucene.queryparser.surround.parser.Token)>($r8, 0, $r7);

        return $r9;

     label5:
        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(12);

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List FieldsQueryList()>();

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getDistanceQuery(java.util.List,boolean,org.apache.lucene.queryparser.surround.parser.Token,boolean)>($r2, 0, $r1, 0);

        return $r3;

     label6:
        $r4 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(11);

        $r5 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List FieldsQueryList()>();

        $r6 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getDistanceQuery(java.util.List,boolean,org.apache.lucene.queryparser.surround.parser.Token,boolean)>($r5, 0, $r4, 1);

        return $r6;

     label7:
        $r13 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r13[6] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>($i6);

        $r15 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        specialinvoke $r15.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>()>();

        throw $r15;
    }

    public final java.util.List FieldsQueryList() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r2, $r3;
        java.util.ArrayList $r5;
        int[] $r4;
        int $i0, $i1, $i2, $i4;
        org.apache.lucene.queryparser.surround.parser.QueryParser r1;

        r1 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        specialinvoke r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(13);

        $r2 = virtualinvoke r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery FieldsQuery()>();

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label1:
        specialinvoke r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(15);

        $r3 = virtualinvoke r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery FieldsQuery()>();

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i0 = r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 15: goto label4;
            default: goto label5;
        };

     label4:
        goto label1;

     label5:
        $r4 = r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i1 = r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r4[7] = $i1;

        goto label6;

     label6:
        specialinvoke r1.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(14);

        return $r5;
    }

    public final org.apache.lucene.queryparser.surround.query.SrndQuery SimpleTerm() throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.parser.Token $r1, $r4, $r14, $r26, $r31;
        int[] $r43;
        boolean $z0, $z1;
        java.lang.StringBuilder $r10, $r12, $r22, $r24, $r39, $r41, $r45, $r47, $r49;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        org.apache.lucene.queryparser.surround.query.SrndQuery $r3, $r7, $r19, $r30, $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14;
        java.lang.String $r2, $r5, $r6, $r11, $r13, $r15, $r16, $r17, $r18, $r23, $r25, $r27, $r28, $r29, $r32, $r33, $r34, $r35, $r40, $r42;
        org.apache.lucene.queryparser.surround.parser.ParseException $r46, $r48, $r50, $r51;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i12 = (int) -1;

        if $i0 != $i12 goto label01;

        $i10 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label02;

     label01:
        $i10 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label02:
        tableswitch($i10)
        {
            case 18: goto label09;
            case 19: goto label04;
            case 20: goto label05;
            case 21: goto label07;
            case 22: goto label03;
            default: goto label11;
        };

     label03:
        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(22);

        $r2 = $r1.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getTermQuery(java.lang.String,boolean)>($r2, 0);

        return $r3;

     label04:
        $r26 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(19);

        $r28 = $r26.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r27 = $r26.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $i3 = virtualinvoke $r27.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

        $r30 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getTermQuery(java.lang.String,boolean)>($r29, 1);

        return $r30;

     label05:
        $r14 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(20);

        $r15 = $r14.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $z1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean allowedSuffix(java.lang.String)>($r15);

        if $z1 != 0 goto label06;

        $r46 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too unrestrictive truncation: ");

        $r23 = $r14.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>(java.lang.String)>($r25);

        throw $r46;

     label06:
        $r17 = $r14.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r16 = $r14.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $i1 = virtualinvoke $r16.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r19 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getPrefixQuery(java.lang.String,boolean)>($r18, 0);

        return $r19;

     label07:
        $r4 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(21);

        $r5 = $r4.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $z0 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean allowedTruncation(java.lang.String)>($r5);

        if $z0 != 0 goto label08;

        $r48 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too unrestrictive truncation: ");

        $r11 = $r4.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>(java.lang.String)>($r13);

        throw $r48;

     label08:
        $r6 = $r4.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r7 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getTruncQuery(java.lang.String)>($r6);

        return $r7;

     label09:
        $r31 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(18);

        $r32 = $r31.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $i5 = virtualinvoke $r32.<java.lang.String: int length()>();

        $i6 = $i5 - 3;

        if $i6 >= 3 goto label10;

        $r50 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too unrestrictive truncation: ");

        $r40 = $r31.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>(java.lang.String)>($r42);

        throw $r50;

     label10:
        $r34 = $r31.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r33 = $r31.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $i7 = virtualinvoke $r33.<java.lang.String: int length()>();

        $i8 = $i7 - 2;

        $r35 = virtualinvoke $r34.<java.lang.String: java.lang.String substring(int,int)>(1, $i8);

        $r36 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.query.SrndQuery getPrefixQuery(java.lang.String,boolean)>($r35, 1);

        return $r36;

     label11:
        $r43 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i9 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r43[8] = $i9;

        $i14 = (int) -1;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>($i14);

        $r51 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        specialinvoke $r51.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>()>();

        throw $r51;
    }

    public final void OptionalWeights(org.apache.lucene.queryparser.surround.query.SrndQuery) throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        java.lang.Float $r3;
        org.apache.lucene.queryparser.surround.parser.Token $r1;
        byte $b1;
        int[] $r11;
        java.lang.Exception $r12;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r7, $r9, $r15, $r17, $r18, $r19, $r20, $r22, $r24;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        org.apache.lucene.queryparser.surround.query.SrndQuery r4;
        int $i0, $i2, $i3, $i5, $i6;
        java.lang.String $r2, $r8, $r10, $r16, $r21;
        double $d0;
        org.apache.lucene.queryparser.surround.parser.ParseException $r23, $r25;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r4 := @parameter0: org.apache.lucene.queryparser.surround.query.SrndQuery;

     label01:
        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

        $i5 = (int) -1;

        if $i0 != $i5 goto label02;

        $i3 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk()>();

        goto label03;

     label02:
        $i3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk>;

     label03:
        lookupswitch($i3)
        {
            case 17: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r11 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $r11[9] = $i2;

        goto label12;

     label06:
        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(17);

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int)>(23);

     label07:
        $r2 = $r1.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

        $f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

        $r23 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot handle boost value: ");

        $r16 = $r1.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>(java.lang.String)>($r21);

        throw $r23;

     label10:
        $d0 = (double) $f0;

        $b1 = $d0 cmpg 0.0;

        $i6 = (int) $b1;

        if $i6 > 0 goto label11;

        $r25 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot handle boost value: ");

        $r8 = $r1.<org.apache.lucene.queryparser.surround.parser.Token: java.lang.String image>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>(java.lang.String)>($r10);

        throw $r25;

     label11:
        $f1 = virtualinvoke r4.<org.apache.lucene.queryparser.surround.query.SrndQuery: float getWeight()>();

        $f2 = $f0 * $f1;

        virtualinvoke r4.<org.apache.lucene.queryparser.surround.query.SrndQuery: void setWeight(float)>($f2);

        goto label01;

     label12:
        return;

        catch java.lang.Exception from label07 to label08 with label09;
    }

    private boolean jj_2_1(int)
    {
        java.lang.Throwable $r2;
        org.apache.lucene.queryparser.surround.parser.Token $r1;
        org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess $r3;
        int i0;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_la> = i0;

        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos> = $r1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_lastpos> = $r1;

     label1:
        $z0 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_3_1()>();

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void jj_save(int,int)>(0, i0);

        return $z1;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void jj_save(int,int)>(0, i0);

        return 1;

     label6:
        $r2 := @caughtexception;

     label7:
        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void jj_save(int,int)>(0, i0);

        throw $r2;

        catch org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private boolean jj_3_1()
    {
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $z0 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_scan_token(int)>(22);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_scan_token(int)>(16);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static void jj_la1_init_0()
    {
        int $i1;
        int[] $r0;

        $r0 = newarray (int)[10];

        $r0[0] = 256;

        $r0[1] = 512;

        $r0[2] = 1024;

        $r0[3] = 4096;

        $r0[4] = 2048;

        $r0[5] = 8141568;

        $r0[6] = 6912;

        $i1 = (int) 32768;

        $r0[7] = $i1;

        $r0[8] = 8126464;

        $r0[9] = 131072;

        <org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1_0> = $r0;

        return;
    }

    public void <init>(org.apache.lucene.queryparser.surround.parser.CharStream)
    {
        java.util.ArrayList $r14;
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager $r15;
        org.apache.lucene.queryparser.surround.parser.Token $r16;
        int[] $r1, $r5, $r12;
        int $i0, i1, i2, $i4, $i6, $i8;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls $r17;
        org.apache.lucene.queryparser.surround.parser.CharStream r7;
        org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess $r13;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] $r2, $r9, $r11;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r7 := @parameter0: org.apache.lucene.queryparser.surround.parser.CharStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char carat> = 94;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char comma> = 44;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char fieldOperator> = 58;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char quote> = 34;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char anyChar> = 63;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char truncator> = 42;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String boostErrorMessage> = "Cannot handle boost value: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String truncationErrorMessage> = "Too unrestrictive truncation: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumCharsInTrunc> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumPrefixLength> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumPrefixLength> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumCharsInTrunc> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String truncationErrorMessage> = "Too unrestrictive truncation: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String boostErrorMessage> = "Cannot handle boost value: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char truncator> = 42;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char anyChar> = 63;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char quote> = 34;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char fieldOperator> = 58;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char comma> = 44;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char carat> = 94;

        $r1 = newarray (int)[10];

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1> = $r1;

        $r2 = newarray (org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls)[1];

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns> = $r2;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_rescan> = 0;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gc> = 0;

        $r13 = new org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess;

        specialinvoke $r13.<org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess: void <init>(org.apache.lucene.queryparser.surround.parser.QueryParser$1)>(null);

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess jj_ls> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries> = $r14;

        $i4 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_kind> = $i4;

        $r5 = newarray (int)[100];

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_lasttokens> = $r5;

        $r15 = new org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager;

        specialinvoke $r15.<org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager: void <init>(org.apache.lucene.queryparser.surround.parser.CharStream)>(r7);

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source> = $r15;

        $r16 = new org.apache.lucene.queryparser.surround.parser.Token;

        specialinvoke $r16.<org.apache.lucene.queryparser.surround.parser.Token: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r16;

        $i6 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk> = $i6;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 10 goto label2;

        $r12 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i8 = (int) -1;

        $r12[i1] = $i8;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r9 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r9;

        if i2 >= $i0 goto label4;

        $r11 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $r17 = new org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls;

        specialinvoke $r17.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: void <init>()>();

        $r11[i2] = $r17;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void ReInit(org.apache.lucene.queryparser.surround.parser.CharStream)
    {
        org.apache.lucene.queryparser.surround.parser.CharStream r1;
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager $r2;
        org.apache.lucene.queryparser.surround.parser.Token $r8;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] $r4, $r6;
        int[] $r7;
        int $i0, i1, i2, $i4, $i6;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls $r9;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: org.apache.lucene.queryparser.surround.parser.CharStream;

        $r2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source>;

        virtualinvoke $r2.<org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager: void ReInit(org.apache.lucene.queryparser.surround.parser.CharStream)>(r1);

        $r8 = new org.apache.lucene.queryparser.surround.parser.Token;

        specialinvoke $r8.<org.apache.lucene.queryparser.surround.parser.Token: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r8;

        $i4 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk> = $i4;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 10 goto label2;

        $r7 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i6 = (int) -1;

        $r7[i1] = $i6;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r4;

        if i2 >= $i0 goto label4;

        $r6 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $r9 = new org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls;

        specialinvoke $r9.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: void <init>()>();

        $r6[i2] = $r9;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager)
    {
        java.util.ArrayList $r13;
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager r6;
        org.apache.lucene.queryparser.surround.parser.Token $r14;
        int[] $r1, $r5, $r11;
        int $i0, i1, i2, $i4, $i6, $i8;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls $r15;
        org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess $r12;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] $r2, $r8, $r10;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r6 := @parameter0: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char carat> = 94;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char comma> = 44;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char fieldOperator> = 58;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char quote> = 34;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char anyChar> = 63;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char truncator> = 42;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String boostErrorMessage> = "Cannot handle boost value: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String truncationErrorMessage> = "Too unrestrictive truncation: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumCharsInTrunc> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumPrefixLength> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumPrefixLength> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int minimumCharsInTrunc> = 3;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String truncationErrorMessage> = "Too unrestrictive truncation: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String boostErrorMessage> = "Cannot handle boost value: ";

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char truncator> = 42;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char anyChar> = 63;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char quote> = 34;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char fieldOperator> = 58;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char comma> = 44;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: char carat> = 94;

        $r1 = newarray (int)[10];

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1> = $r1;

        $r2 = newarray (org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls)[1];

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns> = $r2;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_rescan> = 0;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gc> = 0;

        $r12 = new org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess;

        specialinvoke $r12.<org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess: void <init>(org.apache.lucene.queryparser.surround.parser.QueryParser$1)>(null);

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess jj_ls> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries> = $r13;

        $i4 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_kind> = $i4;

        $r5 = newarray (int)[100];

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_lasttokens> = $r5;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source> = r6;

        $r14 = new org.apache.lucene.queryparser.surround.parser.Token;

        specialinvoke $r14.<org.apache.lucene.queryparser.surround.parser.Token: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r14;

        $i6 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk> = $i6;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 10 goto label2;

        $r11 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i8 = (int) -1;

        $r11[i1] = $i8;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r8 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r8;

        if i2 >= $i0 goto label4;

        $r10 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $r15 = new org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls;

        specialinvoke $r15.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: void <init>()>();

        $r10[i2] = $r15;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void ReInit(org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager)
    {
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager r1;
        org.apache.lucene.queryparser.surround.parser.Token $r7;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] $r3, $r5;
        int[] $r6;
        int $i0, i1, i2, $i4, $i6;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls $r8;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r1 := @parameter0: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source> = r1;

        $r7 = new org.apache.lucene.queryparser.surround.parser.Token;

        specialinvoke $r7.<org.apache.lucene.queryparser.surround.parser.Token: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r7;

        $i4 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk> = $i4;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 10 goto label2;

        $r6 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i6 = (int) -1;

        $r6[i1] = $i6;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r3;

        if i2 >= $i0 goto label4;

        $r5 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $r8 = new org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls;

        specialinvoke $r8.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: void <init>()>();

        $r5[i2] = $r8;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    private org.apache.lucene.queryparser.surround.parser.Token jj_consume_token(int) throws org.apache.lucene.queryparser.surround.parser.ParseException
    {
        org.apache.lucene.queryparser.surround.parser.Token $r1, $r2, $r4, $r5, $r6, $r8, $r11, $r12;
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i11;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls r13;
        org.apache.lucene.queryparser.surround.parser.ParseException $r7;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] $r9, $r10;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r2 = $r1.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        if $r2 == null goto label1;

        $r11 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r12 = $r11.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r12;

        goto label2;

     label1:
        $r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source>;

        $r5 = virtualinvoke $r3.<org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager: org.apache.lucene.queryparser.surround.parser.Token getNextToken()>();

        $r4.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next> = $r5;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r5;

     label2:
        $i11 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk> = $i11;

        $r6 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $i1 = $r6.<org.apache.lucene.queryparser.surround.parser.Token: int kind>;

        if $i1 != i0 goto label8;

        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen> = $i3;

        $i4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gc>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gc> = $i5;

        if $i5 <= 100 goto label7;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gc> = 0;

        i9 = 0;

     label3:
        $r9 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        $i6 = lengthof $r9;

        if i9 >= $i6 goto label7;

        $r10 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        r13 = $r10[i9];

     label4:
        if r13 == null goto label6;

        $i8 = r13.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: int gen>;

        $i7 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        if $i8 >= $i7 goto label5;

        r13.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: org.apache.lucene.queryparser.surround.parser.Token first> = null;

     label5:
        r13 = r13.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls next>;

        goto label4;

     label6:
        i9 = i9 + 1;

        goto label3;

     label7:
        $r8 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        return $r8;

     label8:
        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_kind> = i0;

        $r7 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.ParseException generateParseException()>();

        throw $r7;
    }

    private boolean jj_scan_token(int)
    {
        org.apache.lucene.queryparser.surround.parser.Token $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r14, $r15, r16, $r17;
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager $r13;
        int i0, $i1, $i2, $i3, i4, $i5;
        boolean $z0;
        org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess $r7;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos>;

        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_lastpos>;

        if $r2 != $r1 goto label2;

        $i2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_la>;

        $i3 = $i2 - 1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_la> = $i3;

        $r9 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos>;

        $r10 = $r9.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        if $r10 != null goto label1;

        $r14 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos>;

        $r13 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source>;

        $r15 = virtualinvoke $r13.<org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager: org.apache.lucene.queryparser.surround.parser.Token getNextToken()>();

        $r14.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next> = $r15;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos> = $r15;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_lastpos> = $r15;

        goto label3;

     label1:
        $r11 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos>;

        $r12 = $r11.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos> = $r12;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_lastpos> = $r12;

        goto label3;

     label2:
        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos>;

        $r4 = $r3.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos> = $r4;

     label3:
        $z0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_rescan>;

        if $z0 == 0 goto label6;

        i4 = 0;

        r16 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

     label4:
        if r16 == null goto label5;

        $r8 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos>;

        if r16 == $r8 goto label5;

        i4 = i4 + 1;

        r16 = r16.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        goto label4;

     label5:
        if r16 == null goto label6;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void jj_add_error_token(int,int)>(i0, i4);

     label6:
        $r17 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos>;

        $i5 = $r17.<org.apache.lucene.queryparser.surround.parser.Token: int kind>;

        if $i5 == i0 goto label7;

        return 1;

     label7:
        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_la>;

        if $i1 != 0 goto label8;

        $r6 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos>;

        $r5 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_lastpos>;

        if $r6 != $r5 goto label8;

        $r7 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess jj_ls>;

        throw $r7;

     label8:
        return 0;
    }

    public final org.apache.lucene.queryparser.surround.parser.Token getNextToken()
    {
        org.apache.lucene.queryparser.surround.parser.Token $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager $r3;
        int $i0, $i1, $i3;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r2 = $r1.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        if $r2 == null goto label1;

        $r7 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r8 = $r7.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r8;

        goto label2;

     label1:
        $r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source>;

        $r5 = virtualinvoke $r3.<org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager: org.apache.lucene.queryparser.surround.parser.Token getNextToken()>();

        $r4.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next> = $r5;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token> = $r5;

     label2:
        $i3 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk> = $i3;

        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen> = $i1;

        $r6 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        return $r6;
    }

    public final org.apache.lucene.queryparser.surround.parser.Token getToken(int)
    {
        org.apache.lucene.queryparser.surround.parser.Token $r1, $r3, r4;
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager $r2;
        int i0, i1;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        i0 := @parameter0: int;

        r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r1 = r4.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        if $r1 == null goto label2;

        r4 = r4.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        goto label3;

     label2:
        $r2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager: org.apache.lucene.queryparser.surround.parser.Token getNextToken()>();

        r4.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next> = $r3;

        r4 = $r3;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r4;
    }

    private int jj_ntk()
    {
        org.apache.lucene.queryparser.surround.parser.Token $r1, $r2, $r3, $r5, $r6;
        org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager $r4;
        int $i0, $i1;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r2 = $r1.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_nt> = $r2;

        if $r2 != null goto label1;

        $r5 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager token_source>;

        $r6 = virtualinvoke $r4.<org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager: org.apache.lucene.queryparser.surround.parser.Token getNextToken()>();

        $r5.<org.apache.lucene.queryparser.surround.parser.Token: org.apache.lucene.queryparser.surround.parser.Token next> = $r6;

        $i1 = $r6.<org.apache.lucene.queryparser.surround.parser.Token: int kind>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk> = $i1;

        return $i1;

     label1:
        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_nt>;

        $i0 = $r3.<org.apache.lucene.queryparser.surround.parser.Token: int kind>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_ntk> = $i0;

        return $i0;
    }

    private void jj_add_error_token(int, int)
    {
        int[] $r1, $r4, $r6, r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15;
        boolean $z0;
        java.util.List $r2, $r11;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        java.util.Iterator $r3;
        java.lang.Object $r5;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 < 100 goto label01;

        return;

     label01:
        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_endpos>;

        $i2 = $i1 + 1;

        if i0 != $i2 goto label02;

        $r15 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_lasttokens>;

        $i14 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_endpos>;

        $i15 = $i14 + 1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_endpos> = $i15;

        $r15[$i14] = i6;

        goto label11;

     label02:
        $i3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_endpos>;

        if $i3 == 0 goto label11;

        $i4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_endpos>;

        $r1 = newarray (int)[$i4];

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry> = $r1;

        i16 = 0;

     label03:
        $i5 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_endpos>;

        if i16 >= $i5 goto label04;

        $r14 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry>;

        $r13 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_lasttokens>;

        $i13 = $r13[i16];

        $r14[i16] = $i13;

        i16 = i16 + 1;

        goto label03;

     label04:
        $r2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (int[]) $r5;

        r7 = (int[]) $r6;

        $i9 = lengthof r7;

        $r8 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry>;

        $i8 = lengthof $r8;

        if $i9 != $i8 goto label09;

        i17 = 0;

     label06:
        $r9 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry>;

        $i10 = lengthof $r9;

        if i17 >= $i10 goto label08;

        $i12 = r7[i17];

        $r12 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry>;

        $i11 = $r12[i17];

        if $i12 == $i11 goto label07;

        goto label05;

     label07:
        i17 = i17 + 1;

        goto label06;

     label08:
        $r11 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries>;

        $r10 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label10;

     label09:
        goto label05;

     label10:
        if i0 == 0 goto label11;

        $r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_lasttokens>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_endpos> = i0;

        $i7 = i0 - 1;

        $r4[$i7] = i6;

     label11:
        return;
    }

    public org.apache.lucene.queryparser.surround.parser.ParseException generateParseException()
    {
        int[][] r17;
        org.apache.lucene.queryparser.surround.parser.Token $r7;
        int[] $r10, $r11, $r12, $r13, $r15, $r16;
        boolean $z0;
        java.util.List $r1, $r3, $r4, $r8, $r14;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        java.lang.String[] $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, $i14;
        boolean[] r2;
        org.apache.lucene.queryparser.surround.parser.ParseException $r18;
        java.lang.Object $r9;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        r2 = newarray (boolean)[24];

        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_kind>;

        if $i0 < 0 goto label01;

        $i8 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_kind>;

        r2[$i8] = 1;

        $i14 = (int) -1;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_kind> = $i14;

     label01:
        i9 = 0;

     label02:
        if i9 >= 10 goto label06;

        $r15 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1>;

        $i4 = $r15[i9];

        $i3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        if $i4 != $i3 goto label05;

        i10 = 0;

     label03:
        if i10 >= 32 goto label05;

        $r16 = <org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_la1_0>;

        $i6 = $r16[i9];

        $i5 = 1 << i10;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label04;

        r2[i10] = 1;

     label04:
        i10 = i10 + 1;

        goto label03;

     label05:
        i9 = i9 + 1;

        goto label02;

     label06:
        i11 = 0;

     label07:
        if i11 >= 24 goto label09;

        $z0 = r2[i11];

        if $z0 == 0 goto label08;

        $r11 = newarray (int)[1];

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry> = $r11;

        $r12 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry>;

        $r12[0] = i11;

        $r14 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries>;

        $r13 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int[] jj_expentry>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

     label08:
        i11 = i11 + 1;

        goto label07;

     label09:
        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_endpos> = 0;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void jj_rescan_token()>();

        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: void jj_add_error_token(int,int)>(0, 0);

        $r3 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        r17 = newarray (int[])[$i1];

        i12 = 0;

     label10:
        $r4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i12 >= $i2 goto label11;

        $r8 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: java.util.List jj_expentries>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i12);

        $r10 = (int[]) $r9;

        r17[i12] = $r10;

        i12 = i12 + 1;

        goto label10;

     label11:
        $r18 = new org.apache.lucene.queryparser.surround.parser.ParseException;

        $r7 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        $r6 = <org.apache.lucene.queryparser.surround.parser.QueryParser: java.lang.String[] tokenImage>;

        specialinvoke $r18.<org.apache.lucene.queryparser.surround.parser.ParseException: void <init>(org.apache.lucene.queryparser.surround.parser.Token,int[][],java.lang.String[])>($r7, r17, $r6);

        return $r18;
    }

    public final void enable_tracing()
    {
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        return;
    }

    public final void disable_tracing()
    {
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        return;
    }

    private void jj_rescan_token()
    {
        org.apache.lucene.queryparser.surround.parser.Token $r2;
        org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess $r3;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] $r1;
        int $i0, $i1, $i2, i3;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls r4, $r5;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_rescan> = 1;

        i3 = 0;

     label1:
        if i3 >= 1 goto label9;

     label2:
        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        r4 = $r1[i3];

     label3:
        $i1 = r4.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: int gen>;

        $i0 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        if $i1 <= $i0 goto label5;

        $i2 = r4.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: int arg>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_la> = $i2;

        $r2 = r4.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: org.apache.lucene.queryparser.surround.parser.Token first>;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_scanpos> = $r2;

        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token jj_lastpos> = $r2;

        lookupswitch(i3)
        {
            case 0: goto label4;
            default: goto label5;
        };

     label4:
        specialinvoke r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_3_1()>();

     label5:
        $r5 = r4.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls next>;

        r4 = $r5;

        if $r5 != null goto label3;

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

     label8:
        i3 = i3 + 1;

        goto label1;

     label9:
        r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: boolean jj_rescan> = 0;

        return;

        catch org.apache.lucene.queryparser.surround.parser.QueryParser$LookaheadSuccess from label2 to label6 with label7;
    }

    private void jj_save(int, int)
    {
        org.apache.lucene.queryparser.surround.parser.Token $r2;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] $r1;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7;
        org.apache.lucene.queryparser.surround.parser.QueryParser r0;
        org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls $r3, $r4, r5;

        r0 := @this: org.apache.lucene.queryparser.surround.parser.QueryParser;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls[] jj_2_rtns>;

        r5 = $r1[i0];

     label1:
        $i2 = r5.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: int gen>;

        $i1 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        if $i2 <= $i1 goto label3;

        $r3 = r5.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls next>;

        if $r3 != null goto label2;

        $r4 = new org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls;

        specialinvoke $r4.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: void <init>()>();

        r5.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls next> = $r4;

        r5 = $r4;

        goto label3;

     label2:
        r5 = r5.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls next>;

        goto label1;

     label3:
        $i4 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_gen>;

        $i6 = $i4 + i3;

        $i5 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: int jj_la>;

        $i7 = $i6 - $i5;

        r5.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: int gen> = $i7;

        $r2 = r0.<org.apache.lucene.queryparser.surround.parser.QueryParser: org.apache.lucene.queryparser.surround.parser.Token token>;

        r5.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: org.apache.lucene.queryparser.surround.parser.Token first> = $r2;

        r5.<org.apache.lucene.queryparser.surround.parser.QueryParser$JJCalls: int arg> = i3;

        return;
    }

    static void <clinit>()
    {
        staticinvoke <org.apache.lucene.queryparser.surround.parser.QueryParser: void jj_la1_init_0()>();

        return;
    }
}
