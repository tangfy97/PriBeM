public class ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader extends java.lang.Object implements ucar.nc2.ProxyReader
{
    java.lang.String location;
    final ucar.nc2.ft.fmrc.FmrcDataset this$0;

    void <init>(ucar.nc2.ft.fmrc.FmrcDataset, java.lang.String)
    {
        ucar.nc2.ft.fmrc.FmrcDataset r1;
        java.lang.String r2;
        ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcDataset;

        r2 := @parameter1: java.lang.String;

        r0.<ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader: ucar.nc2.ft.fmrc.FmrcDataset this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader: java.lang.String location> = r2;

        return;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Throwable $r9;
        ucar.nc2.ft.fmrc.FmrcDataset $r2, $r6;
        ucar.ma2.Array $r8;
        ucar.nc2.util.CancelTask r4;
        ucar.nc2.Variable r5, $r7;
        java.lang.String $r1;
        ucar.nc2.dataset.NetcdfDataset $r3, r10;
        ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader r0;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader;

        r5 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

        r10 = null;

     label1:
        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader: ucar.nc2.ft.fmrc.FmrcDataset this$0>;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader: java.lang.String location>;

        $r3 = staticinvoke <ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.NetcdfDataset access$800(ucar.nc2.ft.fmrc.FmrcDataset,java.lang.String,java.util.HashMap)>($r2, $r1, null);

        r10 = $r3;

        if r4 == null goto label3;

        $z0 = interfaceinvoke r4.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke $r3.<ucar.nc2.NetcdfFile: void close()>();

        return null;

     label3:
        $r6 = r0.<ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader: ucar.nc2.ft.fmrc.FmrcDataset this$0>;

        $r7 = virtualinvoke $r6.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,ucar.nc2.Variable)>($r3, r5);

        $r8 = virtualinvoke $r7.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label4:
        virtualinvoke $r3.<ucar.nc2.NetcdfFile: void close()>();

        return $r8;

     label5:
        $r9 := @caughtexception;

     label6:
        virtualinvoke r10.<ucar.nc2.NetcdfFile: void close()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.ma2.Section, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.lang.Throwable $r10;
        ucar.ma2.Section r8;
        ucar.nc2.ft.fmrc.FmrcDataset $r2, $r5;
        ucar.ma2.Array $r9;
        ucar.nc2.util.CancelTask r7;
        ucar.nc2.Variable r4, $r6;
        java.lang.String $r1;
        ucar.nc2.dataset.NetcdfDataset $r3, r11;
        ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader r0;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader;

        r4 := @parameter0: ucar.nc2.Variable;

        r8 := @parameter1: ucar.ma2.Section;

        r7 := @parameter2: ucar.nc2.util.CancelTask;

        r11 = null;

     label1:
        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader: ucar.nc2.ft.fmrc.FmrcDataset this$0>;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader: java.lang.String location>;

        $r3 = staticinvoke <ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.NetcdfDataset access$800(ucar.nc2.ft.fmrc.FmrcDataset,java.lang.String,java.util.HashMap)>($r2, $r1, null);

        r11 = $r3;

        $r5 = r0.<ucar.nc2.ft.fmrc.FmrcDataset$DatasetProxyReader: ucar.nc2.ft.fmrc.FmrcDataset this$0>;

        $r6 = virtualinvoke $r5.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,ucar.nc2.Variable)>($r3, r4);

        if r7 == null goto label3;

        $z0 = interfaceinvoke r7.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke $r3.<ucar.nc2.NetcdfFile: void close()>();

        return null;

     label3:
        $r9 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>(r8);

     label4:
        virtualinvoke $r3.<ucar.nc2.NetcdfFile: void close()>();

        return $r9;

     label5:
        $r10 := @caughtexception;

     label6:
        virtualinvoke r11.<ucar.nc2.NetcdfFile: void close()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
