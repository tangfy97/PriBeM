final class com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty extends com.sun.xml.bind.v2.runtime.property.PropertyImpl
{
    private final com.sun.xml.bind.v2.runtime.reflect.Accessor acc;
    private final boolean nillable;
    private final javax.xml.namespace.QName[] acceptedElements;
    private final java.util.Map typeNames;
    private com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo prop;
    private final com.sun.xml.bind.v2.runtime.Name nullTagName;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo)
    {
        com.sun.xml.bind.v2.runtime.NameBuilder $r11, $r20;
        java.util.Map $r18;
        boolean $z0, $z1, z2;
        java.util.List $r6, $r9, $r24;
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r15;
        javax.xml.namespace.QName $r21, $r27, r28;
        com.sun.xml.bind.v2.runtime.Name $r12, $r22;
        java.util.HashMap $r3;
        javax.xml.namespace.QName[] $r7, $r8, $r23;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo r2;
        int $i0, $i1, i2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef r14, $r26;
        java.util.Iterator $r10;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r4, $r5;
        com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty r0;
        java.lang.Object $r13, $r25;
        java.lang.Class $r19;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r16;
        com.sun.xml.bind.v2.runtime.property.TagAndType $r17;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.PropertyImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo)>(r1, r2);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: java.util.Map typeNames> = $r3;

        $r4 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.Accessor: com.sun.xml.bind.v2.runtime.reflect.Accessor optimize(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r1);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = $r5;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo prop> = r2;

        r28 = null;

        z2 = 0;

        $r6 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = newarray (javax.xml.namespace.QName)[$i0];

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: javax.xml.namespace.QName[] acceptedElements> = $r7;

        i2 = 0;

     label1:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: javax.xml.namespace.QName[] acceptedElements>;

        $i1 = lengthof $r8;

        if i2 >= $i1 goto label2;

        $r23 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: javax.xml.namespace.QName[] acceptedElements>;

        $r24 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i2);

        $r26 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef) $r25;

        $r27 = interfaceinvoke $r26.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: javax.xml.namespace.QName getTagName()>();

        $r23[i2] = $r27;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r9 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r13 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef) $r13;

        $r15 = interfaceinvoke r14.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getTarget()>();

        $r16 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>($r15);

        if r28 != null goto label4;

        r28 = interfaceinvoke r14.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: javax.xml.namespace.QName getTagName()>();

     label4:
        $r18 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: java.util.Map typeNames>;

        $r19 = $r16.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r17 = new com.sun.xml.bind.v2.runtime.property.TagAndType;

        $r20 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r21 = interfaceinvoke r14.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: javax.xml.namespace.QName getTagName()>();

        $r22 = virtualinvoke $r20.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)>($r21);

        specialinvoke $r17.<com.sun.xml.bind.v2.runtime.property.TagAndType: void <init>(com.sun.xml.bind.v2.runtime.Name,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($r22, $r16);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r17);

        $z1 = interfaceinvoke r14.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: boolean isNillable()>();

        z2 = z2 | $z1;

        goto label3;

     label5:
        $r11 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r12 = virtualinvoke $r11.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)>(r28);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.runtime.Name nullTagName> = $r12;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: boolean nillable> = z2;

        return;
    }

    public void wrapUp()
    {
        com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.PropertyImpl: void wrapUp()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo prop> = null;

        return;
    }

    public void reset(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;
        com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor: void set(java.lang.Object,java.lang.Object)>(r1, null);

        return;
    }

    public java.lang.String getIdValue(java.lang.Object)
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public void serializeBody(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object) throws org.xml.sax.SAXException, com.sun.xml.bind.api.AccessorException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.util.Map $r7, $r10, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11;
        java.util.Collection $r11;
        java.util.Set $r19;
        com.sun.xml.bind.v2.runtime.Name $r5, $r9, $r15;
        java.lang.String $r28, $r30;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r16;
        java.util.Map$Entry r22;
        java.util.Iterator $r12, $r20;
        javax.xml.bind.JAXBElement $r17;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer r4;
        com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty r0;
        java.lang.Object r1, $r3, $r8, $r13, $r21, $r23, $r25, r26;
        java.lang.Class $r6, $r24;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r29, $r31;
        com.sun.xml.bind.v2.runtime.property.TagAndType $r14, r27;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r26 := @parameter2: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label12;

        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: java.util.Map typeNames>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r27 = (com.sun.xml.bind.v2.runtime.property.TagAndType) $r8;

        if r27 != null goto label03;

        $r18 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: java.util.Map typeNames>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Set entrySet()>();

        $r20 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label03;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r21;

        $r23 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r24 = (java.lang.Class) $r23;

        $z5 = virtualinvoke $r24.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z5 == 0 goto label02;

        $r25 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        r27 = (com.sun.xml.bind.v2.runtime.property.TagAndType) $r25;

        goto label03;

     label02:
        goto label01;

     label03:
        $z6 = r1 instanceof javax.xml.bind.JAXBElement;

        if $z6 == 0 goto label04;

        $r17 = (javax.xml.bind.JAXBElement) r1;

        $z3 = virtualinvoke $r17.<javax.xml.bind.JAXBElement: boolean isNil()>();

        if $z3 == 0 goto label04;

        $z11 = 1;

        $z10 = 1;

        goto label05;

     label04:
        $z11 = 0;

        $z10 = 0;

     label05:
        if r27 != null goto label08;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: java.util.Map typeNames>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.sun.xml.bind.v2.runtime.property.TagAndType) $r13;

        $r15 = $r14.<com.sun.xml.bind.v2.runtime.property.TagAndType: com.sun.xml.bind.v2.runtime.Name tagName>;

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r15, null);

        $r28 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: java.lang.String fieldName>;

        $r16 = r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r29 = virtualinvoke $r16.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>(class "Ljava/lang/Object;");

        if $z11 == 0 goto label06;

        $z2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: boolean nillable>;

        if $z2 == 0 goto label06;

        $z8 = 1;

        goto label07;

     label06:
        $z8 = 0;

     label07:
        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsXsiType(java.lang.Object,java.lang.String,com.sun.xml.bind.v2.runtime.JaxBeanInfo,boolean)>($r3, $r28, $r29, $z8);

        goto label11;

     label08:
        $r9 = r27.<com.sun.xml.bind.v2.runtime.property.TagAndType: com.sun.xml.bind.v2.runtime.Name tagName>;

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r9, null);

        $r30 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: java.lang.String fieldName>;

        $r31 = r27.<com.sun.xml.bind.v2.runtime.property.TagAndType: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        if $z10 == 0 goto label09;

        $z1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: boolean nillable>;

        if $z1 == 0 goto label09;

        $z9 = 1;

        goto label10;

     label09:
        $z9 = 0;

     label10:
        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsXsiType(java.lang.Object,java.lang.String,com.sun.xml.bind.v2.runtime.JaxBeanInfo,boolean)>($r3, $r30, $r31, $z9);

     label11:
        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

        goto label13;

     label12:
        $z0 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: boolean nillable>;

        if $z0 == 0 goto label13;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.runtime.Name nullTagName>;

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r5, null);

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void writeXsiNilTrue()>();

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

     label13:
        return;
    }

    public void buildChildElementUnmarshallers(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, com.sun.xml.bind.v2.util.QNameMap)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r22;
        com.sun.xml.bind.v2.runtime.property.UnmarshallerChain r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r12, r20;
        com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator $r18;
        com.sun.xml.bind.v2.util.QNameMap r16;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo $r9;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo $r3;
        int $i0;
        java.lang.String $r13, $r19;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef r7;
        java.util.Iterator $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Single $r14;
        com.sun.xml.bind.v2.model.core.NonElement $r8;
        java.util.List $r4;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r15, $r23;
        com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty r2;
        java.lang.Object $r6;
        java.lang.Class $r11;
        javax.xml.namespace.QName $r21;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r10;

        r2 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.UnmarshallerChain;

        r16 := @parameter1: com.sun.xml.bind.v2.util.QNameMap;

        r1 = r0.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r3 = r2.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo prop>;

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef) $r6;

        $r8 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.core.TypeRef: com.sun.xml.bind.v2.model.core.NonElement getTarget()>();

        $r9 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo) $r8;

        $r10 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>($r9);

        $r11 = $r10.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $i0 = virtualinvoke $r11.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        if $z1 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        $r12 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>(r1, $z4);

        r20 = $r12;

        $r13 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.core.TypeRef: java.lang.String getDefaultValue()>();

        if $r13 == null goto label4;

        $r18 = new com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator;

        $r19 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.core.TypeRef: java.lang.String getDefaultValue()>();

        specialinvoke $r18.<com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,java.lang.String)>($r12, $r19);

        r20 = $r18;

     label4:
        $z2 = r2.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: boolean nillable>;

        if $z2 != 0 goto label5;

        $r17 = r0.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $z3 = $r17.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean allNillable>;

        if $z3 == 0 goto label6;

     label5:
        $r14 = new com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Single;

        $r15 = r2.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        specialinvoke $r14.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Single: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.reflect.Accessor)>(r20, $r15);

        r20 = $r14;

     label6:
        $r21 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.core.TypeRef: javax.xml.namespace.QName getTagName()>();

        $r22 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        $r23 = r2.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        specialinvoke $r22.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>(r20, $r23);

        virtualinvoke r16.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r21, $r22);

        goto label1;

     label7:
        return;
    }

    public com.sun.xml.bind.v2.model.core.PropertyKind getKind()
    {
        com.sun.xml.bind.v2.model.core.PropertyKind $r0;
        com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty;

        $r0 = <com.sun.xml.bind.v2.model.core.PropertyKind: com.sun.xml.bind.v2.model.core.PropertyKind ELEMENT>;

        return $r0;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor getElementPropertyAccessor(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r7;
        javax.xml.namespace.QName[] r1;
        com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty r0;
        int i0, i1;
        javax.xml.namespace.QName r2;
        java.lang.String $r3, r4, $r5, r6;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty;

        r4 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: javax.xml.namespace.QName[] acceptedElements>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r7;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }
}
