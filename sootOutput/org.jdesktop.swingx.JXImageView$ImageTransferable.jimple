class org.jdesktop.swingx.JXImageView$ImageTransferable extends java.lang.Object implements java.awt.datatransfer.Transferable
{
    private java.awt.Image img;
    private java.util.List files;
    private java.lang.String exportName;
    private java.lang.String exportFormat;
    final org.jdesktop.swingx.JXImageView this$0;

    public void <init>(org.jdesktop.swingx.JXImageView, java.awt.Image, java.lang.String, java.lang.String)
    {
        org.jdesktop.swingx.JXImageView$ImageTransferable r0;
        org.jdesktop.swingx.JXImageView r1;
        java.awt.Image r2;
        java.lang.String r3, r4;

        r0 := @this: org.jdesktop.swingx.JXImageView$ImageTransferable;

        r1 := @parameter0: org.jdesktop.swingx.JXImageView;

        r2 := @parameter1: java.awt.Image;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r0.<org.jdesktop.swingx.JXImageView$ImageTransferable: org.jdesktop.swingx.JXImageView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.awt.Image img> = r2;

        r0.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.lang.String exportName> = r3;

        r0.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.lang.String exportFormat> = r4;

        return;
    }

    public java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()
    {
        org.jdesktop.swingx.JXImageView$ImageTransferable r3;
        java.awt.datatransfer.DataFlavor $r1, $r2;
        java.awt.datatransfer.DataFlavor[] $r0;

        r3 := @this: org.jdesktop.swingx.JXImageView$ImageTransferable;

        $r0 = newarray (java.awt.datatransfer.DataFlavor)[2];

        $r1 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor imageFlavor>;

        $r0[0] = $r1;

        $r2 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor javaFileListFlavor>;

        $r0[1] = $r2;

        return $r0;
    }

    public boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
    {
        org.jdesktop.swingx.JXImageView$ImageTransferable r3;
        java.awt.datatransfer.DataFlavor r0, $r1, $r2;
        boolean $z0;

        r3 := @this: org.jdesktop.swingx.JXImageView$ImageTransferable;

        r0 := @parameter0: java.awt.datatransfer.DataFlavor;

        $r1 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor imageFlavor>;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $r2 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor javaFileListFlavor>;

        if r0 != $r2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException
    {
        java.awt.datatransfer.DataFlavor r0, $r1, $r2;
        java.util.ArrayList $r6;
        java.lang.String $r8, $r10, $r12, $r16;
        java.awt.Image $r14, $r18;
        java.awt.image.BufferedImage $r15;
        java.io.File $r13;
        java.util.List $r4, $r5, $r17;
        org.jdesktop.swingx.JXImageView$ImageTransferable r3;
        java.lang.StringBuilder $r7, $r9, $r11;

        r3 := @this: org.jdesktop.swingx.JXImageView$ImageTransferable;

        r0 := @parameter0: java.awt.datatransfer.DataFlavor;

        $r1 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor imageFlavor>;

        if r0 != $r1 goto label1;

        $r18 = r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.awt.Image img>;

        return $r18;

     label1:
        $r2 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor javaFileListFlavor>;

        if r0 != $r2 goto label3;

        $r4 = r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.util.List files>;

        if $r4 != null goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.util.List files> = $r6;

        $r8 = r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.lang.String exportName>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.lang.String exportFormat>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>($r8, $r12);

        $r14 = r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.awt.Image img>;

        $r15 = staticinvoke <org.jdesktop.swingx.graphics.GraphicsUtilities: java.awt.image.BufferedImage convertToBufferedImage(java.awt.Image)>($r14);

        $r16 = r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.lang.String exportFormat>;

        staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>($r15, $r16, $r13);

        $r17 = r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.util.List files>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r13);

     label2:
        $r5 = r3.<org.jdesktop.swingx.JXImageView$ImageTransferable: java.util.List files>;

        return $r5;

     label3:
        return null;
    }
}
