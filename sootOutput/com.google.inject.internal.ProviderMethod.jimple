public class com.google.inject.internal.ProviderMethod extends java.lang.Object implements com.google.inject.spi.ProviderWithDependencies
{
    private final com.google.inject.Key key;
    private final java.lang.Class scopeAnnotation;
    private final java.lang.Object instance;
    private final java.lang.reflect.Method method;
    private final com.google.inject.internal.util.$ImmutableSet dependencies;
    private final java.util.List parameterProviders;
    private final boolean exposed;

    void <init>(com.google.inject.Key, java.lang.reflect.Method, java.lang.Object, com.google.inject.internal.util.$ImmutableSet, java.util.List, java.lang.Class)
    {
        com.google.inject.Key r1;
        java.util.List r6;
        com.google.inject.internal.ProviderMethod r0;
        com.google.inject.internal.util.$ImmutableSet r4;
        java.lang.Class r2;
        java.lang.Object r3;
        java.lang.reflect.Method r5;
        boolean $z0;

        r0 := @this: com.google.inject.internal.ProviderMethod;

        r1 := @parameter0: com.google.inject.Key;

        r5 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: com.google.inject.internal.util.$ImmutableSet;

        r6 := @parameter4: java.util.List;

        r2 := @parameter5: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.ProviderMethod: com.google.inject.Key key> = r1;

        r0.<com.google.inject.internal.ProviderMethod: java.lang.Class scopeAnnotation> = r2;

        r0.<com.google.inject.internal.ProviderMethod: java.lang.Object instance> = r3;

        r0.<com.google.inject.internal.ProviderMethod: com.google.inject.internal.util.$ImmutableSet dependencies> = r4;

        r0.<com.google.inject.internal.ProviderMethod: java.lang.reflect.Method method> = r5;

        r0.<com.google.inject.internal.ProviderMethod: java.util.List parameterProviders> = r6;

        $z0 = virtualinvoke r5.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/google/inject/Exposed;");

        r0.<com.google.inject.internal.ProviderMethod: boolean exposed> = $z0;

        virtualinvoke r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        return;
    }

    public com.google.inject.Key getKey()
    {
        com.google.inject.Key $r1;
        com.google.inject.internal.ProviderMethod r0;

        r0 := @this: com.google.inject.internal.ProviderMethod;

        $r1 = r0.<com.google.inject.internal.ProviderMethod: com.google.inject.Key key>;

        return $r1;
    }

    public java.lang.reflect.Method getMethod()
    {
        com.google.inject.internal.ProviderMethod r0;
        java.lang.reflect.Method $r1;

        r0 := @this: com.google.inject.internal.ProviderMethod;

        $r1 = r0.<com.google.inject.internal.ProviderMethod: java.lang.reflect.Method method>;

        return $r1;
    }

    public java.lang.Object getInstance()
    {
        java.lang.Object $r1;
        com.google.inject.internal.ProviderMethod r0;

        r0 := @this: com.google.inject.internal.ProviderMethod;

        $r1 = r0.<com.google.inject.internal.ProviderMethod: java.lang.Object instance>;

        return $r1;
    }

    public void configure(com.google.inject.Binder)
    {
        com.google.inject.PrivateBinder $r7;
        com.google.inject.Key $r4, $r6, $r8;
        com.google.inject.binder.ScopedBindingBuilder $r10;
        com.google.inject.internal.ProviderMethod r0;
        com.google.inject.Binder $r2, r12;
        com.google.inject.binder.LinkedBindingBuilder $r5, $r9;
        java.lang.Class $r3, $r11;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: com.google.inject.internal.ProviderMethod;

        r12 := @parameter0: com.google.inject.Binder;

        $r1 = r0.<com.google.inject.internal.ProviderMethod: java.lang.reflect.Method method>;

        $r2 = interfaceinvoke r12.<com.google.inject.Binder: com.google.inject.Binder withSource(java.lang.Object)>($r1);

        $r3 = r0.<com.google.inject.internal.ProviderMethod: java.lang.Class scopeAnnotation>;

        if $r3 == null goto label1;

        $r8 = r0.<com.google.inject.internal.ProviderMethod: com.google.inject.Key key>;

        $r9 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key)>($r8);

        $r10 = interfaceinvoke $r9.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider)>(r0);

        $r11 = r0.<com.google.inject.internal.ProviderMethod: java.lang.Class scopeAnnotation>;

        interfaceinvoke $r10.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>($r11);

        goto label2;

     label1:
        $r4 = r0.<com.google.inject.internal.ProviderMethod: com.google.inject.Key key>;

        $r5 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key)>($r4);

        interfaceinvoke $r5.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider)>(r0);

     label2:
        $z0 = r0.<com.google.inject.internal.ProviderMethod: boolean exposed>;

        if $z0 == 0 goto label3;

        $r7 = (com.google.inject.PrivateBinder) $r2;

        $r6 = r0.<com.google.inject.internal.ProviderMethod: com.google.inject.Key key>;

        interfaceinvoke $r7.<com.google.inject.PrivateBinder: void expose(com.google.inject.Key)>($r6);

     label3:
        return;
    }

    public java.lang.Object get()
    {
        java.lang.Object[] r2;
        java.lang.AssertionError $r13;
        com.google.inject.internal.ProviderMethod r0;
        int $i0, $i1, i2;
        java.lang.reflect.Method $r4;
        java.lang.IllegalAccessException $r12;
        java.lang.RuntimeException $r11;
        java.lang.reflect.InvocationTargetException $r10;
        java.util.List $r1, $r6;
        com.google.inject.Provider $r8;
        java.lang.Object $r3, $r5, $r7, $r9;

        r0 := @this: com.google.inject.internal.ProviderMethod;

        $r1 = r0.<com.google.inject.internal.ProviderMethod: java.util.List parameterProviders>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (java.lang.Object)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r6 = r0.<com.google.inject.internal.ProviderMethod: java.util.List parameterProviders>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2);

        $r8 = (com.google.inject.Provider) $r7;

        $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>();

        r2[i2] = $r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.google.inject.internal.ProviderMethod: java.lang.reflect.Method method>;

        $r3 = r0.<com.google.inject.internal.ProviderMethod: java.lang.Object instance>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, r2);

     label3:
        return $r5;

     label4:
        $r12 := @caughtexception;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r13;

     label5:
        $r10 := @caughtexception;

        $r11 = staticinvoke <com.google.inject.internal.Exceptions: java.lang.RuntimeException throwCleanly(java.lang.reflect.InvocationTargetException)>($r10);

        throw $r11;

        catch java.lang.IllegalAccessException from label2 to label3 with label4;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label5;
    }

    public java.util.Set getDependencies()
    {
        com.google.inject.internal.ProviderMethod r0;
        com.google.inject.internal.util.$ImmutableSet $r1;

        r0 := @this: com.google.inject.internal.ProviderMethod;

        $r1 = r0.<com.google.inject.internal.ProviderMethod: com.google.inject.internal.util.$ImmutableSet dependencies>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.google.inject.internal.ProviderMethod r2;
        java.lang.StringBuilder $r0, $r1, $r6;
        java.lang.Object $r4;
        java.lang.String $r5, $r7;
        java.lang.reflect.Method $r3;

        r2 := @this: com.google.inject.internal.ProviderMethod;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@Provides ");

        $r3 = r2.<com.google.inject.internal.ProviderMethod: java.lang.reflect.Method method>;

        $r4 = staticinvoke <com.google.inject.internal.util.$StackTraceElements: java.lang.Object forMember(java.lang.reflect.Member)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.inject.internal.ProviderMethod r1, r2;
        java.lang.Object r0, $r5, $r6;
        java.lang.reflect.Method $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: com.google.inject.internal.ProviderMethod;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.inject.internal.ProviderMethod;

        if $z0 == 0 goto label3;

        r1 = (com.google.inject.internal.ProviderMethod) r0;

        $r4 = r2.<com.google.inject.internal.ProviderMethod: java.lang.reflect.Method method>;

        $r3 = r1.<com.google.inject.internal.ProviderMethod: java.lang.reflect.Method method>;

        $z1 = virtualinvoke $r4.<java.lang.reflect.Method: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r6 = r2.<com.google.inject.internal.ProviderMethod: java.lang.Object instance>;

        $r5 = r1.<com.google.inject.internal.ProviderMethod: java.lang.Object instance>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        com.google.inject.internal.ProviderMethod r1;
        int $i0;
        java.lang.reflect.Method $r2;

        r1 := @this: com.google.inject.internal.ProviderMethod;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = r1.<com.google.inject.internal.ProviderMethod: java.lang.reflect.Method method>;

        $r0[0] = $r2;

        $i0 = staticinvoke <com.google.inject.internal.util.$Objects: int hashCode(java.lang.Object[])>($r0);

        return $i0;
    }
}
