final class com.google.inject.internal.util.$ImmutableList$RegularImmutableList extends com.google.inject.internal.util.$ImmutableList
{
    private final int offset;
    private final int size;
    private final java.lang.Object[] array;

    private void <init>(java.lang.Object[], int, int)
    {
        java.lang.Object[] r1;
        int i0, i1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.google.inject.internal.util.$ImmutableList: void <init>(com.google.inject.internal.util.$ImmutableList$1)>(null);

        r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset> = i0;

        r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size> = i1;

        r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array> = r1;

        return;
    }

    private void <init>(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] r1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r1 := @parameter0: java.lang.Object[];

        $i0 = lengthof r1;

        specialinvoke r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],int,int)>(r1, 0, $i0);

        return;
    }

    public int size()
    {
        int $i0;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $i0 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        return $i0;
    }

    public boolean isEmpty()
    {
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        return 0;
    }

    public boolean contains(java.lang.Object)
    {
        int $i0, $i2;
        java.lang.Object r1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;
        boolean $z0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int indexOf(java.lang.Object)>(r1);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.google.inject.internal.util.$UnmodifiableIterator iterator()
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;
        com.google.inject.internal.util.$UnmodifiableIterator $r2;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $i1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i0 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        $r2 = staticinvoke <com.google.inject.internal.util.$Iterators: com.google.inject.internal.util.$UnmodifiableIterator forArray(java.lang.Object[],int,int)>($r1, $i1, $i0);

        return $r2;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] r1, $r2;
        int $i0, $i1, $i2;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $i0 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        $r2 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $i2 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, r1, 0, $i1);

        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r1, $r2;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r1 := @parameter0: java.lang.Object[];

        $i1 = lengthof r1;

        $i0 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        if $i1 >= $i0 goto label1;

        $i5 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        r1 = staticinvoke <com.google.inject.internal.util.$ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>(r1, $i5);

        goto label2;

     label1:
        $i3 = lengthof r1;

        $i2 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        if $i3 <= $i2 goto label2;

        $i4 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        r1[$i4] = null;

     label2:
        $r2 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $i6 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i7 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i6, r1, 0, $i7);

        return r1;
    }

    public java.lang.Object get(int)
    {
        java.lang.Object[] $r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        i0 := @parameter0: int;

        $i1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkElementIndex(int,int)>(i0, $i1);

        $r1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $i2 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i3 = i0 + $i2;

        $r2 = $r1[$i3];

        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        java.lang.Object[] $r2;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r1;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        java.lang.Object r0, $r3;
        boolean $z0;

        r1 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label3;

        i5 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

     label1:
        $i1 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i0 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        $i2 = $i1 + $i0;

        if i5 >= $i2 goto label3;

        $r2 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $r3 = $r2[i5];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $i3 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i4 = i5 - $i3;

        return $i4;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $i7 = (int) -1;

        return $i7;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.lang.Object[] $r2;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8, $i10;
        java.lang.Object r0, $r3;
        boolean $z0;

        r1 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label3;

        $i1 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i0 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        $i2 = $i1 + $i0;

        i6 = $i2 - 1;

     label1:
        $i3 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        if i6 < $i3 goto label3;

        $r2 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $r3 = $r2[i6];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $i4 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i5 = i6 - $i4;

        return $i5;

     label2:
        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label1;

     label3:
        $i10 = (int) -1;

        return $i10;
    }

    public com.google.inject.internal.util.$ImmutableList subList(int, int)
    {
        java.lang.Object[] $r1;
        com.google.inject.internal.util.$ImmutableList $r2;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0, $r3;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkPositionIndexes(int,int,int)>(i0, i1, $i2);

        if i0 != i1 goto label1;

        $r2 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>();

        goto label2;

     label1:
        $r3 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r2 = $r3;

        $r1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $i3 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i5 = $i3 + i0;

        $i4 = i1 - i0;

        specialinvoke $r3.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],int,int)>($r1, $i5, $i4);

     label2:
        return $r2;
    }

    public java.util.ListIterator listIterator()
    {
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;
        java.util.ListIterator $r1;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r1 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.util.ListIterator listIterator(int)>(0);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        int i0, $i1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList$1 $r1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        i0 := @parameter0: int;

        $i1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkPositionIndex(int,int)>(i0, $i1);

        $r1 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList$1;

        specialinvoke $r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList$1: void <init>(com.google.inject.internal.util.$ImmutableList$RegularImmutableList,int)>(r0, i0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object[] $r5, $r7, $r8;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r1, r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r3;
        java.util.List r2;
        java.lang.Object r0, $r4, $r6, $r9, $r10;

        r1 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r0 instanceof java.util.List;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (java.util.List) r0;

        $i0 = virtualinvoke r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == $i1 goto label03;

        return 0;

     label03:
        i7 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $z1 = r0 instanceof com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        if $z1 == 0 goto label07;

        r11 = (com.google.inject.internal.util.$ImmutableList$RegularImmutableList) r0;

        i8 = r11.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

     label04:
        $i4 = r11.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i3 = r11.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        $i5 = $i4 + $i3;

        if i8 >= $i5 goto label06;

        $r7 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $i6 = i7;

        i7 = i7 + 1;

        $r10 = $r7[$i6];

        $r8 = r11.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $r9 = $r8[i8];

        $z4 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z4 != 0 goto label05;

        return 0;

     label05:
        i8 = i8 + 1;

        goto label04;

     label06:
        goto label10;

     label07:
        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $i2 = i7;

        i7 = i7 + 1;

        $r6 = $r5[$i2];

        $z3 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z3 != 0 goto label09;

        return 0;

     label09:
        goto label08;

     label10:
        return 1;
    }

    public int hashCode()
    {
        java.lang.Object[] $r1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object $r2;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        i5 = 1;

        i6 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

     label1:
        $i1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i0 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        $i2 = $i1 + $i0;

        if i6 >= $i2 goto label2;

        $i3 = 31 * i5;

        $r1 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $r2 = $r1[i6];

        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i5 = $i3 + $i4;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r3, $r8;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r6;
        java.lang.StringBuilder $r0, $r2, $r5, $r7;
        java.lang.Object $r4, $r9;

        r1 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r0 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size()>();

        $i1 = $i0 * 16;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r3 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $i2 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $r4 = $r3[$i2];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $i3 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        i7 = $i3 + 1;

     label1:
        $i5 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int offset>;

        $i4 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        $i6 = $i5 + $i4;

        if i7 >= $i6 goto label2;

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = r1.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object[] array>;

        $r9 = $r8[i7];

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile java.util.List subList(int, int)
    {
        com.google.inject.internal.util.$ImmutableList $r1;
        int i0, i1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: com.google.inject.internal.util.$ImmutableList subList(int,int)>(i0, i1);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;
        com.google.inject.internal.util.$UnmodifiableIterator $r1;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r1 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: com.google.inject.internal.util.$UnmodifiableIterator iterator()>();

        return $r1;
    }

    void <init>(java.lang.Object[], com.google.inject.internal.util.$ImmutableList$1)
    {
        java.lang.Object[] r1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;
        com.google.inject.internal.util.$ImmutableList$1 r2;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: com.google.inject.internal.util.$ImmutableList$1;

        specialinvoke r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[])>(r1);

        return;
    }

    static int access$300(com.google.inject.internal.util.$ImmutableList$RegularImmutableList)
    {
        int $i0;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;

        r0 := @parameter0: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $i0 = r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size>;

        return $i0;
    }

    void <init>(java.lang.Object[], int, int, com.google.inject.internal.util.$ImmutableList$1)
    {
        java.lang.Object[] r1;
        int i0, i1;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList r0;
        com.google.inject.internal.util.$ImmutableList$1 r2;

        r0 := @this: com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.google.inject.internal.util.$ImmutableList$1;

        specialinvoke r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],int,int)>(r1, i0, i1);

        return;
    }
}
