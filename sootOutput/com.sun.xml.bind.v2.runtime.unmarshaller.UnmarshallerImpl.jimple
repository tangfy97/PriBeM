public final class com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl extends javax.xml.bind.helpers.AbstractUnmarshallerImpl implements javax.xml.bind.ValidationEventHandler, java.io.Closeable
{
    protected final com.sun.xml.bind.v2.runtime.JAXBContextImpl context;
    private javax.xml.validation.Schema schema;
    public final com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator;
    private javax.xml.bind.Unmarshaller$Listener externalListener;
    private javax.xml.bind.attachment.AttachmentUnmarshaller attachmentUnmarshaller;
    private com.sun.xml.bind.IDResolver idResolver;
    private static final org.xml.sax.helpers.DefaultHandler dummyHandler;
    public static final java.lang.String FACTORY;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.runtime.AssociationMap)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.AssociationMap r4;
        java.lang.AssertionError $r6;
        com.sun.xml.bind.v2.runtime.unmarshaller.DefaultIDResolver $r1;
        javax.xml.bind.JAXBException $r5;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r2 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r4 := @parameter1: com.sun.xml.bind.v2.runtime.AssociationMap;

        specialinvoke r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: void <init>()>();

        $r1 = new com.sun.xml.bind.v2.runtime.unmarshaller.DefaultIDResolver;

        specialinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.DefaultIDResolver: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.IDResolver idResolver> = $r1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context> = r2;

        $r3 = new com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl,com.sun.xml.bind.v2.runtime.AssociationMap)>(r0, r4);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator> = $r3;

     label1:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: void setEventHandler(javax.xml.bind.ValidationEventHandler)>(r0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r6;

     label4:
        return;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    public javax.xml.bind.UnmarshallerHandler getUnmarshallerHandler()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        $r1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector getUnmarshallerHandler(boolean,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(1, null);

        return $r1;
    }

    private com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector getUnmarshallerHandler(boolean, com.sun.xml.bind.v2.runtime.JaxBeanInfo)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r2, r5;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r1;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor createUnmarshallerHandler(com.sun.xml.bind.unmarshaller.InfosetScanner,boolean,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(null, 0, r1);

        r5 = $r2;

        if z0 == 0 goto label1;

        $r4 = new com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>($r2);

        r5 = $r4;

     label1:
        $r3 = new com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor,com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx)>(r5, null);

        return $r3;
    }

    public final com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor createUnmarshallerHandler(com.sun.xml.bind.unmarshaller.InfosetScanner, boolean, com.sun.xml.bind.v2.runtime.JaxBeanInfo)
    {
        javax.xml.bind.attachment.AttachmentUnmarshaller $r6, $r7, $r9;
        com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator $r8;
        javax.xml.validation.Schema $r5, $r11;
        com.sun.xml.bind.IDResolver $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.ValidatingUnmarshaller $r10;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor r12;
        com.sun.xml.bind.unmarshaller.InfosetScanner r1;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r2;
        boolean z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: com.sun.xml.bind.unmarshaller.InfosetScanner;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.IDResolver idResolver>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void reset(com.sun.xml.bind.unmarshaller.InfosetScanner,boolean,com.sun.xml.bind.v2.runtime.JaxBeanInfo,com.sun.xml.bind.IDResolver)>(r1, z0, r2, $r3);

        r12 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.validation.Schema schema>;

        if $r5 == null goto label1;

        $r10 = new com.sun.xml.bind.v2.runtime.unmarshaller.ValidatingUnmarshaller;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.validation.Schema schema>;

        specialinvoke $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.ValidatingUnmarshaller: void <init>(javax.xml.validation.Schema,com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>($r11, r12);

        r12 = $r10;

     label1:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.attachment.AttachmentUnmarshaller attachmentUnmarshaller>;

        if $r6 == null goto label2;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.attachment.AttachmentUnmarshaller attachmentUnmarshaller>;

        $z1 = virtualinvoke $r7.<javax.xml.bind.attachment.AttachmentUnmarshaller: boolean isXOPPackage()>();

        if $z1 == 0 goto label2;

        $r8 = new com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.attachment.AttachmentUnmarshaller attachmentUnmarshaller>;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl,com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor,javax.xml.bind.attachment.AttachmentUnmarshaller)>(r0, r12, $r9);

        r12 = $r8;

     label2:
        return r12;
    }

    public static boolean needsInterning(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLReader r0;
        org.xml.sax.SAXException $r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.xml.sax.XMLReader;

     label1:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/string-interning", 1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        $z0 = interfaceinvoke r0.<org.xml.sax.XMLReader: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/string-interning");

        if $z0 == 0 goto label6;

     label5:
        return 0;

     label6:
        goto label8;

     label7:
        $r1 := @caughtexception;

     label8:
        return 1;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label4 to label5 with label7;
    }

    protected java.lang.Object unmarshal(org.xml.sax.XMLReader, org.xml.sax.InputSource) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.XMLReader r1;
        org.xml.sax.InputSource r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        java.lang.Object $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: org.xml.sax.XMLReader;

        r2 := @parameter1: org.xml.sax.InputSource;

        $r3 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(org.xml.sax.XMLReader,org.xml.sax.InputSource,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r1, r2, null);

        return $r3;
    }

    protected javax.xml.bind.JAXBElement unmarshal(org.xml.sax.XMLReader, org.xml.sax.InputSource, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.InputSource r3;
        javax.xml.bind.JAXBElement $r6;
        java.lang.IllegalArgumentException $r7;
        org.xml.sax.XMLReader r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        java.lang.Class r0;
        java.lang.Object $r5;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r4;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r2 := @parameter0: org.xml.sax.XMLReader;

        r3 := @parameter1: org.xml.sax.InputSource;

        r0 := @parameter2: java.lang.Class;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label1:
        $r4 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>(r0);

        $r5 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(org.xml.sax.XMLReader,org.xml.sax.InputSource,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r2, r3, $r4);

        $r6 = (javax.xml.bind.JAXBElement) $r5;

        return $r6;
    }

    private java.lang.Object unmarshal0(org.xml.sax.XMLReader, org.xml.sax.InputSource, com.sun.xml.bind.v2.runtime.JaxBeanInfo) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.XMLReader r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r4, $r10, $r13;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        boolean $z0;
        org.xml.sax.InputSource r5;
        javax.xml.bind.UnmarshalException $r11, $r14;
        java.io.IOException $r12;
        org.xml.sax.helpers.DefaultHandler $r7, $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector $r3;
        org.xml.sax.SAXException $r9;
        java.lang.Object $r6;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: org.xml.sax.XMLReader;

        r5 := @parameter1: org.xml.sax.InputSource;

        r2 := @parameter2: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        $z0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: boolean needsInterning(org.xml.sax.XMLReader)>(r1);

        $r3 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector getUnmarshallerHandler(boolean,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($z0, r2);

        interfaceinvoke r1.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r3);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        interfaceinvoke r1.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r4);

     label1:
        interfaceinvoke r1.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r5);

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        virtualinvoke $r13.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void clearStates()>();

        $r14 = new javax.xml.bind.UnmarshalException;

        specialinvoke $r14.<javax.xml.bind.UnmarshalException: void <init>(java.lang.Throwable)>($r12);

        throw $r14;

     label4:
        $r9 := @caughtexception;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void clearStates()>();

        $r11 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.UnmarshalException createUnmarshalException(org.xml.sax.SAXException)>($r9);

        throw $r11;

     label5:
        $r6 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector: java.lang.Object getResult()>();

        $r7 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.helpers.DefaultHandler dummyHandler>;

        interfaceinvoke r1.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r7);

        $r8 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.helpers.DefaultHandler dummyHandler>;

        interfaceinvoke r1.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r8);

        return $r6;

        catch java.io.IOException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label1 to label2 with label4;
    }

    public javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        javax.xml.transform.dom.DOMSource $r3;
        javax.xml.transform.stream.StreamSource $r8;
        javax.xml.transform.Source r0;
        org.xml.sax.XMLReader $r7, $r12, r15;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r2;
        org.w3c.dom.Node $r4;
        boolean $z0, $z1, $z2;
        org.xml.sax.InputSource $r9, $r13;
        javax.xml.bind.JAXBElement $r6, $r10, $r14;
        java.lang.IllegalArgumentException $r1;
        javax.xml.transform.sax.SAXSource r11;
        java.lang.Class r5;

        r2 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: javax.xml.transform.Source;

        r5 := @parameter1: java.lang.Class;

        $z0 = r0 instanceof javax.xml.transform.sax.SAXSource;

        if $z0 == 0 goto label2;

        r11 = (javax.xml.transform.sax.SAXSource) r0;

        $r12 = virtualinvoke r11.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

        r15 = $r12;

        if $r12 != null goto label1;

        r15 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.XMLReader getXMLReader()>();

     label1:
        $r13 = virtualinvoke r11.<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>();

        $r14 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.JAXBElement unmarshal(org.xml.sax.XMLReader,org.xml.sax.InputSource,java.lang.Class)>(r15, $r13, r5);

        return $r14;

     label2:
        $z1 = r0 instanceof javax.xml.transform.stream.StreamSource;

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.XMLReader getXMLReader()>();

        $r8 = (javax.xml.transform.stream.StreamSource) r0;

        $r9 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.InputSource streamSourceToInputSource(javax.xml.transform.stream.StreamSource)>($r8);

        $r10 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.JAXBElement unmarshal(org.xml.sax.XMLReader,org.xml.sax.InputSource,java.lang.Class)>($r7, $r9, r5);

        return $r10;

     label3:
        $z2 = r0 instanceof javax.xml.transform.dom.DOMSource;

        if $z2 == 0 goto label4;

        $r3 = (javax.xml.transform.dom.DOMSource) r0;

        $r4 = virtualinvoke $r3.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        $r6 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.JAXBElement unmarshal(org.w3c.dom.Node,java.lang.Class)>($r4, r5);

        return $r6;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    public java.lang.Object unmarshal0(javax.xml.transform.Source, com.sun.xml.bind.v2.runtime.JaxBeanInfo) throws javax.xml.bind.JAXBException
    {
        javax.xml.transform.dom.DOMSource $r3;
        javax.xml.transform.stream.StreamSource $r8;
        javax.xml.transform.Source r0;
        org.xml.sax.XMLReader $r7, $r12, r15;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r2;
        org.w3c.dom.Node $r4;
        boolean $z0, $z1, $z2;
        org.xml.sax.InputSource $r9, $r13;
        java.lang.IllegalArgumentException $r1;
        javax.xml.transform.sax.SAXSource r11;
        java.lang.Object $r6, $r10, $r14;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r5;

        r2 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: javax.xml.transform.Source;

        r5 := @parameter1: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        $z0 = r0 instanceof javax.xml.transform.sax.SAXSource;

        if $z0 == 0 goto label2;

        r11 = (javax.xml.transform.sax.SAXSource) r0;

        $r12 = virtualinvoke r11.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

        r15 = $r12;

        if $r12 != null goto label1;

        r15 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.XMLReader getXMLReader()>();

     label1:
        $r13 = virtualinvoke r11.<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>();

        $r14 = specialinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(org.xml.sax.XMLReader,org.xml.sax.InputSource,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r15, $r13, r5);

        return $r14;

     label2:
        $z1 = r0 instanceof javax.xml.transform.stream.StreamSource;

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.XMLReader getXMLReader()>();

        $r8 = (javax.xml.transform.stream.StreamSource) r0;

        $r9 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.InputSource streamSourceToInputSource(javax.xml.transform.stream.StreamSource)>($r8);

        $r10 = specialinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(org.xml.sax.XMLReader,org.xml.sax.InputSource,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($r7, $r9, r5);

        return $r10;

     label3:
        $z2 = r0 instanceof javax.xml.transform.dom.DOMSource;

        if $z2 == 0 goto label4;

        $r3 = (javax.xml.transform.dom.DOMSource) r0;

        $r4 = virtualinvoke $r3.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        $r6 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(org.w3c.dom.Node,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($r4, r5);

        return $r6;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    public final javax.xml.bind.ValidationEventHandler getEventHandler()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        javax.xml.bind.ValidationEventHandler $r1;
        java.lang.AssertionError $r3;
        javax.xml.bind.JAXBException $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

     label1:
        $r1 = specialinvoke r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: javax.xml.bind.ValidationEventHandler getEventHandler()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    public final boolean hasEventHandler()
    {
        javax.xml.bind.ValidationEventHandler $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.ValidationEventHandler getEventHandler()>();

        if $r1 == r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public javax.xml.bind.JAXBElement unmarshal(org.w3c.dom.Node, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        org.w3c.dom.Node r2;
        javax.xml.bind.JAXBElement $r5;
        java.lang.Class r0;
        java.lang.Object $r4;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r3;
        java.lang.IllegalArgumentException $r6;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $r3 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>(r0);

        $r4 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(org.w3c.dom.Node,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r2, $r3);

        $r5 = (javax.xml.bind.JAXBElement) $r4;

        return $r5;
    }

    public final java.lang.Object unmarshal(org.w3c.dom.Node) throws javax.xml.bind.JAXBException
    {
        java.lang.Object $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        org.w3c.dom.Node r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(org.w3c.dom.Node,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r1, null);

        return $r2;
    }

    public final java.lang.Object unmarshal(javax.xml.transform.sax.SAXSource) throws javax.xml.bind.JAXBException
    {
        javax.xml.transform.sax.SAXSource r1;
        java.lang.Object $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: javax.xml.transform.sax.SAXSource;

        $r2 = specialinvoke r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(javax.xml.transform.Source)>(r1);

        return $r2;
    }

    public final java.lang.Object unmarshal0(org.w3c.dom.Node, com.sun.xml.bind.v2.runtime.JaxBeanInfo) throws javax.xml.bind.JAXBException
    {
        short $s0, $s1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r13, $r15;
        com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor $r20;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r2;
        org.w3c.dom.Document $r12;
        org.w3c.dom.Node r6;
        int $i2;
        java.lang.String $r11;
        javax.xml.bind.UnmarshalException $r18;
        java.lang.IllegalArgumentException $r23;
        org.w3c.dom.Element $r16;
        com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector $r21;
        org.xml.sax.SAXException $r17;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r4;
        com.sun.xml.bind.unmarshaller.DOMScanner $r19;
        java.lang.StringBuilder $r9, $r10, $r22;
        java.lang.Object $r14;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r3;

        r2 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r6 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

     label1:
        $r19 = new com.sun.xml.bind.unmarshaller.DOMScanner;

        specialinvoke $r19.<com.sun.xml.bind.unmarshaller.DOMScanner: void <init>()>();

        $r20 = new com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor;

        $r4 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor createUnmarshallerHandler(com.sun.xml.bind.unmarshaller.InfosetScanner,boolean,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(null, 0, r3);

        specialinvoke $r20.<com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>($r4);

        $r21 = new com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector;

        specialinvoke $r21.<com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor,com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx)>($r20, $r19);

        virtualinvoke $r19.<com.sun.xml.bind.unmarshaller.DOMScanner: void setContentHandler(org.xml.sax.ContentHandler)>($r21);

        $s0 = interfaceinvoke r6.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label2;

        $r16 = (org.w3c.dom.Element) r6;

        virtualinvoke $r19.<com.sun.xml.bind.unmarshaller.DOMScanner: void scan(org.w3c.dom.Element)>($r16);

        goto label4;

     label2:
        $s1 = interfaceinvoke r6.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s1;

        if $i2 != 9 goto label3;

        $r12 = (org.w3c.dom.Document) r6;

        virtualinvoke $r19.<com.sun.xml.bind.unmarshaller.DOMScanner: void scan(org.w3c.dom.Document)>($r12);

        goto label4;

     label3:
        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected node type: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r23;

     label4:
        $r13 = virtualinvoke $r20.<com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        $r14 = virtualinvoke $r13.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object getResult()>();

        $r15 = virtualinvoke $r20.<com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        virtualinvoke $r15.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void clearResult()>();

     label5:
        return $r14;

     label6:
        $r17 := @caughtexception;

        $r18 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.UnmarshalException createUnmarshalException(org.xml.sax.SAXException)>($r17);

        throw $r18;

        catch org.xml.sax.SAXException from label1 to label5 with label6;
    }

    public java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader) throws javax.xml.bind.JAXBException
    {
        java.lang.Object $r2;
        javax.xml.stream.XMLStreamReader r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(javax.xml.stream.XMLStreamReader,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r1, null);

        return $r2;
    }

    public javax.xml.bind.JAXBElement unmarshal(javax.xml.stream.XMLStreamReader, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        javax.xml.stream.XMLStreamReader r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        javax.xml.bind.JAXBElement $r5;
        java.lang.Class r0;
        java.lang.Object $r4;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r3;
        java.lang.IllegalArgumentException $r6;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r2 := @parameter0: javax.xml.stream.XMLStreamReader;

        r0 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $r3 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>(r0);

        $r4 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(javax.xml.stream.XMLStreamReader,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r2, $r3);

        $r5 = (javax.xml.bind.JAXBElement) $r4;

        return $r5;
    }

    public java.lang.Object unmarshal0(javax.xml.stream.XMLStreamReader, com.sun.xml.bind.v2.runtime.JaxBeanInfo) throws javax.xml.bind.JAXBException
    {
        java.lang.IllegalStateException $r8;
        java.lang.Integer $r9;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r5, $r7;
        javax.xml.stream.XMLStreamReader r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        javax.xml.stream.XMLStreamException $r13;
        int $i0;
        java.lang.String $r10, $r12;
        java.lang.IllegalArgumentException $r11;
        javax.xml.bind.JAXBException $r14;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r3;
        java.lang.Object $r6;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r2;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = staticinvoke <com.sun.xml.bind.unmarshaller.Messages: java.lang.String format(java.lang.String)>("Unmarshaller.NullReader");

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label1:
        $i0 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        if $i0 == 1 goto label2;

        if $i0 == 7 goto label2;

        $r8 = new java.lang.IllegalStateException;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r10 = staticinvoke <com.sun.xml.bind.unmarshaller.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Unmarshaller.IllegalReaderState", $r9);

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label2:
        $r3 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor createUnmarshallerHandler(com.sun.xml.bind.unmarshaller.InfosetScanner,boolean,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(null, 0, r2);

        $r4 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector create(javax.xml.stream.XMLStreamReader,com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>(r0, $r3);

     label3:
        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector: void bridge()>();

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.JAXBException handleStreamException(javax.xml.stream.XMLStreamException)>($r13);

        throw $r14;

     label6:
        $r5 = interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        $r6 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object getResult()>();

        $r7 = interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void clearResult()>();

        return $r6;

        catch javax.xml.stream.XMLStreamException from label3 to label4 with label5;
    }

    public javax.xml.bind.JAXBElement unmarshal(javax.xml.stream.XMLEventReader, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        javax.xml.stream.XMLEventReader r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        javax.xml.bind.JAXBElement $r5;
        java.lang.Class r0;
        java.lang.Object $r4;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r3;
        java.lang.IllegalArgumentException $r6;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r2 := @parameter0: javax.xml.stream.XMLEventReader;

        r0 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $r3 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>(r0);

        $r4 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(javax.xml.stream.XMLEventReader,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r2, $r3);

        $r5 = (javax.xml.bind.JAXBElement) $r4;

        return $r5;
    }

    public java.lang.Object unmarshal(javax.xml.stream.XMLEventReader) throws javax.xml.bind.JAXBException
    {
        javax.xml.stream.XMLEventReader r1;
        java.lang.Object $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: javax.xml.stream.XMLEventReader;

        $r2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(javax.xml.stream.XMLEventReader,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r1, null);

        return $r2;
    }

    private java.lang.Object unmarshal0(javax.xml.stream.XMLEventReader, com.sun.xml.bind.v2.runtime.JaxBeanInfo) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector $r7;
        java.lang.IllegalStateException $r11;
        java.lang.Integer $r12;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r8;
        javax.xml.stream.events.XMLEvent $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor $r10;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r4;
        javax.xml.stream.XMLStreamException $r16;
        int $i0;
        java.lang.String $r3, $r13, $r15;
        boolean $z0, $z1, $z2;
        javax.xml.stream.XMLEventReader r0;
        java.lang.IllegalArgumentException $r14;
        javax.xml.bind.JAXBException $r17;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r6, r18;
        java.lang.Class $r2;
        java.lang.Object $r9;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r5;

        r4 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: javax.xml.stream.XMLEventReader;

        r5 := @parameter1: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        if r0 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = staticinvoke <com.sun.xml.bind.unmarshaller.Messages: java.lang.String format(java.lang.String)>("Unmarshaller.NullReader");

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label1:
        $r1 = interfaceinvoke r0.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        $z0 = interfaceinvoke $r1.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

        if $z0 != 0 goto label2;

        $z2 = interfaceinvoke $r1.<javax.xml.stream.events.XMLEvent: boolean isStartDocument()>();

        if $z2 != 0 goto label2;

        $r11 = new java.lang.IllegalStateException;

        $i0 = interfaceinvoke $r1.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r13 = staticinvoke <com.sun.xml.bind.unmarshaller.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Unmarshaller.IllegalReaderState", $r12);

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.xml.stream.XMLReaderImpl");

        $r6 = virtualinvoke r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor createUnmarshallerHandler(com.sun.xml.bind.unmarshaller.InfosetScanner,boolean,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(null, 0, r5);

        r18 = $r6;

        if $z1 != 0 goto label3;

        $r10 = new com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor;

        specialinvoke $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>($r6);

        r18 = $r10;

     label3:
        $r7 = new com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: void <init>(javax.xml.stream.XMLEventReader,com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>(r0, r18);

        virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: void bridge()>();

        $r8 = interfaceinvoke r18.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        $r9 = virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object getResult()>();

     label4:
        return $r9;

     label5:
        $r16 := @caughtexception;

        $r17 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.JAXBException handleStreamException(javax.xml.stream.XMLStreamException)>($r16);

        throw $r17;

        catch javax.xml.stream.XMLStreamException from label1 to label4 with label5;
    }

    public java.lang.Object unmarshal0(java.io.InputStream, com.sun.xml.bind.v2.runtime.JaxBeanInfo) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.XMLReader $r1;
        org.xml.sax.InputSource $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        java.lang.Object $r5;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r4;
        java.io.InputStream r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r3 := @parameter0: java.io.InputStream;

        r4 := @parameter1: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.XMLReader getXMLReader()>();

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r3);

        $r5 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object unmarshal0(org.xml.sax.XMLReader,org.xml.sax.InputSource,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($r1, $r2, r4);

        return $r5;
    }

    private static javax.xml.bind.JAXBException handleStreamException(javax.xml.stream.XMLStreamException)
    {
        java.lang.Throwable $r1;
        javax.xml.bind.UnmarshalException $r2, $r3;
        javax.xml.stream.XMLStreamException r0;
        javax.xml.bind.JAXBException $r4;
        boolean $z0, $z1;

        r0 := @parameter0: javax.xml.stream.XMLStreamException;

        $r1 = virtualinvoke r0.<javax.xml.stream.XMLStreamException: java.lang.Throwable getNestedException()>();

        $z0 = $r1 instanceof javax.xml.bind.JAXBException;

        if $z0 == 0 goto label1;

        $r4 = (javax.xml.bind.JAXBException) $r1;

        return $r4;

     label1:
        $z1 = $r1 instanceof org.xml.sax.SAXException;

        if $z1 == 0 goto label2;

        $r3 = new javax.xml.bind.UnmarshalException;

        specialinvoke $r3.<javax.xml.bind.UnmarshalException: void <init>(java.lang.Throwable)>($r1);

        return $r3;

     label2:
        $r2 = new javax.xml.bind.UnmarshalException;

        specialinvoke $r2.<javax.xml.bind.UnmarshalException: void <init>(java.lang.Throwable)>(r0);

        return $r2;
    }

    public java.lang.Object getProperty(java.lang.String) throws javax.xml.bind.PropertyException
    {
        com.sun.xml.bind.IDResolver $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r3;
        java.lang.Class $r1;
        java.lang.Object $r4;
        java.lang.String r0, $r2;
        boolean $z0;

        r3 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: java.lang.String;

        $r1 = class "Lcom/sun/xml/bind/IDResolver;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.IDResolver idResolver>;

        return $r5;

     label1:
        $r4 = specialinvoke r3.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object getProperty(java.lang.String)>(r0);

        return $r4;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        com.sun.xml.bind.api.ClassResolver $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r10, $r12, $r14;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r7;
        java.lang.String r0, $r2, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;
        com.sun.xml.bind.IDResolver $r13;
        java.lang.Class $r1, $r3, $r5;
        java.lang.Object r8;
        java.lang.ClassLoader $r9;

        r7 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.xml.bind.ObjectFactory");

        if $z0 == 0 goto label1;

        $r14 = r7.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void setFactories(java.lang.Object)>(r8);

        return;

     label1:
        $r1 = class "Lcom/sun/xml/bind/IDResolver;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $r13 = (com.sun.xml.bind.IDResolver) r8;

        r7.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.IDResolver idResolver> = $r13;

        return;

     label2:
        $r3 = class "Lcom/sun/xml/bind/api/ClassResolver;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label3;

        $r12 = r7.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        $r11 = (com.sun.xml.bind.api.ClassResolver) r8;

        $r12.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.api.ClassResolver classResolver> = $r11;

        return;

     label3:
        $r5 = class "Ljava/lang/ClassLoader;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label4;

        $r10 = r7.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        $r9 = (java.lang.ClassLoader) r8;

        $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.ClassLoader classLoader> = $r9;

        return;

     label4:
        specialinvoke r7.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: void setProperty(java.lang.String,java.lang.Object)>(r0, r8);

        return;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        javax.xml.validation.Schema r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: javax.xml.validation.Schema;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.validation.Schema schema> = r1;

        return;
    }

    public javax.xml.validation.Schema getSchema()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        javax.xml.validation.Schema $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.validation.Schema schema>;

        return $r1;
    }

    public javax.xml.bind.attachment.AttachmentUnmarshaller getAttachmentUnmarshaller()
    {
        javax.xml.bind.attachment.AttachmentUnmarshaller $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.attachment.AttachmentUnmarshaller attachmentUnmarshaller>;

        return $r1;
    }

    public void setAttachmentUnmarshaller(javax.xml.bind.attachment.AttachmentUnmarshaller)
    {
        javax.xml.bind.attachment.AttachmentUnmarshaller r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: javax.xml.bind.attachment.AttachmentUnmarshaller;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.attachment.AttachmentUnmarshaller attachmentUnmarshaller> = r1;

        return;
    }

    public boolean isValidating()
    {
        java.lang.UnsupportedOperationException $r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setValidating(boolean)
    {
        java.lang.UnsupportedOperationException $r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        boolean z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setAdapter(java.lang.Class, javax.xml.bind.'annotation'.adapters.XmlAdapter)
    {
        javax.xml.bind.'annotation'.adapters.XmlAdapter r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        java.lang.Class r0;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: javax.xml.bind.'annotation'.adapters.XmlAdapter;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: javax.xml.bind.'annotation'.adapters.XmlAdapter putAdapter(java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlAdapter)>(r0, r2);

        return;
    }

    public javax.xml.bind.'annotation'.adapters.XmlAdapter getAdapter(java.lang.Class)
    {
        javax.xml.bind.'annotation'.adapters.XmlAdapter $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r2, $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        java.lang.Class r0;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        $z0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean containsAdapter(java.lang.Class)>(r0);

        if $z0 == 0 goto label2;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: javax.xml.bind.'annotation'.adapters.XmlAdapter getAdapter(java.lang.Class)>(r0);

        return $r4;

     label2:
        return null;
    }

    public javax.xml.bind.UnmarshalException createUnmarshalException(org.xml.sax.SAXException)
    {
        javax.xml.bind.UnmarshalException $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        org.xml.sax.SAXException r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: org.xml.sax.SAXException;

        $r2 = specialinvoke r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: javax.xml.bind.UnmarshalException createUnmarshalException(org.xml.sax.SAXException)>(r1);

        return $r2;
    }

    public boolean handleEvent(javax.xml.bind.ValidationEvent)
    {
        javax.xml.bind.ValidationEvent r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r1;
        int $i0;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r0 := @parameter0: javax.xml.bind.ValidationEvent;

        $i0 = interfaceinvoke r0.<javax.xml.bind.ValidationEvent: int getSeverity()>();

        if $i0 == 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static org.xml.sax.InputSource streamSourceToInputSource(javax.xml.transform.stream.StreamSource)
    {
        org.xml.sax.InputSource $r0;
        javax.xml.transform.stream.StreamSource r1;
        java.lang.String $r2;
        java.io.Reader $r4;
        java.io.InputStream $r3;

        r1 := @parameter0: javax.xml.transform.stream.StreamSource;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>()>();

        $r2 = virtualinvoke r1.<javax.xml.transform.stream.StreamSource: java.lang.String getSystemId()>();

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();

        virtualinvoke $r0.<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>($r3);

        $r4 = virtualinvoke r1.<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()>();

        virtualinvoke $r0.<org.xml.sax.InputSource: void setCharacterStream(java.io.Reader)>($r4);

        return $r0;
    }

    public com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;
        java.lang.Class r1;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class,boolean)>(r1, 1);

        return $r3;
    }

    public javax.xml.bind.Unmarshaller$Listener getListener()
    {
        javax.xml.bind.Unmarshaller$Listener $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.Unmarshaller$Listener externalListener>;

        return $r1;
    }

    public void setListener(javax.xml.bind.Unmarshaller$Listener)
    {
        javax.xml.bind.Unmarshaller$Listener r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r1 := @parameter0: javax.xml.bind.Unmarshaller$Listener;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.Unmarshaller$Listener externalListener> = r1;

        return;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext coordinator>;

        return $r1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        java.lang.Throwable $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

     label1:
        staticinvoke <com.sun.xml.bind.v2.ClassFactory: void cleanCache()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void close() throws java.io.IOException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        staticinvoke <com.sun.xml.bind.v2.ClassFactory: void cleanCache()>();

        return;
    }

    static void <clinit>()
    {
        org.xml.sax.helpers.DefaultHandler $r0;

        <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.String FACTORY> = "com.sun.xml.bind.ObjectFactory";

        $r0 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: org.xml.sax.helpers.DefaultHandler dummyHandler> = $r0;

        return;
    }
}
