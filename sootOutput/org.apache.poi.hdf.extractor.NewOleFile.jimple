public final class org.apache.poi.hdf.extractor.NewOleFile extends java.io.RandomAccessFile
{
    private byte[] LAOLA_ID_ARRAY;
    private int _num_bbd_blocks;
    private int _root_startblock;
    private int _sbd_startblock;
    private long _size;
    private int[] _bbd_list;
    protected int[] _big_block_depot;
    protected int[] _small_block_depot;
    java.util.Hashtable _propertySetsHT;
    java.util.Vector _propertySetsV;

    public void <init>(java.lang.String, java.lang.String) throws java.io.FileNotFoundException
    {
        java.lang.Throwable $r6;
        byte[] $r3;
        org.apache.poi.hdf.extractor.NewOleFile r0;
        java.util.Vector $r5;
        java.lang.String r1, r2;
        java.util.Hashtable $r4;

        r0 := @this: org.apache.poi.hdf.extractor.NewOleFile;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = newarray (byte)[8];

        $r3[0] = -48;

        $r3[1] = -49;

        $r3[2] = 17;

        $r3[3] = -32;

        $r3[4] = -95;

        $r3[5] = -79;

        $r3[6] = 26;

        $r3[7] = -31;

        r0.<org.apache.poi.hdf.extractor.NewOleFile: byte[] LAOLA_ID_ARRAY> = $r3;

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.NewOleFile: java.util.Hashtable _propertySetsHT> = $r4;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.NewOleFile: java.util.Vector _propertySetsV> = $r5;

     label1:
        specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void init()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void init() throws java.io.IOException
    {
        byte[] $r1, r7, $r11;
        org.apache.poi.hdf.extractor.NewOleFile r0;
        byte $b18, $b19;
        int[] $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10;
        long $l1, $l13;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i14, $i15, $i16, $i17, i20, i21, i22, i23, $i24, i25, $i26, $i27;
        java.io.IOException $r13;

        r0 := @this: org.apache.poi.hdf.extractor.NewOleFile;

        i20 = 0;

     label01:
        $r1 = r0.<org.apache.poi.hdf.extractor.NewOleFile: byte[] LAOLA_ID_ARRAY>;

        $i0 = lengthof $r1;

        if i20 >= $i0 goto label03;

        $r11 = r0.<org.apache.poi.hdf.extractor.NewOleFile: byte[] LAOLA_ID_ARRAY>;

        $b18 = $r11[i20];

        $b19 = virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: byte readByte()>();

        $i26 = (int) $b18;

        $i27 = (int) $b19;

        if $i26 == $i27 goto label02;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("Not an OLE file");

        throw $r13;

     label02:
        i20 = i20 + 1;

        goto label01;

     label03:
        $l1 = virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: long length()>();

        r0.<org.apache.poi.hdf.extractor.NewOleFile: long _size> = $l1;

        $i2 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readInt(long)>(44L);

        r0.<org.apache.poi.hdf.extractor.NewOleFile: int _num_bbd_blocks> = $i2;

        $i3 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readInt(long)>(48L);

        r0.<org.apache.poi.hdf.extractor.NewOleFile: int _root_startblock> = $i3;

        $i4 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readInt(long)>(60L);

        r0.<org.apache.poi.hdf.extractor.NewOleFile: int _sbd_startblock> = $i4;

        $i5 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int _num_bbd_blocks>;

        $r2 = newarray (int)[$i5];

        r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _bbd_list> = $r2;

        $i6 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int _num_bbd_blocks>;

        if $i6 > 109 goto label06;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>(76L);

        i21 = 0;

     label04:
        $i16 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int _num_bbd_blocks>;

        if i21 >= $i16 goto label05;

        $r10 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _bbd_list>;

        $i17 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        $r10[i21] = $i17;

        i21 = i21 + 1;

        goto label04;

     label05:
        goto label07;

     label06:
        specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void populateBbdList()>();

     label07:
        $i7 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int _num_bbd_blocks>;

        $i8 = $i7 * 128;

        $r3 = newarray (int)[$i8];

        r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _big_block_depot> = $r3;

        i22 = 0;

        i23 = 0;

     label08:
        $i24 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int _num_bbd_blocks>;

        if i23 >= $i24 goto label11;

        r7 = newarray (byte)[512];

        $r8 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _bbd_list>;

        $i10 = $r8[i23];

        $i11 = $i10 + 1;

        i12 = $i11 * 512;

        $l13 = (long) i12;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>($l13);

        i25 = 0;

     label09:
        if i25 >= 128 goto label10;

        $r9 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _big_block_depot>;

        $i14 = i22;

        i22 = i22 + 1;

        $i15 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        $r9[$i14] = $i15;

        i25 = i25 + 1;

        goto label09;

     label10:
        i23 = i23 + 1;

        goto label08;

     label11:
        $r4 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] createSmallBlockDepot()>();

        r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _small_block_depot> = $r4;

        $r5 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _big_block_depot>;

        $i9 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int _root_startblock>;

        $r6 = virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] readChain(int[],int)>($r5, $i9);

        specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void initializePropertySets(int[])>($r6);

        return;
    }

    public static void main(java.lang.String[])
    {
        org.apache.poi.hdf.extractor.NewOleFile $r0;
        java.lang.String[] r1;
        java.lang.String $r2;
        java.lang.Exception $r3;

        r1 := @parameter0: java.lang.String[];

     label1:
        $r0 = new org.apache.poi.hdf.extractor.NewOleFile;

        $r2 = r1[0];

        specialinvoke $r0.<org.apache.poi.hdf.extractor.NewOleFile: void <init>(java.lang.String,java.lang.String)>($r2, "r");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected int[] readChain(int[], int)
    {
        org.apache.poi.hdf.extractor.NewOleFile r2;
        int[] r0, r1, r3;
        int $i0, i1, $i2, $i3, $i4, i5, $i7;

        r2 := @this: org.apache.poi.hdf.extractor.NewOleFile;

        r0 := @parameter0: int[];

        i1 := @parameter1: int;

        $i0 = lengthof r0;

        r1 = newarray (int)[$i0];

        r1[0] = i1;

        i5 = 1;

     label1:
        $i2 = i5 - 1;

        $i3 = r1[$i2];

        $i4 = r0[$i3];

        $i7 = (int) -2;

        if $i4 == $i7 goto label2;

        r1[i5] = $i4;

        i5 = i5 + 1;

        goto label1;

     label2:
        r3 = newarray (int)[i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, i5);

        return r3;
    }

    private void initializePropertySets(int[]) throws java.io.IOException
    {
        byte[] r2;
        org.apache.poi.hdf.extractor.NewOleFile r1;
        java.util.Vector $r8;
        byte $b5, $b6, $b10, $b11, $b12, $b13, $b15, $b16, $b17, $b18, $b20, $b21, $b22, $b23, $b25, $b26, $b27, $b28, $b30, $b31, $b32, $b33, $b38, b43;
        int[] r0;
        org.apache.poi.hdf.extractor.PropertySet $r10;
        long $l4;
        short $s7;
        java.lang.StringBuffer $r9;
        int $i0, $i1, $i2, i3, $i8, i9, $i14, $i19, $i24, $i29, $i34, $i35, $i36, $i37, i40, i41, i42, $i44, $i45;
        java.lang.String $r5, $r7;
        java.util.Hashtable $r6;
        char $c39;

        r1 := @this: org.apache.poi.hdf.extractor.NewOleFile;

        r0 := @parameter0: int[];

        i40 = 0;

     label1:
        $i0 = lengthof r0;

        if i40 >= $i0 goto label7;

        $i1 = r0[i40];

        $i2 = $i1 + 1;

        i3 = $i2 * 512;

        $l4 = (long) i3;

        virtualinvoke r1.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>($l4);

        i41 = 0;

     label2:
        if i41 >= 4 goto label6;

        r2 = newarray (byte)[128];

        virtualinvoke r1.<org.apache.poi.hdf.extractor.NewOleFile: int read(byte[])>(r2);

        $b6 = r2[65];

        $b5 = r2[64];

        $s7 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte,byte)>($b6, $b5);

        $i44 = (int) $s7;

        $i8 = $i44 / 2;

        i9 = $i8 - 1;

        if i9 <= 0 goto label5;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(int)>(i9);

        i42 = 0;

     label3:
        if i42 >= i9 goto label4;

        $i37 = i42 * 2;

        $b38 = r2[$i37];

        $c39 = (char) $b38;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c39);

        i42 = i42 + 1;

        goto label3;

     label4:
        b43 = r2[66];

        $b13 = r2[71];

        $b12 = r2[70];

        $b11 = r2[69];

        $b10 = r2[68];

        $i14 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte,byte,byte,byte)>($b13, $b12, $b11, $b10);

        $b18 = r2[75];

        $b17 = r2[74];

        $b16 = r2[73];

        $b15 = r2[72];

        $i19 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte,byte,byte,byte)>($b18, $b17, $b16, $b15);

        $b23 = r2[79];

        $b22 = r2[78];

        $b21 = r2[77];

        $b20 = r2[76];

        $i24 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte,byte,byte,byte)>($b23, $b22, $b21, $b20);

        $b28 = r2[119];

        $b27 = r2[118];

        $b26 = r2[117];

        $b25 = r2[116];

        $i29 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte,byte,byte,byte)>($b28, $b27, $b26, $b25);

        $b33 = r2[123];

        $b32 = r2[122];

        $b31 = r2[121];

        $b30 = r2[120];

        $i34 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte,byte,byte,byte)>($b33, $b32, $b31, $b30);

        $r10 = new org.apache.poi.hdf.extractor.PropertySet;

        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $i35 = i40 * 4;

        $i36 = $i35 + i41;

        $i45 = (int) b43;

        specialinvoke $r10.<org.apache.poi.hdf.extractor.PropertySet: void <init>(java.lang.String,int,int,int,int,int,int,int)>($r5, $i45, $i14, $i19, $i24, $i29, $i34, $i36);

        $r6 = r1.<org.apache.poi.hdf.extractor.NewOleFile: java.util.Hashtable _propertySetsHT>;

        $r7 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

        $r8 = r1.<org.apache.poi.hdf.extractor.NewOleFile: java.util.Vector _propertySetsV>;

        virtualinvoke $r8.<java.util.Vector: boolean add(java.lang.Object)>($r10);

     label5:
        i41 = i41 + 1;

        goto label2;

     label6:
        i40 = i40 + 1;

        goto label1;

     label7:
        return;
    }

    private int[] createSmallBlockDepot() throws java.io.IOException
    {
        org.apache.poi.hdf.extractor.NewOleFile r0;
        long $l8;
        int[] $r1, $r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i9, i10, i11, $i13;

        r0 := @this: org.apache.poi.hdf.extractor.NewOleFile;

        $r1 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _big_block_depot>;

        $i0 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int _sbd_startblock>;

        $r2 = virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] readChain(int[],int)>($r1, $i0);

        $i1 = lengthof $r2;

        $i2 = $i1 * 128;

        r3 = newarray (int)[$i2];

        i10 = 0;

     label1:
        $i3 = lengthof $r2;

        if i10 >= $i3 goto label4;

        $i4 = $r2[i10];

        $i13 = (int) -2;

        if $i4 == $i13 goto label4;

        $i5 = $r2[i10];

        $i6 = $i5 + 1;

        i7 = $i6 * 512;

        $l8 = (long) i7;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>($l8);

        i11 = 0;

     label2:
        if i11 >= 128 goto label3;

        $i9 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        r3[i11] = $i9;

        i11 = i11 + 1;

        goto label2;

     label3:
        i10 = i10 + 1;

        goto label1;

     label4:
        return r3;
    }

    private void populateBbdList() throws java.io.IOException
    {
        org.apache.poi.hdf.extractor.NewOleFile r0;
        long $l6, $l11;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, $i22;

        r0 := @this: org.apache.poi.hdf.extractor.NewOleFile;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>(76L);

        i15 = 0;

     label1:
        if i15 >= 109 goto label2;

        $r2 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _bbd_list>;

        $i14 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        $r2[i15] = $i14;

        i15 = i15 + 1;

        goto label1;

     label2:
        i16 = 109;

        $i0 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int _num_bbd_blocks>;

        i17 = $i0 - 109;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>(72L);

        $i1 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>(68L);

        $i2 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        $i3 = $i2 + 1;

        i18 = $i3 * 512;

        i19 = 0;

     label3:
        if i19 >= $i1 goto label7;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(127, i17);

        i20 = 0;

     label4:
        if i20 >= $i4 goto label5;

        $i9 = i20 * 4;

        $i10 = i18 + $i9;

        $l11 = (long) $i10;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>($l11);

        $r1 = r0.<org.apache.poi.hdf.extractor.NewOleFile: int[] _bbd_list>;

        $i12 = i16;

        i16 = i16 + 1;

        $i13 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        $r1[$i12] = $i13;

        i20 = i20 + 1;

        goto label4;

     label5:
        if $i4 != 127 goto label6;

        $i5 = i18 + 508;

        $l6 = (long) $i5;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>($l6);

        $i7 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        $i8 = $i7 + 1;

        i18 = $i8 * 512;

        $i22 = (int) -127;

        i17 = i17 + $i22;

     label6:
        i19 = i19 + 1;

        goto label3;

     label7:
        return;
    }

    private int readInt(long) throws java.io.IOException
    {
        int $i1;
        org.apache.poi.hdf.extractor.NewOleFile r0;
        long l0;

        r0 := @this: org.apache.poi.hdf.extractor.NewOleFile;

        l0 := @parameter0: long;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: void seek(long)>(l0);

        $i1 = specialinvoke r0.<org.apache.poi.hdf.extractor.NewOleFile: int readIntLE()>();

        return $i1;
    }

    private int readIntLE() throws java.io.IOException
    {
        byte[] r0;
        org.apache.poi.hdf.extractor.NewOleFile r1;
        byte $b0, $b1, $b2, $b3;
        int $i4;

        r1 := @this: org.apache.poi.hdf.extractor.NewOleFile;

        r0 = newarray (byte)[4];

        virtualinvoke r1.<org.apache.poi.hdf.extractor.NewOleFile: int read(byte[])>(r0);

        $b3 = r0[3];

        $b2 = r0[2];

        $b1 = r0[1];

        $b0 = r0[0];

        $i4 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte,byte,byte,byte)>($b3, $b2, $b1, $b0);

        return $i4;
    }
}
