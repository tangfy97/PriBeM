public class com.hp.hpl.jena.tdb.nodetable.NodecBinary extends java.lang.Object implements com.hp.hpl.jena.tdb.nodetable.Nodec
{
    private static byte codeNull;
    private static byte codeURI;
    private static byte codeBNode;
    private static byte codeLiteral;
    private static byte codeLiteralLang;
    private static byte codeLiteralDT;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.nodetable.NodecBinary r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodecBinary;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int maxSize(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodecBinary r0;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodecBinary;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        return 0;
    }

    public int encode(com.hp.hpl.jena.graph.Node, java.nio.ByteBuffer, com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.tdb.nodetable.NodecBinary r0;
        com.hp.hpl.jena.graph.Node r1;
        java.nio.ByteBuffer r2;
        com.hp.hpl.jena.shared.PrefixMapping r3;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodecBinary;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: java.nio.ByteBuffer;

        r3 := @parameter2: com.hp.hpl.jena.shared.PrefixMapping;

        return 0;
    }

    public com.hp.hpl.jena.graph.Node decode(java.nio.ByteBuffer, com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.tdb.nodetable.NodecBinary r0;
        java.nio.ByteBuffer r1;
        com.hp.hpl.jena.shared.PrefixMapping r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodecBinary;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: com.hp.hpl.jena.shared.PrefixMapping;

        return null;
    }

    private void encode(java.lang.String, java.nio.ByteBuffer, int)
    {
        com.hp.hpl.jena.tdb.nodetable.NodecBinary r0;
        int i0;
        java.lang.String r1;
        java.nio.ByteBuffer r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodecBinary;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.ByteBuffer;

        i0 := @parameter2: int;

        return;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.nodetable.NodecBinary: byte codeNull> = 0;

        <com.hp.hpl.jena.tdb.nodetable.NodecBinary: byte codeURI> = 1;

        <com.hp.hpl.jena.tdb.nodetable.NodecBinary: byte codeBNode> = 2;

        <com.hp.hpl.jena.tdb.nodetable.NodecBinary: byte codeLiteral> = 3;

        <com.hp.hpl.jena.tdb.nodetable.NodecBinary: byte codeLiteralLang> = 4;

        <com.hp.hpl.jena.tdb.nodetable.NodecBinary: byte codeLiteralDT> = 5;

        return;
    }
}
