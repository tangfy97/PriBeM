public abstract class org.apache.james.mime4j.dom.SingleBody extends java.lang.Object implements org.apache.james.mime4j.dom.Body
{
    private org.apache.james.mime4j.dom.Entity parent;
    static final int DEFAULT_ENCODING_BUFFER_SIZE;

    protected void <init>()
    {
        org.apache.james.mime4j.dom.SingleBody r0;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.dom.SingleBody: org.apache.james.mime4j.dom.Entity parent> = null;

        return;
    }

    public org.apache.james.mime4j.dom.Entity getParent()
    {
        org.apache.james.mime4j.dom.Entity $r1;
        org.apache.james.mime4j.dom.SingleBody r0;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        $r1 = r0.<org.apache.james.mime4j.dom.SingleBody: org.apache.james.mime4j.dom.Entity parent>;

        return $r1;
    }

    public void setParent(org.apache.james.mime4j.dom.Entity)
    {
        org.apache.james.mime4j.dom.Entity r1;
        org.apache.james.mime4j.dom.SingleBody r0;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        r1 := @parameter0: org.apache.james.mime4j.dom.Entity;

        r0.<org.apache.james.mime4j.dom.SingleBody: org.apache.james.mime4j.dom.Entity parent> = r1;

        return;
    }

    public abstract java.io.InputStream getInputStream() throws java.io.IOException;

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        org.apache.james.mime4j.dom.SingleBody r1;
        java.lang.IllegalArgumentException $r3;
        java.io.InputStream $r2;

        r1 := @this: org.apache.james.mime4j.dom.SingleBody;

        r0 := @parameter0: java.io.OutputStream;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<org.apache.james.mime4j.dom.SingleBody: java.io.InputStream getInputStream()>();

        staticinvoke <org.apache.james.mime4j.dom.SingleBody: void copy(java.io.InputStream,java.io.OutputStream)>($r2, r0);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        return;
    }

    public org.apache.james.mime4j.dom.SingleBody copy()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.james.mime4j.dom.SingleBody r1;

        r1 := @this: org.apache.james.mime4j.dom.SingleBody;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void dispose()
    {
        org.apache.james.mime4j.dom.SingleBody r0;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        return;
    }

    private static void copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        int $i0, $i2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        r0 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r0);

        $i2 = (int) -1;

        if $i2 == $i0 goto label2;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i0);

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.james.mime4j.dom.SingleBody: int DEFAULT_ENCODING_BUFFER_SIZE> = 1024;

        return;
    }
}
