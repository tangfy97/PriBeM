class org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice extends java.lang.Object
{
    org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceHead;
    org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice r0;
        java.lang.AssertionError $r2;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail> = r1;

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceHead> = r1;

        return;
    }

    void apply(org.apache.lucene.index.BufferedDeletes, int)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice r0;
        org.apache.lucene.index.BufferedDeletes r3;
        java.lang.AssertionError $r6;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r1, $r2, $r4, $r5, r7;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        r3 := @parameter0: org.apache.lucene.index.BufferedDeletes;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceHead>;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        if $r2 != $r1 goto label1;

        return;

     label1:
        r7 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceHead>;

     label2:
        $r5 = r7.<org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node next>;

        r7 = $r5;

        $z0 = <org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        if $r5 != null goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("slice property violated between the head on the tail must not be a null node");

        throw $r6;

     label3:
        virtualinvoke $r5.<org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: void apply(org.apache.lucene.index.BufferedDeletes,int)>(r3, i0);

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        if $r5 != $r4 goto label2;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void reset()>();

        return;
    }

    void reset()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceHead> = $r1;

        return;
    }

    boolean isTailItem(java.lang.Object)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice r0;
        java.lang.Object r2, $r3;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        $r3 = $r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: java.lang.Object item>;

        if $r3 != r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isEmpty()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice;

        $r2 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceHead>;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node sliceTail>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/DocumentsWriterDeleteQueue;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: boolean $assertionsDisabled> = $z1;

        return;
    }
}
