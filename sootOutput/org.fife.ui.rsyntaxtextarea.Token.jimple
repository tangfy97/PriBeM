public abstract class org.fife.ui.rsyntaxtextarea.Token extends java.lang.Object implements org.fife.ui.rsyntaxtextarea.TokenTypes
{
    public char[] text;
    public int textOffset;
    public int textCount;
    public int offset;
    public int type;
    private boolean hyperlink;
    private org.fife.ui.rsyntaxtextarea.Token nextToken;
    private int languageIndex;
    private java.awt.geom.Rectangle2D$Float bgRect;
    private static char[] tabBuf;

    public void <init>()
    {
        int $i1, $i3, $i5;
        java.awt.geom.Rectangle2D$Float $r2;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text> = null;

        $i1 = (int) -1;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset> = $i1;

        $i3 = (int) -1;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount> = $i3;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int type> = 0;

        $i5 = (int) -1;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int offset> = $i5;

        r0.<org.fife.ui.rsyntaxtextarea.Token: boolean hyperlink> = 0;

        r0.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken> = null;

        $r2 = new java.awt.geom.Rectangle2D$Float;

        specialinvoke $r2.<java.awt.geom.Rectangle2D$Float: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.Token: java.awt.geom.Rectangle2D$Float bgRect> = $r2;

        return;
    }

    public void <init>(char[], int, int, int, int)
    {
        int i0, i1, i2, i3;
        char[] r1;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: void <init>()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: void set(char[],int,int,int,int)>(r1, i0, i1, i2, i3);

        return;
    }

    public void <init>(org.fife.ui.rsyntaxtextarea.Token)
    {
        org.fife.ui.rsyntaxtextarea.Token r0, r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: void <init>()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: void copyFrom(org.fife.ui.rsyntaxtextarea.Token)>(r1);

        return;
    }

    public java.lang.StringBuffer appendHTMLRepresentation(java.lang.StringBuffer, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, boolean)
    {
        java.lang.StringBuffer r1, $r3;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: java.lang.StringBuffer appendHTMLRepresentation(java.lang.StringBuffer,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,boolean,boolean)>(r1, r2, z0, 0);

        return $r3;
    }

    public java.lang.StringBuffer appendHTMLRepresentation(java.lang.StringBuffer, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, boolean, boolean)
    {
        java.awt.Color $r7;
        org.fife.ui.rsyntaxtextarea.Style $r3;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r1;
        java.lang.StringBuffer r5, $r6, $r9, $r10, $r12;
        int $i0, $i1;
        java.lang.String $r8, $r11;
        boolean $z0, $z1, $z2, z3, z4, $z5, $z6, $z7, $z8, $z9;
        java.awt.Font $r4;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r0;
        org.fife.ui.rsyntaxtextarea.Token r2;

        r2 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r5 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        z3 := @parameter2: boolean;

        z4 := @parameter3: boolean;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.SyntaxScheme getSyntaxScheme()>();

        $i0 = r2.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        $r3 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style getStyle(int)>($i0);

        $i1 = r2.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        $r4 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Font getFontForTokenType(int)>($i1);

        $z0 = virtualinvoke $r4.<java.awt.Font: boolean isBold()>();

        if $z0 == 0 goto label1;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<b>");

     label1:
        $z1 = virtualinvoke $r4.<java.awt.Font: boolean isItalic()>();

        if $z1 == 0 goto label2;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<em>");

     label2:
        $z2 = $r3.<org.fife.ui.rsyntaxtextarea.Style: boolean underline>;

        if $z2 != 0 goto label3;

        $z8 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.Token: boolean isHyperlink()>();

        if $z8 == 0 goto label4;

     label3:
        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<u>");

     label4:
        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<font");

        if z3 == 0 goto label5;

        $r10 = virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" face=\"");

        $r11 = virtualinvoke $r4.<java.awt.Font: java.lang.String getFamily()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

     label5:
        $r6 = virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" color=\"");

        $r7 = $r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Color foreground>;

        $r8 = staticinvoke <org.fife.ui.rsyntaxtextarea.Token: java.lang.String getHTMLFormatForColor(java.awt.Color)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">");

        specialinvoke r2.<org.fife.ui.rsyntaxtextarea.Token: java.lang.StringBuffer appendHtmlLexeme(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,java.lang.StringBuffer,boolean)>(r0, r5, z4);

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</font>");

        $z5 = $r3.<org.fife.ui.rsyntaxtextarea.Style: boolean underline>;

        if $z5 != 0 goto label6;

        $z7 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.Token: boolean isHyperlink()>();

        if $z7 == 0 goto label7;

     label6:
        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</u>");

     label7:
        $z9 = virtualinvoke $r4.<java.awt.Font: boolean isItalic()>();

        if $z9 == 0 goto label8;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</em>");

     label8:
        $z6 = virtualinvoke $r4.<java.awt.Font: boolean isBold()>();

        if $z6 == 0 goto label9;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</b>");

     label9:
        return r5;
    }

    private final java.lang.StringBuffer appendHtmlLexeme(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, java.lang.StringBuffer, boolean)
    {
        boolean z0, z1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r8;
        java.lang.StringBuffer r1, $r10, $r11, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, $i19;
        java.lang.String r12, $r13, $r14;
        char c10;
        char[] $r2, $r3, $r4, $r5, $r6, $r7;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r8 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        r1 := @parameter1: java.lang.StringBuffer;

        z0 := @parameter2: boolean;

        z1 = 0;

        i16 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        i17 = i16;

        r12 = null;

     label01:
        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i2 = $i1 + $i0;

        if i16 >= $i2 goto label14;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        c10 = $r3[i16];

        $i19 = (int) c10;

        lookupswitch($i19)
        {
            case 9: goto label05;
            case 32: goto label02;
            case 60: goto label10;
            case 62: goto label11;
            default: goto label12;
        };

     label02:
        $r6 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i13 = i16 - i17;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r6, i17, $i13);

        i17 = i16 + 1;

        if z1 == 0 goto label03;

        $r13 = "&nbsp;";

        goto label04;

     label03:
        $r13 = " ";

     label04:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        z1 = 1;

        goto label13;

     label05:
        $r7 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i14 = i16 - i17;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r7, i17, $i14);

        i17 = i16 + 1;

        if z0 == 0 goto label07;

        if r12 != null goto label07;

        r12 = "";

        i18 = 0;

     label06:
        $i15 = virtualinvoke r8.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getTabSize()>();

        if i18 >= $i15 goto label07;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&nbsp;");

        r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        i18 = i18 + 1;

        goto label06;

     label07:
        if z0 == 0 goto label08;

        $r14 = r12;

        goto label09;

     label08:
        $r14 = "&#09;";

     label09:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        z1 = 0;

        goto label13;

     label10:
        $r5 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i12 = i16 - i17;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r5, i17, $i12);

        i17 = i16 + 1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&lt;");

        z1 = 0;

        goto label13;

     label11:
        $r4 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i11 = i16 - i17;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r4, i17, $i11);

        i17 = i16 + 1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&gt;");

        z1 = 0;

        goto label13;

     label12:
        z1 = 0;

     label13:
        i16 = i16 + 1;

        goto label01;

     label14:
        $i4 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i5 = $i4 + $i3;

        if i17 >= $i5 goto label15;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i7 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i6 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i8 = $i7 + $i6;

        $i9 = $i8 - i17;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r2, i17, $i9);

     label15:
        return r1;
    }

    public boolean containsPosition(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        if i0 < $i1 goto label1;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i4 = $i3 + $i2;

        if i0 >= $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void copyFrom(org.fife.ui.rsyntaxtextarea.Token)
    {
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r2;
        org.fife.ui.rsyntaxtextarea.Token r0, r1, $r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text> = $r2;

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset> = $i0;

        $i1 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount> = $i1;

        $i2 = r1.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int offset> = $i2;

        $i3 = r1.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int type> = $i3;

        $i4 = r1.<org.fife.ui.rsyntaxtextarea.Token: int languageIndex>;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int languageIndex> = $i4;

        $r3 = r1.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken>;

        r0.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken> = $r3;

        return;
    }

    public int documentToToken(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i3 = $i2 - $i1;

        $i4 = i0 + $i3;

        return $i4;
    }

    public boolean endsWith(char[])
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, i11, $i12, $i13;
        char $c9, $c10;
        char[] r0, $r2;
        org.fife.ui.rsyntaxtextarea.Token r1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r0 := @parameter0: char[];

        if r0 == null goto label1;

        $i1 = lengthof r0;

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        if $i1 <= $i0 goto label2;

     label1:
        return 0;

     label2:
        $i3 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i2 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i5 = $i3 + $i2;

        $i4 = lengthof r0;

        i6 = $i5 - $i4;

        i11 = 0;

     label3:
        $i7 = lengthof r0;

        if i11 >= $i7 goto label5;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i8 = i6 + i11;

        $c10 = $r2[$i8];

        $c9 = r0[i11];

        $i12 = (int) $c10;

        $i13 = (int) $c9;

        if $i12 == $i13 goto label4;

        return 0;

     label4:
        i11 = i11 + 1;

        goto label3;

     label5:
        return 1;
    }

    private static final java.lang.String getHTMLFormatForColor(java.awt.Color)
    {
        java.awt.Color r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r2, $r3, $r9, r19, r20, r21;

        r0 := @parameter0: java.awt.Color;

        if r0 != null goto label1;

        return "black";

     label1:
        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        r19 = $r1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 1 goto label2;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        r20 = $r2;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i3 != 1 goto label3;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r20 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        r21 = $r3;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i5 != 1 goto label4;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        r21 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r19);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String getHTMLRepresentation(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        java.lang.StringBuffer $r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        java.lang.String $r3;
        org.fife.ui.rsyntaxtextarea.Token r1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r2 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.Token: java.lang.StringBuffer appendHTMLRepresentation(java.lang.StringBuffer,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,boolean)>($r0, r2, 1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public int getLanguageIndex()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int languageIndex>;

        return $i0;
    }

    public org.fife.ui.rsyntaxtextarea.Token getLastNonCommentNonWhitespaceToken()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.Token r0, r1, r2;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 = null;

        r2 = r0;

     label1:
        if r2 == null goto label5;

        $z0 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z0 == 0 goto label5;

        $i0 = r2.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 21: goto label2;
            default: goto label3;
        };

     label2:
        goto label4;

     label3:
        r1 = r2;

     label4:
        r2 = r2.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken>;

        goto label1;

     label5:
        return r1;
    }

    public org.fife.ui.rsyntaxtextarea.Token getLastPaintableToken()
    {
        org.fife.ui.rsyntaxtextarea.Token r0, $r1, $r2, r3;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r3 = r0;

     label1:
        $z0 = virtualinvoke r3.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z0 == 0 goto label4;

        $r1 = r3.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken>;

        if $r1 == null goto label2;

        $r2 = r3.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken>;

        $z1 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z1 != 0 goto label3;

     label2:
        return r3;

     label3:
        r3 = r3.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken>;

        goto label1;

     label4:
        return null;
    }

    public java.lang.String getLexeme()
    {
        int $i0, $i1;
        char[] $r2;
        java.lang.String $r0;
        org.fife.ui.rsyntaxtextarea.Token r1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $r0 = new java.lang.String;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i1 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i1, $i0);

        return $r0;
    }

    public abstract int getListOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, javax.swing.text.TabExpander, float, float);

    public org.fife.ui.rsyntaxtextarea.Token getNextToken()
    {
        org.fife.ui.rsyntaxtextarea.Token r0, $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken>;

        return $r1;
    }

    public int getOffsetBeforeX(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, javax.swing.text.TabExpander, float, float)
    {
        byte $b10;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i9, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r0;
        char $c7, $c8;
        java.awt.FontMetrics $r2;
        float f0, $f1, f2, f3;
        char[] $r3, $r4;
        javax.swing.text.TabExpander r5;
        org.fife.ui.rsyntaxtextarea.Token r1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        r5 := @parameter1: javax.swing.text.TabExpander;

        f0 := @parameter2: float;

        f2 := @parameter3: float;

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.FontMetrics getFontMetricsForTokenType(int)>($i0);

        i16 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i1 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        i2 = i16 + $i1;

        f3 = f0;

     label1:
        if i16 >= i2 goto label5;

        $r3 = r1.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $c7 = $r3[i16];

        $i17 = (int) $c7;

        if $i17 != 9 goto label2;

        f3 = interfaceinvoke r5.<javax.swing.text.TabExpander: float nextTabStop(float,int)>(f3, 0);

        goto label3;

     label2:
        $r4 = r1.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $c8 = $r4[i16];

        $i9 = virtualinvoke $r2.<java.awt.FontMetrics: int charWidth(char)>($c8);

        $f1 = (float) $i9;

        f3 = f3 + $f1;

     label3:
        $b10 = f3 cmpl f2;

        $i18 = (int) $b10;

        if $i18 <= 0 goto label4;

        $i11 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i12 = i16 - $i11;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i12, 1);

        $i14 = r1.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i15 = $i14 + $i13;

        return $i15;

     label4:
        i16 = i16 + 1;

        goto label1;

     label5:
        $i4 = r1.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i3 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i5 = $i4 + $i3;

        $i6 = $i5 - 1;

        return $i6;
    }

    public float getWidth(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, javax.swing.text.TabExpander, float)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r1;
        int $i0;
        float f0, $f1;
        javax.swing.text.TabExpander r2;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        r2 := @parameter1: javax.swing.text.TabExpander;

        f0 := @parameter2: float;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $f1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: float getWidthUpTo(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,float)>($i0, r1, r2, f0);

        return $f1;
    }

    public abstract float getWidthUpTo(int, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, javax.swing.text.TabExpander, float);

    public boolean is(int, char[])
    {
        char $c7, $c8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i9, $i10, $i11;
        char[] r1, $r2;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        r1 := @parameter1: char[];

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i1 != i0 goto label4;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i2 = lengthof r1;

        if $i3 != $i2 goto label4;

        i9 = 0;

     label1:
        $i4 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        if i9 >= $i4 goto label3;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i5 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i6 = $i5 + i9;

        $c8 = $r2[$i6];

        $c7 = r1[i9];

        $i10 = (int) $c8;

        $i11 = (int) $c7;

        if $i10 == $i11 goto label2;

        return 0;

     label2:
        i9 = i9 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public boolean is(int, java.lang.String)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String r1, $r2;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i1 != i0 goto label1;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 != $i3 goto label1;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: java.lang.String getLexeme()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isComment()
    {
        int $i0, $i1;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i0 < 1 goto label1;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i1 > 5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isHyperlink()
    {
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.Token: boolean hyperlink>;

        return $z0;
    }

    public boolean isIdentifier()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i0 != 20 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isLeftCurly()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i0 != 22 goto label1;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(char)>(123);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isRightCurly()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i0 != 22 goto label1;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(char)>(125);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isPaintable()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSingleChar(char)
    {
        char c2, $c3;
        int $i0, $i1, $i4, $i5;
        char[] $r1;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        c2 := @parameter0: char;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        if $i0 != 1 goto label1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $c3 = $r1[$i1];

        $i4 = (int) $c3;

        $i5 = (int) c2;

        if $i4 != $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSingleChar(int, char)
    {
        int i0, $i1;
        char c2;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        c2 := @parameter1: char;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i1 != i0 goto label1;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(char)>(c2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isWhitespace()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i0 != 21 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public abstract java.awt.Rectangle listOffsetToView(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, javax.swing.text.TabExpander, int, int, java.awt.Rectangle);

    public void makeStartAt(int)
    {
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15;
        java.lang.String $r9;
        java.lang.IllegalArgumentException $r1;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        if i0 < $i1 goto label1;

        $i8 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i7 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i9 = $i8 + $i7;

        if i0 < $i9 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("pos ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not in range ");

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $i4 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i5 = $i4 + $i3;

        $i6 = $i5 - 1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label2:
        $i10 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        i11 = i0 - $i10;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int offset> = i0;

        $i12 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i13 = $i12 + i11;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset> = $i13;

        $i14 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i15 = $i14 - i11;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount> = $i15;

        return;
    }

    public void moveOffset(int)
    {
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r7;
        java.lang.IllegalArgumentException $r0;
        org.fife.ui.rsyntaxtextarea.Token r5;

        r5 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = r5.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        if i0 <= $i2 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("amt ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not in range 0-");

        $i1 = r5.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label2:
        $i3 = r5.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i4 = $i3 + i0;

        r5.<org.fife.ui.rsyntaxtextarea.Token: int offset> = $i4;

        $i5 = r5.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i6 = $i5 + i0;

        r5.<org.fife.ui.rsyntaxtextarea.Token: int textOffset> = $i6;

        $i7 = r5.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i8 = $i7 - i0;

        r5.<org.fife.ui.rsyntaxtextarea.Token: int textCount> = $i8;

        return;
    }

    public final float paint(java.awt.Graphics2D, float, float, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, javax.swing.text.TabExpander)
    {
        java.awt.Graphics2D r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        float f0, f1, $f2;
        javax.swing.text.TabExpander r3;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter0: java.awt.Graphics2D;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        r3 := @parameter4: javax.swing.text.TabExpander;

        $f2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: float paint(java.awt.Graphics2D,float,float,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,float)>(r1, f0, f1, r2, r3, 0.0F);

        return $f2;
    }

    public abstract float paint(java.awt.Graphics2D, float, float, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, javax.swing.text.TabExpander, float);

    protected void paintBackground(float, float, float, float, java.awt.Graphics2D, int, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, java.awt.Color)
    {
        java.awt.Color $r1, r3, $r6;
        java.awt.geom.Rectangle2D$Float $r5;
        java.awt.Graphics2D r2;
        int i0, $i1, $i2, $i3, $i4;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r0;
        float f0, f1, $f2, f3, f4, $f5, $f6, $f7;
        org.fife.ui.rsyntaxtextarea.Token r4;

        r4 := @this: org.fife.ui.rsyntaxtextarea.Token;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f3 := @parameter2: float;

        f4 := @parameter3: float;

        r2 := @parameter4: java.awt.Graphics2D;

        i0 := @parameter5: int;

        r0 := @parameter6: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        r3 := @parameter7: java.awt.Color;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getBackground()>();

        if $r1 == null goto label1;

        $r6 = $r1;

        goto label2;

     label1:
        $r6 = <java.awt.Color: java.awt.Color WHITE>;

     label2:
        virtualinvoke r2.<java.awt.Graphics2D: void setXORMode(java.awt.Color)>($r6);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r3);

        $r5 = r4.<org.fife.ui.rsyntaxtextarea.Token: java.awt.geom.Rectangle2D$Float bgRect>;

        $f2 = (float) i0;

        $f5 = f1 - $f2;

        virtualinvoke $r5.<java.awt.geom.Rectangle2D$Float: void setRect(float,float,float,float)>(f0, $f5, f3, f4);

        $i4 = (int) f0;

        $f6 = (float) i0;

        $f7 = f1 - $f6;

        $i3 = (int) $f7;

        $i2 = (int) f3;

        $i1 = (int) f4;

        virtualinvoke r2.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i4, $i3, $i2, $i1);

        virtualinvoke r2.<java.awt.Graphics2D: void setPaintMode()>();

        return;
    }

    protected void paintTabLines(int, int, int, java.awt.Graphics2D, javax.swing.text.TabExpander, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        java.awt.Color $r7;
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r1;
        float $f0;
        java.awt.Graphics2D r6;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, i18, i19, i20, i21, i22, i23;
        char $c16;
        java.awt.FontMetrics $r2;
        char[] $r3, $r4, $r5, $r8, $r9, $r11;
        javax.swing.text.TabExpander r10;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i18 := @parameter2: int;

        r6 := @parameter3: java.awt.Graphics2D;

        r10 := @parameter4: javax.swing.text.TabExpander;

        r1 := @parameter5: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i0 == 21 goto label05;

        i19 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

     label01:
        $i13 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i12 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i14 = $i13 + $i12;

        if i19 >= $i14 goto label03;

        $r11 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $c16 = $r11[i19];

        $z0 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: boolean isWhitespace(char)>($c16);

        if $z0 != 0 goto label02;

        goto label03;

     label02:
        i19 = i19 + 1;

        goto label01;

     label03:
        $i15 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i17 = i19 - $i15;

        if $i17 >= 2 goto label04;

        return;

     label04:
        $f0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: float getWidthUpTo(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,float)>($i17, r1, r10, 0.0F);

        i18 = (int) $f0;

     label05:
        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        $r2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.FontMetrics getFontMetricsForTokenType(int)>($i1);

        $i2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getTabSize()>();

        $r3 = <org.fife.ui.rsyntaxtextarea.Token: char[] tabBuf>;

        if $r3 == null goto label06;

        $r9 = <org.fife.ui.rsyntaxtextarea.Token: char[] tabBuf>;

        $i10 = lengthof $r9;

        if $i10 >= $i2 goto label08;

     label06:
        $r4 = newarray (char)[$i2];

        <org.fife.ui.rsyntaxtextarea.Token: char[] tabBuf> = $r4;

        i20 = 0;

     label07:
        if i20 >= $i2 goto label08;

        $r8 = <org.fife.ui.rsyntaxtextarea.Token: char[] tabBuf>;

        $r8[i20] = 32;

        i20 = i20 + 1;

        goto label07;

     label08:
        $r5 = <org.fife.ui.rsyntaxtextarea.Token: char[] tabBuf>;

        $i3 = virtualinvoke $r2.<java.awt.FontMetrics: int charsWidth(char[],int,int)>($r5, 0, $i2);

        $r7 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getTabLineColor()>();

        virtualinvoke r6.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

        i21 = i4 + $i3;

        $i6 = virtualinvoke $r2.<java.awt.FontMetrics: int getAscent()>();

        $i11 = i5 - $i6;

        i22 = $i11;

        $i7 = $i11 & 1;

        if $i7 <= 0 goto label09;

        i22 = $i11 + 1;

     label09:
        if i21 >= i18 goto label12;

        i23 = i22;

        $i8 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        i9 = i22 + $i8;

     label10:
        if i23 >= i9 goto label11;

        virtualinvoke r6.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i21, i23, i21, i23);

        i23 = i23 + 2;

        goto label10;

     label11:
        i21 = i21 + $i3;

        goto label09;

     label12:
        return;
    }

    public void set(char[], int, int, int, int)
    {
        int i0, i1, $i2, $i3, i4, i5;
        char[] r1;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i5 := @parameter3: int;

        i4 := @parameter4: int;

        r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text> = r1;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset> = i0;

        $i2 = i1 - i0;

        $i3 = $i2 + 1;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount> = $i3;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int type> = i4;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int offset> = i5;

        r0.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken> = null;

        return;
    }

    public void setHyperlink(boolean)
    {
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        z0 := @parameter0: boolean;

        r0.<org.fife.ui.rsyntaxtextarea.Token: boolean hyperlink> = z0;

        return;
    }

    public void setLanguageIndex(int)
    {
        int i0;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        r0.<org.fife.ui.rsyntaxtextarea.Token: int languageIndex> = i0;

        return;
    }

    public void setNextToken(org.fife.ui.rsyntaxtextarea.Token)
    {
        org.fife.ui.rsyntaxtextarea.Token r0, r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        r0.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken> = r1;

        return;
    }

    public boolean startsWith(char[])
    {
        char $c5, $c6;
        int $i0, $i1, $i2, $i3, $i4, i7, $i8, $i9;
        char[] r0, $r2;
        org.fife.ui.rsyntaxtextarea.Token r1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.Token;

        r0 := @parameter0: char[];

        $i1 = lengthof r0;

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        if $i1 > $i0 goto label4;

        i7 = 0;

     label1:
        $i2 = lengthof r0;

        if i7 >= $i2 goto label3;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i3 = r1.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i4 = $i3 + i7;

        $c6 = $r2[$i4];

        $c5 = r0[i7];

        $i8 = (int) $c6;

        $i9 = (int) $c5;

        if $i8 == $i9 goto label2;

        return 0;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public int tokenToDocument(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        org.fife.ui.rsyntaxtextarea.Token r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Token;

        i0 := @parameter0: int;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i3 = $i2 - $i1;

        $i4 = i0 + $i3;

        return $i4;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r2, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r22, $r23, $r24;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r19, $r21, $r25;
        boolean $z0, $z1;
        char[] $r3;
        org.fife.ui.rsyntaxtextarea.Token r1, $r16;

        r1 := @this: org.fife.ui.rsyntaxtextarea.Token;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[Token: ");

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i0 != 0 goto label1;

        $r19 = "<null token>";

        goto label6;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text: \'");

        $r3 = r1.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        if $r3 != null goto label2;

        $r21 = "<null>";

        goto label5;

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.Token: java.lang.String getLexeme()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("offset: ");

        $i1 = r1.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; type: ");

        $i2 = r1.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("isPaintable: ");

        $z0 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; nextToken==null: ");

        $r16 = r1.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token nextToken>;

        if $r16 != null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        $r21 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r19 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        $r23 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r25;
    }
}
