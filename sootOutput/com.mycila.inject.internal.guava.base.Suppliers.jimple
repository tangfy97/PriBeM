public final class com.mycila.inject.internal.guava.base.Suppliers extends java.lang.Object
{

    private void <init>()
    {
        com.mycila.inject.internal.guava.base.Suppliers r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Suppliers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.mycila.inject.internal.guava.base.Supplier compose(com.mycila.inject.internal.guava.base.Function, com.mycila.inject.internal.guava.base.Supplier)
    {
        com.mycila.inject.internal.guava.base.Supplier r1;
        com.mycila.inject.internal.guava.base.Function r0;
        com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition $r2;

        r0 := @parameter0: com.mycila.inject.internal.guava.base.Function;

        r1 := @parameter1: com.mycila.inject.internal.guava.base.Supplier;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = new com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition;

        specialinvoke $r2.<com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition: void <init>(com.mycila.inject.internal.guava.base.Function,com.mycila.inject.internal.guava.base.Supplier)>(r0, r1);

        return $r2;
    }

    public static com.mycila.inject.internal.guava.base.Supplier memoize(com.mycila.inject.internal.guava.base.Supplier)
    {
        com.mycila.inject.internal.guava.base.Supplier r0, $r2, $r3;
        com.mycila.inject.internal.guava.base.Suppliers$MemoizingSupplier $r4;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: com.mycila.inject.internal.guava.base.Supplier;

        $z0 = r0 instanceof com.mycila.inject.internal.guava.base.Suppliers$MemoizingSupplier;

        if $z0 == 0 goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r4 = new com.mycila.inject.internal.guava.base.Suppliers$MemoizingSupplier;

        $r3 = $r4;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = (com.mycila.inject.internal.guava.base.Supplier) $r1;

        specialinvoke $r4.<com.mycila.inject.internal.guava.base.Suppliers$MemoizingSupplier: void <init>(com.mycila.inject.internal.guava.base.Supplier)>($r2);

     label2:
        return $r3;
    }

    public static com.mycila.inject.internal.guava.base.Supplier memoizeWithExpiration(com.mycila.inject.internal.guava.base.Supplier, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r2;
        com.mycila.inject.internal.guava.base.Supplier r1;
        long l0;
        com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier $r0;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Supplier;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $r0 = new com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier;

        specialinvoke $r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: void <init>(com.mycila.inject.internal.guava.base.Supplier,long,java.util.concurrent.TimeUnit)>(r1, l0, r2);

        return $r0;
    }

    public static com.mycila.inject.internal.guava.base.Supplier ofInstance(java.lang.Object)
    {
        com.mycila.inject.internal.guava.base.Suppliers$SupplierOfInstance $r0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.base.Suppliers$SupplierOfInstance;

        specialinvoke $r0.<com.mycila.inject.internal.guava.base.Suppliers$SupplierOfInstance: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public static com.mycila.inject.internal.guava.base.Supplier synchronizedSupplier(com.mycila.inject.internal.guava.base.Supplier)
    {
        com.mycila.inject.internal.guava.base.Supplier r1, $r3;
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.base.Suppliers$ThreadSafeSupplier $r0;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Supplier;

        $r0 = new com.mycila.inject.internal.guava.base.Suppliers$ThreadSafeSupplier;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.mycila.inject.internal.guava.base.Supplier) $r2;

        specialinvoke $r0.<com.mycila.inject.internal.guava.base.Suppliers$ThreadSafeSupplier: void <init>(com.mycila.inject.internal.guava.base.Supplier)>($r3);

        return $r0;
    }

    public static com.mycila.inject.internal.guava.base.Function supplierFunction()
    {
        com.mycila.inject.internal.guava.base.Suppliers$SupplierFunction $r0;

        $r0 = <com.mycila.inject.internal.guava.base.Suppliers$SupplierFunction: com.mycila.inject.internal.guava.base.Suppliers$SupplierFunction INSTANCE>;

        return $r0;
    }
}
