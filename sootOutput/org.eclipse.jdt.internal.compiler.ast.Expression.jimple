public abstract class org.eclipse.jdt.internal.compiler.ast.Expression extends org.eclipse.jdt.internal.compiler.ast.Statement
{
    public org.eclipse.jdt.internal.compiler.impl.Constant constant;
    public int statementEnd;
    public int implicitConversion;
    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType;

    public static final boolean isConstantValueRepresentable(org.eclipse.jdt.internal.compiler.impl.Constant, int, int)
    {
        byte $b3, $b5, $b9, $b12, $b17, $b18, $b20, $b22, $b23, $b24, $b26, $b28, $b29, $b31, $b33, $b34, $b35, $b37, $b41, $b43, $b45, $b49, $b50, $b53, $b57, $b61, $b63, $b67, $b68, $b73, $b74, $b75, $b76, $b77, $b79, $b81, $b83, $b85, $b89, $b91, $b95, $b98;
        org.eclipse.jdt.internal.compiler.impl.Constant r0;
        long $l6, $l8, $l19, $l30, $l39, $l40, $l42, $l44, $l47, $l48, $l51, $l52, $l55, $l56, $l64, $l66, $l78, $l80, $l92, $l94;
        short $s10, $s21, $s32, $s46, $s59, $s60, $s62, $s65, $s69, $s71, $s82, $s96;
        int i0, i1, $i2, $i4, $i7, $i11, $i13, $i15, $i16, $i27, $i38, $i58, $i72, $i86, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        char $c14, $c25, $c36, $c54, $c70, $c84, $c87, $c88, $c90, $c93, $c97, $c99;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.impl.Constant;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 != i1 goto label001;

        return 1;

     label001:
        tableswitch(i0)
        {
            case 2: goto label002;
            case 3: goto label047;
            case 4: goto label062;
            case 5: goto label107;
            case 6: goto label107;
            case 7: goto label092;
            case 8: goto label032;
            case 9: goto label017;
            case 10: goto label077;
            default: goto label107;
        };

     label002:
        tableswitch(i1)
        {
            case 2: goto label003;
            case 3: goto label012;
            case 4: goto label010;
            case 5: goto label016;
            case 6: goto label016;
            case 7: goto label014;
            case 8: goto label004;
            case 9: goto label006;
            case 10: goto label008;
            default: goto label016;
        };

     label003:
        return 1;

     label004:
        $d22 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $c90 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $d23 = (double) $c90;

        $b91 = $d22 cmpl $d23;

        if $b91 != 0 goto label005;

        return 1;

     label005:
        return 0;

     label006:
        $f20 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $c88 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $f21 = (float) $c88;

        $b89 = $f20 cmpl $f21;

        if $b89 != 0 goto label007;

        return 1;

     label007:
        return 0;

     label008:
        $i86 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $c87 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $i100 = (int) $c87;

        if $i86 != $i100 goto label009;

        return 1;

     label009:
        return 0;

     label010:
        $s96 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $c97 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $i101 = (int) $s96;

        $i102 = (int) $c97;

        if $i101 != $i102 goto label011;

        return 1;

     label011:
        return 0;

     label012:
        $b98 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $c99 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $i103 = (int) $b98;

        $i104 = (int) $c99;

        if $i103 != $i104 goto label013;

        return 1;

     label013:
        return 0;

     label014:
        $l92 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $c93 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $l94 = (long) $c93;

        $b95 = $l92 cmp $l94;

        if $b95 != 0 goto label015;

        return 1;

     label015:
        return 0;

     label016:
        return 0;

     label017:
        tableswitch(i1)
        {
            case 2: goto label018;
            case 3: goto label027;
            case 4: goto label025;
            case 5: goto label031;
            case 6: goto label031;
            case 7: goto label029;
            case 8: goto label020;
            case 9: goto label022;
            case 10: goto label023;
            default: goto label031;
        };

     label018:
        $c25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $f11 = (float) $c25;

        $f12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $b26 = $f11 cmpl $f12;

        if $b26 != 0 goto label019;

        return 1;

     label019:
        return 0;

     label020:
        $d2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $f4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $d3 = (double) $f4;

        $b18 = $d2 cmpl $d3;

        if $b18 != 0 goto label021;

        return 1;

     label021:
        return 0;

     label022:
        return 1;

     label023:
        $i16 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $f2 = (float) $i16;

        $f3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $b17 = $f2 cmpl $f3;

        if $b17 != 0 goto label024;

        return 1;

     label024:
        return 0;

     label025:
        $s21 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $f7 = (float) $s21;

        $f8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $b22 = $f7 cmpl $f8;

        if $b22 != 0 goto label026;

        return 1;

     label026:
        return 0;

     label027:
        $b23 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $f9 = (float) $b23;

        $f10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $b24 = $f9 cmpl $f10;

        if $b24 != 0 goto label028;

        return 1;

     label028:
        return 0;

     label029:
        $l19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $f5 = (float) $l19;

        $f6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $b20 = $f5 cmpl $f6;

        if $b20 != 0 goto label030;

        return 1;

     label030:
        return 0;

     label031:
        return 0;

     label032:
        tableswitch(i1)
        {
            case 2: goto label033;
            case 3: goto label042;
            case 4: goto label040;
            case 5: goto label046;
            case 6: goto label046;
            case 7: goto label044;
            case 8: goto label035;
            case 9: goto label036;
            case 10: goto label038;
            default: goto label046;
        };

     label033:
        $c36 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $d14 = (double) $c36;

        $d15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b37 = $d14 cmpl $d15;

        if $b37 != 0 goto label034;

        return 1;

     label034:
        return 0;

     label035:
        return 1;

     label036:
        $f13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $d6 = (double) $f13;

        $d7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b29 = $d6 cmpl $d7;

        if $b29 != 0 goto label037;

        return 1;

     label037:
        return 0;

     label038:
        $i27 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $d4 = (double) $i27;

        $d5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b28 = $d4 cmpl $d5;

        if $b28 != 0 goto label039;

        return 1;

     label039:
        return 0;

     label040:
        $s32 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $d10 = (double) $s32;

        $d11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b33 = $d10 cmpl $d11;

        if $b33 != 0 goto label041;

        return 1;

     label041:
        return 0;

     label042:
        $b34 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $d12 = (double) $b34;

        $d13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b35 = $d12 cmpl $d13;

        if $b35 != 0 goto label043;

        return 1;

     label043:
        return 0;

     label044:
        $l30 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $d8 = (double) $l30;

        $d9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b31 = $d8 cmpl $d9;

        if $b31 != 0 goto label045;

        return 1;

     label045:
        return 0;

     label046:
        return 0;

     label047:
        tableswitch(i1)
        {
            case 2: goto label048;
            case 3: goto label058;
            case 4: goto label056;
            case 5: goto label061;
            case 6: goto label061;
            case 7: goto label059;
            case 8: goto label050;
            case 9: goto label052;
            case 10: goto label054;
            default: goto label061;
        };

     label048:
        $c84 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $b85 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $i105 = (int) $c84;

        $i106 = (int) $b85;

        if $i105 != $i106 goto label049;

        return 1;

     label049:
        return 0;

     label050:
        $d20 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b76 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $d21 = (double) $b76;

        $b77 = $d20 cmpl $d21;

        if $b77 != 0 goto label051;

        return 1;

     label051:
        return 0;

     label052:
        $f18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $b74 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $f19 = (float) $b74;

        $b75 = $f18 cmpl $f19;

        if $b75 != 0 goto label053;

        return 1;

     label053:
        return 0;

     label054:
        $i72 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $b73 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $i107 = (int) $b73;

        if $i72 != $i107 goto label055;

        return 1;

     label055:
        return 0;

     label056:
        $s82 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $b83 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $i108 = (int) $s82;

        $i109 = (int) $b83;

        if $i108 != $i109 goto label057;

        return 1;

     label057:
        return 0;

     label058:
        return 1;

     label059:
        $l78 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $b79 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $l80 = (long) $b79;

        $b81 = $l78 cmp $l80;

        if $b81 != 0 goto label060;

        return 1;

     label060:
        return 0;

     label061:
        return 0;

     label062:
        tableswitch(i1)
        {
            case 2: goto label063;
            case 3: goto label072;
            case 4: goto label071;
            case 5: goto label076;
            case 6: goto label076;
            case 7: goto label074;
            case 8: goto label065;
            case 9: goto label067;
            case 10: goto label069;
            default: goto label076;
        };

     label063:
        $c70 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $s71 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $i110 = (int) $c70;

        $i111 = (int) $s71;

        if $i110 != $i111 goto label064;

        return 1;

     label064:
        return 0;

     label065:
        $d18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $s62 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $d19 = (double) $s62;

        $b63 = $d18 cmpl $d19;

        if $b63 != 0 goto label066;

        return 1;

     label066:
        return 0;

     label067:
        $f16 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $s60 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $f17 = (float) $s60;

        $b61 = $f16 cmpl $f17;

        if $b61 != 0 goto label068;

        return 1;

     label068:
        return 0;

     label069:
        $i58 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $s59 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $i112 = (int) $s59;

        if $i58 != $i112 goto label070;

        return 1;

     label070:
        return 0;

     label071:
        return 1;

     label072:
        $b68 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $s69 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $i113 = (int) $b68;

        $i114 = (int) $s69;

        if $i113 != $i114 goto label073;

        return 1;

     label073:
        return 0;

     label074:
        $l64 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $s65 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $l66 = (long) $s65;

        $b67 = $l64 cmp $l66;

        if $b67 != 0 goto label075;

        return 1;

     label075:
        return 0;

     label076:
        return 0;

     label077:
        tableswitch(i1)
        {
            case 2: goto label078;
            case 3: goto label087;
            case 4: goto label085;
            case 5: goto label091;
            case 6: goto label091;
            case 7: goto label089;
            case 8: goto label080;
            case 9: goto label082;
            case 10: goto label084;
            default: goto label091;
        };

     label078:
        $c14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $i15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $i115 = (int) $c14;

        if $i115 != $i15 goto label079;

        return 1;

     label079:
        return 0;

     label080:
        $d0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $d1 = (double) $i4;

        $b5 = $d0 cmpl $d1;

        if $b5 != 0 goto label081;

        return 1;

     label081:
        return 0;

     label082:
        $f0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $f1 = (float) $i2;

        $b3 = $f0 cmpl $f1;

        if $b3 != 0 goto label083;

        return 1;

     label083:
        return 0;

     label084:
        return 1;

     label085:
        $s10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $i11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $i116 = (int) $s10;

        if $i116 != $i11 goto label086;

        return 1;

     label086:
        return 0;

     label087:
        $b12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $i13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $i117 = (int) $b12;

        if $i117 != $i13 goto label088;

        return 1;

     label088:
        return 0;

     label089:
        $l6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $l8 = (long) $i7;

        $b9 = $l6 cmp $l8;

        if $b9 != 0 goto label090;

        return 1;

     label090:
        return 0;

     label091:
        return 0;

     label092:
        tableswitch(i1)
        {
            case 2: goto label093;
            case 3: goto label103;
            case 4: goto label101;
            case 5: goto label106;
            case 6: goto label106;
            case 7: goto label105;
            case 8: goto label095;
            case 9: goto label097;
            case 10: goto label099;
            default: goto label106;
        };

     label093:
        $c54 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $l55 = (long) $c54;

        $l56 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $b57 = $l55 cmp $l56;

        if $b57 != 0 goto label094;

        return 1;

     label094:
        return 0;

     label095:
        $d16 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $l44 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $d17 = (double) $l44;

        $b45 = $d16 cmpl $d17;

        if $b45 != 0 goto label096;

        return 1;

     label096:
        return 0;

     label097:
        $f14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $l42 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $f15 = (float) $l42;

        $b43 = $f14 cmpl $f15;

        if $b43 != 0 goto label098;

        return 1;

     label098:
        return 0;

     label099:
        $i38 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $l39 = (long) $i38;

        $l40 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $b41 = $l39 cmp $l40;

        if $b41 != 0 goto label100;

        return 1;

     label100:
        return 0;

     label101:
        $s46 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $l47 = (long) $s46;

        $l48 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $b49 = $l47 cmp $l48;

        if $b49 != 0 goto label102;

        return 1;

     label102:
        return 0;

     label103:
        $b50 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $l51 = (long) $b50;

        $l52 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $b53 = $l51 cmp $l52;

        if $b53 != 0 goto label104;

        return 1;

     label104:
        return 0;

     label105:
        return 1;

     label106:
        return 0;

     label107:
        return 0;
    }

    public void <init>()
    {
        int $i1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        $i1 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int statementEnd> = $i1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        return r0;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r2;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3, $r4;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        z0 := @parameter3: boolean;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1, r2, r3);

        return $r4;
    }

    public final boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r39, $r41;
        byte $b1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, r1, $r4, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r29, $r31, $r32, $r36, $r37, $r44, $r45, $r54, $r56;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r42, $r43, $r46, $r47, $r50, $r51;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r16, $r18;
        org.eclipse.jdt.internal.compiler.impl.Constant $r25, $r57, $r58, $r59, $r60, $r61;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r3;
        org.eclipse.jdt.internal.compiler.lookup.WildcardBinding $r10;
        long $l0;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r53, $r55;
        org.eclipse.jdt.internal.compiler.lookup.Scope r2;
        char[] $r48, $r49;
        org.eclipse.jdt.internal.compiler.ast.Expression r5, r8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, z35, $z36, $z37, $z38, $z39;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, $i22;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding $r6, $r14, $r21, $r30;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r28, $r33, $r34, $r35, $r38, $r40, $r52, r62, r63;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r12;

        r5 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter3: org.eclipse.jdt.internal.compiler.ast.Expression;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return 1;

     label02:
        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l0 = $r3.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b1 = $l0 cmp 3211264L;

        $i22 = (int) $b1;

        if $i22 < 0 goto label03;

        $z39 = 1;

        $z38 = 1;

        $z37 = 1;

        goto label04;

     label03:
        $z39 = 0;

        $z38 = 0;

        $z37 = 0;

     label04:
        z0 = $z38;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z1 == 0 goto label12;

        $z30 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z30 == 0 goto label10;

        if r1 != r0 goto label06;

        if r8 == null goto label05;

        $r61 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r61;

     label05:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r0);

        return 1;

     label06:
        z35 = 0;

        $z32 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $z32 != 0 goto label07;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $i17 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $z33 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: boolean isNarrowing(int,int)>($i18, $i17);

        z35 = $z33;

        if $z33 == 0 goto label11;

     label07:
        if r8 == null goto label08;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $i14 = $i12 << 4;

        $i13 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $i15 = $i14 + $i13;

        r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion> = $i15;

        $r58 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r57 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r58 == $r57 goto label08;

        $r59 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i16 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $r60 = virtualinvoke $r59.<org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant castTo(int)>($i16);

        r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r60;

     label08:
        if z35 != 0 goto label09;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r0);

     label09:
        return 1;

     label10:
        if $z37 == 0 goto label11;

        $r55 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r56 = virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        $z31 = virtualinvoke $r56.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $z31 == 0 goto label11;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r0);

        return 1;

     label11:
        return 0;

     label12:
        if $z39 == 0 goto label13;

        $z28 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z28 == 0 goto label13;

        $r53 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r54 = virtualinvoke $r53.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        $z29 = virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $z29 == 0 goto label13;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r0);

        return 1;

     label13:
        $i19 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int kind()>();

        lookupswitch($i19)
        {
            case 68: goto label16;
            case 132: goto label14;
            case 516: goto label30;
            case 4100: goto label28;
            case 8196: goto label30;
            default: goto label32;
        };

     label14:
        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if r1 != $r12 goto label15;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r0);

        return 1;

     label15:
        return 0;

     label16:
        if r0 != r1 goto label17;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r0);

        return 1;

     label17:
        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int kind()>();

        lookupswitch($i2)
        {
            case 68: goto label18;
            case 4100: goto label22;
            default: goto label24;
        };

     label18:
        $r16 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) r0;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        $r18 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) r1;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        $z7 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z7 != 0 goto label19;

        $z8 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z8 == 0 goto label21;

     label19:
        if $r17 != $r19 goto label20;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsNeedCheckCast()>();

        return 1;

     label20:
        return 0;

     label21:
        $z9 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, $r17, $r19, r8);

        return $z9;

     label22:
        $r13 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $r13 != null goto label23;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, null, 1);

     label23:
        $r14 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) r0;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding upperBound()>();

        $z6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, $r15, r1, r8);

        return $z6;

     label24:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        lookupswitch($i3)
        {
            case 1: goto label26;
            case 36: goto label25;
            case 37: goto label25;
            default: goto label27;
        };

     label25:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsNeedCheckCast()>();

        return 1;

     label26:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r0);

        return 1;

     label27:
        return 0;

     label28:
        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $r4 == null goto label29;

        $z3 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, $r4, 0);

        return $z3;

     label29:
        $r6 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) r1;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding upperBound()>();

        $z2 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, r0, $r7, r8);

        return $z2;

     label30:
        $r9 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $r9 == null goto label31;

        $z5 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, $r9, 0);

        return $z5;

     label31:
        $r10 = (org.eclipse.jdt.internal.compiler.lookup.WildcardBinding) r1;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.WildcardBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding bound>;

        $z4 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, r0, $r11, r8);

        return $z4;

     label32:
        $z10 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isInterface()>();

        if $z10 == 0 goto label53;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int kind()>();

        lookupswitch($i7)
        {
            case 68: goto label33;
            case 4100: goto label36;
            default: goto label38;
        };

     label33:
        $i8 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i8)
        {
            case 36: goto label34;
            case 37: goto label34;
            default: goto label35;
        };

     label34:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsNeedCheckCast()>();

        return 1;

     label35:
        return 0;

     label36:
        $r29 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $r29 != null goto label37;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, null, 1);

     label37:
        $r30 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) r0;

        $r31 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding upperBound()>();

        $z18 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, $r31, r1, r8);

        return $z18;

     label38:
        $z19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isInterface()>();

        if $z19 == 0 goto label48;

        r62 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r1;

        $r36 = virtualinvoke r62.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $r36 == null goto label39;

        $z27 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r62, $r36, 0);

        return $z27;

     label39:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsNeedCheckCast()>();

        $r37 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r62);

        if $r37 == null goto label40;

        $z26 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r62, $r37, 1);

        return $z26;

     label40:
        if z0 == 0 goto label41;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, null, 1);

        $r52 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        $z25 = virtualinvoke r62.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean hasIncompatibleSuperType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r52);

        if $z25 == 0 goto label47;

        return 0;

     label41:
        $r38 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        $r39 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] getAllInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r38);

        $r40 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r1;

        $r41 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] getAllInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r40);

        i10 = lengthof $r41;

        i20 = 0;

        i11 = lengthof $r39;

        goto label46;

     label42:
        i21 = 0;

        goto label45;

     label43:
        $r42 = $r39[i20];

        $r45 = $r42.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r43 = $r41[i21];

        $r44 = $r43.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        if $r45 == $r44 goto label44;

        $r46 = $r39[i20];

        $r49 = $r46.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r47 = $r41[i21];

        $r48 = $r47.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $z23 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r49, $r48);

        if $z23 == 0 goto label44;

        $r51 = $r39[i20];

        $r50 = $r41[i21];

        $z24 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean areParametersEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r50);

        if $z24 == 0 goto label44;

        return 0;

     label44:
        i21 = i21 + 1;

     label45:
        if i21 < i10 goto label43;

        i20 = i20 + 1;

     label46:
        if i20 < i11 goto label42;

     label47:
        return 1;

     label48:
        $i9 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i9 != 1 goto label49;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r0);

        return 1;

     label49:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsNeedCheckCast()>();

        $r32 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        if $r32 == null goto label50;

        $z22 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, $r32, 1);

        return $z22;

     label50:
        $r33 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        $z20 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isFinal()>();

        if $z20 == 0 goto label51;

        return 0;

     label51:
        if z0 == 0 goto label52;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, null, 1);

        $r35 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        $r34 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r1;

        $z21 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean hasIncompatibleSuperType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r34);

        if $z21 == 0 goto label52;

        return 0;

     label52:
        return 1;

     label53:
        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int kind()>();

        lookupswitch($i4)
        {
            case 68: goto label54;
            case 4100: goto label57;
            default: goto label59;
        };

     label54:
        $i5 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i5 != 1 goto label56;

        if z0 == 0 goto label55;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, r1, 1);

     label55:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsNeedCheckCast()>();

        return 1;

     label56:
        return 0;

     label57:
        $r20 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $r20 != null goto label58;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, $r20, 1);

     label58:
        $r21 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) r0;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding upperBound()>();

        $z11 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, $r22, r1, r8);

        return $z11;

     label59:
        $z12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isInterface()>();

        if $z12 == 0 goto label64;

        r63 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r1;

        $r26 = virtualinvoke r63.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $r26 == null goto label60;

        $z17 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, $r26, 0);

        return $z17;

     label60:
        $z14 = virtualinvoke r63.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isFinal()>();

        if $z14 == 0 goto label61;

        return 0;

     label61:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsNeedCheckCast()>();

        $r27 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        if $r27 == null goto label62;

        $z16 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, $r27, 1);

        return $z16;

     label62:
        if z0 == 0 goto label63;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, null, 1);

        $r28 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        $z15 = virtualinvoke r63.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean hasIncompatibleSuperType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r28);

        if $z15 == 0 goto label63;

        return 0;

     label63:
        return 1;

     label64:
        $r23 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $r23 == null goto label66;

        if r8 == null goto label65;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i6 != 11 goto label65;

        $r25 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r25;

     label65:
        $z36 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, $r23, 0);

        return $z36;

     label66:
        $r24 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        if $r24 == null goto label67;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsNeedCheckCast()>();

        $z13 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r2, r0, r1, $r24, 1);

        return $z13;

     label67:
        return 0;
    }

    public void checkNPE(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry $r5, $r6;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r7;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3;
        long $l0, $l1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        byte $b2;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        int $i3, $i4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding localVariableBinding()>();

        if $r1 == null goto label2;

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $l0 = $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l1 = $l0 & 2L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i4 = $i3 & 131072;

        if $i4 != 0 goto label1;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void recordUsingNullReference(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.Expression,int,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, $r1, r0, 3, r3);

     label1:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r1);

        $r5 = r4.<org.eclipse.jdt.internal.compiler.flow.FlowContext: org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry initsOnFinally>;

        if $r5 == null goto label2;

        $r6 = r4.<org.eclipse.jdt.internal.compiler.flow.FlowContext: org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry initsOnFinally>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry: void markAsComparedEqualToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r1);

     label2:
        return;
    }

    public boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r3;
        org.eclipse.jdt.internal.compiler.ast.Expression r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, r1, r4;
        boolean z0, $z1, $z2, $z3, $z4;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        z0 := @parameter4: boolean;

        if r0 != r1 goto label2;

        if z0 != 0 goto label1;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3, r1);

     label1:
        return 1;

     label2:
        if r0 == null goto label6;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBoundParameterizedType()>();

        if $z1 != 0 goto label3;

        $z4 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBoundParameterizedType()>();

        if $z4 == 0 goto label6;

     label3:
        if z0 == 0 goto label4;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isProvablyDistinct(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r4);

        if $z3 == 0 goto label6;

        goto label5;

     label4:
        $z2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isProvablyDistinct(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $z2 == 0 goto label6;

     label5:
        return 0;

     label6:
        if z0 != 0 goto label7;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Expression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3, r1);

     label7:
        return 1;
    }

    public void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r11, $r16;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        byte $b17;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, $r6, $r10, $r13, $r15, r17, r18;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.impl.Constant $r4, $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i18;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r9, $r12, $r14;
        org.eclipse.jdt.internal.compiler.lookup.Scope r8;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r2, $r3;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r17 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        if r0 == null goto label01;

        if r17 != null goto label02;

     label01:
        return;

     label02:
        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        if $i0 == 0 goto label03;

        return;

     label03:
        $r2 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if r0 == $r2 goto label04;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z1 == 0 goto label04;

        $z2 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z2 != 0 goto label07;

        $r14 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r17);

        r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion> = 1024;

        $r16 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void autoboxing(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1, r17, r0);

        r17 = $r15;

        goto label07;

     label04:
        $r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if r17 == $r3 goto label06;

        $z0 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label06;

        $r9 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        r18 = $r10;

        if $r10 != r0 goto label05;

        r18 = r17;

     label05:
        $i10 = r18.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $i12 = $i10 << 4;

        $i11 = r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $i13 = $i12 + $i11;

        $i14 = 512 | $i13;

        r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion> = $i14;

        $r11 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r12 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r18);

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void autoboxing(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1, r17, $r13);

        return;

     label06:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r4 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r5 == $r4 goto label07;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i9 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i9 == 11 goto label07;

        r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion> = 512;

        return;

     label07:
        $i15 = r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        i16 = $i15;

        if $i15 != 2147483647 goto label10;

        $r6 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $i8 = $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i8 != 11 goto label08;

        $b17 = 11;

        goto label09;

     label08:
        $b17 = 1;

     label09:
        i16 = $b17;

     label10:
        $i18 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i18)
        {
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label12;
            case 8: goto label12;
            case 9: goto label12;
            case 10: goto label12;
            case 11: goto label12;
            default: goto label13;
        };

     label11:
        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i5 = 160 + i16;

        $i7 = $i6 | $i5;

        r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion> = $i7;

        goto label13;

     label12:
        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i1 = $i18 << 4;

        $i2 = $i1 + i16;

        $i4 = $i3 | $i2;

        r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion> = $i4;

     label13:
        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i1 = $i0 & -2147483648;

        if $i1 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r1, r2, 0);

        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r7;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r5;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r2, $r6;
        org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement $r3;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        int i0, $i1, $i2;
        java.lang.String $r4;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r2 == $r1 goto label1;

        i0 = r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r6, $i1);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i2);

        goto label2;

     label1:
        $r3 = new org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement;

        $r4 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String ast_missingCode>;

        specialinvoke $r3.<org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        return;
    }

    public void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r3;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r4, r5;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        int $i0, $i1, i2, $i3;
        boolean z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r4 := @parameter3: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        z0 := @parameter4: boolean;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        if z0 == 0 goto label1;

        $r6 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r1 != $r6 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r2, r3, $z2);

        $r7 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r1 == $r7 goto label5;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i0 != 5 goto label5;

        i2 = r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $z1 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if z0 == 0 goto label4;

        if r4 != null goto label4;

        if r5 == null goto label4;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r5);

        goto label4;

     label3:
        if z0 == 0 goto label4;

        if r4 == null goto label4;

        if r5 != null goto label4;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r4);

     label4:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i3);

        return;

     label5:
        $i1 = r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        if z0 == 0 goto label7;

        if r4 != null goto label6;

        if r5 == null goto label7;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r5);

        goto label7;

     label6:
        if r5 != null goto label7;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r4);

     label7:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void updateLastRecordedEndPC(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r2, $i1);

        return;
    }

    public void generateOptimizedStringConcatenation(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.impl.Constant $r3, $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        int i0, $i1;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter2: int;

        if i0 != 11 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r3 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r4 == $r3 goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r1, r2, 1);

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationAppendForType(int)>(i0);

        return;
    }

    public void generateOptimizedStringConcatenationCreation(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r5;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        int i0, $i1;
        java.lang.String $r6;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter2: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newStringContatenation()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 11: goto label2;
            case 12: goto label2;
            default: goto label5;
        };

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationDefaultConstructor()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r4, r0, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationAppendForType(int)>(1);

        return;

     label2:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label4;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationDefaultConstructor()>();

        return;

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r6);

        goto label6;

     label4:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r4, r0, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringValueOf(int)>(1);

        goto label6;

     label5:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r4, r0, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringValueOf(int)>(i0);

     label6:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationStringConstructor()>();

        return;
    }

    private org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] getAllInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        java.lang.Object[] $r4;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r2;
        int $i0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r3, $r5;
        java.util.ArrayList $r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.ast.Expression: void getAllInheritedMethods0(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,java.util.ArrayList)>(r2, $r0);

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r3 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[$i0];

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding[]) $r4;

        return $r5;
    }

    private void getAllInheritedMethods0(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, java.util.ArrayList)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0, $r6;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r1;
        java.util.ArrayList r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r4;
        org.eclipse.jdt.internal.compiler.ast.Expression r5;
        int i0, i1, i2, i3;
        boolean $z0;

        r5 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter1: java.util.ArrayList;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] methods()>();

        i1 = 0;

        i2 = lengthof $r1;

        goto label3;

     label2:
        $r3 = $r1[i1];

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

     label3:
        if i1 < i2 goto label2;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces()>();

        i3 = 0;

        i0 = lengthof $r4;

        goto label5;

     label4:
        $r6 = $r4[i3];

        specialinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void getAllInheritedMethods0(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,java.util.ArrayList)>($r6, r2);

        i3 = i3 + 1;

     label5:
        if i3 < i0 goto label4;

        return;
    }

    public boolean isCompactableOperation()
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        return 0;
    }

    public boolean isConstantValueOfTypeAssignableToType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, r4;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r5;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r2 != $r1 goto label1;

        return 0;

     label1:
        if r3 != r4 goto label2;

        return 1;

     label2:
        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z1 == 0 goto label4;

        $r5 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding INT>;

        if r3 == $r5 goto label3;

        $i3 = r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $z4 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: boolean isWidening(int,int)>(10, $i3);

        if $z4 == 0 goto label4;

     label3:
        $i0 = r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $z2 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: boolean isNarrowing(int,int)>($i0, 10);

        if $z2 == 0 goto label4;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $i1 = r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $z3 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Expression: boolean isConstantValueRepresentable(org.eclipse.jdt.internal.compiler.impl.Constant,int,int)>($r6, $i2, $i1);

        return $z3;

     label4:
        return 0;
    }

    public boolean isTypeReference()
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        return 0;
    }

    public org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding localVariableBinding()
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        return null;
    }

    public void markAsNonNull()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i1 = $i0 | 131072;

        r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i1;

        return;
    }

    public int nullStatus(org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r2;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        int $i1, $i3, $i5;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        if $r1 == null goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r4 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r5 == $r4 goto label1;

        $i1 = (int) -1;

        return $i1;

     label1:
        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding localVariableBinding()>();

        if $r2 == null goto label4;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r2);

        if $z1 == 0 goto label3;

        $i3 = (int) -1;

        return $i3;

     label3:
        return 0;

     label4:
        $i5 = (int) -1;

        return $i5;
    }

    public org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding postConversionType(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        int $i0, $i1, i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r3 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i1 = $i0 & 255;

        i2 = $i1 >> 4;

        tableswitch(i2)
        {
            case 2: goto label04;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label01;
            case 6: goto label09;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label06;
            case 10: goto label05;
            default: goto label09;
        };

     label01:
        r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        goto label09;

     label02:
        r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BYTE>;

        goto label09;

     label03:
        r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding SHORT>;

        goto label09;

     label04:
        r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding CHAR>;

        goto label09;

     label05:
        r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding INT>;

        goto label09;

     label06:
        r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding FLOAT>;

        goto label09;

     label07:
        r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        goto label09;

     label08:
        r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

     label09:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i4 = $i3 & 512;

        if $i4 == 0 goto label10;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

     label10:
        return r3;
    }

    public java.lang.StringBuffer print(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        java.lang.StringBuffer r0, $r2;
        int i0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(i0, r0);

        return $r2;
    }

    public abstract java.lang.StringBuffer printExpression(int, java.lang.StringBuffer);

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        java.lang.StringBuffer r1, $r2, $r3;
        int i0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.StringBuffer;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        return $r3;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1);

        return;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return null;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return null;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeExpecting(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void setExpectedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r2);

        if $r3 != null goto label1;

        return null;

     label1:
        if $r3 != r1 goto label2;

        return $r3;

     label2:
        $z0 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isBoxingCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r3, r1);

        if $z1 == 0 goto label3;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, r1, $r3);

        goto label4;

     label3:
        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeMismatchError(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r3, r1, r0, null);

        return null;

     label4:
        return $r3;
    }

    public java.lang.Object reusableJSRTarget()
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r2 == $r1 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        return $r3;

     label1:
        return null;
    }

    public void setExpectedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        return;
    }

    public void tagAsNeedCheckCast()
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        return;
    }

    public void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.Scope r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.Expression toTypeReference()
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        return r0;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }
}
