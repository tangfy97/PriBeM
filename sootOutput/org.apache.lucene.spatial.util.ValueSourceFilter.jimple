public class org.apache.lucene.spatial.util.ValueSourceFilter extends org.apache.lucene.search.Filter
{
    final org.apache.lucene.search.Filter startingFilter;
    final org.apache.lucene.queries.function.ValueSource source;
    final double min;
    final double max;

    public void <init>(org.apache.lucene.search.Filter, org.apache.lucene.queries.function.ValueSource, double, double)
    {
        org.apache.lucene.search.Filter r1;
        org.apache.lucene.queries.function.ValueSource r2;
        org.apache.lucene.spatial.util.ValueSourceFilter r0;
        java.lang.IllegalArgumentException $r3;
        double d0, d1;

        r0 := @this: org.apache.lucene.spatial.util.ValueSourceFilter;

        r1 := @parameter0: org.apache.lucene.search.Filter;

        r2 := @parameter1: org.apache.lucene.queries.function.ValueSource;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        specialinvoke r0.<org.apache.lucene.search.Filter: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("please provide a non-null startingFilter; you can use QueryWrapperFilter(MatchAllDocsQuery) as a no-op filter");

        throw $r3;

     label1:
        r0.<org.apache.lucene.spatial.util.ValueSourceFilter: org.apache.lucene.search.Filter startingFilter> = r1;

        r0.<org.apache.lucene.spatial.util.ValueSourceFilter: org.apache.lucene.queries.function.ValueSource source> = r2;

        r0.<org.apache.lucene.spatial.util.ValueSourceFilter: double min> = d0;

        r0.<org.apache.lucene.spatial.util.ValueSourceFilter: double max> = d1;

        return;
    }

    public org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.spatial.util.ValueSourceFilter r0;
        org.apache.lucene.queries.function.ValueSource $r2;
        org.apache.lucene.search.Filter $r6;
        org.apache.lucene.search.DocIdSet $r7;
        org.apache.lucene.queries.function.FunctionValues $r3;
        org.apache.lucene.util.Bits r5;
        org.apache.lucene.index.AtomicReaderContext r1;
        org.apache.lucene.spatial.util.ValueSourceFilter$1 $r4;

        r0 := @this: org.apache.lucene.spatial.util.ValueSourceFilter;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        r5 := @parameter1: org.apache.lucene.util.Bits;

        $r2 = r0.<org.apache.lucene.spatial.util.ValueSourceFilter: org.apache.lucene.queries.function.ValueSource source>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.queries.function.ValueSource: org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map,org.apache.lucene.index.AtomicReaderContext)>(null, r1);

        $r4 = new org.apache.lucene.spatial.util.ValueSourceFilter$1;

        $r6 = r0.<org.apache.lucene.spatial.util.ValueSourceFilter: org.apache.lucene.search.Filter startingFilter>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.search.Filter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>(r1, r5);

        specialinvoke $r4.<org.apache.lucene.spatial.util.ValueSourceFilter$1: void <init>(org.apache.lucene.spatial.util.ValueSourceFilter,org.apache.lucene.search.DocIdSet,org.apache.lucene.queries.function.FunctionValues)>(r0, $r7, $r3);

        return $r4;
    }
}
