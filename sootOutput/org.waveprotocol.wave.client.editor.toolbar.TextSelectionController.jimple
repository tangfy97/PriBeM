public class org.waveprotocol.wave.client.editor.toolbar.TextSelectionController extends java.lang.Object implements org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton$Listener, org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller
{
    private final org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton button;
    private final org.waveprotocol.wave.client.editor.EditorContext editor;
    private final java.lang.String annotationName;
    private final java.lang.String annotationValue;

    public void <init>(org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton, org.waveprotocol.wave.client.editor.EditorContext, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.toolbar.TextSelectionController r0;
        org.waveprotocol.wave.client.editor.EditorContext r2;
        org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton r1;
        java.lang.String r3, r4;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.TextSelectionController;

        r1 := @parameter0: org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton;

        r2 := @parameter1: org.waveprotocol.wave.client.editor.EditorContext;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton button> = r1;

        r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: org.waveprotocol.wave.client.editor.EditorContext editor> = r2;

        r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: java.lang.String annotationName> = r3;

        r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: java.lang.String annotationValue> = r4;

        return;
    }

    public void onToggledOff()
    {
        org.waveprotocol.wave.client.editor.toolbar.TextSelectionController r0;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.TextSelectionController;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: void setSelectionAnnotation(java.lang.String)>(null);

        return;
    }

    public void onToggledOn()
    {
        org.waveprotocol.wave.client.editor.toolbar.TextSelectionController r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.TextSelectionController;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: java.lang.String annotationValue>;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: void setSelectionAnnotation(java.lang.String)>($r1);

        return;
    }

    private void setSelectionAnnotation(java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.FocusedContentRange $r3;
        org.waveprotocol.wave.client.editor.toolbar.TextSelectionController r0;
        org.waveprotocol.wave.client.editor.EditorContext $r1, $r6;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r2;
        java.lang.String r5;
        org.waveprotocol.wave.client.editor.toolbar.TextSelectionController$1 $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.TextSelectionController;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.client.editor.EditorContext: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper getSelectionHelper()>();

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: org.waveprotocol.wave.client.editor.content.FocusedContentRange getSelectionPoints()>();

        if $r3 == null goto label1;

        $r6 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        $r4 = new org.waveprotocol.wave.client.editor.toolbar.TextSelectionController$1;

        specialinvoke $r4.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController$1: void <init>(org.waveprotocol.wave.client.editor.toolbar.TextSelectionController,java.lang.String)>(r0, r5);

        interfaceinvoke $r6.<org.waveprotocol.wave.client.editor.EditorContext: void undoableSequence(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    public void update(org.waveprotocol.wave.model.document.util.Range)
    {
        org.waveprotocol.wave.client.editor.toolbar.TextSelectionController r0;
        org.waveprotocol.wave.client.editor.EditorContext $r2, $r4;
        org.waveprotocol.wave.client.editor.content.CMutableDocument $r3;
        org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations $r5;
        int $i0, $i1;
        org.waveprotocol.wave.model.document.util.Range r6;
        org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton $r10;
        java.lang.String $r1, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.TextSelectionController;

        r6 := @parameter0: org.waveprotocol.wave.model.document.util.Range;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: java.lang.String annotationValue>;

        if $r1 == null goto label1;

        $r2 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.EditorContext: org.waveprotocol.wave.client.editor.content.CMutableDocument getDocument()>();

        $r4 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.EditorContext: org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations getCaretAnnotations()>();

        $r7 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: java.lang.String annotationName>;

        $i0 = virtualinvoke r6.<org.waveprotocol.wave.model.document.util.Range: int getStart()>();

        $i1 = virtualinvoke r6.<org.waveprotocol.wave.model.document.util.Range: int getEnd()>();

        $r8 = staticinvoke <org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil: java.lang.String getAnnotationOverRangeIfFull(org.waveprotocol.wave.model.document.MutableAnnotationSet,org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations,java.lang.String,int,int)>($r3, $r5, $r7, $i0, $i1);

        $r10 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton button>;

        $r9 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: java.lang.String annotationValue>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        virtualinvoke $r10.<org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton: void setToggledOn(boolean)>($z0);

     label1:
        return;
    }

    static org.waveprotocol.wave.client.editor.EditorContext access$000(org.waveprotocol.wave.client.editor.toolbar.TextSelectionController)
    {
        org.waveprotocol.wave.client.editor.toolbar.TextSelectionController r0;
        org.waveprotocol.wave.client.editor.EditorContext $r1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.toolbar.TextSelectionController;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        return $r1;
    }

    static java.lang.String access$100(org.waveprotocol.wave.client.editor.toolbar.TextSelectionController)
    {
        org.waveprotocol.wave.client.editor.toolbar.TextSelectionController r0;
        java.lang.String $r1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.toolbar.TextSelectionController;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.TextSelectionController: java.lang.String annotationName>;

        return $r1;
    }
}
