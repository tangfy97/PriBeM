public class com.sun.lwuit.layouts.CoordinateLayout extends com.sun.lwuit.layouts.Layout
{
    private int width;
    private int height;

    public void <init>(int, int)
    {
        int i0, i1;
        com.sun.lwuit.layouts.CoordinateLayout r0;

        r0 := @this: com.sun.lwuit.layouts.CoordinateLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.sun.lwuit.layouts.Layout: void <init>()>();

        r0.<com.sun.lwuit.layouts.CoordinateLayout: int width> = i0;

        r0.<com.sun.lwuit.layouts.CoordinateLayout: int height> = i1;

        return;
    }

    public void <init>(com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.geom.Dimension r1;
        int $i0, $i1;
        com.sun.lwuit.layouts.CoordinateLayout r0;

        r0 := @this: com.sun.lwuit.layouts.CoordinateLayout;

        r1 := @parameter0: com.sun.lwuit.geom.Dimension;

        $i0 = virtualinvoke r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r0.<com.sun.lwuit.layouts.CoordinateLayout: void <init>(int,int)>($i0, $i1);

        return;
    }

    public void layoutContainer(com.sun.lwuit.Container)
    {
        com.sun.lwuit.Component $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, i10, $i11, $i12, i13;
        com.sun.lwuit.Container r0;
        com.sun.lwuit.layouts.CoordinateLayout r1;

        r1 := @this: com.sun.lwuit.layouts.CoordinateLayout;

        r0 := @parameter0: com.sun.lwuit.Container;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getComponentCount()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        i13 = 0;

     label1:
        if i13 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i13);

        $i3 = virtualinvoke $r2.<com.sun.lwuit.Component: int getX()>();

        $i5 = $i3 * $i1;

        $i4 = r1.<com.sun.lwuit.layouts.CoordinateLayout: int width>;

        i6 = $i5 / $i4;

        $i7 = virtualinvoke $r2.<com.sun.lwuit.Component: int getY()>();

        $i9 = $i7 * $i2;

        $i8 = r1.<com.sun.lwuit.layouts.CoordinateLayout: int height>;

        i10 = $i9 / $i8;

        virtualinvoke $r2.<com.sun.lwuit.Component: void setX(int)>(i6);

        virtualinvoke $r2.<com.sun.lwuit.Component: void setY(int)>(i10);

        $i11 = virtualinvoke $r2.<com.sun.lwuit.Component: int getPreferredW()>();

        virtualinvoke $r2.<com.sun.lwuit.Component: void setWidth(int)>($i11);

        $i12 = virtualinvoke $r2.<com.sun.lwuit.Component: int getPreferredH()>();

        virtualinvoke $r2.<com.sun.lwuit.Component: void setHeight(int)>($i12);

        i13 = i13 + 1;

        goto label1;

     label2:
        r1.<com.sun.lwuit.layouts.CoordinateLayout: int width> = $i1;

        r1.<com.sun.lwuit.layouts.CoordinateLayout: int height> = $i2;

        return;
    }

    public com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container)
    {
        com.sun.lwuit.Component $r2;
        com.sun.lwuit.geom.Dimension $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        com.sun.lwuit.Container r1;
        com.sun.lwuit.layouts.CoordinateLayout r3;

        r3 := @this: com.sun.lwuit.layouts.CoordinateLayout;

        r1 := @parameter0: com.sun.lwuit.Container;

        $r0 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r0.<com.sun.lwuit.geom.Dimension: void <init>()>();

        $i0 = virtualinvoke r1.<com.sun.lwuit.Container: int getComponentCount()>();

        i11 = 0;

     label1:
        if i11 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i11);

        $i1 = virtualinvoke $r0.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i2 = virtualinvoke $r2.<com.sun.lwuit.Component: int getX()>();

        $i3 = virtualinvoke $r2.<com.sun.lwuit.Component: int getPreferredW()>();

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i4);

        virtualinvoke $r0.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i5);

        $i6 = virtualinvoke $r0.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i7 = virtualinvoke $r2.<com.sun.lwuit.Component: int getY()>();

        $i8 = virtualinvoke $r2.<com.sun.lwuit.Component: int getPreferredH()>();

        $i9 = $i7 + $i8;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i9);

        virtualinvoke $r0.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i10);

        i11 = i11 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public boolean isOverlapSupported()
    {
        com.sun.lwuit.layouts.CoordinateLayout r0;

        r0 := @this: com.sun.lwuit.layouts.CoordinateLayout;

        return 1;
    }
}
