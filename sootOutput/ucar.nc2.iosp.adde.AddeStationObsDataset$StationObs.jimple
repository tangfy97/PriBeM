class ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs extends ucar.nc2.dt.point.StationObsDatatypeImpl
{
    private ucar.ma2.StructureData data;
    final ucar.nc2.iosp.adde.AddeStationObsDataset this$0;

    void <init>(ucar.nc2.iosp.adde.AddeStationObsDataset, ucar.unidata.geoloc.Station, ucar.ma2.StructureData)
    {
        ucar.unidata.geoloc.Station r2;
        long $l7;
        ucar.ma2.StructureData r3;
        ucar.nc2.iosp.adde.AddeStationObsDataset r1;
        ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs r0;
        int $i0, i1, i2, $i3, i4, i5, i6, i8;
        double $d0, $d1, $d2;
        java.util.GregorianCalendar $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs;

        r1 := @parameter0: ucar.nc2.iosp.adde.AddeStationObsDataset;

        r2 := @parameter1: ucar.unidata.geoloc.Station;

        r3 := @parameter2: ucar.ma2.StructureData;

        r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: ucar.nc2.iosp.adde.AddeStationObsDataset this$0> = r1;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatatypeImpl: void <init>()>();

        r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: ucar.unidata.geoloc.Station station> = r2;

        r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: ucar.ma2.StructureData data> = r3;

        $i0 = virtualinvoke r3.<ucar.ma2.StructureData: int getScalarInt(java.lang.String)>("DAY");

        i1 = $i0 / 1000;

        i2 = $i0 % 1000;

        $i3 = virtualinvoke r3.<ucar.ma2.StructureData: int getScalarInt(java.lang.String)>("TIME");

        i4 = $i3 / 10000;

        i8 = $i3 % 10000;

        i5 = i8 / 100;

        i6 = i8 % 100;

        $r4 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: java.util.GregorianCalendar access$000(ucar.nc2.iosp.adde.AddeStationObsDataset)>(r1);

        virtualinvoke $r4.<java.util.GregorianCalendar: void clear()>();

        $r5 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: java.util.GregorianCalendar access$000(ucar.nc2.iosp.adde.AddeStationObsDataset)>(r1);

        virtualinvoke $r5.<java.util.GregorianCalendar: void set(int,int)>(1, i1);

        $r6 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: java.util.GregorianCalendar access$000(ucar.nc2.iosp.adde.AddeStationObsDataset)>(r1);

        virtualinvoke $r6.<java.util.GregorianCalendar: void set(int,int)>(6, i2);

        $r7 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: java.util.GregorianCalendar access$000(ucar.nc2.iosp.adde.AddeStationObsDataset)>(r1);

        virtualinvoke $r7.<java.util.GregorianCalendar: void set(int,int)>(11, i4);

        $r8 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: java.util.GregorianCalendar access$000(ucar.nc2.iosp.adde.AddeStationObsDataset)>(r1);

        virtualinvoke $r8.<java.util.GregorianCalendar: void set(int,int)>(12, i5);

        $r9 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: java.util.GregorianCalendar access$000(ucar.nc2.iosp.adde.AddeStationObsDataset)>(r1);

        virtualinvoke $r9.<java.util.GregorianCalendar: void set(int,int)>(13, i6);

        $r10 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: java.util.GregorianCalendar access$000(ucar.nc2.iosp.adde.AddeStationObsDataset)>(r1);

        $l7 = virtualinvoke $r10.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $d0 = (double) $l7;

        $d1 = $d0 / 1000.0;

        r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: double obsTime> = $d1;

        $d2 = r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: double obsTime>;

        r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: double nomTime> = $d2;

        return;
    }

    public ucar.ma2.StructureData getData() throws java.io.IOException
    {
        ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs r0;
        ucar.ma2.StructureData $r1;

        r0 := @this: ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs;

        $r1 = r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: ucar.ma2.StructureData data>;

        return $r1;
    }

    public java.util.Date getNominalTimeAsDate()
    {
        ucar.nc2.iosp.adde.AddeStationObsDataset $r1;
        java.util.Date $r3;
        ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs r0;
        ucar.nc2.units.DateUnit $r2;
        double $d0;

        r0 := @this: ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs;

        $r1 = r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: ucar.nc2.iosp.adde.AddeStationObsDataset this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: ucar.nc2.units.DateUnit access$100(ucar.nc2.iosp.adde.AddeStationObsDataset)>($r1);

        $d0 = virtualinvoke r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: double getNominalTime()>();

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        return $r3;
    }

    public java.util.Date getObservationTimeAsDate()
    {
        ucar.nc2.iosp.adde.AddeStationObsDataset $r1;
        java.util.Date $r3;
        ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs r0;
        ucar.nc2.units.DateUnit $r2;
        double $d0;

        r0 := @this: ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs;

        $r1 = r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: ucar.nc2.iosp.adde.AddeStationObsDataset this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.adde.AddeStationObsDataset: ucar.nc2.units.DateUnit access$200(ucar.nc2.iosp.adde.AddeStationObsDataset)>($r1);

        $d0 = virtualinvoke r0.<ucar.nc2.iosp.adde.AddeStationObsDataset$StationObs: double getObservationTime()>();

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        return $r3;
    }
}
