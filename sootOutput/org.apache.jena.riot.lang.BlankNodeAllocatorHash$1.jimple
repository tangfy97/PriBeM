class org.apache.jena.riot.lang.BlankNodeAllocatorHash$1 extends java.lang.Object implements org.apache.jena.atlas.lib.cache.Getter
{
    final org.apache.jena.riot.lang.BlankNodeAllocatorHash this$0;

    void <init>(org.apache.jena.riot.lang.BlankNodeAllocatorHash)
    {
        org.apache.jena.riot.lang.BlankNodeAllocatorHash$1 r0;
        org.apache.jena.riot.lang.BlankNodeAllocatorHash r1;

        r0 := @this: org.apache.jena.riot.lang.BlankNodeAllocatorHash$1;

        r1 := @parameter0: org.apache.jena.riot.lang.BlankNodeAllocatorHash;

        r0.<org.apache.jena.riot.lang.BlankNodeAllocatorHash$1: org.apache.jena.riot.lang.BlankNodeAllocatorHash this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.graph.Node get(java.lang.String)
    {
        org.apache.jena.riot.lang.BlankNodeAllocatorHash$1 r0;
        org.apache.jena.riot.lang.BlankNodeAllocatorHash $r2;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r3;

        r0 := @this: org.apache.jena.riot.lang.BlankNodeAllocatorHash$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.lang.BlankNodeAllocatorHash$1: org.apache.jena.riot.lang.BlankNodeAllocatorHash this$0>;

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.lang.BlankNodeAllocatorHash: com.hp.hpl.jena.graph.Node alloc(java.lang.String)>(r1);

        return $r3;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        org.apache.jena.riot.lang.BlankNodeAllocatorHash$1 r0;
        java.lang.Object r1;
        java.lang.String $r2;
        com.hp.hpl.jena.graph.Node $r3;

        r0 := @this: org.apache.jena.riot.lang.BlankNodeAllocatorHash$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.apache.jena.riot.lang.BlankNodeAllocatorHash$1: com.hp.hpl.jena.graph.Node get(java.lang.String)>($r2);

        return $r3;
    }
}
