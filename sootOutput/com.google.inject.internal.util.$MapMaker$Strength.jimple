abstract enum class com.google.inject.internal.util.$MapMaker$Strength extends java.lang.Enum
{
    public static final enum com.google.inject.internal.util.$MapMaker$Strength WEAK;
    public static final enum com.google.inject.internal.util.$MapMaker$Strength SOFT;
    public static final enum com.google.inject.internal.util.$MapMaker$Strength STRONG;
    private static final com.google.inject.internal.util.$MapMaker$Strength[] $VALUES;

    public static com.google.inject.internal.util.$MapMaker$Strength[] values()
    {
        java.lang.Object $r1;
        com.google.inject.internal.util.$MapMaker$Strength[] $r0, $r2;

        $r0 = <com.google.inject.internal.util.$MapMaker$Strength: com.google.inject.internal.util.$MapMaker$Strength[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.google.inject.internal.util.$MapMaker$Strength[]) $r1;

        return $r2;
    }

    public static com.google.inject.internal.util.$MapMaker$Strength valueOf(java.lang.String)
    {
        com.google.inject.internal.util.$MapMaker$Strength $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/inject/internal/util/$MapMaker$Strength;", r0);

        $r2 = (com.google.inject.internal.util.$MapMaker$Strength) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        com.google.inject.internal.util.$MapMaker$Strength r0;
        java.lang.String r1;

        r0 := @this: com.google.inject.internal.util.$MapMaker$Strength;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    abstract boolean equal(java.lang.Object, java.lang.Object);

    abstract int hash(java.lang.Object);

    abstract com.google.inject.internal.util.$MapMaker$ValueReference referenceValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry, java.lang.Object);

    abstract com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals, java.lang.Object, int, com.google.inject.internal.util.$MapMaker$ReferenceEntry);

    abstract com.google.inject.internal.util.$MapMaker$ReferenceEntry copyEntry(java.lang.Object, com.google.inject.internal.util.$MapMaker$ReferenceEntry, com.google.inject.internal.util.$MapMaker$ReferenceEntry);

    void <init>(java.lang.String, int, com.google.inject.internal.util.$MapMaker$1)
    {
        int i0;
        com.google.inject.internal.util.$MapMaker$Strength r0;
        java.lang.String r1;
        com.google.inject.internal.util.$MapMaker$1 r2;

        r0 := @this: com.google.inject.internal.util.$MapMaker$Strength;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.inject.internal.util.$MapMaker$1;

        specialinvoke r0.<com.google.inject.internal.util.$MapMaker$Strength: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        com.google.inject.internal.util.$MapMaker$Strength[] $r3;
        com.google.inject.internal.util.$MapMaker$Strength$2 $r1;
        com.google.inject.internal.util.$MapMaker$Strength$1 $r0;
        com.google.inject.internal.util.$MapMaker$Strength$3 $r2;
        com.google.inject.internal.util.$MapMaker$Strength $r4, $r5, $r6;

        $r0 = new com.google.inject.internal.util.$MapMaker$Strength$1;

        specialinvoke $r0.<com.google.inject.internal.util.$MapMaker$Strength$1: void <init>(java.lang.String,int)>("WEAK", 0);

        <com.google.inject.internal.util.$MapMaker$Strength: com.google.inject.internal.util.$MapMaker$Strength WEAK> = $r0;

        $r1 = new com.google.inject.internal.util.$MapMaker$Strength$2;

        specialinvoke $r1.<com.google.inject.internal.util.$MapMaker$Strength$2: void <init>(java.lang.String,int)>("SOFT", 1);

        <com.google.inject.internal.util.$MapMaker$Strength: com.google.inject.internal.util.$MapMaker$Strength SOFT> = $r1;

        $r2 = new com.google.inject.internal.util.$MapMaker$Strength$3;

        specialinvoke $r2.<com.google.inject.internal.util.$MapMaker$Strength$3: void <init>(java.lang.String,int)>("STRONG", 2);

        <com.google.inject.internal.util.$MapMaker$Strength: com.google.inject.internal.util.$MapMaker$Strength STRONG> = $r2;

        $r3 = newarray (com.google.inject.internal.util.$MapMaker$Strength)[3];

        $r4 = <com.google.inject.internal.util.$MapMaker$Strength: com.google.inject.internal.util.$MapMaker$Strength WEAK>;

        $r3[0] = $r4;

        $r5 = <com.google.inject.internal.util.$MapMaker$Strength: com.google.inject.internal.util.$MapMaker$Strength SOFT>;

        $r3[1] = $r5;

        $r6 = <com.google.inject.internal.util.$MapMaker$Strength: com.google.inject.internal.util.$MapMaker$Strength STRONG>;

        $r3[2] = $r6;

        <com.google.inject.internal.util.$MapMaker$Strength: com.google.inject.internal.util.$MapMaker$Strength[] $VALUES> = $r3;

        return;
    }
}
