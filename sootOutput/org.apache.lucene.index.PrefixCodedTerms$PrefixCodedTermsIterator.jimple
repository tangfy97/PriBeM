class org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator extends java.lang.Object implements java.util.Iterator
{
    final org.apache.lucene.store.IndexInput input;
    java.lang.String field;
    org.apache.lucene.util.BytesRef bytes;
    org.apache.lucene.index.Term term;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.index.PrefixCodedTerms this$0;

    void <init>(org.apache.lucene.index.PrefixCodedTerms)
    {
        org.apache.lucene.util.BytesRef $r2, $r4;
        org.apache.lucene.index.Term $r3;
        java.io.IOException $r8;
        java.lang.RuntimeException $r9;
        org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator r0;
        org.apache.lucene.index.PrefixCodedTerms r1;
        org.apache.lucene.store.RAMFile $r7;
        org.apache.lucene.store.RAMInputStream $r6;
        java.lang.String $r5;

        r0 := @this: org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator;

        r1 := @parameter0: org.apache.lucene.index.PrefixCodedTerms;

        r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.index.PrefixCodedTerms this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: java.lang.String field> = "";

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.util.BytesRef bytes> = $r2;

        $r3 = new org.apache.lucene.index.Term;

        $r5 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: java.lang.String field>;

        $r4 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.util.BytesRef bytes>;

        specialinvoke $r3.<org.apache.lucene.index.Term: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>($r5, $r4);

        r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.index.Term term> = $r3;

     label1:
        $r6 = new org.apache.lucene.store.RAMInputStream;

        $r7 = r1.<org.apache.lucene.index.PrefixCodedTerms: org.apache.lucene.store.RAMFile buffer>;

        specialinvoke $r6.<org.apache.lucene.store.RAMInputStream: void <init>(java.lang.String,org.apache.lucene.store.RAMFile)>("PrefixCodedTermsIterator", $r7);

        r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.store.IndexInput input> = $r6;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean hasNext()
    {
        org.apache.lucene.store.IndexInput $r1, $r2;
        long $l0, $l1;
        org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator r0;
        byte $b2;
        int $i3;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator;

        $r1 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.store.IndexInput input>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r2 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.store.IndexInput input>;

        $l1 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: long length()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.lucene.index.Term next()
    {
        byte[] $r5;
        org.apache.lucene.index.Term $r10, $r11;
        java.lang.AssertionError $r14;
        org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r9, $r13;
        boolean $z0, $z1;
        org.apache.lucene.store.IndexInput $r1, $r2, $r6, $r12;
        org.apache.lucene.util.BytesRef $r3, $r4, $r7, $r8;
        java.io.IOException $r15;
        java.lang.RuntimeException $r16;

        r0 := @this: org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator;

        $z0 = <org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $r1 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.store.IndexInput input>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label2;

        $r12 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.store.IndexInput input>;

        $r13 = virtualinvoke $r12.<org.apache.lucene.store.IndexInput: java.lang.String readString()>();

        r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: java.lang.String field> = $r13;

     label2:
        $i5 = $i0 >>> 1;

        $r2 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.store.IndexInput input>;

        $i2 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r3 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.util.BytesRef bytes>;

        $i3 = $i5 + $i2;

        virtualinvoke $r3.<org.apache.lucene.util.BytesRef: void grow(int)>($i3);

        $r6 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.store.IndexInput input>;

        $r4 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.util.BytesRef bytes>;

        $r5 = $r4.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        virtualinvoke $r6.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>($r5, $i5, $i2);

        $r7 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.util.BytesRef bytes>;

        $i4 = $i5 + $i2;

        $r7.<org.apache.lucene.util.BytesRef: int length> = $i4;

        $r10 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.index.Term term>;

        $r9 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: java.lang.String field>;

        $r8 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.util.BytesRef bytes>;

        virtualinvoke $r10.<org.apache.lucene.index.Term: void set(java.lang.String,org.apache.lucene.util.BytesRef)>($r9, $r8);

        $r11 = r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.index.Term term>;

     label3:
        return $r11;

     label4:
        $r15 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator r1;

        r1 := @this: org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.apache.lucene.index.Term $r1;
        org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator r0;

        r0 := @this: org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: org.apache.lucene.index.Term next()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/PrefixCodedTerms;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.PrefixCodedTerms$PrefixCodedTermsIterator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
