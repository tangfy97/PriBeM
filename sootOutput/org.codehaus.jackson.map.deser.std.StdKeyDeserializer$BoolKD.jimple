final class org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD extends org.codehaus.jackson.map.deser.std.StdKeyDeserializer
{

    void <init>()
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Boolean;");

        return;
    }

    public java.lang.Boolean _parse(java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD r4;
        org.codehaus.jackson.map.DeserializationContext r3;
        org.codehaus.jackson.map.JsonMappingException $r6;
        java.lang.Boolean $r7, $r8;
        java.lang.Class $r5;
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;

        r4 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = "true";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r8;

     label1:
        $r2 = "false";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r7;

     label2:
        $r5 = r4.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD: java.lang.Class _keyClass>;

        $r6 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)>($r5, r0, "value not \'true\' or \'false\'");

        throw $r6;
    }

    public volatile java.lang.Object _parse(java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws java.lang.Exception
    {
        java.lang.Boolean $r3;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD r0;
        java.lang.String r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD: java.lang.Boolean _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
