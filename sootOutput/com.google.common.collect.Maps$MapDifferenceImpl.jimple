class com.google.common.collect.Maps$MapDifferenceImpl extends java.lang.Object implements com.google.common.collect.MapDifference
{
    final boolean areEqual;
    final java.util.Map onlyOnLeft;
    final java.util.Map onlyOnRight;
    final java.util.Map onBoth;
    final java.util.Map differences;

    void <init>(boolean, java.util.Map, java.util.Map, java.util.Map, java.util.Map)
    {
        java.util.Map r1, r2, r3, r4;
        com.google.common.collect.Maps$MapDifferenceImpl r0;
        boolean z0;

        r0 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.Map;

        r4 := @parameter4: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.Maps$MapDifferenceImpl: boolean areEqual> = z0;

        r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft> = r1;

        r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight> = r2;

        r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onBoth> = r3;

        r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences> = r4;

        return;
    }

    public boolean areEqual()
    {
        com.google.common.collect.Maps$MapDifferenceImpl r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        $z0 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: boolean areEqual>;

        return $z0;
    }

    public java.util.Map entriesOnlyOnLeft()
    {
        com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft>;

        return $r1;
    }

    public java.util.Map entriesOnlyOnRight()
    {
        com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight>;

        return $r1;
    }

    public java.util.Map entriesInCommon()
    {
        com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onBoth>;

        return $r1;
    }

    public java.util.Map entriesDiffering()
    {
        com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.Maps$MapDifferenceImpl r1;
        java.util.Map $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.google.common.collect.MapDifference r2;
        java.lang.Object r0;

        r1 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof com.google.common.collect.MapDifference;

        if $z0 == 0 goto label4;

        r2 = (com.google.common.collect.MapDifference) r0;

        $r3 = virtualinvoke r1.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesOnlyOnLeft()>();

        $r4 = interfaceinvoke r2.<com.google.common.collect.MapDifference: java.util.Map entriesOnlyOnLeft()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r1.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesOnlyOnRight()>();

        $r6 = interfaceinvoke r2.<com.google.common.collect.MapDifference: java.util.Map entriesOnlyOnRight()>();

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label2;

        $r7 = virtualinvoke r1.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesInCommon()>();

        $r8 = interfaceinvoke r2.<com.google.common.collect.MapDifference: java.util.Map entriesInCommon()>();

        $z3 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label2;

        $r9 = virtualinvoke r1.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesDiffering()>();

        $r10 = interfaceinvoke r2.<com.google.common.collect.MapDifference: java.util.Map entriesDiffering()>();

        $z4 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;

     label4:
        return 0;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        java.util.Map $r2, $r3, $r4, $r5;
        int $i0;
        com.google.common.collect.Maps$MapDifferenceImpl r1;

        r1 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        $r0 = newarray (java.lang.Object)[4];

        $r2 = virtualinvoke r1.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesOnlyOnLeft()>();

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesOnlyOnRight()>();

        $r0[1] = $r3;

        $r4 = virtualinvoke r1.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesInCommon()>();

        $r0[2] = $r4;

        $r5 = virtualinvoke r1.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesDiffering()>();

        $r0[3] = $r5;

        $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r2, $r3, $r4, $r7, $r9, $r11;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r1, $r6, $r8, $r10;

        r0 := @this: com.google.common.collect.Maps$MapDifferenceImpl;

        $z0 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: boolean areEqual>;

        if $z0 == 0 goto label1;

        return "equal";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("not equal");

        $r2 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft>;

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": only on left=");

        $r11 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

     label2:
        $r3 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight>;

        $z2 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": only on right=");

        $r9 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

     label3:
        $r4 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences>;

        $z3 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z3 != 0 goto label4;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": value differences=");

        $r7 = r0.<com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

     label4:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
