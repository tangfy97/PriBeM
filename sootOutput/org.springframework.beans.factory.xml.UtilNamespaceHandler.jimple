public class org.springframework.beans.factory.xml.UtilNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport
{
    private static final java.lang.String SCOPE_ATTRIBUTE;

    public void <init>()
    {
        org.springframework.beans.factory.xml.UtilNamespaceHandler r0;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler;

        specialinvoke r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: void <init>()>();

        return;
    }

    public void init()
    {
        org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertyPathBeanDefinitionParser $r2;
        org.springframework.beans.factory.xml.UtilNamespaceHandler$MapBeanDefinitionParser $r5;
        org.springframework.beans.factory.xml.UtilNamespaceHandler$SetBeanDefinitionParser $r4;
        org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser $r6;
        org.springframework.beans.factory.xml.UtilNamespaceHandler r0;
        org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser $r1;
        org.springframework.beans.factory.xml.UtilNamespaceHandler$ListBeanDefinitionParser $r3;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler;

        $r1 = new org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser;

        specialinvoke $r1.<org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser: void <init>(org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser)>(null);

        virtualinvoke r0.<org.springframework.beans.factory.xml.UtilNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("constant", $r1);

        $r2 = new org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertyPathBeanDefinitionParser;

        specialinvoke $r2.<org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertyPathBeanDefinitionParser: void <init>(org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertyPathBeanDefinitionParser)>(null);

        virtualinvoke r0.<org.springframework.beans.factory.xml.UtilNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("property-path", $r2);

        $r3 = new org.springframework.beans.factory.xml.UtilNamespaceHandler$ListBeanDefinitionParser;

        specialinvoke $r3.<org.springframework.beans.factory.xml.UtilNamespaceHandler$ListBeanDefinitionParser: void <init>(org.springframework.beans.factory.xml.UtilNamespaceHandler$ListBeanDefinitionParser)>(null);

        virtualinvoke r0.<org.springframework.beans.factory.xml.UtilNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("list", $r3);

        $r4 = new org.springframework.beans.factory.xml.UtilNamespaceHandler$SetBeanDefinitionParser;

        specialinvoke $r4.<org.springframework.beans.factory.xml.UtilNamespaceHandler$SetBeanDefinitionParser: void <init>(org.springframework.beans.factory.xml.UtilNamespaceHandler$SetBeanDefinitionParser)>(null);

        virtualinvoke r0.<org.springframework.beans.factory.xml.UtilNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("set", $r4);

        $r5 = new org.springframework.beans.factory.xml.UtilNamespaceHandler$MapBeanDefinitionParser;

        specialinvoke $r5.<org.springframework.beans.factory.xml.UtilNamespaceHandler$MapBeanDefinitionParser: void <init>(org.springframework.beans.factory.xml.UtilNamespaceHandler$MapBeanDefinitionParser)>(null);

        virtualinvoke r0.<org.springframework.beans.factory.xml.UtilNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("map", $r5);

        $r6 = new org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser;

        specialinvoke $r6.<org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser: void <init>(org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser)>(null);

        virtualinvoke r0.<org.springframework.beans.factory.xml.UtilNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("properties", $r6);

        return;
    }

    public static void <clinit>()
    {
        <org.springframework.beans.factory.xml.UtilNamespaceHandler: java.lang.String SCOPE_ATTRIBUTE> = "scope";

        return;
    }
}
