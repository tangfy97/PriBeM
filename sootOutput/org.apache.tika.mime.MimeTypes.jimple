public final class org.apache.tika.mime.MimeTypes extends java.lang.Object implements org.apache.tika.detect.Detector, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.lang.String OCTET_STREAM;
    public static final java.lang.String PLAIN_TEXT;
    public static final java.lang.String XML;
    private final org.apache.tika.mime.MimeType rootMimeType;
    private final java.util.List rootMimeTypeL;
    private final org.apache.tika.mime.MimeType textMimeType;
    private final org.apache.tika.mime.MimeType xmlMimeType;
    private final org.apache.tika.mime.MediaTypeRegistry registry;
    private final java.util.Map types;
    private org.apache.tika.mime.Patterns patterns;
    private final java.util.List magics;
    private final java.util.List xmls;
    private static org.apache.tika.mime.MimeTypes DEFAULT_TYPES;
    private static java.util.Map CLASSLOADER_SPECIFIC_DEFAULT_TYPES;

    public void <init>()
    {
        org.apache.tika.mime.MediaTypeRegistry $r1, $r4;
        java.util.HashMap $r2;
        org.apache.tika.mime.MediaType $r8, $r10, $r12;
        java.util.ArrayList $r5, $r6;
        org.apache.tika.mime.Patterns $r3;
        java.util.List $r14;
        org.apache.tika.mime.MimeTypes r0;
        org.apache.tika.mime.MimeType $r7, $r9, $r11, $r13, $r15, $r16, $r17;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.tika.mime.MediaTypeRegistry;

        specialinvoke $r1.<org.apache.tika.mime.MediaTypeRegistry: void <init>()>();

        r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.tika.mime.MimeTypes: java.util.Map types> = $r2;

        $r3 = new org.apache.tika.mime.Patterns;

        $r4 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry>;

        specialinvoke $r3.<org.apache.tika.mime.Patterns: void <init>(org.apache.tika.mime.MediaTypeRegistry)>($r4);

        r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.Patterns patterns> = $r3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.tika.mime.MimeTypes: java.util.List magics> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.tika.mime.MimeTypes: java.util.List xmls> = $r6;

        $r7 = new org.apache.tika.mime.MimeType;

        $r8 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM>;

        specialinvoke $r7.<org.apache.tika.mime.MimeType: void <init>(org.apache.tika.mime.MediaType)>($r8);

        r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType rootMimeType> = $r7;

        $r9 = new org.apache.tika.mime.MimeType;

        $r10 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType TEXT_PLAIN>;

        specialinvoke $r9.<org.apache.tika.mime.MimeType: void <init>(org.apache.tika.mime.MediaType)>($r10);

        r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType textMimeType> = $r9;

        $r11 = new org.apache.tika.mime.MimeType;

        $r12 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType APPLICATION_XML>;

        specialinvoke $r11.<org.apache.tika.mime.MimeType: void <init>(org.apache.tika.mime.MediaType)>($r12);

        r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType xmlMimeType> = $r11;

        $r13 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType rootMimeType>;

        $r14 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r13);

        r0.<org.apache.tika.mime.MimeTypes: java.util.List rootMimeTypeL> = $r14;

        $r15 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType rootMimeType>;

        virtualinvoke r0.<org.apache.tika.mime.MimeTypes: void add(org.apache.tika.mime.MimeType)>($r15);

        $r16 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType textMimeType>;

        virtualinvoke r0.<org.apache.tika.mime.MimeTypes: void add(org.apache.tika.mime.MimeType)>($r16);

        $r17 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType xmlMimeType>;

        virtualinvoke r0.<org.apache.tika.mime.MimeTypes: void add(org.apache.tika.mime.MimeType)>($r17);

        return;
    }

    public org.apache.tika.mime.MimeType getMimeType(java.lang.String)
    {
        org.apache.tika.mime.Patterns $r2, $r5;
        java.util.Locale $r4;
        org.apache.tika.mime.MimeTypes r0;
        java.lang.String r1, $r6;
        org.apache.tika.mime.MimeType $r3, $r7, $r8;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.Patterns patterns>;

        $r3 = virtualinvoke $r2.<org.apache.tika.mime.Patterns: org.apache.tika.mime.MimeType matches(java.lang.String)>(r1);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r5 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.Patterns patterns>;

        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r7 = virtualinvoke $r5.<org.apache.tika.mime.Patterns: org.apache.tika.mime.MimeType matches(java.lang.String)>($r6);

        if $r7 == null goto label2;

        return $r7;

     label2:
        $r8 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType rootMimeType>;

        return $r8;
    }

    public org.apache.tika.mime.MimeType getMimeType(java.io.File) throws org.apache.tika.mime.MimeTypeException, java.io.IOException
    {
        org.apache.tika.mime.MimeTypes r0;
        org.apache.tika.Tika $r1;
        java.lang.String $r3;
        java.io.File r2;
        org.apache.tika.mime.MimeType $r4;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        r2 := @parameter0: java.io.File;

        $r1 = new org.apache.tika.Tika;

        specialinvoke $r1.<org.apache.tika.Tika: void <init>(org.apache.tika.detect.Detector)>(r0);

        $r3 = virtualinvoke $r1.<org.apache.tika.Tika: java.lang.String detect(java.io.File)>(r2);

        $r4 = virtualinvoke r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType forName(java.lang.String)>($r3);

        return $r4;
    }

    private java.util.List getMimeType(byte[])
    {
        byte[] r0;
        org.apache.tika.metadata.Metadata $r41;
        java.io.ByteArrayInputStream $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Exception $r32;
        java.util.List $r3, $r11, $r20, $r30, $r33;
        javax.xml.namespace.QName $r16;
        org.apache.tika.detect.TextDetector $r39;
        org.apache.tika.mime.MediaType $r8;
        java.util.ArrayList $r37;
        org.apache.tika.mime.Magic r34;
        int $i0, $i1, $i2, $i3, i4, i5, $i7;
        java.lang.String $r9, $r13, $r14, $r17, $r18, $r24, $r25, $r26, $r27;
        java.util.Iterator $r4, $r21;
        java.lang.IllegalArgumentException $r36;
        org.apache.tika.mime.MimeTypes r2;
        java.lang.Object $r12, $r22, $r28;
        org.apache.tika.detect.XmlRootExtractor $r38;
        org.apache.tika.mime.MimeType $r10, $r19, r23, $r29, r35;

        r2 := @this: org.apache.tika.mime.MimeTypes;

        r0 := @parameter0: byte[];

        if r0 != null goto label01;

        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Data is missing");

        throw $r36;

     label01:
        $i0 = lengthof r0;

        if $i0 != 0 goto label02;

        $r30 = r2.<org.apache.tika.mime.MimeTypes: java.util.List rootMimeTypeL>;

        return $r30;

     label02:
        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>(int)>(1);

        $i7 = (int) -1;

        i4 = $i7;

        $r3 = r2.<org.apache.tika.mime.MimeTypes: java.util.List magics>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r28 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r34 = (org.apache.tika.mime.Magic) $r28;

        if i4 <= 0 goto label04;

        $i3 = virtualinvoke r34.<org.apache.tika.mime.Magic: int getPriority()>();

        if i4 <= $i3 goto label04;

        goto label06;

     label04:
        $z7 = virtualinvoke r34.<org.apache.tika.mime.Magic: boolean eval(byte[])>(r0);

        if $z7 == 0 goto label05;

        $r29 = virtualinvoke r34.<org.apache.tika.mime.Magic: org.apache.tika.mime.MimeType getType()>();

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r29);

        i4 = virtualinvoke r34.<org.apache.tika.mime.Magic: int getPriority()>();

     label05:
        goto label03;

     label06:
        $z1 = interfaceinvoke $r37.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label15;

        i5 = 0;

     label07:
        $i2 = interfaceinvoke $r37.<java.util.List: int size()>();

        if i5 >= $i2 goto label14;

        $r12 = interfaceinvoke $r37.<java.util.List: java.lang.Object get(int)>(i5);

        r35 = (org.apache.tika.mime.MimeType) $r12;

        $r13 = "application/xml";

        $r14 = virtualinvoke r35.<org.apache.tika.mime.MimeType: java.lang.String getName()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 != 0 goto label08;

        $r26 = "text/html";

        $r27 = virtualinvoke r35.<org.apache.tika.mime.MimeType: java.lang.String getName()>();

        $z6 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z6 == 0 goto label13;

     label08:
        $r38 = new org.apache.tika.detect.XmlRootExtractor;

        specialinvoke $r38.<org.apache.tika.detect.XmlRootExtractor: void <init>()>();

        $r16 = virtualinvoke $r38.<org.apache.tika.detect.XmlRootExtractor: javax.xml.namespace.QName extractRootElement(byte[])>(r0);

        if $r16 == null goto label12;

        $r20 = r2.<org.apache.tika.mime.MimeTypes: java.util.List xmls>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.apache.tika.mime.MimeType) $r22;

        $r24 = virtualinvoke $r16.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r25 = virtualinvoke $r16.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z5 = virtualinvoke r23.<org.apache.tika.mime.MimeType: boolean matchesXML(java.lang.String,java.lang.String)>($r24, $r25);

        if $z5 == 0 goto label10;

        interfaceinvoke $r37.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i5, r23);

        goto label11;

     label10:
        goto label09;

     label11:
        goto label13;

     label12:
        $r17 = "application/xml";

        $r18 = virtualinvoke r35.<org.apache.tika.mime.MimeType: java.lang.String getName()>();

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z3 == 0 goto label13;

        $r19 = r2.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType textMimeType>;

        interfaceinvoke $r37.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i5, $r19);

     label13:
        i5 = i5 + 1;

        goto label07;

     label14:
        return $r37;

     label15:
        $r39 = new org.apache.tika.detect.TextDetector;

        $i1 = virtualinvoke r2.<org.apache.tika.mime.MimeTypes: int getMinLength()>();

        specialinvoke $r39.<org.apache.tika.detect.TextDetector: void <init>(int)>($i1);

        $r40 = new java.io.ByteArrayInputStream;

        specialinvoke $r40.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        $r41 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r41.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r8 = virtualinvoke $r39.<org.apache.tika.detect.TextDetector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r40, $r41);

        $r9 = virtualinvoke $r8.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        $r10 = virtualinvoke r2.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType forName(java.lang.String)>($r9);

        $r11 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

     label16:
        return $r11;

     label17:
        $r32 := @caughtexception;

        $r33 = r2.<org.apache.tika.mime.MimeTypes: java.util.List rootMimeTypeL>;

        return $r33;

        catch java.lang.Exception from label15 to label16 with label17;
    }

    private byte[] readMagicHeader(java.io.InputStream) throws java.io.IOException
    {
        byte[] r2, r3;
        java.lang.IllegalArgumentException $r5;
        org.apache.tika.mime.MimeTypes r1;
        int $i0, $i1, $i2, $i3, i4, i5, $i7;
        java.io.InputStream r0;

        r1 := @this: org.apache.tika.mime.MimeTypes;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InputStream is missing");

        throw $r5;

     label1:
        $i0 = virtualinvoke r1.<org.apache.tika.mime.MimeTypes: int getMinLength()>();

        r2 = newarray (byte)[$i0];

        i4 = 0;

        i5 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2);

     label2:
        $i7 = (int) -1;

        if i5 == $i7 goto label4;

        i4 = i4 + i5;

        $i1 = lengthof r2;

        if i4 != $i1 goto label3;

        return r2;

     label3:
        $i2 = lengthof r2;

        $i3 = $i2 - i4;

        i5 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r2, i4, $i3);

        goto label2;

     label4:
        r3 = newarray (byte)[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i4);

        return r3;
    }

    public org.apache.tika.mime.MimeType forName(java.lang.String) throws org.apache.tika.mime.MimeTypeException
    {
        java.lang.Throwable $r16;
        org.apache.tika.mime.MediaTypeRegistry $r8;
        org.apache.tika.mime.MediaType $r1, $r9;
        java.util.Map $r10, $r12, $r15;
        java.lang.String r0, $r6;
        org.apache.tika.mime.MimeTypes r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.Object $r11, $r13;
        org.apache.tika.mime.MimeTypeException $r2;
        org.apache.tika.mime.MimeType $r14, r17;

        r7 := @this: org.apache.tika.mime.MimeTypes;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>(r0);

        if $r1 == null goto label7;

        $r8 = r7.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry>;

        $r9 = virtualinvoke $r8.<org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaType normalize(org.apache.tika.mime.MediaType)>($r1);

        $r10 = r7.<org.apache.tika.mime.MimeTypes: java.util.Map types>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r17 = (org.apache.tika.mime.MimeType) $r11;

        if r17 != null goto label6;

        entermonitor r7;

     label1:
        $r12 = r7.<org.apache.tika.mime.MimeTypes: java.util.Map types>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r17 = (org.apache.tika.mime.MimeType) $r13;

        if r17 != null goto label2;

        $r14 = new org.apache.tika.mime.MimeType;

        specialinvoke $r14.<org.apache.tika.mime.MimeType: void <init>(org.apache.tika.mime.MediaType)>($r1);

        r17 = $r14;

        virtualinvoke r7.<org.apache.tika.mime.MimeTypes: void add(org.apache.tika.mime.MimeType)>($r14);

        $r15 = r7.<org.apache.tika.mime.MimeTypes: java.util.Map types>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r14);

     label2:
        exitmonitor r7;

     label3:
        goto label6;

     label4:
        $r16 := @caughtexception;

        exitmonitor r7;

     label5:
        throw $r16;

     label6:
        return r17;

     label7:
        $r2 = new org.apache.tika.mime.MimeTypeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid media type name: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.tika.mime.MimeTypeException: void <init>(java.lang.String)>($r6);

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.tika.mime.MimeType getRegisteredMimeType(java.lang.String) throws org.apache.tika.mime.MimeTypeException
    {
        org.apache.tika.mime.MediaTypeRegistry $r8;
        org.apache.tika.mime.MediaType $r1, $r9;
        java.util.Map $r10;
        org.apache.tika.mime.MimeTypes r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.Object $r11;
        java.lang.String r0, $r6;
        org.apache.tika.mime.MimeTypeException $r2;
        org.apache.tika.mime.MimeType $r12;

        r7 := @this: org.apache.tika.mime.MimeTypes;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $r8 = r7.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry>;

        $r9 = virtualinvoke $r8.<org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaType normalize(org.apache.tika.mime.MediaType)>($r1);

        $r10 = r7.<org.apache.tika.mime.MimeTypes: java.util.Map types>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r12 = (org.apache.tika.mime.MimeType) $r11;

        return $r12;

     label1:
        $r2 = new org.apache.tika.mime.MimeTypeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid media type name: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.tika.mime.MimeTypeException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public synchronized void setSuperType(org.apache.tika.mime.MimeType, org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry $r2;
        org.apache.tika.mime.MimeTypes r0;
        org.apache.tika.mime.MediaType $r3, r4;
        org.apache.tika.mime.MimeType r1;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        r1 := @parameter0: org.apache.tika.mime.MimeType;

        r4 := @parameter1: org.apache.tika.mime.MediaType;

        $r2 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry>;

        $r3 = virtualinvoke r1.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType getType()>();

        virtualinvoke $r2.<org.apache.tika.mime.MediaTypeRegistry: void addSuperType(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType)>($r3, r4);

        return;
    }

    synchronized void addAlias(org.apache.tika.mime.MimeType, org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry $r2;
        org.apache.tika.mime.MimeTypes r0;
        org.apache.tika.mime.MediaType $r3, r4;
        org.apache.tika.mime.MimeType r1;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        r1 := @parameter0: org.apache.tika.mime.MimeType;

        r4 := @parameter1: org.apache.tika.mime.MediaType;

        $r2 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry>;

        $r3 = virtualinvoke r1.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType getType()>();

        virtualinvoke $r2.<org.apache.tika.mime.MediaTypeRegistry: void addAlias(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType)>($r3, r4);

        return;
    }

    public void addPattern(org.apache.tika.mime.MimeType, java.lang.String) throws org.apache.tika.mime.MimeTypeException
    {
        org.apache.tika.mime.MimeTypes r0;
        java.lang.String r2;
        org.apache.tika.mime.MimeType r1;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        r1 := @parameter0: org.apache.tika.mime.MimeType;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.tika.mime.MimeTypes: void addPattern(org.apache.tika.mime.MimeType,java.lang.String,boolean)>(r1, r2, 0);

        return;
    }

    public void addPattern(org.apache.tika.mime.MimeType, java.lang.String, boolean) throws org.apache.tika.mime.MimeTypeException
    {
        org.apache.tika.mime.Patterns $r3;
        org.apache.tika.mime.MimeTypes r0;
        java.lang.String r1;
        org.apache.tika.mime.MimeType r2;
        boolean z0;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        r2 := @parameter0: org.apache.tika.mime.MimeType;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.Patterns patterns>;

        virtualinvoke $r3.<org.apache.tika.mime.Patterns: void add(java.lang.String,boolean,org.apache.tika.mime.MimeType)>(r1, z0, r2);

        return;
    }

    public org.apache.tika.mime.MediaTypeRegistry getMediaTypeRegistry()
    {
        org.apache.tika.mime.MimeTypes r0;
        org.apache.tika.mime.MediaTypeRegistry $r1;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        $r1 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry>;

        return $r1;
    }

    public int getMinLength()
    {
        org.apache.tika.mime.MimeTypes r0;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        return 65536;
    }

    void add(org.apache.tika.mime.MimeType)
    {
        org.apache.tika.mime.MediaTypeRegistry $r2;
        org.apache.tika.mime.MediaType $r3, $r5;
        java.util.List $r6, $r7, $r8;
        java.util.Map $r4;
        org.apache.tika.mime.MimeTypes r0;
        org.apache.tika.mime.MimeType r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        r1 := @parameter0: org.apache.tika.mime.MimeType;

        $r2 = r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry>;

        $r3 = virtualinvoke r1.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType getType()>();

        virtualinvoke $r2.<org.apache.tika.mime.MediaTypeRegistry: void addType(org.apache.tika.mime.MediaType)>($r3);

        $r4 = r0.<org.apache.tika.mime.MimeTypes: java.util.Map types>;

        $r5 = virtualinvoke r1.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType getType()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        $z0 = virtualinvoke r1.<org.apache.tika.mime.MimeType: boolean hasMagic()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.tika.mime.MimeTypes: java.util.List magics>;

        $r8 = virtualinvoke r1.<org.apache.tika.mime.MimeType: java.util.List getMagics()>();

        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r8);

     label1:
        $z1 = virtualinvoke r1.<org.apache.tika.mime.MimeType: boolean hasRootXML()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<org.apache.tika.mime.MimeTypes: java.util.List xmls>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    void init()
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.List $r4, $r5, $r8, $r9, $r10;
        java.util.Map $r1;
        org.apache.tika.mime.MimeTypes r0;
        java.lang.Object $r6;
        org.apache.tika.mime.MimeType r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.mime.MimeTypes;

        $r1 = r0.<org.apache.tika.mime.MimeTypes: java.util.Map types>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.tika.mime.MimeType) $r6;

        $r8 = r0.<org.apache.tika.mime.MimeTypes: java.util.List magics>;

        $r9 = virtualinvoke r7.<org.apache.tika.mime.MimeType: java.util.List getMagics()>();

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        $z1 = virtualinvoke r7.<org.apache.tika.mime.MimeType: boolean hasRootXML()>();

        if $z1 == 0 goto label2;

        $r10 = r0.<org.apache.tika.mime.MimeTypes: java.util.List xmls>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r7);

     label2:
        goto label1;

     label3:
        $r4 = r0.<org.apache.tika.mime.MimeTypes: java.util.List magics>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        $r5 = r0.<org.apache.tika.mime.MimeTypes: java.util.List xmls>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r5);

        return;
    }

    public org.apache.tika.mime.MediaType detect(java.io.InputStream, org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        java.lang.Throwable $r15;
        byte[] $r12;
        java.net.URISyntaxException $r14;
        org.apache.tika.mime.MediaType $r3, $r6;
        org.apache.tika.metadata.Metadata r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r10, r17, $r18;
        java.net.URI $r9;
        boolean $z0;
        java.util.List r16;
        org.apache.tika.mime.MimeTypes r7;
        java.lang.Object $r4;
        org.apache.tika.mime.MimeTypeException $r13;
        org.apache.tika.mime.MimeType $r5, $r8, $r11;
        java.io.InputStream r0;

        r7 := @this: org.apache.tika.mime.MimeTypes;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: org.apache.tika.metadata.Metadata;

        r16 = null;

        if r0 == null goto label05;

        $i4 = virtualinvoke r7.<org.apache.tika.mime.MimeTypes: int getMinLength()>();

        virtualinvoke r0.<java.io.InputStream: void mark(int)>($i4);

     label01:
        $r12 = specialinvoke r7.<org.apache.tika.mime.MimeTypes: byte[] readMagicHeader(java.io.InputStream)>(r0);

        r16 = specialinvoke r7.<org.apache.tika.mime.MimeTypes: java.util.List getMimeType(byte[])>($r12);

     label02:
        virtualinvoke r0.<java.io.InputStream: void reset()>();

        goto label05;

     label03:
        $r15 := @caughtexception;

     label04:
        virtualinvoke r0.<java.io.InputStream: void reset()>();

        throw $r15;

     label05:
        $r2 = virtualinvoke r1.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("resourceName");

        if $r2 == null goto label10;

        r17 = null;

     label06:
        $r9 = new java.net.URI;

        specialinvoke $r9.<java.net.URI: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.net.URI: java.lang.String getPath()>();

        if $r10 == null goto label07;

        $i0 = virtualinvoke $r10.<java.lang.String: int lastIndexOf(int)>(47);

        $i1 = $i0 + 1;

        $i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label07;

        $i3 = $i0 + 1;

        r17 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>($i3);

     label07:
        goto label09;

     label08:
        $r14 := @caughtexception;

        r17 = $r2;

     label09:
        if r17 == null goto label10;

        $r11 = virtualinvoke r7.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType getMimeType(java.lang.String)>(r17);

        r16 = specialinvoke r7.<org.apache.tika.mime.MimeTypes: java.util.List applyHint(java.util.List,org.apache.tika.mime.MimeType)>(r16, $r11);

     label10:
        $r18 = virtualinvoke r1.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Type");

        if $r18 == null goto label14;

     label11:
        $r8 = virtualinvoke r7.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType forName(java.lang.String)>($r18);

        r16 = specialinvoke r7.<org.apache.tika.mime.MimeTypes: java.util.List applyHint(java.util.List,org.apache.tika.mime.MimeType)>(r16, $r8);

     label12:
        goto label14;

     label13:
        $r13 := @caughtexception;

     label14:
        if r16 == null goto label15;

        $z0 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label16;

     label15:
        $r3 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM>;

        return $r3;

     label16:
        $r4 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.apache.tika.mime.MimeType) $r4;

        $r6 = virtualinvoke $r5.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType getType()>();

        return $r6;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.net.URISyntaxException from label06 to label07 with label08;
        catch org.apache.tika.mime.MimeTypeException from label11 to label12 with label13;
    }

    private java.util.List applyHint(java.util.List, org.apache.tika.mime.MimeType)
    {
        org.apache.tika.mime.MediaTypeRegistry $r7;
        org.apache.tika.mime.MediaType $r8, $r9;
        java.util.List r0, $r2, $r5;
        int $i0, i1;
        org.apache.tika.mime.MimeTypes r6;
        java.lang.Object $r3;
        org.apache.tika.mime.MimeType r1, r4;
        boolean $z0, $z1, $z2;

        r6 := @this: org.apache.tika.mime.MimeTypes;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.apache.tika.mime.MimeType;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        return $r2;

     label2:
        i1 = 0;

     label3:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label6;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.tika.mime.MimeType) $r3;

        $z1 = virtualinvoke r1.<org.apache.tika.mime.MimeType: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label4;

        $r7 = r6.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry registry>;

        $r8 = virtualinvoke r1.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType getType()>();

        $r9 = virtualinvoke r4.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType getType()>();

        $z2 = virtualinvoke $r7.<org.apache.tika.mime.MediaTypeRegistry: boolean isSpecializationOf(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType)>($r8, $r9);

        if $z2 == 0 goto label5;

     label4:
        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        return $r5;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return r0;
    }

    public static synchronized org.apache.tika.mime.MimeTypes getDefaultMimeTypes()
    {
        org.apache.tika.mime.MimeTypes $r0;

        $r0 = staticinvoke <org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeTypes getDefaultMimeTypes(java.lang.ClassLoader)>(null);

        return $r0;
    }

    public static synchronized org.apache.tika.mime.MimeTypes getDefaultMimeTypes(java.lang.ClassLoader)
    {
        java.io.IOException $r5;
        java.lang.RuntimeException $r6, $r8;
        java.util.Map $r2, $r3;
        org.apache.tika.mime.MimeTypes $r1, r9;
        java.lang.Object $r4;
        java.lang.ClassLoader r0;
        org.apache.tika.mime.MimeTypeException $r7;

        r0 := @parameter0: java.lang.ClassLoader;

        r9 = <org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeTypes DEFAULT_TYPES>;

        if r0 == null goto label1;

        $r3 = <org.apache.tika.mime.MimeTypes: java.util.Map CLASSLOADER_SPECIFIC_DEFAULT_TYPES>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r9 = (org.apache.tika.mime.MimeTypes) $r4;

     label1:
        if r9 != null goto label8;

     label2:
        $r1 = staticinvoke <org.apache.tika.mime.MimeTypesFactory: org.apache.tika.mime.MimeTypes create(java.lang.String,java.lang.String,java.lang.ClassLoader)>("tika-mimetypes.xml", "custom-mimetypes.xml", r0);

        r9 = $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to parse the default media type registry", $r7);

        throw $r8;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to read the default media type registry", $r5);

        throw $r6;

     label6:
        if r0 != null goto label7;

        <org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeTypes DEFAULT_TYPES> = $r1;

        goto label8;

     label7:
        $r2 = <org.apache.tika.mime.MimeTypes: java.util.Map CLASSLOADER_SPECIFIC_DEFAULT_TYPES>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r1);

     label8:
        return r9;

        catch org.apache.tika.mime.MimeTypeException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <org.apache.tika.mime.MimeTypes: java.lang.String XML> = "application/xml";

        <org.apache.tika.mime.MimeTypes: java.lang.String PLAIN_TEXT> = "text/plain";

        <org.apache.tika.mime.MimeTypes: java.lang.String OCTET_STREAM> = "application/octet-stream";

        <org.apache.tika.mime.MimeTypes: long serialVersionUID> = -1350863170146349036L;

        <org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeTypes DEFAULT_TYPES> = null;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.tika.mime.MimeTypes: java.util.Map CLASSLOADER_SPECIFIC_DEFAULT_TYPES> = $r0;

        return;
    }
}
