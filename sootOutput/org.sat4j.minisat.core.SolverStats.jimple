public class org.sat4j.minisat.core.SolverStats extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public int starts;
    public long decisions;
    public long propagations;
    public long inspects;
    public long conflicts;
    public long learnedliterals;
    public long learnedbinaryclauses;
    public long learnedternaryclauses;
    public long learnedclauses;
    public long ignoredclauses;
    public long rootSimplifications;
    public long reducedliterals;
    public long changedreason;
    public int reduceddb;
    public int shortcuts;
    public long updateLBD;

    public void <init>()
    {
        org.sat4j.minisat.core.SolverStats r0;

        r0 := @this: org.sat4j.minisat.core.SolverStats;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void reset()
    {
        org.sat4j.minisat.core.SolverStats r0;

        r0 := @this: org.sat4j.minisat.core.SolverStats;

        r0.<org.sat4j.minisat.core.SolverStats: int starts> = 0;

        r0.<org.sat4j.minisat.core.SolverStats: long decisions> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long propagations> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long inspects> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: int shortcuts> = 0;

        r0.<org.sat4j.minisat.core.SolverStats: long conflicts> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long learnedliterals> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long learnedclauses> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long ignoredclauses> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long learnedbinaryclauses> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long learnedternaryclauses> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long rootSimplifications> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long reducedliterals> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: long changedreason> = 0L;

        r0.<org.sat4j.minisat.core.SolverStats: int reduceddb> = 0;

        r0.<org.sat4j.minisat.core.SolverStats: long updateLBD> = 0L;

        return;
    }

    public void printStat(java.io.PrintWriter, java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r43, $r44, $r45, $r46, $r48, $r49, $r50, $r51, $r53, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r63, $r64, $r65, $r66, $r68, $r69, $r70, $r71, $r73, $r74, $r75, $r76, $r78, $r79, $r80, $r81;
        long $l1, $l2, $l3, $l4, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l15;
        java.lang.String r2, $r7, $r12, $r17, $r22, $r27, $r32, $r37, $r42, $r47, $r52, $r57, $r62, $r67, $r72, $r77, $r82;
        org.sat4j.minisat.core.SolverStats r5;
        int $i0, $i5, $i14;

        r5 := @this: org.sat4j.minisat.core.SolverStats;

        r0 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("starts\t\t: ");

        $i0 = r5.<org.sat4j.minisat.core.SolverStats: int starts>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("conflicts\t\t: ");

        $l1 = r5.<org.sat4j.minisat.core.SolverStats: long conflicts>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("decisions\t\t: ");

        $l2 = r5.<org.sat4j.minisat.core.SolverStats: long decisions>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("propagations\t\t: ");

        $l3 = r5.<org.sat4j.minisat.core.SolverStats: long propagations>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inspects\t\t: ");

        $l4 = r5.<org.sat4j.minisat.core.SolverStats: long inspects>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shortcuts\t\t: ");

        $i5 = r5.<org.sat4j.minisat.core.SolverStats: int shortcuts>;

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("learnt literals\t: ");

        $l6 = r5.<org.sat4j.minisat.core.SolverStats: long learnedliterals>;

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("learnt binary clauses\t: ");

        $l7 = r5.<org.sat4j.minisat.core.SolverStats: long learnedbinaryclauses>;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("learnt ternary clauses\t: ");

        $l8 = r5.<org.sat4j.minisat.core.SolverStats: long learnedternaryclauses>;

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r47);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("learnt constraints\t: ");

        $l9 = r5.<org.sat4j.minisat.core.SolverStats: long learnedclauses>;

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r52);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignored constraints\t: ");

        $l10 = r5.<org.sat4j.minisat.core.SolverStats: long ignoredclauses>;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("root simplifications\t: ");

        $l11 = r5.<org.sat4j.minisat.core.SolverStats: long rootSimplifications>;

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r62);

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removed literals (reason simplification)\t: ");

        $l12 = r5.<org.sat4j.minisat.core.SolverStats: long reducedliterals>;

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reason swapping (by a shorter reason)\t: ");

        $l13 = r5.<org.sat4j.minisat.core.SolverStats: long changedreason>;

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r72);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calls to reduceDB\t: ");

        $i14 = r5.<org.sat4j.minisat.core.SolverStats: int reduceddb>;

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r77);

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number of update (reduction) of LBD\t: ");

        $l15 = r5.<org.sat4j.minisat.core.SolverStats: long updateLBD>;

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r82);

        return;
    }

    public java.util.Map toMap()
    {
        java.lang.IllegalAccessException $r8;
        java.util.HashMap $r0;
        java.lang.reflect.Field r4;
        java.lang.IllegalArgumentException $r9;
        org.sat4j.minisat.core.SolverStats r1;
        java.lang.reflect.Field[] $r3;
        int i0, i1;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.String $r5;
        java.lang.Number $r7;

        r1 := @this: org.sat4j.minisat.core.SolverStats;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        r4 = $r3[i1];

     label2:
        $r5 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.String getName()>();

        $r6 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.lang.Number) $r6;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        goto label6;

     label5:
        $r8 := @caughtexception;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return $r0;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
        catch java.lang.IllegalAccessException from label2 to label3 with label5;
    }

    public static void <clinit>()
    {
        <org.sat4j.minisat.core.SolverStats: long serialVersionUID> = 1L;

        return;
    }
}
