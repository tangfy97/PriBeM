public class com.jidesoft.swing.TableSearchable extends com.jidesoft.swing.Searchable implements javax.swing.event.TableModelListener, java.beans.PropertyChangeListener
{
    private int[] _searchColumnIndices;

    public void <init>(javax.swing.JTable)
    {
        javax.swing.JTable r1;
        int[] $r2;
        com.jidesoft.swing.TableSearchable r0;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        r1 := @parameter0: javax.swing.JTable;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void <init>(javax.swing.JComponent)>(r1);

        $r2 = newarray (int)[1];

        $r2[0] = 0;

        r0.<com.jidesoft.swing.TableSearchable: int[] _searchColumnIndices> = $r2;

        return;
    }

    public void installListeners()
    {
        javax.swing.JComponent $r1, $r2, $r5;
        javax.swing.JTable $r3;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0;
        javax.swing.table.TableModel $r4;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void installListeners()>();

        $r1 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.JTable;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        $r3 = (javax.swing.JTable) $r2;

        $r4 = virtualinvoke $r3.<javax.swing.JTable: javax.swing.table.TableModel getModel()>();

        interfaceinvoke $r4.<javax.swing.table.TableModel: void addTableModelListener(javax.swing.event.TableModelListener)>(r0);

        $r5 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        virtualinvoke $r5.<javax.swing.JComponent: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("model", r0);

     label1:
        return;
    }

    public void uninstallListeners()
    {
        javax.swing.JComponent $r1, $r2, $r5;
        javax.swing.JTable $r3;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0;
        javax.swing.table.TableModel $r4;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void uninstallListeners()>();

        $r1 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.JTable;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        $r3 = (javax.swing.JTable) $r2;

        $r4 = virtualinvoke $r3.<javax.swing.JTable: javax.swing.table.TableModel getModel()>();

        interfaceinvoke $r4.<javax.swing.table.TableModel: void removeTableModelListener(javax.swing.event.TableModelListener)>(r0);

        $r5 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        virtualinvoke $r5.<javax.swing.JComponent: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("model", r0);

     label1:
        return;
    }

    protected void setSelectedIndex(int, boolean)
    {
        javax.swing.JComponent $r1;
        int $i0, i1, $i2, $i3, $i4, i5, i6;
        javax.swing.JTable r2;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        i1 := @parameter0: int;

        z2 := @parameter1: boolean;

        $r1 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        r2 = (javax.swing.JTable) $r1;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isColumnSelectionAllowed(javax.swing.JTable)>(r2);

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: int getMainIndex()>();

        virtualinvoke r0.<com.jidesoft.swing.TableSearchable: void addTableSelection(javax.swing.JTable,int,int,boolean)>(r2, $i4, i1, z2);

        goto label4;

     label1:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isRowSelectionAllowed(javax.swing.JTable)>(r2);

        if $z1 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: int getMainIndex()>();

        $i3 = virtualinvoke r2.<javax.swing.JTable: int convertColumnIndexToView(int)>($i2);

        virtualinvoke r0.<com.jidesoft.swing.TableSearchable: void addTableSelection(javax.swing.JTable,int,int,boolean)>(r2, i1, $i3, z2);

        goto label4;

     label2:
        $i0 = virtualinvoke r2.<javax.swing.JTable: int getColumnCount()>();

        if $i0 != 0 goto label3;

        return;

     label3:
        i5 = i1 / $i0;

        i6 = i1 % $i0;

        virtualinvoke r0.<com.jidesoft.swing.TableSearchable: void addTableSelection(javax.swing.JTable,int,int,boolean)>(r2, i5, i6, z2);

     label4:
        return;
    }

    protected void addTableSelection(javax.swing.JTable, int, int, boolean)
    {
        int i0, i1, $i2, $i3;
        javax.swing.JTable r0;
        boolean z0, $z1;
        com.jidesoft.swing.TableSearchable r1;

        r1 := @this: com.jidesoft.swing.TableSearchable;

        r0 := @parameter0: javax.swing.JTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<javax.swing.JTable: void clearSelection()>();

     label1:
        if i0 < 0 goto label2;

        if i1 < 0 goto label2;

        $i2 = virtualinvoke r0.<javax.swing.JTable: int getRowCount()>();

        if i0 >= $i2 goto label2;

        $i3 = virtualinvoke r0.<javax.swing.JTable: int getColumnCount()>();

        if i1 >= $i3 goto label2;

        $z1 = virtualinvoke r0.<javax.swing.JTable: boolean isCellSelected(int,int)>(i0, i1);

        if $z1 != 0 goto label2;

        virtualinvoke r0.<javax.swing.JTable: void changeSelection(int,int,boolean,boolean)>(i0, i1, 1, 0);

     label2:
        return;
    }

    protected boolean isColumnSelectionAllowed(javax.swing.JTable)
    {
        int[] $r1;
        int $i0;
        javax.swing.JTable r2;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        r2 := @parameter0: javax.swing.JTable;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: int[] getSearchColumnIndices()>();

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $z0 = virtualinvoke r2.<javax.swing.JTable: boolean getColumnSelectionAllowed()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<javax.swing.JTable: boolean getRowSelectionAllowed()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected boolean isRowSelectionAllowed(javax.swing.JTable)
    {
        int[] $r1;
        int $i0;
        javax.swing.JTable r2;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        r2 := @parameter0: javax.swing.JTable;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: int[] getSearchColumnIndices()>();

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $z0 = virtualinvoke r2.<javax.swing.JTable: boolean getColumnSelectionAllowed()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<javax.swing.JTable: boolean getRowSelectionAllowed()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected boolean isSearchSelectedRows()
    {
        int[] $r1;
        int $i0;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: int[] getSearchColumnIndices()>();

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected int getSelectedIndex()
    {
        javax.swing.ListSelectionModel $r3, $r5, $r6, $r8;
        javax.swing.table.TableColumnModel $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0, $z1;
        javax.swing.JComponent $r1;
        javax.swing.JTable r2;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        $r1 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        r2 = (javax.swing.JTable) $r1;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isColumnSelectionAllowed(javax.swing.JTable)>(r2);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r2.<javax.swing.JTable: javax.swing.table.TableColumnModel getColumnModel()>();

        $r8 = interfaceinvoke $r7.<javax.swing.table.TableColumnModel: javax.swing.ListSelectionModel getSelectionModel()>();

        $i6 = interfaceinvoke $r8.<javax.swing.ListSelectionModel: int getAnchorSelectionIndex()>();

        return $i6;

     label1:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isRowSelectionAllowed(javax.swing.JTable)>(r2);

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r2.<javax.swing.JTable: javax.swing.ListSelectionModel getSelectionModel()>();

        $i5 = interfaceinvoke $r6.<javax.swing.ListSelectionModel: int getAnchorSelectionIndex()>();

        return $i5;

     label2:
        $r3 = virtualinvoke r2.<javax.swing.JTable: javax.swing.ListSelectionModel getSelectionModel()>();

        $i0 = interfaceinvoke $r3.<javax.swing.ListSelectionModel: int getAnchorSelectionIndex()>();

        $i1 = virtualinvoke r2.<javax.swing.JTable: int getColumnCount()>();

        $i2 = $i0 * $i1;

        $r4 = virtualinvoke r2.<javax.swing.JTable: javax.swing.table.TableColumnModel getColumnModel()>();

        $r5 = interfaceinvoke $r4.<javax.swing.table.TableColumnModel: javax.swing.ListSelectionModel getSelectionModel()>();

        $i3 = interfaceinvoke $r5.<javax.swing.ListSelectionModel: int getAnchorSelectionIndex()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    protected java.lang.Object getElementAt(int)
    {
        int[] $r4;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, i7, $i8, $i9, $i10, i11, i12, i13, i14, i15;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0, $z1, $z2, z3;
        javax.swing.JComponent $r1;
        javax.swing.JTable r2;
        java.lang.Object $r3, $r5, $r6, $r7;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        r2 = (javax.swing.JTable) $r1;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isColumnSelectionAllowed(javax.swing.JTable)>(r2);

        if $z0 == 0 goto label1;

        $i10 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: int getMainIndex()>();

        $r7 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: java.lang.Object getValueAt(javax.swing.JTable,int,int)>(r2, $i10, i0);

        return $r7;

     label1:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isRowSelectionAllowed(javax.swing.JTable)>(r2);

        if $z1 == 0 goto label2;

        $i8 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: int getMainIndex()>();

        $i9 = virtualinvoke r2.<javax.swing.JTable: int convertColumnIndexToView(int)>($i8);

        $r6 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: java.lang.Object getValueAt(javax.swing.JTable,int,int)>(r2, i0, $i9);

        return $r6;

     label2:
        $z2 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isSearchSelectedRows()>();

        if $z2 == 0 goto label7;

        $i3 = virtualinvoke r2.<javax.swing.JTable: int getColumnCount()>();

        i11 = i0 % $i3;

        $i4 = virtualinvoke r2.<javax.swing.JTable: int convertColumnIndexToModel(int)>(i11);

        z3 = 1;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: int[] getSearchColumnIndices()>();

        i5 = lengthof $r4;

        i12 = 0;

     label3:
        if i12 >= i5 goto label5;

        i7 = $r4[i12];

        if i7 != $i4 goto label4;

        z3 = 0;

     label4:
        i12 = i12 + 1;

        goto label3;

     label5:
        if z3 == 0 goto label6;

        return null;

     label6:
        $i6 = virtualinvoke r2.<javax.swing.JTable: int getColumnCount()>();

        i13 = i0 / $i6;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: java.lang.Object getValueAt(javax.swing.JTable,int,int)>(r2, i13, i11);

        return $r5;

     label7:
        $i1 = virtualinvoke r2.<javax.swing.JTable: int getColumnCount()>();

        i14 = i0 % $i1;

        $i2 = virtualinvoke r2.<javax.swing.JTable: int getColumnCount()>();

        i15 = i0 / $i2;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: java.lang.Object getValueAt(javax.swing.JTable,int,int)>(r2, i15, i14);

        return $r3;
    }

    protected java.lang.Object getValueAt(javax.swing.JTable, int, int)
    {
        int i0, $i1, i2, $i3;
        javax.swing.JTable r0;
        java.lang.Object $r1;
        com.jidesoft.swing.TableSearchable r2;

        r2 := @this: com.jidesoft.swing.TableSearchable;

        r0 := @parameter0: javax.swing.JTable;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<javax.swing.JTable: int getRowCount()>();

        if i0 >= $i1 goto label1;

        if i2 < 0 goto label1;

        $i3 = virtualinvoke r0.<javax.swing.JTable: int getColumnCount()>();

        if i2 >= $i3 goto label1;

        $r1 = virtualinvoke r0.<javax.swing.JTable: java.lang.Object getValueAt(int,int)>(i0, i2);

        return $r1;

     label1:
        return null;
    }

    protected int getElementCount()
    {
        javax.swing.JComponent $r1;
        int $i0, $i1, $i2, $i3, $i4;
        javax.swing.JTable r2;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        $r1 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        r2 = (javax.swing.JTable) $r1;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isColumnSelectionAllowed(javax.swing.JTable)>(r2);

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r2.<javax.swing.JTable: int getColumnCount()>();

        return $i4;

     label1:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isRowSelectionAllowed(javax.swing.JTable)>(r2);

        if $z1 == 0 goto label2;

        $i3 = virtualinvoke r2.<javax.swing.JTable: int getRowCount()>();

        return $i3;

     label2:
        $i0 = virtualinvoke r2.<javax.swing.JTable: int getColumnCount()>();

        $i1 = virtualinvoke r2.<javax.swing.JTable: int getRowCount()>();

        $i2 = $i0 * $i1;

        return $i2;
    }

    protected java.lang.String convertElementToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;
        com.jidesoft.swing.TableSearchable r2;

        r2 := @this: com.jidesoft.swing.TableSearchable;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;

     label1:
        return "";
    }

    public int[] getSearchColumnIndices()
    {
        int[] $r1;
        com.jidesoft.swing.TableSearchable r0;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        $r1 = r0.<com.jidesoft.swing.TableSearchable: int[] _searchColumnIndices>;

        return $r1;
    }

    public int getMainIndex()
    {
        int[] $r1, $r2;
        int $i0, $i1, $i3;
        com.jidesoft.swing.TableSearchable r0;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        $r1 = r0.<com.jidesoft.swing.TableSearchable: int[] _searchColumnIndices>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $i3 = (int) -1;

        return $i3;

     label1:
        $r2 = r0.<com.jidesoft.swing.TableSearchable: int[] _searchColumnIndices>;

        $i1 = $r2[0];

        return $i1;
    }

    public void setSearchColumnIndices(int[])
    {
        int[] $r1, r2;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        r2 := @parameter0: int[];

        if r2 != null goto label1;

        r2 = newarray (int)[0];

     label1:
        $r1 = r0.<com.jidesoft.swing.TableSearchable: int[] _searchColumnIndices>;

        $z0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean equals(java.lang.Object,java.lang.Object,boolean)>($r1, r2, 1);

        if $z0 != 0 goto label2;

        r0.<com.jidesoft.swing.TableSearchable: int[] _searchColumnIndices> = r2;

        virtualinvoke r0.<com.jidesoft.swing.TableSearchable: void hidePopup()>();

     label2:
        return;
    }

    public void setMainIndex(int)
    {
        int[] $r0, $r2, r3;
        int i0;
        com.jidesoft.swing.TableSearchable r1;

        r1 := @this: com.jidesoft.swing.TableSearchable;

        i0 := @parameter0: int;

        $r0 = newarray (int)[1];

        $r0[0] = i0;

        r3 = $r0;

        if i0 >= 0 goto label1;

        r3 = newarray (int)[0];

     label1:
        $r2 = r1.<com.jidesoft.swing.TableSearchable: int[] _searchColumnIndices>;

        if $r2 == r3 goto label2;

        r1.<com.jidesoft.swing.TableSearchable: int[] _searchColumnIndices> = r3;

        virtualinvoke r1.<com.jidesoft.swing.TableSearchable: void hidePopup()>();

     label2:
        return;
    }

    protected boolean isFindNextKey(java.awt.event.KeyEvent)
    {
        javax.swing.JComponent $r2;
        java.awt.event.KeyEvent r0;
        int $i0;
        javax.swing.JTable r3;
        com.jidesoft.swing.TableSearchable r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: com.jidesoft.swing.TableSearchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        $r2 = r1.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        r3 = (javax.swing.JTable) $r2;

        $z0 = virtualinvoke r1.<com.jidesoft.swing.TableSearchable: boolean isColumnSelectionAllowed(javax.swing.JTable)>(r3);

        if $z0 == 0 goto label3;

        if $i0 != 39 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        $z1 = virtualinvoke r1.<com.jidesoft.swing.TableSearchable: boolean isRowSelectionAllowed(javax.swing.JTable)>(r3);

        if $z1 == 0 goto label6;

        if $i0 != 40 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;

     label6:
        if $i0 == 40 goto label7;

        if $i0 != 39 goto label8;

     label7:
        $z4 = 1;

        goto label9;

     label8:
        $z4 = 0;

     label9:
        return $z4;
    }

    protected boolean isFindPreviousKey(java.awt.event.KeyEvent)
    {
        javax.swing.JComponent $r2;
        java.awt.event.KeyEvent r0;
        int $i0;
        javax.swing.JTable r3;
        com.jidesoft.swing.TableSearchable r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: com.jidesoft.swing.TableSearchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        $r2 = r1.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        r3 = (javax.swing.JTable) $r2;

        $z0 = virtualinvoke r1.<com.jidesoft.swing.TableSearchable: boolean isColumnSelectionAllowed(javax.swing.JTable)>(r3);

        if $z0 == 0 goto label3;

        if $i0 != 37 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        $z1 = virtualinvoke r1.<com.jidesoft.swing.TableSearchable: boolean isRowSelectionAllowed(javax.swing.JTable)>(r3);

        if $z1 == 0 goto label6;

        if $i0 != 38 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;

     label6:
        if $i0 == 38 goto label7;

        if $i0 != 37 goto label8;

     label7:
        $z4 = 1;

        goto label9;

     label8:
        $z4 = 0;

     label9:
        return $z4;
    }

    public void tableChanged(javax.swing.event.TableModelEvent)
    {
        javax.swing.event.TableModelEvent r2;
        com.jidesoft.swing.event.SearchableEvent $r1;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        r2 := @parameter0: javax.swing.event.TableModelEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TableSearchable: void hidePopup()>();

        $r1 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r1.<com.jidesoft.swing.event.SearchableEvent: void <init>(com.jidesoft.swing.Searchable,int)>(r0, 3005);

        virtualinvoke r0.<com.jidesoft.swing.TableSearchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r1);

     label1:
        return;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        com.jidesoft.swing.event.SearchableEvent $r6;
        java.lang.Object $r4, $r5, $r7, $r9;
        java.lang.String $r1, $r2;
        java.beans.PropertyChangeEvent r0;
        boolean $z0, $z1, $z2;
        com.jidesoft.swing.TableSearchable r3;
        javax.swing.table.TableModel $r8, $r10;

        r3 := @this: com.jidesoft.swing.TableSearchable;

        r0 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = "model";

        $r2 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        virtualinvoke r3.<com.jidesoft.swing.TableSearchable: void hidePopup()>();

        $r4 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $z1 = $r4 instanceof javax.swing.table.TableModel;

        if $z1 == 0 goto label1;

        $r9 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $r10 = (javax.swing.table.TableModel) $r9;

        interfaceinvoke $r10.<javax.swing.table.TableModel: void removeTableModelListener(javax.swing.event.TableModelListener)>(r3);

     label1:
        $r5 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $z2 = $r5 instanceof javax.swing.table.TableModel;

        if $z2 == 0 goto label2;

        $r7 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r8 = (javax.swing.table.TableModel) $r7;

        interfaceinvoke $r8.<javax.swing.table.TableModel: void addTableModelListener(javax.swing.event.TableModelListener)>(r3);

     label2:
        $r6 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r6.<com.jidesoft.swing.event.SearchableEvent: void <init>(com.jidesoft.swing.Searchable,int)>(r3, 3005);

        virtualinvoke r3.<com.jidesoft.swing.TableSearchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r6);

     label3:
        return;
    }

    protected boolean isActivateKey(java.awt.event.KeyEvent)
    {
        java.awt.event.KeyEvent r1;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        r1 := @parameter0: java.awt.event.KeyEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TableSearchable: boolean isSelectedCellEditable()>();

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<com.jidesoft.swing.Searchable: boolean isActivateKey(java.awt.event.KeyEvent)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected boolean isSelectedCellEditable()
    {
        javax.swing.JComponent $r1, $r3, $r5;
        int $i0, $i1, $i3, $i5;
        javax.swing.JTable $r2, $r4, $r6;
        com.jidesoft.swing.TableSearchable r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.TableSearchable;

        $r1 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        $r2 = (javax.swing.JTable) $r1;

        $i0 = virtualinvoke $r2.<javax.swing.JTable: int getSelectedRow()>();

        $r3 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        $r4 = (javax.swing.JTable) $r3;

        $i1 = virtualinvoke $r4.<javax.swing.JTable: int getSelectedColumn()>();

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $i5 = (int) -1;

        if $i1 == $i5 goto label1;

        $r5 = r0.<com.jidesoft.swing.TableSearchable: javax.swing.JComponent _component>;

        $r6 = (javax.swing.JTable) $r5;

        $z0 = virtualinvoke $r6.<javax.swing.JTable: boolean isCellEditable(int,int)>($i0, $i1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
