final class org.waveprotocol.box.server.waveserver.QueryHelper$5 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        org.waveprotocol.box.server.waveserver.QueryHelper$5 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.QueryHelper$5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.waveprotocol.wave.model.wave.data.WaveViewData, org.waveprotocol.wave.model.wave.data.WaveViewData)
    {
        org.waveprotocol.box.server.waveserver.QueryHelper$5 r0;
        org.waveprotocol.wave.model.wave.data.WaveViewData r1, r3;
        int $i0;
        org.waveprotocol.wave.model.wave.ParticipantId $r2, $r4;

        r0 := @this: org.waveprotocol.box.server.waveserver.QueryHelper$5;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveViewData;

        r3 := @parameter1: org.waveprotocol.wave.model.wave.data.WaveViewData;

        $r2 = specialinvoke r0.<org.waveprotocol.box.server.waveserver.QueryHelper$5: org.waveprotocol.wave.model.wave.ParticipantId computeCreator(org.waveprotocol.wave.model.wave.data.WaveViewData)>(r1);

        $r4 = specialinvoke r0.<org.waveprotocol.box.server.waveserver.QueryHelper$5: org.waveprotocol.wave.model.wave.ParticipantId computeCreator(org.waveprotocol.wave.model.wave.data.WaveViewData)>(r3);

        $i0 = virtualinvoke $r2.<org.waveprotocol.wave.model.wave.ParticipantId: int compareTo(org.waveprotocol.wave.model.wave.ParticipantId)>($r4);

        return $i0;
    }

    private org.waveprotocol.wave.model.wave.ParticipantId computeCreator(org.waveprotocol.wave.model.wave.data.WaveViewData)
    {
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.wave.data.ObservableWaveletData r5;
        org.waveprotocol.wave.model.id.WaveletId $r6;
        org.waveprotocol.wave.model.wave.ParticipantId $r3, $r7;
        java.lang.Iterable $r1;
        org.waveprotocol.box.server.waveserver.QueryHelper$5 r8;
        org.waveprotocol.wave.model.wave.data.WaveViewData r0;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r8 := @this: org.waveprotocol.box.server.waveserver.QueryHelper$5;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveViewData;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveViewData: java.lang.Iterable getWavelets()>();

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.wave.data.ObservableWaveletData) $r4;

        $r6 = interfaceinvoke r5.<org.waveprotocol.wave.model.wave.data.ObservableWaveletData: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $z1 = staticinvoke <org.waveprotocol.wave.model.id.IdUtil: boolean isConversationRootWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r6);

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r5.<org.waveprotocol.wave.model.wave.data.ObservableWaveletData: org.waveprotocol.wave.model.wave.ParticipantId getCreator()>();

        return $r7;

     label2:
        goto label1;

     label3:
        $r3 = <org.waveprotocol.box.server.waveserver.QueryHelper: org.waveprotocol.wave.model.wave.ParticipantId UNKNOWN_CREATOR>;

        return $r3;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.box.server.waveserver.QueryHelper$5 r0;
        org.waveprotocol.wave.model.wave.data.WaveViewData $r3, $r4;
        int $i0;
        java.lang.Object r1, r2;

        r0 := @this: org.waveprotocol.box.server.waveserver.QueryHelper$5;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.model.wave.data.WaveViewData) r1;

        $r3 = (org.waveprotocol.wave.model.wave.data.WaveViewData) r2;

        $i0 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.QueryHelper$5: int compare(org.waveprotocol.wave.model.wave.data.WaveViewData,org.waveprotocol.wave.model.wave.data.WaveViewData)>($r4, $r3);

        return $i0;
    }
}
