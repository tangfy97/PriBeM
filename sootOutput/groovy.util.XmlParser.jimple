public class groovy.util.XmlParser extends java.lang.Object implements org.xml.sax.ContentHandler
{
    private java.lang.StringBuffer bodyText;
    private java.util.List stack;
    private org.xml.sax.Locator locator;
    private org.xml.sax.XMLReader reader;
    private groovy.util.Node parent;
    private boolean trimWhitespace;
    private boolean namespaceAware;

    public void <init>() throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException
    {
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        specialinvoke r0.<groovy.util.XmlParser: void <init>(boolean,boolean)>(0, 1);

        return;
    }

    public void <init>(boolean, boolean) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException
    {
        javax.xml.parsers.SAXParserFactory $r3;
        groovy.util.XmlParser r0;
        java.util.ArrayList $r2;
        org.xml.sax.XMLReader $r5;
        java.lang.StringBuffer $r1;
        javax.xml.parsers.SAXParser $r4;
        boolean z0, z1;

        r0 := @this: groovy.util.XmlParser;

        z1 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<groovy.util.XmlParser: java.lang.StringBuffer bodyText> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<groovy.util.XmlParser: java.util.List stack> = $r2;

        r0.<groovy.util.XmlParser: boolean trimWhitespace> = 1;

        $r3 = staticinvoke <groovy.xml.FactorySupport: javax.xml.parsers.SAXParserFactory createSaxParserFactory()>();

        virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(z0);

        r0.<groovy.util.XmlParser: boolean namespaceAware> = z0;

        virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(z1);

        $r4 = virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader> = $r5;

        return;
    }

    public void <init>(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLReader r3;
        java.lang.StringBuffer $r1;
        groovy.util.XmlParser r0;
        java.util.ArrayList $r2;

        r0 := @this: groovy.util.XmlParser;

        r3 := @parameter0: org.xml.sax.XMLReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<groovy.util.XmlParser: java.lang.StringBuffer bodyText> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<groovy.util.XmlParser: java.util.List stack> = $r2;

        r0.<groovy.util.XmlParser: boolean trimWhitespace> = 1;

        r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader> = r3;

        return;
    }

    public void <init>(javax.xml.parsers.SAXParser) throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r4;
        java.lang.StringBuffer $r1;
        javax.xml.parsers.SAXParser r3;
        groovy.util.XmlParser r0;
        java.util.ArrayList $r2;

        r0 := @this: groovy.util.XmlParser;

        r3 := @parameter0: javax.xml.parsers.SAXParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<groovy.util.XmlParser: java.lang.StringBuffer bodyText> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<groovy.util.XmlParser: java.util.List stack> = $r2;

        r0.<groovy.util.XmlParser: boolean trimWhitespace> = 1;

        $r4 = virtualinvoke r3.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader> = $r4;

        return;
    }

    public boolean isTrimWhitespace()
    {
        groovy.util.XmlParser r0;
        boolean $z0;

        r0 := @this: groovy.util.XmlParser;

        $z0 = r0.<groovy.util.XmlParser: boolean trimWhitespace>;

        return $z0;
    }

    public void setTrimWhitespace(boolean)
    {
        groovy.util.XmlParser r0;
        boolean z0;

        r0 := @this: groovy.util.XmlParser;

        z0 := @parameter0: boolean;

        r0.<groovy.util.XmlParser: boolean trimWhitespace> = z0;

        return;
    }

    public groovy.util.Node parse(java.io.File) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r0;
        java.io.FileInputStream $r1;
        groovy.util.Node $r10;
        groovy.util.XmlParser r8;
        java.io.File r2;
        org.xml.sax.XMLReader $r9;
        java.lang.StringBuffer $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r8 := @this: groovy.util.XmlParser;

        r2 := @parameter0: java.io.File;

        $r0 = new org.xml.sax.InputSource;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r1);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("file://");

        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r7);

        $r9 = virtualinvoke r8.<groovy.util.XmlParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r9.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r0);

        $r10 = r8.<groovy.util.XmlParser: groovy.util.Node parent>;

        return $r10;
    }

    public groovy.util.Node parse(org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r1;
        org.xml.sax.InputSource r2;
        groovy.util.Node $r3;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r2 := @parameter0: org.xml.sax.InputSource;

        $r1 = virtualinvoke r0.<groovy.util.XmlParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r2);

        $r3 = r0.<groovy.util.XmlParser: groovy.util.Node parent>;

        return $r3;
    }

    public groovy.util.Node parse(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r0;
        org.xml.sax.XMLReader $r3;
        groovy.util.Node $r4;
        groovy.util.XmlParser r2;
        java.io.InputStream r1;

        r2 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        $r3 = virtualinvoke r2.<groovy.util.XmlParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r0);

        $r4 = r2.<groovy.util.XmlParser: groovy.util.Node parent>;

        return $r4;
    }

    public groovy.util.Node parse(java.io.Reader) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r0;
        org.xml.sax.XMLReader $r3;
        java.io.Reader r1;
        groovy.util.Node $r4;
        groovy.util.XmlParser r2;

        r2 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.io.Reader;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r1);

        $r3 = virtualinvoke r2.<groovy.util.XmlParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r0);

        $r4 = r2.<groovy.util.XmlParser: groovy.util.Node parent>;

        return $r4;
    }

    public groovy.util.Node parse(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r0;
        org.xml.sax.XMLReader $r3;
        java.lang.String r1;
        groovy.util.Node $r4;
        groovy.util.XmlParser r2;

        r2 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke r2.<groovy.util.XmlParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r0);

        $r4 = r2.<groovy.util.XmlParser: groovy.util.Node parent>;

        return $r4;
    }

    public groovy.util.Node parseText(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.io.StringReader $r1;
        java.lang.String r2;
        groovy.util.Node $r3;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        $r3 = virtualinvoke r0.<groovy.util.XmlParser: groovy.util.Node parse(java.io.Reader)>($r1);

        return $r3;
    }

    public boolean isNamespaceAware()
    {
        groovy.util.XmlParser r0;
        boolean $z0;

        r0 := @this: groovy.util.XmlParser;

        $z0 = r0.<groovy.util.XmlParser: boolean namespaceAware>;

        return $z0;
    }

    public void setNamespaceAware(boolean)
    {
        groovy.util.XmlParser r0;
        boolean z0;

        r0 := @this: groovy.util.XmlParser;

        z0 := @parameter0: boolean;

        r0.<groovy.util.XmlParser: boolean namespaceAware> = z0;

        return;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.xml.sax.XMLReader $r1;
        org.xml.sax.DTDHandler $r2;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        $r1 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.XMLReader: org.xml.sax.DTDHandler getDTDHandler()>();

        return $r2;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.xml.sax.XMLReader $r1;
        groovy.util.XmlParser r0;
        org.xml.sax.EntityResolver $r2;

        r0 := @this: groovy.util.XmlParser;

        $r1 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.XMLReader: org.xml.sax.EntityResolver getEntityResolver()>();

        return $r2;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.xml.sax.XMLReader $r1;
        org.xml.sax.ErrorHandler $r2;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        $r1 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.XMLReader: org.xml.sax.ErrorHandler getErrorHandler()>();

        return $r2;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.XMLReader $r2;
        java.lang.String r1;
        groovy.util.XmlParser r0;
        boolean $z0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        $z0 = interfaceinvoke $r2.<org.xml.sax.XMLReader: boolean getFeature(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.XMLReader $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        $r3 = interfaceinvoke $r2.<org.xml.sax.XMLReader: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.xml.sax.XMLReader $r2;
        org.xml.sax.DTDHandler r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        $r2 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r1);

        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.xml.sax.XMLReader $r2;
        groovy.util.XmlParser r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        $r2 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>(r1);

        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.xml.sax.XMLReader $r2;
        org.xml.sax.ErrorHandler r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        $r2 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r1);

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.XMLReader $r2;
        java.lang.String r1;
        groovy.util.XmlParser r0;
        boolean z0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>(r1, z0);

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.XMLReader $r3;
        java.lang.Object r2;
        java.lang.String r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r0.<groovy.util.XmlParser: groovy.util.Node parent> = null;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        java.util.List $r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        $r1 = r0.<groovy.util.XmlParser: java.util.List stack>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        groovy.util.NodeList $r8;
        java.util.HashMap $r6;
        org.xml.sax.Attributes r5;
        int $i0, i1;
        java.lang.String r1, r2, r3, $r12, $r13, $r14, $r16;
        groovy.util.Node $r7, $r9, $r10;
        groovy.util.XmlParser r0;
        java.util.List $r11;
        java.lang.Object $r4, $r15;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: org.xml.sax.Attributes;

        virtualinvoke r0.<groovy.util.XmlParser: void addTextToNode()>();

        $r4 = virtualinvoke r0.<groovy.util.XmlParser: java.lang.Object getElementName(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        $i0 = interfaceinvoke r5.<org.xml.sax.Attributes: int getLength()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>(int)>($i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r12 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i1);

        $r13 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i1);

        $r14 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i1);

        $r15 = virtualinvoke r0.<groovy.util.XmlParser: java.lang.Object getElementName(java.lang.String,java.lang.String,java.lang.String)>($r12, $r13, $r14);

        $r16 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = new groovy.util.Node;

        $r9 = r0.<groovy.util.XmlParser: groovy.util.Node parent>;

        $r8 = new groovy.util.NodeList;

        specialinvoke $r8.<groovy.util.NodeList: void <init>()>();

        specialinvoke $r7.<groovy.util.Node: void <init>(groovy.util.Node,java.lang.Object,java.util.Map,java.lang.Object)>($r9, $r4, $r6, $r8);

        r0.<groovy.util.XmlParser: groovy.util.Node parent> = $r7;

        $r11 = r0.<groovy.util.XmlParser: java.util.List stack>;

        $r10 = r0.<groovy.util.XmlParser: groovy.util.Node parent>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String r9, r10, r11;
        boolean $z0, $z1;
        groovy.util.Node $r8;
        groovy.util.XmlParser r0;
        java.util.List $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.Object $r7;

        r0 := @this: groovy.util.XmlParser;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        virtualinvoke r0.<groovy.util.XmlParser: void addTextToNode()>();

        $r1 = r0.<groovy.util.XmlParser: java.util.List stack>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<groovy.util.XmlParser: java.util.List stack>;

        $r2 = r0.<groovy.util.XmlParser: java.util.List stack>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>($i1);

        $r4 = r0.<groovy.util.XmlParser: java.util.List stack>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r6 = r0.<groovy.util.XmlParser: java.util.List stack>;

        $r5 = r0.<groovy.util.XmlParser: java.util.List stack>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i3);

        $r8 = (groovy.util.Node) $r7;

        r0.<groovy.util.XmlParser: groovy.util.Node parent> = $r8;

     label1:
        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r2;
        int i0, i1;
        char[] r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<groovy.util.XmlParser: java.lang.StringBuffer bodyText>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1, r2;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1;
        char[] r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1, r2;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public org.xml.sax.Locator getDocumentLocator()
    {
        groovy.util.XmlParser r0;
        org.xml.sax.Locator $r1;

        r0 := @this: groovy.util.XmlParser;

        $r1 = r0.<groovy.util.XmlParser: org.xml.sax.Locator locator>;

        return $r1;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        groovy.util.XmlParser r0;
        org.xml.sax.Locator r1;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: org.xml.sax.Locator;

        r0.<groovy.util.XmlParser: org.xml.sax.Locator locator> = r1;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        r1 := @parameter0: java.lang.String;

        return;
    }

    protected org.xml.sax.XMLReader getXMLReader()
    {
        org.xml.sax.XMLReader $r1, $r2;
        groovy.util.XmlParser r0;

        r0 := @this: groovy.util.XmlParser;

        $r1 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r0);

        $r2 = r0.<groovy.util.XmlParser: org.xml.sax.XMLReader reader>;

        return $r2;
    }

    protected void addTextToNode()
    {
        groovy.util.Node $r4;
        groovy.util.XmlParser r0;
        java.util.List $r5;
        java.lang.StringBuffer $r1, $r3;
        int $i0;
        java.lang.String $r2, r6;
        boolean $z0;

        r0 := @this: groovy.util.XmlParser;

        $r1 = r0.<groovy.util.XmlParser: java.lang.StringBuffer bodyText>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        r6 = $r2;

        $z0 = r0.<groovy.util.XmlParser: boolean trimWhitespace>;

        if $z0 == 0 goto label1;

        r6 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label1:
        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r4 = r0.<groovy.util.XmlParser: groovy.util.Node parent>;

        $r5 = virtualinvoke $r4.<groovy.util.Node: java.util.List children()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r0.<groovy.util.XmlParser: java.lang.StringBuffer bodyText> = $r3;

        return;
    }

    protected java.lang.Object getElementName(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        groovy.util.XmlParser r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String r0, r1, r2, r4, r5;
        groovy.xml.QName $r6;
        boolean $z0;

        r3 := @this: groovy.util.XmlParser;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r4 = r0;

        r5 = "";

        if r0 == null goto label1;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 >= 1 goto label2;

     label1:
        r4 = r1;

     label2:
        if r2 == null goto label3;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 > 0 goto label4;

     label3:
        return r4;

     label4:
        if r1 == null goto label5;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        $z0 = r3.<groovy.util.XmlParser: boolean namespaceAware>;

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>(":");

        if $i2 <= 0 goto label5;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label5:
        $r6 = new groovy.xml.QName;

        specialinvoke $r6.<groovy.xml.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r2, r4, r5);

        return $r6;
    }
}
