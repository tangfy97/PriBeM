public class ucar.ma2.Range$Iterator extends java.lang.Object
{
    private int current;
    final ucar.ma2.Range this$0;

    public void <init>(ucar.ma2.Range)
    {
        ucar.ma2.Range r1;
        ucar.ma2.Range$Iterator r0;

        r0 := @this: ucar.ma2.Range$Iterator;

        r1 := @parameter0: ucar.ma2.Range;

        r0.<ucar.ma2.Range$Iterator: ucar.ma2.Range this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.ma2.Range$Iterator: int current> = 0;

        return;
    }

    public boolean hasNext()
    {
        ucar.ma2.Range $r1;
        ucar.ma2.Range$Iterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: ucar.ma2.Range$Iterator;

        $i0 = r0.<ucar.ma2.Range$Iterator: int current>;

        $r1 = r0.<ucar.ma2.Range$Iterator: ucar.ma2.Range this$0>;

        $i1 = staticinvoke <ucar.ma2.Range: int access$000(ucar.ma2.Range)>($r1);

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int next()
    {
        ucar.ma2.Range $r1;
        ucar.ma2.Range$Iterator r0;
        int $i0, $i1, $i2;

        r0 := @this: ucar.ma2.Range$Iterator;

        $r1 = r0.<ucar.ma2.Range$Iterator: ucar.ma2.Range this$0>;

        $i0 = r0.<ucar.ma2.Range$Iterator: int current>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.Range$Iterator: int current> = $i1;

        $i2 = staticinvoke <ucar.ma2.Range: int access$100(ucar.ma2.Range,int)>($r1, $i0);

        return $i2;
    }
}
