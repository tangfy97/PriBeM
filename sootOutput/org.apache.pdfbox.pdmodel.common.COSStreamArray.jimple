public class org.apache.pdfbox.pdmodel.common.COSStreamArray extends org.apache.pdfbox.cos.COSStream
{
    private org.apache.pdfbox.cos.COSArray streams;
    private org.apache.pdfbox.cos.COSStream firstStream;

    public void <init>(org.apache.pdfbox.cos.COSArray)
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSArray r2;
        org.apache.pdfbox.cos.COSBase $r3;
        int $i0;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r4;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        r2 := @parameter0: org.apache.pdfbox.cos.COSArray;

        $r1 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)>($r1, null);

        r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams> = r2;

        $i0 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>();

        if $i0 <= 0 goto label1;

        $r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(0);

        $r4 = (org.apache.pdfbox.cos.COSStream) $r3;

        r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream> = $r4;

     label1:
        return;
    }

    public org.apache.pdfbox.cos.COSBase get(int)
    {
        org.apache.pdfbox.cos.COSArray $r1;
        org.apache.pdfbox.cos.COSBase $r2;
        int i0;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i0);

        return $r2;
    }

    public int getStreamCount()
    {
        int $i0;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSArray $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: int size()>();

        return $i0;
    }

    public org.apache.pdfbox.io.RandomAccess getScratchFile()
    {
        org.apache.pdfbox.io.RandomAccess $r2;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess getScratchFile()>();

        return $r2;
    }

    public org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)
    {
        org.apache.pdfbox.cos.COSName r1;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        r1 := @parameter0: org.apache.pdfbox.cos.COSName;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>(r1);

        return $r3;
    }

    public org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)
    {
        org.apache.pdfbox.cos.COSName r1;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        r1 := @parameter0: org.apache.pdfbox.cos.COSName;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1);

        return $r3;
    }

    public java.lang.String toString()
    {
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        return "COSStream{}";
    }

    public java.util.List getStreamTokens() throws java.io.IOException
    {
        org.apache.pdfbox.pdfparser.PDFStreamParser $r3;
        java.util.List r4;
        org.apache.pdfbox.cos.COSArray $r1;
        int $i0;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: int size()>();

        if $i0 <= 0 goto label1;

        $r3 = new org.apache.pdfbox.pdfparser.PDFStreamParser;

        specialinvoke $r3.<org.apache.pdfbox.pdfparser.PDFStreamParser: void <init>(org.apache.pdfbox.cos.COSStream)>(r0);

        virtualinvoke $r3.<org.apache.pdfbox.pdfparser.PDFStreamParser: void parse()>();

        r4 = virtualinvoke $r3.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List getTokens()>();

        goto label2;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r4 = $r2;

     label2:
        return r4;
    }

    public org.apache.pdfbox.cos.COSDictionary getDictionary()
    {
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        return $r1;
    }

    public java.io.InputStream getFilteredStream() throws java.io.IOException
    {
        java.io.IOException $r0;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r1;

        r1 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r0 = new java.io.IOException;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("Error: Not allowed to get filtered stream from array of streams.");

        throw $r0;
    }

    public java.io.InputStream getUnfilteredStream() throws java.io.IOException
    {
        byte[] $r2;
        org.apache.pdfbox.cos.COSArray $r4, $r7;
        java.util.Enumeration $r6;
        java.io.SequenceInputStream $r5;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r3;
        java.util.Vector $r0;
        java.io.ByteArrayInputStream $r11;
        org.apache.pdfbox.cos.COSBase $r8;
        int $i0, i1;
        java.lang.String $r1;
        org.apache.pdfbox.cos.COSStream r9;
        java.io.InputStream $r10;

        r3 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r1 = "\n";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        i1 = 0;

     label1:
        $r4 = r3.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        $i0 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i1 >= $i0 goto label2;

        $r7 = r3.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1);

        r9 = (org.apache.pdfbox.cos.COSStream) $r8;

        $r10 = virtualinvoke r9.<org.apache.pdfbox.cos.COSStream: java.io.InputStream getUnfilteredStream()>();

        virtualinvoke $r0.<java.util.Vector: boolean add(java.lang.Object)>($r10);

        $r11 = new java.io.ByteArrayInputStream;

        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        virtualinvoke $r0.<java.util.Vector: boolean add(java.lang.Object)>($r11);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = new java.io.SequenceInputStream;

        $r6 = virtualinvoke $r0.<java.util.Vector: java.util.Enumeration elements()>();

        specialinvoke $r5.<java.io.SequenceInputStream: void <init>(java.util.Enumeration)>($r6);

        return $r5;
    }

    public java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor) throws org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.cos.ICOSVisitor r1;
        org.apache.pdfbox.cos.COSArray $r2;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        r1 := @parameter0: org.apache.pdfbox.cos.ICOSVisitor;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r1);

        return $r3;
    }

    public org.apache.pdfbox.cos.COSBase getFilters()
    {
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r1;
        org.apache.pdfbox.cos.COSBase $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>();

        return $r2;
    }

    public java.io.OutputStream createFilteredStream() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createFilteredStream()>();

        return $r2;
    }

    public java.io.OutputStream createFilteredStream(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        java.io.OutputStream $r3;
        org.apache.pdfbox.cos.COSBase r1;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        r1 := @parameter0: org.apache.pdfbox.cos.COSBase;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createFilteredStream(org.apache.pdfbox.cos.COSBase)>(r1);

        return $r3;
    }

    public void setFilters(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSBase r1;
        org.apache.pdfbox.cos.COSStream $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        r1 := @parameter0: org.apache.pdfbox.cos.COSBase;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: void setFilters(org.apache.pdfbox.cos.COSBase)>(r1);

        return;
    }

    public java.io.OutputStream createUnfilteredStream() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSStream firstStream>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        return $r2;
    }

    public void appendStream(org.apache.pdfbox.cos.COSStream)
    {
        org.apache.pdfbox.pdmodel.common.COSStreamArray r0;
        org.apache.pdfbox.cos.COSArray $r2;
        org.apache.pdfbox.cos.COSStream r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        r1 := @parameter0: org.apache.pdfbox.cos.COSStream;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r1);

        return;
    }

    public void insertCOSStream(org.apache.pdfbox.pdmodel.common.PDStream)
    {
        org.apache.pdfbox.cos.COSArray $r0, $r3, $r4;
        org.apache.pdfbox.pdmodel.common.COSStreamArray r2;
        org.apache.pdfbox.pdmodel.common.PDStream r1;

        r2 := @this: org.apache.pdfbox.pdmodel.common.COSStreamArray;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.common.PDStream;

        $r0 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r0.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>(r1);

        $r3 = r2.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void addAll(org.apache.pdfbox.cos.COSArray)>($r3);

        $r4 = r2.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void clear()>();

        r2.<org.apache.pdfbox.pdmodel.common.COSStreamArray: org.apache.pdfbox.cos.COSArray streams> = $r0;

        return;
    }
}
