final class org.waveprotocol.wave.model.document.operation.algorithm.Decomposer extends java.lang.Object
{

    void <init>()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Decomposer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Decomposer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static org.waveprotocol.wave.model.util.Pair decompose(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        org.waveprotocol.wave.model.document.operation.algorithm.Decomposer$Target $r0;
        org.waveprotocol.wave.model.util.Pair $r2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r0 = new org.waveprotocol.wave.model.document.operation.algorithm.Decomposer$Target;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.Decomposer$Target: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Decomposer$1)>(null);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r0);

        $r2 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.Decomposer$Target: org.waveprotocol.wave.model.util.Pair finish()>();

        return $r2;
    }
}
