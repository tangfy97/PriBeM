public final class org.apache.poi.hdgf.streams.ChunkStream extends org.apache.poi.hdgf.streams.Stream
{
    private static org.apache.poi.util.POILogger logger;
    private org.apache.poi.hdgf.chunks.ChunkFactory chunkFactory;
    private org.apache.poi.hdgf.chunks.Chunk[] chunks;

    protected void <init>(org.apache.poi.hdgf.pointers.Pointer, org.apache.poi.hdgf.streams.StreamStore, org.apache.poi.hdgf.chunks.ChunkFactory)
    {
        org.apache.poi.hdgf.pointers.Pointer r1;
        org.apache.poi.hdgf.streams.ChunkStream r0;
        org.apache.poi.hdgf.chunks.ChunkFactory r3;
        org.apache.poi.hdgf.streams.StreamStore r2;

        r0 := @this: org.apache.poi.hdgf.streams.ChunkStream;

        r1 := @parameter0: org.apache.poi.hdgf.pointers.Pointer;

        r2 := @parameter1: org.apache.poi.hdgf.streams.StreamStore;

        r3 := @parameter2: org.apache.poi.hdgf.chunks.ChunkFactory;

        specialinvoke r0.<org.apache.poi.hdgf.streams.Stream: void <init>(org.apache.poi.hdgf.pointers.Pointer,org.apache.poi.hdgf.streams.StreamStore)>(r1, r2);

        r0.<org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.hdgf.chunks.ChunkFactory chunkFactory> = r3;

        virtualinvoke r2.<org.apache.poi.hdgf.streams.StreamStore: void copyBlockHeaderToContents()>();

        return;
    }

    public org.apache.poi.hdgf.chunks.Chunk[] getChunks()
    {
        org.apache.poi.hdgf.streams.ChunkStream r0;
        org.apache.poi.hdgf.chunks.Chunk[] $r1;

        r0 := @this: org.apache.poi.hdgf.streams.ChunkStream;

        $r1 = r0.<org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.hdgf.chunks.Chunk[] chunks>;

        return $r1;
    }

    public void findChunks()
    {
        byte[] $r4;
        org.apache.poi.hdgf.chunks.Chunk $r18;
        org.apache.poi.hdgf.streams.StreamStore $r3;
        org.apache.poi.hdgf.chunks.Chunk[] $r5, $r7;
        org.apache.poi.hdgf.chunks.ChunkFactory $r8, $r17;
        org.apache.poi.util.POILogger $r10, $r21;
        java.lang.Exception $r19;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r20, $r22, $r23, $r24, $r25;
        java.lang.Object[] $r6;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10;
        java.lang.String $r16, $r26;
        org.apache.poi.hdgf.pointers.Pointer $r2;
        org.apache.poi.hdgf.streams.ChunkStream r1;

        r1 := @this: org.apache.poi.hdgf.streams.ChunkStream;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.hdgf.pointers.Pointer getPointer()>();

        $i0 = virtualinvoke $r2.<org.apache.poi.hdgf.pointers.Pointer: int getOffset()>();

        if $i0 != 25779 goto label1;

     label1:
        i9 = 0;

        $r3 = virtualinvoke r1.<org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.hdgf.streams.StreamStore getStore()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.hdgf.streams.StreamStore: byte[] getContents()>();

     label2:
        $i10 = lengthof $r4;

        if i9 >= $i10 goto label5;

        $r8 = r1.<org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.hdgf.chunks.ChunkFactory chunkFactory>;

        $i2 = virtualinvoke $r8.<org.apache.poi.hdgf.chunks.ChunkFactory: int getVersion()>();

        $i3 = staticinvoke <org.apache.poi.hdgf.chunks.ChunkHeader: int getHeaderSize(int)>($i2);

        $i5 = i9 + $i3;

        $i4 = lengthof $r4;

        if $i5 > $i4 goto label3;

        $r17 = r1.<org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.hdgf.chunks.ChunkFactory chunkFactory>;

        $r18 = virtualinvoke $r17.<org.apache.poi.hdgf.chunks.ChunkFactory: org.apache.poi.hdgf.chunks.Chunk createChunk(byte[],int)>($r4, i9);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $i8 = virtualinvoke $r18.<org.apache.poi.hdgf.chunks.Chunk: int getOnDiskSize()>();

        i9 = i9 + $i8;

        goto label4;

     label3:
        $r10 = <org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.util.POILogger logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Needed ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes to create the next chunk header, but only found ");

        $i6 = lengthof $r4;

        $i7 = $i6 - i9;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, ignoring rest of data");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r16);

        i9 = lengthof $r4;

     label4:
        goto label2;

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        $r21 = <org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.util.POILogger logger>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create chunk at ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ignoring rest of data.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r26);

     label7:
        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r5 = newarray (org.apache.poi.hdgf.chunks.Chunk)[$i1];

        $r6 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (org.apache.poi.hdgf.chunks.Chunk[]) $r6;

        r1.<org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.hdgf.chunks.Chunk[] chunks> = $r7;

        return;

        catch java.lang.Exception from label2 to label5 with label6;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hdgf/streams/ChunkStream;");

        <org.apache.poi.hdgf.streams.ChunkStream: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
