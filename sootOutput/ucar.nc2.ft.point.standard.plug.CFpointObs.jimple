public class ucar.nc2.ft.point.standard.plug.CFpointObs extends ucar.nc2.ft.point.standard.TableConfigurerImpl
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        ucar.nc2.ft.point.standard.plug.CFpointObs r0;

        r0 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        specialinvoke r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: void <init>()>();

        return;
    }

    public boolean isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.ft.point.standard.plug.CFpointObs r5;
        java.util.StringTokenizer $r2;
        java.lang.String $r1, $r3, $r4;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.constants.FeatureType r6;
        boolean $z0, $z1;

        r5 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r6 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", null);

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ",");

     label2:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("CF");

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public ucar.nc2.ft.point.standard.TableConfig getConfig(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r3;
        ucar.nc2.ft.point.standard.TableConfig $r5, $r6, $r7, $r8, $r9, $r10;
        int[] $r4;
        int $i0, $i1;
        ucar.nc2.constants.FeatureType r11;
        boolean $z0;
        ucar.nc2.ft.point.standard.plug.CFpointObs r2;
        ucar.nc2.constants.CF$FeatureType $r1, r12;
        ucar.nc2.dataset.NetcdfDataset r0;

        r2 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r11 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter2: java.util.Formatter;

        $r1 = staticinvoke <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType getFeatureTypeFromGlobalAttribute(ucar.nc2.NetcdfFile)>(r0);

        r12 = $r1;

        if $r1 != null goto label1;

        r12 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType point>;

     label1:
        $z0 = specialinvoke r2.<ucar.nc2.ft.point.standard.plug.CFpointObs: boolean checkCoordinates(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r3);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r4 = <ucar.nc2.ft.point.standard.plug.CFpointObs$2: int[] $SwitchMap$ucar$nc2$constants$CF$FeatureType>;

        $i0 = virtualinvoke r12.<ucar.nc2.constants.CF$FeatureType: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            default: goto label9;
        };

     label3:
        $r10 = specialinvoke r2.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig getPointConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r3);

        return $r10;

     label4:
        $r9 = specialinvoke r2.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig getStationConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r3);

        return $r9;

     label5:
        $r8 = specialinvoke r2.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig getTrajectoryConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r3);

        return $r8;

     label6:
        $r7 = specialinvoke r2.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig getProfileConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r3);

        return $r7;

     label7:
        $r6 = specialinvoke r2.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig getTimeSeriesProfileConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r3);

        return $r6;

     label8:
        $r5 = specialinvoke r2.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig getSectionConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r3);

        return $r5;

     label9:
        return null;
    }

    private boolean checkCoordinates(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter)
    {
        java.lang.Object[] $r10, $r13, $r14, $r15;
        java.util.Formatter r9;
        ucar.nc2.dataset.CoordinateAxis $r2, $r4, $r6;
        ucar.nc2.constants.AxisType $r1, $r3, $r5;
        java.lang.String $r11, $r12;
        boolean $z0, z1, z2, z3;
        java.util.List $r7, $r8;
        ucar.nc2.ft.point.standard.plug.CFpointObs r16;
        ucar.nc2.dataset.NetcdfDataset r0;

        r16 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r9 := @parameter1: java.util.Formatter;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label1;

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs cant find a Time coordinate %n", $r15);

        z1 = 0;

        z3 = 0;

        z2 = 0;

     label1:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r3);

        if $r4 != null goto label2;

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs cant find a Latitude coordinate %n", $r14);

        z1 = 0;

        z3 = 0;

        z2 = 0;

     label2:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r5);

        if $r6 != null goto label3;

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs cant find a Longitude coordinate %n", $r13);

        z1 = 0;

        z3 = 0;

        z2 = 0;

     label3:
        if z3 != 0 goto label4;

        return 0;

     label4:
        $r7 = virtualinvoke $r4.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $r8 = virtualinvoke $r6.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label5;

        $r10 = newarray (java.lang.Object)[2];

        $r11 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r10[0] = $r11;

        $r12 = virtualinvoke $r6.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r10[1] = $r12;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Lat and Lon coordinate dimensions must match lat=%s lon=%s %n", $r10);

        z1 = 0;

        z2 = 0;

     label5:
        return z2;
    }

    private ucar.nc2.ft.point.standard.TableConfig getPointConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r8;
        java.util.Formatter r5;
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.point.standard.TableConfig $r6;
        ucar.nc2.ft.point.standard.plug.CFpointObs r4;
        ucar.nc2.constants.AxisType $r1;
        int $i0;
        ucar.nc2.Dimension $r3;
        java.lang.String $r9;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.constants.FeatureType $r7;

        r4 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r5 := @parameter1: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        $i0 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        if $i0 == 1 goto label1;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r8[0] = $r9;

        virtualinvoke r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs type=point: coord time must have rank 1, coord var= %s %n", $r8);

        return null;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r6 = specialinvoke r4.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeSingle(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,java.util.Formatter)>(r0, $r3, r5);

        $r7 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        $r6.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r7;

        return $r6;
    }

    private ucar.nc2.ft.point.standard.TableConfig getStationConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r2;
        ucar.nc2.dataset.CoordinateAxis $r6;
        ucar.nc2.ft.point.standard.TableConfig $r11, $r17, $r26, r30;
        ucar.nc2.ft.point.standard.JoinArray $r27;
        int[] $r13;
        ucar.nc2.constants.AxisType $r5;
        ucar.nc2.constants.FeatureType $r10, $r16;
        ucar.nc2.ft.point.standard.plug.CFpointObs r0;
        ucar.nc2.ft.point.standard.JoinArray$Type $r28;
        int $i0, $i1, $i2;
        ucar.nc2.Variable $r8;
        java.lang.String $r18, $r19, $r20, $r21, $r29, $r31;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r12, $r15;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r4, $r14;
        ucar.nc2.constants.CF$FeatureType $r3, $r7;
        ucar.nc2.Dimension r9, $r22, $r23, $r24, $r25;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.util.Formatter;

        $r3 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeries>;

        $r4 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingStation(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType,java.util.Formatter)>(r1, $r3, r2);

        if $r4 != null goto label01;

        return null;

     label01:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r5);

        $r7 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeries>;

        $r8 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.Variable identifyParent(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType)>(r1, $r7);

        r9 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r10 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r11 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeStationTable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo,java.util.Formatter)>(r1, $r10, $r4, r2);

        if $r11 != null goto label02;

        return null;

     label02:
        r30 = null;

        $r13 = <ucar.nc2.ft.point.standard.plug.CFpointObs$2: int[] $SwitchMap$ucar$nc2$ft$point$standard$plug$CFpointObs$Encoding>;

        $r12 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $i0 = virtualinvoke $r12.<ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: int ordinal()>();

        $i1 = $r13[$i0];

        tableswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            default: goto label10;
        };

     label03:
        r30 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeSingle(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,java.util.Formatter)>(r1, r9, r2);

        goto label10;

     label04:
        $r26 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r11, r9, r2);

        r30 = $r26;

        $i2 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i2 != 1 goto label10;

        $r27 = new ucar.nc2.ft.point.standard.JoinArray;

        $r28 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r27.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r6, $r28, 0);

        virtualinvoke $r26.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r27);

        $r29 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        $r26.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r29;

        goto label10;

     label05:
        $r25 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r24 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r30 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedContiguous(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r25, $r24, r2);

        goto label10;

     label06:
        $r23 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r22 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r30 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedIndex(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r23, $r22, r2);

        goto label10;

     label07:
        $r16 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r14 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r15 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding flat>;

        specialinvoke $r14.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension)>(r0, $r15, r9);

        $r17 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeStructTable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo,java.util.Formatter)>(r1, $r16, $r14, r2);

        r30 = $r17;

        if $r8 != null goto label08;

        $r31 = null;

        goto label09;

     label08:
        $r31 = virtualinvoke $r8.<ucar.nc2.Variable: java.lang.String getName()>();

     label09:
        $r17.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String parentIndex> = $r31;

        $r18 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r1, "station_id", r9, r2);

        $r17.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId> = $r18;

        $r19 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r1, "station_desc", r9, r2);

        $r17.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnDesc> = $r19;

        $r20 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r1, "station_WMO_id", r9, r2);

        $r17.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnWmoId> = $r20;

        $r21 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r1, "surface_altitude", r9, r2);

        $r17.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnAlt> = $r21;

     label10:
        if r30 != null goto label11;

        return null;

     label11:
        virtualinvoke $r11.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>(r30);

        return $r11;
    }

    private ucar.nc2.ft.point.standard.TableConfig getTrajectoryConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r19;
        java.util.Formatter r2;
        ucar.nc2.ft.point.standard.TableConfig $r6, r20;
        int[] $r11;
        int $i0, $i1;
        java.lang.String $r8, $r9;
        ucar.nc2.constants.FeatureType $r5;
        java.lang.UnsupportedOperationException $r12;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r10;
        ucar.nc2.ft.point.standard.plug.CFpointObs r0;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r4;
        ucar.nc2.constants.CF$FeatureType $r3, $r7;
        ucar.nc2.Dimension $r13, $r14, $r15, $r16, $r17, $r18;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.util.Formatter;

        $r3 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType trajectory>;

        $r4 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingTraj(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType,java.util.Formatter)>(r1, $r3, r2);

        if $r4 != null goto label01;

        return null;

     label01:
        $r5 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        $r6 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeStructTable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo,java.util.Formatter)>(r1, $r5, $r4, r2);

        if $r6 != null goto label02;

        return null;

     label02:
        $r7 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType trajectory>;

        $r8 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String identifyParentId(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType)>(r1, $r7);

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String feature_id> = $r8;

        $r9 = $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String feature_id>;

        if $r9 != null goto label03;

        $r19 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("getTrajectoryConfig cant find a trajectoy id %n", $r19);

     label03:
        r20 = null;

        $r11 = <ucar.nc2.ft.point.standard.plug.CFpointObs$2: int[] $SwitchMap$ucar$nc2$ft$point$standard$plug$CFpointObs$Encoding>;

        $r10 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $i0 = virtualinvoke $r10.<ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: int ordinal()>();

        $i1 = $r11[$i0];

        tableswitch($i1)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            default: goto label09;
        };

     label04:
        $r18 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r20 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeSingle(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r18, r2);

        goto label09;

     label05:
        $r17 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r20 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r6, $r17, r2);

        goto label09;

     label06:
        $r16 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r15 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r20 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedContiguous(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r16, $r15, r2);

        goto label09;

     label07:
        $r14 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r13 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r20 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedIndex(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r14, $r13, r2);

        goto label09;

     label08:
        $r12 = new java.lang.UnsupportedOperationException;

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("CFpointObs: trajectory flat encoding");

        throw $r12;

     label09:
        if r20 != null goto label10;

        return null;

     label10:
        virtualinvoke $r6.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>(r20);

        return $r6;
    }

    private ucar.nc2.ft.point.standard.TableConfig getProfileConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r24, $r25;
        java.util.Formatter r2;
        ucar.nc2.ft.point.standard.TableConfig $r6, $r20, r26;
        ucar.nc2.dataset.CoordinateAxis $r11;
        ucar.nc2.ft.point.standard.JoinArray $r21;
        int[] $r13;
        ucar.nc2.constants.AxisType $r10;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r9;
        ucar.nc2.constants.FeatureType $r5;
        java.lang.UnsupportedOperationException $r14;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r12;
        ucar.nc2.ft.point.standard.plug.CFpointObs r0;
        ucar.nc2.ft.point.standard.JoinArray$Type $r22;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r4;
        ucar.nc2.constants.CF$FeatureType $r3, $r7;
        ucar.nc2.Dimension $r15, $r16, $r17, $r18, $r19, $r23;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.util.Formatter;

        $r3 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType profile>;

        $r4 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingProfile(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType,java.util.Formatter)>(r1, $r3, r2);

        if $r4 != null goto label01;

        return null;

     label01:
        $r5 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType PROFILE>;

        $r6 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeStructTable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo,java.util.Formatter)>(r1, $r5, $r4, r2);

        if $r6 != null goto label02;

        return null;

     label02:
        $r7 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType profile>;

        $r8 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String identifyParentId(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType)>(r1, $r7);

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String feature_id> = $r8;

        $r9 = $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String feature_id>;

        if $r9 != null goto label03;

        $r25 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("getProfileConfig cant find a profile id %n", $r25);

     label03:
        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r11 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r10);

        if $r11 != null goto label04;

        $r24 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("getProfileConfig cant find a Height coordinate %n", $r24);

        return null;

     label04:
        r26 = null;

        $r13 = <ucar.nc2.ft.point.standard.plug.CFpointObs$2: int[] $SwitchMap$ucar$nc2$ft$point$standard$plug$CFpointObs$Encoding>;

        $r12 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $i0 = virtualinvoke $r12.<ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: int ordinal()>();

        $i1 = $r13[$i0];

        tableswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            default: goto label10;
        };

     label05:
        $r23 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r26 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeSingle(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r23, r2);

        goto label10;

     label06:
        $r19 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r20 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r6, $r19, r2);

        r26 = $r20;

        $i2 = virtualinvoke $r11.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i2 != 1 goto label10;

        $r21 = new ucar.nc2.ft.point.standard.JoinArray;

        $r22 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r21.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r11, $r22, 0);

        virtualinvoke $r20.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r21);

        goto label10;

     label07:
        $r18 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r17 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r26 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedContiguous(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r18, $r17, r2);

        goto label10;

     label08:
        $r16 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r15 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        r26 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedIndex(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r16, $r15, r2);

        goto label10;

     label09:
        $r14 = new java.lang.UnsupportedOperationException;

        specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("CFpointObs: profile flat encoding");

        throw $r14;

     label10:
        if r26 != null goto label11;

        return null;

     label11:
        virtualinvoke $r6.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>(r26);

        return $r6;
    }

    private ucar.nc2.ft.point.standard.TableConfig getTimeSeriesProfileConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.TableConfig $r9, $r22, $r25, $r38, $r59, $r85, $r87;
        ucar.nc2.constants.FeatureType $r8, $r81;
        ucar.nc2.ft.point.standard.JoinArray$Type $r40, $r61, $r63;
        java.lang.Object[] $r26, $r29, $r31, $r33, $r35, $r78, $r79, $r80;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r10, $r83;
        ucar.nc2.constants.CF$FeatureType $r3;
        ucar.nc2.ft.point.standard.JoinArray $r39, $r60, $r62;
        int[] $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        ucar.nc2.Variable $r14, $r17;
        ucar.nc2.dataset.CoordinateAxis $r6, $r7;
        ucar.nc2.constants.AxisType $r5;
        ucar.nc2.ft.point.standard.plug.CFpointObs r0;
        java.lang.AssertionError $r43, $r46, $r49, $r52, $r55, $r56, $r57, $r66, $r69, $r72, $r75, $r76, $r77;
        java.lang.String $r13, $r16, $r30, $r34;
        java.lang.UnsupportedOperationException $r36;
        ucar.nc2.Dimension $r12, $r15, $r18, $r19, $r20, $r21, $r23, $r24, $r27, $r28, $r32, $r37, $r41, $r42, $r44, $r45, $r47, $r48, $r50, $r51, $r58, $r64, $r65, $r67, $r68, $r70, $r71, $r84, $r86;
        ucar.nc2.dataset.NetcdfDataset r1;
        java.util.Formatter r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.util.List $r53, $r54, $r73, $r74;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r4, $r82;

        r0 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.util.Formatter;

        $r3 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeriesProfile>;

        $r4 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingTimeSeriesProfile(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType,java.util.Formatter)>(r1, $r3, r2);

        if $r4 != null goto label01;

        return null;

     label01:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r5);

        $i0 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i0 != 0 goto label02;

        $r80 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile cannot have a scalar time coordinate%n", $r80);

        return null;

     label02:
        $r7 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.dataset.CoordinateAxis findZAxisNotStationAlt(ucar.nc2.dataset.NetcdfDataset)>(r1);

        if $r7 != null goto label03;

        $r79 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile must have a z coordinate%n", $r79);

        return null;

     label03:
        $i1 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i1 != 0 goto label04;

        $r78 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile cannot have a scalar z coordinate%n", $r78);

        return null;

     label04:
        $r8 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION_PROFILE>;

        $r9 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeStationTable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo,java.util.Formatter)>(r1, $r8, $r4, r2);

        if $r9 != null goto label05;

        return null;

     label05:
        $r11 = <ucar.nc2.ft.point.standard.plug.CFpointObs$2: int[] $SwitchMap$ucar$nc2$ft$point$standard$plug$CFpointObs$Encoding>;

        $r10 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $i2 = virtualinvoke $r10.<ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: int ordinal()>();

        $i3 = $r11[$i2];

        tableswitch($i3)
        {
            case 1: goto label06;
            case 2: goto label18;
            case 3: goto label35;
            case 4: goto label29;
            default: goto label36;
        };

     label06:
        $z13 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z13 != 0 goto label08;

        $i20 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i20 < 1 goto label07;

        $i21 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i21 <= 2 goto label08;

     label07:
        $r77 = new java.lang.AssertionError;

        specialinvoke $r77.<java.lang.AssertionError: void <init>(java.lang.Object)>("time must be rank 1 or 2");

        throw $r77;

     label08:
        $z14 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z14 != 0 goto label10;

        $i18 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i18 < 1 goto label09;

        $i19 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i19 <= 2 goto label10;

     label09:
        $r76 = new java.lang.AssertionError;

        specialinvoke $r76.<java.lang.AssertionError: void <init>(java.lang.Object)>("z must be rank 1 or 2");

        throw $r76;

     label10:
        $i13 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i13 != 2 goto label12;

        $i17 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i17 != 2 goto label11;

        $z21 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z21 != 0 goto label14;

        $r73 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $r74 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $z22 = virtualinvoke $r73.<java.lang.Object: boolean equals(java.lang.Object)>($r74);

        if $z22 != 0 goto label14;

        $r75 = new java.lang.AssertionError;

        specialinvoke $r75.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-2 time and z dimensions must be the same");

        throw $r75;

     label11:
        $z19 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z19 != 0 goto label14;

        $r70 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r71 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z20 = virtualinvoke $r70.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r71);

        if $z20 != 0 goto label14;

        $r72 = new java.lang.AssertionError;

        specialinvoke $r72.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-2 time must have z inner dimension");

        throw $r72;

     label12:
        $i14 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i14 != 2 goto label13;

        $z17 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z17 != 0 goto label14;

        $r67 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r68 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z18 = virtualinvoke $r67.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r68);

        if $z18 != 0 goto label14;

        $r69 = new java.lang.AssertionError;

        specialinvoke $r69.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-2 z must have time outer dimension");

        throw $r69;

     label13:
        $z15 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z15 != 0 goto label14;

        $r64 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r65 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z16 = virtualinvoke $r64.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r65);

        if $z16 == 0 goto label14;

        $r66 = new java.lang.AssertionError;

        specialinvoke $r66.<java.lang.AssertionError: void <init>(java.lang.Object)>("time and z dimensions must be different");

        throw $r66;

     label14:
        $r81 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType PROFILE>;

        $r82 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r83 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        $r84 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        specialinvoke $r82.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension)>(r0, $r83, $r84);

        $r85 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeStructTable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo,java.util.Formatter)>(r1, $r81, $r82, r2);

        if $r85 != null goto label15;

        return null;

     label15:
        $i15 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i15 != 1 goto label16;

        $r62 = new ucar.nc2.ft.point.standard.JoinArray;

        $r63 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r62.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r6, $r63, 0);

        virtualinvoke $r85.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r62);

     label16:
        virtualinvoke $r9.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r85);

        $r58 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r59 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r85, $r58, r2);

        $i16 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i16 != 1 goto label17;

        $r60 = new ucar.nc2.ft.point.standard.JoinArray;

        $r61 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r60.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r7, $r61, 0);

        virtualinvoke $r59.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r60);

     label17:
        virtualinvoke $r85.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r59);

        goto label36;

     label18:
        $z1 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z1 != 0 goto label20;

        $i11 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i11 < 2 goto label19;

        $i12 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i12 <= 3 goto label20;

     label19:
        $r57 = new java.lang.AssertionError;

        specialinvoke $r57.<java.lang.AssertionError: void <init>(java.lang.Object)>("time must be rank 2 or 3");

        throw $r57;

     label20:
        $z2 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z2 != 0 goto label21;

        $i9 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i9 == 1 goto label21;

        $i10 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i10 == 3 goto label21;

        $r56 = new java.lang.AssertionError;

        specialinvoke $r56.<java.lang.AssertionError: void <init>(java.lang.Object)>("z must be rank 1 or 3");

        throw $r56;

     label21:
        $i22 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i22 != 3 goto label23;

        $i8 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i8 != 3 goto label22;

        $z11 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z11 != 0 goto label26;

        $r53 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $r54 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $z12 = virtualinvoke $r53.<java.lang.Object: boolean equals(java.lang.Object)>($r54);

        if $z12 != 0 goto label26;

        $r55 = new java.lang.AssertionError;

        specialinvoke $r55.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-3 time and z dimensions must be the same");

        throw $r55;

     label22:
        $z9 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z9 != 0 goto label26;

        $r50 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(2);

        $r51 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z10 = virtualinvoke $r50.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r51);

        if $z10 != 0 goto label26;

        $r52 = new java.lang.AssertionError;

        specialinvoke $r52.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-3 time must have z inner dimension");

        throw $r52;

     label23:
        $i6 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i6 != 3 goto label24;

        $z7 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z7 != 0 goto label26;

        $r47 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r48 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $z8 = virtualinvoke $r47.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r48);

        if $z8 != 0 goto label26;

        $r49 = new java.lang.AssertionError;

        specialinvoke $r49.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-2 time must have time inner dimension");

        throw $r49;

     label24:
        $z3 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z3 != 0 goto label25;

        $r44 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r45 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z6 = virtualinvoke $r44.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r45);

        if $z6 == 0 goto label25;

        $r46 = new java.lang.AssertionError;

        specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>("time and z dimensions must be different");

        throw $r46;

     label25:
        $z4 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z4 != 0 goto label26;

        $r41 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r42 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z5 = virtualinvoke $r41.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r42);

        if $z5 == 0 goto label26;

        $r43 = new java.lang.AssertionError;

        specialinvoke $r43.<java.lang.AssertionError: void <init>(java.lang.Object)>("time and z dimensions must be different");

        throw $r43;

     label26:
        $r86 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r87 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r9, $r86, r2);

        if $r87 != null goto label27;

        return null;

     label27:
        virtualinvoke $r9.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r87);

        $r37 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r38 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner3D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r9, $r87, $r37, r2);

        $i7 = virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i7 != 1 goto label28;

        $r39 = new ucar.nc2.ft.point.standard.JoinArray;

        $r40 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r39.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r7, $r40, 0);

        virtualinvoke $r38.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r39);

     label28:
        virtualinvoke $r87.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r38);

        goto label36;

     label29:
        $r12 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r13 = virtualinvoke $r12.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r14 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r1, "CF:ragged_parent_index", $r13);

        if $r14 != null goto label30;

        $r35 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile stationIndex: must have a ragged_parentIndex variable with profile dimension%n", $r35);

        return null;

     label30:
        $i4 = virtualinvoke $r14.<ucar.nc2.Variable: int getRank()>();

        if $i4 == 1 goto label31;

        $r33 = newarray (java.lang.Object)[1];

        $r34 = virtualinvoke $r14.<ucar.nc2.Variable: java.lang.String getName()>();

        $r33[0] = $r34;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile stationIndex: %s variable must be rank 1%n", $r33);

        return null;

     label31:
        $r15 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r16 = virtualinvoke $r15.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r17 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r1, "CF:ragged_row_count", $r16);

        if $r17 != null goto label32;

        $r31 = newarray (java.lang.Object)[1];

        $r32 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r31[0] = $r32;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile numObs: must have a ragged_rowSize variable with profile dimension %s%n", $r31);

        return null;

     label32:
        $i5 = virtualinvoke $r17.<ucar.nc2.Variable: int getRank()>();

        if $i5 == 1 goto label33;

        $r29 = newarray (java.lang.Object)[1];

        $r30 = virtualinvoke $r17.<ucar.nc2.Variable: java.lang.String getName()>();

        $r29[0] = $r30;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile numObs: %s variable for observations must be rank 1%n", $r29);

        return null;

     label33:
        $r19 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r18 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $z0 = virtualinvoke $r19.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r18);

        if $z0 == 0 goto label34;

        $r26 = newarray (java.lang.Object)[2];

        $r27 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r26[0] = $r27;

        $r28 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r26[1] = $r28;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile profile dimension %s cannot be obs dimension %s%n", $r26);

        return null;

     label34:
        $r21 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r20 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r22 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedIndex(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r21, $r20, r2);

        virtualinvoke $r9.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r22);

        $r24 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r23 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r25 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedContiguous(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r24, $r23, r2);

        virtualinvoke $r22.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r25);

        goto label36;

     label35:
        $r36 = new java.lang.UnsupportedOperationException;

        specialinvoke $r36.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("CFpointObs: profile raggedContiguous encoding");

        throw $r36;

     label36:
        return $r9;
    }

    private ucar.nc2.ft.point.standard.TableConfig getSectionConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.TableConfig $r8, $r25, $r28, $r43, $r64, $r91, $r93;
        ucar.nc2.constants.FeatureType $r7, $r87;
        ucar.nc2.ft.point.standard.JoinArray$Type $r45, $r66, $r68;
        java.lang.Object[] $r29, $r32, $r34, $r36, $r38, $r83, $r84, $r85, $r86;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r13, $r89;
        ucar.nc2.constants.CF$FeatureType $r3, $r9, $r40;
        ucar.nc2.ft.point.standard.JoinArray $r44, $r65, $r67;
        int[] $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        ucar.nc2.Variable $r17, $r20;
        ucar.nc2.dataset.CoordinateAxis $r6, $r12;
        ucar.nc2.constants.AxisType $r5;
        ucar.nc2.ft.point.standard.plug.CFpointObs r0;
        java.lang.AssertionError $r48, $r51, $r54, $r57, $r60, $r61, $r62, $r71, $r74, $r77, $r80, $r81, $r82;
        java.lang.String $r10, $r11, $r16, $r19, $r33, $r37, $r41;
        java.lang.UnsupportedOperationException $r39;
        ucar.nc2.Dimension $r15, $r18, $r21, $r22, $r23, $r24, $r26, $r27, $r30, $r31, $r35, $r42, $r46, $r47, $r49, $r50, $r52, $r53, $r55, $r56, $r63, $r69, $r70, $r72, $r73, $r75, $r76, $r90, $r92;
        ucar.nc2.dataset.NetcdfDataset r1;
        java.util.Formatter r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.util.List $r58, $r59, $r78, $r79;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r4, $r88;

        r0 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.util.Formatter;

        $r3 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType trajectoryProfile>;

        $r4 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingSection(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType,java.util.Formatter)>(r1, $r3, r2);

        if $r4 != null goto label01;

        return null;

     label01:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r5);

        $i0 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i0 != 0 goto label02;

        $r86 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("section cannot have a scalar time coordinate%n", $r86);

        return null;

     label02:
        $r7 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType SECTION>;

        $r8 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeStructTable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo,java.util.Formatter)>(r1, $r7, $r4, r2);

        if $r8 != null goto label03;

        return null;

     label03:
        $r9 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType trajectoryProfile>;

        $r10 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String identifyParentId(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType)>(r1, $r9);

        $r8.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String feature_id> = $r10;

        $r11 = $r8.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String feature_id>;

        if $r11 != null goto label04;

        $r85 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("getSectionConfig cant find a section id %n", $r85);

     label04:
        $r12 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.dataset.CoordinateAxis findZAxisNotStationAlt(ucar.nc2.dataset.NetcdfDataset)>(r1);

        if $r12 != null goto label05;

        $r84 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("section must have a z coordinate%n", $r84);

        return null;

     label05:
        $i1 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i1 != 0 goto label06;

        $r83 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("section cannot have a scalar z coordinate%n", $r83);

        return null;

     label06:
        $r14 = <ucar.nc2.ft.point.standard.plug.CFpointObs$2: int[] $SwitchMap$ucar$nc2$ft$point$standard$plug$CFpointObs$Encoding>;

        $r13 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $i2 = virtualinvoke $r13.<ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: int ordinal()>();

        $i3 = $r14[$i2];

        tableswitch($i3)
        {
            case 1: goto label07;
            case 2: goto label19;
            case 3: goto label36;
            case 4: goto label30;
            default: goto label37;
        };

     label07:
        $z13 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z13 != 0 goto label09;

        $i20 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i20 < 1 goto label08;

        $i21 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i21 <= 2 goto label09;

     label08:
        $r82 = new java.lang.AssertionError;

        specialinvoke $r82.<java.lang.AssertionError: void <init>(java.lang.Object)>("time must be rank 1 or 2");

        throw $r82;

     label09:
        $z14 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z14 != 0 goto label11;

        $i18 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i18 < 1 goto label10;

        $i19 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i19 <= 2 goto label11;

     label10:
        $r81 = new java.lang.AssertionError;

        specialinvoke $r81.<java.lang.AssertionError: void <init>(java.lang.Object)>("z must be rank 1 or 2");

        throw $r81;

     label11:
        $i13 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i13 != 2 goto label13;

        $i17 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i17 != 2 goto label12;

        $z21 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z21 != 0 goto label15;

        $r78 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $r79 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $z22 = virtualinvoke $r78.<java.lang.Object: boolean equals(java.lang.Object)>($r79);

        if $z22 != 0 goto label15;

        $r80 = new java.lang.AssertionError;

        specialinvoke $r80.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-2 time and z dimensions must be the same");

        throw $r80;

     label12:
        $z19 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z19 != 0 goto label15;

        $r75 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r76 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z20 = virtualinvoke $r75.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r76);

        if $z20 != 0 goto label15;

        $r77 = new java.lang.AssertionError;

        specialinvoke $r77.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-2 time must have z inner dimension");

        throw $r77;

     label13:
        $i14 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i14 != 2 goto label14;

        $z17 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z17 != 0 goto label15;

        $r72 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r73 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z18 = virtualinvoke $r72.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r73);

        if $z18 != 0 goto label15;

        $r74 = new java.lang.AssertionError;

        specialinvoke $r74.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-2 z must have time outer dimension");

        throw $r74;

     label14:
        $z15 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z15 != 0 goto label15;

        $r69 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r70 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z16 = virtualinvoke $r69.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r70);

        if $z16 == 0 goto label15;

        $r71 = new java.lang.AssertionError;

        specialinvoke $r71.<java.lang.AssertionError: void <init>(java.lang.Object)>("time and z dimensions must be different");

        throw $r71;

     label15:
        $r87 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType PROFILE>;

        $r88 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r89 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        $r90 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        specialinvoke $r88.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension)>(r0, $r89, $r90);

        $r91 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeStructTable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo,java.util.Formatter)>(r1, $r87, $r88, r2);

        if $r91 != null goto label16;

        return null;

     label16:
        $i15 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i15 != 1 goto label17;

        $r67 = new ucar.nc2.ft.point.standard.JoinArray;

        $r68 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r67.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r6, $r68, 0);

        virtualinvoke $r91.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r67);

     label17:
        virtualinvoke $r8.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r91);

        $r63 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r64 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r91, $r63, r2);

        $i16 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i16 != 1 goto label18;

        $r65 = new ucar.nc2.ft.point.standard.JoinArray;

        $r66 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r65.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r12, $r66, 0);

        virtualinvoke $r64.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r65);

     label18:
        virtualinvoke $r91.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r64);

        goto label37;

     label19:
        $z1 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z1 != 0 goto label21;

        $i11 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i11 < 2 goto label20;

        $i12 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i12 <= 3 goto label21;

     label20:
        $r62 = new java.lang.AssertionError;

        specialinvoke $r62.<java.lang.AssertionError: void <init>(java.lang.Object)>("time must be rank 2 or 3");

        throw $r62;

     label21:
        $z2 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z2 != 0 goto label22;

        $i9 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i9 == 1 goto label22;

        $i10 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i10 == 3 goto label22;

        $r61 = new java.lang.AssertionError;

        specialinvoke $r61.<java.lang.AssertionError: void <init>(java.lang.Object)>("z must be rank 1 or 3");

        throw $r61;

     label22:
        $i22 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i22 != 3 goto label24;

        $i8 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i8 != 3 goto label23;

        $z11 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z11 != 0 goto label27;

        $r58 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $r59 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $z12 = virtualinvoke $r58.<java.lang.Object: boolean equals(java.lang.Object)>($r59);

        if $z12 != 0 goto label27;

        $r60 = new java.lang.AssertionError;

        specialinvoke $r60.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-3 time and z dimensions must be the same");

        throw $r60;

     label23:
        $z9 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z9 != 0 goto label27;

        $r55 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(2);

        $r56 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z10 = virtualinvoke $r55.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r56);

        if $z10 != 0 goto label27;

        $r57 = new java.lang.AssertionError;

        specialinvoke $r57.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-3 time must have z inner dimension");

        throw $r57;

     label24:
        $i6 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i6 != 3 goto label25;

        $z7 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z7 != 0 goto label27;

        $r52 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r53 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $z8 = virtualinvoke $r52.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r53);

        if $z8 != 0 goto label27;

        $r54 = new java.lang.AssertionError;

        specialinvoke $r54.<java.lang.AssertionError: void <init>(java.lang.Object)>("rank-2 time must have time inner dimension");

        throw $r54;

     label25:
        $z3 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z3 != 0 goto label26;

        $r49 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r50 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z6 = virtualinvoke $r49.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r50);

        if $z6 == 0 goto label26;

        $r51 = new java.lang.AssertionError;

        specialinvoke $r51.<java.lang.AssertionError: void <init>(java.lang.Object)>("time and z dimensions must be different");

        throw $r51;

     label26:
        $z4 = <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled>;

        if $z4 != 0 goto label27;

        $r46 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r47 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $z5 = virtualinvoke $r46.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r47);

        if $z5 == 0 goto label27;

        $r48 = new java.lang.AssertionError;

        specialinvoke $r48.<java.lang.AssertionError: void <init>(java.lang.Object)>("time and z dimensions must be different");

        throw $r48;

     label27:
        $r92 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r93 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r8, $r92, r2);

        if $r93 != null goto label28;

        return null;

     label28:
        $r40 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType profile>;

        $r41 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String identifyParentId(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType)>(r1, $r40);

        $r93.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String feature_id> = $r41;

        virtualinvoke $r8.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r93);

        $r42 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r43 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeMultidimInner3D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r8, $r93, $r42, r2);

        $i7 = virtualinvoke $r12.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i7 != 1 goto label29;

        $r44 = new ucar.nc2.ft.point.standard.JoinArray;

        $r45 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r44.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r12, $r45, 0);

        virtualinvoke $r43.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r44);

     label29:
        virtualinvoke $r93.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r43);

        goto label37;

     label30:
        $r15 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r16 = virtualinvoke $r15.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r17 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r1, "CF:ragged_parent_index", $r16);

        if $r17 != null goto label31;

        $r38 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("section sectionIndex: must have a ragged_parentIndex variable with profile dimension%n", $r38);

        return null;

     label31:
        $i4 = virtualinvoke $r17.<ucar.nc2.Variable: int getRank()>();

        if $i4 == 1 goto label32;

        $r36 = newarray (java.lang.Object)[1];

        $r37 = virtualinvoke $r17.<ucar.nc2.Variable: java.lang.String getName()>();

        $r36[0] = $r37;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("section sectionIndex: %s variable must be rank 1%n", $r36);

        return null;

     label32:
        $r18 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r19 = virtualinvoke $r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r20 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r1, "CF:ragged_row_count", $r19);

        if $r20 != null goto label33;

        $r34 = newarray (java.lang.Object)[1];

        $r35 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r34[0] = $r35;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("section numObs: must have a ragged_rowSize variable with profile dimension %s%n", $r34);

        return null;

     label33:
        $i5 = virtualinvoke $r20.<ucar.nc2.Variable: int getRank()>();

        if $i5 == 1 goto label34;

        $r32 = newarray (java.lang.Object)[1];

        $r33 = virtualinvoke $r20.<ucar.nc2.Variable: java.lang.String getName()>();

        $r32[0] = $r33;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("section numObs: %s variable for observations must be rank 1%n", $r32);

        return null;

     label34:
        $r22 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r21 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $z0 = virtualinvoke $r22.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r21);

        if $z0 == 0 goto label35;

        $r29 = newarray (java.lang.Object)[2];

        $r30 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r29[0] = $r30;

        $r31 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r29[1] = $r31;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("section profile dimension %s cannot be obs dimension %s%n", $r29);

        return null;

     label35:
        $r24 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r23 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r25 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedIndex(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r24, $r23, r2);

        virtualinvoke $r8.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r25);

        $r27 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        $r26 = $r4.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension grandChildDim>;

        $r28 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.ft.point.standard.TableConfig makeRaggedContiguous(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension,java.util.Formatter)>(r1, $r27, $r26, r2);

        virtualinvoke $r25.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r28);

        goto label37;

     label36:
        $r39 = new java.lang.UnsupportedOperationException;

        specialinvoke $r39.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("CFpointObs: section raggedContiguous encoding%n");

        throw $r39;

     label37:
        return $r8;
    }

    private ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncoding(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.CF$FeatureType, java.util.Formatter)
    {
        java.util.Formatter r7;
        ucar.nc2.dataset.CoordinateAxis $r4;
        int[] $r6;
        ucar.nc2.constants.AxisType $r3;
        ucar.nc2.ft.point.standard.plug.CFpointObs r10;
        java.lang.Object[] $r8, $r14, $r21, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        ucar.nc2.Variable $r1, $r2, $r22, $r28;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r11, $r13, $r16, $r18, $r20, $r24, $r27, $r30;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r9, $r12, $r15, $r17, $r19, $r23, $r26, $r29;
        ucar.nc2.constants.CF$FeatureType r5, $r25;
        ucar.nc2.dataset.NetcdfDataset r0;

        r10 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r5 := @parameter1: ucar.nc2.constants.CF$FeatureType;

        r7 := @parameter2: java.util.Formatter;

        $r1 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttribute(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "CF:ragged_row_count");

        if $r1 == null goto label03;

        $r25 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType trajectoryProfile>;

        if r5 != $r25 goto label02;

        $r28 = specialinvoke r10.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.Variable identifyParent(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType)>(r0, r5);

        if $r28 != null goto label01;

        $r31 = newarray (java.lang.Object)[0];

        virtualinvoke r7.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Section ragged must have section_id variable%n", $r31);

        return null;

     label01:
        $r29 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r30 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedContiguous>;

        specialinvoke $r29.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Variable)>(r10, $r30, $r28);

        return $r29;

     label02:
        $r26 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r27 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedContiguous>;

        specialinvoke $r26.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Variable)>(r10, $r27, $r1);

        return $r26;

     label03:
        $r2 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttribute(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "CF:ragged_parent_index");

        if $r2 == null goto label04;

        $r22 = specialinvoke r10.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.Variable identifyParent(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType)>(r0, r5);

        $r23 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r24 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedIndex>;

        specialinvoke $r23.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Variable)>(r10, $r24, $r22);

        return $r23;

     label04:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r3);

        if $r4 != null goto label05;

        $r21 = newarray (java.lang.Object)[0];

        virtualinvoke r7.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Latitude coordinate%n", $r21);

        return null;

     label05:
        $r6 = <ucar.nc2.ft.point.standard.plug.CFpointObs$2: int[] $SwitchMap$ucar$nc2$constants$CF$FeatureType>;

        $i0 = virtualinvoke r5.<ucar.nc2.constants.CF$FeatureType: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label10;
            case 4: goto label07;
            case 5: goto label07;
            case 6: goto label10;
            default: goto label13;
        };

     label06:
        $r19 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r20 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r19.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension)>(r10, $r20, null);

        return $r19;

     label07:
        $i4 = virtualinvoke $r4.<ucar.nc2.Variable: int getRank()>();

        if $i4 != 0 goto label08;

        $r17 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r18 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        specialinvoke $r17.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension)>(r10, $r18, null);

        return $r17;

     label08:
        $i5 = virtualinvoke $r4.<ucar.nc2.Variable: int getRank()>();

        if $i5 != 1 goto label09;

        $r15 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r16 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r15.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Variable)>(r10, $r16, $r4);

        return $r15;

     label09:
        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r5;

        virtualinvoke r7.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s Must have Lat/Lon coordinates of rank 0 or 1%n", $r14);

        return null;

     label10:
        $i2 = virtualinvoke $r4.<ucar.nc2.Variable: int getRank()>();

        if $i2 != 1 goto label11;

        $r12 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r13 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        specialinvoke $r12.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension)>(r10, $r13, null);

        return $r12;

     label11:
        $i3 = virtualinvoke $r4.<ucar.nc2.Variable: int getRank()>();

        if $i3 != 2 goto label12;

        $r9 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r11 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r9.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Variable)>(r10, $r11, $r4);

        return $r9;

     label12:
        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r5;

        virtualinvoke r7.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s Must have Lat/Lon coordinates of rank 1 or 2%n", $r8);

        return null;

     label13:
        return null;
    }

    private ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingStation(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.CF$FeatureType, java.util.Formatter)
    {
        java.util.Formatter r11;
        ucar.nc2.dataset.CoordinateAxis $r2, $r5;
        ucar.nc2.constants.AxisType $r1, $r4;
        ucar.nc2.ft.point.standard.plug.CFpointObs r15;
        java.lang.Object[] $r12, $r25, $r26, $r28;
        ucar.nc2.Structure $r3, $r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.Variable $r8, $r10;
        java.lang.String $r7, $r9;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r16, $r18, $r20, $r22, $r24;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r14, $r17, $r19, $r21, $r23;
        ucar.nc2.Dimension $r6, r29;
        ucar.nc2.constants.CF$FeatureType r13;
        ucar.nc2.dataset.NetcdfDataset r0;

        r15 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r13 := @parameter1: ucar.nc2.constants.CF$FeatureType;

        r11 := @parameter2: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label01;

        $r28 = newarray (java.lang.Object)[0];

        virtualinvoke r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Time coordinate%n", $r28);

        return null;

     label01:
        r29 = null;

        $i0 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i0 <= 0 goto label02;

        $i5 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i6 = $i5 - 1;

        r29 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i6);

        goto label03;

     label02:
        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Structure getParentStructure()>();

        if $r3 == null goto label03;

        $r27 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Structure getParentStructure()>();

        $i3 = virtualinvoke $r27.<ucar.nc2.Structure: int getRank()>();

        $i4 = $i3 - 1;

        r29 = virtualinvoke $r27.<ucar.nc2.Structure: ucar.nc2.Dimension getDimension(int)>($i4);

     label03:
        if r29 != null goto label04;

        $r26 = newarray (java.lang.Object)[0];

        virtualinvoke r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a non-scalar Time coordinate%n", $r26);

        return null;

     label04:
        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r5 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r4);

        if $r5 != null goto label05;

        $r25 = newarray (java.lang.Object)[0];

        virtualinvoke r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Latitude coordinate%n", $r25);

        return null;

     label05:
        $i1 = virtualinvoke $r5.<ucar.nc2.Variable: int getRank()>();

        if $i1 != 0 goto label06;

        $r23 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r24 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        specialinvoke $r23.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r24, null, r29);

        return $r23;

     label06:
        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if r29 != $r6 goto label07;

        $r21 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r22 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding flat>;

        specialinvoke $r21.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r22, null, r29);

        return $r21;

     label07:
        $r7 = virtualinvoke r29.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "CF:ragged_row_count", $r7);

        if $r8 == null goto label08;

        $r19 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r20 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedContiguous>;

        specialinvoke $r19.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r20, $r6, r29);

        return $r19;

     label08:
        $r9 = virtualinvoke $r6.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r10 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "CF:ragged_parent_index", $r9);

        if $r10 == null goto label09;

        $r17 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r18 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedIndex>;

        specialinvoke $r17.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r18, $r6, r29);

        return $r17;

     label09:
        $i2 = virtualinvoke $r5.<ucar.nc2.Variable: int getRank()>();

        if $i2 != 1 goto label10;

        $r14 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r16 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r14.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r16, $r6, r29);

        return $r14;

     label10:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r13;

        virtualinvoke r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s Must have Lat/Lon coordinates of rank 0 or 1%n", $r12);

        return null;
    }

    private ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingTraj(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.CF$FeatureType, java.util.Formatter)
    {
        java.util.Formatter r18;
        ucar.nc2.dataset.CoordinateAxis $r2, $r8;
        ucar.nc2.constants.AxisType $r1, $r7;
        boolean $z0, $z1;
        ucar.nc2.ft.point.standard.plug.CFpointObs r10;
        java.util.List $r12;
        java.lang.Object[] $r19, $r24, $r31, $r33;
        ucar.nc2.Structure $r3, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.Variable $r6;
        java.lang.String $r4, $r5;
        java.util.Iterator $r13;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r11, $r17, $r22, $r27, $r30;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r9, $r16, $r21, $r26, $r29;
        java.lang.Object $r14;
        ucar.nc2.Dimension r15, $r20, $r23, $r28, r34;
        ucar.nc2.constants.CF$FeatureType r25;
        ucar.nc2.dataset.NetcdfDataset r0;

        r10 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r25 := @parameter1: ucar.nc2.constants.CF$FeatureType;

        r18 := @parameter2: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label01;

        $r33 = newarray (java.lang.Object)[0];

        virtualinvoke r18.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Time coordinate%n", $r33);

        return null;

     label01:
        r34 = null;

        $i0 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i0 <= 0 goto label02;

        $i5 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i6 = $i5 - 1;

        r34 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i6);

        goto label03;

     label02:
        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Structure getParentStructure()>();

        if $r3 == null goto label03;

        $r32 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Structure getParentStructure()>();

        $i3 = virtualinvoke $r32.<ucar.nc2.Structure: int getRank()>();

        $i4 = $i3 - 1;

        r34 = virtualinvoke $r32.<ucar.nc2.Structure: ucar.nc2.Dimension getDimension(int)>($i4);

     label03:
        if r34 != null goto label04;

        $r31 = newarray (java.lang.Object)[0];

        virtualinvoke r18.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a non-scalar Time coordinate%n", $r31);

        return null;

     label04:
        $i1 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i1 <= 1 goto label05;

        $r28 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r29 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r30 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r29.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r30, $r28, r34);

        return $r29;

     label05:
        $r4 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: java.lang.String getVariableAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "CF:ragged_parent_index");

        if $r4 == null goto label07;

        $r23 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r4);

        if $r23 == null goto label06;

        $r26 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r27 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedIndex>;

        specialinvoke $r26.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r27, $r23, r34);

        return $r26;

     label06:
        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = r25;

        virtualinvoke r18.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s ragged_parent_index must name parent dimension%n", $r24);

        return null;

     label07:
        $r5 = virtualinvoke r34.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "CF:ragged_row_count", $r5);

        if $r6 == null goto label08;

        $r20 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r21 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r22 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedContiguous>;

        specialinvoke $r21.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r22, $r20, r34);

        return $r21;

     label08:
        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r7);

        if $r8 != null goto label09;

        $r19 = newarray (java.lang.Object)[0];

        virtualinvoke r18.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Lat coordinate%n", $r19);

        return null;

     label09:
        $i2 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i2 <= 0 goto label12;

        $r12 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (ucar.nc2.Dimension) $r14;

        $z1 = virtualinvoke r15.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r34);

        if $z1 != 0 goto label11;

        $r16 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r17 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r16.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r17, r15, r34);

        return $r16;

     label11:
        goto label10;

     label12:
        $r9 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r11 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        specialinvoke $r9.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r11, null, r34);

        return $r9;
    }

    private ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingProfile(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.CF$FeatureType, java.util.Formatter)
    {
        java.util.Formatter r16;
        ucar.nc2.dataset.CoordinateAxis $r2, $r8;
        ucar.nc2.constants.AxisType $r1, $r7;
        ucar.nc2.ft.point.standard.plug.CFpointObs r10;
        java.lang.Object[] $r17, $r22, $r29, $r31;
        ucar.nc2.Structure $r3, $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.Variable $r6;
        java.lang.String $r4, $r5;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r11, $r15, $r20, $r25, $r28;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r9, $r14, $r19, $r24, $r27;
        ucar.nc2.Dimension $r12, $r13, $r18, $r21, $r26, r32;
        ucar.nc2.constants.CF$FeatureType r23;
        ucar.nc2.dataset.NetcdfDataset r0;

        r10 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r23 := @parameter1: ucar.nc2.constants.CF$FeatureType;

        r16 := @parameter2: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label01;

        $r31 = newarray (java.lang.Object)[0];

        virtualinvoke r16.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Height coordinate%n", $r31);

        return null;

     label01:
        r32 = null;

        $i0 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i0 <= 0 goto label02;

        $i5 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i6 = $i5 - 1;

        r32 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i6);

        goto label03;

     label02:
        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Structure getParentStructure()>();

        if $r3 == null goto label03;

        $r30 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Structure getParentStructure()>();

        $i3 = virtualinvoke $r30.<ucar.nc2.Structure: int getRank()>();

        $i4 = $i3 - 1;

        r32 = virtualinvoke $r30.<ucar.nc2.Structure: ucar.nc2.Dimension getDimension(int)>($i4);

     label03:
        if r32 != null goto label04;

        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke r16.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a non-scalar Height coordinate%n", $r29);

        return null;

     label04:
        $i1 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i1 <= 1 goto label05;

        $r26 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r27 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r28 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r27.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r28, $r26, r32);

        return $r27;

     label05:
        $r4 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: java.lang.String getVariableAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "CF:ragged_parent_index");

        if $r4 == null goto label07;

        $r21 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r4);

        if $r21 == null goto label06;

        $r24 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r25 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedIndex>;

        specialinvoke $r24.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r25, $r21, r32);

        return $r24;

     label06:
        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r23;

        virtualinvoke r16.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s ragged_parent_index must name parent dimension%n", $r22);

        return null;

     label07:
        $r5 = virtualinvoke r32.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "CF:ragged_row_count", $r5);

        if $r6 == null goto label08;

        $r18 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r19 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r20 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedContiguous>;

        specialinvoke $r19.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r20, $r18, r32);

        return $r19;

     label08:
        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r7);

        if $r8 != null goto label09;

        $r17 = newarray (java.lang.Object)[0];

        virtualinvoke r16.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Time coordinate%n", $r17);

        return null;

     label09:
        $i2 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i2 == 0 goto label10;

        $r12 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        if $r12 != r32 goto label11;

     label10:
        $r9 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r11 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        specialinvoke $r9.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r11, null, r32);

        return $r9;

     label11:
        $r13 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r14 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r15 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r14.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r10, $r15, $r13, r32);

        return $r14;
    }

    private ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingSection(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.CF$FeatureType, java.util.Formatter)
    {
        java.util.Formatter r9;
        ucar.nc2.dataset.CoordinateAxis $r2, $r6, $r8;
        ucar.nc2.constants.AxisType $r1, $r5, $r7;
        ucar.nc2.ft.point.standard.plug.CFpointObs r15;
        java.lang.Object[] $r10, $r24, $r25, $r26, $r28, $r31, $r39, $r41;
        ucar.nc2.Structure $r3, $r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        ucar.nc2.Variable $r30;
        java.lang.String $r4, $r29;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r16, $r19, $r23, $r34, $r38;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r14, $r18, $r22, $r33, $r37;
        ucar.nc2.constants.CF$FeatureType r11;
        ucar.nc2.Dimension $r12, $r13, $r17, $r20, $r21, $r27, $r32, $r35, $r36, r42;
        ucar.nc2.dataset.NetcdfDataset r0;

        r15 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r11 := @parameter1: ucar.nc2.constants.CF$FeatureType;

        r9 := @parameter2: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label01;

        $r41 = newarray (java.lang.Object)[0];

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Height coordinate%n", $r41);

        return null;

     label01:
        r42 = null;

        $i0 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i0 <= 0 goto label02;

        $i8 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i9 = $i8 - 1;

        r42 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i9);

        goto label03;

     label02:
        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Structure getParentStructure()>();

        if $r3 == null goto label03;

        $r40 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Structure getParentStructure()>();

        $i6 = virtualinvoke $r40.<ucar.nc2.Structure: int getRank()>();

        $i7 = $i6 - 1;

        r42 = virtualinvoke $r40.<ucar.nc2.Structure: ucar.nc2.Dimension getDimension(int)>($i7);

     label03:
        if r42 != null goto label04;

        $r39 = newarray (java.lang.Object)[0];

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a non-scalar Height coordinate%n", $r39);

        return null;

     label04:
        $i1 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i1 <= 2 goto label05;

        $r35 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r36 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r37 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r38 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r37.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r38, $r35, $r36, r42);

        return $r37;

     label05:
        $r4 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: java.lang.String getVariableAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "CF:ragged_parent_index");

        if $r4 == null goto label08;

        $r27 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r4);

        if $r27 == null goto label07;

        $r29 = virtualinvoke r42.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r30 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "CF:ragged_row_count", $r29);

        if $r30 == null goto label06;

        $r32 = virtualinvoke $r30.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r33 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r34 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedIndex>;

        specialinvoke $r33.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r34, $r27, $r32, r42);

        return $r33;

     label06:
        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = r11;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s ragged_row_count must name obs dimension%n", $r31);

        return null;

     label07:
        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = r11;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s ragged_parent_index must name station dimension%n", $r28);

        return null;

     label08:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r5);

        if $r6 != null goto label09;

        $r26 = newarray (java.lang.Object)[0];

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Lat coordinate%n", $r26);

        return null;

     label09:
        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r7);

        if $r8 != null goto label10;

        $r25 = newarray (java.lang.Object)[0];

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Time coordinate%n", $r25);

        return null;

     label10:
        $i2 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i2 != 0 goto label11;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = r11;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s may not have scalar lat/lon%n", $r24);

        return null;

     label11:
        $i3 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i3 <= 2 goto label12;

        $r20 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r21 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r22 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r23 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r22.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r23, $r20, $r21, r42);

        return $r22;

     label12:
        $i4 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i4 != 1 goto label13;

        $r17 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r18 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r19 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        specialinvoke $r18.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r19, null, $r17, r42);

        return $r18;

     label13:
        $i5 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i5 != 2 goto label14;

        $r12 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r13 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r14 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r16 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r14.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r15, $r16, $r12, $r13, r42);

        return $r14;

     label14:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r11;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s unrecognized form%n", $r10);

        return null;
    }

    private ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo identifyEncodingTimeSeriesProfile(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.CF$FeatureType, java.util.Formatter)
    {
        java.util.Formatter r12;
        ucar.nc2.dataset.CoordinateAxis $r2, $r6, $r8;
        ucar.nc2.constants.AxisType $r5, $r7;
        ucar.nc2.ft.point.standard.plug.CFpointObs r0;
        java.lang.Object[] $r13, $r23, $r24, $r26, $r29, $r37, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        ucar.nc2.Variable $r28;
        java.lang.String $r4, $r27;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r11, $r18, $r22, $r32, $r36;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo $r10, $r17, $r21, $r31, $r35;
        ucar.nc2.Dimension $r3, $r9, $r15, $r16, $r19, $r20, $r25, $r30, $r33, $r34;
        ucar.nc2.constants.CF$FeatureType r14;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r14 := @parameter1: ucar.nc2.constants.CF$FeatureType;

        r12 := @parameter2: java.util.Formatter;

        $r2 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.dataset.CoordinateAxis findZAxisNotStationAlt(ucar.nc2.dataset.NetcdfDataset)>(r1);

        if $r2 != null goto label01;

        $r38 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile must have a z coordinate, not the station altitude%n", $r38);

        return null;

     label01:
        $i0 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i0 != 0 goto label02;

        $r37 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("timeSeriesProfile cannot have a scalar z coordinate%n", $r37);

        return null;

     label02:
        $i1 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i2 = $i1 - 1;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i2);

        $i3 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i3 <= 2 goto label03;

        $r33 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r34 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r35 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r36 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r35.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r36, $r33, $r34, $r3);

        return $r35;

     label03:
        $r4 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: java.lang.String getVariableAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "CF:ragged_parent_index");

        if $r4 == null goto label06;

        $r25 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r4);

        if $r25 == null goto label05;

        $r27 = virtualinvoke $r3.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r28 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r1, "CF:ragged_row_count", $r27);

        if $r28 == null goto label04;

        $r30 = virtualinvoke $r28.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r31 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r32 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding raggedIndex>;

        specialinvoke $r31.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r32, $r25, $r30, $r3);

        return $r31;

     label04:
        $r29 = newarray (java.lang.Object)[1];

        $r29[0] = r14;

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s ragged_row_count must name obs dimension%n", $r29);

        return null;

     label05:
        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = r14;

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s ragged_parent_index must name station dimension%n", $r26);

        return null;

     label06:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r5);

        if $r6 != null goto label07;

        $r24 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Lat coordinate%n", $r24);

        return null;

     label07:
        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r7);

        if $r8 != null goto label08;

        $r23 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Time coordinate%n", $r23);

        return null;

     label08:
        $i4 = virtualinvoke $r6.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i4 != 0 goto label09;

        $r20 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r21 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r22 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        specialinvoke $r21.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r22, null, $r20, $r3);

        return $r21;

     label09:
        $i5 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i5 == 1 goto label10;

        $i6 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i6 != 2 goto label11;

        $r19 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        if $r19 != $r3 goto label11;

     label10:
        $r9 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r10 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r11 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding flat>;

        specialinvoke $r10.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r11, null, $r9, $r3);

        return $r10;

     label11:
        $i7 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i7 <= 1 goto label12;

        $r15 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r16 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(1);

        $r17 = new ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        $r18 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding multidim>;

        specialinvoke $r17.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r18, $r15, $r16, $r3);

        return $r17;

     label12:
        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r14;

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CFpointObs %s unrecognized form%n", $r13);

        return null;
    }

    private java.lang.String identifyParentId(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.CF$FeatureType)
    {
        ucar.nc2.ft.point.standard.plug.CFpointObs r0;
        ucar.nc2.constants.CF$FeatureType r2;
        ucar.nc2.Variable $r3;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.constants.CF$FeatureType;

        $r3 = specialinvoke r0.<ucar.nc2.ft.point.standard.plug.CFpointObs: ucar.nc2.Variable identifyParent(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.CF$FeatureType)>(r1, r2);

        if $r3 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke $r3.<ucar.nc2.Variable: java.lang.String getShortName()>();

     label2:
        return $r4;
    }

    private ucar.nc2.Variable identifyParent(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.CF$FeatureType)
    {
        ucar.nc2.ft.point.standard.plug.CFpointObs r7;
        int[] $r1;
        int $i0, $i1;
        ucar.nc2.constants.CF$FeatureType r0;
        ucar.nc2.Variable $r3, $r4, $r5, $r6;
        ucar.nc2.dataset.NetcdfDataset r2;

        r7 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.constants.CF$FeatureType;

        $r1 = <ucar.nc2.ft.point.standard.plug.CFpointObs$2: int[] $SwitchMap$ucar$nc2$constants$CF$FeatureType>;

        $i0 = virtualinvoke r0.<ucar.nc2.constants.CF$FeatureType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label1;
            case 6: goto label4;
            default: goto label5;
        };

     label1:
        $r6 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r2, "standard_name", "station_id");

        return $r6;

     label2:
        $r5 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r2, "standard_name", "trajectory_id");

        return $r5;

     label3:
        $r4 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r2, "standard_name", "profile_id");

        return $r4;

     label4:
        $r3 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r2, "standard_name", "trajectory_id");

        return $r3;

     label5:
        return null;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeStationTable(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.FeatureType, ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r16;
        ucar.nc2.dataset.CoordinateAxis $r2, $r4, $r27;
        ucar.nc2.ft.point.standard.TableConfig $r13;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r38;
        ucar.nc2.constants.AxisType $r1, $r3, $r26;
        ucar.nc2.constants.FeatureType r14;
        boolean $z0, $z1, $z2, z4, $z5, $z6;
        ucar.nc2.ft.point.standard.plug.CFpointObs r15;
        java.lang.Object[] $r34;
        ucar.nc2.ft.point.standard.Table$Type r35;
        int $i0, $i1, $i2;
        java.lang.String $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r31, $r32, $r33, $r37, $r39, $r40;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r6, $r7, $r8, $r9, $r10, $r11, $r24, $r25, $r28, $r29, $r41, $r42;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo r5;
        ucar.nc2.Dimension r12, $r30, $r36;
        ucar.nc2.dataset.NetcdfDataset r0;

        r15 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r14 := @parameter1: ucar.nc2.constants.FeatureType;

        r5 := @parameter2: ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        r16 := @parameter3: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r3);

        r35 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        $r7 = r5.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r6 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        if $r7 != $r6 goto label01;

        r35 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Top>;

     label01:
        $r9 = r5.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r8 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding flat>;

        if $r9 != $r8 goto label02;

        r35 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Construct>;

     label02:
        $r11 = r5.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r10 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding flat>;

        if $r11 != $r10 goto label03;

        $r36 = r5.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension childDim>;

        goto label04;

     label03:
        $r36 = r5.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

     label04:
        r12 = $r36;

        if $r36 != null goto label05;

        $r37 = " single";

        goto label06;

     label05:
        $r37 = virtualinvoke $r36.<ucar.nc2.Dimension: java.lang.String getName()>();

     label06:
        $r13 = new ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke $r13.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>(r35, $r37);

        $r13.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = r14;

        $r17 = virtualinvoke r15.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r0, "station_id", r12, r16);

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId> = $r17;

        $r18 = virtualinvoke r15.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r0, "station_desc", r12, r16);

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnDesc> = $r18;

        $r19 = virtualinvoke r15.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r0, "station_WMO_id", r12, r16);

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnWmoId> = $r19;

        $r20 = virtualinvoke r15.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r0, "surface_altitude", r12, r16);

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnAlt> = $r20;

        $r21 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r21;

        $r22 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getName()>();

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r22;

        $r23 = $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId>;

        if $r23 != null goto label07;

        $r34 = newarray (java.lang.Object)[0];

        virtualinvoke r16.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Station id variable with standard name station_id%n", $r34);

        return null;

     label07:
        $r25 = r5.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r24 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        if $r25 == $r24 goto label14;

        $z1 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r0);

        if $z1 == 0 goto label08;

        $z2 = virtualinvoke r12.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 == 0 goto label08;

        $z6 = 1;

        $z5 = 1;

        goto label09;

     label08:
        $z6 = 0;

        $z5 = 0;

     label09:
        z4 = $z6;

        if $z5 == 0 goto label10;

        $r38 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label11;

     label10:
        $r38 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label11:
        $r13.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r38;

        $r33 = virtualinvoke r12.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r33;

        if z4 == 0 goto label12;

        $r39 = "record";

        goto label13;

     label12:
        $r39 = virtualinvoke r12.<ucar.nc2.Dimension: java.lang.String getName()>();

     label13:
        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r39;

     label14:
        $r40 = $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnAlt>;

        if $r40 != null goto label16;

        $r26 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r27 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r26);

        if $r27 == null goto label16;

        $r29 = r5.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r28 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        if $r29 != $r28 goto label15;

        $i2 = virtualinvoke $r27.<ucar.nc2.Variable: int getRank()>();

        if $i2 != 0 goto label15;

        $r32 = virtualinvoke $r27.<ucar.nc2.Variable: java.lang.String getName()>();

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnAlt> = $r32;

     label15:
        $r41 = r5.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r42 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        if $r41 == $r42 goto label16;

        $i0 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        $i1 = virtualinvoke $r27.<ucar.nc2.Variable: int getRank()>();

        if $i0 != $i1 goto label16;

        $r30 = virtualinvoke $r27.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z0 = virtualinvoke $r30.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r12);

        if $z0 == 0 goto label16;

        $r31 = virtualinvoke $r27.<ucar.nc2.Variable: java.lang.String getName()>();

        $r13.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnAlt> = $r31;

     label16:
        return $r13;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeStructTable(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.FeatureType, ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r28;
        ucar.nc2.ft.point.standard.TableConfig $r7;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r31;
        ucar.nc2.constants.AxisType $r11, $r14, $r17, $r20;
        ucar.nc2.constants.FeatureType r22;
        boolean $z0, z1, $z2, $z4, $z5;
        ucar.nc2.ft.point.standard.plug.CFpointObs r8;
        ucar.nc2.ft.point.standard.Table$Type r29;
        java.lang.String $r12, $r15, $r18, $r21, $r26, $r30, $r32;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r1, $r2, $r3, $r4, $r23, $r24;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo r0;
        ucar.nc2.Dimension $r5, $r6, $r10, $r13, $r16, $r19, $r25, $r27;
        ucar.nc2.dataset.NetcdfDataset r9;

        r8 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r9 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r22 := @parameter1: ucar.nc2.constants.FeatureType;

        r0 := @parameter2: ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        r28 := @parameter3: java.util.Formatter;

        r29 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        $r2 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r1 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        if $r2 != $r1 goto label01;

        r29 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Top>;

     label01:
        $r4 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r3 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding flat>;

        if $r4 != $r3 goto label02;

        r29 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ParentId>;

     label02:
        $r5 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        if $r5 != null goto label03;

        $r30 = " single";

        goto label04;

     label03:
        $r6 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r30 = virtualinvoke $r6.<ucar.nc2.Dimension: java.lang.String getName()>();

     label04:
        $r7 = new ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke $r7.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>(r29, $r30);

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r10 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r12 = virtualinvoke r8.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r9, $r11, $r10);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r12;

        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r13 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r15 = virtualinvoke r8.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r9, $r14, $r13);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r15;

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r16 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r18 = virtualinvoke r8.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r9, $r17, $r16);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r18;

        $r20 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r19 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r21 = virtualinvoke r8.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r9, $r20, $r19);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r21;

        $r7.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = r22;

        $r24 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r23 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        if $r24 == $r23 goto label11;

        $z0 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r9);

        if $z0 == 0 goto label05;

        $r27 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $z2 = virtualinvoke $r27.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 == 0 goto label05;

        $z5 = 1;

        $z4 = 1;

        goto label06;

     label05:
        $z5 = 0;

        $z4 = 0;

     label06:
        z1 = $z4;

        if $z5 == 0 goto label07;

        $r31 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label08;

     label07:
        $r31 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label08:
        $r7.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r31;

        $r25 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r26 = virtualinvoke $r25.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r26;

        if z1 == 0 goto label09;

        $r32 = "record";

        goto label10;

     label09:
        $r32 = $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

     label10:
        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r32;

     label11:
        return $r7;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeStructTableTestTraj(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.FeatureType, ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r24;
        ucar.nc2.ft.point.standard.TableConfig $r7;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r27;
        ucar.nc2.constants.AxisType $r9, $r11, $r13, $r15;
        ucar.nc2.constants.FeatureType r17;
        boolean $z0, z1, $z2, $z4, $z5;
        ucar.nc2.ft.point.standard.plug.CFpointObs r23;
        ucar.nc2.ft.point.standard.Table$Type r25;
        java.lang.String $r10, $r12, $r14, $r16, $r21, $r26, $r28;
        ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding $r1, $r2, $r3, $r4, $r18, $r19;
        ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo r0;
        ucar.nc2.Dimension $r5, $r6, $r20, $r22;
        ucar.nc2.dataset.NetcdfDataset r8;

        r23 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r8 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r17 := @parameter1: ucar.nc2.constants.FeatureType;

        r0 := @parameter2: ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo;

        r24 := @parameter3: java.util.Formatter;

        r25 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        $r2 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r1 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        if $r2 != $r1 goto label01;

        r25 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Top>;

     label01:
        $r4 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r3 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding flat>;

        if $r4 != $r3 goto label02;

        r25 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ParentId>;

     label02:
        $r5 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        if $r5 != null goto label03;

        $r26 = " single";

        goto label04;

     label03:
        $r6 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r26 = virtualinvoke $r6.<ucar.nc2.Dimension: java.lang.String getName()>();

     label04:
        $r7 = new ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke $r7.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>(r25, $r26);

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r10 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r8, $r9);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r10;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r12 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r8, $r11);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r12;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r14 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r8, $r13);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r14;

        $r15 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r16 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r8, $r15);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r16;

        $r7.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = r17;

        $r19 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding encoding>;

        $r18 = <ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding: ucar.nc2.ft.point.standard.plug.CFpointObs$Encoding single>;

        if $r19 == $r18 goto label11;

        $z0 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r8);

        if $z0 == 0 goto label05;

        $r22 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $z2 = virtualinvoke $r22.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 == 0 goto label05;

        $z5 = 1;

        $z4 = 1;

        goto label06;

     label05:
        $z5 = 0;

        $z4 = 0;

     label06:
        z1 = $z5;

        if $z4 == 0 goto label07;

        $r27 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label08;

     label07:
        $r27 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label08:
        $r7.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r27;

        $r20 = r0.<ucar.nc2.ft.point.standard.plug.CFpointObs$EncodingInfo: ucar.nc2.Dimension parentDim>;

        $r21 = virtualinvoke $r20.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r21;

        if z1 == 0 goto label09;

        $r28 = "record";

        goto label10;

     label09:
        $r28 = $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

     label10:
        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r28;

     label11:
        return $r7;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeRaggedContiguous(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Dimension, ucar.nc2.Dimension, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r17;
        ucar.nc2.ft.point.standard.TableConfig $r0;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r24;
        ucar.nc2.constants.AxisType $r7, $r9, $r11, $r13;
        boolean $z0, z1, $z2, $z4, $z5;
        ucar.nc2.ft.point.standard.plug.CFpointObs r5;
        java.lang.Object[] $r25;
        ucar.nc2.ft.point.standard.Table$Type $r2;
        int $i0;
        ucar.nc2.Variable $r16;
        java.lang.String $r3, $r4, $r8, $r10, $r12, $r14, $r15, $r20, $r21, $r22, $r23, $r26;
        ucar.nc2.Dimension r1, r18, $r19;
        ucar.nc2.dataset.NetcdfDataset r6;

        r5 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r6 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r18 := @parameter1: ucar.nc2.Dimension;

        r1 := @parameter2: ucar.nc2.Dimension;

        r17 := @parameter3: java.util.Formatter;

        $r0 = new ucar.nc2.ft.point.standard.TableConfig;

        $r2 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Contiguous>;

        $r3 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r0.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r2, $r3);

        $r4 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r4;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r8 = virtualinvoke r5.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r6, $r7, r1);

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r8;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r10 = virtualinvoke r5.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r6, $r9, r1);

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r10;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r12 = virtualinvoke r5.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r6, $r11, r1);

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r12;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r14 = virtualinvoke r5.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r6, $r13, r1);

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r14;

        $z0 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r6);

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r1.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 == 0 goto label1;

        $z5 = 1;

        $z4 = 1;

        goto label2;

     label1:
        $z5 = 0;

        $z4 = 0;

     label2:
        z1 = $z4;

        if $z5 == 0 goto label3;

        $r23 = "record";

        goto label4;

     label3:
        $r23 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

     label4:
        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r23;

        if z1 == 0 goto label5;

        $r24 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label6;

     label5:
        $r24 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label6:
        $r0.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r24;

        $r15 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r16 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r6, "CF:ragged_row_count", $r15);

        if null == $r16 goto label7;

        $i0 = virtualinvoke $r16.<ucar.nc2.Variable: int getRank()>();

        if $i0 == 0 goto label7;

        $r19 = virtualinvoke $r16.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r20 = virtualinvoke $r19.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r21 = virtualinvoke r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        if $r20 == $r21 goto label8;

     label7:
        $r25 = newarray (java.lang.Object)[1];

        $r26 = virtualinvoke r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r25[0] = $r26;

        virtualinvoke r17.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("there must be a ragged_row_count variable with outer dimension that matches latitude/longitude dimension %s%n", $r25);

        return null;

     label8:
        $r22 = virtualinvoke $r16.<ucar.nc2.Variable: java.lang.String getName()>();

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String numRecords> = $r22;

        return $r0;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeRaggedIndex(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Dimension, ucar.nc2.Dimension, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r18;
        ucar.nc2.ft.point.standard.TableConfig $r0;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r24;
        ucar.nc2.constants.AxisType $r7, $r9, $r11, $r13;
        boolean $z0, z1, $z2, $z4, $z5;
        ucar.nc2.ft.point.standard.plug.CFpointObs r5;
        java.lang.Object[] $r25;
        ucar.nc2.ft.point.standard.Table$Type $r2;
        int $i0;
        ucar.nc2.Variable $r17;
        java.lang.String $r3, $r4, $r8, $r10, $r12, $r14, $r16, $r20, $r21, $r22, $r23, $r26;
        ucar.nc2.Dimension r1, r15, $r19;
        ucar.nc2.dataset.NetcdfDataset r6;

        r5 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r6 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r15 := @parameter1: ucar.nc2.Dimension;

        r1 := @parameter2: ucar.nc2.Dimension;

        r18 := @parameter3: java.util.Formatter;

        $r0 = new ucar.nc2.ft.point.standard.TableConfig;

        $r2 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ParentIndex>;

        $r3 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r0.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r2, $r3);

        $r4 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r4;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r8 = virtualinvoke r5.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r6, $r7, r1);

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r8;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r10 = virtualinvoke r5.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r6, $r9, r1);

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r10;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r12 = virtualinvoke r5.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r6, $r11, r1);

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r12;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r14 = virtualinvoke r5.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r6, $r13, r1);

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r14;

        $z0 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r6);

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r1.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 == 0 goto label1;

        $z5 = 1;

        $z4 = 1;

        goto label2;

     label1:
        $z5 = 0;

        $z4 = 0;

     label2:
        z1 = $z4;

        if $z5 == 0 goto label3;

        $r23 = "record";

        goto label4;

     label3:
        $r23 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

     label4:
        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r23;

        if z1 == 0 goto label5;

        $r24 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label6;

     label5:
        $r24 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label6:
        $r0.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r24;

        $r16 = virtualinvoke r15.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r17 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Variable getVariableWithAttributeValue(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r6, "CF:ragged_parent_index", $r16);

        if null == $r17 goto label7;

        $i0 = virtualinvoke $r17.<ucar.nc2.Variable: int getRank()>();

        if $i0 == 0 goto label7;

        $r19 = virtualinvoke $r17.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r20 = virtualinvoke $r19.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r21 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        if $r20 == $r21 goto label8;

     label7:
        $r25 = newarray (java.lang.Object)[1];

        $r26 = virtualinvoke r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r25[0] = $r26;

        virtualinvoke r18.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("there must be a ragged_parent_index variable with outer dimension that matches obs dimension %s%n", $r25);

        return null;

     label8:
        $r22 = virtualinvoke $r17.<ucar.nc2.Variable: java.lang.String getName()>();

        $r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String parentIndex> = $r22;

        return $r0;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeMultidimInner(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig, ucar.nc2.Dimension, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r36;
        ucar.nc2.ft.point.standard.TableConfig r1, $r6;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r4, $r5, $r22, $r25, $r26;
        ucar.nc2.constants.AxisType $r10, $r12, $r14, $r16;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.DataType $r34, $r35;
        ucar.nc2.ft.point.standard.plug.CFpointObs r9;
        java.util.List $r18;
        java.util.ArrayList $r19, $r20;
        ucar.nc2.ft.point.standard.Table$Type $r37;
        int $i0, $i1, $i2, $i3;
        ucar.nc2.Variable r29;
        java.lang.String $r2, $r8, $r11, $r13, $r15, $r17, $r23, $r24, $r27, $r31, $r33, $r38;
        java.util.Iterator $r21;
        ucar.nc2.Dimension $r3, r7, $r30, $r32;
        java.lang.Object $r28;
        ucar.nc2.dataset.NetcdfDataset r0;

        r9 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        r7 := @parameter2: ucar.nc2.Dimension;

        r36 := @parameter3: java.util.Formatter;

        $r2 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r2);

        $r5 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $r4 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

        if $r5 != $r4 goto label01;

        $r37 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInnerPsuedo>;

        goto label02;

     label01:
        $r37 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner>;

     label02:
        $r6 = new ucar.nc2.ft.point.standard.TableConfig;

        $r8 = virtualinvoke r7.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r6.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r37, $r8);

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r11 = virtualinvoke r9.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r10, $r3, r7);

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r11;

        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r13 = virtualinvoke r9.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r12, $r3, r7);

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r13;

        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r15 = virtualinvoke r9.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r14, $r3, r7);

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r15;

        $r16 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r17 = virtualinvoke r9.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r16, $r3, r7);

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r17;

        $r18 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r19 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r18.<java.util.List: int size()>();

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i0);

        $r20 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r18.<java.util.List: int size()>();

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i1);

        $r21 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r28 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r29 = (ucar.nc2.Variable) $r28;

        $z0 = r29 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label04;

        goto label03;

     label04:
        $r30 = virtualinvoke r29.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r30 == null goto label07;

        $z1 = virtualinvoke $r30.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label07;

        $i2 = virtualinvoke r29.<ucar.nc2.Variable: int getRank()>();

        if $i2 == 1 goto label05;

        $i3 = virtualinvoke r29.<ucar.nc2.Variable: int getRank()>();

        if $i3 != 2 goto label06;

        $r34 = virtualinvoke r29.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r35 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r34 != $r35 goto label06;

     label05:
        $r31 = virtualinvoke r29.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label07;

     label06:
        $r32 = virtualinvoke r29.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        if $r32 == null goto label07;

        $z2 = virtualinvoke $r32.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label07;

        $r33 = virtualinvoke r29.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r33);

     label07:
        goto label03;

     label08:
        r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r19;

        $r22 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $r6.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r22;

        $r23 = virtualinvoke $r3.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName> = $r23;

        $r24 = virtualinvoke r7.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName> = $r24;

        $r26 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $r25 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

        if $r26 != $r25 goto label09;

        $r38 = $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        goto label10;

     label09:
        $r38 = $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

     label10:
        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r38;

        $r27 = virtualinvoke r7.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r27;

        $r6.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r20;

        return $r6;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeMultidimInner3D(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig, ucar.nc2.ft.point.standard.TableConfig, ucar.nc2.Dimension, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r44;
        ucar.nc2.ft.point.standard.TableConfig r1, r4, $r9;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r7, $r8, $r12;
        ucar.nc2.constants.AxisType $r18, $r20, $r22, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.ma2.DataType $r42, $r43;
        ucar.nc2.ft.point.standard.plug.CFpointObs r17;
        java.util.List $r26;
        java.util.ArrayList $r27, $r28, $r29;
        ucar.nc2.ft.point.standard.Table$Type $r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.Variable r32;
        java.lang.String $r2, $r5, $r11, $r13, $r14, $r15, $r16, $r19, $r21, $r23, $r25, $r34, $r38, $r41;
        java.util.Iterator $r30;
        ucar.nc2.Dimension $r3, $r6, r10, $r33, $r35, $r36, $r37, $r39, $r40;
        java.lang.Object $r31;
        ucar.nc2.dataset.NetcdfDataset r0;

        r17 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        r4 := @parameter2: ucar.nc2.ft.point.standard.TableConfig;

        r10 := @parameter3: ucar.nc2.Dimension;

        r44 := @parameter4: java.util.Formatter;

        $r2 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r2);

        $r5 = r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        $r6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r5);

        $r8 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $r7 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

        if $r8 != $r7 goto label1;

        $r45 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInnerPsuedo3D>;

        goto label2;

     label1:
        $r45 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner3D>;

     label2:
        $r9 = new ucar.nc2.ft.point.standard.TableConfig;

        $r11 = virtualinvoke r10.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r9.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r45, $r11);

        $r12 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure2D>;

        $r9.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r12;

        $r13 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r13;

        $r14 = r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName> = $r14;

        $r15 = virtualinvoke r10.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName> = $r15;

        $r16 = virtualinvoke r10.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r16;

        $r18 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r19 = virtualinvoke r17.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r18, $r3, $r6, r10);

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r19;

        $r20 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r21 = virtualinvoke r17.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r20, $r3, $r6, r10);

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r21;

        $r22 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r23 = virtualinvoke r17.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r22, $r3, $r6, r10);

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r23;

        $r24 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r25 = virtualinvoke r17.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, $r24, $r3, $r6, r10);

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r25;

        $r26 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r27 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r26.<java.util.List: int size()>();

        specialinvoke $r27.<java.util.ArrayList: void <init>(int)>($i0);

        $r28 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r26.<java.util.List: int size()>();

        specialinvoke $r28.<java.util.ArrayList: void <init>(int)>($i1);

        $r29 = new java.util.ArrayList;

        $i2 = interfaceinvoke $r26.<java.util.List: int size()>();

        specialinvoke $r29.<java.util.ArrayList: void <init>(int)>($i2);

        $r30 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z7 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label9;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r32 = (ucar.nc2.Variable) $r31;

        $z0 = r32 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label4;

        goto label3;

     label4:
        $i3 = virtualinvoke r32.<ucar.nc2.Variable: int getRank()>();

        if $i3 == 1 goto label5;

        $i4 = virtualinvoke r32.<ucar.nc2.Variable: int getRank()>();

        if $i4 != 2 goto label6;

        $r42 = virtualinvoke r32.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r43 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r42 != $r43 goto label6;

     label5:
        $r33 = virtualinvoke r32.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z1 = virtualinvoke $r3.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r33);

        if $z1 == 0 goto label8;

        $r34 = virtualinvoke r32.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r34);

        goto label8;

     label6:
        $i5 = virtualinvoke r32.<ucar.nc2.Variable: int getRank()>();

        if $i5 != 2 goto label7;

        $r39 = virtualinvoke r32.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z5 = virtualinvoke $r3.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r39);

        if $z5 == 0 goto label8;

        $r40 = virtualinvoke r32.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        $z6 = virtualinvoke $r6.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r40);

        if $z6 == 0 goto label8;

        $r41 = virtualinvoke r32.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r41);

        goto label8;

     label7:
        $i6 = virtualinvoke r32.<ucar.nc2.Variable: int getRank()>();

        if $i6 != 3 goto label8;

        $r35 = virtualinvoke r32.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z2 = virtualinvoke $r3.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r35);

        if $z2 == 0 goto label8;

        $r36 = virtualinvoke r32.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        $z3 = virtualinvoke $r6.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r36);

        if $z3 == 0 goto label8;

        $r37 = virtualinvoke r32.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(2);

        $z4 = virtualinvoke r10.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r37);

        if $z4 == 0 goto label8;

        $r38 = virtualinvoke r32.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r38);

     label8:
        goto label3;

     label9:
        r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r27;

        r4.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r28;

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r29;

        return $r9;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeSingle(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Dimension, java.util.Formatter) throws java.io.IOException
    {
        java.util.Formatter r14;
        ucar.nc2.ft.point.standard.Table$Type r0;
        ucar.nc2.ft.point.standard.TableConfig $r1;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r16;
        ucar.nc2.constants.AxisType $r6, $r8, $r10, $r12;
        java.lang.String $r3, $r7, $r9, $r11, $r13, $r15;
        boolean $z0, z1, $z2, $z4, $z5;
        ucar.nc2.ft.point.standard.plug.CFpointObs r4;
        ucar.nc2.Dimension r2;
        ucar.nc2.dataset.NetcdfDataset r5;

        r4 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r5 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Dimension;

        r14 := @parameter2: java.util.Formatter;

        r0 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        $r1 = new ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke $r1.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>(r0, "single");

        $r3 = virtualinvoke r2.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r3;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r7 = virtualinvoke r4.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r5, $r6, r2);

        $r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r7;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r9 = virtualinvoke r4.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r5, $r8, r2);

        $r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r9;

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r11 = virtualinvoke r4.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r5, $r10, r2);

        $r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r11;

        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r13 = virtualinvoke r4.<ucar.nc2.ft.point.standard.plug.CFpointObs: java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.Dimension)>(r5, $r12, r2);

        $r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r13;

        $z0 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r5);

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r2.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 == 0 goto label1;

        $z5 = 1;

        $z4 = 1;

        goto label2;

     label1:
        $z5 = 0;

        $z4 = 0;

     label2:
        z1 = $z5;

        if $z4 == 0 goto label3;

        $r15 = "record";

        goto label4;

     label3:
        $r15 = virtualinvoke r2.<ucar.nc2.Dimension: java.lang.String getName()>();

     label4:
        $r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r15;

        if z1 == 0 goto label5;

        $r16 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label6;

     label5:
        $r16 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label6:
        $r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r16;

        return $r1;
    }

    private ucar.nc2.ft.point.standard.TableConfig makeMiddleTable(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig, ucar.nc2.Dimension, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.TableConfig r3;
        java.lang.UnsupportedOperationException $r0;
        ucar.nc2.ft.point.standard.plug.CFpointObs r1;
        ucar.nc2.Dimension r4;
        ucar.nc2.dataset.NetcdfDataset r2;
        java.util.Formatter r5;

        r1 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        r4 := @parameter2: ucar.nc2.Dimension;

        r5 := @parameter3: java.util.Formatter;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("CFpointObs: middleTable encoding");

        throw $r0;
    }

    protected java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.CoordinateAxis $r5;
        ucar.nc2.ft.point.standard.plug.CFpointObs r3;
        ucar.nc2.ft.point.standard.plug.CFpointObs$1 $r2;
        ucar.nc2.constants.AxisType r1;
        ucar.nc2.Dimension r4;
        java.lang.String $r6;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.ft.point.standard.plug.CFpointObs;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.constants.AxisType;

        r4 := @parameter2: ucar.nc2.Dimension;

        $r2 = new ucar.nc2.ft.point.standard.plug.CFpointObs$1;

        specialinvoke $r2.<ucar.nc2.ft.point.standard.plug.CFpointObs$1: void <init>(ucar.nc2.ft.point.standard.plug.CFpointObs,ucar.nc2.Dimension)>(r3, r4);

        $r5 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.ft.point.standard.CoordSysEvaluator$Predicate)>(r0, r1, $r2);

        if $r5 != null goto label1;

        return null;

     label1:
        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: java.lang.String getShortName()>();

        return $r6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/ft/point/standard/plug/CFpointObs;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.ft.point.standard.plug.CFpointObs: boolean $assertionsDisabled> = $z1;

        return;
    }
}
