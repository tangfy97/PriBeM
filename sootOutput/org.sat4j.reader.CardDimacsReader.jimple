public class org.sat4j.reader.CardDimacsReader extends org.sat4j.reader.DimacsReader
{
    private static final long serialVersionUID;

    public void <init>(org.sat4j.specs.ISolver)
    {
        org.sat4j.reader.CardDimacsReader r0;
        org.sat4j.specs.ISolver r1;

        r0 := @this: org.sat4j.reader.CardDimacsReader;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<org.sat4j.reader.DimacsReader: void <init>(org.sat4j.specs.ISolver)>(r1);

        return;
    }

    protected void readConstrs(java.io.LineNumberReader) throws java.io.IOException, org.sat4j.reader.ParseFormatException, org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ISolver $r7, $r17;
        java.util.StringTokenizer $r2;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        java.lang.String $r3, $r4, $r6, $r16, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.PrintStream $r8;
        org.sat4j.reader.CardDimacsReader r5;
        java.io.LineNumberReader r1;
        org.sat4j.reader.ParseFormatException $r9;
        org.sat4j.core.VecInt $r0;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15;

        r5 := @this: org.sat4j.reader.CardDimacsReader;

        r1 := @parameter0: java.io.LineNumberReader;

        i5 = 0;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>()>();

     label01:
        $r18 = virtualinvoke r1.<java.io.LineNumberReader: java.lang.String readLine()>();

        if $r18 != null goto label02;

        $i4 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int size()>();

        if $i4 <= 0 goto label10;

        $r17 = r5.<org.sat4j.reader.CardDimacsReader: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r17.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r0);

        i5 = i5 + 1;

        goto label10;

     label02:
        $z0 = virtualinvoke $r18.<java.lang.String: boolean startsWith(java.lang.String)>("c ");

        if $z0 == 0 goto label03;

        goto label01;

     label03:
        $z1 = virtualinvoke $r18.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z1 == 0 goto label04;

        $i2 = r5.<org.sat4j.reader.CardDimacsReader: int expectedNbOfConstr>;

        if $i2 != i5 goto label04;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Ignoring the rest of the file (SATLIB format");

        goto label10;

     label04:
        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String)>($r18);

     label05:
        $z4 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label09;

        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = "<=";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label06;

        $r6 = ">=";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label07;

     label06:
        specialinvoke r5.<org.sat4j.reader.CardDimacsReader: void readCardinalityConstr(java.lang.String,java.util.StringTokenizer,org.sat4j.specs.IVecInt)>($r3, $r2, $r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        i5 = i5 + 1;

        goto label05;

     label07:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        if $i0 != 0 goto label08;

        $i1 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int size()>();

        if $i1 <= 0 goto label05;

        $r7 = r5.<org.sat4j.reader.CardDimacsReader: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r7.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        i5 = i5 + 1;

        goto label05;

     label08:
        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i0);

        goto label05;

     label09:
        goto label01;

     label10:
        $i6 = r5.<org.sat4j.reader.CardDimacsReader: int expectedNbOfConstr>;

        if $i6 == i5 goto label11;

        $r9 = new org.sat4j.reader.ParseFormatException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wrong nbclauses parameter. Found ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i3 = r5.<org.sat4j.reader.CardDimacsReader: int expectedNbOfConstr>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label11:
        return;
    }

    private void readCardinalityConstr(java.lang.String, java.util.StringTokenizer, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException, org.sat4j.reader.ParseFormatException
    {
        org.sat4j.reader.CardDimacsReader r7;
        org.sat4j.specs.ISolver $r9, $r10;
        org.sat4j.specs.IVecInt r8;
        org.sat4j.reader.ParseFormatException $r3;
        java.util.StringTokenizer r0;
        int $i0, $i1;
        java.lang.String $r1, $r2, r4, $r5, $r6;
        boolean $z0, $z1;

        r7 := @this: org.sat4j.reader.CardDimacsReader;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.StringTokenizer;

        r8 := @parameter2: org.sat4j.specs.IVecInt;

        $r1 = virtualinvoke r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r2 = virtualinvoke r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        if $i1 != 0 goto label2;

        $r5 = "<=";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label1;

        $r10 = r7.<org.sat4j.reader.CardDimacsReader: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r10.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt,int)>(r8, $i0);

        goto label3;

     label1:
        $r6 = ">=";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label3;

        $r9 = r7.<org.sat4j.reader.CardDimacsReader: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r9.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.IVecInt,int)>(r8, $i0);

        goto label3;

     label2:
        $r3 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r3.<org.sat4j.reader.ParseFormatException: void <init>()>();

        throw $r3;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <org.sat4j.reader.CardDimacsReader: long serialVersionUID> = 3258130241376368435L;

        return;
    }
}
