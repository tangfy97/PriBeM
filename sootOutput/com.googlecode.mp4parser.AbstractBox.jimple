public abstract class com.googlecode.mp4parser.AbstractBox extends java.lang.Object implements com.coremedia.iso.boxes.Box
{
    private static com.googlecode.mp4parser.util.Logger LOG;
    protected java.lang.String type;
    private byte[] userType;
    private com.coremedia.iso.boxes.Container parent;
    boolean isParsed;
    boolean isRead;
    private java.nio.ByteBuffer content;
    long contentStartPosition;
    long offset;
    long memMapSize;
    com.googlecode.mp4parser.DataSource dataSource;
    private java.nio.ByteBuffer deadBytes;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        com.googlecode.mp4parser.util.Logger $r1;
        boolean $z0, $z1;

        $r0 = class "Lcom/googlecode/mp4parser/AbstractBox;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.AbstractBox: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <com.googlecode.mp4parser.util.Logger: com.googlecode.mp4parser.util.Logger getLogger(java.lang.Class)>(class "Lcom/googlecode/mp4parser/AbstractBox;");

        <com.googlecode.mp4parser.AbstractBox: com.googlecode.mp4parser.util.Logger LOG> = $r1;

        return;
    }

    private synchronized void readContent()
    {
        com.googlecode.mp4parser.DataSource $r6;
        long $l0, $l1;
        java.io.IOException $r8;
        java.lang.RuntimeException $r9;
        com.googlecode.mp4parser.util.Logger $r2;
        java.nio.ByteBuffer $r7;
        com.googlecode.mp4parser.AbstractBox r0;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        $z0 = r0.<com.googlecode.mp4parser.AbstractBox: boolean isRead>;

        if $z0 != 0 goto label5;

     label1:
        $r2 = <com.googlecode.mp4parser.AbstractBox: com.googlecode.mp4parser.util.Logger LOG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("mem mapping ");

        $r3 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.googlecode.mp4parser.util.Logger: void logDebug(java.lang.String)>($r5);

        $r6 = r0.<com.googlecode.mp4parser.AbstractBox: com.googlecode.mp4parser.DataSource dataSource>;

        $l1 = r0.<com.googlecode.mp4parser.AbstractBox: long contentStartPosition>;

        $l0 = r0.<com.googlecode.mp4parser.AbstractBox: long memMapSize>;

        $r7 = interfaceinvoke $r6.<com.googlecode.mp4parser.DataSource: java.nio.ByteBuffer map(long,long)>($l1, $l0);

        r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer content> = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        r0.<com.googlecode.mp4parser.AbstractBox: boolean isRead> = 1;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long getOffset()
    {
        long $l0;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        $l0 = r0.<com.googlecode.mp4parser.AbstractBox: long offset>;

        return $l0;
    }

    protected void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.AbstractBox: long memMapSize> = -1L;

        r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes> = null;

        r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String type> = r1;

        r0.<com.googlecode.mp4parser.AbstractBox: boolean isRead> = 1;

        r0.<com.googlecode.mp4parser.AbstractBox: boolean isParsed> = 1;

        return;
    }

    protected void <init>(java.lang.String, byte[])
    {
        byte[] r2;
        java.lang.String r1;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.AbstractBox: long memMapSize> = -1L;

        r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes> = null;

        r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String type> = r1;

        r0.<com.googlecode.mp4parser.AbstractBox: byte[] userType> = r2;

        r0.<com.googlecode.mp4parser.AbstractBox: boolean isRead> = 1;

        r0.<com.googlecode.mp4parser.AbstractBox: boolean isParsed> = 1;

        return;
    }

    protected abstract long getContentSize();

    protected abstract void getContent(java.nio.ByteBuffer);

    protected abstract void _parseDetails(java.nio.ByteBuffer);

    public void parse(com.googlecode.mp4parser.DataSource, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r1;
        long $l0, $l1, $l3, $l4, l5, $l6, $l7;
        java.nio.ByteBuffer r2;
        com.googlecode.mp4parser.AbstractBox r0;
        com.coremedia.iso.BoxParser r3;
        int $i2;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r2 := @parameter1: java.nio.ByteBuffer;

        l5 := @parameter2: long;

        r3 := @parameter3: com.coremedia.iso.BoxParser;

        $l0 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        r0.<com.googlecode.mp4parser.AbstractBox: long contentStartPosition> = $l0;

        $l1 = r0.<com.googlecode.mp4parser.AbstractBox: long contentStartPosition>;

        $i2 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $l3 = (long) $i2;

        $l4 = $l1 - $l3;

        r0.<com.googlecode.mp4parser.AbstractBox: long offset> = $l4;

        r0.<com.googlecode.mp4parser.AbstractBox: long memMapSize> = l5;

        r0.<com.googlecode.mp4parser.AbstractBox: com.googlecode.mp4parser.DataSource dataSource> = r1;

        $l6 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $l7 = $l6 + l5;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: void position(long)>($l7);

        r0.<com.googlecode.mp4parser.AbstractBox: boolean isRead> = 0;

        r0.<com.googlecode.mp4parser.AbstractBox: boolean isParsed> = 0;

        return;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        java.nio.ByteBuffer $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r21;
        com.googlecode.mp4parser.AbstractBox r0;
        byte $b3, $b4, $b6, $b7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        long $l0, $l9, $l10;
        java.nio.Buffer $r8, $r14, $r17, $r20;
        int $i1, $i2, $i5, $i8;
        java.lang.String $r1, $r2, $r4, $r5;
        com.googlecode.mp4parser.DataSource $r22;
        java.nio.channels.WritableByteChannel r3;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        r3 := @parameter0: java.nio.channels.WritableByteChannel;

        $z0 = r0.<com.googlecode.mp4parser.AbstractBox: boolean isRead>;

        if $z0 == 0 goto label09;

        $z3 = r0.<com.googlecode.mp4parser.AbstractBox: boolean isParsed>;

        if $z3 == 0 goto label04;

        $l0 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: long getSize()>();

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l0);

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);

        specialinvoke r0.<com.googlecode.mp4parser.AbstractBox: void getHeader(java.nio.ByteBuffer)>($r6);

        virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: void getContent(java.nio.ByteBuffer)>($r6);

        $r7 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        if $r7 == null goto label03;

        $r10 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        goto label02;

     label01:
        $r12 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r12);

     label02:
        $r11 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        $i2 = virtualinvoke $r11.<java.nio.ByteBuffer: int remaining()>();

        if $i2 > 0 goto label01;

     label03:
        $r8 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r9 = (java.nio.ByteBuffer) $r8;

        interfaceinvoke r3.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r9);

        goto label14;

     label04:
        $z4 = specialinvoke r0.<com.googlecode.mp4parser.AbstractBox: boolean isSmallBox()>();

        if $z4 == 0 goto label05;

        $b3 = 8;

        goto label06;

     label05:
        $b3 = 16;

     label06:
        $r4 = "uuid";

        $r5 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z5 == 0 goto label07;

        $b4 = 16;

        goto label08;

     label07:
        $b4 = 0;

     label08:
        $i5 = $b3 + $b4;

        $r13 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i5);

        specialinvoke r0.<com.googlecode.mp4parser.AbstractBox: void getHeader(java.nio.ByteBuffer)>($r13);

        $r14 = virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r15 = (java.nio.ByteBuffer) $r14;

        interfaceinvoke r3.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r15);

        $r16 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer content>;

        $r17 = virtualinvoke $r16.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r18 = (java.nio.ByteBuffer) $r17;

        interfaceinvoke r3.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r18);

        goto label14;

     label09:
        $z1 = specialinvoke r0.<com.googlecode.mp4parser.AbstractBox: boolean isSmallBox()>();

        if $z1 == 0 goto label10;

        $b6 = 8;

        goto label11;

     label10:
        $b6 = 16;

     label11:
        $r1 = "uuid";

        $r2 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label12;

        $b7 = 16;

        goto label13;

     label12:
        $b7 = 0;

     label13:
        $i8 = $b6 + $b7;

        $r19 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i8);

        specialinvoke r0.<com.googlecode.mp4parser.AbstractBox: void getHeader(java.nio.ByteBuffer)>($r19);

        $r20 = virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r21 = (java.nio.ByteBuffer) $r20;

        interfaceinvoke r3.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r21);

        $r22 = r0.<com.googlecode.mp4parser.AbstractBox: com.googlecode.mp4parser.DataSource dataSource>;

        $l9 = r0.<com.googlecode.mp4parser.AbstractBox: long contentStartPosition>;

        $l10 = r0.<com.googlecode.mp4parser.AbstractBox: long memMapSize>;

        interfaceinvoke $r22.<com.googlecode.mp4parser.DataSource: long transferTo(long,long,java.nio.channels.WritableByteChannel)>($l9, $l10, r3);

     label14:
        return;
    }

    public final synchronized void parseDetails()
    {
        java.lang.AssertionError $r8;
        com.googlecode.mp4parser.util.Logger $r2;
        java.nio.ByteBuffer $r6, r7, $r9;
        com.googlecode.mp4parser.AbstractBox r0;
        int $i0;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractBox: void readContent()>();

        $r2 = <com.googlecode.mp4parser.AbstractBox: com.googlecode.mp4parser.util.Logger LOG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("parsing details of ");

        $r3 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.googlecode.mp4parser.util.Logger: void logDebug(java.lang.String)>($r5);

        $r6 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer content>;

        if $r6 == null goto label2;

        r7 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer content>;

        r0.<com.googlecode.mp4parser.AbstractBox: boolean isParsed> = 1;

        virtualinvoke r7.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: void _parseDetails(java.nio.ByteBuffer)>(r7);

        $i0 = virtualinvoke r7.<java.nio.ByteBuffer: int remaining()>();

        if $i0 <= 0 goto label1;

        $r9 = virtualinvoke r7.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes> = $r9;

     label1:
        r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer content> = null;

        $z0 = <com.googlecode.mp4parser.AbstractBox: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<com.googlecode.mp4parser.AbstractBox: boolean verify(java.nio.ByteBuffer)>(r7);

        if $z1 != 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        return;
    }

    protected void setDeadBytes(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r1;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes> = r1;

        return;
    }

    public long getSize()
    {
        long $l2, $l3, $l4, $l5, $l6, $l7;
        java.nio.ByteBuffer $r3, $r4, $r5, $r6;
        com.googlecode.mp4parser.AbstractBox r0;
        byte $b9, $b10, $b11;
        int $i0, $i1, $i8, $i12, $i13;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        $z0 = r0.<com.googlecode.mp4parser.AbstractBox: boolean isRead>;

        if $z0 == 0 goto label04;

        $z2 = r0.<com.googlecode.mp4parser.AbstractBox: boolean isParsed>;

        if $z2 == 0 goto label01;

        $l7 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: long getContentSize()>();

        goto label05;

     label01:
        $r5 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer content>;

        if $r5 == null goto label02;

        $r6 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer content>;

        $i8 = virtualinvoke $r6.<java.nio.ByteBuffer: int limit()>();

        goto label03;

     label02:
        $i8 = 0;

     label03:
        $l7 = (long) $i8;

        goto label05;

     label04:
        $l7 = r0.<com.googlecode.mp4parser.AbstractBox: long memMapSize>;

     label05:
        $l5 = $l7;

        $b9 = $l7 cmp 4294967288L;

        $i13 = (int) $b9;

        if $i13 < 0 goto label06;

        $b10 = 8;

        goto label07;

     label06:
        $b10 = 0;

     label07:
        $i0 = 8 + $b10;

        $r1 = "uuid";

        $r2 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label08;

        $b11 = 16;

        goto label09;

     label08:
        $b11 = 0;

     label09:
        $i1 = $i0 + $b11;

        $l2 = (long) $i1;

        $l6 = $l5 + $l2;

        $r3 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        if $r3 != null goto label10;

        $i12 = 0;

        goto label11;

     label10:
        $r4 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        $i12 = virtualinvoke $r4.<java.nio.ByteBuffer: int limit()>();

     label11:
        $l3 = (long) $i12;

        $l4 = $l6 + $l3;

        return $l4;
    }

    public java.lang.String getType()
    {
        java.lang.String $r1;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        $r1 = r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String type>;

        return $r1;
    }

    public byte[] getUserType()
    {
        byte[] $r1;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        $r1 = r0.<com.googlecode.mp4parser.AbstractBox: byte[] userType>;

        return $r1;
    }

    public com.coremedia.iso.boxes.Container getParent()
    {
        com.coremedia.iso.boxes.Container $r1;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        $r1 = r0.<com.googlecode.mp4parser.AbstractBox: com.coremedia.iso.boxes.Container parent>;

        return $r1;
    }

    public void setParent(com.coremedia.iso.boxes.Container)
    {
        com.coremedia.iso.boxes.Container r1;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        r1 := @parameter0: com.coremedia.iso.boxes.Container;

        r0.<com.googlecode.mp4parser.AbstractBox: com.coremedia.iso.boxes.Container parent> = r1;

        return;
    }

    public boolean isParsed()
    {
        com.googlecode.mp4parser.AbstractBox r0;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        $z0 = r0.<com.googlecode.mp4parser.AbstractBox: boolean isParsed>;

        return $z0;
    }

    private boolean verify(java.nio.ByteBuffer)
    {
        byte[] r12, r13;
        java.lang.Integer $r8;
        com.googlecode.mp4parser.AbstractBox r0;
        byte $b9, $b10;
        java.lang.StringBuilder $r17, $r22, $r28, $r29, $r30, $r31, $r37, $r38, $r39, $r40, $r46, $r47, $r48, $r49;
        java.lang.Object[] $r5;
        long $l0, $l1, $l2;
        java.lang.String $r7, $r11, $r16, $r18, $r21, $r23, $r26, $r27, $r32, $r35, $r36, $r41;
        java.nio.ByteBuffer $r1, $r2, $r3, r4, $r42, $r43, $r44, $r45;
        java.lang.Byte $r9, $r10;
        com.googlecode.mp4parser.util.Logger $r6, $r34;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, $i21, $i22, $i24, $i26;
        java.io.PrintStream $r15, $r20, $r25;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        r4 := @parameter0: java.nio.ByteBuffer;

        $l0 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: long getContentSize()>();

        $r1 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        if $r1 == null goto label1;

        $r45 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        $i18 = virtualinvoke $r45.<java.nio.ByteBuffer: int limit()>();

        goto label2;

     label1:
        $i18 = 0;

     label2:
        $l1 = (long) $i18;

        $l2 = $l0 + $l1;

        $i3 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l2);

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i3);

        virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: void getContent(java.nio.ByteBuffer)>($r2);

        $r3 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        if $r3 == null goto label5;

        $r42 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        virtualinvoke $r42.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        goto label4;

     label3:
        $r44 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r44);

     label4:
        $r43 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        $i17 = virtualinvoke $r43.<java.nio.ByteBuffer: int remaining()>();

        if $i17 > 0 goto label3;

     label5:
        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $i4 = virtualinvoke r4.<java.nio.ByteBuffer: int remaining()>();

        $i5 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        if $i4 == $i5 goto label6;

        $r25 = <java.lang.System: java.io.PrintStream err>;

        $r46 = new java.lang.StringBuilder;

        $r26 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26);

        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>($r27);

        $r28 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": remaining differs ");

        $i13 = virtualinvoke r4.<java.nio.ByteBuffer: int remaining()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs. ");

        $i14 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void print(java.lang.String)>($r32);

        $r34 = <com.googlecode.mp4parser.AbstractBox: com.googlecode.mp4parser.util.Logger LOG>;

        $r47 = new java.lang.StringBuilder;

        $r35 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r35);

        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>($r36);

        $r37 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": remaining differs ");

        $i15 = virtualinvoke r4.<java.nio.ByteBuffer: int remaining()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs. ");

        $i16 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<com.googlecode.mp4parser.util.Logger: void logError(java.lang.String)>($r41);

        return 0;

     label6:
        $i6 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>();

        $i7 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>();

        i19 = $i7 - 1;

        $i8 = virtualinvoke $r2.<java.nio.ByteBuffer: int limit()>();

        i20 = $i8 - 1;

        goto label9;

     label7:
        $b9 = virtualinvoke r4.<java.nio.ByteBuffer: byte get(int)>(i19);

        $b10 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get(int)>(i20);

        $i21 = (int) $b9;

        $i22 = (int) $b10;

        if $i21 == $i22 goto label8;

        $r6 = <com.googlecode.mp4parser.AbstractBox: com.googlecode.mp4parser.util.Logger LOG>;

        $r5 = newarray (java.lang.Object)[4];

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i19);

        $r5[1] = $r8;

        $r9 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b9);

        $r5[2] = $r9;

        $r10 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b10);

        $r5[3] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: buffers differ at %d: %2X/%2X", $r5);

        virtualinvoke $r6.<com.googlecode.mp4parser.util.Logger: void logError(java.lang.String)>($r11);

        $i11 = virtualinvoke r4.<java.nio.ByteBuffer: int remaining()>();

        r12 = newarray (byte)[$i11];

        $i12 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        r13 = newarray (byte)[$i12];

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r12);

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r13);

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>(java.lang.String)>("original      : ");

        $r16 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[],int)>(r12, 4);

        $r17 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>(java.lang.String)>("reconstructed : ");

        $r21 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[],int)>(r13, 4);

        $r22 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

        return 0;

     label8:
        $i24 = (int) -1;

        i19 = i19 + $i24;

        $i26 = (int) -1;

        i20 = i20 + $i26;

     label9:
        if i19 >= $i6 goto label7;

        return 1;
    }

    private boolean isSmallBox()
    {
        long $l0, $l1, $l2, $l6, $l8, $l9, $l10, $l11, $l12;
        java.nio.ByteBuffer $r3, $r4, $r5;
        com.googlecode.mp4parser.AbstractBox r0;
        byte $b3, $b7, $b13, b14, b16, b17, b18;
        int $i4, $i5, $i15, $i19, $i20, $i21;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        b14 = 8;

        b18 = 8;

        b17 = 8;

        b16 = 8;

        $r1 = "uuid";

        $r2 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        b14 = 24;

        b18 = 24;

        b17 = 24;

        b16 = 24;

     label1:
        $z1 = r0.<com.googlecode.mp4parser.AbstractBox: boolean isRead>;

        if $z1 == 0 goto label7;

        $z2 = r0.<com.googlecode.mp4parser.AbstractBox: boolean isParsed>;

        if $z2 == 0 goto label5;

        $l8 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: long getContentSize()>();

        $r4 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        if $r4 == null goto label2;

        $r5 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer deadBytes>;

        $i15 = virtualinvoke $r5.<java.nio.ByteBuffer: int limit()>();

        goto label3;

     label2:
        $i15 = 0;

     label3:
        $l9 = (long) $i15;

        $l11 = $l8 + $l9;

        $l10 = (long) b17;

        $l12 = $l11 + $l10;

        $b13 = $l12 cmp 4294967296L;

        $i19 = (int) $b13;

        if $i19 >= 0 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        $r3 = r0.<com.googlecode.mp4parser.AbstractBox: java.nio.ByteBuffer content>;

        $i4 = virtualinvoke $r3.<java.nio.ByteBuffer: int limit()>();

        $i5 = $i4 + b18;

        $l6 = (long) $i5;

        $b7 = $l6 cmp 4294967296L;

        $i20 = (int) $b7;

        if $i20 >= 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        $l1 = r0.<com.googlecode.mp4parser.AbstractBox: long memMapSize>;

        $l0 = (long) b16;

        $l2 = $l1 + $l0;

        $b3 = $l2 cmp 4294967296L;

        $i21 = (int) $b3;

        if $i21 >= 0 goto label8;

        return 1;

     label8:
        return 0;
    }

    private void getHeader(java.nio.ByteBuffer)
    {
        byte[] $r3, $r6, $r8;
        long $l0, $l1;
        java.nio.ByteBuffer r1;
        com.googlecode.mp4parser.AbstractBox r0;
        java.lang.String $r2, $r4, $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        $z0 = specialinvoke r0.<com.googlecode.mp4parser.AbstractBox: boolean isSmallBox()>();

        if $z0 == 0 goto label1;

        $l1 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: long getSize()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l1);

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $r8 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r7);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r8);

        goto label2;

     label1:
        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, 1L);

        $r2 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $r3 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r3);

        $l0 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: long getSize()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>(r1, $l0);

     label2:
        $r4 = "uuid";

        $r5 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractBox: byte[] getUserType()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r6);

     label3:
        return;
    }

    public java.lang.String getPath()
    {
        java.lang.String $r1;
        com.googlecode.mp4parser.AbstractBox r0;

        r0 := @this: com.googlecode.mp4parser.AbstractBox;

        $r1 = staticinvoke <com.googlecode.mp4parser.util.Path: java.lang.String createPath(com.coremedia.iso.boxes.Box)>(r0);

        return $r1;
    }
}
