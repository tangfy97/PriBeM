public class org.apache.batik.bridge.svg12.SVG12TextElementBridge extends org.apache.batik.bridge.SVGTextElementBridge implements org.apache.batik.bridge.svg12.SVG12BridgeUpdateHandler
{

    public void <init>()
    {
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.SVGTextElementBridge: void <init>()>();

        return;
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.svg12.SVG12TextElementBridge $r0, r1;

        r1 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        $r0 = new org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        specialinvoke $r0.<org.apache.batik.bridge.svg12.SVG12TextElementBridge: void <init>()>();

        return $r0;
    }

    protected void addTextEventListeners(org.apache.batik.bridge.BridgeContext, org.apache.batik.dom.events.NodeEventTarget)
    {
        org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener $r2, $r8, $r9;
        org.apache.batik.dom.events.EventSupport $r5;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r0;
        org.apache.batik.bridge.BridgeContext r3;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge$DOMChildNodeRemovedEventListener $r14;
        org.apache.batik.bridge.svg12.SVG12BridgeContext $r11;
        org.apache.batik.dom.events.NodeEventTarget r4;
        org.apache.batik.dom.svg12.XBLEventSupport $r13;
        org.apache.batik.dom.AbstractNode $r12;
        org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener $r1, $r6, $r7;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge$DOMSubtreeModifiedEventListener $r10;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        r3 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r4 := @parameter1: org.apache.batik.dom.events.NodeEventTarget;

        $r1 = r0.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener childNodeRemovedEventListener>;

        if $r1 != null goto label1;

        $r14 = new org.apache.batik.bridge.svg12.SVG12TextElementBridge$DOMChildNodeRemovedEventListener;

        specialinvoke $r14.<org.apache.batik.bridge.svg12.SVG12TextElementBridge$DOMChildNodeRemovedEventListener: void <init>(org.apache.batik.bridge.svg12.SVG12TextElementBridge)>(r0);

        r0.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener childNodeRemovedEventListener> = $r14;

     label1:
        $r2 = r0.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener subtreeModifiedEventListener>;

        if $r2 != null goto label2;

        $r10 = new org.apache.batik.bridge.svg12.SVG12TextElementBridge$DOMSubtreeModifiedEventListener;

        specialinvoke $r10.<org.apache.batik.bridge.svg12.SVG12TextElementBridge$DOMSubtreeModifiedEventListener: void <init>(org.apache.batik.bridge.svg12.SVG12TextElementBridge)>(r0);

        r0.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener subtreeModifiedEventListener> = $r10;

     label2:
        $r11 = (org.apache.batik.bridge.svg12.SVG12BridgeContext) r3;

        $r12 = (org.apache.batik.dom.AbstractNode) r4;

        $r5 = virtualinvoke $r12.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.events.EventSupport initializeEventSupport()>();

        $r13 = (org.apache.batik.dom.svg12.XBLEventSupport) $r5;

        $r6 = r0.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener childNodeRemovedEventListener>;

        virtualinvoke $r13.<org.apache.batik.dom.svg12.XBLEventSupport: void addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r6, 1);

        $r7 = r0.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener childNodeRemovedEventListener>;

        virtualinvoke $r11.<org.apache.batik.bridge.svg12.SVG12BridgeContext: void storeImplementationEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r4, "http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r7, 1);

        $r8 = r0.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener subtreeModifiedEventListener>;

        virtualinvoke $r13.<org.apache.batik.dom.svg12.XBLEventSupport: void addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMSubtreeModified", $r8, 0);

        $r9 = r0.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener subtreeModifiedEventListener>;

        virtualinvoke $r11.<org.apache.batik.bridge.svg12.SVG12BridgeContext: void storeImplementationEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r4, "http://www.w3.org/2001/xml-events", "DOMSubtreeModified", $r9, 0);

        return;
    }

    protected void removeTextEventListeners(org.apache.batik.bridge.BridgeContext, org.apache.batik.dom.events.NodeEventTarget)
    {
        org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener $r6;
        org.apache.batik.dom.events.EventSupport $r2;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r4;
        org.apache.batik.bridge.BridgeContext r7;
        org.apache.batik.dom.events.NodeEventTarget r0;
        org.apache.batik.dom.svg12.XBLEventSupport r3;
        org.apache.batik.dom.AbstractNode r1;
        org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener $r5;

        r4 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        r7 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.apache.batik.dom.events.NodeEventTarget;

        r1 = (org.apache.batik.dom.AbstractNode) r0;

        $r2 = virtualinvoke r1.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.events.EventSupport initializeEventSupport()>();

        r3 = (org.apache.batik.dom.svg12.XBLEventSupport) $r2;

        $r5 = r4.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener childNodeRemovedEventListener>;

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void removeImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r5, 1);

        $r6 = r4.<org.apache.batik.bridge.SVGTextElementBridge: org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener subtreeModifiedEventListener>;

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void removeImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMSubtreeModified", $r6, 0);

        return;
    }

    protected org.w3c.dom.Node getFirstChild(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r2;
        org.apache.batik.dom.xbl.NodeXBL $r1;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r3;

        r3 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = (org.apache.batik.dom.xbl.NodeXBL) r0;

        $r2 = interfaceinvoke $r1.<org.apache.batik.dom.xbl.NodeXBL: org.w3c.dom.Node getXblFirstChild()>();

        return $r2;
    }

    protected org.w3c.dom.Node getNextSibling(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r2;
        org.apache.batik.dom.xbl.NodeXBL $r1;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r3;

        r3 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = (org.apache.batik.dom.xbl.NodeXBL) r0;

        $r2 = interfaceinvoke $r1.<org.apache.batik.dom.xbl.NodeXBL: org.w3c.dom.Node getXblNextSibling()>();

        return $r2;
    }

    protected org.w3c.dom.Node getParentNode(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r2;
        org.apache.batik.dom.xbl.NodeXBL $r1;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r3;

        r3 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = (org.apache.batik.dom.xbl.NodeXBL) r0;

        $r2 = interfaceinvoke $r1.<org.apache.batik.dom.xbl.NodeXBL: org.w3c.dom.Node getXblParentNode()>();

        return $r2;
    }

    public void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.gvt.GraphicsNode $r6;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r3;
        org.apache.batik.bridge.BridgeContext $r8;
        org.w3c.dom.Element $r7;
        org.w3c.dom.events.EventTarget $r1;
        org.w3c.dom.Node r2, $r4, $r5;
        org.w3c.dom.events.MutationEvent r0;
        boolean $z0;

        r3 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        r0 := @parameter0: org.w3c.dom.events.MutationEvent;

        $r1 = interfaceinvoke r0.<org.w3c.dom.events.Event: org.w3c.dom.events.EventTarget getTarget()>();

        r2 = (org.w3c.dom.Node) $r1;

        $z0 = virtualinvoke r3.<org.apache.batik.bridge.SVGTextElementBridge: boolean isParentDisplayed(org.w3c.dom.Node)>(r2);

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r3.<org.apache.batik.bridge.svg12.SVG12TextElementBridge: org.w3c.dom.Node getParentNode(org.w3c.dom.Node)>(r2);

        $r5 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r4 == $r5 goto label1;

        $r8 = r3.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r7 = r3.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r6 = r3.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        virtualinvoke r3.<org.apache.batik.bridge.SVGTextElementBridge: void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>($r8, $r7, $r6);

        goto label2;

     label1:
        r3.<org.apache.batik.bridge.SVGTextElementBridge: java.text.AttributedString laidoutText> = null;

     label2:
        return;
    }

    public void handleBindingEvent(org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r0;
        org.w3c.dom.Element r1, r2;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.w3c.dom.Element;

        return;
    }

    public void handleContentSelectionChangedEvent(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)
    {
        org.w3c.dom.Element $r2;
        org.apache.batik.gvt.GraphicsNode $r1;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge r0;
        org.apache.batik.bridge.BridgeContext $r3;
        org.apache.batik.bridge.svg12.ContentSelectionChangedEvent r4;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        r4 := @parameter0: org.apache.batik.bridge.svg12.ContentSelectionChangedEvent;

        $r3 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r1 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        virtualinvoke r0.<org.apache.batik.bridge.SVGTextElementBridge: void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>($r3, $r2, $r1);

        return;
    }
}
