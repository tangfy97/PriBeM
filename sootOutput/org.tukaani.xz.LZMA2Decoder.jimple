class org.tukaani.xz.LZMA2Decoder extends org.tukaani.xz.LZMA2Coder implements org.tukaani.xz.FilterDecoder
{
    private int dictSize;

    void <init>(byte[]) throws org.tukaani.xz.UnsupportedOptionsException
    {
        byte[] r1;
        short $s2, $s11;
        byte $b1, $b3, $b4, $b5, $b6;
        int $i0, $i7, $i8, $i9, $i10, $i12, $i13;
        org.tukaani.xz.LZMA2Decoder r0;
        org.tukaani.xz.UnsupportedOptionsException $r3;

        r0 := @this: org.tukaani.xz.LZMA2Decoder;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.tukaani.xz.LZMA2Coder: void <init>()>();

        $i0 = lengthof r1;

        if $i0 != 1 goto label1;

        $b1 = r1[0];

        $s11 = (short) $b1;

        $s2 = $s11 & 255;

        $i12 = (int) $s2;

        if $i12 <= 37 goto label2;

     label1:
        $r3 = new org.tukaani.xz.UnsupportedOptionsException;

        specialinvoke $r3.<org.tukaani.xz.UnsupportedOptionsException: void <init>(java.lang.String)>("Unsupported LZMA2 properties");

        throw $r3;

     label2:
        $b3 = r1[0];

        $b4 = $b3 & 1;

        $b5 = 2 | $b4;

        r0.<org.tukaani.xz.LZMA2Decoder: int dictSize> = $b5;

        $i9 = r0.<org.tukaani.xz.LZMA2Decoder: int dictSize>;

        $b6 = r1[0];

        $i13 = (int) $b6;

        $i7 = $i13 >>> 1;

        $i8 = $i7 + 11;

        $i10 = $i9 << $i8;

        r0.<org.tukaani.xz.LZMA2Decoder: int dictSize> = $i10;

        return;
    }

    public int getMemoryUsage()
    {
        int $i0, $i1;
        org.tukaani.xz.LZMA2Decoder r0;

        r0 := @this: org.tukaani.xz.LZMA2Decoder;

        $i0 = r0.<org.tukaani.xz.LZMA2Decoder: int dictSize>;

        $i1 = staticinvoke <org.tukaani.xz.LZMA2InputStream: int getMemoryUsage(int)>($i0);

        return $i1;
    }

    public java.io.InputStream getInputStream(java.io.InputStream)
    {
        org.tukaani.xz.LZMA2InputStream $r0;
        int $i0;
        org.tukaani.xz.LZMA2Decoder r2;
        java.io.InputStream r1;

        r2 := @this: org.tukaani.xz.LZMA2Decoder;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.tukaani.xz.LZMA2InputStream;

        $i0 = r2.<org.tukaani.xz.LZMA2Decoder: int dictSize>;

        specialinvoke $r0.<org.tukaani.xz.LZMA2InputStream: void <init>(java.io.InputStream,int)>(r1, $i0);

        return $r0;
    }
}
