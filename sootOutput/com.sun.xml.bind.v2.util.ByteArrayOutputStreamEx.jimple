public final class com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx extends java.io.ByteArrayOutputStream
{

    public void <init>()
    {
        com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx r0;

        r0 := @this: com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx r0;
        int i0;

        r0 := @this: com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx;

        i0 := @parameter0: int;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>(int)>(i0);

        return;
    }

    public void set(com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data, java.lang.String)
    {
        com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx r1;
        byte[] $r3;
        int $i0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data r0;
        java.lang.String r2;

        r1 := @this: com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data;

        r2 := @parameter1: java.lang.String;

        $r3 = r1.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf>;

        $i0 = r1.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: int count>;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data: void set(byte[],int,java.lang.String)>($r3, $i0, r2);

        return;
    }

    public byte[] getBuffer()
    {
        com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx r0;
        byte[] $r1;

        r0 := @this: com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx;

        $r1 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf>;

        return $r1;
    }

    public void readFrom(java.io.InputStream) throws java.io.IOException
    {
        com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx r0;
        byte[] $r1, $r3, $r4, $r5, $r6, $r7, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.io.InputStream r2;

        r0 := @this: com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $i1 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: int count>;

        $r1 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label2;

        $r5 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf>;

        $i9 = lengthof $r5;

        $i10 = $i9 * 2;

        r8 = newarray (byte)[$i10];

        $r7 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf>;

        $r6 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf>;

        $i11 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r8, 0, $i11);

        r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf> = r8;

     label2:
        $r4 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf>;

        $i5 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: int count>;

        $r3 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: byte[] buf>;

        $i3 = lengthof $r3;

        $i2 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: int count>;

        $i4 = $i3 - $i2;

        $i6 = virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>($r4, $i5, $i4);

        if $i6 >= 0 goto label3;

        return;

     label3:
        $i7 = r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: int count>;

        $i8 = $i7 + $i6;

        r0.<com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx: int count> = $i8;

        goto label1;
    }
}
