public class com.jidesoft.plaf.vsnet.HeaderCellBorder extends java.lang.Object implements javax.swing.border.Border, javax.swing.plaf.UIResource
{

    public void <init>()
    {
        com.jidesoft.plaf.vsnet.HeaderCellBorder r0;

        r0 := @this: com.jidesoft.plaf.vsnet.HeaderCellBorder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r1, $r2, $r3;
        com.jidesoft.plaf.vsnet.HeaderCellBorder r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        java.awt.Component r5;
        java.awt.Graphics r0;

        r4 := @this: com.jidesoft.plaf.vsnet.HeaderCellBorder;

        r5 := @parameter0: java.awt.Component;

        r0 := @parameter1: java.awt.Graphics;

        i11 := @parameter2: int;

        i12 := @parameter3: int;

        i1 := @parameter4: int;

        i0 := @parameter5: int;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 27);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r1);

        $i3 = i0 - 3;

        $i2 = i0 - 3;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i3, i1, $i2);

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 37);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

        $i5 = i0 - 2;

        $i4 = i0 - 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i5, i1, $i4);

        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 52);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i7 = i0 - 1;

        $i6 = i0 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i7, i1, $i6);

        $i10 = i1 - 1;

        $i9 = i1 - 1;

        $i8 = i0 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i10, 0, $i9, $i8);

        return;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component)
    {
        java.awt.Insets $r0;
        java.awt.Component r2;
        com.jidesoft.plaf.vsnet.HeaderCellBorder r1;

        r1 := @this: com.jidesoft.plaf.vsnet.HeaderCellBorder;

        r2 := @parameter0: java.awt.Component;

        $r0 = new java.awt.Insets;

        specialinvoke $r0.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 3, 1);

        return $r0;
    }

    public boolean isBorderOpaque()
    {
        com.jidesoft.plaf.vsnet.HeaderCellBorder r0;

        r0 := @this: com.jidesoft.plaf.vsnet.HeaderCellBorder;

        return 0;
    }
}
