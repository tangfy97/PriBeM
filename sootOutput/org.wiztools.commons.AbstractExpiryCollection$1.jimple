class org.wiztools.commons.AbstractExpiryCollection$1 extends java.lang.Thread
{
    final long val$cleanerThreadIntervalInMilliSecond;
    final org.wiztools.commons.AbstractExpiryCollection this$0;

    void <init>(org.wiztools.commons.AbstractExpiryCollection, long)
    {
        long l0;
        org.wiztools.commons.AbstractExpiryCollection r1;
        org.wiztools.commons.AbstractExpiryCollection$1 r0;

        r0 := @this: org.wiztools.commons.AbstractExpiryCollection$1;

        r1 := @parameter0: org.wiztools.commons.AbstractExpiryCollection;

        l0 := @parameter1: long;

        r0.<org.wiztools.commons.AbstractExpiryCollection$1: org.wiztools.commons.AbstractExpiryCollection this$0> = r1;

        r0.<org.wiztools.commons.AbstractExpiryCollection$1: long val$cleanerThreadIntervalInMilliSecond> = l0;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        org.wiztools.commons.AbstractExpiryCollection$Encp r12;
        long $l0, $l1, $l2;
        org.wiztools.commons.AbstractExpiryCollection $r1, $r4, $r7, $r9;
        java.util.HashSet $r14;
        byte $b3;
        org.wiztools.commons.AbstractExpiryCollection$1 r0;
        int $i4;
        boolean $z0, $z1;
        java.util.Iterator $r6;
        java.util.Collection $r5, $r8;
        java.util.concurrent.locks.Lock $r2, $r10;
        java.lang.InterruptedException $r13;
        java.lang.Object $r11;

        r0 := @this: org.wiztools.commons.AbstractExpiryCollection$1;

     label1:
        $l0 = r0.<org.wiztools.commons.AbstractExpiryCollection$1: long val$cleanerThreadIntervalInMilliSecond>;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        return;

     label4:
        $z0 = virtualinvoke r0.<org.wiztools.commons.AbstractExpiryCollection$1: boolean isInterrupted()>();

        if $z0 == 0 goto label5;

        return;

     label5:
        $r1 = r0.<org.wiztools.commons.AbstractExpiryCollection$1: org.wiztools.commons.AbstractExpiryCollection this$0>;

        $r2 = staticinvoke <org.wiztools.commons.AbstractExpiryCollection: java.util.concurrent.locks.Lock access$000(org.wiztools.commons.AbstractExpiryCollection)>($r1);

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r14 = new java.util.HashSet;

        specialinvoke $r14.<java.util.HashSet: void <init>()>();

        $r4 = r0.<org.wiztools.commons.AbstractExpiryCollection$1: org.wiztools.commons.AbstractExpiryCollection this$0>;

        $r5 = virtualinvoke $r4.<org.wiztools.commons.AbstractExpiryCollection: java.util.Collection getData()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.wiztools.commons.AbstractExpiryCollection$Encp) $r11;

        $l2 = r12.<org.wiztools.commons.AbstractExpiryCollection$Encp: long expiryTime>;

        $b3 = $l1 cmp $l2;

        $i4 = (int) $b3;

        if $i4 <= 0 goto label7;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>(r12);

     label7:
        goto label6;

     label8:
        $r7 = r0.<org.wiztools.commons.AbstractExpiryCollection$1: org.wiztools.commons.AbstractExpiryCollection this$0>;

        $r8 = virtualinvoke $r7.<org.wiztools.commons.AbstractExpiryCollection: java.util.Collection getData()>();

        interfaceinvoke $r8.<java.util.Collection: boolean removeAll(java.util.Collection)>($r14);

        $r9 = r0.<org.wiztools.commons.AbstractExpiryCollection$1: org.wiztools.commons.AbstractExpiryCollection this$0>;

        $r10 = staticinvoke <org.wiztools.commons.AbstractExpiryCollection: java.util.concurrent.locks.Lock access$000(org.wiztools.commons.AbstractExpiryCollection)>($r9);

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
