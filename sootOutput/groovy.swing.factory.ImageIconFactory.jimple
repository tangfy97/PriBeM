public class groovy.swing.factory.ImageIconFactory extends groovy.util.AbstractFactory implements groovy.lang.GroovyObject
{
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696969;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$javax$swing$ImageIcon;
    static java.lang.Class class$java$io$File;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$java$lang$RuntimeException;

    public void <init>()
    {
        groovy.lang.MetaClass $r9, $r11;
        java.lang.Object[] $r6;
        groovy.swing.factory.ImageIconFactory r0;
        java.lang.Class $r1, r2, $r3, r4, $r5, $r12, $r13, $r14;
        java.lang.Object $r7, $r8, $r10;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        specialinvoke r0.<groovy.util.AbstractFactory: void <init>()>();

        $r1 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

        if $r1 != null goto label1;

        $r12 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

     label2:
        r2 = $r12;

        $r3 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label3;

        $r13 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r4 = $r13;

        $r5 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r5 != null goto label5;

        $r14 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r14;

        goto label6;

     label5:
        $r14 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r14, "initMetaClass", $r6);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, r4);

        $r9 = (groovy.lang.MetaClass) $r8;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, r4);

        $r11 = (groovy.lang.MetaClass) $r10;

        r0.<groovy.swing.factory.ImageIconFactory: groovy.lang.MetaClass metaClass> = $r11;

        return;
    }

    public java.lang.Object newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map)
    {
        java.util.Map r3;
        java.lang.Throwable $r27, $r39, $r62, $r71, $r80;
        java.lang.Object[] $r4, $r7, $r13, $r14, $r21, $r23, $r31, $r34, $r36, $r40, $r42, $r45, $r46, $r48, $r50, $r52, $r54, $r57, $r59, $r63, $r66, $r68, $r72, $r75, $r77, $r93;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        groovy.util.FactoryBuilderSupport r28;
        org.codehaus.groovy.runtime.GStringImpl $r22, $r35, $r58, $r67, $r76;
        groovy.swing.factory.ImageIconFactory r81;
        java.lang.String[] $r25, $r37, $r60, $r69, $r78;
        java.lang.Boolean $r89, $r91;
        java.lang.Class $r0, r1, $r2, $r6, $r9, $r12, $r17, $r20, $r33, $r41, $r56, $r65, $r74, $r83, $r84, $r85, $r86, $r87, $r90, $r95, $r96, $r97, $r98, $r99, $r100;
        java.lang.Object $r5, $r8, $r10, $r11, $r15, $r16, $r18, $r19, r24, $r26, $r29, r30, $r32, $r38, $r43, $r44, $r47, $r49, $r51, $r53, $r55, $r61, $r64, $r70, $r73, $r79, r82, r88, r92, $r94;

        r81 := @this: groovy.swing.factory.ImageIconFactory;

        r28 := @parameter0: groovy.util.FactoryBuilderSupport;

        r24 := @parameter1: java.lang.Object;

        r82 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.util.Map;

        $r0 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r83 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0> = $r83;

        goto label02;

     label01:
        $r83 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

     label02:
        r1 = $r83;

        $r2 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r84 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass> = $r84;

        goto label04;

     label03:
        $r84 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r82, null);

        if $z0 == 0 goto label24;

        $r48 = newarray (java.lang.Object)[1];

        $r48[0] = "image";

        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "containsKey", $r48);

        $z10 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r49);

        if $z10 == 0 goto label10;

        $r72 = newarray (java.lang.Object)[1];

        $r72[0] = "image";

        $r73 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r72);

        r82 = $r73;

        $z16 = $r73 instanceof java.awt.Image;

        if $z16 != 0 goto label05;

        $z17 = 1;

        goto label06;

     label05:
        $z17 = 0;

     label06:
        if $z17 == 0 goto label09;

        $r74 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r74 != null goto label07;

        $r85 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException> = $r85;

        goto label08;

     label07:
        $r85 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

     label08:
        $r75 = newarray (java.lang.Object)[1];

        $r76 = new org.codehaus.groovy.runtime.GStringImpl;

        $r77 = newarray (java.lang.Object)[1];

        $r77[0] = r24;

        $r78 = newarray (java.lang.String)[2];

        $r78[0] = "In ";

        $r78[1] = " image: attributes must be of type java.awt.Image";

        specialinvoke $r76.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r77, $r78);

        $r75[0] = $r76;

        $r79 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r85, $r75);

        $r80 = (java.lang.Throwable) $r79;

        throw $r80;

     label09:
        goto label23;

     label10:
        $r50 = newarray (java.lang.Object)[1];

        $r50[0] = "url";

        $r51 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "containsKey", $r50);

        $z11 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r51);

        if $z11 == 0 goto label16;

        $r63 = newarray (java.lang.Object)[1];

        $r63[0] = "url";

        $r64 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r63);

        r82 = $r64;

        $z15 = $r64 instanceof java.net.URL;

        if $z15 != 0 goto label11;

        $z18 = 1;

        goto label12;

     label11:
        $z18 = 0;

     label12:
        if $z18 == 0 goto label15;

        $r65 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r65 != null goto label13;

        $r86 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException> = $r86;

        goto label14;

     label13:
        $r86 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

     label14:
        $r66 = newarray (java.lang.Object)[1];

        $r67 = new org.codehaus.groovy.runtime.GStringImpl;

        $r68 = newarray (java.lang.Object)[1];

        $r68[0] = r24;

        $r69 = newarray (java.lang.String)[2];

        $r69[0] = "In ";

        $r69[1] = " url: attributes must be of type java.net.URL";

        specialinvoke $r67.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r68, $r69);

        $r66[0] = $r67;

        $r70 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r86, $r66);

        $r71 = (java.lang.Throwable) $r70;

        throw $r71;

     label15:
        goto label23;

     label16:
        $r52 = newarray (java.lang.Object)[1];

        $r52[0] = "file";

        $r53 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "containsKey", $r52);

        $z12 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r53);

        if $z12 == 0 goto label23;

        $r54 = newarray (java.lang.Object)[1];

        $r54[0] = "file";

        $r55 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r54);

        r82 = $r55;

        $z13 = $r55 instanceof java.io.File;

        if $z13 == 0 goto label17;

        r82 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r55, "toURL");

        goto label22;

     label17:
        $z14 = $r55 instanceof java.lang.String;

        if $z14 != 0 goto label18;

        $z19 = 1;

        goto label19;

     label18:
        $z19 = 0;

     label19:
        if $z19 == 0 goto label22;

        $r56 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r56 != null goto label20;

        $r87 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException> = $r87;

        goto label21;

     label20:
        $r87 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

     label21:
        $r57 = newarray (java.lang.Object)[1];

        $r58 = new org.codehaus.groovy.runtime.GStringImpl;

        $r59 = newarray (java.lang.Object)[1];

        $r59[0] = r24;

        $r60 = newarray (java.lang.String)[2];

        $r60[0] = "In ";

        $r60[1] = " file: attributes must be of type java.io.File or a string";

        specialinvoke $r58.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r59, $r60);

        $r57[0] = $r58;

        $r61 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r87, $r57);

        $r62 = (java.lang.Throwable) $r61;

        throw $r62;

     label22:
        goto label23;

     label23:
        goto label24;

     label24:
        r88 = null;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r82, null);

        if $z1 == 0 goto label25;

        $r46 = newarray (java.lang.Object)[1];

        $r46[0] = "resource";

        $r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "containsKey", $r46);

        $z9 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r47);

        if $z9 == 0 goto label25;

        $r89 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label26;

     label25:
        $r89 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label26:
        $z20 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r89);

        if $z20 == 0 goto label27;

        $r45 = newarray (java.lang.Object)[1];

        $r45[0] = "resource";

        r88 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r45);

        goto label34;

     label27:
        $z2 = r82 instanceof java.lang.String;

        if $z2 == 0 goto label32;

        $r41 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$io$File>;

        if $r41 != null goto label28;

        $r90 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("java.io.File");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$io$File> = $r90;

        goto label29;

     label28:
        $r90 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$io$File>;

     label29:
        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = r82;

        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r90, $r42);

        $r44 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r43, "exists");

        $z8 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r44);

        if $z8 != 0 goto label30;

        $z21 = 1;

        goto label31;

     label30:
        $z21 = 0;

     label31:
        if $z21 == 0 goto label32;

        $r91 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label33;

     label32:
        $r91 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label33:
        $z22 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r91);

        if $z22 == 0 goto label34;

        r88 = r82;

        goto label34;

     label34:
        $z23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r88, null);

        if $z23 == 0 goto label43;

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r28, "context");

        r92 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r29, "owner");

        r30 = r82;

        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = "class";

        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "containsKey", $r31);

        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r32);

        if $z5 == 0 goto label35;

        $r40 = newarray (java.lang.Object)[1];

        $r40[0] = "class";

        r92 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r40);

        goto label35;

     label35:
        $z6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r92, null);

        if $z6 == 0 goto label36;

        r92 = r1;

        goto label39;

     label36:
        $z7 = r92 instanceof java.lang.Class;

        if $z7 != 0 goto label37;

        $z24 = 1;

        goto label38;

     label37:
        $z24 = 0;

     label38:
        if $z24 == 0 goto label39;

        r92 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r92, "class");

        goto label39;

     label39:
        $r93 = newarray (java.lang.Object)[1];

        $r93[0] = r88;

        $r94 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r92, "getResource", $r93);

        r82 = $r94;

        $z25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r94, null);

        if $z25 == 0 goto label42;

        $r33 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r33 != null goto label40;

        $r95 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException> = $r95;

        goto label41;

     label40:
        $r95 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

     label41:
        $r34 = newarray (java.lang.Object)[1];

        $r35 = new org.codehaus.groovy.runtime.GStringImpl;

        $r36 = newarray (java.lang.Object)[2];

        $r36[0] = r24;

        $r36[1] = r30;

        $r37 = newarray (java.lang.String)[3];

        $r37[0] = "In ";

        $r37[1] = " the value argument \'";

        $r37[2] = "\' does not refer to a file or a class resource";

        specialinvoke $r35.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r36, $r37);

        $r34[0] = $r35;

        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r95, $r34);

        $r39 = (java.lang.Throwable) $r38;

        throw $r39;

     label42:
        goto label43;

     label43:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r82, null);

        if $z3 == 0 goto label46;

        $r20 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r20 != null goto label44;

        $r96 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException> = $r96;

        goto label45;

     label44:
        $r96 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$RuntimeException>;

     label45:
        $r21 = newarray (java.lang.Object)[1];

        $r22 = new org.codehaus.groovy.runtime.GStringImpl;

        $r23 = newarray (java.lang.Object)[1];

        $r23[0] = r24;

        $r25 = newarray (java.lang.String)[2];

        $r25[0] = "";

        $r25[1] = " has neither a value argument or one of image:, url:, file:, or resource:";

        specialinvoke $r22.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r23, $r25);

        $r21[0] = $r22;

        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r96, $r21);

        $r27 = (java.lang.Throwable) $r26;

        throw $r27;

     label46:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "description";

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "containsKey", $r4);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z4 == 0 goto label51;

        $r12 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$javax$swing$ImageIcon>;

        if $r12 != null goto label47;

        $r97 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("javax.swing.ImageIcon");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$javax$swing$ImageIcon> = $r97;

        goto label48;

     label47:
        $r97 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$javax$swing$ImageIcon>;

     label48:
        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r82;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = "description";

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r14);

        $r13[1] = $r15;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r97, $r13);

        $r17 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$Object>;

        if $r17 != null goto label49;

        $r98 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$Object> = $r98;

        goto label50;

     label49:
        $r98 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$Object>;

     label50:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r16, $r98);

        $r19 = (java.lang.Object) $r18;

        return $r19;

     label51:
        $r6 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$javax$swing$ImageIcon>;

        if $r6 != null goto label52;

        $r99 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("javax.swing.ImageIcon");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$javax$swing$ImageIcon> = $r99;

        goto label53;

     label52:
        $r99 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$javax$swing$ImageIcon>;

     label53:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r82;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r99, $r7);

        $r9 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$Object>;

        if $r9 != null goto label54;

        $r100 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$Object> = $r100;

        goto label55;

     label54:
        $r100 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$java$lang$Object>;

     label55:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r100);

        $r11 = (java.lang.Object) $r10;

        return $r11;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        java.lang.Object[] $r10;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        groovy.swing.factory.ImageIconFactory r4;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;

        r4 := @this: groovy.swing.factory.ImageIconFactory;

        $r0 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<groovy.swing.factory.ImageIconFactory: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<groovy.swing.factory.ImageIconFactory: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<groovy.swing.factory.ImageIconFactory: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r3;
        java.lang.Class $r0, $r1, $r4, $r5;
        groovy.swing.factory.ImageIconFactory r2;

        r2 := @this: groovy.swing.factory.ImageIconFactory;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<groovy.swing.factory.ImageIconFactory: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.ImageIconFactory r2;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r5, $r6;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.ImageIconFactory;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.ImageIconFactory: groovy.lang.MetaClass getMetaClass()>();

        $r6 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return $r6;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.ImageIconFactory r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.ImageIconFactory;

        r4 := @parameter0: java.lang.String;

        $r0 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.ImageIconFactory: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.ImageIconFactory r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.ImageIconFactory;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.ImageIconFactory: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.ImageIconFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.ImageIconFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119696969L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.factory.ImageIconFactory: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.factory.ImageIconFactory: java.lang.Long __timeStamp__239_neverHappen1239119696969> = $r5;

        return;
    }

    void super$1$wait()
    {
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    boolean super$2$isLeaf()
    {
        groovy.swing.factory.ImageIconFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean isLeaf()>();

        return $z0;
    }

    void super$2$setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void onNodeCompleted(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    void super$1$notifyAll()
    {
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$2$setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    boolean super$2$onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.util.Map r3;
        java.lang.Object r2;
        groovy.swing.factory.ImageIconFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport,java.lang.Object,java.util.Map)>(r1, r2, r3);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.swing.factory.ImageIconFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.factory.ImageIconFactory r0;

        r0 := @this: groovy.swing.factory.ImageIconFactory;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
