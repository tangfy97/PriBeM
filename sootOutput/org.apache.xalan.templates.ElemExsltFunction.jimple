public class org.apache.xalan.templates.ElemExsltFunction extends org.apache.xalan.templates.ElemTemplate
{

    public void <init>()
    {
        org.apache.xalan.templates.ElemExsltFunction r0;

        r0 := @this: org.apache.xalan.templates.ElemExsltFunction;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplate: void <init>()>();

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemExsltFunction r0;

        r0 := @this: org.apache.xalan.templates.ElemExsltFunction;

        return 88;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemExsltFunction r0;

        r0 := @this: org.apache.xalan.templates.ElemExsltFunction;

        return "function";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl, org.apache.xpath.objects.XObject[]) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.TransformerException $r12;
        org.apache.xpath.objects.XObject[] r4;
        org.apache.xalan.trace.TraceManager $r5, $r6;
        org.apache.xpath.VariableStack $r2;
        org.apache.xpath.XPathContext $r1;
        org.w3c.dom.Node $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10;
        boolean $z0, $z1, $z2;
        org.w3c.dom.NodeList $r7;
        org.apache.xalan.templates.ElemExsltFunction r3;
        org.apache.xalan.templates.ElemParam r10;
        org.apache.xpath.objects.XObject $r11;
        org.apache.xalan.transformer.TransformerImpl r0;

        r3 := @this: org.apache.xalan.templates.ElemExsltFunction;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r4 := @parameter1: org.apache.xpath.objects.XObject[];

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $i0 = virtualinvoke $r2.<org.apache.xpath.VariableStack: int getStackFrame()>();

        $i1 = r3.<org.apache.xalan.templates.ElemTemplate: int m_frameSize>;

        $i2 = virtualinvoke $r2.<org.apache.xpath.VariableStack: int link(int)>($i1);

        $i4 = r3.<org.apache.xalan.templates.ElemTemplate: int m_inArgsSize>;

        $i3 = lengthof r4;

        if $i4 >= $i3 goto label1;

        $r12 = new javax.xml.transform.TransformerException;

        specialinvoke $r12.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>("function called with too many args");

        throw $r12;

     label1:
        $i5 = r3.<org.apache.xalan.templates.ElemTemplate: int m_inArgsSize>;

        if $i5 <= 0 goto label5;

        $i6 = r3.<org.apache.xalan.templates.ElemTemplate: int m_inArgsSize>;

        virtualinvoke $r2.<org.apache.xpath.VariableStack: void clearLocalSlots(int,int)>(0, $i6);

        $i7 = lengthof r4;

        if $i7 <= 0 goto label5;

        virtualinvoke $r2.<org.apache.xpath.VariableStack: void setStackFrame(int)>($i0);

        $r7 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.NodeList getChildNodes()>();

        i9 = 0;

        goto label4;

     label2:
        interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i9);

        $r8 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i9);

        $z1 = $r8 instanceof org.apache.xalan.templates.ElemParam;

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i9);

        r10 = (org.apache.xalan.templates.ElemParam) $r9;

        $i8 = virtualinvoke r10.<org.apache.xalan.templates.ElemVariable: int getIndex()>();

        $r11 = r4[i9];

        virtualinvoke $r2.<org.apache.xpath.VariableStack: void setLocalVariable(int,org.apache.xpath.objects.XObject,int)>($i8, $r11, $i2);

     label3:
        i9 = i9 + 1;

     label4:
        $i10 = lengthof r4;

        if i9 < $i10 goto label2;

        virtualinvoke $r2.<org.apache.xpath.VariableStack: void setStackFrame(int)>($i2);

     label5:
        $z2 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z2 == 0 goto label6;

        $r6 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r6.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label6:
        virtualinvoke $r2.<org.apache.xpath.VariableStack: void setStackFrame(int)>($i2);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r3, 1);

        virtualinvoke $r2.<org.apache.xpath.VariableStack: void unlink(int)>($i0);

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label7;

        $r5 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r5.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label7:
        return;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.QName $r2;
        java.lang.Object[] $r4, $r7;
        org.apache.xalan.extensions.ExtensionNamespaceSupport $r5, $r8;
        org.apache.xalan.extensions.ExtensionNamespacesManager $r6, $r9;
        org.apache.xalan.templates.ElemExsltFunction r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemExsltFunction;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplate: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplate: org.apache.xml.utils.QName getName()>();

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.QName: java.lang.String getNamespace()>();

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r3;

        $r4[1] = r1;

        $r5 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        specialinvoke $r5.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>($r3, "org.apache.xalan.extensions.ExtensionHandlerExsltFunction", $r4);

        $r6 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.extensions.ExtensionNamespacesManager getExtensionNamespacesManager()>();

        virtualinvoke $r6.<org.apache.xalan.extensions.ExtensionNamespacesManager: void registerExtension(org.apache.xalan.extensions.ExtensionNamespaceSupport)>($r5);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("http://exslt.org/functions");

        if $z0 != 0 goto label1;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "http://exslt.org/functions";

        $r7[1] = r1;

        $r8 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        specialinvoke $r8.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://exslt.org/functions", "org.apache.xalan.extensions.ExtensionHandlerExsltFunction", $r7);

        $r9 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.extensions.ExtensionNamespacesManager getExtensionNamespacesManager()>();

        virtualinvoke $r9.<org.apache.xalan.extensions.ExtensionNamespacesManager: void registerExtension(org.apache.xalan.extensions.ExtensionNamespaceSupport)>($r8);

     label1:
        return;
    }
}
