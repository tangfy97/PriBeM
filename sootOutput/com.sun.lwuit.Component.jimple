public class com.sun.lwuit.Component extends java.lang.Object implements com.sun.lwuit.animations.Animation, com.sun.lwuit.events.StyleListener
{
    private java.lang.String selectText;
    private com.sun.lwuit.Component nextFocusDown;
    private com.sun.lwuit.Component nextFocusUp;
    private boolean enabled;
    private com.sun.lwuit.Component nextFocusRight;
    private com.sun.lwuit.Component nextFocusLeft;
    private boolean tensileDragEnabled;
    private boolean tactileTouch;
    public static final int BRB_CONSTANT_ASCENT;
    public static final int BRB_CONSTANT_DESCENT;
    public static final int BRB_CENTER_OFFSET;
    public static final int BRB_OTHER;
    private boolean visible;
    private boolean cellRenderer;
    private com.sun.lwuit.geom.Rectangle bounds;
    private java.lang.ref.WeakReference painterBounds;
    private int scrollX;
    private int scrollY;
    private boolean sizeRequestedByUser;
    private com.sun.lwuit.geom.Dimension preferredSize;
    private boolean scrollSizeRequestedByUser;
    private com.sun.lwuit.geom.Dimension scrollSize;
    private com.sun.lwuit.plaf.Style unSelectedStyle;
    private com.sun.lwuit.plaf.Style selectedStyle;
    private com.sun.lwuit.Container parent;
    private boolean focused;
    private boolean focusPainted;
    private com.sun.lwuit.util.EventDispatcher focusListeners;
    private boolean handlesInput;
    boolean shouldCalcPreferredSize;
    boolean shouldCalcScrollSize;
    private boolean focusable;
    private boolean isScrollVisible;
    private boolean smoothScrolling;
    private int animationSpeed;
    private com.sun.lwuit.animations.Motion animationMotion;
    private com.sun.lwuit.animations.Motion draggedMotion;
    private int initialPressX;
    private int initialPressY;
    private boolean dragActivated;
    private int initialScrollY;
    private int destScrollY;
    private int lastScrollY;
    private int lastScrollX;
    private boolean initialized;
    public static final int CENTER;
    public static final int TOP;
    public static final int LEFT;
    public static final int BOTTOM;
    public static final int RIGHT;
    private java.util.Hashtable clientProperties;
    private com.sun.lwuit.geom.Rectangle dirtyRegion;
    private java.lang.Object dirtyRegionLock;
    private com.sun.lwuit.Label componentLabel;
    private java.lang.String id;
    private boolean rtl;

    protected void <init>()
    {
        com.sun.lwuit.geom.Rectangle $r10;
        com.sun.lwuit.plaf.UIManager $r1, $r7;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r9;
        com.sun.lwuit.plaf.LookAndFeel $r8;
        int $i0, $i2, $i4;
        java.lang.Object $r12;
        java.lang.String $r2;
        com.sun.lwuit.util.EventDispatcher $r11;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Component;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.UIManager: java.lang.String localize(java.lang.String,java.lang.String)>("select", "Select");

        r0.<com.sun.lwuit.Component: java.lang.String selectText> = $r2;

        r0.<com.sun.lwuit.Component: boolean enabled> = 1;

        r0.<com.sun.lwuit.Component: boolean tensileDragEnabled> = 1;

        r0.<com.sun.lwuit.Component: boolean visible> = 1;

        $r10 = new com.sun.lwuit.geom.Rectangle;

        $r9 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r9.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(0, 0);

        specialinvoke $r10.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,com.sun.lwuit.geom.Dimension)>(0, 0, $r9);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds> = $r10;

        r0.<com.sun.lwuit.Component: boolean sizeRequestedByUser> = 0;

        r0.<com.sun.lwuit.Component: boolean scrollSizeRequestedByUser> = 0;

        r0.<com.sun.lwuit.Component: boolean focused> = 0;

        r0.<com.sun.lwuit.Component: boolean focusPainted> = 1;

        $r11 = new com.sun.lwuit.util.EventDispatcher;

        specialinvoke $r11.<com.sun.lwuit.util.EventDispatcher: void <init>()>();

        r0.<com.sun.lwuit.Component: com.sun.lwuit.util.EventDispatcher focusListeners> = $r11;

        r0.<com.sun.lwuit.Component: boolean handlesInput> = 0;

        r0.<com.sun.lwuit.Component: boolean shouldCalcPreferredSize> = 1;

        r0.<com.sun.lwuit.Component: boolean shouldCalcScrollSize> = 1;

        r0.<com.sun.lwuit.Component: boolean focusable> = 1;

        r0.<com.sun.lwuit.Component: boolean isScrollVisible> = 1;

        $i2 = (int) -1;

        r0.<com.sun.lwuit.Component: int initialScrollY> = $i2;

        $i4 = (int) -1;

        r0.<com.sun.lwuit.Component: int destScrollY> = $i4;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion> = null;

        $r12 = new java.lang.Object;

        specialinvoke $r12.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.Component: java.lang.Object dirtyRegionLock> = $r12;

        $r7 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $i0 = virtualinvoke $r8.<com.sun.lwuit.plaf.LookAndFeel: int getDefaultSmoothScrollingSpeed()>();

        r0.<com.sun.lwuit.Component: int animationSpeed> = $i0;

        $z0 = virtualinvoke $r8.<com.sun.lwuit.plaf.LookAndFeel: boolean isRTL()>();

        r0.<com.sun.lwuit.Component: boolean rtl> = $z0;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isFocusable()>();

        r0.<com.sun.lwuit.Component: boolean tactileTouch> = $z1;

        $z2 = virtualinvoke $r8.<com.sun.lwuit.plaf.LookAndFeel: boolean isDefaultTensileDrag()>();

        r0.<com.sun.lwuit.Component: boolean tensileDragEnabled> = $z2;

        return;
    }

    private void initStyle()
    {
        com.sun.lwuit.plaf.UIManager $r1;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r3, $r4, $r5, $r6, $r9;
        com.sun.lwuit.Component$BGPainter $r8;
        java.lang.String $r2;
        com.sun.lwuit.Painter $r7;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: java.lang.String getUIID()>();

        $r3 = virtualinvoke $r1.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.Style getComponentStyle(java.lang.String)>($r2);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle> = $r3;

        $r4 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        if $r4 == null goto label1;

        $r5 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        virtualinvoke $r5.<com.sun.lwuit.plaf.Style: void addStyleListener(com.sun.lwuit.events.StyleListener)>(r0);

        $r6 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        $r7 = virtualinvoke $r6.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        if $r7 != null goto label1;

        $r9 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        $r8 = new com.sun.lwuit.Component$BGPainter;

        specialinvoke $r8.<com.sun.lwuit.Component$BGPainter: void <init>(com.sun.lwuit.Component)>(r0);

        virtualinvoke $r9.<com.sun.lwuit.plaf.Style: void setBgPainter(com.sun.lwuit.Painter)>($r8);

     label1:
        return;
    }

    public int getX()
    {
        com.sun.lwuit.Component r0;
        int $i0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: int getX()>();

        return $i0;
    }

    public int getY()
    {
        com.sun.lwuit.Component r0;
        int $i0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: int getY()>();

        return $i0;
    }

    public boolean isVisible()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean visible>;

        return $z0;
    }

    public java.lang.Object getClientProperty(java.lang.String)
    {
        com.sun.lwuit.Component r0;
        java.lang.Object $r4;
        java.lang.String r2;
        java.util.Hashtable $r1, $r3;

        r0 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.sun.lwuit.Component: java.util.Hashtable clientProperties>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.sun.lwuit.Component: java.util.Hashtable clientProperties>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        return $r4;
    }

    public void putClientProperty(java.lang.String, java.lang.Object)
    {
        com.sun.lwuit.Component r0;
        int $i0;
        java.lang.Object r2;
        java.lang.String r3;
        java.util.Hashtable $r1, $r4, $r5, $r6, $r7;

        r0 := @this: com.sun.lwuit.Component;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<com.sun.lwuit.Component: java.util.Hashtable clientProperties>;

        if $r1 != null goto label2;

        if r2 != null goto label1;

        return;

     label1:
        $r7 = new java.util.Hashtable;

        specialinvoke $r7.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.lwuit.Component: java.util.Hashtable clientProperties> = $r7;

     label2:
        if r2 != null goto label3;

        $r5 = r0.<com.sun.lwuit.Component: java.util.Hashtable clientProperties>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r3);

        $r6 = r0.<com.sun.lwuit.Component: java.util.Hashtable clientProperties>;

        $i0 = virtualinvoke $r6.<java.util.Hashtable: int size()>();

        if $i0 != 0 goto label4;

        r0.<com.sun.lwuit.Component: java.util.Hashtable clientProperties> = null;

        goto label4;

     label3:
        $r4 = r0.<com.sun.lwuit.Component: java.util.Hashtable clientProperties>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2);

     label4:
        return;
    }

    public final com.sun.lwuit.geom.Rectangle getDirtyRegion()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion>;

        return $r1;
    }

    public final void setDirtyRegion(com.sun.lwuit.geom.Rectangle)
    {
        com.sun.lwuit.Component r0;
        java.lang.Throwable $r3;
        java.lang.Object $r1;
        com.sun.lwuit.geom.Rectangle r2;

        r0 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: com.sun.lwuit.geom.Rectangle;

        $r1 = r0.<com.sun.lwuit.Component: java.lang.Object dirtyRegionLock>;

        entermonitor $r1;

     label1:
        r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion> = r2;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setVisible(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean visible> = z0;

        return;
    }

    public int getWidth()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r2;
        int $i0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i0 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        return $i0;
    }

    public int getHeight()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r2;
        int $i0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i0 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        return $i0;
    }

    public void setX(int)
    {
        com.sun.lwuit.Component r0;
        int i0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: void setX(int)>(i0);

        return;
    }

    public void setY(int)
    {
        com.sun.lwuit.Component r0;
        int i0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: void setY(int)>(i0);

        return;
    }

    public int getBaseline(int, int)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1;
        int i0, $i1, $i2, i3;

        r0 := @this: com.sun.lwuit.Component;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i2 = i0 - $i1;

        return $i2;
    }

    public int getBaselineResizeBehavior()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return 4;
    }

    public void setPreferredSize(com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1, r2;
        int $i0, $i1;

        r0 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: com.sun.lwuit.geom.Dimension;

        $r1 = specialinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension preferredSize()>();

        $i0 = virtualinvoke r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i0);

        $i1 = virtualinvoke r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i1);

        r0.<com.sun.lwuit.Component: boolean sizeRequestedByUser> = 1;

        return;
    }

    public com.sun.lwuit.geom.Dimension getPreferredSize()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = specialinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension preferredSize()>();

        return $r1;
    }

    com.sun.lwuit.geom.Dimension getPreferredSizeWithMargin()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r2;
        com.sun.lwuit.geom.Dimension $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = specialinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension preferredSize()>();

        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r3 = new com.sun.lwuit.geom.Dimension;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i1 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getMargin(int)>(1);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getMargin(int)>(3);

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i6 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getMargin(int)>(0);

        $i7 = $i5 + $i6;

        $i8 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getMargin(int)>(2);

        $i9 = $i7 + $i8;

        specialinvoke $r3.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i4, $i9);

        return $r3;
    }

    public com.sun.lwuit.geom.Dimension getScrollDimension()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean scrollSizeRequestedByUser>;

        if $z0 != 0 goto label2;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension scrollSize>;

        if $r1 == null goto label1;

        $z1 = r0.<com.sun.lwuit.Component: boolean shouldCalcScrollSize>;

        if $z1 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension calcScrollSize()>();

        r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension scrollSize> = $r2;

        r0.<com.sun.lwuit.Component: boolean shouldCalcScrollSize> = 0;

     label2:
        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension scrollSize>;

        return $r3;
    }

    protected com.sun.lwuit.geom.Dimension calcScrollSize()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension calcPreferredSize()>();

        return $r1;
    }

    public void setScrollSize(com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.geom.Dimension;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension scrollSize> = r1;

        r0.<com.sun.lwuit.Component: boolean scrollSizeRequestedByUser> = 1;

        return;
    }

    public void setPreferredW(int)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1;
        int i0, $i1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        $r1 = new com.sun.lwuit.geom.Dimension;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getPreferredH()>();

        specialinvoke $r1.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(i0, $i1);

        virtualinvoke r0.<com.sun.lwuit.Component: void setPreferredSize(com.sun.lwuit.geom.Dimension)>($r1);

        return;
    }

    public void setPreferredH(int)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1;
        int $i0, i1;

        r0 := @this: com.sun.lwuit.Component;

        i1 := @parameter0: int;

        $r1 = new com.sun.lwuit.geom.Dimension;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Component: int getPreferredW()>();

        specialinvoke $r1.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i0, i1);

        virtualinvoke r0.<com.sun.lwuit.Component: void setPreferredSize(com.sun.lwuit.geom.Dimension)>($r1);

        return;
    }

    public int getPreferredW()
    {
        com.sun.lwuit.Component r0;
        int $i0;
        com.sun.lwuit.geom.Dimension $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        return $i0;
    }

    public int getPreferredH()
    {
        com.sun.lwuit.Component r0;
        int $i0;
        com.sun.lwuit.geom.Dimension $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        return $i0;
    }

    public void setWidth(int)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r2;
        int i0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: void setWidth(int)>(i0);

        return;
    }

    public void setHeight(int)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r2;
        int i0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: void setHeight(int)>(i0);

        return;
    }

    public void setSize(com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r2, r3;
        int $i0, $i1;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        r3 := @parameter0: com.sun.lwuit.geom.Dimension;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i0 = virtualinvoke r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i0);

        $i1 = virtualinvoke r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i1);

        return;
    }

    public java.lang.String getUIID()
    {
        com.sun.lwuit.Component r0;
        java.lang.String $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: java.lang.String id>;

        return $r1;
    }

    public void setUIID(java.lang.String)
    {
        com.sun.lwuit.Component r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: java.lang.String;

        r1 = r0.<com.sun.lwuit.Component: java.lang.String id>;

        r0.<com.sun.lwuit.Component: java.lang.String id> = r2;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.sun.lwuit.Component: void initStyle()>();

     label1:
        r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle> = null;

        return;
    }

    public com.sun.lwuit.Container getParent()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Container $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Container parent>;

        return $r1;
    }

    void setParent(com.sun.lwuit.Container)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Container r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Container;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.Container parent> = r1;

        return;
    }

    public void addFocusListener(com.sun.lwuit.events.FocusListener)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.util.EventDispatcher $r2;
        com.sun.lwuit.events.FocusListener r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.events.FocusListener;

        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.util.EventDispatcher focusListeners>;

        virtualinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void addListener(java.lang.Object)>(r1);

        return;
    }

    public void removeFocusListener(com.sun.lwuit.events.FocusListener)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.util.EventDispatcher $r2;
        com.sun.lwuit.events.FocusListener r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.events.FocusListener;

        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.util.EventDispatcher focusListeners>;

        virtualinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void removeListener(java.lang.Object)>(r1);

        return;
    }

    protected void fireClicked()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return;
    }

    protected boolean isSelectableInteraction()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return 0;
    }

    void fireFocusGained()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        virtualinvoke r0.<com.sun.lwuit.Component: void fireFocusGained(com.sun.lwuit.Component)>(r0);

        return;
    }

    void fireFocusLost()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        virtualinvoke r0.<com.sun.lwuit.Component: void fireFocusLost(com.sun.lwuit.Component)>(r0);

        return;
    }

    void fireFocusGained(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0, r1;
        com.sun.lwuit.Form $r3;
        java.lang.String $r4;
        com.sun.lwuit.util.EventDispatcher $r2;
        boolean $z0, $z1;

        r1 := @this: com.sun.lwuit.Component;

        r0 := @parameter0: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isCellRenderer()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<com.sun.lwuit.Component: com.sun.lwuit.util.EventDispatcher focusListeners>;

        virtualinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void fireFocus(com.sun.lwuit.Component)>(r0);

        virtualinvoke r1.<com.sun.lwuit.Component: void focusGainedInternal()>();

        virtualinvoke r1.<com.sun.lwuit.Component: void focusGained()>();

        $z1 = virtualinvoke r1.<com.sun.lwuit.Component: boolean isSelectableInteraction()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke r1.<com.sun.lwuit.Component: java.lang.String getSelectCommandText()>();

        virtualinvoke $r3.<com.sun.lwuit.Form: void addSelectCommand(java.lang.String)>($r4);

     label2:
        return;
    }

    public void setSelectCommandText(java.lang.String)
    {
        com.sun.lwuit.Component r0;
        java.lang.String r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: java.lang.String;

        r0.<com.sun.lwuit.Component: java.lang.String selectText> = r1;

        return;
    }

    public java.lang.String getSelectCommandText()
    {
        com.sun.lwuit.Component r0;
        java.lang.String $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: java.lang.String selectText>;

        return $r1;
    }

    void fireFocusLost(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0, r1;
        com.sun.lwuit.Form $r2;
        com.sun.lwuit.util.EventDispatcher $r3;
        boolean $z0, $z1;

        r1 := @this: com.sun.lwuit.Component;

        r0 := @parameter0: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isCellRenderer()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<com.sun.lwuit.Component: boolean isSelectableInteraction()>();

        if $z1 == 0 goto label2;

        $r2 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r2 == null goto label2;

        virtualinvoke $r2.<com.sun.lwuit.Form: void removeSelectCommand()>();

     label2:
        $r3 = r1.<com.sun.lwuit.Component: com.sun.lwuit.util.EventDispatcher focusListeners>;

        virtualinvoke $r3.<com.sun.lwuit.util.EventDispatcher: void fireFocus(com.sun.lwuit.Component)>(r0);

        virtualinvoke r1.<com.sun.lwuit.Component: void focusLostInternal()>();

        virtualinvoke r1.<com.sun.lwuit.Component: void focusLost()>();

        return;
    }

    void fireActionEvent()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return;
    }

    public void setLabelForComponent(com.sun.lwuit.Label)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Label r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Label;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel> = r1;

        return;
    }

    public com.sun.lwuit.Label getLabelForComponent()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Label $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        return $r1;
    }

    void focusGainedInternal()
    {
        com.sun.lwuit.Label $r1, $r2, $r3, $r4;
        long $l0;
        com.sun.lwuit.plaf.UIManager $r5;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.LookAndFeel $r6;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        $z0 = virtualinvoke $r2.<com.sun.lwuit.Label: boolean isTickerEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        $z1 = virtualinvoke $r3.<com.sun.lwuit.Label: boolean shouldTickerStart()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        $r5 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r6 = virtualinvoke $r5.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $l0 = virtualinvoke $r6.<com.sun.lwuit.plaf.LookAndFeel: long getTickerSpeed()>();

        virtualinvoke $r4.<com.sun.lwuit.Label: void startTicker(long,boolean)>($l0, 1);

     label1:
        return;
    }

    protected void focusGained()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return;
    }

    protected void focusLost()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Label $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        $z0 = virtualinvoke $r2.<com.sun.lwuit.Label: boolean isTickerEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        $z1 = virtualinvoke $r3.<com.sun.lwuit.Label: boolean isTickerRunning()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Label componentLabel>;

        virtualinvoke $r4.<com.sun.lwuit.Label: void stopTicker()>();

     label1:
        return;
    }

    void focusLostInternal()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return;
    }

    public void paintBackgrounds(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.Container $r2;
        com.sun.lwuit.Component r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        $i0 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i4 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i5 = $i3 + $i4;

        $i6 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i7 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        specialinvoke r0.<com.sun.lwuit.Component: void drawPainters(com.sun.lwuit.Graphics,com.sun.lwuit.Component,com.sun.lwuit.Component,int,int,int,int)>(r1, $r2, r0, $i2, $i5, $i6, $i7);

        return;
    }

    public int getAbsoluteX()
    {
        com.sun.lwuit.Component r0;
        int $i0, $i1, $i2, i3;
        com.sun.lwuit.Container $r1;

        r0 := @this: com.sun.lwuit.Component;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Component: int getX()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        i3 = $i0 - $i1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r1 == null goto label1;

        $i2 = virtualinvoke $r1.<com.sun.lwuit.Container: int getAbsoluteX()>();

        i3 = i3 + $i2;

     label1:
        return i3;
    }

    public int getAbsoluteY()
    {
        com.sun.lwuit.Component r0;
        int $i0, $i1, $i2, i3;
        com.sun.lwuit.Container $r1;

        r0 := @this: com.sun.lwuit.Component;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Component: int getY()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        i3 = $i0 - $i1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r1 == null goto label1;

        $i2 = virtualinvoke $r1.<com.sun.lwuit.Container: int getAbsoluteY()>();

        i3 = i3 + $i2;

     label1:
        return i3;
    }

    final void paintInternal(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Graphics r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        virtualinvoke r0.<com.sun.lwuit.Component: void paintInternal(com.sun.lwuit.Graphics,boolean)>(r1, 1);

        return;
    }

    final void paintInternal(com.sun.lwuit.Graphics, boolean)
    {
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.geom.Rectangle $r2;
        com.sun.lwuit.Component r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        com.sun.lwuit.Container $r3;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        z4 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isVisible()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipX()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipY()>();

        $i2 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i3 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipHeight()>();

        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        $z1 = virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int)>($i0, $i1, $i2, $i3);

        if $z1 == 0 goto label7;

        $i4 = virtualinvoke r0.<com.sun.lwuit.Component: int getX()>();

        $i5 = virtualinvoke r0.<com.sun.lwuit.Component: int getY()>();

        $i6 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i7 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke r1.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i4, $i5, $i6, $i7);

        virtualinvoke r0.<com.sun.lwuit.Component: void paintBackground(com.sun.lwuit.Graphics)>(r1);

        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollable()>();

        if $z2 == 0 goto label3;

        $i8 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i9 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i11 = neg $i8;

        $i10 = neg $i9;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i11, $i10);

        virtualinvoke r0.<com.sun.lwuit.Component: void paint(com.sun.lwuit.Graphics)>(r1);

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i8, $i9);

        $z5 = r0.<com.sun.lwuit.Component: boolean isScrollVisible>;

        if $z5 == 0 goto label2;

        virtualinvoke r0.<com.sun.lwuit.Component: void paintScrollbars(com.sun.lwuit.Graphics)>(r1);

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<com.sun.lwuit.Component: void paint(com.sun.lwuit.Graphics)>(r1);

     label4:
        $z3 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isBorderPainted()>();

        if $z3 == 0 goto label5;

        virtualinvoke r0.<com.sun.lwuit.Component: void paintBorder(com.sun.lwuit.Graphics)>(r1);

     label5:
        if z4 == 0 goto label6;

        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Container parent>;

        if $r3 == null goto label6;

        specialinvoke r0.<com.sun.lwuit.Component: void paintIntersectingComponentsAbove(com.sun.lwuit.Graphics)>(r1);

     label6:
        virtualinvoke r1.<com.sun.lwuit.Graphics: void setClip(int,int,int,int)>($i0, $i1, $i2, $i3);

     label7:
        return;
    }

    private void paintIntersectingComponentsAbove(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.Component r0, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        com.sun.lwuit.Container r2;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        r3 = r0;

        $i0 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getTranslateX()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getTranslateY()>();

        $i3 = neg $i0;

        $i2 = neg $i1;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i3, $i2);

     label1:
        if r2 == null goto label2;

        $i4 = virtualinvoke r2.<com.sun.lwuit.Container: int getAbsoluteX()>();

        $i5 = virtualinvoke r2.<com.sun.lwuit.Container: int getScrollX()>();

        $i6 = $i4 + $i5;

        $i7 = virtualinvoke r2.<com.sun.lwuit.Container: int getAbsoluteY()>();

        $i8 = virtualinvoke r2.<com.sun.lwuit.Container: int getScrollY()>();

        $i9 = $i7 + $i8;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i6, $i9);

        $i10 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i11 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i12 = $i10 + $i11;

        $i13 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i14 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i15 = $i13 + $i14;

        $i16 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i17 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke r2.<com.sun.lwuit.Container: void paintIntersecting(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int,boolean)>(r1, r3, $i12, $i15, $i16, $i17, 1);

        $i18 = virtualinvoke r2.<com.sun.lwuit.Container: int getAbsoluteX()>();

        $i19 = neg $i18;

        $i20 = virtualinvoke r2.<com.sun.lwuit.Container: int getScrollX()>();

        $i21 = $i19 - $i20;

        $i22 = virtualinvoke r2.<com.sun.lwuit.Container: int getAbsoluteY()>();

        $i23 = neg $i22;

        $i24 = virtualinvoke r2.<com.sun.lwuit.Container: int getScrollY()>();

        $i25 = $i23 - $i24;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i21, $i25);

        r3 = r2;

        r2 = virtualinvoke r2.<com.sun.lwuit.Container: com.sun.lwuit.Container getParent()>();

        goto label1;

     label2:
        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i0, $i1);

        return;
    }

    protected void paintScrollbars(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Graphics r1;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.sun.lwuit.Component: void paintScrollbarX(com.sun.lwuit.Graphics)>(r1);

     label1:
        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.sun.lwuit.Component: void paintScrollbarY(com.sun.lwuit.Graphics)>(r1);

     label2:
        return;
    }

    protected void paintScrollbarX(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r4;
        com.sun.lwuit.plaf.UIManager $r2;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        com.sun.lwuit.plaf.LookAndFeel $r3;
        float f0, $f1, f2, $f3, $f4, $f5, $f6, $f7, f8;

        r0 := @this: com.sun.lwuit.Component;

        r4 := @parameter0: com.sun.lwuit.Graphics;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        f0 = (float) $i0;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $f1 = (float) $i1;

        f2 = $f1 / f0;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i4 = $i2 + $i3;

        $f3 = (float) $i4;

        $b5 = $f3 cmpl f0;

        if $b5 != 0 goto label1;

        f8 = 1.0F - f2;

        goto label2;

     label1:
        $i6 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $f4 = (float) $i6;

        $i7 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $f5 = (float) $i7;

        $f6 = $f4 + $f5;

        $f7 = $f6 / f0;

        f8 = $f7 - f2;

     label2:
        $r2 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r3 = virtualinvoke $r2.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r3.<com.sun.lwuit.plaf.LookAndFeel: void drawHorizontalScroll(com.sun.lwuit.Graphics,com.sun.lwuit.Component,float,float)>(r4, r0, f8, f2);

        return;
    }

    protected void paintScrollbarY(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r4;
        com.sun.lwuit.plaf.UIManager $r2;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        com.sun.lwuit.plaf.LookAndFeel $r3;
        float f0, $f1, f2, $f3, $f4, $f5, $f6, $f7, f8;

        r0 := @this: com.sun.lwuit.Component;

        r4 := @parameter0: com.sun.lwuit.Graphics;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        f0 = (float) $i0;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $f1 = (float) $i1;

        f2 = $f1 / f0;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i4 = $i2 + $i3;

        $f3 = (float) $i4;

        $b5 = $f3 cmpl f0;

        if $b5 != 0 goto label1;

        f8 = 1.0F - f2;

        goto label2;

     label1:
        $i6 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $f4 = (float) $i6;

        $i7 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $f5 = (float) $i7;

        $f6 = $f4 + $f5;

        $f7 = $f6 / f0;

        f8 = $f7 - f2;

     label2:
        $r2 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r3 = virtualinvoke $r2.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r3.<com.sun.lwuit.plaf.LookAndFeel: void drawVerticalScroll(com.sun.lwuit.Graphics,com.sun.lwuit.Component,float,float)>(r4, r0, f8, f2);

        return;
    }

    public final void paintComponent(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Graphics r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        virtualinvoke r0.<com.sun.lwuit.Component: void paintComponent(com.sun.lwuit.Graphics,boolean)>(r1, 1);

        return;
    }

    public final void paintComponent(com.sun.lwuit.Graphics, boolean)
    {
        com.sun.lwuit.Component r1;
        boolean z0, $z1, $z2, $z3;
        com.sun.lwuit.Graphics r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31;
        com.sun.lwuit.Container r2;

        r1 := @this: com.sun.lwuit.Component;

        r0 := @parameter0: com.sun.lwuit.Graphics;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Graphics: int getClipX()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Graphics: int getClipY()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Graphics: int getClipHeight()>();

        r2 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        i29 = 0;

        i30 = 0;

     label1:
        if r2 == null goto label5;

        $i12 = virtualinvoke r2.<com.sun.lwuit.Container: int getX()>();

        i29 = i29 + $i12;

        $i13 = virtualinvoke r2.<com.sun.lwuit.Container: int getY()>();

        i30 = i30 + $i13;

        $z1 = virtualinvoke r2.<com.sun.lwuit.Container: boolean isScrollableX()>();

        if $z1 == 0 goto label2;

        $i28 = virtualinvoke r2.<com.sun.lwuit.Container: int getScrollX()>();

        i29 = i29 - $i28;

     label2:
        $z2 = virtualinvoke r2.<com.sun.lwuit.Container: boolean isScrollableY()>();

        if $z2 == 0 goto label3;

        $i26 = virtualinvoke r2.<com.sun.lwuit.Container: int getScrollY()>();

        i30 = i30 - $i26;

     label3:
        $i14 = virtualinvoke r2.<com.sun.lwuit.Container: int getAbsoluteX()>();

        $i15 = virtualinvoke r2.<com.sun.lwuit.Container: int getScrollX()>();

        $i27 = $i14 + $i15;

        i31 = $i27;

        $z3 = virtualinvoke r1.<com.sun.lwuit.Component: boolean isRTL()>();

        if $z3 == 0 goto label4;

        $i25 = virtualinvoke r2.<com.sun.lwuit.Container: int getSideGap()>();

        i31 = $i27 + $i25;

     label4:
        $i16 = virtualinvoke r2.<com.sun.lwuit.Container: int getAbsoluteY()>();

        $i17 = virtualinvoke r2.<com.sun.lwuit.Container: int getScrollY()>();

        $i18 = $i16 + $i17;

        $i19 = virtualinvoke r2.<com.sun.lwuit.Container: int getWidth()>();

        $i20 = virtualinvoke r2.<com.sun.lwuit.Container: int getSideGap()>();

        $i21 = $i19 - $i20;

        $i22 = virtualinvoke r2.<com.sun.lwuit.Container: int getHeight()>();

        $i23 = virtualinvoke r2.<com.sun.lwuit.Container: int getBottomGap()>();

        $i24 = $i22 - $i23;

        virtualinvoke r0.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>(i31, $i18, $i21, $i24);

        r2 = virtualinvoke r2.<com.sun.lwuit.Container: com.sun.lwuit.Container getParent()>();

        goto label1;

     label5:
        $i4 = virtualinvoke r1.<com.sun.lwuit.Component: int getX()>();

        $i5 = i29 + $i4;

        $i6 = virtualinvoke r1.<com.sun.lwuit.Component: int getY()>();

        $i7 = i30 + $i6;

        $i8 = virtualinvoke r1.<com.sun.lwuit.Component: int getWidth()>();

        $i9 = virtualinvoke r1.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke r0.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i5, $i7, $i8, $i9);

        if z0 == 0 goto label6;

        virtualinvoke r1.<com.sun.lwuit.Component: void paintBackgrounds(com.sun.lwuit.Graphics)>(r0);

     label6:
        virtualinvoke r0.<com.sun.lwuit.Graphics: void translate(int,int)>(i29, i30);

        virtualinvoke r1.<com.sun.lwuit.Component: void paintInternal(com.sun.lwuit.Graphics)>(r0);

        $i11 = neg i29;

        $i10 = neg i30;

        virtualinvoke r0.<com.sun.lwuit.Graphics: void translate(int,int)>($i11, $i10);

        virtualinvoke r1.<com.sun.lwuit.Component: void paintGlassImpl(com.sun.lwuit.Graphics)>(r0);

        virtualinvoke r0.<com.sun.lwuit.Graphics: void setClip(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    void paintGlassImpl(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.Container $r1, $r3;

        r0 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Container parent>;

        if $r1 == null goto label1;

        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Container parent>;

        virtualinvoke $r3.<com.sun.lwuit.Container: void paintGlassImpl(com.sun.lwuit.Graphics)>(r2);

     label1:
        return;
    }

    private void drawPainters(com.sun.lwuit.Graphics, com.sun.lwuit.Component, com.sun.lwuit.Component, int, int, int, int)
    {
        com.sun.lwuit.Component r0, r3, r7;
        com.sun.lwuit.plaf.Style $r1, $r5;
        byte $b0;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.Painter $r6;
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.geom.Rectangle r19, $r20;
        com.sun.lwuit.geom.Dimension $r15, $r16;
        int $i1, $i2, i3, $i4, $i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27;
        java.lang.ref.WeakReference $r8, $r11, $r13, $r21;
        com.sun.lwuit.plaf.Border $r17;
        com.sun.lwuit.Container $r4, $r18;
        java.lang.Object $r12, $r14;

        r7 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.Component;

        r3 := @parameter2: com.sun.lwuit.Component;

        i7 := @parameter3: int;

        i8 := @parameter4: int;

        i9 := @parameter5: int;

        i10 := @parameter6: int;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $b0 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: byte getBgTransparency()>();

        $i25 = (int) $b0;

        $i27 = (int) -1;

        if $i25 == $i27 goto label2;

        $r18 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        specialinvoke r7.<com.sun.lwuit.Component: void drawPainters(com.sun.lwuit.Graphics,com.sun.lwuit.Component,com.sun.lwuit.Component,int,int,int,int)>(r2, $r18, r0, i7, i8, i9, i10);

     label2:
        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isVisible()>();

        if $z0 != 0 goto label3;

        return;

     label3:
        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        i3 = $i1 + $i2;

        $i4 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i5 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        i6 = $i4 + $i5;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void translate(int,int)>(i3, i6);

        $r4 = (com.sun.lwuit.Container) r0;

        virtualinvoke $r4.<com.sun.lwuit.Container: void paintIntersecting(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int,boolean)>(r2, r3, i7, i8, i9, i10, 0);

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isBorderPainted()>();

        if $z1 == 0 goto label4;

        $r17 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Border getBorder()>();

        $z2 = virtualinvoke $r17.<com.sun.lwuit.plaf.Border: boolean isBackgroundPainter()>();

        if $z2 == 0 goto label4;

        $i15 = virtualinvoke r0.<com.sun.lwuit.Component: int getX()>();

        $i16 = neg $i15;

        $i17 = virtualinvoke r0.<com.sun.lwuit.Component: int getY()>();

        $i18 = neg $i17;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void translate(int,int)>($i16, $i18);

        virtualinvoke $r17.<com.sun.lwuit.plaf.Border: void paintBorderBackground(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r2, r0);

        virtualinvoke $r17.<com.sun.lwuit.plaf.Border: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r2, r0);

        $i19 = virtualinvoke r0.<com.sun.lwuit.Component: int getX()>();

        $i20 = $i19 - i3;

        $i21 = virtualinvoke r0.<com.sun.lwuit.Component: int getY()>();

        $i22 = $i21 - i6;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void translate(int,int)>($i20, $i22);

        return;

     label4:
        $r5 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r6 = virtualinvoke $r5.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        if $r6 == null goto label8;

        $r8 = r7.<com.sun.lwuit.Component: java.lang.ref.WeakReference painterBounds>;

        if $r8 == null goto label5;

        $r11 = r7.<com.sun.lwuit.Component: java.lang.ref.WeakReference painterBounds>;

        $r12 = virtualinvoke $r11.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r12 != null goto label6;

     label5:
        $r20 = new com.sun.lwuit.geom.Rectangle;

        $i11 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i12 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        specialinvoke $r20.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>(0, 0, $i11, $i12);

        r19 = $r20;

        $r21 = new java.lang.ref.WeakReference;

        specialinvoke $r21.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r20);

        r7.<com.sun.lwuit.Component: java.lang.ref.WeakReference painterBounds> = $r21;

        goto label7;

     label6:
        $r13 = r7.<com.sun.lwuit.Component: java.lang.ref.WeakReference painterBounds>;

        $r14 = virtualinvoke $r13.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r19 = (com.sun.lwuit.geom.Rectangle) $r14;

        $r15 = virtualinvoke r19.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i13 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        virtualinvoke $r15.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i13);

        $r16 = virtualinvoke r19.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i14 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke $r16.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i14);

     label7:
        interfaceinvoke $r6.<com.sun.lwuit.Painter: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.geom.Rectangle)>(r2, r19);

     label8:
        $i23 = neg i3;

        $i24 = neg i6;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void translate(int,int)>($i23, $i24);

        return;
    }

    protected com.sun.lwuit.plaf.Border getBorder()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1;
        com.sun.lwuit.plaf.Border $r2;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.plaf.Border getBorder()>();

        return $r2;
    }

    protected void paintBackground(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r3;
        com.sun.lwuit.geom.Rectangle $r4;
        com.sun.lwuit.plaf.Border $r5;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r6;
        boolean $z0, $z1;
        com.sun.lwuit.Painter $r2, $r7;

        r0 := @this: com.sun.lwuit.Component;

        r3 := @parameter0: com.sun.lwuit.Graphics;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isBorderPainted()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Border getBorder()>();

        if $r5 == null goto label1;

        $z1 = virtualinvoke $r5.<com.sun.lwuit.plaf.Border: boolean isBackgroundPainter()>();

        if $z1 == 0 goto label1;

        virtualinvoke $r5.<com.sun.lwuit.plaf.Border: void paintBorderBackground(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r3, r0);

        return;

     label1:
        $r6 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r7 = virtualinvoke $r6.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        if $r7 == null goto label2;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        $r4 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        interfaceinvoke $r2.<com.sun.lwuit.Painter: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.geom.Rectangle)>(r3, $r4);

     label2:
        return;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Graphics r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        return;
    }

    protected boolean isScrollable()
    {
        com.sun.lwuit.Component r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isScrollableX()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return 0;
    }

    public boolean isScrollableY()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return 0;
    }

    public int getScrollX()
    {
        com.sun.lwuit.Component r0;
        int $i0;

        r0 := @this: com.sun.lwuit.Component;

        $i0 = r0.<com.sun.lwuit.Component: int scrollX>;

        return $i0;
    }

    public int getScrollY()
    {
        com.sun.lwuit.Component r0;
        int $i0;

        r0 := @this: com.sun.lwuit.Component;

        $i0 = r0.<com.sun.lwuit.Component: int scrollY>;

        return $i0;
    }

    protected void setScrollX(int)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.Component: int scrollX> = i0;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isSmoothScrolling()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isTensileDragEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        $i1 = r0.<com.sun.lwuit.Component: int scrollX>;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i2 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i4 = $i2 - $i3;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i4);

        r0.<com.sun.lwuit.Component: int scrollX> = $i5;

        $i6 = r0.<com.sun.lwuit.Component: int scrollX>;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, 0);

        r0.<com.sun.lwuit.Component: int scrollX> = $i7;

     label2:
        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z2 == 0 goto label3;

        virtualinvoke r0.<com.sun.lwuit.Component: void repaint()>();

     label3:
        return;
    }

    protected void setScrollY(int)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.Component: int scrollY> = i0;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isSmoothScrolling()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isTensileDragEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        $i1 = r0.<com.sun.lwuit.Component: int scrollY>;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i2 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i4 = $i2 - $i3;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i4);

        r0.<com.sun.lwuit.Component: int scrollY> = $i5;

        $i6 = r0.<com.sun.lwuit.Component: int scrollY>;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, 0);

        r0.<com.sun.lwuit.Component: int scrollY> = $i7;

     label2:
        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z2 == 0 goto label3;

        virtualinvoke r0.<com.sun.lwuit.Component: void repaint()>();

     label3:
        return;
    }

    public int getBottomGap()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.LookAndFeel $r2;
        int $i0;
        boolean $z0, $z1;
        com.sun.lwuit.plaf.UIManager $r1;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollVisible()>();

        if $z1 == 0 goto label1;

        $r1 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $i0 = virtualinvoke $r2.<com.sun.lwuit.plaf.LookAndFeel: int getHorizontalScrollHeight()>();

        return $i0;

     label1:
        return 0;
    }

    public int getSideGap()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.LookAndFeel $r2;
        int $i0;
        boolean $z0, $z1;
        com.sun.lwuit.plaf.UIManager $r1;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollVisible()>();

        if $z1 == 0 goto label1;

        $r1 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $i0 = virtualinvoke $r2.<com.sun.lwuit.plaf.LookAndFeel: int getVerticalScrollWidth()>();

        return $i0;

     label1:
        return 0;
    }

    public boolean contains(int, int)
    {
        com.sun.lwuit.Component r0;
        int $i0, $i1, i2, $i3, $i4, i5, i6, $i7, $i8, i9, $i10, $i11;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        i6 := @parameter0: int;

        i9 := @parameter1: int;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i4 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        i5 = $i3 + $i4;

        if i6 < i2 goto label1;

        $i7 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i8 = i2 + $i7;

        if i6 >= $i8 goto label1;

        if i9 < i5 goto label1;

        $i10 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i11 = i5 + $i10;

        if i9 >= $i11 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected com.sun.lwuit.geom.Dimension calcPreferredSize()
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.geom.Dimension $r0;

        r1 := @this: com.sun.lwuit.Component;

        $r0 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r0.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(0, 0);

        return $r0;
    }

    private com.sun.lwuit.geom.Dimension preferredSize()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean sizeRequestedByUser>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.sun.lwuit.Component: boolean shouldCalcPreferredSize>;

        if $z1 != 0 goto label1;

        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension preferredSize>;

        if $r2 != null goto label2;

     label1:
        r0.<com.sun.lwuit.Component: boolean shouldCalcPreferredSize> = 0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension calcPreferredSize()>();

        r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension preferredSize> = $r1;

     label2:
        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension preferredSize>;

        return $r3;
    }

    protected com.sun.lwuit.geom.Rectangle getBounds()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        return $r1;
    }

    protected com.sun.lwuit.geom.Rectangle getVisibleBounds()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle bounds>;

        return $r1;
    }

    public boolean isFocusable()
    {
        com.sun.lwuit.Component r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean focusable>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.sun.lwuit.Component: boolean enabled>;

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isVisible()>();

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public void setFocusable(boolean)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Form $r1;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean focusable> = z0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Form: void clearFocusVectors()>();

     label1:
        return;
    }

    protected void setShouldCalcPreferredSize(boolean)
    {
        com.sun.lwuit.Container $r1, $r2, $r3;
        com.sun.lwuit.Component r0;
        boolean $z0, z1, $z2, $z3;

        r0 := @this: com.sun.lwuit.Component;

        z1 := @parameter0: boolean;

        $z0 = r0.<com.sun.lwuit.Component: boolean shouldCalcScrollSize>;

        if $z0 != 0 goto label1;

        r0.<com.sun.lwuit.Component: boolean shouldCalcScrollSize> = z1;

     label1:
        $z2 = r0.<com.sun.lwuit.Component: boolean shouldCalcPreferredSize>;

        if z1 == $z2 goto label3;

        r0.<com.sun.lwuit.Component: boolean shouldCalcPreferredSize> = z1;

        r0.<com.sun.lwuit.Component: boolean shouldCalcScrollSize> = z1;

        if z1 == 0 goto label3;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r1 == null goto label3;

        r0.<com.sun.lwuit.Component: boolean shouldCalcPreferredSize> = z1;

        $z3 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isCellRenderer()>();

        if $z3 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        virtualinvoke $r3.<com.sun.lwuit.Container: void setShouldCalcPreferredSize(boolean)>(z1);

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        virtualinvoke $r2.<com.sun.lwuit.Container: void setShouldLayout(boolean)>(z1);

     label3:
        return;
    }

    public boolean isFocusPainted()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean focusPainted>;

        return $z0;
    }

    public void setFocusPainted(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean focusPainted> = z0;

        return;
    }

    public boolean handlesInput()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean handlesInput>;

        return $z0;
    }

    public void setHandlesInput(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean handlesInput> = z0;

        return;
    }

    public boolean hasFocus()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean focused>;

        return $z0;
    }

    public void setFocus(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean focused> = z0;

        return;
    }

    public com.sun.lwuit.Form getComponentForm()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Container $r1;
        com.sun.lwuit.Form r2;

        r0 := @this: com.sun.lwuit.Component;

        r2 = null;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r1 == null goto label1;

        r2 = virtualinvoke $r1.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

     label1:
        return r2;
    }

    void repaint(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0, r1;
        int $i0, $i1;
        com.sun.lwuit.Container $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isCellRenderer()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r1.<com.sun.lwuit.Component: int getWidth()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r1.<com.sun.lwuit.Component: int getHeight()>();

        if $i1 > 0 goto label2;

     label1:
        return;

     label2:
        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r2 == null goto label3;

        virtualinvoke $r2.<com.sun.lwuit.Component: void repaint(com.sun.lwuit.Component)>(r1);

     label3:
        return;
    }

    public void repaint()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Rectangle $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.sun.lwuit.Component: void setDirtyRegion(com.sun.lwuit.geom.Rectangle)>(null);

     label1:
        virtualinvoke r0.<com.sun.lwuit.Component: void repaint(com.sun.lwuit.Component)>(r0);

        return;
    }

    public void repaint(int, int, int, int)
    {
        com.sun.lwuit.Component r0;
        java.lang.Throwable $r10;
        com.sun.lwuit.geom.Rectangle $r2, $r3, $r4, $r5, $r7, $r9, $r11, $r12;
        com.sun.lwuit.geom.Dimension $r6, $r8, $r13;
        int $i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.Object $r1;

        r0 := @this: com.sun.lwuit.Component;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        $r1 = r0.<com.sun.lwuit.Component: java.lang.Object dirtyRegionLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion>;

        if $r2 != null goto label2;

        $r9 = new com.sun.lwuit.geom.Rectangle;

        specialinvoke $r9.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>(i1, i2, i3, i4);

        virtualinvoke r0.<com.sun.lwuit.Component: void setDirtyRegion(com.sun.lwuit.geom.Rectangle)>($r9);

        goto label4;

     label2:
        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion>;

        $i0 = virtualinvoke $r3.<com.sun.lwuit.geom.Rectangle: int getX()>();

        if $i0 != i1 goto label3;

        $r4 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion>;

        $i5 = virtualinvoke $r4.<com.sun.lwuit.geom.Rectangle: int getY()>();

        if $i5 != i2 goto label3;

        $r5 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion>;

        $r6 = virtualinvoke $r5.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i6 = virtualinvoke $r6.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        if $i6 != i3 goto label3;

        $r7 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion>;

        $r8 = virtualinvoke $r7.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i7 = virtualinvoke $r8.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        if $i7 == i4 goto label4;

     label3:
        $r11 = new com.sun.lwuit.geom.Rectangle;

        $r12 = r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle dirtyRegion>;

        specialinvoke $r11.<com.sun.lwuit.geom.Rectangle: void <init>(com.sun.lwuit.geom.Rectangle)>($r12);

        $r13 = virtualinvoke $r11.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i8 = virtualinvoke $r11.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, i1);

        $i10 = virtualinvoke $r11.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i10, i2);

        $i12 = i1 + i3;

        $i13 = virtualinvoke $r11.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i14 = virtualinvoke $r13.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i15 = $i13 + $i14;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i15);

        $i17 = i2 + i4;

        $i18 = virtualinvoke $r11.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i19 = virtualinvoke $r13.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i20 = $i18 + $i19;

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i20);

        virtualinvoke $r11.<com.sun.lwuit.geom.Rectangle: void setX(int)>($i9);

        virtualinvoke $r11.<com.sun.lwuit.geom.Rectangle: void setY(int)>($i11);

        $i22 = $i16 - $i9;

        virtualinvoke $r13.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i22);

        $i23 = $i21 - $i11;

        virtualinvoke $r13.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i23);

        virtualinvoke r0.<com.sun.lwuit.Component: void setDirtyRegion(com.sun.lwuit.geom.Rectangle)>($r11);

     label4:
        exitmonitor $r1;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r10;

     label8:
        virtualinvoke r0.<com.sun.lwuit.Component: void repaint(com.sun.lwuit.Component)>(r0);

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected void longKeyPress(int)
    {
        com.sun.lwuit.Component r0;
        int i0;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        return;
    }

    public void keyPressed(int)
    {
        com.sun.lwuit.Component r0;
        int i0;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        return;
    }

    public void keyReleased(int)
    {
        com.sun.lwuit.Component r0;
        int i0;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        return;
    }

    public void keyRepeated(int)
    {
        com.sun.lwuit.Component r0;
        int i0;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.sun.lwuit.Component: void keyPressed(int)>(i0);

        virtualinvoke r0.<com.sun.lwuit.Component: void keyReleased(int)>(i0);

        return;
    }

    private void setAnimationMotion(com.sun.lwuit.animations.Motion)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.animations.Motion r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.animations.Motion;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion animationMotion> = r1;

        return;
    }

    private com.sun.lwuit.animations.Motion getAnimationMotion()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.animations.Motion $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion animationMotion>;

        return $r1;
    }

    public int getScrollAnimationSpeed()
    {
        com.sun.lwuit.Component r0;
        int $i0;

        r0 := @this: com.sun.lwuit.Component;

        $i0 = r0.<com.sun.lwuit.Component: int animationSpeed>;

        return $i0;
    }

    public void setScrollAnimationSpeed(int)
    {
        com.sun.lwuit.Component r0;
        int i0;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.Component: int animationSpeed> = i0;

        return;
    }

    public boolean isSmoothScrolling()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean smoothScrolling>;

        return $z0;
    }

    public void setSmoothScrolling(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean smoothScrolling> = z0;

        return;
    }

    public void pointerHover(int[], int[])
    {
        com.sun.lwuit.Component r0;
        int[] r1, r2;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = null;

        virtualinvoke r0.<com.sun.lwuit.Component: void pointerDragged(int[],int[])>(r1, r2);

        return;
    }

    void clearDrag()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Container $r1;

        r0 := @this: com.sun.lwuit.Component;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = null;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Component: void clearDrag()>();

     label1:
        return;
    }

    public void pointerHoverReleased(int[], int[])
    {
        com.sun.lwuit.Component r0;
        int[] r1, r2;
        int $i0, $i1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $i1 = r1[0];

        $i0 = r2[0];

        specialinvoke r0.<com.sun.lwuit.Component: void pointerReleaseImpl(int,int)>($i1, $i0);

        return;
    }

    public void pointerDragged(int[], int[])
    {
        com.sun.lwuit.Component r0;
        int[] r1, r2;
        int $i0, $i1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $i1 = r1[0];

        $i0 = r2[0];

        virtualinvoke r0.<com.sun.lwuit.Component: void pointerDragged(int,int)>($i1, $i0);

        return;
    }

    protected void dragInitiated()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return;
    }

    public void pointerDragged(int, int)
    {
        com.sun.lwuit.Component r0, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.sun.lwuit.geom.Dimension $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, $i20, $i21, $i22, $i23;
        com.sun.lwuit.Form $r4;
        com.sun.lwuit.Container $r1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollable()>();

        if $z0 == 0 goto label8;

        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isSmoothScrolling()>();

        if $z2 == 0 goto label8;

        $z3 = r0.<com.sun.lwuit.Component: boolean dragActivated>;

        if $z3 != 0 goto label1;

        r0.<com.sun.lwuit.Component: boolean dragActivated> = 1;

        r0.<com.sun.lwuit.Component: int lastScrollY> = i1;

        r0.<com.sun.lwuit.Component: int lastScrollX> = i0;

        $r4 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        virtualinvoke $r4.<com.sun.lwuit.Form: void setDraggedComponent(com.sun.lwuit.Component)>(r0);

        virtualinvoke $r4.<com.sun.lwuit.Form: void registerAnimatedInternal(com.sun.lwuit.animations.Animation)>(r0);

        $r5 = virtualinvoke $r4.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

        if $r5 == null goto label1;

        if $r5 == r0 goto label1;

        virtualinvoke $r5.<com.sun.lwuit.Component: void dragInitiated()>();

     label1:
        $z8 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z8 == 0 goto label4;

        $i7 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        i12 = $i7 / 2;

        $z6 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isSmoothScrolling()>();

        if $z6 == 0 goto label2;

        $z7 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isTensileDragEnabled()>();

        if $z7 != 0 goto label3;

     label2:
        i12 = 0;

     label3:
        $i13 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i14 = r0.<com.sun.lwuit.Component: int lastScrollY>;

        $i15 = $i14 - i1;

        $i16 = $i13 + $i15;

        $i17 = neg i12;

        if $i16 < $i17 goto label4;

        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i8 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i9 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i10 = $i8 - $i9;

        $i11 = $i10 + i12;

        if $i16 >= $i11 goto label4;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollY(int)>($i16);

     label4:
        $z9 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z9 == 0 goto label7;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        i18 = $i2 / 2;

        $z4 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isSmoothScrolling()>();

        if $z4 == 0 goto label5;

        $z5 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isTensileDragEnabled()>();

        if $z5 != 0 goto label6;

     label5:
        i18 = 0;

     label6:
        $i19 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i20 = r0.<com.sun.lwuit.Component: int lastScrollX>;

        $i21 = $i20 - i0;

        $i22 = $i19 + $i21;

        $i23 = neg i18;

        if $i22 < $i23 goto label7;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i3 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i4 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i5 = $i3 - $i4;

        $i6 = $i5 + i18;

        if $i22 >= $i6 goto label7;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollX(int)>($i22);

     label7:
        r0.<com.sun.lwuit.Component: int lastScrollY> = i1;

        r0.<com.sun.lwuit.Component: int lastScrollX> = i0;

        goto label9;

     label8:
        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        $z1 = $r1 instanceof com.sun.lwuit.Form;

        if $z1 != 0 goto label9;

        virtualinvoke $r1.<com.sun.lwuit.Component: void pointerDragged(int,int)>(i0, i1);

     label9:
        return;
    }

    private void initScrollMotion()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.animations.Motion $r2;
        com.sun.lwuit.Form $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Form: void registerAnimatedInternal(com.sun.lwuit.animations.Animation)>(r0);

     label1:
        $i0 = r0.<com.sun.lwuit.Component: int initialScrollY>;

        $i1 = r0.<com.sun.lwuit.Component: int destScrollY>;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollAnimationSpeed()>();

        $r2 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createLinearMotion(int,int,int)>($i0, $i1, $i2);

        specialinvoke r0.<com.sun.lwuit.Component: void setAnimationMotion(com.sun.lwuit.animations.Motion)>($r2);

        virtualinvoke $r2.<com.sun.lwuit.animations.Motion: void start()>();

        return;
    }

    public void pointerPressed(int[], int[])
    {
        com.sun.lwuit.Component r0;
        int[] r1, r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r0.<com.sun.lwuit.Component: boolean dragActivated> = 0;

        $i1 = r1[0];

        $i0 = r2[0];

        virtualinvoke r0.<com.sun.lwuit.Component: void pointerPressed(int,int)>($i1, $i0);

        $i2 = r1[0];

        r0.<com.sun.lwuit.Component: int initialPressX> = $i2;

        $i3 = r2[0];

        r0.<com.sun.lwuit.Component: int initialPressY> = $i3;

        return;
    }

    public void pointerPressed(int, int)
    {
        com.sun.lwuit.Component r0;
        int i0, i1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.sun.lwuit.Component: void clearDrag()>();

        return;
    }

    public void pointerReleased(int[], int[])
    {
        com.sun.lwuit.Component r0;
        int[] r1, r2;
        int $i0, $i1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $i1 = r1[0];

        $i0 = r2[0];

        virtualinvoke r0.<com.sun.lwuit.Component: void pointerReleased(int,int)>($i1, $i0);

        return;
    }

    protected void longPointerPress(int, int)
    {
        com.sun.lwuit.Component r0;
        int i0, i1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void pointerReleased(int, int)
    {
        com.sun.lwuit.Component r0;
        int i0, i1;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.sun.lwuit.Component: void pointerReleaseImpl(int,int)>(i0, i1);

        return;
    }

    public void setTensileDragEnabled(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean tensileDragEnabled> = z0;

        return;
    }

    public boolean isTensileDragEnabled()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean tensileDragEnabled>;

        return $z0;
    }

    private void startTensile(int, int)
    {
        com.sun.lwuit.animations.Motion $r1, $r2, $r4, $r5;
        com.sun.lwuit.Form $r3;
        com.sun.lwuit.Component r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<com.sun.lwuit.Component: boolean tensileDragEnabled>;

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createSplineMotion(int,int,int)>(i0, i1, 150);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = $r4;

        $r5 = r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion>;

        virtualinvoke $r5.<com.sun.lwuit.animations.Motion: void start()>();

        goto label2;

     label1:
        $r1 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createLinearMotion(int,int,int)>(i0, i1, 0);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = $r1;

        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion>;

        virtualinvoke $r2.<com.sun.lwuit.animations.Motion: void start()>();

     label2:
        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r3 == null goto label3;

        virtualinvoke $r3.<com.sun.lwuit.Form: void registerAnimatedInternal(com.sun.lwuit.animations.Animation)>(r0);

     label3:
        return;
    }

    private boolean chooseScrollXOrY(int, int)
    {
        com.sun.lwuit.Component r0;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z0 == 0 goto label3;

        if $z1 == 0 goto label3;

        $i1 = r0.<com.sun.lwuit.Component: int initialPressX>;

        $i2 = $i1 - i0;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $i5 = r0.<com.sun.lwuit.Component: int initialPressY>;

        $i6 = $i5 - i4;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        if $i3 <= $i7 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private void pointerReleaseImpl(int, int)
    {
        com.sun.lwuit.animations.Motion $r4, $r5, $r7, $r8, $r12;
        com.sun.lwuit.Component r0;
        byte $b6, $b12;
        boolean $z0, $z1, $z2, $z3;
        float $f0;
        com.sun.lwuit.geom.Dimension $r1, $r3, $r6, $r9, $r10, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, $i29, $i30;
        com.sun.lwuit.Display $r2;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<com.sun.lwuit.Component: boolean dragActivated>;

        if $z0 == 0 goto label12;

        i27 = r0.<com.sun.lwuit.Component: int scrollY>;

        r0.<com.sun.lwuit.Component: boolean dragActivated> = 0;

        $z1 = specialinvoke r0.<com.sun.lwuit.Component: boolean chooseScrollXOrY(int,int)>(i0, i1);

        if $z1 == 0 goto label02;

        i27 = r0.<com.sun.lwuit.Component: int scrollX>;

        if i27 >= 0 goto label01;

        specialinvoke r0.<com.sun.lwuit.Component: void startTensile(int,int)>(i27, 0);

        return;

     label01:
        $r10 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i21 = virtualinvoke $r10.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i22 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i23 = $i21 - $i22;

        if i27 <= $i23 goto label04;

        $r11 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i24 = virtualinvoke $r11.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i25 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i26 = $i24 - $i25;

        specialinvoke r0.<com.sun.lwuit.Component: void startTensile(int,int)>(i27, $i26);

        return;

     label02:
        if i27 >= 0 goto label03;

        specialinvoke r0.<com.sun.lwuit.Component: void startTensile(int,int)>(i27, 0);

        return;

     label03:
        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i2 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i4 = $i2 - $i3;

        if i27 <= $i4 goto label04;

        $r9 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i18 = virtualinvoke $r9.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i19 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i20 = $i18 - $i19;

        specialinvoke r0.<com.sun.lwuit.Component: void startTensile(int,int)>(i27, $i20);

        return;

     label04:
        $r2 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        if $z1 != 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $f0 = virtualinvoke $r2.<com.sun.lwuit.Display: float getDragSpeed(boolean)>($z3);

        $i5 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        i28 = $i5 / 2;

        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isTensileDragEnabled()>();

        if $z2 != 0 goto label07;

        i28 = 0;

     label07:
        if $z1 != 0 goto label09;

        $b12 = $f0 cmpg 0.0F;

        $i29 = (int) $b12;

        if $i29 >= 0 goto label08;

        $i17 = neg i28;

        $r8 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createFrictionMotion(int,int,float,float)>(i27, $i17, $f0, 4.0E-4F);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = $r8;

        goto label11;

     label08:
        $r6 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i13 = virtualinvoke $r6.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i14 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i15 = $i13 - $i14;

        $i16 = $i15 + i28;

        $r7 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createFrictionMotion(int,int,float,float)>(i27, $i16, $f0, 4.0E-4F);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = $r7;

        goto label11;

     label09:
        $b6 = $f0 cmpg 0.0F;

        $i30 = (int) $b6;

        if $i30 >= 0 goto label10;

        $i11 = neg i28;

        $r5 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createFrictionMotion(int,int,float,float)>(i27, $i11, $f0, 4.0E-4F);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = $r5;

        goto label11;

     label10:
        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i7 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i8 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i9 = $i7 - $i8;

        $i10 = $i9 + i28;

        $r4 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createFrictionMotion(int,int,float,float)>(i27, $i10, $f0, 4.0E-4F);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = $r4;

     label11:
        $r12 = r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion>;

        virtualinvoke $r12.<com.sun.lwuit.animations.Motion: void start()>();

     label12:
        return;
    }

    public com.sun.lwuit.plaf.Style getStyle()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r3, $r4;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.Display $r2;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.sun.lwuit.Component: void initStyle()>();

     label1:
        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean hasFocus()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isFocusPainted()>();

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z2 = virtualinvoke $r2.<com.sun.lwuit.Display: boolean shouldRenderSelection()>();

        if $z2 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        return $r3;

     label2:
        $r4 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        return $r4;
    }

    public com.sun.lwuit.plaf.Style getUnselectedStyle()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r2;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.sun.lwuit.Component: void initStyle()>();

     label1:
        $r2 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        return $r2;
    }

    public com.sun.lwuit.plaf.Style getSelectedStyle()
    {
        com.sun.lwuit.plaf.UIManager $r2;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r4, $r5, $r6, $r9, $r10;
        com.sun.lwuit.Component$BGPainter $r8;
        java.lang.String $r3;
        com.sun.lwuit.Painter $r7;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: java.lang.String getUIID()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.Style getComponentSelectedStyle(java.lang.String)>($r3);

        r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle> = $r4;

        $r5 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        virtualinvoke $r5.<com.sun.lwuit.plaf.Style: void addStyleListener(com.sun.lwuit.events.StyleListener)>(r0);

        $r6 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        $r7 = virtualinvoke $r6.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        if $r7 != null goto label1;

        $r9 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        $r8 = new com.sun.lwuit.Component$BGPainter;

        specialinvoke $r8.<com.sun.lwuit.Component$BGPainter: void <init>(com.sun.lwuit.Component)>(r0);

        virtualinvoke $r9.<com.sun.lwuit.plaf.Style: void setBgPainter(com.sun.lwuit.Painter)>($r8);

     label1:
        $r10 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        return $r10;
    }

    public void setStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.plaf.Style;

        virtualinvoke r0.<com.sun.lwuit.Component: void setUnSelectedStyle(com.sun.lwuit.plaf.Style)>(r1);

        return;
    }

    public void setUnSelectedStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.plaf.Style;

        virtualinvoke r0.<com.sun.lwuit.Component: void setUnselectedStyle(com.sun.lwuit.plaf.Style)>(r1);

        return;
    }

    public void setUnselectedStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, r2, $r3, $r4, $r7, $r8;
        com.sun.lwuit.Component$BGPainter $r6;
        com.sun.lwuit.Painter $r5;

        r0 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: com.sun.lwuit.plaf.Style;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        if $r1 == null goto label1;

        $r8 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        virtualinvoke $r8.<com.sun.lwuit.plaf.Style: void removeStyleListener(com.sun.lwuit.events.StyleListener)>(r0);

     label1:
        r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle> = r2;

        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        virtualinvoke $r3.<com.sun.lwuit.plaf.Style: void addStyleListener(com.sun.lwuit.events.StyleListener)>(r0);

        $r4 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        if $r5 != null goto label2;

        $r7 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style unSelectedStyle>;

        $r6 = new com.sun.lwuit.Component$BGPainter;

        specialinvoke $r6.<com.sun.lwuit.Component$BGPainter: void <init>(com.sun.lwuit.Component)>(r0);

        virtualinvoke $r7.<com.sun.lwuit.plaf.Style: void setBgPainter(com.sun.lwuit.Painter)>($r6);

     label2:
        virtualinvoke r0.<com.sun.lwuit.Component: void setShouldCalcPreferredSize(boolean)>(1);

        virtualinvoke r0.<com.sun.lwuit.Component: void checkAnimation()>();

        return;
    }

    public void setSelectedStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, r2, $r3, $r4, $r7, $r8;
        com.sun.lwuit.Component$BGPainter $r6;
        com.sun.lwuit.Painter $r5;

        r0 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: com.sun.lwuit.plaf.Style;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        if $r1 == null goto label1;

        $r8 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        virtualinvoke $r8.<com.sun.lwuit.plaf.Style: void removeStyleListener(com.sun.lwuit.events.StyleListener)>(r0);

     label1:
        r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle> = r2;

        $r3 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        virtualinvoke $r3.<com.sun.lwuit.plaf.Style: void addStyleListener(com.sun.lwuit.events.StyleListener)>(r0);

        $r4 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        if $r5 != null goto label2;

        $r7 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        $r6 = new com.sun.lwuit.Component$BGPainter;

        specialinvoke $r6.<com.sun.lwuit.Component$BGPainter: void <init>(com.sun.lwuit.Component)>(r0);

        virtualinvoke $r7.<com.sun.lwuit.plaf.Style: void setBgPainter(com.sun.lwuit.Painter)>($r6);

     label2:
        virtualinvoke r0.<com.sun.lwuit.Component: void setShouldCalcPreferredSize(boolean)>(1);

        virtualinvoke r0.<com.sun.lwuit.Component: void checkAnimation()>();

        return;
    }

    public void requestFocus()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Form $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Form: void requestFocus(com.sun.lwuit.Component)>(r0);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        com.sun.lwuit.Component r0;
        int $i0, $i1;
        java.lang.Class $r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9;
        java.lang.String $r2, $r3, $r7, $r10;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke r0.<com.sun.lwuit.Component: java.lang.String paramString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    protected java.lang.String paramString()
    {
        com.sun.lwuit.Component r2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r2 := @this: com.sun.lwuit.Component;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x=");

        $i0 = virtualinvoke r2.<com.sun.lwuit.Component: int getX()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y=");

        $i1 = virtualinvoke r2.<com.sun.lwuit.Component: int getY()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" width=");

        $i2 = virtualinvoke r2.<com.sun.lwuit.Component: int getWidth()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height=");

        $i3 = virtualinvoke r2.<com.sun.lwuit.Component: int getHeight()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void refreshTheme()
    {
        com.sun.lwuit.Component r0;
        java.lang.String $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: java.lang.String getUIID()>();

        virtualinvoke r0.<com.sun.lwuit.Component: void refreshTheme(java.lang.String)>($r1);

        return;
    }

    protected void refreshTheme(java.lang.String)
    {
        com.sun.lwuit.plaf.UIManager $r2, $r7, $r10;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r4, $r5, $r6, $r9, $r11, $r12;
        com.sun.lwuit.plaf.LookAndFeel $r8;
        java.lang.String r3;

        r0 := @this: com.sun.lwuit.Component;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        $r2 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.Style getComponentStyle(java.lang.String)>(r3);

        $r5 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style mergeStyle(com.sun.lwuit.plaf.Style,com.sun.lwuit.plaf.Style)>($r1, $r4);

        virtualinvoke r0.<com.sun.lwuit.Component: void setUnSelectedStyle(com.sun.lwuit.plaf.Style)>($r5);

        $r6 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        if $r6 == null goto label1;

        $r9 = r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style selectedStyle>;

        $r10 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r11 = virtualinvoke $r10.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.Style getComponentSelectedStyle(java.lang.String)>(r3);

        $r12 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style mergeStyle(com.sun.lwuit.plaf.Style,com.sun.lwuit.plaf.Style)>($r9, $r11);

        virtualinvoke r0.<com.sun.lwuit.Component: void setSelectedStyle(com.sun.lwuit.plaf.Style)>($r12);

     label1:
        virtualinvoke r0.<com.sun.lwuit.Component: void checkAnimation()>();

        $r7 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r8.<com.sun.lwuit.plaf.LookAndFeel: void bind(com.sun.lwuit.Component)>(r0);

        return;
    }

    com.sun.lwuit.plaf.Style mergeStyle(com.sun.lwuit.plaf.Style, com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.Component r2;
        com.sun.lwuit.plaf.Style r0, r1;
        boolean $z0;

        r2 := @this: com.sun.lwuit.Component;

        r0 := @parameter0: com.sun.lwuit.plaf.Style;

        r1 := @parameter1: com.sun.lwuit.plaf.Style;

        $z0 = virtualinvoke r0.<com.sun.lwuit.plaf.Style: boolean isModified()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.sun.lwuit.plaf.Style: void merge(com.sun.lwuit.plaf.Style)>(r1);

        return r0;

     label1:
        return r1;
    }

    protected boolean isDragActivated()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean dragActivated>;

        return $z0;
    }

    void setDragActivated(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean dragActivated> = z0;

        return;
    }

    void checkAnimation()
    {
        com.sun.lwuit.Form $r5, $r6;
        com.sun.lwuit.Image $r2;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r3;
        com.sun.lwuit.Painter $r4;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Image getBgImage()>();

        if $r2 == null goto label2;

        $z1 = virtualinvoke $r2.<com.sun.lwuit.Image: boolean isAnimation()>();

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r6 == null goto label1;

        virtualinvoke $r6.<com.sun.lwuit.Form: void registerAnimated(com.sun.lwuit.animations.Animation)>(r0);

     label1:
        goto label3;

     label2:
        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        $z0 = $r4 instanceof com.sun.lwuit.animations.Animation;

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r5 == null goto label3;

        virtualinvoke $r5.<com.sun.lwuit.Form: void registerAnimated(com.sun.lwuit.animations.Animation)>(r0);

     label3:
        return;
    }

    void deregisterAnimatedInternal()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Form $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Form: void deregisterAnimatedInternal(com.sun.lwuit.animations.Animation)>(r0);

     label1:
        return;
    }

    public boolean animate()
    {
        com.sun.lwuit.animations.Motion $r5, $r9, $r10, $r15, $r16;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r3;
        com.sun.lwuit.animations.Animation $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11;
        com.sun.lwuit.Painter $r4;
        com.sun.lwuit.geom.Rectangle $r8;
        com.sun.lwuit.geom.Dimension $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i27, $i29;
        com.sun.lwuit.StaticAnimation $r7;
        com.sun.lwuit.Image $r2;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Image getBgImage()>();

        if $r2 == null goto label01;

        $z6 = virtualinvoke $r2.<com.sun.lwuit.Image: boolean isAnimation()>();

        if $z6 == 0 goto label01;

        $z7 = virtualinvoke $r2.<com.sun.lwuit.Image: boolean animate()>();

        if $z7 == 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z9 = $z8;

        $r15 = specialinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion getAnimationMotion()>();

        if $r15 == null goto label04;

        $i18 = r0.<com.sun.lwuit.Component: int destScrollY>;

        $i25 = (int) -1;

        if $i18 == $i25 goto label04;

        $i19 = r0.<com.sun.lwuit.Component: int destScrollY>;

        $i20 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        if $i19 == $i20 goto label04;

        $i21 = virtualinvoke $r15.<com.sun.lwuit.animations.Motion: int getValue()>();

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollY(int)>($i21);

        $i23 = r0.<com.sun.lwuit.Component: int destScrollY>;

        $i22 = r0.<com.sun.lwuit.Component: int scrollY>;

        if $i23 != $i22 goto label03;

        $i27 = (int) -1;

        r0.<com.sun.lwuit.Component: int destScrollY> = $i27;

        virtualinvoke r0.<com.sun.lwuit.Component: void deregisterAnimatedInternal()>();

     label03:
        return 1;

     label04:
        $r16 = r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion>;

        if $r16 == null goto label11;

        $r9 = r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion>;

        $i5 = virtualinvoke $r9.<com.sun.lwuit.animations.Motion: int getValue()>();

        $r10 = r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion>;

        $z4 = virtualinvoke $r10.<com.sun.lwuit.animations.Motion: boolean isFinished()>();

        if $z4 == 0 goto label09;

        if $i5 >= 0 goto label05;

        specialinvoke r0.<com.sun.lwuit.Component: void startTensile(int,int)>($i5, 0);

        goto label09;

     label05:
        $z5 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z5 == 0 goto label07;

        $r13 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i12 = virtualinvoke $r13.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i13 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i14 = $i12 - $i13;

        if $i5 <= $i14 goto label06;

        $r14 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i15 = virtualinvoke $r14.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i16 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i17 = $i15 - $i16;

        specialinvoke r0.<com.sun.lwuit.Component: void startTensile(int,int)>($i5, $i17);

        goto label09;

     label06:
        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = null;

        goto label09;

     label07:
        $r11 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i6 = virtualinvoke $r11.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i7 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i8 = $i6 - $i7;

        if $i5 <= $i8 goto label08;

        $r12 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i9 = virtualinvoke $r12.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i10 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i11 = $i9 - $i10;

        specialinvoke r0.<com.sun.lwuit.Component: void startTensile(int,int)>($i5, $i11);

        goto label09;

     label08:
        r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion> = null;

     label09:
        $z10 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z10 == 0 goto label10;

        r0.<com.sun.lwuit.Component: int scrollY> = $i5;

        return 1;

     label10:
        r0.<com.sun.lwuit.Component: int scrollX> = $i5;

        return 1;

     label11:
        if z9 == 0 goto label13;

        $z3 = $r2 instanceof com.sun.lwuit.StaticAnimation;

        if $z3 == 0 goto label16;

        $r7 = (com.sun.lwuit.StaticAnimation) $r2;

        $r8 = virtualinvoke $r7.<com.sun.lwuit.StaticAnimation: com.sun.lwuit.geom.Rectangle getDirtyRegion()>();

        if $r8 == null goto label12;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteX()>();

        virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: void setX(int)>($i1);

        $i2 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i3 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i4 = $i2 + $i3;

        virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: void setY(int)>($i4);

     label12:
        virtualinvoke r0.<com.sun.lwuit.Component: void setDirtyRegion(com.sun.lwuit.geom.Rectangle)>($r8);

        goto label16;

     label13:
        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        if $r4 == null goto label14;

        $z1 = $r4 instanceof com.sun.lwuit.animations.Animation;

        if $z1 == 0 goto label14;

        $r6 = (com.sun.lwuit.animations.Animation) $r4;

        $z2 = interfaceinvoke $r6.<com.sun.lwuit.animations.Animation: boolean animate()>();

        if $z2 == 0 goto label14;

        $z11 = 1;

        goto label15;

     label14:
        $z11 = 0;

     label15:
        z9 = $z11;

     label16:
        if z9 != 0 goto label17;

        $i0 = r0.<com.sun.lwuit.Component: int destScrollY>;

        $i29 = (int) -1;

        if $i0 != $i29 goto label17;

        if z9 != 0 goto label17;

        if $r15 != null goto label17;

        $r5 = r0.<com.sun.lwuit.Component: com.sun.lwuit.animations.Motion draggedMotion>;

        if $r5 != null goto label17;

        $z0 = r0.<com.sun.lwuit.Component: boolean dragActivated>;

        if $z0 != 0 goto label17;

        virtualinvoke r0.<com.sun.lwuit.Component: void tryDeregisterAnimated()>();

     label17:
        return z9;
    }

    void tryDeregisterAnimated()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        virtualinvoke r0.<com.sun.lwuit.Component: void deregisterAnimatedInternal()>();

        return;
    }

    protected void scrollRectToVisible(com.sun.lwuit.geom.Rectangle, com.sun.lwuit.Component)
    {
        com.sun.lwuit.geom.Rectangle r1;
        com.sun.lwuit.Component r0, r4;
        com.sun.lwuit.geom.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.geom.Rectangle;

        r4 := @parameter1: com.sun.lwuit.Component;

        $i0 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $r2 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i2 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r3 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i3 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        virtualinvoke r0.<com.sun.lwuit.Component: void scrollRectToVisible(int,int,int,int,com.sun.lwuit.Component)>($i0, $i1, $i2, $i3, r4);

        return;
    }

    protected void scrollRectToVisible(int, int, int, int, com.sun.lwuit.Component)
    {
        com.sun.lwuit.plaf.Style $r2;
        com.sun.lwuit.Component r0, r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.sun.lwuit.geom.Rectangle r6, $r8, $r9;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, i7, $i8, i9, i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, $i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i53, i54, i55, $i57;
        com.sun.lwuit.Container $r1, r7;

        r0 := @this: com.sun.lwuit.Component;

        i2 := @parameter0: int;

        i7 := @parameter1: int;

        i9 := @parameter2: int;

        i10 := @parameter3: int;

        r4 := @parameter4: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollable()>();

        if $z0 == 0 goto label16;

        i53 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $i12 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isRTL()>();

        $i13 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 1);

        $i14 = $i12 - $i13;

        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isRTL()>();

        $i15 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z2, 3);

        i16 = $i14 - $i15;

        $i17 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i18 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i19 = $i17 - $i18;

        $i20 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        i21 = $i19 - $i20;

        $z3 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isSmoothScrolling()>();

        if $z3 == 0 goto label01;

        $i50 = r0.<com.sun.lwuit.Component: int destScrollY>;

        $i57 = (int) -1;

        if $i50 <= $i57 goto label01;

        $r8 = new com.sun.lwuit.geom.Rectangle;

        $i51 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i52 = r0.<com.sun.lwuit.Component: int destScrollY>;

        specialinvoke $r8.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>($i51, $i52, i16, i21);

        r6 = $r8;

        goto label02;

     label01:
        $r9 = new com.sun.lwuit.geom.Rectangle;

        $i22 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i23 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        specialinvoke $r9.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>($i22, $i23, i16, i21);

        r6 = $r9;

     label02:
        i54 = i2;

        i55 = i7;

        r7 = null;

        if r4 == null goto label03;

        r7 = virtualinvoke r4.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

     label03:
        if r7 != r0 goto label04;

        $z6 = virtualinvoke r6.<com.sun.lwuit.geom.Rectangle: boolean contains(int,int,int,int)>(i2, i7, i9, i10);

        if $z6 == 0 goto label07;

        return;

     label04:
        if r7 == r0 goto label06;

        if r7 != null goto label05;

        i54 = i2;

        i55 = i7;

        goto label06;

     label05:
        $i48 = virtualinvoke r7.<com.sun.lwuit.Container: int getX()>();

        i54 = i54 + $i48;

        $i49 = virtualinvoke r7.<com.sun.lwuit.Container: int getY()>();

        i55 = i55 + $i49;

        r7 = virtualinvoke r7.<com.sun.lwuit.Container: com.sun.lwuit.Container getParent()>();

        goto label04;

     label06:
        $z4 = virtualinvoke r6.<com.sun.lwuit.geom.Rectangle: boolean contains(int,int,int,int)>(i54, i55, i9, i10);

        if $z4 == 0 goto label07;

        return;

     label07:
        $z5 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z5 == 0 goto label10;

        $i38 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        if $i38 <= i54 goto label08;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollX(int)>(i54);

     label08:
        $i47 = i54 + i9;

        $i39 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i40 = $i39 + i16;

        if $i40 >= $i47 goto label09;

        $i42 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i43 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i44 = $i43 + i16;

        $i45 = $i47 - $i44;

        $i46 = $i42 + $i45;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollX(int)>($i46);

        goto label10;

     label09:
        $i41 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        if $i41 <= i54 goto label10;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollX(int)>(i54);

     label10:
        $z7 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z7 == 0 goto label15;

        $i24 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        if $i24 <= i55 goto label11;

        i53 = i55;

     label11:
        $i25 = i55 + i10;

        $i26 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(int)>(0);

        $i27 = $i25 - $i26;

        $i28 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(int)>(2);

        $i37 = $i27 - $i28;

        $i29 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i30 = $i29 + i21;

        if $i30 >= $i37 goto label12;

        $i33 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i34 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i35 = $i34 + i21;

        $i36 = $i37 - $i35;

        i53 = $i33 + $i36;

        goto label13;

     label12:
        $i31 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        if $i31 <= i55 goto label13;

        i53 = i55;

     label13:
        $z8 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isSmoothScrolling()>();

        if $z8 == 0 goto label14;

        $i32 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        r0.<com.sun.lwuit.Component: int initialScrollY> = $i32;

        r0.<com.sun.lwuit.Component: int destScrollY> = i53;

        specialinvoke r0.<com.sun.lwuit.Component: void initScrollMotion()>();

        goto label15;

     label14:
        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollY(int)>(i53);

     label15:
        virtualinvoke r0.<com.sun.lwuit.Component: void repaint()>();

        goto label17;

     label16:
        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r1 == null goto label17;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.Container: int getAbsoluteX()>();

        $i3 = $i0 - $i1;

        $i4 = $i3 + i2;

        $i5 = virtualinvoke r0.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i6 = virtualinvoke $r1.<com.sun.lwuit.Container: int getAbsoluteY()>();

        $i8 = $i5 - $i6;

        $i11 = $i8 + i7;

        virtualinvoke $r1.<com.sun.lwuit.Container: void scrollRectToVisible(int,int,int,int,com.sun.lwuit.Component)>($i4, $i11, i9, i10, $r1);

     label17:
        return;
    }

    public void setBorderPainted(boolean)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r3;
        com.sun.lwuit.plaf.Border $r2;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        virtualinvoke $r3.<com.sun.lwuit.plaf.Style: void setBorder(com.sun.lwuit.plaf.Border)>(null);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border getDefaultBorder()>();

        virtualinvoke $r1.<com.sun.lwuit.plaf.Style: void setBorder(com.sun.lwuit.plaf.Border)>($r2);

     label2:
        return;
    }

    public boolean isBorderPainted()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1;
        com.sun.lwuit.plaf.Border $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.plaf.Border getBorder()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void paintBorder(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r3;
        int $i0;
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.plaf.Border $r1;

        r0 := @this: com.sun.lwuit.Component;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Border getBorder()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r2.<com.sun.lwuit.Graphics: void setColor(int)>($i0);

        virtualinvoke $r1.<com.sun.lwuit.plaf.Border: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r2, r0);

     label1:
        return;
    }

    public void setCellRenderer(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean cellRenderer> = z0;

        return;
    }

    boolean isCellRenderer()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean cellRenderer>;

        return $z0;
    }

    public boolean isScrollVisible()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean isScrollVisible>;

        return $z0;
    }

    public void setIsScrollVisible(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean isScrollVisible> = z0;

        return;
    }

    void initComponentImpl()
    {
        com.sun.lwuit.plaf.UIManager $r1;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r3;
        com.sun.lwuit.plaf.LookAndFeel $r2;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean initialized>;

        if $z0 != 0 goto label2;

        r0.<com.sun.lwuit.Component: boolean initialized> = 1;

        virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r1 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r2.<com.sun.lwuit.plaf.LookAndFeel: void bind(com.sun.lwuit.Component)>(r0);

        virtualinvoke r0.<com.sun.lwuit.Component: void checkAnimation()>();

        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isRTL()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z2 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollX(int)>($i0);

     label1:
        virtualinvoke r0.<com.sun.lwuit.Component: void initComponent()>();

     label2:
        return;
    }

    void deinitializeImpl()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.sun.lwuit.Component: void setInitialized(boolean)>(0);

        virtualinvoke r0.<com.sun.lwuit.Component: void setDirtyRegion(com.sun.lwuit.geom.Rectangle)>(null);

        virtualinvoke r0.<com.sun.lwuit.Component: void deinitialize()>();

     label1:
        return;
    }

    protected void laidOut()
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.geom.Dimension $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z0 == 0 goto label1;

        $i8 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        if $i8 <= 0 goto label1;

        $i9 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollY()>();

        $i10 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i11 = $i9 + $i10;

        $r3 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i12 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        if $i11 <= $i12 goto label1;

        $r4 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i13 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i14 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $i15 = $i13 - $i14;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollY(int)>($i15);

     label1:
        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z2 == 0 goto label2;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        if $i0 <= 0 goto label2;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getScrollX()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i3 = $i1 + $i2;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i4 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        if $i3 <= $i4 goto label2;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i5 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i6 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i7 = $i5 - $i6;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollX(int)>($i7);

     label2:
        $z3 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableY()>();

        if $z3 != 0 goto label3;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollY(int)>(0);

     label3:
        $z1 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isScrollableX()>();

        if $z1 != 0 goto label4;

        virtualinvoke r0.<com.sun.lwuit.Component: void setScrollX(int)>(0);

     label4:
        return;
    }

    protected void deinitialize()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return;
    }

    protected void initComponent()
    {
        com.sun.lwuit.Component r0;

        r0 := @this: com.sun.lwuit.Component;

        return;
    }

    protected boolean isInitialized()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean initialized>;

        return $z0;
    }

    protected void setInitialized(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean initialized> = z0;

        return;
    }

    public void styleChanged(java.lang.String, com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.Form $r4;
        com.sun.lwuit.Container $r5;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style r1, $r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.sun.lwuit.Component;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: com.sun.lwuit.plaf.Style;

        $z0 = r0.<com.sun.lwuit.Component: boolean shouldCalcPreferredSize>;

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        if r1 != $r2 goto label2;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("font");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("margin");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("padding");

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<com.sun.lwuit.Component: void setShouldCalcPreferredSize(boolean)>(1);

        $r5 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r5 == null goto label2;

        $r4 = virtualinvoke $r5.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        if $r4 == null goto label2;

        virtualinvoke $r5.<com.sun.lwuit.Container: void revalidate()>();

     label2:
        return;
    }

    public com.sun.lwuit.Component getNextFocusDown()
    {
        com.sun.lwuit.Component r0, $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Component nextFocusDown>;

        return $r1;
    }

    public void setNextFocusDown(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0, r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Component;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.Component nextFocusDown> = r1;

        return;
    }

    public com.sun.lwuit.Component getNextFocusUp()
    {
        com.sun.lwuit.Component r0, $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Component nextFocusUp>;

        return $r1;
    }

    public void setNextFocusUp(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0, r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Component;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.Component nextFocusUp> = r1;

        return;
    }

    public com.sun.lwuit.Component getNextFocusLeft()
    {
        com.sun.lwuit.Component r0, $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Component nextFocusLeft>;

        return $r1;
    }

    public void setNextFocusLeft(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0, r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Component;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.Component nextFocusLeft> = r1;

        return;
    }

    public com.sun.lwuit.Component getNextFocusRight()
    {
        com.sun.lwuit.Component r0, $r1;

        r0 := @this: com.sun.lwuit.Component;

        $r1 = r0.<com.sun.lwuit.Component: com.sun.lwuit.Component nextFocusRight>;

        return $r1;
    }

    public void setNextFocusRight(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0, r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: com.sun.lwuit.Component;

        r0.<com.sun.lwuit.Component: com.sun.lwuit.Component nextFocusRight> = r1;

        return;
    }

    public boolean isEnabled()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean enabled>;

        return $z0;
    }

    void onEditComplete(java.lang.String)
    {
        com.sun.lwuit.Component r0;
        java.lang.String r1;

        r0 := @this: com.sun.lwuit.Component;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void setEnabled(boolean)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.Form $r1;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean enabled> = z0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Form: void clearFocusVectors()>();

        virtualinvoke r0.<com.sun.lwuit.Component: void repaint()>();

     label1:
        return;
    }

    protected void initCustomStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.plaf.Style r0;
        com.sun.lwuit.Component$BGPainter $r3;
        com.sun.lwuit.Painter $r2;

        r1 := @this: com.sun.lwuit.Component;

        r0 := @parameter0: com.sun.lwuit.plaf.Style;

        virtualinvoke r0.<com.sun.lwuit.plaf.Style: void addStyleListener(com.sun.lwuit.events.StyleListener)>(r1);

        $r2 = virtualinvoke r0.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        if $r2 != null goto label1;

        $r3 = new com.sun.lwuit.Component$BGPainter;

        specialinvoke $r3.<com.sun.lwuit.Component$BGPainter: void <init>(com.sun.lwuit.Component)>(r1);

        virtualinvoke r0.<com.sun.lwuit.plaf.Style: void setBgPainter(com.sun.lwuit.Painter)>($r3);

     label1:
        return;
    }

    protected void deinitializeCustomStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.plaf.Style r0;

        r1 := @this: com.sun.lwuit.Component;

        r0 := @parameter0: com.sun.lwuit.plaf.Style;

        virtualinvoke r0.<com.sun.lwuit.plaf.Style: void removeStyleListener(com.sun.lwuit.events.StyleListener)>(r1);

        return;
    }

    public boolean isRTL()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean rtl>;

        return $z0;
    }

    public void setRTL(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean rtl> = z0;

        return;
    }

    protected boolean isTactileTouch(int, int)
    {
        com.sun.lwuit.Component r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isTactileTouch()>();

        return $z0;
    }

    public boolean isTactileTouch()
    {
        com.sun.lwuit.Component r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.Component: boolean tactileTouch>;

        return $z0;
    }

    public void setTactileTouch(boolean)
    {
        com.sun.lwuit.Component r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Component;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Component: boolean tactileTouch> = z0;

        return;
    }

    public static void <clinit>()
    {
        <com.sun.lwuit.Component: int RIGHT> = 3;

        <com.sun.lwuit.Component: int BOTTOM> = 2;

        <com.sun.lwuit.Component: int LEFT> = 1;

        <com.sun.lwuit.Component: int TOP> = 0;

        <com.sun.lwuit.Component: int CENTER> = 4;

        <com.sun.lwuit.Component: int BRB_OTHER> = 4;

        <com.sun.lwuit.Component: int BRB_CENTER_OFFSET> = 3;

        <com.sun.lwuit.Component: int BRB_CONSTANT_DESCENT> = 2;

        <com.sun.lwuit.Component: int BRB_CONSTANT_ASCENT> = 1;

        return;
    }
}
