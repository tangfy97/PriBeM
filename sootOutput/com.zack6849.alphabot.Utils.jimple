public class com.zack6849.alphabot.Utils extends java.lang.Object
{
    public static final java.util.HashMap userNickServMap;
    public static java.util.HashMap userLockMap;

    public void <init>()
    {
        com.zack6849.alphabot.Utils r0;

        r0 := @this: com.zack6849.alphabot.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void sendNotice(org.pircbotx.User, java.lang.String)
    {
        java.lang.String r1;
        org.pircbotx.PircBotX $r2;
        org.pircbotx.User r0;

        r0 := @parameter0: org.pircbotx.User;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.zack6849.alphabot.Bot: org.pircbotx.PircBotX bot>;

        virtualinvoke $r2.<org.pircbotx.PircBotX: void sendNotice(org.pircbotx.User,java.lang.String)>(r0, r1);

        return;
    }

    public static boolean isAdmin(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList ADMINS>;

        $r2 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getAccount(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    public static java.lang.String removeBrackets(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[\\[\'\']|[\'\\]\'\']", "");

        return $r1;
    }

    public static java.lang.String google(java.lang.String)
    {
        com.google.gson.JsonObject $r18, $r19, $r22;
        java.net.URL $r4;
        com.google.gson.Gson $r15;
        java.util.logging.Logger $r49;
        com.google.gson.JsonArray $r20;
        java.lang.StringBuilder $r6, $r8, $r9, $r38, $r39, $r40, $r42, $r43, $r44, $r45;
        java.lang.Object[] $r0, $r23;
        com.google.gson.JsonParser $r16;
        java.util.logging.Level $r50;
        com.google.gson.JsonElement $r17, $r21, $r24, $r28, $r34;
        java.net.URLConnection $r5;
        java.lang.String r1, $r2, $r3, $r10, $r14, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r41, $r48, r51;
        java.io.PrintStream $r7;
        java.io.IOException $r46;
        java.io.InputStreamReader $r12;
        java.lang.Class $r47;
        java.io.BufferedReader $r11;
        java.io.InputStream $r13;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>(r1);

        $r0[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("https://ajax.googleapis.com/ajax/services/search/web?v=1.0&q=%s", $r0);

        $r4 = new java.net.URL;

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

        virtualinvoke $r5.<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17");

        $r11 = new java.io.BufferedReader;

        $r12 = new java.io.InputStreamReader;

        $r13 = virtualinvoke $r5.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r13);

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r12);

        r51 = "";

     label2:
        $r14 = virtualinvoke $r11.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r14 == null goto label3;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label3:
        virtualinvoke $r11.<java.io.BufferedReader: void close()>();

        $r15 = new com.google.gson.Gson;

        specialinvoke $r15.<com.google.gson.Gson: void <init>()>();

        $r16 = new com.google.gson.JsonParser;

        specialinvoke $r16.<com.google.gson.JsonParser: void <init>()>();

        $r17 = virtualinvoke $r16.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>(r51);

        $r18 = virtualinvoke $r17.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r19 = virtualinvoke $r18.<com.google.gson.JsonObject: com.google.gson.JsonObject getAsJsonObject(java.lang.String)>("responseData");

        $r20 = virtualinvoke $r19.<com.google.gson.JsonObject: com.google.gson.JsonArray getAsJsonArray(java.lang.String)>("results");

        $r21 = virtualinvoke $r20.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(0);

        $r22 = virtualinvoke $r21.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r23 = newarray (java.lang.Object)[3];

        $r24 = virtualinvoke $r22.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("titleNoFormatting");

        $r25 = virtualinvoke $r24.<com.google.gson.JsonElement: java.lang.String toString()>();

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\"", "");

        $r27 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String unescapeHtml(java.lang.String)>($r26);

        $r23[0] = $r27;

        $r28 = virtualinvoke $r22.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("content");

        $r29 = virtualinvoke $r28.<com.google.gson.JsonElement: java.lang.String toString()>();

        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s+", " ");

        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\<.*?>", "");

        $r32 = virtualinvoke $r31.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\"", "");

        $r33 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String unescapeHtml(java.lang.String)>($r32);

        $r23[1] = $r33;

        $r34 = virtualinvoke $r22.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("url");

        $r35 = virtualinvoke $r34.<com.google.gson.JsonElement: java.lang.String toString()>();

        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\"", "");

        $r23[2] = $r36;

        $r37 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Google: %s | %s | (%s)", $r23);

        if $r37 == null goto label5;

     label4:
        return $r37;

     label5:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No results found for query ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        return $r41;

     label7:
        $r46 := @caughtexception;

        $r47 = class "Lcom/zack6849/alphabot/Utils;";

        $r48 = virtualinvoke $r47.<java.lang.Class: java.lang.String getName()>();

        $r49 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r48);

        $r50 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r49.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r50, null, $r46);

        return null;

        catch java.io.IOException from label1 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public static boolean checkAccount(java.lang.String)
    {
        java.net.URL $r0;
        java.io.IOException $r11;
        java.io.InputStreamReader $r7;
        java.lang.Boolean $r10;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String r3, $r5, $r9;
        java.io.BufferedReader $r6;
        java.io.InputStream $r8;
        boolean z0;

        r3 := @parameter0: java.lang.String;

        z0 = 0;

     label1:
        $r0 = new java.net.URL;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://minecraft.net/haspaid.jsp?user=");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>($r5);

        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        $r8 = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r8);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        $r9 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

        if $r9 == null goto label2;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9);

        z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

     label4:
        return z0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String getAccount(org.pircbotx.User)
    {
        java.lang.String $r1, $r2;
        org.pircbotx.User r0;

        r0 := @parameter0: org.pircbotx.User;

        $r1 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r2 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getAccount(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String getAccount(java.lang.String)
    {
        org.pircbotx.PircBotX $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r28;
        java.lang.StringBuilder $r10, $r12, $r13, $r14;
        java.lang.Throwable $r26, $r27, $r29;
        java.util.HashMap $r0, $r2, $r3, $r4, $r7, $r8, $r16, $r17, $r18, $r21, $r23, $r24;
        int i0;
        java.lang.String r1, $r6, $r15, $r20;
        java.lang.Object $r5, $r9, $r19, $r22, $r25;

        r1 := @parameter0: java.lang.String;

        $r0 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        entermonitor $r0;

     label01:
        $r2 = <com.zack6849.alphabot.Utils: java.util.HashMap userLockMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label06;

        $r24 = <com.zack6849.alphabot.Utils: java.util.HashMap userLockMap>;

        $r25 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        entermonitor $r25;

     label02:
        exitmonitor $r25;

     label03:
        goto label06;

     label04:
        $r29 := @caughtexception;

        exitmonitor $r25;

     label05:
        throw $r29;

     label06:
        $r3 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $z1 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label21;

        $r7 = <com.zack6849.alphabot.Utils: java.util.HashMap userLockMap>;

        $z2 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z2 != 0 goto label07;

        $r23 = <com.zack6849.alphabot.Utils: java.util.HashMap userLockMap>;

        $r22 = new java.lang.Object;

        specialinvoke $r22.<java.lang.Object: void <init>()>();

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r22);

     label07:
        $r8 = <com.zack6849.alphabot.Utils: java.util.HashMap userLockMap>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        entermonitor $r9;

     label08:
        $r11 = <com.zack6849.alphabot.Bot: org.pircbotx.PircBotX bot>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHO ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" %na");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r15);

        i0 = 0;

     label09:
        if i0 >= 500 goto label13;

        $r21 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $z4 = virtualinvoke $r21.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z4 != 0 goto label13;

     label10:
        i0 = i0 + 1;

        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label11:
        goto label09;

     label12:
        $r28 := @caughtexception;

        goto label09;

     label13:
        $r16 = <com.zack6849.alphabot.Utils: java.util.HashMap userLockMap>;

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r17 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $z3 = virtualinvoke $r17.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z3 == 0 goto label16;

        $r18 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r20 = (java.lang.String) $r19;

        exitmonitor $r9;

     label14:
        exitmonitor $r0;

     label15:
        return $r20;

     label16:
        exitmonitor $r9;

     label17:
        exitmonitor $r0;

     label18:
        return null;

     label19:
        $r27 := @caughtexception;

        exitmonitor $r9;

     label20:
        throw $r27;

     label21:
        $r4 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (java.lang.String) $r5;

        exitmonitor $r0;

     label22:
        return $r6;

     label23:
        $r26 := @caughtexception;

        exitmonitor $r0;

     label24:
        throw $r26;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label08 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label01 to label15 with label23;
        catch java.lang.Throwable from label16 to label18 with label23;
        catch java.lang.Throwable from label19 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public static java.util.List getChannels(org.pircbotx.User)
    {
        java.util.ArrayList $r0;
        java.lang.String $r5, $r8, $r10;
        org.pircbotx.PircBotX $r2, $r11;
        java.util.List r14;
        java.lang.InterruptedException $r13;
        java.lang.StringBuilder $r1, $r3, $r6, $r7, $r9;
        org.pircbotx.hooks.events.WhoisEvent r15;
        org.pircbotx.User r4;
        org.pircbotx.hooks.Event $r12;

        r4 := @parameter0: org.pircbotx.User;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r14 = $r0;

     label1:
        $r2 = <com.zack6849.alphabot.Bot: org.pircbotx.PircBotX bot>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHOIS ");

        $r5 = virtualinvoke r4.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke r4.<org.pircbotx.User: java.lang.String getNick()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r10);

        $r11 = <com.zack6849.alphabot.Bot: org.pircbotx.PircBotX bot>;

        $r12 = virtualinvoke $r11.<org.pircbotx.PircBotX: org.pircbotx.hooks.Event waitFor(java.lang.Class)>(class "Lorg/pircbotx/hooks/events/WhoisEvent;");

        r15 = (org.pircbotx.hooks.events.WhoisEvent) $r12;

        r14 = virtualinvoke r15.<org.pircbotx.hooks.events.WhoisEvent: java.util.List getChannels()>();

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        virtualinvoke $r13.<java.lang.InterruptedException: void printStackTrace()>();

     label4:
        return r14;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static java.lang.String checkMojangServers()
    {
        java.net.URL $r0;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, r16;
        boolean $z0, $z1;
        java.io.IOException $r13;
        java.io.InputStreamReader $r2;
        java.io.BufferedReader $r1;
        java.io.InputStream $r3;

        r16 = null;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>("http://status.mojang.com/check");

        $r1 = new java.io.BufferedReader;

        $r2 = new java.io.InputStreamReader;

        $r3 = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

     label2:
        $r4 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r4 == null goto label3;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("red", "\u000304Offline\u000f");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("green", "\u000309Online\u000f");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[", "");

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("]", "");

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{", "");

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("}", "");

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", " is currently ");

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "");

        r16 = virtualinvoke $r12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(",", ", ");

        goto label2;

     label3:
        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

     label4:
        goto label7;

     label5:
        $r13 := @caughtexception;

        $r14 = virtualinvoke $r13.<java.io.IOException: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean contains(java.lang.CharSequence)>("503");

        if $z0 == 0 goto label6;

        r16 = "The minecraft status server is temporarily unavailable, please try again later";

     label6:
        $r15 = virtualinvoke $r13.<java.io.IOException: java.lang.String getMessage()>();

        $z1 = virtualinvoke $r15.<java.lang.String: boolean contains(java.lang.CharSequence)>("404");

        if $z1 == 0 goto label7;

        r16 = "Uhoh, it would appear as if the haspaid page has been removed or relocated >_>";

     label7:
        return r16;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public static java.lang.String shortenUrl(java.lang.String)
    {
        java.net.URL $r0;
        java.io.InputStreamReader $r7;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String r3, $r5, r10;
        java.io.BufferedReader $r6;
        java.io.InputStream $r8;

        r3 := @parameter0: java.lang.String;

        r10 = null;

     label1:
        $r0 = new java.net.URL;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://is.gd/create.php?format=simple&url=");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>($r5);

        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        $r8 = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r8);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        r10 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String checkServerStatus(java.net.InetAddress, int)
    {
        byte[] $r6;
        java.net.InetAddress r1;
        java.io.DataOutputStream $r42;
        boolean $z0;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r29, $r30, $r32, $r33, $r35, $r36, $r43, $r44, $r45;
        java.io.DataInputStream $r41;
        java.net.Socket $r40;
        java.lang.String[] $r11;
        short $s0;
        int i2, i3, $i4;
        java.lang.String $r8, $r9, $r12, $r15, $r18, $r21, $r26, $r27, $r28, $r31, $r34, r39;
        java.io.OutputStream $r5;
        java.io.PrintStream $r10;
        char $c1;
        java.io.IOException $r37;
        java.net.UnknownHostException $r38;
        java.io.InputStream $r3;

        r1 := @parameter0: java.net.InetAddress;

        i2 := @parameter1: int;

     label1:
        $r40 = new java.net.Socket;

        specialinvoke $r40.<java.net.Socket: void <init>(java.net.InetAddress,int)>(r1, 25565);

        $r41 = new java.io.DataInputStream;

        $r3 = virtualinvoke $r40.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r41.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r3);

        $r42 = new java.io.DataOutputStream;

        $r5 = virtualinvoke $r40.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r42.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r5);

        $r6 = newarray (byte)[2];

        $r6[0] = -2;

        $r6[1] = 1;

        virtualinvoke $r42.<java.io.DataOutputStream: void write(byte[])>($r6);

        virtualinvoke $r41.<java.io.DataInputStream: byte readByte()>();

        $s0 = virtualinvoke $r41.<java.io.DataInputStream: short readShort()>();

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

     label2:
        $i4 = (int) $s0;

        if i3 >= $i4 goto label3;

        $c1 = virtualinvoke $r41.<java.io.DataInputStream: char readChar()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r8 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\u0000");

        $r12 = $r11[3];

        $z0 = virtualinvoke $r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("\u00a7");

        if $z0 == 0 goto label4;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MOTD: ");

        $r26 = $r11[3];

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\u00a7[a-m]", "");

        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\u00a7[1234567890]", "");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   players: [");

        $r31 = $r11[4];

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r34 = $r11[5];

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label4:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MOTD: ");

        $r15 = $r11[3];

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   players: [");

        $r18 = $r11[4];

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r21 = $r11[5];

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r39 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        goto label8;

     label6:
        $r38 := @caughtexception;

        r39 = "the host you specified is unknown. check your settings.";

        goto label8;

     label7:
        $r37 := @caughtexception;

        r39 = "sorry, we couldn\'t reach this server, make sure that the server is up and has query enabled.";

     label8:
        return r39;

        catch java.net.UnknownHostException from label1 to label5 with label6;
        catch java.io.IOException from label1 to label5 with label7;
    }

    public static java.lang.String encrypt(java.lang.String)
    {
        byte[] $r4, $r5;
        java.security.MessageDigest $r1;
        java.lang.Exception $r8;
        short $s2, $s4;
        java.nio.charset.Charset $r3;
        byte b1;
        java.lang.StringBuffer $r9;
        int i0, i3, $i5;
        java.lang.String r2, $r6, $r7;

        r2 := @parameter0: java.lang.String;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-512");

        virtualinvoke $r1.<java.security.MessageDigest: void reset()>();

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r4 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r4);

        $r5 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        i0 = lengthof $r5;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        b1 = $r5[i3];

        $s4 = (short) b1;

        $s2 = 255 & $s4;

        $i5 = (int) $s2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        i3 = i3 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label5:
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public static java.lang.String getYoutubeInfo(java.lang.String) throws java.io.IOException
    {
        org.jsoup.nodes.Element r15, r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.jsoup.nodes.Document $r3;
        java.lang.StringBuilder $r6, $r9, $r10, $r12, $r17, $r22, $r24, $r26, $r28;
        org.jsoup.select.Elements $r4, $r7;
        java.lang.String[] $r34, $r36;
        org.jsoup.Connection $r1, $r2;
        java.lang.String r0, $r11, $r13, $r16, $r18, $r19, $r20, $r21, $r23, $r25, $r27, $r29, $r30, $r32, $r33, $r35, r37, $r39;
        java.util.Iterator $r5, $r8;
        java.lang.Object $r14, $r31;

        r0 := @parameter0: java.lang.String;

        r37 = "";

        $r1 = staticinvoke <org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>(r0);

        $r2 = interfaceinvoke $r1.<org.jsoup.Connection: org.jsoup.Connection userAgent(java.lang.String)>("Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17");

        $r3 = interfaceinvoke $r2.<org.jsoup.Connection: org.jsoup.nodes.Document get()>();

        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("a");

        $r5 = virtualinvoke $r4.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r31 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r38 = (org.jsoup.nodes.Element) $r31;

        $r32 = virtualinvoke r38.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("class");

        $z7 = virtualinvoke $r32.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("yt-uix-sessionlink yt-user-videos");

        if $z7 == 0 goto label02;

        $r33 = virtualinvoke r38.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("href");

        $r34 = virtualinvoke $r33.<java.lang.String: java.lang.String[] split(java.lang.String)>("/user/");

        $r35 = $r34[1];

        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        r37 = $r36[0];

     label02:
        goto label01;

     label03:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r3.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("span");

        $r8 = virtualinvoke $r7.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r14 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.jsoup.nodes.Element) $r14;

        $r16 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("class");

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("watch-title  yt-uix-expander-head");

        if $z2 != 0 goto label05;

        $r30 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("class");

        $z6 = virtualinvoke $r30.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("watch-title long-title yt-uix-expander-head");

        if $z6 == 0 goto label06;

     label05:
        $r17 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  title: ");

        $r18 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String text()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label06:
        $r39 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("class");

        $z8 = virtualinvoke $r39.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("watch-view-count");

        if $z8 == 0 goto label07;

        $r28 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  veiws: ");

        $r29 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String text()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label07:
        $r19 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("class");

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("likes-count");

        if $z3 == 0 goto label08;

        $r26 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  likes: ");

        $r27 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String text()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label08:
        $r20 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("class");

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dislikes-count");

        if $z4 == 0 goto label09;

        $r24 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  dislikes: ");

        $r25 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String text()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label09:
        $r21 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("class");

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("watch-video-date");

        if $z5 == 0 goto label10;

        $r22 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  date: ");

        $r23 = virtualinvoke r15.<org.jsoup.nodes.Element: java.lang.String text()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label10:
        goto label04;

     label11:
        if r37 != null goto label12;

        return null;

     label12:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static java.lang.String getWebpageTitle(java.lang.String)
    {
        java.net.URL $r0, $r9, $r24;
        org.jsoup.nodes.Element r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Exception $r29;
        org.jsoup.nodes.Document $r8;
        java.lang.StringBuilder $r14, $r15, $r19, $r20, $r21, $r22, $r23, $r26, $r27;
        org.jsoup.select.Elements $r10;
        java.net.URLConnection $r2, $r25;
        org.jsoup.Connection $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.String r1, $r3, $r4, $r16, $r17, $r18, $r28, r30, r31;
        java.util.Iterator $r11;
        java.lang.Object $r12;

        r1 := @parameter0: java.lang.String;

        r30 = "";

        r31 = "none!";

     label01:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = virtualinvoke $r2.<java.net.URLConnection: java.lang.String getContentType()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("text/html");

        if $z0 != 0 goto label03;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content type: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size: ");

        $r24 = new java.net.URL;

        specialinvoke $r24.<java.net.URL: void <init>(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.net.URL: java.net.URLConnection openConnection()>();

        $i0 = virtualinvoke $r25.<java.net.URLConnection: int getContentLength()>();

        $i1 = $i0 / 1024;

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("kb");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        return $r28;

     label03:
        $r5 = staticinvoke <org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>(r1);

        $r6 = interfaceinvoke $r5.<org.jsoup.Connection: org.jsoup.Connection userAgent(java.lang.String)>("Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.56 Safari/537.17");

        $r7 = interfaceinvoke $r6.<org.jsoup.Connection: org.jsoup.Connection followRedirects(boolean)>(1);

        $r8 = interfaceinvoke $r7.<org.jsoup.Connection: org.jsoup.nodes.Document get()>();

        $r9 = new java.net.URL;

        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>(r1);

        virtualinvoke $r9.<java.net.URL: java.net.URLConnection openConnection()>();

        $r10 = virtualinvoke $r8.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("title");

        $r11 = virtualinvoke $r10.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.jsoup.nodes.Element) $r12;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r16 = virtualinvoke r13.<org.jsoup.nodes.Element: java.lang.String text()>();

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "");

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s+", " ");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r30 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label05:
        goto label07;

     label06:
        $r29 := @caughtexception;

        r31 = virtualinvoke $r29.<java.lang.Exception: java.lang.String toString()>();

     label07:
        $z2 = virtualinvoke r31.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("none");

        if $z2 != 0 goto label13;

        $z3 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("404");

        if $z3 == 0 goto label08;

        return "404 file not found";

     label08:
        $z4 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("502");

        if $z4 == 0 goto label09;

        return "502 bad gateway";

     label09:
        $z5 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("401");

        if $z5 == 0 goto label10;

        return "401 unauthorized request";

     label10:
        $z6 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("403");

        if $z6 == 0 goto label11;

        return "403 forbidden";

     label11:
        $z7 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("500");

        if $z7 == 0 goto label12;

        return "500 internal server error";

     label12:
        $z8 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("503");

        if $z8 == 0 goto label13;

        return "503 service unavailable (usually temporary, try again later)";

     label13:
        return r30;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label03 to label05 with label06;
    }

    public static boolean isUrl(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.util.regex.Pattern $r0;
        java.lang.String r1;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]");

        $r2 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String colorEncode(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.reset", "\u000f");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.bold", "\u0002");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.underline", "\u001f");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.reverse", "\u0016");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.red", "\u000304");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.green", "\u000309");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.blue", "\u000312");

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.yellow", "\u000308");

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.cyan", "\u000311");

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("color.gray", "\u000315");

        return $r10;
    }

    public static java.lang.String ping(java.lang.String, int)
    {
        java.net.Socket $r1;
        long $l0, $l2, $l3, $l4;
        java.net.InetAddress $r3;
        java.lang.Long $r0, $r4;
        int i1;
        java.lang.String r2, r10;
        java.io.IOException $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r2 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1 = new java.net.Socket;

        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2);

        specialinvoke $r1.<java.net.Socket: void <init>(java.net.InetAddress,int)>($r3, i1);

        virtualinvoke $r1.<java.net.Socket: void close()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = virtualinvoke $r0.<java.lang.Long: long longValue()>();

        $l4 = $l2 - $l3;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response time: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" miliseconds");

        r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r10 = virtualinvoke $r9.<java.io.IOException: java.lang.String toString()>();

     label4:
        return r10;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String getTime()
    {
        java.lang.Object[] $r0;
        java.lang.String $r2;
        java.util.Date $r1;

        $r0 = newarray (java.lang.Object)[1];

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%tm/%<td/%<ty - %<tH:%<tM:%<tS]", $r0);

        return $r2;
    }

    public static java.lang.String getMonth()
    {
        java.lang.Object[] $r0;
        java.lang.String $r2;
        java.util.Date $r1;

        $r0 = newarray (java.lang.Object)[1];

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%tB", $r0);

        return $r2;
    }

    public static java.lang.String getDay()
    {
        java.lang.Object[] $r0;
        java.lang.String $r2;
        java.util.Date $r1;

        $r0 = newarray (java.lang.Object)[1];

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%td", $r0);

        return $r2;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.zack6849.alphabot.Utils: java.util.HashMap userLockMap> = $r1;

        return;
    }
}
