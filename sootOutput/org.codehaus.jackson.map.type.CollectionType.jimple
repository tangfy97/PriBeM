public final class org.codehaus.jackson.map.type.CollectionType extends org.codehaus.jackson.map.type.CollectionLikeType
{

    private void <init>(java.lang.Class, org.codehaus.jackson.type.JavaType, java.lang.Object, java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0;
        org.codehaus.jackson.type.JavaType r2;
        java.lang.Class r1;
        java.lang.Object r3, r4;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        specialinvoke r0.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4);

        return;
    }

    protected org.codehaus.jackson.type.JavaType _narrow(java.lang.Class)
    {
        org.codehaus.jackson.map.type.CollectionType $r0, r2;
        org.codehaus.jackson.type.JavaType $r3;
        java.lang.Class r1;

        r2 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.codehaus.jackson.map.type.CollectionType;

        $r3 = r2.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>(r1, $r3, null, null);

        return $r0;
    }

    public org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class)
    {
        org.codehaus.jackson.map.type.CollectionType r1, $r4;
        org.codehaus.jackson.type.JavaType $r2, $r5, $r7;
        java.lang.Class r0, $r3, $r6;
        java.lang.Object $r8, $r9;

        r1 := @this: org.codehaus.jackson.map.type.CollectionType;

        r0 := @parameter0: java.lang.Class;

        $r2 = r1.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if r0 != $r3 goto label1;

        return r1;

     label1:
        $r4 = new org.codehaus.jackson.map.type.CollectionType;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Class _class>;

        $r5 = r1.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r7 = virtualinvoke $r5.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class)>(r0);

        $r9 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _valueHandler>;

        $r8 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _typeHandler>;

        specialinvoke $r4.<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r6, $r7, $r9, $r8);

        return $r4;
    }

    public org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    {
        org.codehaus.jackson.map.type.CollectionType r1, $r4;
        org.codehaus.jackson.type.JavaType $r2, $r5, $r7;
        java.lang.Class r0, $r3, $r6;
        java.lang.Object $r8, $r9;

        r1 := @this: org.codehaus.jackson.map.type.CollectionType;

        r0 := @parameter0: java.lang.Class;

        $r2 = r1.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if r0 != $r3 goto label1;

        return r1;

     label1:
        $r4 = new org.codehaus.jackson.map.type.CollectionType;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Class _class>;

        $r5 = r1.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r7 = virtualinvoke $r5.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType widenBy(java.lang.Class)>(r0);

        $r9 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _valueHandler>;

        $r8 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _typeHandler>;

        specialinvoke $r4.<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r6, $r7, $r9, $r8);

        return $r4;
    }

    public static org.codehaus.jackson.map.type.CollectionType construct(java.lang.Class, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.type.CollectionType $r0;
        org.codehaus.jackson.type.JavaType r2;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r0 = new org.codehaus.jackson.map.type.CollectionType;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>(r1, r2, null, null);

        return $r0;
    }

    public org.codehaus.jackson.map.type.CollectionType withTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType $r0, r1;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object r2, $r3;
        java.lang.Class $r5;

        r1 := @this: org.codehaus.jackson.map.type.CollectionType;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.type.CollectionType;

        $r5 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Class _class>;

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r3 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _valueHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r5, $r4, $r3, r2);

        return $r0;
    }

    public org.codehaus.jackson.map.type.CollectionType withContentTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType $r0, r1;
        org.codehaus.jackson.type.JavaType $r3, $r5;
        java.lang.Object r2, $r6, $r7;
        java.lang.Class $r4;

        r1 := @this: org.codehaus.jackson.map.type.CollectionType;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.type.CollectionType;

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Class _class>;

        $r3 = r1.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object)>(r2);

        $r7 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _valueHandler>;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _typeHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r4, $r5, $r7, $r6);

        return $r0;
    }

    public org.codehaus.jackson.map.type.CollectionType withValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType $r0, r1;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object r2, $r3;
        java.lang.Class $r5;

        r1 := @this: org.codehaus.jackson.map.type.CollectionType;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.type.CollectionType;

        $r5 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Class _class>;

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r3 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _typeHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r5, $r4, r2, $r3);

        return $r0;
    }

    public org.codehaus.jackson.map.type.CollectionType withContentValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType $r0, r1;
        org.codehaus.jackson.type.JavaType $r3, $r5;
        java.lang.Object r2, $r6, $r7;
        java.lang.Class $r4;

        r1 := @this: org.codehaus.jackson.map.type.CollectionType;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.type.CollectionType;

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Class _class>;

        $r3 = r1.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object)>(r2);

        $r7 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _valueHandler>;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionType: java.lang.Object _typeHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r4, $r5, $r7, $r6);

        return $r0;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.type.CollectionType r2;
        org.codehaus.jackson.type.JavaType $r7;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8, $r9;
        java.lang.Class $r3;
        java.lang.String $r4, $r10;

        r2 := @this: org.codehaus.jackson.map.type.CollectionType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[collection type; class ");

        $r3 = r2.<org.codehaus.jackson.map.type.CollectionType: java.lang.Class _class>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", contains ");

        $r7 = r2.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _elementType>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public volatile org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withContentValueHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withValueHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withContentTypeHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withTypeHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withContentValueHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withValueHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withContentTypeHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withTypeHandler(java.lang.Object)>(r1);

        return $r2;
    }
}
