public class com.sun.xml.bind.AccessorFactoryImpl extends java.lang.Object implements com.sun.xml.bind.InternalAccessorFactory
{
    private static com.sun.xml.bind.AccessorFactoryImpl instance;

    private void <init>()
    {
        com.sun.xml.bind.AccessorFactoryImpl r0;

        r0 := @this: com.sun.xml.bind.AccessorFactoryImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.sun.xml.bind.AccessorFactoryImpl getInstance()
    {
        com.sun.xml.bind.AccessorFactoryImpl $r0;

        $r0 = <com.sun.xml.bind.AccessorFactoryImpl: com.sun.xml.bind.AccessorFactoryImpl instance>;

        return $r0;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean)
    {
        com.sun.xml.bind.AccessorFactoryImpl r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$ReadOnlyFieldReflection $r4;
        java.lang.Class r2;
        java.lang.reflect.Field r0;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection $r3, $r5;
        boolean z0;

        r1 := @this: com.sun.xml.bind.AccessorFactoryImpl;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Field;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r4 = new com.sun.xml.bind.v2.runtime.reflect.Accessor$ReadOnlyFieldReflection;

        $r3 = $r4;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.Accessor$ReadOnlyFieldReflection: void <init>(java.lang.reflect.Field)>(r0);

        goto label2;

     label1:
        $r5 = new com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection;

        $r3 = $r5;

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection: void <init>(java.lang.reflect.Field)>(r0);

     label2:
        return $r3;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean, boolean)
    {
        com.sun.xml.bind.AccessorFactoryImpl r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$ReadOnlyFieldReflection $r4;
        java.lang.reflect.Field r0;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection $r3, $r5;
        java.lang.Class r2;
        boolean z0, z1;

        r1 := @this: com.sun.xml.bind.AccessorFactoryImpl;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Field;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r4 = new com.sun.xml.bind.v2.runtime.reflect.Accessor$ReadOnlyFieldReflection;

        $r3 = $r4;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.Accessor$ReadOnlyFieldReflection: void <init>(java.lang.reflect.Field,boolean)>(r0, z1);

        goto label2;

     label1:
        $r5 = new com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection;

        $r3 = $r5;

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection: void <init>(java.lang.reflect.Field,boolean)>(r0, z1);

     label2:
        return $r3;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor createPropertyAccessor(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method)
    {
        com.sun.xml.bind.AccessorFactoryImpl r5;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection $r2;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection $r4;
        java.lang.Class r6;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterOnlyReflection $r3;
        java.lang.reflect.Method r0, r1;

        r5 := @this: com.sun.xml.bind.AccessorFactoryImpl;

        r6 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Method;

        r1 := @parameter2: java.lang.reflect.Method;

        if r0 != null goto label1;

        $r4 = new com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection: void <init>(java.lang.reflect.Method)>(r1);

        return $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterOnlyReflection;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterOnlyReflection: void <init>(java.lang.reflect.Method)>(r0);

        return $r3;

     label2:
        $r2 = new com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection;

        specialinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: void <init>(java.lang.reflect.Method,java.lang.reflect.Method)>(r0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.sun.xml.bind.AccessorFactoryImpl $r0;

        $r0 = new com.sun.xml.bind.AccessorFactoryImpl;

        specialinvoke $r0.<com.sun.xml.bind.AccessorFactoryImpl: void <init>()>();

        <com.sun.xml.bind.AccessorFactoryImpl: com.sun.xml.bind.AccessorFactoryImpl instance> = $r0;

        return;
    }
}
