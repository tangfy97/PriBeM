public class org.apache.batik.bridge.SVGFontFamily extends java.lang.Object implements org.apache.batik.gvt.font.GVTFontFamily
{
    public static final java.text.AttributedCharacterIterator$Attribute TEXT_COMPOUND_ID;
    protected org.apache.batik.gvt.font.GVTFontFace fontFace;
    protected org.w3c.dom.Element fontElement;
    protected org.apache.batik.bridge.BridgeContext ctx;
    protected java.lang.Boolean complex;

    public void <init>(org.apache.batik.gvt.font.GVTFontFace, org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.bridge.SVGFontFamily r0;
        org.w3c.dom.Element r2;
        org.apache.batik.gvt.font.GVTFontFace r1;
        org.apache.batik.bridge.BridgeContext r3;

        r0 := @this: org.apache.batik.bridge.SVGFontFamily;

        r1 := @parameter0: org.apache.batik.gvt.font.GVTFontFace;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.batik.bridge.BridgeContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.SVGFontFamily: java.lang.Boolean complex> = null;

        r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.gvt.font.GVTFontFace fontFace> = r1;

        r0.<org.apache.batik.bridge.SVGFontFamily: org.w3c.dom.Element fontElement> = r2;

        r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.bridge.BridgeContext ctx> = r3;

        return;
    }

    public java.lang.String getFamilyName()
    {
        org.apache.batik.gvt.font.GVTFontFace $r1;
        org.apache.batik.bridge.SVGFontFamily r0;
        java.lang.String $r2;

        r0 := @this: org.apache.batik.bridge.SVGFontFamily;

        $r1 = r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.gvt.font.GVTFontFace fontFace>;

        $r2 = virtualinvoke $r1.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String getFamilyName()>();

        return $r2;
    }

    public org.apache.batik.gvt.font.GVTFontFace getFontFace()
    {
        org.apache.batik.gvt.font.GVTFontFace $r1;
        org.apache.batik.bridge.SVGFontFamily r0;

        r0 := @this: org.apache.batik.bridge.SVGFontFamily;

        $r1 = r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.gvt.font.GVTFontFace fontFace>;

        return $r1;
    }

    public org.apache.batik.gvt.font.GVTFont deriveFont(float, java.text.AttributedCharacterIterator)
    {
        org.apache.batik.bridge.SVGFontFamily r0;
        java.text.AttributedCharacterIterator r1;
        java.util.Map $r2;
        float f0;
        org.apache.batik.gvt.font.GVTFont $r3;

        r0 := @this: org.apache.batik.bridge.SVGFontFamily;

        f0 := @parameter0: float;

        r1 := @parameter1: java.text.AttributedCharacterIterator;

        $r2 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();

        $r3 = virtualinvoke r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.gvt.font.GVTFont deriveFont(float,java.util.Map)>(f0, $r2);

        return $r3;
    }

    public org.apache.batik.gvt.font.GVTFont deriveFont(float, java.util.Map)
    {
        org.apache.batik.gvt.font.GVTFontFace $r11;
        org.apache.batik.bridge.SVGFontElementBridge r4;
        java.text.AttributedCharacterIterator$Attribute $r6;
        java.util.Map r5;
        java.lang.ref.SoftReference r8;
        org.apache.batik.bridge.SVGGVTFont $r14;
        org.apache.batik.bridge.SVGFontFamily r0;
        org.apache.batik.bridge.BridgeContext $r2, $r13;
        org.apache.batik.bridge.Bridge $r3;
        org.w3c.dom.Element $r1, r10, $r12;
        float f0;
        java.lang.Object $r7, $r9;

        r0 := @this: org.apache.batik.bridge.SVGFontFamily;

        f0 := @parameter0: float;

        r5 := @parameter1: java.util.Map;

        $r2 = r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.bridge.BridgeContext ctx>;

        $r1 = r0.<org.apache.batik.bridge.SVGFontFamily: org.w3c.dom.Element fontElement>;

        $r3 = virtualinvoke $r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(org.w3c.dom.Element)>($r1);

        r4 = (org.apache.batik.bridge.SVGFontElementBridge) $r3;

        $r6 = <org.apache.batik.bridge.SVGFontFamily: java.text.AttributedCharacterIterator$Attribute TEXT_COMPOUND_ID>;

        $r7 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.lang.ref.SoftReference) $r7;

        $r9 = virtualinvoke r8.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r10 = (org.w3c.dom.Element) $r9;

        $r13 = r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.bridge.BridgeContext ctx>;

        $r12 = r0.<org.apache.batik.bridge.SVGFontFamily: org.w3c.dom.Element fontElement>;

        $r11 = r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.gvt.font.GVTFontFace fontFace>;

        $r14 = virtualinvoke r4.<org.apache.batik.bridge.SVGFontElementBridge: org.apache.batik.bridge.SVGGVTFont createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)>($r13, $r12, r10, f0, $r11);

        return $r14;
    }

    public boolean isComplex()
    {
        org.apache.batik.bridge.SVGFontFamily r0;
        org.apache.batik.bridge.BridgeContext $r2;
        org.w3c.dom.Element $r3;
        java.lang.Boolean $r1, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.bridge.SVGFontFamily;

        $r1 = r0.<org.apache.batik.bridge.SVGFontFamily: java.lang.Boolean complex>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.batik.bridge.SVGFontFamily: java.lang.Boolean complex>;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $r3 = r0.<org.apache.batik.bridge.SVGFontFamily: org.w3c.dom.Element fontElement>;

        $r2 = r0.<org.apache.batik.bridge.SVGFontFamily: org.apache.batik.bridge.BridgeContext ctx>;

        $z0 = staticinvoke <org.apache.batik.bridge.SVGFontFamily: boolean isComplex(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>($r3, $r2);

        if $z0 == 0 goto label2;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label3;

     label2:
        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label3:
        r0.<org.apache.batik.bridge.SVGFontFamily: java.lang.Boolean complex> = $r5;

        return $z0;
    }

    public static boolean isComplex(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        org.w3c.dom.NodeList $r1;
        org.apache.batik.bridge.BridgeContext r5;
        org.apache.batik.bridge.Bridge $r6;
        short $s1;
        org.w3c.dom.Element r0, r3, r4;
        org.w3c.dom.Node $r2, r7;
        int $i0, i2;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "glyph");

        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        i2 = 0;

        goto label6;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        r3 = (org.w3c.dom.Element) $r2;

        r7 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label5;

     label2:
        $s1 = interfaceinvoke r7.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 == 1 goto label3;

        goto label4;

     label3:
        r4 = (org.w3c.dom.Element) r7;

        $r6 = virtualinvoke r5.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(org.w3c.dom.Element)>(r4);

        if $r6 == null goto label4;

        $z0 = $r6 instanceof org.apache.batik.bridge.GraphicsNodeBridge;

        if $z0 == 0 goto label4;

        return 1;

     label4:
        r7 = interfaceinvoke r7.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label5:
        if r7 != null goto label2;

        i2 = i2 + 1;

     label6:
        if i2 < $i0 goto label1;

        return 0;
    }

    static void <clinit>()
    {
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r0;

        $r0 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute TEXT_COMPOUND_ID>;

        <org.apache.batik.bridge.SVGFontFamily: java.text.AttributedCharacterIterator$Attribute TEXT_COMPOUND_ID> = $r0;

        return;
    }
}
