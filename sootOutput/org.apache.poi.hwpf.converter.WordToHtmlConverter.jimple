public class org.apache.poi.hwpf.converter.WordToHtmlConverter extends org.apache.poi.hwpf.converter.AbstractWordConverter
{
    private static final org.apache.poi.util.POILogger logger;
    private final java.util.Stack blocksProperies;
    private final org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade;
    private org.w3c.dom.Element notes;

    private static java.lang.String getSectionStyle(org.apache.poi.hwpf.usermodel.Section)
    {
        boolean $z0;
        float $f0, f1, $f2, f3, $f4, f5, $f6, f7, $f8, f9;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        org.apache.poi.hwpf.usermodel.Section r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r11, $r17, r26;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.Section;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getMarginLeft()>();

        $f0 = (float) $i0;

        f1 = $f0 / 1440.0F;

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getMarginRight()>();

        $f2 = (float) $i1;

        f3 = $f2 / 1440.0F;

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getMarginTop()>();

        $f4 = (float) $i2;

        f5 = $f4 / 1440.0F;

        $i3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getMarginBottom()>();

        $f6 = (float) $i3;

        f7 = $f6 / 1440.0F;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("margin: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f7);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = $r11;

        $i4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getNumColumns()>();

        if $i4 <= 1 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column-count: ");

        $i5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getNumColumns()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: boolean isColumnsEvenlySpaced()>();

        if $z0 == 0 goto label1;

        $i6 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Section: int getDistanceBetweenColumns()>();

        $f8 = (float) $i6;

        f9 = $f8 / 1440.0F;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column-gap: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f9);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column-gap: 0.25in;");

        r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r26;
    }

    public static void main(java.lang.String[])
    {
        javax.xml.transform.dom.DOMSource $r18;
        javax.xml.transform.Transformer $r21;
        javax.xml.transform.stream.StreamResult $r19;
        java.lang.String[] r0;
        org.w3c.dom.Document $r15;
        int $i0;
        java.lang.String $r4, $r6, $r10, $r12, $r14, $r17;
        java.io.PrintStream $r2, $r8, $r22;
        java.io.FileWriter $r16;
        java.io.File $r13;
        java.lang.Exception $r23;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11;
        javax.xml.transform.TransformerFactory $r20;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 2 goto label1;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Usage: WordToHtmlConverter <inputFile.doc> <saveTo.html>");

        return;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting ");

        $r4 = r0[0];

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saving output to ");

        $r10 = r0[1];

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label2:
        $r13 = new java.io.File;

        $r14 = r0[0];

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);

        $r15 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Document process(java.io.File)>($r13);

        $r16 = new java.io.FileWriter;

        $r17 = r0[1];

        specialinvoke $r16.<java.io.FileWriter: void <init>(java.lang.String)>($r17);

        $r18 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r18.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r15);

        $r19 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r19.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r16);

        $r20 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r21 = virtualinvoke $r20.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", "UTF-8");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("method", "html");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r18, $r19);

        virtualinvoke $r16.<java.io.FileWriter: void close()>();

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static org.w3c.dom.Document process(java.io.File) throws java.lang.Exception
    {
        org.apache.poi.hwpf.HWPFDocumentCore $r1;
        org.w3c.dom.Document $r5, $r6;
        javax.xml.parsers.DocumentBuilder $r4;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        java.io.File r0;
        org.apache.poi.hwpf.converter.WordToHtmlConverter $r2;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: org.apache.poi.hwpf.HWPFDocumentCore loadDoc(java.io.File)>(r0);

        $r2 = new org.apache.poi.hwpf.converter.WordToHtmlConverter;

        $r3 = staticinvoke <org.apache.poi.util.XMLHelper: javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        specialinvoke $r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: void <init>(org.w3c.dom.Document)>($r5);

        virtualinvoke $r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: void processDocument(org.apache.poi.hwpf.HWPFDocumentCore)>($r1);

        $r6 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Document getDocument()>();

        return $r6;
    }

    public void <init>(org.w3c.dom.Document)
    {
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2;
        org.w3c.dom.Document r3;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r3 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies> = $r1;

        r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Element notes> = null;

        $r2 = new org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        specialinvoke $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void <init>(org.w3c.dom.Document)>(r3);

        r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade> = $r2;

        return;
    }

    public void <init>(org.apache.poi.hwpf.converter.HtmlDocumentFacade)
    {
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r2;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r2 := @parameter0: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies> = $r1;

        r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Element notes> = null;

        r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade> = r2;

        return;
    }

    protected void afterProcess()
    {
        org.w3c.dom.Element $r1, $r4, $r5;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2, $r3;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Element notes>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element getBody()>();

        $r5 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Element notes>;

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

     label1:
        $r2 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        virtualinvoke $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void updateStylesheet()>();

        return;
    }

    public org.w3c.dom.Document getDocument()
    {
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r1;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;
        org.w3c.dom.Document $r2;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document getDocument()>();

        return $r2;
    }

    protected void outputCharacters(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun, java.lang.String)
    {
        org.w3c.dom.Text $r14;
        org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies r8;
        org.apache.poi.hwpf.converter.FontReplacer$Triplet $r10;
        org.w3c.dom.Document $r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5, $r17, $r18, $r19, $r20, $r24, $r25, $r27, $r28;
        org.apache.poi.hwpf.usermodel.CharacterRun r9;
        java.util.Stack $r6;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r1, $r13, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r11, r12, $r16, $r21, $r22, $r23, $r26, $r29;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;
        org.w3c.dom.Element $r3, r4;
        java.lang.Object $r7;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r4 := @parameter0: org.w3c.dom.Element;

        r9 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r12 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r2 = $r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("span");

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies>;

        $r7 = virtualinvoke $r6.<java.util.Stack: java.lang.Object peek()>();

        r8 = (org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies) $r7;

        $r10 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.FontReplacer$Triplet getCharacterRunTriplet(org.apache.poi.hwpf.usermodel.CharacterRun)>(r9);

        $r11 = $r10.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName>;

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r11);

        if $z0 == 0 goto label1;

        $r23 = $r10.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName>;

        $r22 = r8.<org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies: java.lang.String pFontName>;

        $z3 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean equals(java.lang.String,java.lang.String)>($r23, $r22);

        if $z3 != 0 goto label1;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-family:");

        $r26 = $r10.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label1:
        $i3 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.CharacterRun: int getFontSize()>();

        $i4 = $i3 / 2;

        $i5 = r8.<org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies: int pFontSize>;

        if $i4 == $i5 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-size:");

        $i1 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.CharacterRun: int getFontSize()>();

        $i2 = $i1 / 2;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt;");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label2:
        $z1 = $r10.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean bold>;

        if $z1 == 0 goto label3;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-weight:bold;");

     label3:
        $z2 = $r10.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean italic>;

        if $z2 == 0 goto label4;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-style:italic;");

     label4:
        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addCharactersProperties(org.apache.poi.hwpf.usermodel.CharacterRun,java.lang.StringBuilder)>(r9, $r5);

        $i0 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label5;

        $r15 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r3, "s", $r16);

     label5:
        $r13 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r14 = virtualinvoke $r13.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>(r12);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r14);

        return;
    }

    protected void processBookmarks(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.util.List)
    {
        java.util.Iterator $r2;
        org.apache.poi.hwpf.HWPFDocumentCore r5;
        org.apache.poi.hwpf.usermodel.Range r3;
        java.util.List r1;
        org.w3c.dom.Element r0, $r10, r11;
        org.apache.poi.hwpf.usermodel.Bookmark r7;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r8;
        int i0;
        java.lang.Object $r6;
        java.lang.String $r9;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r4;
        boolean $z0;

        r4 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r5 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r0 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r1 := @parameter4: java.util.List;

        r11 = r0;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.hwpf.usermodel.Bookmark) $r6;

        $r8 = r4.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r9 = interfaceinvoke r7.<org.apache.poi.hwpf.usermodel.Bookmark: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createBookmark(java.lang.String)>($r9);

        interfaceinvoke r11.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        r11 = $r10;

        goto label1;

     label2:
        if r3 == null goto label3;

        virtualinvoke r4.<org.apache.poi.hwpf.converter.WordToHtmlConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r5, i0, r3, r11);

     label3:
        return;
    }

    protected void processDocumentInformation(org.apache.poi.hpsf.SummaryInformation)
    {
        org.apache.poi.hpsf.SummaryInformation r0;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r6, $r8, $r10, $r12;
        java.lang.String $r1, $r2, $r3, $r4, $r7, $r9, $r11, $r13;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r5;
        boolean $z0, $z1, $z2, $z3;

        r5 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r0 := @parameter0: org.apache.poi.hpsf.SummaryInformation;

        $r1 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getTitle()>();

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r12 = r5.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r13 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getTitle()>();

        virtualinvoke $r12.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void setTitle(java.lang.String)>($r13);

     label1:
        $r2 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getAuthor()>();

        $z1 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r2);

        if $z1 == 0 goto label2;

        $r10 = r5.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r11 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getAuthor()>();

        virtualinvoke $r10.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addAuthor(java.lang.String)>($r11);

     label2:
        $r3 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getKeywords()>();

        $z2 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r3);

        if $z2 == 0 goto label3;

        $r8 = r5.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r9 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getKeywords()>();

        virtualinvoke $r8.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addKeywords(java.lang.String)>($r9);

     label3:
        $r4 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getComments()>();

        $z3 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r4);

        if $z3 == 0 goto label4;

        $r6 = r5.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r7 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getComments()>();

        virtualinvoke $r6.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addDescription(java.lang.String)>($r7);

     label4:
        return;
    }

    public void processDocumentPart(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.usermodel.Range r2;
        org.apache.poi.hwpf.HWPFDocumentCore r1;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.Range;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDocumentPart(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Range)>(r1, r2);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: void afterProcess()>();

        return;
    }

    protected void processDropDownList(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun, java.lang.String[], int)
    {
        org.apache.poi.hwpf.usermodel.CharacterRun r8;
        java.lang.String[] r3;
        org.w3c.dom.Element $r2, r4, $r7;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r1, $r6;
        int $i0, i1, i2;
        java.lang.String $r5;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r4 := @parameter0: org.w3c.dom.Element;

        r8 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r3 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createSelect()>();

        i2 = 0;

     label1:
        $i0 = lengthof r3;

        if i2 >= $i0 goto label4;

        $r6 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r5 = r3[i2];

        if i1 != i2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r7 = virtualinvoke $r6.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createOption(java.lang.String,boolean)>($r5, $z0);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        i2 = i2 + 1;

        goto label1;

     label4:
        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return;
    }

    protected void processDrawnObject(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.CharacterRun, org.apache.poi.hwpf.usermodel.OfficeDrawing, java.lang.String, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.HWPFDocument r5;
        org.apache.poi.hwpf.usermodel.CharacterRun r6;
        org.w3c.dom.Element $r3, r4;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2;
        java.lang.String r1;
        org.apache.poi.hwpf.usermodel.OfficeDrawing r7;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r5 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r6 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r7 := @parameter2: org.apache.poi.hwpf.usermodel.OfficeDrawing;

        r1 := @parameter3: java.lang.String;

        r4 := @parameter4: org.w3c.dom.Element;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createImage(java.lang.String)>(r1);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        return;
    }

    protected void processEndnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.usermodel.Range r3;
        org.apache.poi.hwpf.HWPFDocument r1;
        org.w3c.dom.Element r2;
        int i0;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        i0 := @parameter1: int;

        r2 := @parameter2: org.w3c.dom.Element;

        r3 := @parameter3: org.apache.poi.hwpf.usermodel.Range;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: void processNoteAutonumbered(org.apache.poi.hwpf.HWPFDocument,java.lang.String,int,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range)>(r1, "end", i0, r2, r3);

        return;
    }

    protected void processFootnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.usermodel.Range r3;
        org.apache.poi.hwpf.HWPFDocument r1;
        org.w3c.dom.Element r2;
        int i0;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        i0 := @parameter1: int;

        r2 := @parameter2: org.w3c.dom.Element;

        r3 := @parameter3: org.apache.poi.hwpf.usermodel.Range;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: void processNoteAutonumbered(org.apache.poi.hwpf.HWPFDocument,java.lang.String,int,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range)>(r1, "foot", i0, r2, r3);

        return;
    }

    protected void processHyperlink(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.lang.String)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r6;
        org.apache.poi.hwpf.usermodel.Range r5;
        org.w3c.dom.Element $r3, r4;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2;
        int i0;
        java.lang.String r1;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r6 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r4 := @parameter1: org.w3c.dom.Element;

        r5 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createHyperlink(java.lang.String)>(r1);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        if r5 == null goto label1;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r6, i0, r5, $r3);

     label1:
        return;
    }

    protected void processImage(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture, java.lang.String)
    {
        byte $b8, $b9, $b10, $b11;
        org.apache.poi.hwpf.usermodel.Picture r0;
        java.lang.StringBuilder $r1, $r7, $r8, $r9, $r10, $r11, $r12, $r18, $r19, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r32, $r33, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r5, $r14, $r17, $r25, $r27, $r35, $r37;
        java.lang.String r3, $r13, $r24, $r34, $r48;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r2;
        boolean z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13, f14, f15, f16, f17, $f18, $f19, $f20, $f21, $f22, $f23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        org.w3c.dom.Element r4, $r6, $r15, r16, $r26, $r36;

        r2 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r4 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        r0 := @parameter2: org.apache.poi.hwpf.usermodel.Picture;

        r3 := @parameter3: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getHorizontalScalingFactor()>();

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getVerticalScalingFactor()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        if $i0 <= 0 goto label1;

        $i21 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaGoal()>();

        $i22 = $i21 * $i0;

        $i23 = $i22 / 1000;

        $f9 = (float) $i23;

        f12 = $f9 / 1440.0F;

        $i24 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaCropRight()>();

        $i25 = $i24 * $i0;

        $i26 = $i25 / 1000;

        $f10 = (float) $i26;

        f13 = $f10 / 1440.0F;

        $i27 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaCropLeft()>();

        $i28 = $i27 * $i0;

        $i29 = $i28 / 1000;

        $f11 = (float) $i29;

        f14 = $f11 / 1440.0F;

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaGoal()>();

        $f0 = (float) $i2;

        f12 = $f0 / 1440.0F;

        $i3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaCropRight()>();

        $f1 = (float) $i3;

        f13 = $f1 / 1440.0F;

        $i4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaCropLeft()>();

        $f2 = (float) $i4;

        f14 = $f2 / 1440.0F;

     label2:
        if $i1 <= 0 goto label3;

        $i12 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaGoal()>();

        $i13 = $i12 * $i1;

        $i14 = $i13 / 1000;

        $f6 = (float) $i14;

        f15 = $f6 / 1440.0F;

        $i15 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaCropTop()>();

        $i16 = $i15 * $i1;

        $i17 = $i16 / 1000;

        $f7 = (float) $i17;

        f16 = $f7 / 1440.0F;

        $i18 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaCropBottom()>();

        $i19 = $i18 * $i1;

        $i20 = $i19 / 1000;

        $f8 = (float) $i20;

        f17 = $f8 / 1440.0F;

        goto label4;

     label3:
        $i5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaGoal()>();

        $f3 = (float) $i5;

        f15 = $f3 / 1440.0F;

        $i6 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaCropTop()>();

        $f4 = (float) $i6;

        f16 = $f4 / 1440.0F;

        $i7 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaCropBottom()>();

        $f5 = (float) $i7;

        f17 = $f5 / 1440.0F;

     label4:
        $b8 = f16 cmpl 0.0F;

        if $b8 != 0 goto label5;

        $b9 = f13 cmpl 0.0F;

        if $b9 != 0 goto label5;

        $b10 = f17 cmpl 0.0F;

        if $b10 != 0 goto label5;

        $b11 = f14 cmpl 0.0F;

        if $b11 == 0 goto label6;

     label5:
        $f18 = f12 - f14;

        $f19 = $f18 - f13;

        $f20 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f19);

        $f21 = f15 - f16;

        $f22 = $f21 - f17;

        $f23 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f22);

        $r14 = r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r15 = virtualinvoke $r14.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createBlock()>();

        r16 = $r15;

        $r17 = r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vertical-align:text-bottom;width:");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f20);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;height:");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f23);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r15, "d", $r24);

        $r25 = r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r26 = virtualinvoke $r25.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r27 = r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position:relative;width:");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f20);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;height:");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f23);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;overflow:hidden;");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r26, "d", $r34);

        interfaceinvoke $r15.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r26);

        $r35 = r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r36 = virtualinvoke $r35.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createImage(java.lang.String)>(r3);

        $r37 = r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position:absolute;left:-");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f14);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";top:-");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f16);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";width:");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f12);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;height:");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f15);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r36, "i", $r48);

        interfaceinvoke $r26.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r36);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overflow:hidden;");

        goto label7;

     label6:
        $r5 = r2.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createImage(java.lang.String)>(r3);

        r16 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f12);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;height:");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f15);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;vertical-align:text-bottom;");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("style", $r13);

     label7:
        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r16);

        return;
    }

    protected void processImageWithoutPicturesManager(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture)
    {
        org.w3c.dom.Comment $r11;
        org.w3c.dom.Element r0;
        org.apache.poi.hwpf.usermodel.Picture r6;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2;
        org.w3c.dom.Document $r4;
        java.lang.StringBuilder $r3, $r5, $r8, $r9;
        java.lang.String $r7, $r10;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r1;
        boolean z0;

        r1 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r0 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        r6 := @parameter2: org.apache.poi.hwpf.usermodel.Picture;

        $r2 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r4 = $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image link to \'");

        $r7 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.Picture: java.lang.String suggestFullFileName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' can be here");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r10);

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        return;
    }

    protected void processLineBreak(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun)
    {
        org.w3c.dom.Element r0, $r3;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2;
        org.apache.poi.hwpf.usermodel.CharacterRun r4;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r1;

        r1 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r2 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createLineBreak()>();

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        return;
    }

    protected void processNoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, java.lang.String, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range)
    {
        org.w3c.dom.Text $r49;
        org.w3c.dom.Document $r51;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13, $r17, $r18, $r22, $r23, $r24, $r25, $r32, $r33, $r39, $r40, $r43, $r44, $r45, $r46, $r54, $r55, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74;
        java.lang.Throwable $r65;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2, $r16, $r29, $r36, $r48, $r50, $r62;
        java.lang.String $r0, $r3, r5, $r9, $r14, $r19, $r26, $r34, $r41, $r47, $r56;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r1;
        org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies $r75;
        org.apache.poi.hwpf.usermodel.Range r60;
        org.apache.poi.hwpf.HWPFDocument r59;
        java.util.Stack $r58, $r61, $r66;
        int i0, $i1, $i3;
        org.w3c.dom.Element $r20, r27, $r28, $r30, $r35, $r37, $r52, $r63, $r64;

        r1 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r59 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r5 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r27 := @parameter3: org.w3c.dom.Element;

        r60 := @parameter4: org.apache.poi.hwpf.usermodel.Range;

        $i1 = i0 + 1;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r2 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.lang.String getOrCreateCssClass(java.lang.String,java.lang.String)>("a", "vertical-align:super;font-size:smaller;");

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("note_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("note_back_");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = virtualinvoke $r16.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createHyperlink(java.lang.String)>($r19);

        interfaceinvoke $r20.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("name", $r14);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("noteanchor");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("class", $r26);

        interfaceinvoke $r20.<org.w3c.dom.Element: void setTextContent(java.lang.String)>($r0);

        interfaceinvoke r27.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r20);

        $r28 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Element notes>;

        if $r28 != null goto label1;

        $r62 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r63 = virtualinvoke $r62.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createBlock()>();

        r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Element notes> = $r63;

        $r64 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Element notes>;

        interfaceinvoke $r64.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("class", "notes");

     label1:
        $r29 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r30 = virtualinvoke $r29.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("note");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("class", $r34);

        $r35 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.w3c.dom.Element notes>;

        interfaceinvoke $r35.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r30);

        $r36 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r37 = virtualinvoke $r36.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createBookmark(java.lang.String)>($r9);

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("href", $r41);

        interfaceinvoke $r37.<org.w3c.dom.Element: void setTextContent(java.lang.String)>($r0);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("noteindex");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("class", $r47);

        interfaceinvoke $r30.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r37);

        $r48 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r49 = virtualinvoke $r48.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>(" ");

        interfaceinvoke $r30.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r49);

        $r50 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r51 = virtualinvoke $r50.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document getDocument()>();

        $r52 = interfaceinvoke $r51.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("span");

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notetext");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r52.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("class", $r56);

        interfaceinvoke $r30.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r52);

        $r58 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies>;

        $r75 = new org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies;

        $i3 = (int) -1;

        specialinvoke $r75.<org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies: void <init>(java.lang.String,int)>("", $i3);

        virtualinvoke $r58.<java.util.Stack: boolean add(java.lang.Object)>($r75);

     label2:
        virtualinvoke r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r59, -2147483648, r60, $r52);

     label3:
        $r61 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies>;

        virtualinvoke $r61.<java.util.Stack: java.lang.Object pop()>();

        goto label6;

     label4:
        $r65 := @caughtexception;

     label5:
        $r66 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies>;

        virtualinvoke $r66.<java.util.Stack: java.lang.Object pop()>();

        throw $r65;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void processPageBreak(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0, $r3;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2;
        org.apache.poi.hwpf.HWPFDocumentCore r4;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r1;

        r1 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r4 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r0 := @parameter1: org.w3c.dom.Element;

        $r2 = r1.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createLineBreak()>();

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        return;
    }

    protected void processPageref(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.lang.String)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r10;
        org.apache.poi.hwpf.usermodel.Range r9;
        org.w3c.dom.Element $r7, r8;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r2;
        int i0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r4, $r6;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r10 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r8 := @parameter1: org.w3c.dom.Element;

        r9 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createHyperlink(java.lang.String)>($r6);

        interfaceinvoke r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        if r9 == null goto label1;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r10, i0, r9, $r7);

     label1:
        return;
    }

    protected void processParagraph(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, int, org.apache.poi.hwpf.usermodel.Paragraph, java.lang.String)
    {
        org.w3c.dom.Text $r15, $r32;
        org.apache.poi.hwpf.HWPFDocumentCore r10;
        org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies $r39;
        org.apache.poi.hwpf.usermodel.Paragraph r5;
        org.apache.poi.hwpf.converter.FontReplacer$Triplet $r33;
        org.w3c.dom.Document $r17;
        boolean $z0, $z1;
        float $f0, $f1, f2, f3, f4;
        java.lang.StringBuilder $r21, $r22, $r23, $r28, $r29, $r30, $r38, $r40, $r41;
        java.lang.Throwable $r34;
        org.apache.poi.hwpf.usermodel.CharacterRun $r6;
        java.util.Stack $r8, $r35, $r37;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r1, $r11, $r13, $r16, $r20, $r26;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i14;
        java.lang.String r9, $r12, $r14, $r24, $r27, $r31, r36;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;
        double $d0, $d1, $d2;
        org.w3c.dom.Element $r2, r3, $r18;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r10 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r3 := @parameter1: org.w3c.dom.Element;

        i1 := @parameter2: int;

        r5 := @parameter3: org.apache.poi.hwpf.usermodel.Paragraph;

        r9 := @parameter4: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createParagraph()>();

        interfaceinvoke r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addParagraphProperties(org.apache.poi.hwpf.usermodel.Paragraph,java.lang.StringBuilder)>(r5, $r38);

        $i0 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Paragraph: int numCharacterRuns()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        $r6 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(0);

        if $r6 == null goto label02;

        $r33 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.FontReplacer$Triplet getCharacterRunTriplet(org.apache.poi.hwpf.usermodel.CharacterRun)>($r6);

        $i11 = virtualinvoke $r6.<org.apache.poi.hwpf.usermodel.CharacterRun: int getFontSize()>();

        i12 = $i11 / 2;

        r36 = $r33.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName>;

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addFontFamily(java.lang.String,java.lang.StringBuilder)>(r36, $r38);

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addFontSize(int,java.lang.StringBuilder)>(i12, $r38);

        goto label03;

     label02:
        $i14 = (int) -1;

        i12 = $i14;

        r36 = "";

     label03:
        $r8 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies>;

        $r39 = new org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies;

        specialinvoke $r39.<org.apache.poi.hwpf.converter.WordToHtmlConverter$BlockProperies: void <init>(java.lang.String,int)>(r36, i12);

        virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r39);

     label04:
        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>(r9);

        if $z0 == 0 goto label06;

        $z1 = virtualinvoke r9.<java.lang.String: boolean endsWith(java.lang.String)>("\t");

        if $z1 == 0 goto label05;

        $i5 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Paragraph: int getIndentFromLeft()>();

        $i6 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Paragraph: int getFirstLineIndent()>();

        $i7 = $i5 + $i6;

        $i8 = $i7 + 20;

        f2 = (float) $i8;

        $f0 = f2 / 720.0F;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $d2 = $d1 * 720.0;

        f3 = (float) $d2;

        f4 = f3 - f2;

        $r16 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r17 = virtualinvoke $r16.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document getDocument()>();

        $r18 = interfaceinvoke $r17.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("span");

        $r20 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("display: inline-block; text-indent: 0; min-width: ");

        $f1 = f4 / 1440.0F;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r18, "s", $r24);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);

        $r26 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $i9 = virtualinvoke r9.<java.lang.String: int length()>();

        $i10 = $i9 - 1;

        $r27 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i10);

        $r28 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8203);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(160);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = virtualinvoke $r26.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r31);

        interfaceinvoke $r18.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r32);

        goto label06;

     label05:
        $r13 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $i3 = virtualinvoke r9.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $r14 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r15 = virtualinvoke $r13.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r14);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r15);

     label06:
        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r10, i1, r5, $r2);

     label07:
        $r37 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies>;

        virtualinvoke $r37.<java.util.Stack: java.lang.Object pop()>();

        goto label10;

     label08:
        $r34 := @caughtexception;

     label09:
        $r35 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: java.util.Stack blocksProperies>;

        virtualinvoke $r35.<java.util.Stack: java.lang.Object pop()>();

        throw $r34;

     label10:
        $i2 = virtualinvoke $r38.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label11;

        $r11 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r12 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r2, "p", $r12);

     label11:
        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void compactSpans(org.w3c.dom.Element)>($r2);

        return;

        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected void processSection(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Section, int)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r8;
        org.apache.poi.hwpf.usermodel.Section r3;
        org.w3c.dom.Element $r2, $r7;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r1, $r4, $r6;
        int i0;
        java.lang.String $r5;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r8 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r3 := @parameter1: org.apache.poi.hwpf.usermodel.Section;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r4 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r5 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlConverter: java.lang.String getSectionStyle(org.apache.poi.hwpf.usermodel.Section)>(r3);

        virtualinvoke $r4.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r2, "d", $r5);

        $r6 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r7 = $r6.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element body>;

        interfaceinvoke $r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: void processParagraphes(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int)>(r8, $r2, r3, -2147483648);

        return;
    }

    protected void processSingleSection(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Section)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r6;
        org.apache.poi.hwpf.usermodel.Section r2;
        org.w3c.dom.Element $r4, $r8;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r1, $r3, $r7;
        java.lang.String $r5;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r6 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.Section;

        $r3 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r4 = $r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element body>;

        $r5 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlConverter: java.lang.String getSectionStyle(org.apache.poi.hwpf.usermodel.Section)>(r2);

        virtualinvoke $r3.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r4, "b", $r5);

        $r7 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r8 = $r7.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element body>;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: void processParagraphes(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int)>(r6, $r8, r2, -2147483648);

        return;
    }

    protected void processTable(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Table)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r25;
        java.lang.Integer $r12, $r13;
        org.apache.poi.hwpf.usermodel.TableCell $r22;
        java.lang.StringBuilder $r18, $r24;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade $r1, $r3, $r7, $r9, $r16, $r19, $r23, $r26, $r29, $r33;
        java.lang.String $r10, $r20, $r21, $r27, $r28, $r31, $r32;
        org.apache.poi.hwpf.converter.WordToHtmlConverter r0;
        org.apache.poi.hwpf.usermodel.TableRow $r15, $r34;
        int[] $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.poi.util.POILogger $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, $i16, $i17;
        org.apache.poi.hwpf.usermodel.Table r5;
        org.w3c.dom.Element $r2, $r4, $r8, r14, $r17, $r30, r35;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlConverter;

        r25 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r14 := @parameter1: org.w3c.dom.Element;

        r5 := @parameter2: org.apache.poi.hwpf.usermodel.Table;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createTableHeader()>();

        $r3 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createTableBody()>();

        $r6 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: int[] buildTableCellEdgesArray(org.apache.poi.hwpf.usermodel.Table)>(r5);

        $i0 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: int numRows()>();

        i11 = -2147483648;

        i12 = 0;

     label01:
        if i12 >= $i0 goto label02;

        $r34 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: org.apache.poi.hwpf.usermodel.TableRow getRow(int)>(i12);

        $i10 = virtualinvoke $r34.<org.apache.poi.hwpf.usermodel.TableRow: int numCells()>();

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i11, $i10);

        i12 = i12 + 1;

        goto label01;

     label02:
        i13 = 0;

     label03:
        if i13 >= $i0 goto label26;

        $r15 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: org.apache.poi.hwpf.usermodel.TableRow getRow(int)>(i13);

        $r16 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r17 = virtualinvoke $r16.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createTableRow()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addTableRowProperties(org.apache.poi.hwpf.usermodel.TableRow,java.lang.StringBuilder)>($r15, $r18);

        i14 = 0;

        $i3 = virtualinvoke $r15.<org.apache.poi.hwpf.usermodel.TableRow: int numCells()>();

        i15 = 0;

     label04:
        if i15 >= $i3 goto label22;

        $r22 = virtualinvoke $r15.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.TableCell getCell(int)>(i15);

        $z3 = virtualinvoke $r22.<org.apache.poi.hwpf.usermodel.TableCell: boolean isVerticallyMerged()>();

        if $z3 == 0 goto label05;

        $z6 = virtualinvoke $r22.<org.apache.poi.hwpf.usermodel.TableCell: boolean isFirstVerticallyMerged()>();

        if $z6 != 0 goto label05;

        $i9 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: int getNumberColumnsSpanned(int[],int,org.apache.poi.hwpf.usermodel.TableCell)>($r6, i14, $r22);

        i14 = i14 + $i9;

        goto label21;

     label05:
        $z4 = virtualinvoke $r15.<org.apache.poi.hwpf.usermodel.TableRow: boolean isTableHeader()>();

        if $z4 == 0 goto label06;

        $r33 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        r35 = virtualinvoke $r33.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createTableHeaderCell()>();

        goto label07;

     label06:
        $r23 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        r35 = virtualinvoke $r23.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createTableCell()>();

     label07:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        if i13 != 0 goto label08;

        $z7 = 1;

        goto label09;

     label08:
        $z7 = 0;

     label09:
        $i5 = $i0 - 1;

        if i13 != $i5 goto label10;

        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        if i15 != 0 goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        $i16 = $i3 - 1;

        if i15 != $i16 goto label14;

        $z10 = 1;

        goto label15;

     label14:
        $z10 = 0;

     label15:
        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addTableCellProperties(org.apache.poi.hwpf.usermodel.TableRow,org.apache.poi.hwpf.usermodel.TableCell,boolean,boolean,boolean,boolean,java.lang.StringBuilder)>($r15, $r22, $z7, $z8, $z9, $z10, $r24);

        $i17 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: int getNumberColumnsSpanned(int[],int,org.apache.poi.hwpf.usermodel.TableCell)>($r6, i14, $r22);

        i14 = i14 + $i17;

        if $i17 != 0 goto label16;

        goto label21;

     label16:
        if $i17 == 1 goto label17;

        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i17);

        interfaceinvoke r35.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("colspan", $r32);

     label17:
        $i6 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: int getNumberRowsSpanned(org.apache.poi.hwpf.usermodel.Table,int[],int,int,org.apache.poi.hwpf.usermodel.TableCell)>(r5, $r6, i13, i15, $r22);

        if $i6 <= 1 goto label18;

        $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

        interfaceinvoke r35.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("rowspan", $r31);

     label18:
        $i7 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: int getTableLevel()>();

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: void processParagraphes(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int)>(r25, r35, $r22, $i7);

        $z5 = interfaceinvoke r35.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z5 != 0 goto label19;

        $r29 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r30 = virtualinvoke $r29.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createParagraph()>();

        interfaceinvoke r35.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r30);

     label19:
        $i8 = virtualinvoke $r24.<java.lang.StringBuilder: int length()>();

        if $i8 <= 0 goto label20;

        $r26 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r27 = interfaceinvoke r35.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r35, $r27, $r28);

     label20:
        interfaceinvoke $r17.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r35);

     label21:
        i15 = i15 + 1;

        goto label04;

     label22:
        $i4 = virtualinvoke $r18.<java.lang.StringBuilder: int length()>();

        if $i4 <= 0 goto label23;

        $r19 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r19.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.lang.String getOrCreateCssClass(java.lang.String,java.lang.String)>("r", $r20);

        interfaceinvoke $r17.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("class", $r21);

     label23:
        $z2 = virtualinvoke $r15.<org.apache.poi.hwpf.usermodel.TableRow: boolean isTableHeader()>();

        if $z2 == 0 goto label24;

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r17);

        goto label25;

     label24:
        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r17);

     label25:
        i13 = i13 + 1;

        goto label03;

     label26:
        $r7 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r8 = virtualinvoke $r7.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element createTable()>();

        $r9 = r0.<org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.hwpf.converter.HtmlDocumentFacade htmlDocumentFacade>;

        $r10 = virtualinvoke $r9.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.lang.String getOrCreateCssClass(java.lang.String,java.lang.String)>("t", "table-layout:fixed;border-collapse:collapse;border-spacing:0;");

        interfaceinvoke $r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("class", $r10);

        $z0 = interfaceinvoke $r2.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z0 == 0 goto label27;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

     label27:
        $z1 = interfaceinvoke $r4.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z1 == 0 goto label28;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        interfaceinvoke r14.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        goto label29;

     label28:
        $r11 = <org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.util.POILogger logger>;

        $i1 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: int getStartOffset()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = virtualinvoke r5.<org.apache.poi.hwpf.usermodel.Table: int getEndOffset()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r11.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(5, "Table without body starting at [", $r12, "; ", $r13, ")");

     label29:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/converter/WordToHtmlConverter;");

        <org.apache.poi.hwpf.converter.WordToHtmlConverter: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
