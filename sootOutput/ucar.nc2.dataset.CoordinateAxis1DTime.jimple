public class ucar.nc2.dataset.CoordinateAxis1DTime extends ucar.nc2.dataset.CoordinateAxis1D
{
    private java.util.Date[] timeDates;
    private ucar.nc2.units.DateUnit dateUnit;

    public static ucar.nc2.dataset.CoordinateAxis1DTime factory(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableDS, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.dataset.CoordinateAxis1DTime $r3, $r6;
        ucar.nc2.dataset.VariableDS r0;
        ucar.ma2.DataType $r1, $r2;
        java.util.Formatter r5;
        ucar.nc2.Dimension $r7;
        java.lang.String $r8;
        ucar.nc2.dataset.NetcdfDataset r4;

        r4 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableDS;

        r5 := @parameter2: java.util.Formatter;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r1 != $r2 goto label1;

        $r6 = new ucar.nc2.dataset.CoordinateAxis1DTime;

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(0);

        $r8 = virtualinvoke $r7.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r6.<ucar.nc2.dataset.CoordinateAxis1DTime: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableDS,java.util.Formatter,java.lang.String)>(r4, r0, r5, $r8);

        return $r6;

     label1:
        $r3 = new ucar.nc2.dataset.CoordinateAxis1DTime;

        specialinvoke $r3.<ucar.nc2.dataset.CoordinateAxis1DTime: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableDS,java.util.Formatter)>(r4, r0, r5);

        return $r3;
    }

    private void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableDS, java.util.Formatter, java.lang.String) throws java.io.IOException
    {
        java.util.Date $r18;
        java.util.Formatter r20;
        boolean $z0;
        ucar.nc2.dataset.CoordinateAxis1DTime r0;
        ucar.nc2.dataset.VariableDS r2;
        ucar.ma2.DataType $r6;
        ucar.nc2.Group $r3;
        ucar.ma2.ArrayObject$D1 $r16;
        java.util.List $r10;
        ucar.nc2.Attribute r30;
        java.util.Date[] $r12, $r19;
        java.lang.StringBuilder $r21, $r23, $r24, $r25;
        java.lang.Object[] $r28;
        long $l0;
        ucar.ma2.ArrayChar r14;
        int $i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r4, r5, $r7, $r8, $r9, $r17, $r26;
        ucar.ma2.ArrayChar$StringIterator $r15;
        java.io.PrintStream $r22;
        java.util.Iterator $r11;
        java.lang.IllegalArgumentException $r27;
        ucar.ma2.Array $r13;
        java.lang.Object $r29;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.dataset.VariableDS;

        r20 := @parameter2: java.util.Formatter;

        r5 := @parameter3: java.lang.String;

        $r3 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Group getParentGroup()>();

        $r4 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r7 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: java.lang.String getUnitsString()>();

        $r8 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: java.lang.String getDescription()>();

        specialinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, $r3, $r4, $r6, r5, $r7, $r8);

        r0.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.dataset.NetcdfDataset ncd> = r1;

        $r9 = r2.<ucar.nc2.dataset.VariableDS: java.lang.String orgName>;

        r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.lang.String orgName> = $r9;

        $r10 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: java.util.List getAttributes()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r29 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r30 = (ucar.nc2.Attribute) $r29;

        virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>(r30);

        goto label1;

     label2:
        $l0 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: long getSize()>();

        i4 = (int) $l0;

        $i1 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i2 = $i1 - 1;

        $i3 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: int getShape(int)>($i2);

        i5 = i4 / $i3;

        $r12 = newarray (java.util.Date)[i5];

        r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates> = $r12;

        $r13 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array read()>();

        r14 = (ucar.ma2.ArrayChar) $r13;

        $r15 = virtualinvoke r14.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

        $r16 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r16.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", i5);

        i6 = 0;

     label3:
        if i6 >= i5 goto label7;

        $r17 = virtualinvoke $r15.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

        $r18 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>($r17);

        if $r18 != null goto label6;

        if r20 == null goto label4;

        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = $r17;

        virtualinvoke r20.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("DateUnit cannot parse String= %s\n", $r28);

        goto label5;

     label4:
        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DateUnit cannot parse String= ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label5:
        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r27;

     label6:
        virtualinvoke $r16.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i6, $r17);

        $r19 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r19[i6] = $r18;

        i6 = i6 + 1;

        goto label3;

     label7:
        virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1DTime: void setCachedData(ucar.ma2.Array,boolean)>($r16, 1);

        return;
    }

    private void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableDS, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Exception $r45, $r46, $r50;
        java.lang.StringBuilder $r10, $r11, $r12, $r20, $r22, $r23, $r24;
        java.lang.Object[] $r27, $r49;
        long $l0;
        java.lang.String $r4, $r13, $r25, $r31, r54;
        ucar.nc2.units.DateUnit $r9, $r44, $r48, r51;
        ucar.ma2.Array $r14, $r28, $r34, $r55;
        ucar.ma2.Index $r35, $r41;
        ucar.nc2.Dimension $r30;
        ucar.nc2.dataset.NetcdfDataset r1;
        java.util.Date $r7, $r17, $r42;
        java.util.Formatter r19;
        int[] $r33;
        boolean $z0, $z1;
        ucar.nc2.dataset.CoordinateAxis1DTime r0;
        ucar.nc2.dataset.VariableDS r2;
        ucar.ma2.DataType $r5, $r6;
        java.util.Date[] $r3, $r8, $r18, $r38, $r39, $r40, $r43, r52;
        int i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        ucar.nc2.Variable$Cache $r37;
        double $d0, $d1, $d2;
        java.io.PrintStream $r21, $r47;
        ucar.ma2.ArrayObject r53;
        ucar.ma2.IndexIterator $r15, $r29, $r36, $r56;
        java.lang.IllegalArgumentException $r26;
        java.lang.Object $r16;
        java.lang.Class $r32;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.dataset.VariableDS;

        r19 := @parameter2: java.util.Formatter;

        specialinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableDS)>(r1, r2);

        $l0 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: long getSize()>();

        i1 = (int) $l0;

        $r3 = newarray (java.util.Date)[i1];

        r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates> = $r3;

        r51 = null;

        $r4 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: java.lang.String getUnitsString()>();

        if $r4 == null goto label04;

     label01:
        $r44 = new ucar.nc2.units.DateUnit;

        specialinvoke $r44.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>($r4);

        r51 = $r44;

     label02:
        goto label04;

     label03:
        $r50 := @caughtexception;

     label04:
        if r51 == null goto label14;

        $r28 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array read()>();

        i4 = 0;

        $r29 = virtualinvoke $r28.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i5 = 0;

     label05:
        if i5 >= i1 goto label08;

        $d2 = interfaceinvoke $r29.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z1 == 0 goto label06;

        goto label07;

     label06:
        $r42 = virtualinvoke r51.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d2);

        $r43 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $i3 = i4;

        i4 = i4 + 1;

        $r43[$i3] = $r42;

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        if i4 == i1 goto label13;

        $r30 = new ucar.nc2.Dimension;

        $r31 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.lang.String getShortName()>();

        specialinvoke $r30.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>($r31, i4, 0);

        virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1DTime: void setDimension(int,ucar.nc2.Dimension)>(0, $r30);

        $r32 = virtualinvoke $r28.<ucar.ma2.Array: java.lang.Class getElementType()>();

        $r33 = newarray (int)[1];

        $r33[0] = i4;

        $r34 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r32, $r33);

        $r35 = virtualinvoke $r34.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i6 = 0;

        $r36 = virtualinvoke $r28.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i7 = 0;

     label09:
        if i7 >= i1 goto label12;

        $d1 = interfaceinvoke $r36.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z0 == 0 goto label10;

        goto label11;

     label10:
        $r41 = virtualinvoke $r35.<ucar.ma2.Index: ucar.ma2.Index set0(int)>(i6);

        virtualinvoke $r34.<ucar.ma2.Array: void setDouble(ucar.ma2.Index,double)>($r41, $d1);

        i6 = i6 + 1;

     label11:
        i7 = i7 + 1;

        goto label09;

     label12:
        $r37 = new ucar.nc2.Variable$Cache;

        specialinvoke $r37.<ucar.nc2.Variable$Cache: void <init>()>();

        r0.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.Variable$Cache cache> = $r37;

        virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1DTime: void setCachedData(ucar.ma2.Array,boolean)>($r34, 1);

        r52 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r38 = newarray (java.util.Date)[i4];

        r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates> = $r38;

        $r40 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r39 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $i2 = lengthof $r39;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r52, 0, $r40, 0, $i2);

     label13:
        return;

     label14:
        $r5 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r5 != $r6 goto label20;

        $r14 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array read()>();

        r53 = (ucar.ma2.ArrayObject) $r14;

        $r15 = virtualinvoke r53.<ucar.ma2.ArrayObject: ucar.ma2.IndexIterator getIndexIterator()>();

        i8 = 0;

     label15:
        if i8 >= i1 goto label19;

        $r16 = interfaceinvoke $r15.<ucar.ma2.IndexIterator: java.lang.Object getObjectNext()>();

        r54 = (java.lang.String) $r16;

        $r17 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>(r54);

        if $r17 != null goto label18;

        if r19 == null goto label16;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = r54;

        virtualinvoke r19.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("DateUnit cannot parse String= %s\n", $r27);

        goto label17;

     label16:
        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DateUnit cannot parse String= ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label17:
        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r26;

     label18:
        $r18 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r18[i8] = $r17;

        i8 = i8 + 1;

        goto label15;

     label19:
        return;

     label20:
        if $r4 == null goto label29;

     label21:
        $r9 = new ucar.nc2.units.DateUnit;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since 0001-01-01 00:00:00");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>($r13);

        r51 = $r9;

     label22:
        goto label29;

     label23:
        $r46 := @caughtexception;

     label24:
        if r19 == null goto label25;

        $r49 = newarray (java.lang.Object)[0];

        virtualinvoke r19.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Time Coordinate must be udunits or ISO String: hack since 0001-01-01 00:00:00\n", $r49);

        goto label26;

     label25:
        $r47 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("Time Coordinate must be udunits or ISO String: hack since 0001-01-01 00:00:00\n");

     label26:
        $r48 = new ucar.nc2.units.DateUnit;

        specialinvoke $r48.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>("secs since 0001-01-01 00:00:00");

        r51 = $r48;

     label27:
        goto label29;

     label28:
        $r45 := @caughtexception;

     label29:
        $r55 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array read()>();

        $r56 = virtualinvoke $r55.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i9 = 0;

     label30:
        if i9 >= i1 goto label31;

        $d0 = interfaceinvoke $r56.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $r7 = virtualinvoke r51.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        $r8 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r8[i9] = $r7;

        i9 = i9 + 1;

        goto label30;

     label31:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label24 to label27 with label28;
    }

    private void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.CoordinateAxis1DTime, java.util.Date[])
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r0, r2;
        java.util.Date[] r3;
        ucar.nc2.units.DateUnit $r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.dataset.CoordinateAxis1DTime;

        r3 := @parameter2: java.util.Date[];

        specialinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateAxis1D)>(r1, r2);

        r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates> = r3;

        $r4 = r2.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.units.DateUnit dateUnit>;

        r0.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.units.DateUnit dateUnit> = $r4;

        return;
    }

    protected ucar.nc2.Variable copy()
    {
        ucar.nc2.dataset.CoordinateAxis1DTime $r0, r1;
        java.util.Date[] $r3;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r1 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        $r0 = new ucar.nc2.dataset.CoordinateAxis1DTime;

        $r2 = r1.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r3 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] getTimeDates()>();

        specialinvoke $r0.<ucar.nc2.dataset.CoordinateAxis1DTime: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateAxis1DTime,java.util.Date[])>($r2, r1, $r3);

        return $r0;
    }

    public java.util.Date[] getTimeDates()
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r0;
        java.util.Date[] $r1;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        $r1 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        return $r1;
    }

    public java.util.Date getTimeDate(int)
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r0;
        java.util.Date $r2;
        int i0;
        java.util.Date[] $r1;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r2 = $r1[i0];

        return $r2;
    }

    public ucar.nc2.units.DateRange getDateRange()
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r1;
        java.util.Date $r5, $r6;
        ucar.nc2.units.DateRange $r0;
        int $i0, $i1;
        java.util.Date[] $r2, $r3, $r4;

        r1 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        $r0 = new ucar.nc2.units.DateRange;

        $r2 = r1.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r6 = $r2[0];

        $r4 = r1.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r3 = r1.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $i0 = lengthof $r3;

        $i1 = $i0 - 1;

        $r5 = $r4[$i1];

        specialinvoke $r0.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>($r6, $r5);

        return $r0;
    }

    public java.util.List getNames()
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r1;
        java.util.Date $r4;
        long $l0;
        java.util.ArrayList $r2;
        int i1, i2;
        java.lang.String $r5;
        ucar.nc2.util.NamedAnything $r3;
        ucar.nc2.units.DateFormatter $r0;

        r1 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        $r0 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r0.<ucar.nc2.units.DateFormatter: void <init>()>();

        $l0 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1DTime: long getSize()>();

        i1 = (int) $l0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r3 = new ucar.nc2.util.NamedAnything;

        $r4 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date getTimeDate(int)>(i2);

        $r5 = virtualinvoke $r0.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r4);

        specialinvoke $r3.<ucar.nc2.util.NamedAnything: void <init>(java.lang.String,java.lang.String)>($r5, "date/time");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public ucar.nc2.units.TimeUnit getTimeResolution() throws java.lang.Exception
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r0;
        java.util.StringTokenizer $r2;
        java.lang.String $r1, $r4;
        ucar.nc2.units.TimeUnit $r3;
        double $d0;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.lang.String getUnitsString()>();

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String)>($r1);

        $d0 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1DTime: double getIncrement()>();

        $r3 = new ucar.nc2.units.TimeUnit;

        $r4 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        specialinvoke $r3.<ucar.nc2.units.TimeUnit: void <init>(double,java.lang.String)>($d0, $r4);

        return $r3;
    }

    public int findTimeIndexFromDate(java.util.Date)
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r0;
        java.util.Date r2, $r4;
        long $l1, $l4;
        byte $b5;
        int i0, $i2, $i3, i6, $i7;
        java.util.Date[] $r1, $r3;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        r2 := @parameter0: java.util.Date;

        $r1 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        i0 = lengthof $r1;

        $l1 = virtualinvoke r2.<java.util.Date: long getTime()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label3;

        $r3 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r4 = $r3[i6];

        $l4 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $b5 = $l1 cmp $l4;

        $i7 = (int) $b5;

        if $i7 >= 0 goto label2;

        goto label3;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $i2 = i6 - 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        return $i3;
    }

    public boolean hasTime(java.util.Date)
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r0;
        java.util.Date r2, r3;
        int i0, i1;
        java.util.Date[] r1;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        r3 := @parameter0: java.util.Date;

        r1 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $z0 = virtualinvoke r3.<java.util.Date: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public ucar.nc2.dataset.CoordinateAxis1D section(ucar.ma2.Range) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r0, $r4;
        ucar.ma2.Range r1;
        java.util.Date $r6;
        ucar.nc2.dataset.CoordinateAxis1D $r2;
        int $i0, $i1, $i2, i3, i4;
        java.util.Date[] r3, $r5;

        r0 := @this: ucar.nc2.dataset.CoordinateAxis1DTime;

        r1 := @parameter0: ucar.ma2.Range;

        $r2 = specialinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.dataset.CoordinateAxis1D section(ucar.ma2.Range)>(r1);

        $i0 = virtualinvoke r1.<ucar.ma2.Range: int length()>();

        r3 = newarray (java.util.Date)[$i0];

        i3 = virtualinvoke r1.<ucar.ma2.Range: int first()>();

        i4 = 0;

     label1:
        $i1 = virtualinvoke r1.<ucar.ma2.Range: int last()>();

        if i3 > $i1 goto label2;

        $r5 = r0.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates>;

        $r6 = $r5[i3];

        r3[i4] = $r6;

        $i2 = virtualinvoke r1.<ucar.ma2.Range: int stride()>();

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r4 = (ucar.nc2.dataset.CoordinateAxis1DTime) $r2;

        $r4.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] timeDates> = r3;

        return $r2;
    }
}
