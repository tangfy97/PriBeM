class org.xml.sax.helpers.NewInstance extends java.lang.Object
{
    private static final boolean DO_FALLBACK;
    static java.lang.Class class$org$xml$sax$helpers$NewInstance;

    void <init>()
    {
        org.xml.sax.helpers.NewInstance r0;

        r0 := @this: org.xml.sax.helpers.NewInstance;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Object newInstance(java.lang.ClassLoader, java.lang.String) throws java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        java.lang.ClassNotFoundException $r1;
        java.lang.Class $r2, r5, $r6;
        java.lang.Object $r7;
        java.lang.String r0;
        java.lang.ClassLoader $r3, r4;

        r4 := @parameter0: java.lang.ClassLoader;

        r0 := @parameter1: java.lang.String;

        if r4 != null goto label1;

        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        goto label7;

     label1:
        r5 = virtualinvoke r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label2:
        goto label7;

     label3:
        $r1 := @caughtexception;

        $r2 = <org.xml.sax.helpers.NewInstance: java.lang.Class class$org$xml$sax$helpers$NewInstance>;

        if $r2 != null goto label4;

        $r6 = staticinvoke <org.xml.sax.helpers.NewInstance: java.lang.Class class$(java.lang.String)>("org.xml.sax.helpers.NewInstance");

        <org.xml.sax.helpers.NewInstance: java.lang.Class class$org$xml$sax$helpers$NewInstance> = $r6;

        goto label5;

     label4:
        $r6 = <org.xml.sax.helpers.NewInstance: java.lang.Class class$org$xml$sax$helpers$NewInstance>;

     label5:
        $r3 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r3 == null goto label6;

        r5 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

        goto label7;

     label6:
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label7:
        $r7 = virtualinvoke r5.<java.lang.Class: java.lang.Object newInstance()>();

        return $r7;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.lang.ClassLoader getClassLoader()
    {
        java.lang.Class $r1, $r3;
        java.lang.ClassLoader $r0, r2;

        $r0 = staticinvoke <org.xml.sax.helpers.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

        r2 = $r0;

        if $r0 != null goto label3;

        $r1 = <org.xml.sax.helpers.NewInstance: java.lang.Class class$org$xml$sax$helpers$NewInstance>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.xml.sax.helpers.NewInstance: java.lang.Class class$(java.lang.String)>("org.xml.sax.helpers.NewInstance");

        <org.xml.sax.helpers.NewInstance: java.lang.Class class$org$xml$sax$helpers$NewInstance> = $r3;

        goto label2;

     label1:
        $r3 = <org.xml.sax.helpers.NewInstance: java.lang.Class class$org$xml$sax$helpers$NewInstance>;

     label2:
        r2 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label3:
        return r2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <org.xml.sax.helpers.NewInstance: boolean DO_FALLBACK> = 1;

        return;
    }
}
