public abstract class org.springframework.remoting.support.RemoteInvocationUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.remoting.support.RemoteInvocationUtils r0;

        r0 := @this: org.springframework.remoting.support.RemoteInvocationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void fillInClientStackTraceIfPossible(java.lang.Throwable)
    {
        java.lang.Throwable r0, $r1, r6;
        java.util.HashSet $r3;
        java.lang.StackTraceElement[] $r2, $r4, r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @parameter0: java.lang.Throwable;

        if r0 == null goto label3;

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r6 = r0;

        goto label2;

     label1:
        $r4 = virtualinvoke r6.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i1 = lengthof $r4;

        $i0 = lengthof $r2;

        $i2 = $i1 + $i0;

        r5 = newarray (java.lang.StackTraceElement)[$i2];

        $i3 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r5, 0, $i3);

        $i5 = lengthof $r4;

        $i4 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r5, $i5, $i4);

        virtualinvoke r6.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(r5);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r6);

        r6 = virtualinvoke r6.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label2:
        if r6 == null goto label3;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z0 == 0 goto label1;

     label3:
        return;
    }
}
