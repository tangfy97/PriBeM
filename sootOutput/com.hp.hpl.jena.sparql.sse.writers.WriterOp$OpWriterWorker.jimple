public class com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker extends java.lang.Object implements com.hp.hpl.jena.sparql.algebra.OpVisitor
{
    private org.apache.jena.atlas.io.IndentedWriter out;
    private com.hp.hpl.jena.sparql.serializer.SerializationContext sContext;

    public void <init>(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter r2;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r2 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r1 := @parameter1: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext> = r1;

        r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out> = r2;

        return;
    }

    private void visitOpN(com.hp.hpl.jena.sparql.algebra.op.OpN)
    {
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.algebra.op.OpN r1;
        java.lang.Object $r3;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r5;
        com.hp.hpl.jena.sparql.algebra.Op r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpN;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, 1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpN: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.algebra.Op) $r3;

        $r5 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void ensureStartOfLine()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>(r4);

        goto label1;

     label2:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    private void visitOp2(com.hp.hpl.jena.sparql.algebra.op.Op2, com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.sparql.algebra.op.Op2 r1;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r7;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r6, $r8;
        com.hp.hpl.jena.sparql.expr.ExprList r5;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.Op $r2, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.Op2;

        r5 := @parameter1: com.hp.hpl.jena.sparql.expr.ExprList;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, 1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op2: com.hp.hpl.jena.sparql.algebra.Op getLeft()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r2);

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void ensureStartOfLine()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op2: com.hp.hpl.jena.sparql.algebra.Op getRight()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r4);

        if r5 == null goto label1;

        $r6 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void ensureStartOfLine()>();

        $r8 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterExpr: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.expr.ExprList,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r8, r5, $r7);

     label1:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    private void visitOp1(com.hp.hpl.jena.sparql.algebra.op.Op1)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.Op1 r1;
        com.hp.hpl.jena.sparql.algebra.Op $r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.Op1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, 1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op1: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r2);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpBGP)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpBGP r0;
        com.hp.hpl.jena.sparql.core.BasicPattern $r1, $r3, $r4;
        int $i0, $i2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r2;

        r2 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpBGP;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpBGP: com.hp.hpl.jena.sparql.core.BasicPattern getPattern()>();

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.BasicPattern: int size()>();

        if $i0 != 1 goto label1;

        $i2 = (int) -1;

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, $i2);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpBGP: com.hp.hpl.jena.sparql.core.BasicPattern getPattern()>();

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void write(com.hp.hpl.jena.sparql.core.BasicPattern,boolean)>($r4, 1);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;

     label1:
        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, 1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpBGP: com.hp.hpl.jena.sparql.core.BasicPattern getPattern()>();

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void write(com.hp.hpl.jena.sparql.core.BasicPattern,boolean)>($r3, 0);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern)
    {
        com.hp.hpl.jena.sparql.core.QuadPattern $r1;
        int $i0, $i2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r2;
        com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern r0;
        com.hp.hpl.jena.sparql.core.Quad $r3;

        r2 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern: com.hp.hpl.jena.sparql.core.QuadPattern getPattern()>();

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.QuadPattern: int size()>();

        if $i0 != 1 goto label1;

        $i2 = (int) -1;

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, $i2);

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.QuadPattern: com.hp.hpl.jena.sparql.core.Quad get(int)>(0);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatQuad(com.hp.hpl.jena.sparql.core.Quad)>($r3);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;

     label1:
        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, 1);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void write(com.hp.hpl.jena.sparql.core.QuadPattern,boolean)>($r1, 0);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpQuadBlock)
    {
        com.hp.hpl.jena.sparql.core.QuadPattern $r1;
        int $i0, $i2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r2;
        com.hp.hpl.jena.sparql.algebra.op.OpQuadBlock r0;
        com.hp.hpl.jena.sparql.core.Quad $r3;

        r2 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpQuadBlock;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpQuadBlock: com.hp.hpl.jena.sparql.core.QuadPattern getPattern()>();

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.QuadPattern: int size()>();

        if $i0 != 1 goto label1;

        $i2 = (int) -1;

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, $i2);

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.QuadPattern: com.hp.hpl.jena.sparql.core.Quad get(int)>(0);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatQuad(com.hp.hpl.jena.sparql.core.Quad)>($r3);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;

     label1:
        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, 1);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void write(com.hp.hpl.jena.sparql.core.QuadPattern,boolean)>($r1, 0);

        specialinvoke r2.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;
    }

    private void write(com.hp.hpl.jena.sparql.core.BasicPattern, boolean)
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.sparql.core.BasicPattern r0;
        org.apache.jena.atlas.io.IndentedWriter $r5, $r6;
        com.hp.hpl.jena.graph.Triple r3;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r4;
        boolean $z0, z1, z2;

        r4 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.BasicPattern;

        z1 := @parameter1: boolean;

        z2 = 1;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.BasicPattern: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.graph.Triple) $r2;

        specialinvoke r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatTriple(com.hp.hpl.jena.graph.Triple)>(r3);

        if z1 == 0 goto label2;

        if z2 != 0 goto label3;

        $r6 = r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        goto label3;

     label2:
        $r5 = r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

     label3:
        z2 = 0;

        goto label1;

     label4:
        return;
    }

    private void write(com.hp.hpl.jena.sparql.core.QuadPattern, boolean)
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.sparql.core.QuadPattern r0;
        org.apache.jena.atlas.io.IndentedWriter $r5, $r6;
        com.hp.hpl.jena.sparql.core.Quad r3;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r4;
        boolean $z0, z1, z2;

        r4 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.QuadPattern;

        z1 := @parameter1: boolean;

        z2 = 1;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.QuadPattern: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.sparql.core.Quad) $r2;

        specialinvoke r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatQuad(com.hp.hpl.jena.sparql.core.Quad)>(r3);

        if z1 == 0 goto label2;

        if z2 != 0 goto label3;

        $r6 = r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        goto label3;

     label2:
        $r5 = r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

     label3:
        z2 = 0;

        goto label1;

     label4:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpTriple)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpTriple r1;
        com.hp.hpl.jena.graph.Triple $r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpTriple;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpTriple: com.hp.hpl.jena.graph.Triple getTriple()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatTriple(com.hp.hpl.jena.graph.Triple)>($r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpQuad)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpQuad r1;
        com.hp.hpl.jena.sparql.core.Quad $r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpQuad;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpQuad: com.hp.hpl.jena.sparql.core.Quad getQuad()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatQuad(com.hp.hpl.jena.sparql.core.Quad)>($r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpPath)
    {
        com.hp.hpl.jena.sparql.core.TriplePath $r2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpPath r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpPath: com.hp.hpl.jena.sparql.core.TriplePath getTriplePath()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatTriplePath(com.hp.hpl.jena.sparql.core.TriplePath)>($r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpProcedure)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r4, $r8;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.sparql.algebra.op.OpProcedure r1;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r5, $r6, $r9;
        com.hp.hpl.jena.sparql.expr.ExprList $r7;
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.Op $r10;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpProcedure;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpProcedure: com.hp.hpl.jena.graph.Node getProcId()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r2, $r3, $r4);

        $r5 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r6 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r7 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpProcedure: com.hp.hpl.jena.sparql.expr.ExprList getArgs()>();

        $r8 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterExpr: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.expr.ExprList,boolean,boolean,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r6, $r7, 1, 0, $r8);

        $r9 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r10 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpProcedure: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r10);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpPropFunc)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpPropFunc r1;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r4;
        com.hp.hpl.jena.graph.Node $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r6, $r8, $r10;
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg $r7, $r9;
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        java.lang.String $r5;
        com.hp.hpl.jena.sparql.algebra.Op $r11;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpPropFunc;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpPropFunc: com.hp.hpl.jena.graph.Node getProperty()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r3, $r4);

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r5);

        $r6 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r7 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpPropFunc: com.hp.hpl.jena.sparql.pfunction.PropFuncArg getSubjectArgs()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void outputPF(com.hp.hpl.jena.sparql.pfunction.PropFuncArg)>($r7);

        $r8 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        $r9 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpPropFunc: com.hp.hpl.jena.sparql.pfunction.PropFuncArg getObjectArgs()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void outputPF(com.hp.hpl.jena.sparql.pfunction.PropFuncArg)>($r9);

        $r10 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r11 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpPropFunc: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r11);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    private void outputPF(com.hp.hpl.jena.sparql.pfunction.PropFuncArg)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r4, $r7;
        com.hp.hpl.jena.graph.Node $r6;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r5;
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg r0;
        java.util.List $r3;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r1;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: boolean isNode()>();

        if $z0 == 0 goto label1;

        $r5 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: com.hp.hpl.jena.graph.Node getArg()>();

        $r7 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r5, $r6, $r7);

        return;

     label1:
        $r2 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: java.util.List getArgList()>();

        $r4 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,java.util.List,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r2, $r3, $r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpJoin)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpJoin r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpJoin;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp2(com.hp.hpl.jena.sparql.algebra.op.Op2,com.hp.hpl.jena.sparql.expr.ExprList)>(r1, null);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpSequence)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpSequence r1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpSequence;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOpN(com.hp.hpl.jena.sparql.algebra.op.OpN)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpDisjunction)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpDisjunction r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDisjunction;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOpN(com.hp.hpl.jena.sparql.algebra.op.OpN)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin r1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.expr.ExprList $r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin: com.hp.hpl.jena.sparql.expr.ExprList getExprs()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp2(com.hp.hpl.jena.sparql.algebra.op.Op2,com.hp.hpl.jena.sparql.expr.ExprList)>(r1, $r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpDiff)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpDiff r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDiff;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp2(com.hp.hpl.jena.sparql.algebra.op.Op2,com.hp.hpl.jena.sparql.expr.ExprList)>(r1, null);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpMinus)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpMinus r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpMinus;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp2(com.hp.hpl.jena.sparql.algebra.op.Op2,com.hp.hpl.jena.sparql.expr.ExprList)>(r1, null);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpUnion)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpUnion r1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpUnion;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp2(com.hp.hpl.jena.sparql.algebra.op.Op2,com.hp.hpl.jena.sparql.expr.ExprList)>(r1, null);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpConditional)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpConditional r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpConditional;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp2(com.hp.hpl.jena.sparql.algebra.op.Op2,com.hp.hpl.jena.sparql.expr.ExprList)>(r1, null);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpFilter)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpFilter r1;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r3;
        org.apache.jena.atlas.io.IndentedWriter $r4, $r5;
        com.hp.hpl.jena.sparql.expr.ExprList $r2;
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.Op $r6;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpFilter;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpFilter: com.hp.hpl.jena.sparql.expr.ExprList getExprs()>();

        if $r2 != null goto label1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish()>();

        goto label2;

     label1:
        $r4 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterExpr: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.expr.ExprList,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r4, $r2, $r3);

     label2:
        $r5 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpFilter: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r6);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpGraph)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpGraph r1;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r4;
        com.hp.hpl.jena.graph.Node $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2;
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        java.lang.String $r5;
        com.hp.hpl.jena.sparql.algebra.Op $r6;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpGraph;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpGraph: com.hp.hpl.jena.graph.Node getNode()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r3, $r4);

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpGraph: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        interfaceinvoke $r6.<com.hp.hpl.jena.sparql.algebra.Op: void visit(com.hp.hpl.jena.sparql.algebra.OpVisitor)>(r0);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpService)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpService r1;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r4;
        com.hp.hpl.jena.graph.Node $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r7;
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        java.lang.String $r5;
        com.hp.hpl.jena.sparql.algebra.Op $r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpService;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $z0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpService: boolean getSilent()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>("silent ");

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpService: com.hp.hpl.jena.graph.Node getService()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r3, $r4);

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpService: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        interfaceinvoke $r6.<com.hp.hpl.jena.sparql.algebra.Op: void visit(com.hp.hpl.jena.sparql.algebra.OpVisitor)>(r0);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpTable)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r7, $r11;
        com.hp.hpl.jena.sparql.algebra.op.OpTable r0;
        int $i1, $i3, $i5;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r3;
        boolean $z0, $z1;
        org.apache.jena.atlas.io.IndentedWriter $r4, $r8, $r9, $r12, $r13;
        java.util.List $r6;
        com.hp.hpl.jena.sparql.algebra.Table $r1, $r2, $r5, $r10;

        r3 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table getTable()>();

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.algebra.table.TableUnit: boolean isTableUnit(com.hp.hpl.jena.sparql.algebra.Table)>($r1);

        if $z0 == 0 goto label1;

        $i1 = (int) -1;

        specialinvoke r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, $i1);

        $r13 = r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r13.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("unit");

        specialinvoke r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table getTable()>();

        $z1 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.algebra.Table: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $i3 = (int) -1;

        specialinvoke r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, $i3);

        $r12 = r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r12.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("empty");

        specialinvoke r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;

     label2:
        $i5 = (int) -1;

        specialinvoke r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, $i5);

        $r4 = r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table getTable()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.algebra.Table: java.util.List getVars()>();

        $r7 = r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void outputVars(org.apache.jena.atlas.io.IndentedWriter,java.util.List,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r4, $r6, $r7);

        $r8 = r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r9 = r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table getTable()>();

        $r11 = r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterTable: void outputPlain(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.algebra.Table,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r9, $r10, $r11);

        specialinvoke r3.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpDatasetNames)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r4;
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpDatasetNames r1;
        com.hp.hpl.jena.graph.Node $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDatasetNames;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpDatasetNames: com.hp.hpl.jena.graph.Node getGraphNode()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r2, $r3, $r4);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpExt)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r2;
        com.hp.hpl.jena.sparql.algebra.op.OpExt r0;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r1;
        org.apache.jena.atlas.io.IndentedWriter $r3;

        r1 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpExt;

        $r3 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r2 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpExt: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r3, $r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpNull)
    {
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpNull r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpNull;

        $i1 = (int) -2;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpLabel)
    {
        org.apache.jena.atlas.io.IndentedWriter $r5, $r6;
        int $i1;
        java.lang.Object $r1;
        java.lang.String $r2, $r3;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r4;
        com.hp.hpl.jena.sparql.algebra.op.OpLabel r0;
        com.hp.hpl.jena.sparql.algebra.Op $r7;
        boolean $z0;

        r4 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpLabel;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpLabel: java.lang.Object getObject()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForString(java.lang.String)>($r2);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpLabel: boolean hasSubOp()>();

        if $z0 == 0 goto label1;

        specialinvoke r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, 1);

        $r6 = r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>($r3);

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpLabel: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r7);

        specialinvoke r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        goto label2;

     label1:
        $i1 = (int) -1;

        specialinvoke r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r0, $i1);

        $r5 = r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r3);

        specialinvoke r4.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

     label2:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpList)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpList r1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpList;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp1(com.hp.hpl.jena.sparql.algebra.op.Op1)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpGroup)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpGroup r1;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r12;
        int $i1;
        com.hp.hpl.jena.sparql.core.VarExprList $r2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r14;
        java.lang.String $r15, $r17;
        com.hp.hpl.jena.sparql.algebra.Op $r5;
        boolean $z0, $z1, z2;
        java.util.Iterator $r9;
        com.hp.hpl.jena.sparql.core.Var $r13;
        org.apache.jena.atlas.io.IndentedWriter $r4, $r6, $r7, $r10, $r16, $r18, $r19, $r20;
        java.util.List $r3, $r8;
        java.lang.Object $r11;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpGroup;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpGroup: com.hp.hpl.jena.sparql.core.VarExprList getGroupVars()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void writeNamedExprList(com.hp.hpl.jena.sparql.core.VarExprList)>($r2);

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpGroup: java.util.List getAggregators()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r6 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start()>();

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void incIndent()>();

        z2 = 1;

        $r8 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpGroup: java.util.List getAggregators()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.hp.hpl.jena.sparql.expr.ExprAggregator) $r11;

        if z2 != 0 goto label2;

        $r20 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r20.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

     label2:
        z2 = 0;

        $r13 = virtualinvoke r12.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var getVar()>();

        $r14 = virtualinvoke r12.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator getAggregator()>();

        $r15 = interfaceinvoke $r14.<com.hp.hpl.jena.sparql.expr.aggregate.Aggregator: java.lang.String toPrefixString()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start()>();

        $r16 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r17 = virtualinvoke $r13.<com.hp.hpl.jena.sparql.core.Var: java.lang.String toString()>();

        virtualinvoke $r16.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r17);

        $r18 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r18.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        $r19 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r19.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r15);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish()>();

        goto label1;

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish()>();

        $r10 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void decIndent()>();

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpGroup: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r5);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpOrder)
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.query.SortCondition r7;
        org.apache.jena.atlas.io.IndentedWriter $r4, $r8;
        com.hp.hpl.jena.sparql.algebra.op.OpOrder r1;
        java.util.List $r2;
        int $i1;
        java.lang.Object $r6;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.Op $r5;
        boolean $z0, z1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpOrder;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start()>();

        z1 = 1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpOrder: java.util.List getConditions()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.hp.hpl.jena.query.SortCondition) $r6;

        if z1 != 0 goto label2;

        $r8 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

     label2:
        z1 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatSortCondition(com.hp.hpl.jena.query.SortCondition)>(r7);

        goto label1;

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpOrder: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r5);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpTopN)
    {
        java.util.Iterator $r4;
        com.hp.hpl.jena.query.SortCondition r8;
        long $l1;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r5, $r9;
        java.util.List $r3;
        int $i0, $i3;
        com.hp.hpl.jena.sparql.algebra.op.OpTopN r1;
        java.lang.Object $r7;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.Op $r6;
        boolean $z0, z1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpTopN;

        $i3 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i3);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start()>();

        $i0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpTopN: int getLimit()>();

        $l1 = (long) $i0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void writeIntOrDefault(long)>($l1);

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        z1 = 1;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpTopN: java.util.List getConditions()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.hp.hpl.jena.query.SortCondition) $r7;

        if z1 != 0 goto label2;

        $r9 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

     label2:
        z1 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void formatSortCondition(com.hp.hpl.jena.query.SortCondition)>(r8);

        goto label1;

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpTopN: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r6);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    private void formatSortCondition(com.hp.hpl.jena.query.SortCondition)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r8;
        com.hp.hpl.jena.sparql.expr.Expr $r7;
        int $i0, $i1, $i2, $i4, $i6, $i8, $i10;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r1;
        java.lang.String r5, r9, r10;
        com.hp.hpl.jena.query.SortCondition r0;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r3, $r4, $r6;

        r1 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.query.SortCondition;

        r5 = null;

        r10 = null;

        r9 = null;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.query.SortCondition: int getDirection()>();

        $i4 = (int) -2;

        if $i0 == $i4 goto label2;

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.query.SortCondition: int getDirection()>();

        if $i1 != 1 goto label1;

        r5 = "asc";

        r10 = "asc";

        r9 = "asc";

        $r4 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $i6 = (int) -1;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void start(org.apache.jena.atlas.io.IndentedWriter,java.lang.String,int)>($r4, "asc", $i6);

     label1:
        $i2 = virtualinvoke r0.<com.hp.hpl.jena.query.SortCondition: int getDirection()>();

        $i8 = (int) -1;

        if $i2 != $i8 goto label2;

        r5 = "desc";

        r10 = "desc";

        r9 = "desc";

        $r3 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $i10 = (int) -1;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void start(org.apache.jena.atlas.io.IndentedWriter,java.lang.String,int)>($r3, "desc", $i10);

     label2:
        $r6 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.query.SortCondition: com.hp.hpl.jena.sparql.expr.Expr getExpression()>();

        $r8 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterExpr: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r6, $r7, $r8);

        if r9 == null goto label3;

        $r2 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void finish(org.apache.jena.atlas.io.IndentedWriter,java.lang.String)>($r2, r10);

     label3:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpProject)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.algebra.op.OpProject r1;
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r3;
        com.hp.hpl.jena.sparql.algebra.Op $r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpProject;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpProject: java.util.List getVars()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void writeVarList(java.util.List)>($r2);

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpProject: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r4);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpDistinct)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.op.OpDistinct r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDistinct;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp1(com.hp.hpl.jena.sparql.algebra.op.Op1)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpReduced)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpReduced r1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpReduced;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void visitOp1(com.hp.hpl.jena.sparql.algebra.op.Op1)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpAssign)
    {
        int $i1;
        com.hp.hpl.jena.sparql.core.VarExprList $r2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r3;
        com.hp.hpl.jena.sparql.algebra.op.OpAssign r1;
        com.hp.hpl.jena.sparql.algebra.Op $r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpAssign;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpAssign: com.hp.hpl.jena.sparql.core.VarExprList getVarExprList()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void writeNamedExprList(com.hp.hpl.jena.sparql.core.VarExprList)>($r2);

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpAssign: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r4);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpExtend)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpExtend r1;
        int $i1;
        com.hp.hpl.jena.sparql.core.VarExprList $r2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r3;
        com.hp.hpl.jena.sparql.algebra.Op $r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpExtend;

        $i1 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpExtend: com.hp.hpl.jena.sparql.core.VarExprList getVarExprList()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void writeNamedExprList(com.hp.hpl.jena.sparql.core.VarExprList)>($r2);

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpExtend: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r4);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpSlice)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpSlice r1;
        long $l0, $l1;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r3;
        int $i3;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        com.hp.hpl.jena.sparql.algebra.Op $r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpSlice;

        $i3 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start(com.hp.hpl.jena.sparql.algebra.Op,int)>(r1, $i3);

        $l0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpSlice: long getStart()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void writeIntOrDefault(long)>($l0);

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        $l1 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpSlice: long getLength()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void writeIntOrDefault(long)>($l1);

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpSlice: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void printOp(com.hp.hpl.jena.sparql.algebra.Op)>($r4);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }

    private void writeIntOrDefault(long)
    {
        byte $b1;
        long l0;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        java.lang.String r2;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        l0 := @parameter0: long;

        r2 = "_";

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 == 0 goto label1;

        r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(r2);

        return;
    }

    private void start(com.hp.hpl.jena.sparql.algebra.Op, int)
    {
        int i0;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        java.lang.String $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2;
        com.hp.hpl.jena.sparql.algebra.Op r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        i0 := @parameter1: int;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.algebra.Op: java.lang.String getName()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void start(org.apache.jena.atlas.io.IndentedWriter,java.lang.String,int)>($r2, $r3, i0);

        return;
    }

    private void finish(com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        java.lang.String $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2;
        com.hp.hpl.jena.sparql.algebra.Op r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.algebra.Op: java.lang.String getName()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void finish(org.apache.jena.atlas.io.IndentedWriter,java.lang.String)>($r2, $r3);

        return;
    }

    private void start()
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void start(org.apache.jena.atlas.io.IndentedWriter)>($r1);

        return;
    }

    private void finish()
    {
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void finish(org.apache.jena.atlas.io.IndentedWriter)>($r1);

        return;
    }

    private void printOp(com.hp.hpl.jena.sparql.algebra.Op)
    {
        int $i1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r1;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r3;
        com.hp.hpl.jena.sparql.algebra.Op r0;

        r1 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        if r0 != null goto label1;

        $r2 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $i1 = (int) -2;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void start(org.apache.jena.atlas.io.IndentedWriter,java.lang.String,int)>($r2, "null", $i1);

        $r3 = r1.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void finish(org.apache.jena.atlas.io.IndentedWriter,java.lang.String)>($r3, "null");

        goto label2;

     label1:
        interfaceinvoke r0.<com.hp.hpl.jena.sparql.algebra.Op: void visit(com.hp.hpl.jena.sparql.algebra.OpVisitor)>(r1);

     label2:
        return;
    }

    private void writeVarList(java.util.List)
    {
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.Var r4;
        org.apache.jena.atlas.io.IndentedWriter $r5, $r7;
        java.util.List r1;
        java.lang.Object $r3;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        java.lang.String $r6;
        boolean $z0, z1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start()>();

        z1 = 1;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.core.Var) $r3;

        if z1 != 0 goto label2;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

     label2:
        z1 = 0;

        $r5 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r6 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.Var: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r6);

        goto label1;

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish()>();

        return;
    }

    private void writeNamedExprList(com.hp.hpl.jena.sparql.core.VarExprList)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r12;
        com.hp.hpl.jena.sparql.expr.Expr $r6;
        com.hp.hpl.jena.sparql.core.VarExprList r1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        java.lang.String $r8, $r10;
        boolean $z0, z1;
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.core.Var r5;
        org.apache.jena.atlas.io.IndentedWriter $r7, $r9, $r11, $r13, $r14;
        java.util.List $r2;
        java.lang.Object $r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.VarExprList;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start()>();

        z1 = 1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.VarExprList: java.util.List getVars()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.sparql.core.Var) $r4;

        if z1 != 0 goto label2;

        $r14 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r14.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

     label2:
        z1 = 0;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.VarExprList: com.hp.hpl.jena.sparql.expr.Expr getExpr(com.hp.hpl.jena.sparql.core.Var)>(r5);

        if $r6 == null goto label3;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void start()>();

        $r9 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r10 = virtualinvoke r5.<com.hp.hpl.jena.sparql.core.Var: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r10);

        $r11 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterExpr: java.lang.String asString(com.hp.hpl.jena.sparql.expr.Expr)>($r6);

        $r13 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r12 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterExpr: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r13, $r6, $r12);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish()>();

        goto label4;

     label3:
        $r7 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r8 = virtualinvoke r5.<com.hp.hpl.jena.sparql.core.Var: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r8);

     label4:
        goto label1;

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: void finish()>();

        return;
    }

    private void formatTriple(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r3;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.graph.Triple,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r3, r1, $r2);

        return;
    }

    private void formatQuad(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r2;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r3;
        com.hp.hpl.jena.sparql.core.Quad r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.core.Quad,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r3, r1, $r2);

        return;
    }

    private void formatTriplePath(com.hp.hpl.jena.sparql.core.TriplePath)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r2;
        com.hp.hpl.jena.sparql.core.TriplePath r1;
        com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r3;

        r0 := @this: com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.TriplePath;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.writers.WriterOp$OpWriterWorker: com.hp.hpl.jena.sparql.serializer.SerializationContext sContext>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterPath: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.core.TriplePath,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r3, r1, $r2);

        return;
    }
}
