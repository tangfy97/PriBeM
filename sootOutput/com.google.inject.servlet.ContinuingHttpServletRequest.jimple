class com.google.inject.servlet.ContinuingHttpServletRequest extends javax.servlet.http.HttpServletRequestWrapper
{
    private final java.util.Map attributes;

    public void <init>(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r1;
        java.util.HashMap $r2;
        com.google.inject.servlet.ContinuingHttpServletRequest r0;

        r0 := @this: com.google.inject.servlet.ContinuingHttpServletRequest;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        specialinvoke r0.<javax.servlet.http.HttpServletRequestWrapper: void <init>(javax.servlet.http.HttpServletRequest)>(r1);

        $r2 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.HashMap newHashMap()>();

        r0.<com.google.inject.servlet.ContinuingHttpServletRequest: java.util.Map attributes> = $r2;

        return;
    }

    public javax.servlet.http.HttpSession getSession()
    {
        com.google.inject.OutOfScopeException $r0;
        com.google.inject.servlet.ContinuingHttpServletRequest r1;

        r1 := @this: com.google.inject.servlet.ContinuingHttpServletRequest;

        $r0 = new com.google.inject.OutOfScopeException;

        specialinvoke $r0.<com.google.inject.OutOfScopeException: void <init>(java.lang.String)>("Cannot access the session in a continued request");

        throw $r0;
    }

    public javax.servlet.http.HttpSession getSession(boolean)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.servlet.ContinuingHttpServletRequest r1;
        boolean z0;

        r1 := @this: com.google.inject.servlet.ContinuingHttpServletRequest;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot access the session in a continued request");

        throw $r0;
    }

    public javax.servlet.ServletInputStream getInputStream() throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.servlet.ContinuingHttpServletRequest r1;

        r1 := @this: com.google.inject.servlet.ContinuingHttpServletRequest;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot access raw request on a continued request");

        throw $r0;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        com.google.inject.servlet.ContinuingHttpServletRequest r0;
        java.util.Map $r3;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: com.google.inject.servlet.ContinuingHttpServletRequest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.inject.servlet.ContinuingHttpServletRequest: java.util.Map attributes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void removeAttribute(java.lang.String)
    {
        java.lang.String r1;
        com.google.inject.servlet.ContinuingHttpServletRequest r0;
        java.util.Map $r2;

        r0 := @this: com.google.inject.servlet.ContinuingHttpServletRequest;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.inject.servlet.ContinuingHttpServletRequest: java.util.Map attributes>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        com.google.inject.servlet.ContinuingHttpServletRequest r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.google.inject.servlet.ContinuingHttpServletRequest;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.inject.servlet.ContinuingHttpServletRequest: java.util.Map attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public javax.servlet.http.Cookie[] getCookies()
    {
        com.google.inject.servlet.ContinuingHttpServletRequest r0;
        javax.servlet.http.Cookie[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.google.inject.servlet.ContinuingHttpServletRequest;

        $r1 = specialinvoke r0.<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.Cookie[] getCookies()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (javax.servlet.http.Cookie[]) $r2;

        return $r3;
    }
}
