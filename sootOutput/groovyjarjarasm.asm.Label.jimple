public class groovyjarjarasm.asm.Label extends java.lang.Object
{
    int k;
    boolean a;
    int b;
    boolean c;
    private int d;
    private int[] e;
    int f;
    int g;
    groovyjarjarasm.asm.Edge h;
    groovyjarjarasm.asm.Label i;
    boolean j;

    public void <init>()
    {
        groovyjarjarasm.asm.Label r0;

        r0 := @this: groovyjarjarasm.asm.Label;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getOffset()
    {
        java.lang.IllegalStateException $r1;
        int $i0;
        groovyjarjarasm.asm.Label r0;
        boolean $z0;

        r0 := @this: groovyjarjarasm.asm.Label;

        $z0 = r0.<groovyjarjarasm.asm.Label: boolean a>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Label offset position has not been resolved yet");

        throw $r1;

     label1:
        $i0 = r0.<groovyjarjarasm.asm.Label: int b>;

        return $i0;
    }

    void a(groovyjarjarasm.asm.MethodWriter, groovyjarjarasm.asm.ByteVector, int, boolean)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13;
        groovyjarjarasm.asm.Label r0;
        boolean $z0, z1;
        groovyjarjarasm.asm.ByteVector r1;
        groovyjarjarasm.asm.MethodWriter r2;

        r0 := @this: groovyjarjarasm.asm.Label;

        r2 := @parameter0: groovyjarjarasm.asm.MethodWriter;

        r1 := @parameter1: groovyjarjarasm.asm.ByteVector;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        $z0 = r0.<groovyjarjarasm.asm.Label: boolean a>;

        if $z0 == 0 goto label2;

        if z1 == 0 goto label1;

        $i6 = r0.<groovyjarjarasm.asm.Label: int b>;

        $i7 = $i6 - i0;

        virtualinvoke r1.<groovyjarjarasm.asm.ByteVector: groovyjarjarasm.asm.ByteVector putInt(int)>($i7);

        goto label4;

     label1:
        $i4 = r0.<groovyjarjarasm.asm.Label: int b>;

        $i5 = $i4 - i0;

        virtualinvoke r1.<groovyjarjarasm.asm.ByteVector: groovyjarjarasm.asm.ByteVector putShort(int)>($i5);

        goto label4;

     label2:
        if z1 == 0 goto label3;

        $i9 = (int) -1;

        $i3 = $i9 - i0;

        $i2 = r1.<groovyjarjarasm.asm.ByteVector: int b>;

        specialinvoke r0.<groovyjarjarasm.asm.Label: void a(int,int)>($i3, $i2);

        $i11 = (int) -1;

        virtualinvoke r1.<groovyjarjarasm.asm.ByteVector: groovyjarjarasm.asm.ByteVector putInt(int)>($i11);

        goto label4;

     label3:
        $i1 = r1.<groovyjarjarasm.asm.ByteVector: int b>;

        specialinvoke r0.<groovyjarjarasm.asm.Label: void a(int,int)>(i0, $i1);

        $i13 = (int) -1;

        virtualinvoke r1.<groovyjarjarasm.asm.ByteVector: groovyjarjarasm.asm.ByteVector putShort(int)>($i13);

     label4:
        return;
    }

    private void a(int, int)
    {
        int[] $r1, $r2, $r3, $r4, $r5, r6, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, i7, $i8, $i9, $i10;
        groovyjarjarasm.asm.Label r0;

        r0 := @this: groovyjarjarasm.asm.Label;

        i4 := @parameter0: int;

        i7 := @parameter1: int;

        $r1 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        if $r1 != null goto label1;

        $r9 = newarray (int)[6];

        r0.<groovyjarjarasm.asm.Label: int[] e> = $r9;

     label1:
        $i1 = r0.<groovyjarjarasm.asm.Label: int d>;

        $r2 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label2;

        $r5 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        $i8 = lengthof $r5;

        $i9 = $i8 + 6;

        r6 = newarray (int)[$i9];

        $r8 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        $r7 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        $i10 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r6, 0, $i10);

        r0.<groovyjarjarasm.asm.Label: int[] e> = r6;

     label2:
        $r3 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        $i2 = r0.<groovyjarjarasm.asm.Label: int d>;

        $i3 = $i2 + 1;

        r0.<groovyjarjarasm.asm.Label: int d> = $i3;

        $r3[$i2] = i4;

        $r4 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        $i5 = r0.<groovyjarjarasm.asm.Label: int d>;

        $i6 = $i5 + 1;

        r0.<groovyjarjarasm.asm.Label: int d> = $i6;

        $r4[$i5] = i7;

        return;
    }

    boolean a(groovyjarjarasm.asm.MethodWriter, int, byte[])
    {
        byte[] r3;
        byte $b5, $b7, $b9, $b10, $b12, $b14, $b17, $b26, $b27;
        int[] $r1, $r2;
        boolean z0;
        groovyjarjarasm.asm.MethodWriter r4;
        short $s19, $s34;
        int i0, $i1, i2, $i3, $i4, $i6, $i8, $i11, $i13, $i15, $i16, $i18, i20, i21, i22, i23, i24, $i25, i28, i29, i30, i31, $i33, $i35, $i36, $i37;
        groovyjarjarasm.asm.Label r0;

        r0 := @this: groovyjarjarasm.asm.Label;

        r4 := @parameter0: groovyjarjarasm.asm.MethodWriter;

        i0 := @parameter1: int;

        r3 := @parameter2: byte[];

        z0 = 0;

        r0.<groovyjarjarasm.asm.Label: boolean a> = 1;

        r0.<groovyjarjarasm.asm.Label: int b> = i0;

        i20 = 0;

     label1:
        $i1 = r0.<groovyjarjarasm.asm.Label: int d>;

        if i20 >= $i1 goto label8;

        $r1 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        i21 = i20 + 1;

        i2 = $r1[i20];

        $r2 = r0.<groovyjarjarasm.asm.Label: int[] e>;

        i20 = i21 + 1;

        i22 = $r2[i21];

        if i2 < 0 goto label6;

        i23 = i0 - i2;

        $i33 = (int) -32768;

        if i23 < $i33 goto label2;

        if i23 <= 32767 goto label5;

     label2:
        $i11 = i22 - 1;

        $b12 = r3[$i11];

        $s34 = (short) $b12;

        $s19 = $s34 & 255;

        $i35 = (int) $s19;

        if $i35 > 168 goto label3;

        $i18 = i22 - 1;

        $i36 = (int) $s19;

        $i16 = $i36 + 49;

        $b17 = (byte) $i16;

        r3[$i18] = $b17;

        goto label4;

     label3:
        $i15 = i22 - 1;

        $i37 = (int) $s19;

        $i13 = $i37 + 20;

        $b14 = (byte) $i13;

        r3[$i15] = $b14;

     label4:
        z0 = 1;

     label5:
        i24 = i22 + 1;

        $i25 = i23 >>> 8;

        $b26 = (byte) $i25;

        r3[i22] = $b26;

        $b27 = (byte) i23;

        r3[i24] = $b27;

        goto label7;

     label6:
        $i3 = i0 + i2;

        i28 = $i3 + 1;

        i29 = i22 + 1;

        $i4 = i28 >>> 24;

        $b5 = (byte) $i4;

        r3[i22] = $b5;

        i30 = i29 + 1;

        $i6 = i28 >>> 16;

        $b7 = (byte) $i6;

        r3[i29] = $b7;

        i31 = i30 + 1;

        $i8 = i28 >>> 8;

        $b9 = (byte) $i8;

        r3[i30] = $b9;

        $b10 = (byte) i28;

        r3[i31] = $b10;

     label7:
        goto label1;

     label8:
        return z0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r3;
        int $i0;
        java.lang.String $r4;
        groovyjarjarasm.asm.Label r2;

        r2 := @this: groovyjarjarasm.asm.Label;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
