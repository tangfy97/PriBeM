class org.springframework.util.xml.StaxSource extends javax.xml.transform.sax.SAXSource
{
    private javax.xml.stream.XMLEventReader eventReader;
    private javax.xml.stream.XMLStreamReader streamReader;

    void <init>(javax.xml.stream.XMLStreamReader)
    {
        org.xml.sax.InputSource $r3;
        javax.xml.stream.XMLStreamReader r2;
        org.springframework.util.xml.StaxSource r0;
        org.springframework.util.xml.StaxStreamXMLReader $r1;

        r0 := @this: org.springframework.util.xml.StaxSource;

        r2 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r1 = new org.springframework.util.xml.StaxStreamXMLReader;

        specialinvoke $r1.<org.springframework.util.xml.StaxStreamXMLReader: void <init>(javax.xml.stream.XMLStreamReader)>(r2);

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>()>();

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void <init>(org.xml.sax.XMLReader,org.xml.sax.InputSource)>($r1, $r3);

        r0.<org.springframework.util.xml.StaxSource: javax.xml.stream.XMLStreamReader streamReader> = r2;

        return;
    }

    void <init>(javax.xml.stream.XMLEventReader)
    {
        javax.xml.stream.XMLEventReader r2;
        org.xml.sax.InputSource $r3;
        org.springframework.util.xml.StaxEventXMLReader $r1;
        org.springframework.util.xml.StaxSource r0;

        r0 := @this: org.springframework.util.xml.StaxSource;

        r2 := @parameter0: javax.xml.stream.XMLEventReader;

        $r1 = new org.springframework.util.xml.StaxEventXMLReader;

        specialinvoke $r1.<org.springframework.util.xml.StaxEventXMLReader: void <init>(javax.xml.stream.XMLEventReader)>(r2);

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>()>();

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void <init>(org.xml.sax.XMLReader,org.xml.sax.InputSource)>($r1, $r3);

        r0.<org.springframework.util.xml.StaxSource: javax.xml.stream.XMLEventReader eventReader> = r2;

        return;
    }

    javax.xml.stream.XMLEventReader getXMLEventReader()
    {
        javax.xml.stream.XMLEventReader $r1;
        org.springframework.util.xml.StaxSource r0;

        r0 := @this: org.springframework.util.xml.StaxSource;

        $r1 = r0.<org.springframework.util.xml.StaxSource: javax.xml.stream.XMLEventReader eventReader>;

        return $r1;
    }

    javax.xml.stream.XMLStreamReader getXMLStreamReader()
    {
        org.springframework.util.xml.StaxSource r0;
        javax.xml.stream.XMLStreamReader $r1;

        r0 := @this: org.springframework.util.xml.StaxSource;

        $r1 = r0.<org.springframework.util.xml.StaxSource: javax.xml.stream.XMLStreamReader streamReader>;

        return $r1;
    }

    public void setInputSource(org.xml.sax.InputSource)
    {
        java.lang.UnsupportedOperationException $r0;
        org.xml.sax.InputSource r2;
        org.springframework.util.xml.StaxSource r1;

        r1 := @this: org.springframework.util.xml.StaxSource;

        r2 := @parameter0: org.xml.sax.InputSource;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setInputSource is not supported");

        throw $r0;
    }

    public void setXMLReader(org.xml.sax.XMLReader)
    {
        java.lang.UnsupportedOperationException $r0;
        org.xml.sax.XMLReader r2;
        org.springframework.util.xml.StaxSource r1;

        r1 := @this: org.springframework.util.xml.StaxSource;

        r2 := @parameter0: org.xml.sax.XMLReader;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setXMLReader is not supported");

        throw $r0;
    }
}
