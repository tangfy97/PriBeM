public class com.hp.hpl.jena.sparql.syntax.ElementAssign extends com.hp.hpl.jena.sparql.syntax.Element
{
    private com.hp.hpl.jena.sparql.core.Var var;
    private com.hp.hpl.jena.sparql.expr.Expr expr;

    public void <init>(com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.syntax.ElementAssign r0;
        com.hp.hpl.jena.sparql.core.Var r1;
        com.hp.hpl.jena.sparql.expr.Expr r2;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementAssign;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        r2 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.Element: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.core.Var var> = r1;

        r0.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.expr.Expr expr> = r2;

        return;
    }

    public com.hp.hpl.jena.sparql.core.Var getVar()
    {
        com.hp.hpl.jena.sparql.syntax.ElementAssign r0;
        com.hp.hpl.jena.sparql.core.Var $r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementAssign;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.core.Var var>;

        return $r1;
    }

    public com.hp.hpl.jena.sparql.expr.Expr getExpr()
    {
        com.hp.hpl.jena.sparql.syntax.ElementAssign r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementAssign;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.expr.Expr expr>;

        return $r1;
    }

    public boolean equalTo(com.hp.hpl.jena.sparql.syntax.Element, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.syntax.ElementAssign r1, r2;
        com.hp.hpl.jena.sparql.core.Var $r3, $r4;
        com.hp.hpl.jena.sparql.expr.Expr $r5, $r6;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r7;
        com.hp.hpl.jena.sparql.syntax.Element r0;
        boolean $z0, $z1, $z2;

        r2 := @this: com.hp.hpl.jena.sparql.syntax.ElementAssign;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        r7 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.syntax.ElementAssign;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.sparql.syntax.ElementAssign) r0;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.core.Var getVar()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.core.Var getVar()>();

        $z1 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.core.Var: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r5 = virtualinvoke r2.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.expr.Expr getExpr()>();

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.expr.Expr getExpr()>();

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.sparql.syntax.ElementAssign r0;
        com.hp.hpl.jena.sparql.expr.Expr $r2;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.sparql.core.Var $r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementAssign;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.core.Var var>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.Var: int hashCode()>();

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.expr.Expr expr>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)
    {
        com.hp.hpl.jena.sparql.syntax.ElementAssign r1;
        com.hp.hpl.jena.sparql.syntax.ElementVisitor r0;

        r1 := @this: com.hp.hpl.jena.sparql.syntax.ElementAssign;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementAssign)>(r1);

        return;
    }
}
