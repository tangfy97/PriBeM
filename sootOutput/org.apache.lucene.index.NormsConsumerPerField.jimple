final class org.apache.lucene.index.NormsConsumerPerField extends org.apache.lucene.index.InvertedDocEndConsumerPerField implements java.lang.Comparable
{
    private final org.apache.lucene.index.FieldInfo fieldInfo;
    private final org.apache.lucene.index.DocumentsWriterPerThread$DocState docState;
    private final org.apache.lucene.search.similarities.Similarity similarity;
    private final org.apache.lucene.index.FieldInvertState fieldState;
    private org.apache.lucene.index.NumericDocValuesWriter consumer;

    public void <init>(org.apache.lucene.index.DocInverterPerField, org.apache.lucene.index.FieldInfo, org.apache.lucene.index.NormsConsumer)
    {
        org.apache.lucene.index.NormsConsumer r7;
        org.apache.lucene.index.DocInverterPerField r2;
        org.apache.lucene.index.NormsConsumerPerField r0;
        org.apache.lucene.index.FieldInvertState $r4;
        org.apache.lucene.search.similarities.Similarity $r6;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r3, $r5;
        org.apache.lucene.index.FieldInfo r1;

        r0 := @this: org.apache.lucene.index.NormsConsumerPerField;

        r2 := @parameter0: org.apache.lucene.index.DocInverterPerField;

        r1 := @parameter1: org.apache.lucene.index.FieldInfo;

        r7 := @parameter2: org.apache.lucene.index.NormsConsumer;

        specialinvoke r0.<org.apache.lucene.index.InvertedDocEndConsumerPerField: void <init>()>();

        r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInfo fieldInfo> = r1;

        $r3 = r2.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState> = $r3;

        $r4 = r2.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInvertState fieldState> = $r4;

        $r5 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r6 = $r5.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.search.similarities.Similarity similarity>;

        r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.search.similarities.Similarity similarity> = $r6;

        return;
    }

    public int compareTo(org.apache.lucene.index.NormsConsumerPerField)
    {
        org.apache.lucene.index.NormsConsumerPerField r0, r2;
        int $i0;
        org.apache.lucene.index.FieldInfo $r1, $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.lucene.index.NormsConsumerPerField;

        r2 := @parameter0: org.apache.lucene.index.NormsConsumerPerField;

        $r1 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r5 = $r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r3 = r2.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r4 = $r3.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }

    void finish() throws java.io.IOException
    {
        long $l1;
        org.apache.lucene.index.NumericDocValuesWriter $r3, $r7, $r10;
        org.apache.lucene.search.similarities.Similarity $r6;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r4, $r11;
        int $i0;
        org.apache.lucene.index.DocumentsWriterPerThread $r12;
        boolean $z0, $z1;
        org.apache.lucene.index.FieldInfo$DocValuesType $r8;
        org.apache.lucene.index.NormsConsumerPerField r0;
        org.apache.lucene.index.FieldInvertState $r5;
        org.apache.lucene.util.Counter $r13;
        org.apache.lucene.index.FieldInfo $r1, $r2, $r9, $r14;

        r0 := @this: org.apache.lucene.index.NormsConsumerPerField;

        $r1 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo: boolean isIndexed()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $z1 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfo: boolean omitsNorms()>();

        if $z1 != 0 goto label2;

        $r3 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.NumericDocValuesWriter consumer>;

        if $r3 != null goto label1;

        $r9 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r8 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType NUMERIC>;

        virtualinvoke $r9.<org.apache.lucene.index.FieldInfo: void setNormValueType(org.apache.lucene.index.FieldInfo$DocValuesType)>($r8);

        $r10 = new org.apache.lucene.index.NumericDocValuesWriter;

        $r14 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r11 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r12 = $r11.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.index.DocumentsWriterPerThread docWriter>;

        $r13 = $r12.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.Counter bytesUsed>;

        specialinvoke $r10.<org.apache.lucene.index.NumericDocValuesWriter: void <init>(org.apache.lucene.index.FieldInfo,org.apache.lucene.util.Counter)>($r14, $r13);

        r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.NumericDocValuesWriter consumer> = $r10;

     label1:
        $r7 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.NumericDocValuesWriter consumer>;

        $r4 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i0 = $r4.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r6 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.search.similarities.Similarity similarity>;

        $r5 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $l1 = virtualinvoke $r6.<org.apache.lucene.search.similarities.Similarity: long computeNorm(org.apache.lucene.index.FieldInvertState)>($r5);

        virtualinvoke $r7.<org.apache.lucene.index.NumericDocValuesWriter: void addValue(int,long)>($i0, $l1);

     label2:
        return;
    }

    void flush(org.apache.lucene.index.SegmentWriteState, org.apache.lucene.codecs.DocValuesConsumer) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesConsumer r5;
        org.apache.lucene.index.SegmentInfo $r1;
        org.apache.lucene.index.NumericDocValuesWriter $r3, $r4, $r6;
        org.apache.lucene.index.NormsConsumerPerField r2;
        org.apache.lucene.index.SegmentWriteState r0;
        int $i0;

        r2 := @this: org.apache.lucene.index.NormsConsumerPerField;

        r0 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        r5 := @parameter1: org.apache.lucene.codecs.DocValuesConsumer;

        $r1 = r0.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r3 = r2.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.NumericDocValuesWriter consumer>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r2.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.NumericDocValuesWriter consumer>;

        virtualinvoke $r4.<org.apache.lucene.index.NumericDocValuesWriter: void finish(int)>($i0);

        $r6 = r2.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.NumericDocValuesWriter consumer>;

        virtualinvoke $r6.<org.apache.lucene.index.NumericDocValuesWriter: void flush(org.apache.lucene.index.SegmentWriteState,org.apache.lucene.codecs.DocValuesConsumer)>(r0, r5);

        return;
    }

    boolean isEmpty()
    {
        org.apache.lucene.index.NumericDocValuesWriter $r1;
        org.apache.lucene.index.NormsConsumerPerField r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.NormsConsumerPerField;

        $r1 = r0.<org.apache.lucene.index.NormsConsumerPerField: org.apache.lucene.index.NumericDocValuesWriter consumer>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void abort()
    {
        org.apache.lucene.index.NormsConsumerPerField r0;

        r0 := @this: org.apache.lucene.index.NormsConsumerPerField;

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.lucene.index.NormsConsumerPerField r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.index.NormsConsumerPerField;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.index.NormsConsumerPerField) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.NormsConsumerPerField: int compareTo(org.apache.lucene.index.NormsConsumerPerField)>($r2);

        return $i0;
    }
}
