class com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm extends java.lang.Object implements java.io.Serializable
{
    private final java.lang.Object[] keys;
    private final java.lang.Object[] values;
    private static final long serialVersionUID;

    void <init>(com.mycila.inject.internal.guava.collect.ImmutableMap)
    {
        com.mycila.inject.internal.guava.collect.ImmutableMap r1;
        java.lang.Object[] $r2, $r3, $r8, $r10;
        int $i0, $i1, i2;
        com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm r0;
        boolean $z0;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.lang.Object $r6, $r9, $r11;
        com.mycila.inject.internal.guava.collect.ImmutableSet $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ImmutableMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ImmutableMap: int size()>();

        $r2 = newarray (java.lang.Object)[$i0];

        r0.<com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: java.lang.Object[] keys> = $r2;

        $i1 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ImmutableMap: int size()>();

        $r3 = newarray (java.lang.Object)[$i1];

        r0.<com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: java.lang.Object[] values> = $r3;

        i2 = 0;

        $r4 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ImmutableMap: com.mycila.inject.internal.guava.collect.ImmutableSet entrySet()>();

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.ImmutableSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = r0.<com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: java.lang.Object[] keys>;

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8[i2] = $r9;

        $r10 = r0.<com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: java.lang.Object[] values>;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10[i2] = $r11;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    java.lang.Object readResolve()
    {
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.collect.ImmutableMap$Builder $r0;
        com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm;

        $r0 = new com.mycila.inject.internal.guava.collect.ImmutableMap$Builder;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.ImmutableMap$Builder: void <init>()>();

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: java.lang.Object createMap(com.mycila.inject.internal.guava.collect.ImmutableMap$Builder)>($r0);

        return $r2;
    }

    java.lang.Object createMap(com.mycila.inject.internal.guava.collect.ImmutableMap$Builder)
    {
        java.lang.Object[] $r1, $r4, $r5;
        com.mycila.inject.internal.guava.collect.ImmutableMap $r3;
        com.mycila.inject.internal.guava.collect.ImmutableMap$Builder r2;
        int $i0, i1;
        java.lang.Object $r6, $r7;
        com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm;

        r2 := @parameter0: com.mycila.inject.internal.guava.collect.ImmutableMap$Builder;

        i1 = 0;

     label1:
        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: java.lang.Object[] keys>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r4 = r0.<com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: java.lang.Object[] keys>;

        $r7 = $r4[i1];

        $r5 = r0.<com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: java.lang.Object[] values>;

        $r6 = $r5[i1];

        virtualinvoke r2.<com.mycila.inject.internal.guava.collect.ImmutableMap$Builder: com.mycila.inject.internal.guava.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r7, $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r2.<com.mycila.inject.internal.guava.collect.ImmutableMap$Builder: com.mycila.inject.internal.guava.collect.ImmutableMap build()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.collect.ImmutableMap$SerializedForm: long serialVersionUID> = 0L;

        return;
    }
}
