public abstract class org.codehaus.stax2.ri.dom.DOMWrappingReader extends java.lang.Object implements org.codehaus.stax2.XMLStreamReader2, org.codehaus.stax2.AttributeInfo, org.codehaus.stax2.DTDInfo, org.codehaus.stax2.LocationInfo, javax.xml.namespace.NamespaceContext, javax.xml.stream.XMLStreamConstants
{
    protected static final int INT_SPACE;
    private static final int MASK_GET_TEXT;
    private static final int MASK_GET_TEXT_XXX;
    private static final int MASK_GET_ELEMENT_TEXT;
    protected static final int MASK_TYPED_ACCESS_BINARY;
    protected static final int ERR_STATE_NOT_START_ELEM;
    protected static final int ERR_STATE_NOT_ELEM;
    protected static final int ERR_STATE_NOT_PI;
    protected static final int ERR_STATE_NOT_TEXTUAL;
    protected static final int ERR_STATE_NOT_TEXTUAL_XXX;
    protected static final int ERR_STATE_NOT_TEXTUAL_OR_ELEM;
    protected static final int ERR_STATE_NO_LOCALNAME;
    protected final java.lang.String _systemId;
    protected final org.w3c.dom.Node _rootNode;
    protected final boolean _cfgNsAware;
    protected final boolean _coalescing;
    protected boolean _cfgInternNames;
    protected boolean _cfgInternNsURIs;
    protected int _currEvent;
    protected org.w3c.dom.Node _currNode;
    protected int _depth;
    protected java.lang.String _coalescedText;
    protected org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer;
    protected java.util.List _attrList;
    protected java.util.List _nsDeclList;
    protected org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory;
    protected org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder;

    protected void <init>(javax.xml.transform.dom.DOMSource, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.transform.dom.DOMSource r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        short $s0;
        java.lang.StringBuffer $r7, $r9, $r14;
        org.w3c.dom.Node $r3;
        javax.xml.stream.XMLStreamException $r15;
        int $i1;
        java.lang.String $r4, $r10;
        boolean z0, z1;
        java.lang.IllegalArgumentException $r13;
        org.codehaus.stax2.ri.Stax2Util$TextBuffer $r12;
        java.lang.Class $r8;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: javax.xml.transform.dom.DOMSource;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgInternNames> = 0;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgInternNsURIs> = 0;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 7;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _depth> = 0;

        $r12 = new org.codehaus.stax2.ri.Stax2Util$TextBuffer;

        specialinvoke $r12.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: void <init>()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer> = $r12;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList> = null;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList> = null;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder> = null;

        $r3 = virtualinvoke r2.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        if $r3 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null Node for constructing a DOM-based XMLStreamReader");

        throw $r13;

     label1:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgNsAware> = z0;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _coalescing> = z1;

        $r4 = virtualinvoke r2.<javax.xml.transform.dom.DOMSource: java.lang.String getSystemId()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _systemId> = $r4;

        $s0 = interfaceinvoke $r3.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 9: goto label2;
            case 11: goto label2;
            default: goto label3;
        };

     label2:
        goto label4;

     label3:
        $r15 = new javax.xml.stream.XMLStreamException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not create an XMLStreamReader for a DOM node of type ");

        $r8 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r10);

        throw $r15;

     label4:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode> = $r3;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _rootNode> = $r3;

        return;
    }

    protected void setInternNames(boolean)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgInternNames> = z0;

        return;
    }

    protected void setInternNsURIs(boolean)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgInternNsURIs> = z0;

        return;
    }

    protected abstract void throwStreamException(java.lang.String, javax.xml.stream.Location) throws javax.xml.stream.XMLStreamException;

    public java.lang.String getCharacterEncodingScheme()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return null;
    }

    public java.lang.String getEncoding()
    {
        java.lang.String $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getCharacterEncodingScheme()>();

        return $r1;
    }

    public java.lang.String getVersion()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return null;
    }

    public boolean isStandalone()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return 0;
    }

    public boolean standaloneSet()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return 0;
    }

    public abstract java.lang.Object getProperty(java.lang.String);

    public abstract boolean isPropertySupported(java.lang.String);

    public abstract boolean setProperty(java.lang.String, java.lang.Object);

    public int getAttributeCount()
    {
        java.util.List $r1, $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, $i1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        if $r1 != null goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>(1);

     label2:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i1;
    }

    public java.lang.String getAttributeLocalName(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Attr r5;
        java.util.List $r1, $r2, $r3;
        int $i0, i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r6, $r7;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        if $r1 != null goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>(1);

     label2:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        if i1 >= 0 goto label4;

     label3:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalAttrIndex(int)>(i1);

        return null;

     label4:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.w3c.dom.Attr) $r4;

        $r6 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _safeGetLocalName(org.w3c.dom.Node)>(r5);

        $r7 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r6);

        return $r7;
    }

    public javax.xml.namespace.QName getAttributeName(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Attr r5;
        java.util.List $r1, $r2, $r3;
        int $i0, i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r6, $r7, $r8;
        javax.xml.namespace.QName $r9;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        if $r1 != null goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>(1);

     label2:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        if i1 >= 0 goto label4;

     label3:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalAttrIndex(int)>(i1);

        return null;

     label4:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.w3c.dom.Attr) $r4;

        $r6 = interfaceinvoke r5.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        $r7 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _safeGetLocalName(org.w3c.dom.Node)>(r5);

        $r8 = interfaceinvoke r5.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        $r9 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: javax.xml.namespace.QName _constructQName(java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, $r8);

        return $r9;
    }

    public java.lang.String getAttributeNamespace(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Attr r5;
        java.util.List $r1, $r2, $r3;
        int $i0, i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r6, $r7;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        if $r1 != null goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>(1);

     label2:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        if i1 >= 0 goto label4;

     label3:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalAttrIndex(int)>(i1);

        return null;

     label4:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.w3c.dom.Attr) $r4;

        $r6 = interfaceinvoke r5.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        $r7 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internNsURI(java.lang.String)>($r6);

        return $r7;
    }

    public java.lang.String getAttributePrefix(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Attr r5;
        java.util.List $r1, $r2, $r3;
        int $i0, i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r6, $r7;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        if $r1 != null goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>(1);

     label2:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        if i1 >= 0 goto label4;

     label3:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalAttrIndex(int)>(i1);

        return null;

     label4:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.w3c.dom.Attr) $r4;

        $r6 = interfaceinvoke r5.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        $r7 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r6);

        return $r7;
    }

    public java.lang.String getAttributeType(int)
    {
        java.util.List $r1, $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        if $r1 != null goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>(1);

     label2:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        if i1 >= 0 goto label4;

     label3:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalAttrIndex(int)>(i1);

        return null;

     label4:
        return "CDATA";
    }

    public java.lang.String getAttributeValue(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Attr r5;
        java.util.List $r1, $r2, $r3;
        int $i0, i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r6;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        if $r1 != null goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>(1);

     label2:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        if i1 >= 0 goto label4;

     label3:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalAttrIndex(int)>(i1);

        return null;

     label4:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.w3c.dom.Attr) $r4;

        $r6 = interfaceinvoke r5.<org.w3c.dom.Attr: java.lang.String getValue()>();

        return $r6;
    }

    public java.lang.String getAttributeValue(java.lang.String, java.lang.String)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Attr $r7;
        org.w3c.dom.Element $r4;
        org.w3c.dom.Node $r1, $r6;
        int $i0, $i1;
        org.w3c.dom.NamedNodeMap $r2;
        java.lang.String r3, r5, $r8;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r5 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r4 = (org.w3c.dom.Element) $r1;

        $r2 = interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        if r5 == null goto label2;

        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        r5 = null;

     label2:
        $r6 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)>(r5, r3);

        $r7 = (org.w3c.dom.Attr) $r6;

        if $r7 != null goto label3;

        $r8 = null;

        goto label4;

     label3:
        $r8 = interfaceinvoke $r7.<org.w3c.dom.Attr: java.lang.String getValue()>();

     label4:
        return $r8;
    }

    public java.lang.String getElementText() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.StringBuffer $r6, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r3, $r5, $r8, r10, $r11;
        boolean $z0;
        org.codehaus.stax2.ri.Stax2Util$TextBuffer $r1, $r2, $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label01;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportParseProblem(int)>(1);

     label01:
        $z0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _coalescing>;

        if $z0 == 0 goto label11;

        r10 = null;

     label02:
        $i5 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int next()>();

        if $i5 != 2 goto label03;

        goto label08;

     label03:
        if $i5 == 5 goto label02;

        if $i5 != 3 goto label04;

        goto label02;

     label04:
        $i3 = 1 << $i5;

        $i4 = $i3 & 4688;

        if $i4 != 0 goto label05;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportParseProblem(int)>(4);

     label05:
        if r10 != null goto label06;

        r10 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        goto label07;

     label06:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r8 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        goto label02;

     label08:
        if r10 != null goto label09;

        $r11 = "";

        goto label10;

     label09:
        $r11 = r10;

     label10:
        return $r11;

     label11:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        virtualinvoke $r1.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: void reset()>();

     label12:
        $i6 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int next()>();

        if $i6 != 2 goto label13;

        goto label16;

     label13:
        if $i6 == 5 goto label12;

        if $i6 != 3 goto label14;

        goto label12;

     label14:
        $i1 = 1 << $i6;

        $i2 = $i1 & 4688;

        if $i2 != 0 goto label15;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportParseProblem(int)>(4);

     label15:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        virtualinvoke $r2.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: void append(java.lang.String)>($r3);

        goto label12;

     label16:
        $r4 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        $r5 = virtualinvoke $r4.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: java.lang.String get()>();

        return $r5;
    }

    public int getEventType()
    {
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        return $i0;
    }

    public java.lang.String getLocalName()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1, $r4;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r5, $r6;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        $i1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i1 != 2 goto label2;

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _safeGetLocalName(org.w3c.dom.Node)>($r1);

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r2);

        return $r3;

     label2:
        $i2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i2 == 9 goto label3;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(7);

     label3:
        $r4 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r6 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r5);

        return $r6;
    }

    public final javax.xml.stream.Location getLocation()
    {
        org.codehaus.stax2.XMLStreamLocation2 $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>();

        return $r1;
    }

    public javax.xml.namespace.QName getName()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1, $r3, $r5;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6;
        javax.xml.namespace.QName $r7;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        $i1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i1 == 2 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r4 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _safeGetLocalName(org.w3c.dom.Node)>($r3);

        $r5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        $r7 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: javax.xml.namespace.QName _constructQName(java.lang.String,java.lang.String,java.lang.String)>($r2, $r4, $r6);

        return $r7;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return r0;
    }

    public int getNamespaceCount()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.util.List $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        $i2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i2 == 2 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(2);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList>;

        if $r1 != null goto label5;

        $z0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgNsAware>;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i1 != 1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>($z1);

     label5:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList>;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i4 = $i3 / 2;

        return $i4;
    }

    public java.lang.String getNamespacePrefix(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.util.List $r1, $r2, $r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r4;
        java.lang.String $r5;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        $i5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i5 == 2 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(2);

     label1:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList>;

        if $r2 != null goto label5;

        $z0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgNsAware>;

        if $z0 != 0 goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalNsIndex(int)>(i1);

     label2:
        $i4 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i4 != 1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>($z1);

     label5:
        if i1 < 0 goto label6;

        $i2 = i1 + i1;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList>;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i2 < $i3 goto label7;

     label6:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalNsIndex(int)>(i1);

     label7:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList>;

        $i6 = i1 + i1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i6);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.lang.String getNamespaceURI()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        $i1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i1 == 2 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(2);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internNsURI(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String getNamespaceURI(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r5;
        boolean $z0, $z1;
        java.util.List $r1, $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        $i5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i5 == 2 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(2);

     label1:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList>;

        if $r2 != null goto label5;

        $z0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgNsAware>;

        if $z0 != 0 goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalNsIndex(int)>(i1);

     label2:
        $i4 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i4 != 1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void _calcNsAndAttrLists(boolean)>($z1);

     label5:
        if i1 < 0 goto label6;

        $i2 = i1 + i1;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList>;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i2 < $i3 goto label7;

     label6:
        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalNsIndex(int)>(i1);

     label7:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList>;

        $i6 = i1 + i1;

        $i7 = $i6 + 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i7);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.lang.String getPIData()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 3 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(3);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r2;
    }

    public java.lang.String getPITarget()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1;
        int $i0;
        java.lang.String $r2, $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 3 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(3);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String getPrefix()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        $i1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i1 == 2 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(2);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String getText()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r2;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3, $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText>;

        if $r1 == null goto label1;

        $r4 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText>;

        return $r4;

     label1:
        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $i1 = 1 << $i0;

        $i2 = $i1 & 6768;

        if $i2 != 0 goto label2;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(4);

     label2:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r3;
    }

    public char[] getTextCharacters()
    {
        char[] $r2;
        java.lang.String $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        return $r2;
    }

    public int getTextCharacters(int, char[], int, int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, i7;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i4 := @parameter0: int;

        r2 := @parameter1: char[];

        i5 := @parameter2: int;

        i7 := @parameter3: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $i1 = 1 << $i0;

        $i2 = $i1 & 4208;

        if $i2 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(5);

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i7 <= $i3 goto label2;

        i7 = virtualinvoke $r1.<java.lang.String: int length()>();

     label2:
        $i6 = i4 + i7;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>(i4, $i6, r2, i5);

        return i7;
    }

    public int getTextLength()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $i1 = 1 << $i0;

        $i2 = $i1 & 4208;

        if $i2 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(5);

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i3;
    }

    public int getTextStart()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, $i1, $i2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $i1 = 1 << $i0;

        $i2 = $i1 & 4208;

        if $i2 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(5);

     label1:
        return 0;
    }

    public boolean hasName()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        $i1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i1 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean hasNext()
    {
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 8 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasText()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $i1 = 1 << $i0;

        $i2 = $i1 & 6768;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAttributeSpecified(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Attr $r5;
        org.w3c.dom.Element $r4;
        org.w3c.dom.Node $r1, $r3;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r2;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r4 = (org.w3c.dom.Element) $r1;

        $r2 = interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        $r5 = (org.w3c.dom.Attr) $r3;

        if $r5 != null goto label2;

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void handleIllegalAttrIndex(int)>(i1);

        return 0;

     label2:
        $z0 = interfaceinvoke $r5.<org.w3c.dom.Attr: boolean getSpecified()>();

        return $z0;
    }

    public boolean isCharacters()
    {
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEndElement()
    {
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isStartElement()
    {
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isWhiteSpace()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        char $c2;
        int $i0, $i1, $i3, $i4, i5, $i6;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 4 goto label1;

        $i3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i3 != 12 goto label5;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        i5 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label2:
        if i5 >= $i1 goto label4;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i5);

        $i6 = (int) $c2;

        if $i6 <= 32 goto label3;

        return 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 1;

     label5:
        $i4 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i4 != 6 goto label6;

        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        return $z0;
    }

    public void require(int, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        boolean $z0, $z1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r37, $r38, $r40;
        int i0, $i1, $i2, i3, $i4;
        java.lang.String r1, r2, $r9, $r14, $r17, $r20, $r27, $r30, $r33, $r36, $r39, $r41, $r42, $r43;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if i3 == i0 goto label2;

        if i3 != 12 goto label1;

        i3 = 4;

        goto label2;

     label1:
        if i3 != 6 goto label2;

        i3 = 4;

     label2:
        if i0 == i3 goto label3;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Required type ");

        $r36 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String eventTypeDesc(int)>(i0);

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", current type ");

        $r39 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String eventTypeDesc(int)>(i3);

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r41);

     label3:
        if r1 == null goto label5;

        if i3 == 1 goto label4;

        if i3 == 2 goto label4;

        if i3 == 9 goto label4;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Required a non-null local name, but current token not a START_ELEMENT, END_ELEMENT or ENTITY_REFERENCE (was ");

        $i2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $r30 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String eventTypeDesc(int)>($i2);

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r33);

     label4:
        $r42 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getLocalName()>();

        if $r42 == r1 goto label5;

        $z1 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label5;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Required local name \'");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; current local name \'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r27);

     label5:
        if r2 == null goto label8;

        if i3 == 1 goto label6;

        if i3 == 2 goto label6;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Required non-null NS URI, but current token not a START_ELEMENT or END_ELEMENT (was ");

        $r17 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String eventTypeDesc(int)>(i3);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r20);

     label6:
        $r43 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getNamespaceURI()>();

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i4 != 0 goto label7;

        if $r43 == null goto label8;

        $i1 = virtualinvoke $r43.<java.lang.String: int length()>();

        if $i1 <= 0 goto label8;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Required empty namespace, instead have \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r14);

        goto label8;

     label7:
        if r2 == $r43 goto label8;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r43);

        if $z0 != 0 goto label8;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Required namespace \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; have \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r9);

     label8:
        return;
    }

    public int next() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamException $r55, $r58, $r60, $r62;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        short $s1, $s2, $s3, $s4, $s7, $s10;
        java.lang.StringBuffer $r8, $r10, $r11, $r13, $r14, $r18, $r20, $r21, $r23, $r24, $r28, $r30, $r31, $r33, $r34, $r47, $r48, $r49, $r54, $r57, $r59, $r61;
        java.lang.String $r15, $r25, $r35, $r50;
        boolean $z0, $z1;
        org.w3c.dom.Node $r2, $r3, $r4, $r5, $r9, $r12, $r19, $r22, $r29, $r32, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r51, $r52, $r53;
        int $i0, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.util.NoSuchElementException $r56;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText> = null;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        tableswitch($i0)
        {
            case 1: goto label06;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label09;
            case 7: goto label01;
            case 8: goto label05;
            default: goto label09;
        };

     label01:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $s1 = interfaceinvoke $r2.<org.w3c.dom.Node: short getNodeType()>();

        $i12 = (int) $s1;

        lookupswitch($i12)
        {
            case 1: goto label03;
            case 9: goto label02;
            case 11: goto label02;
            default: goto label04;
        };

     label02:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode> = $r4;

        $r5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        if $r5 != null goto label14;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 8;

        return 8;

     label03:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 1;

        return 1;

     label04:
        $r55 = new javax.xml.stream.XMLStreamException;

        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: unexpected DOM root node type ");

        $r29 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $s4 = interfaceinvoke $r29.<org.w3c.dom.Node: short getNodeType()>();

        $i13 = (int) $s4;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for node \'");

        $r32 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r55.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r35);

        throw $r55;

     label05:
        $r56 = new java.util.NoSuchElementException;

        specialinvoke $r56.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Can not call next() after receiving END_DOCUMENT");

        throw $r56;

     label06:
        $i8 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _depth>;

        $i9 = $i8 + 1;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _depth> = $i9;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList> = null;

        $r51 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r52 = interfaceinvoke $r51.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r52 != null goto label07;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 2;

        return 2;

     label07:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList> = null;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode> = $r52;

        goto label14;

     label08:
        $i5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _depth>;

        $i6 = $i5 - 1;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _depth> = $i6;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList> = null;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList> = null;

        $r37 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r36 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _rootNode>;

        if $r37 != $r36 goto label09;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 8;

        return 8;

     label09:
        $r38 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r39 = interfaceinvoke $r38.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        if $r39 == null goto label10;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode> = $r39;

        goto label14;

     label10:
        $r40 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r41 = interfaceinvoke $r40.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode> = $r41;

        $r42 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $s7 = interfaceinvoke $r42.<org.w3c.dom.Node: short getNodeType()>();

        if $s7 != 1 goto label11;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 2;

        return 2;

     label11:
        $r44 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r43 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _rootNode>;

        if $r44 != $r43 goto label12;

        $i14 = (int) $s7;

        if $i14 == 9 goto label13;

        $i15 = (int) $s7;

        if $i15 == 11 goto label13;

     label12:
        $r58 = new javax.xml.stream.XMLStreamException;

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r47 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: non-element parent node (");

        $i16 = (int) $s7;

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i16);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") that is not the initial root node");

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r58.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r50);

        throw $r58;

     label13:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 8;

        return 8;

     label14:
        $r53 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $s10 = interfaceinvoke $r53.<org.w3c.dom.Node: short getNodeType()>();

        $i17 = (int) $s10;

        tableswitch($i17)
        {
            case 1: goto label19;
            case 2: goto label24;
            case 3: goto label22;
            case 4: goto label15;
            case 5: goto label20;
            case 6: goto label24;
            case 7: goto label21;
            case 8: goto label17;
            case 9: goto label25;
            case 10: goto label18;
            case 11: goto label25;
            case 12: goto label24;
            default: goto label25;
        };

     label15:
        $z0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _coalescing>;

        if $z0 == 0 goto label16;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void coalesceText(int)>(12);

        goto label26;

     label16:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 12;

        goto label26;

     label17:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 5;

        goto label26;

     label18:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 11;

        goto label26;

     label19:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 1;

        goto label26;

     label20:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 9;

        goto label26;

     label21:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 3;

        goto label26;

     label22:
        $z1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _coalescing>;

        if $z1 == 0 goto label23;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void coalesceText(int)>(4);

        goto label26;

     label23:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 4;

        goto label26;

     label24:
        $r60 = new javax.xml.stream.XMLStreamException;

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: unexpected DOM node type ");

        $r9 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $s2 = interfaceinvoke $r9.<org.w3c.dom.Node: short getNodeType()>();

        $i18 = (int) $s2;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i18);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (attr/entity/notation?), for node \'");

        $r12 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r60.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r15);

        throw $r60;

     label25:
        $r62 = new javax.xml.stream.XMLStreamException;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: unrecognized DOM node type ");

        $r19 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $s3 = interfaceinvoke $r19.<org.w3c.dom.Node: short getNodeType()>();

        $i19 = (int) $s3;

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", for node \'");

        $r22 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r62.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r25);

        throw $r62;

     label26:
        $i11 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        return $i11;
    }

    public int nextTag() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        int $i0;
        java.lang.String $r3, $r6;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

     label1:
        $i0 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int next()>();

        tableswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label6;
            case 8: goto label6;
            case 9: goto label6;
            case 10: goto label6;
            case 11: goto label6;
            case 12: goto label3;
            default: goto label6;
        };

     label2:
        goto label1;

     label3:
        $z0 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean isWhiteSpace()>();

        if $z0 == 0 goto label4;

        goto label1;

     label4:
        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>("Received non-all-whitespace CHARACTERS or CDATA event in nextTag().");

        goto label6;

     label5:
        return $i0;

     label6:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Received event ");

        $r3 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String eventTypeDesc(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", instead of START_ELEMENT or END_ELEMENT.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r6);

        goto label1;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return;
    }

    public java.lang.String getNamespaceURI(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.util.Iterator getPrefixes(java.lang.String)
    {
        org.codehaus.stax2.ri.SingletonIterator $r3;
        org.codehaus.stax2.ri.EmptyIterator $r4;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.String r1, $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getPrefix(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.codehaus.stax2.ri.EmptyIterator: org.codehaus.stax2.ri.EmptyIterator getInstance()>();

        return $r4;

     label1:
        $r3 = new org.codehaus.stax2.ri.SingletonIterator;

        specialinvoke $r3.<org.codehaus.stax2.ri.SingletonIterator: void <init>(java.lang.Object)>($r2);

        return $r3;
    }

    public boolean getElementAsBoolean() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder getBooleanDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $z0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder: boolean getValue()>();

        return $z0;
    }

    public int getElementAsInt() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder getIntDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $i0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder: int getValue()>();

        return $i0;
    }

    public long getElementAsLong() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        long $l0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder getLongDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $l0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long getValue()>();

        return $l0;
    }

    public float getElementAsFloat() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        float $f0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder getFloatDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $f0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder: float getValue()>();

        return $f0;
    }

    public double getElementAsDouble() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder $r2;
        double $d0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder getDoubleDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $d0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder: double getValue()>();

        return $d0;
    }

    public java.math.BigInteger getElementAsInteger() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.math.BigInteger $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder getIntegerDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder: java.math.BigInteger getValue()>();

        return $r3;
    }

    public java.math.BigDecimal getElementAsDecimal() throws javax.xml.stream.XMLStreamException
    {
        java.math.BigDecimal $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder getDecimalDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder: java.math.BigDecimal getValue()>();

        return $r3;
    }

    public javax.xml.namespace.QName getElementAsQName() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        javax.xml.namespace.NamespaceContext $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder $r3;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder getQNameDecoder(javax.xml.namespace.NamespaceContext)>($r2);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r3);

        $r4 = virtualinvoke $r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder: javax.xml.namespace.QName getValue()>();

        return $r4;
    }

    public byte[] getElementAsBinary() throws javax.xml.stream.XMLStreamException
    {
        byte[] $r2;
        org.codehaus.stax2.typed.Base64Variant $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>();

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant)>($r1);

        return $r2;
    }

    public byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        byte[] $r4, r5;
        org.codehaus.stax2.ri.Stax2Util$ByteAggregator $r2;
        org.codehaus.stax2.typed.Base64Variant r3;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.codehaus.stax2.ri.typed.StringBase64Decoder $r1;
        int i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r3 := @parameter0: org.codehaus.stax2.typed.Base64Variant;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.StringBase64Decoder: org.codehaus.stax2.ri.Stax2Util$ByteAggregator getByteAggregator()>();

        r5 = virtualinvoke $r2.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] startAggregation()>();

     label1:
        i0 = 0;

        i1 = lengthof r5;

     label2:
        $i2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r5, i0, i1, r3);

        if $i2 >= 1 goto label3;

        $r4 = virtualinvoke $r2.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] aggregateAll(byte[],int)>(r5, i0);

        return $r4;

     label3:
        i0 = i0 + $i2;

        i1 = i1 - $i2;

        if i1 > 0 goto label2;

        r5 = virtualinvoke $r2.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] addFullBlock(byte[])>(r5);

        goto label1;
    }

    public void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.typed.TypedXMLStreamException $r5;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.String $r1, $r2;
        org.codehaus.stax2.typed.TypedValueDecoder r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r3 := @parameter0: org.codehaus.stax2.typed.TypedValueDecoder;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getElementText()>();

        $r2 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String trimSpaces(java.lang.String)>($r1);

     label1:
        if $r2 != null goto label2;

        virtualinvoke r3.<org.codehaus.stax2.typed.TypedValueDecoder: void handleEmptyValue()>();

        goto label3;

     label2:
        virtualinvoke r3.<org.codehaus.stax2.typed.TypedValueDecoder: void decode(java.lang.String)>($r2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException,java.lang.String)>($r4, $r2);

        throw $r5;

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label3 with label4;
    }

    public int readElementAsIntArray(int[], int, int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int[] r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0, i1, $i2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder getIntArrayDecoder(int[],int,int)>(r2, i0, i1);

        $i2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>($r3);

        return $i2;
    }

    public int readElementAsLongArray(long[], int, int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        long[] r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0, i1, $i2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: long[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder getLongArrayDecoder(long[],int,int)>(r2, i0, i1);

        $i2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>($r3);

        return $i2;
    }

    public int readElementAsFloatArray(float[], int, int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0, i1, $i2;
        float[] r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder getFloatArrayDecoder(float[],int,int)>(r2, i0, i1);

        $i2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>($r3);

        return $i2;
    }

    public int readElementAsDoubleArray(double[], int, int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        double[] r2;
        int i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: double[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder getDoubleArrayDecoder(double[],int,int)>(r2, i0, i1);

        $i2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>($r3);

        return $i2;
    }

    public int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder) throws javax.xml.stream.XMLStreamException
    {
        java.lang.IllegalStateException $r21;
        boolean $z0;
        java.lang.Throwable $r12;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.codehaus.stax2.typed.TypedArrayDecoder r4;
        org.codehaus.stax2.typed.TypedXMLStreamException $r22;
        org.w3c.dom.Node $r1, $r2, $r6, $r7, $r9, $r10;
        int $i0, $i1, $i2, $i5, $i6, i7, i8, i9, i10, $i11, $i13, $i15, $i16, $i17, $i19;
        java.lang.String $r3, $r8, $r11, $r16, $r17, r18, $r19, $r20;
        char $c3, $c4;
        java.lang.IllegalArgumentException $r13;
        javax.xml.stream.Location $r14;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r4 := @parameter0: org.codehaus.stax2.typed.TypedArrayDecoder;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 != 1 goto label02;

        $r6 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r7 != null goto label01;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 2;

        $i13 = (int) -1;

        return $i13;

     label01:
        $r8 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String coalesceTypedText(org.w3c.dom.Node)>($r7);

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText> = $r8;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 4;

        $r9 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode> = $r10;

        goto label05;

     label02:
        $i1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i1 == 4 goto label04;

        $i5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i5 == 12 goto label04;

        $i6 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i6 != 2 goto label03;

        $i15 = (int) -1;

        return $i15;

     label03:
        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(6);

     label04:
        $r17 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText>;

        if $r17 != null goto label05;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("First call to readElementAsArray() must be for a START_ELEMENT, not directly for a textual event");

        throw $r21;

     label05:
        $r11 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText>;

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        i8 = 0;

        i9 = 0;

        r18 = null;

     label06:
        if i8 >= $i2 goto label12;

     label07:
        $c3 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(i8);

        $i16 = (int) $c3;

        if $i16 > 32 goto label08;

        i8 = i8 + 1;

        if i8 < $i2 goto label07;

        goto label12;

     label08:
        i10 = i8;

        i8 = i8 + 1;

     label09:
        if i8 >= $i2 goto label10;

        $c4 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(i8);

        $i17 = (int) $c4;

        if $i17 <= 32 goto label10;

        i8 = i8 + 1;

        goto label09;

     label10:
        i9 = i9 + 1;

        $r3 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(i10, i8);

        r18 = $r3;

        i8 = i8 + 1;

        $z0 = virtualinvoke r4.<org.codehaus.stax2.typed.TypedArrayDecoder: boolean decodeValue(java.lang.String)>($r3);

        if $z0 == 0 goto label11;

        goto label12;

     label11:
        goto label06;

     label12:
        $i11 = $i2 - i8;

        if $i11 >= 1 goto label13;

        $r19 = "";

        goto label14;

     label13:
        $r19 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>(i8);

     label14:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText> = $r19;

        goto label20;

     label15:
        $r13 := @caughtexception;

        $r14 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: javax.xml.stream.Location getLocation()>();

        $r22 = new org.codehaus.stax2.typed.TypedXMLStreamException;

        $r16 = virtualinvoke $r13.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r22.<org.codehaus.stax2.typed.TypedXMLStreamException: void <init>(java.lang.String,java.lang.String,javax.xml.stream.Location,java.lang.IllegalArgumentException)>(r18, $r16, $r14, $r13);

        throw $r22;

     label16:
        $r12 := @caughtexception;

     label17:
        i7 = $i2 - i8;

        if i7 >= 1 goto label18;

        $r20 = "";

        goto label19;

     label18:
        $r20 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>(i8);

     label19:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText> = $r20;

        throw $r12;

     label20:
        if i9 >= 1 goto label21;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 2;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode> = $r2;

        $i19 = (int) -1;

        return $i19;

     label21:
        return i9;

        catch java.lang.IllegalArgumentException from label06 to label12 with label15;
        catch java.lang.Throwable from label06 to label12 with label16;
        catch java.lang.Throwable from label15 to label17 with label16;
    }

    private java.lang.String coalesceTypedText(org.w3c.dom.Node) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        short $s0, $s1;
        java.lang.StringBuffer $r8, $r9, $r10, $r13;
        org.w3c.dom.Node r2, r12;
        int $i2, $i3;
        java.lang.String $r4, $r6, $r11;
        org.codehaus.stax2.ri.Stax2Util$TextBuffer $r1, $r3, $r5;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        virtualinvoke $r1.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: void reset()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList> = null;

        r12 = r2;

     label1:
        if r12 == null goto label7;

        $s0 = interfaceinvoke r12.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s0;

        tableswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label4;
            case 8: goto label4;
            default: goto label5;
        };

     label2:
        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>("Element content can not contain child START_ELEMENT when using Typed Access methods");

     label3:
        $r5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        $r6 = interfaceinvoke r12.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke $r5.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: void append(java.lang.String)>($r6);

        goto label6;

     label4:
        goto label6;

     label5:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected DOM node type (");

        $s1 = interfaceinvoke r12.<org.w3c.dom.Node: short getNodeType()>();

        $i3 = (int) $s1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") when trying to decode Typed content");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r11);

     label6:
        r12 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label7:
        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        $r4 = virtualinvoke $r3.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: java.lang.String get()>();

        return $r4;
    }

    public int readElementAsBinary(byte[], int, int) throws javax.xml.stream.XMLStreamException
    {
        byte[] r1;
        org.codehaus.stax2.typed.Base64Variant $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>();

        $i2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r1, i0, i1, $r2);

        return $i2;
    }

    public int readElementAsBinary(byte[], int, int, org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        byte[] r0;
        org.codehaus.stax2.typed.Base64Variant r10;
        boolean $z0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r8;
        org.codehaus.stax2.ri.typed.StringBase64Decoder $r9;
        org.codehaus.stax2.typed.TypedXMLStreamException $r12, $r24;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r16, $r17, $r18, $r19, $r20, $r26, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, $i15, i16, $i17, $i18, $i19, $i21, $i23, $i25;
        java.lang.String $r7, $r11, $r13, $r21;
        java.lang.IllegalArgumentException $r23, $r25, $r27, $r29;

        r8 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r0 := @parameter0: byte[];

        i12 := @parameter1: int;

        i13 := @parameter2: int;

        r10 := @parameter3: org.codehaus.stax2.typed.Base64Variant;

        if r0 != null goto label01;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("resultBuffer is null");

        throw $r25;

     label01:
        if i12 >= 0 goto label02;

        $r27 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal offset (");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i12);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("), must be [0, ");

        $i11 = lengthof r0;

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i11);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r27;

     label02:
        if i13 < 1 goto label03;

        $i2 = i12 + i13;

        $i1 = lengthof r0;

        if $i2 <= $i1 goto label05;

     label03:
        if i13 != 0 goto label04;

        return 0;

     label04:
        $r29 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal maxLength (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i13);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("), has to be positive number, and offset+maxLength can not exceed");

        $i0 = lengthof r0;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r29;

     label05:
        $r9 = virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder()>();

        i14 = r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $i3 = 1 << i14;

        $i4 = $i3 & 4178;

        if $i4 != 0 goto label07;

        if i14 != 2 goto label06;

        $z0 = virtualinvoke $r9.<org.codehaus.stax2.ri.typed.StringBase64Decoder: boolean hasData()>();

        if $z0 != 0 goto label07;

        $i21 = (int) -1;

        return $i21;

     label06:
        virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(6);

     label07:
        if i14 != 1 goto label12;

     label08:
        $i15 = virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int next()>();

        if $i15 != 2 goto label09;

        $i23 = (int) -1;

        return $i23;

     label09:
        if $i15 == 5 goto label08;

        if $i15 != 3 goto label10;

        goto label08;

     label10:
        $i9 = 1 << $i15;

        $i10 = $i9 & 4688;

        if $i10 != 0 goto label11;

        virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportParseProblem(int)>(4);

     label11:
        $r13 = virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        virtualinvoke $r9.<org.codehaus.stax2.ri.typed.StringBase64Decoder: void init(org.codehaus.stax2.typed.Base64Variant,boolean,java.lang.String)>(r10, 1, $r13);

        goto label12;

     label12:
        i16 = 0;

     label13:
        $i17 = virtualinvoke $r9.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int decode(byte[],int,int)>(r0, i12, i13);

     label14:
        goto label16;

     label15:
        $r23 := @caughtexception;

        $r24 = virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException,java.lang.String)>($r23, "");

        throw $r24;

     label16:
        i12 = i12 + $i17;

        i16 = i16 + $i17;

        i13 = i13 - $i17;

        if i13 < 1 goto label23;

        $i5 = r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i5 != 2 goto label17;

        goto label23;

     label17:
        $i18 = virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int next()>();

        if $i18 == 5 goto label17;

        if $i18 == 3 goto label17;

        if $i18 != 6 goto label18;

        goto label17;

     label18:
        if $i18 != 2 goto label20;

        $i8 = virtualinvoke $r9.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int endOfContent()>();

        if $i8 >= 0 goto label19;

        $r12 = virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.String,java.lang.String)>("Incomplete base64 triplet at the end of decoded content", "");

        throw $r12;

     label19:
        if $i8 <= 0 goto label23;

        goto label13;

     label20:
        $i6 = 1 << $i18;

        $i7 = $i6 & 4688;

        if $i7 != 0 goto label21;

        virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportParseProblem(int)>(4);

     label21:
        $r11 = virtualinvoke r8.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        virtualinvoke $r9.<org.codehaus.stax2.ri.typed.StringBase64Decoder: void init(org.codehaus.stax2.typed.Base64Variant,boolean,java.lang.String)>(r10, 0, $r11);

        goto label22;

     label22:
        goto label13;

     label23:
        if i16 <= 0 goto label24;

        $i19 = i16;

        goto label25;

     label24:
        $i25 = (int) -1;

        $i19 = $i25;

     label25:
        return $i19;

        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    public int getAttributeIndex(java.lang.String, java.lang.String)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int findAttributeIndex(java.lang.String,java.lang.String)>(r1, r2);

        return $i0;
    }

    public boolean getAttributeAsBoolean(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder getBooleanDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $z0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder: boolean getValue()>();

        return $z0;
    }

    public int getAttributeAsInt(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0, $i1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder getIntDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $i1 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder: int getValue()>();

        return $i1;
    }

    public long getAttributeAsLong(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        long $l1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder getLongDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $l1 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long getValue()>();

        return $l1;
    }

    public float getAttributeAsFloat(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        float $f0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder getFloatDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $f0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder: float getValue()>();

        return $f0;
    }

    public double getAttributeAsDouble(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder $r2;
        double $d0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder getDoubleDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $d0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder: double getValue()>();

        return $d0;
    }

    public java.math.BigInteger getAttributeAsInteger(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        java.math.BigInteger $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder getIntegerDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder: java.math.BigInteger getValue()>();

        return $r3;
    }

    public java.math.BigDecimal getAttributeAsDecimal(int) throws javax.xml.stream.XMLStreamException
    {
        java.math.BigDecimal $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder getDecimalDecoder()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder: java.math.BigDecimal getValue()>();

        return $r3;
    }

    public javax.xml.namespace.QName getAttributeAsQName(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        javax.xml.namespace.NamespaceContext $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder $r3;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder getQNameDecoder(javax.xml.namespace.NamespaceContext)>($r2);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r3);

        $r4 = virtualinvoke $r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder: javax.xml.namespace.QName getValue()>();

        return $r4;
    }

    public final void getAttributeAs(int, org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.typed.TypedXMLStreamException $r5;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        java.lang.String $r1, $r2;
        org.codehaus.stax2.typed.TypedValueDecoder r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        r3 := @parameter1: org.codehaus.stax2.typed.TypedValueDecoder;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getAttributeValue(int)>(i0);

        $r2 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String trimSpaces(java.lang.String)>($r1);

     label1:
        if $r2 != null goto label2;

        virtualinvoke r3.<org.codehaus.stax2.typed.TypedValueDecoder: void handleEmptyValue()>();

        goto label3;

     label2:
        virtualinvoke r3.<org.codehaus.stax2.typed.TypedValueDecoder: void decode(java.lang.String)>($r2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException,java.lang.String)>($r4, $r2);

        throw $r5;

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label3 with label4;
    }

    public int[] getAttributeAsIntArray(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int[] $r4;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        java.lang.String $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder getIntArrayDecoder()>();

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getAttributeValue(int)>(i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _getAttributeAsArray(org.codehaus.stax2.typed.TypedArrayDecoder,java.lang.String)>($r2, $r3);

        $r4 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder: int[] getValues()>();

        return $r4;
    }

    public long[] getAttributeAsLongArray(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        long[] $r4;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        java.lang.String $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder getLongArrayDecoder()>();

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getAttributeValue(int)>(i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _getAttributeAsArray(org.codehaus.stax2.typed.TypedArrayDecoder,java.lang.String)>($r2, $r3);

        $r4 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder: long[] getValues()>();

        return $r4;
    }

    public float[] getAttributeAsFloatArray(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        float[] $r4;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder $r2;
        java.lang.String $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder getFloatArrayDecoder()>();

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getAttributeValue(int)>(i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _getAttributeAsArray(org.codehaus.stax2.typed.TypedArrayDecoder,java.lang.String)>($r2, $r3);

        $r4 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder: float[] getValues()>();

        return $r4;
    }

    public double[] getAttributeAsDoubleArray(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;
        double[] $r4;
        java.lang.String $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder getDoubleArrayDecoder()>();

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getAttributeValue(int)>(i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _getAttributeAsArray(org.codehaus.stax2.typed.TypedArrayDecoder,java.lang.String)>($r2, $r3);

        $r4 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder: double[] getValues()>();

        return $r4;
    }

    public int getAttributeAsArray(int, org.codehaus.stax2.typed.TypedArrayDecoder) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.typed.TypedArrayDecoder r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0, $i1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        r1 := @parameter1: org.codehaus.stax2.typed.TypedArrayDecoder;

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getAttributeValue(int)>(i0);

        $i1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _getAttributeAsArray(org.codehaus.stax2.typed.TypedArrayDecoder,java.lang.String)>(r1, $r2);

        return $i1;
    }

    protected int _getAttributeAsArray(org.codehaus.stax2.typed.TypedArrayDecoder, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r3;
        org.codehaus.stax2.typed.TypedArrayDecoder r2;
        org.codehaus.stax2.typed.TypedXMLStreamException $r9;
        int $i0, i3, i4, i5, i6, $i7, $i8;
        java.lang.String r0, $r1, $r7, r8;
        boolean $z0, $z1;
        char $c1, $c2;
        java.lang.IllegalArgumentException $r4;
        javax.xml.stream.Location $r5;

        r3 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: org.codehaus.stax2.typed.TypedArrayDecoder;

        r0 := @parameter1: java.lang.String;

        i3 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r8 = null;

        i4 = 0;

     label1:
        if i3 >= $i0 goto label7;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i7 = (int) $c1;

        if $i7 > 32 goto label3;

        i3 = i3 + 1;

        if i3 < $i0 goto label2;

        goto label7;

     label3:
        i5 = i3;

        i6 = i3 + 1;

     label4:
        if i6 >= $i0 goto label5;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i8 = (int) $c2;

        if $i8 <= 32 goto label5;

        i6 = i6 + 1;

        goto label4;

     label5:
        i3 = i6 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i5, i6);

        r8 = $r1;

        i4 = i4 + 1;

        $z0 = virtualinvoke r2.<org.codehaus.stax2.typed.TypedArrayDecoder: boolean decodeValue(java.lang.String)>($r1);

        if $z0 == 0 goto label6;

        $z1 = specialinvoke r3.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean checkExpand(org.codehaus.stax2.typed.TypedArrayDecoder)>(r2);

        if $z1 != 0 goto label6;

        goto label7;

     label6:
        goto label1;

     label7:
        goto label9;

     label8:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r3.<org.codehaus.stax2.ri.dom.DOMWrappingReader: javax.xml.stream.Location getLocation()>();

        $r9 = new org.codehaus.stax2.typed.TypedXMLStreamException;

        $r7 = virtualinvoke $r4.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r9.<org.codehaus.stax2.typed.TypedXMLStreamException: void <init>(java.lang.String,java.lang.String,javax.xml.stream.Location,java.lang.IllegalArgumentException)>(r8, $r7, $r5, $r4);

        throw $r9;

     label9:
        return i4;

        catch java.lang.IllegalArgumentException from label1 to label7 with label8;
    }

    private final boolean checkExpand(org.codehaus.stax2.typed.TypedArrayDecoder)
    {
        org.codehaus.stax2.typed.TypedArrayDecoder r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$BaseArrayDecoder $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r2;
        boolean $z0;

        r2 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r0 := @parameter0: org.codehaus.stax2.typed.TypedArrayDecoder;

        $z0 = r0 instanceof org.codehaus.stax2.ri.typed.ValueDecoderFactory$BaseArrayDecoder;

        if $z0 == 0 goto label1;

        $r1 = (org.codehaus.stax2.ri.typed.ValueDecoderFactory$BaseArrayDecoder) r0;

        virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$BaseArrayDecoder: void expand()>();

        return 1;

     label1:
        return 0;
    }

    public byte[] getAttributeAsBinary(int) throws javax.xml.stream.XMLStreamException
    {
        byte[] $r2;
        org.codehaus.stax2.typed.Base64Variant $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>();

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: byte[] getAttributeAsBinary(int,org.codehaus.stax2.typed.Base64Variant)>(i0, $r1);

        return $r2;
    }

    public byte[] getAttributeAsBinary(int, org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        byte[] $r4;
        org.codehaus.stax2.typed.Base64Variant r3;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.IllegalArgumentException $r5;
        org.codehaus.stax2.ri.typed.StringBase64Decoder $r2;
        org.codehaus.stax2.typed.TypedXMLStreamException $r6;
        int i0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        r3 := @parameter1: org.codehaus.stax2.typed.Base64Variant;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getAttributeValue(int)>(i0);

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder()>();

        virtualinvoke $r2.<org.codehaus.stax2.ri.typed.StringBase64Decoder: void init(org.codehaus.stax2.typed.Base64Variant,boolean,java.lang.String)>(r3, 1, $r1);

     label1:
        $r4 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.StringBase64Decoder: byte[] decodeCompletely()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException,java.lang.String)>($r5, $r1);

        throw $r6;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public java.lang.Object getFeature(java.lang.String)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r7;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        java.lang.String r3, $r6;

        r7 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized feature \"");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    public void setFeature(java.lang.String, java.lang.Object)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r7;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        java.lang.Object r8;
        java.lang.String r3, $r6;

        r7 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r3 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Object;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized feature \"");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    public void skipElement() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int $i0, i1, $i2, $i4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        i1 = 1;

     label2:
        $i2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int next()>();

        if $i2 != 1 goto label3;

        i1 = i1 + 1;

        goto label4;

     label3:
        if $i2 != 2 goto label4;

        $i4 = (int) -1;

        i1 = i1 + $i4;

        if i1 != 0 goto label4;

        goto label5;

     label4:
        goto label2;

     label5:
        return;
    }

    public org.codehaus.stax2.AttributeInfo getAttributeInfo() throws javax.xml.stream.XMLStreamException
    {
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        return r0;
    }

    public int findAttributeIndex(java.lang.String, java.lang.String)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1, $r3;
        int $i0, $i1, $i2, i3, $i4, $i6;
        org.w3c.dom.NamedNodeMap $r2;
        java.lang.String $r4, r5, $r6, r8;
        boolean $z0, $z1, $z3, $z4;
        org.w3c.dom.Element $r7;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r8 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void reportWrongState(int)>(1);

     label1:
        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r7 = (org.w3c.dom.Element) $r1;

        $r2 = interfaceinvoke $r7.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        if r8 == null goto label2;

        $i2 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i2 != 0 goto label2;

        r8 = null;

     label2:
        i3 = 0;

        $i4 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: int getLength()>();

     label3:
        if i3 >= $i4 goto label9;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i3);

        $r4 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _safeGetLocalName(org.w3c.dom.Node)>($r3);

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r6 == null goto label4;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

     label4:
        $z4 = 1;

        $z3 = 1;

        goto label6;

     label5:
        $z4 = 0;

        $z3 = 0;

     label6:
        if r8 != null goto label7;

        if $z3 == 0 goto label8;

        return i3;

     label7:
        if $z4 != 0 goto label8;

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label8;

        return i3;

     label8:
        i3 = i3 + 1;

        goto label3;

     label9:
        $i6 = (int) -1;

        return $i6;
    }

    public int getIdAttributeIndex()
    {
        int $i1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i1 = (int) -1;

        return $i1;
    }

    public int getNotationAttributeIndex()
    {
        int $i1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i1 = (int) -1;

        return $i1;
    }

    public org.codehaus.stax2.DTDInfo getDTDInfo() throws javax.xml.stream.XMLStreamException
    {
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 == 11 goto label1;

        return null;

     label1:
        return r0;
    }

    public final org.codehaus.stax2.LocationInfo getLocationInfo()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return r0;
    }

    public int getText(java.io.Writer, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.io.Writer r2;
        int $i0;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getText()>();

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r1);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public int getDepth()
    {
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _depth>;

        return $i0;
    }

    public boolean isEmptyElement() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return 0;
    }

    public javax.xml.namespace.NamespaceContext getNonTransientNamespaceContext()
    {
        org.codehaus.stax2.ri.EmptyNamespaceContext $r0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r1;

        r1 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r0 = staticinvoke <org.codehaus.stax2.ri.EmptyNamespaceContext: org.codehaus.stax2.ri.EmptyNamespaceContext getInstance()>();

        return $r0;
    }

    public java.lang.String getPrefixedName()
    {
        java.lang.IllegalStateException $r12;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.StringBuffer $r8, $r13, $r14, $r16, $r17;
        org.w3c.dom.Node $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r2, $r3, $r5, $r7, $r9, $r10, $r11, $r15, $r18;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label4;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label6;
            case 7: goto label6;
            case 8: goto label6;
            case 9: goto label3;
            case 10: goto label6;
            case 11: goto label5;
            default: goto label6;
        };

     label1:
        $r4 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        $r6 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r7 = specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _safeGetLocalName(org.w3c.dom.Node)>($r6);

        if $r5 != null goto label2;

        $r11 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r7);

        return $r11;

     label2:
        $r8 = new java.lang.StringBuffer;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i2 = $i1 + 1;

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i4 = $i2 + $i3;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i4);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r9);

        return $r10;

     label3:
        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getLocalName()>();

        return $r2;

     label4:
        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getPITarget()>();

        return $r3;

     label5:
        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String getDTDRootName()>();

        return $r1;

     label6:
        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Current state (");

        $i5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $r15 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String eventTypeDesc(int)>($i5);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not START_ELEMENT, END_ELEMENT, ENTITY_REFERENCE, PROCESSING_INSTRUCTION or DTD");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r12;
    }

    public void closeCompletely() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return;
    }

    public java.lang.Object getProcessedDTD()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return null;
    }

    public java.lang.String getDTDRootName()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1;
        int $i0;
        java.lang.String $r3, $r4;
        org.w3c.dom.DocumentType $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 != 11 goto label1;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = (org.w3c.dom.DocumentType) $r1;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.DocumentType: java.lang.String getName()>();

        $r4 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>($r3);

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getDTDPublicId()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1;
        int $i0;
        java.lang.String $r3;
        org.w3c.dom.DocumentType $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 != 11 goto label1;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = (org.w3c.dom.DocumentType) $r1;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getDTDSystemId()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        org.w3c.dom.Node $r1;
        int $i0;
        java.lang.String $r3;
        org.w3c.dom.DocumentType $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $i0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        if $i0 != 11 goto label1;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = (org.w3c.dom.DocumentType) $r1;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getDTDInternalSubset()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return null;
    }

    public org.codehaus.stax2.validation.DTDValidationSchema getProcessedDTDSchema()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return null;
    }

    public long getStartingByteOffset()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return -1L;
    }

    public long getStartingCharOffset()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return 0L;
    }

    public long getEndingByteOffset() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return -1L;
    }

    public long getEndingCharOffset() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        return -1L;
    }

    public org.codehaus.stax2.XMLStreamLocation2 getStartLocation()
    {
        org.codehaus.stax2.XMLStreamLocation2 $r0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r1;

        r1 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r0 = <org.codehaus.stax2.XMLStreamLocation2: org.codehaus.stax2.XMLStreamLocation2 NOT_AVAILABLE>;

        return $r0;
    }

    public org.codehaus.stax2.XMLStreamLocation2 getCurrentLocation()
    {
        org.codehaus.stax2.XMLStreamLocation2 $r0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r1;

        r1 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r0 = <org.codehaus.stax2.XMLStreamLocation2: org.codehaus.stax2.XMLStreamLocation2 NOT_AVAILABLE>;

        return $r0;
    }

    public final org.codehaus.stax2.XMLStreamLocation2 getEndLocation() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamLocation2 $r0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r1;

        r1 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r0 = <org.codehaus.stax2.XMLStreamLocation2: org.codehaus.stax2.XMLStreamLocation2 NOT_AVAILABLE>;

        return $r0;
    }

    public org.codehaus.stax2.validation.XMLValidator validateAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidationSchema r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        return null;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidationSchema r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        return null;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidator) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidator r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidator;

        return null;
    }

    public org.codehaus.stax2.validation.ValidationProblemHandler setValidationProblemHandler(org.codehaus.stax2.validation.ValidationProblemHandler)
    {
        org.codehaus.stax2.validation.ValidationProblemHandler r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: org.codehaus.stax2.validation.ValidationProblemHandler;

        return null;
    }

    protected void coalesceText(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        short $s0;
        org.w3c.dom.Node $r2, $r5, $r6, $r9;
        int i1, $i2, $i3;
        java.lang.String $r4, $r8, $r11;
        org.codehaus.stax2.ri.Stax2Util$TextBuffer $r1, $r3, $r7, $r10;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        virtualinvoke $r1.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: void reset()>();

        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r4 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke $r3.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: void append(java.lang.String)>($r4);

     label1:
        $r5 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        if $r6 == null goto label3;

        $s0 = interfaceinvoke $r6.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s0;

        if $i2 == 3 goto label2;

        $i3 = (int) $s0;

        if $i3 == 4 goto label2;

        goto label3;

     label2:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode> = $r6;

        $r10 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        $r9 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r11 = interfaceinvoke $r9.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke $r10.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: void append(java.lang.String)>($r11);

        goto label1;

     label3:
        $r7 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.Stax2Util$TextBuffer _textBuffer>;

        $r8 = virtualinvoke $r7.<org.codehaus.stax2.ri.Stax2Util$TextBuffer: java.lang.String get()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _coalescedText> = $r8;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent> = 4;

        return;
    }

    private javax.xml.namespace.QName _constructQName(java.lang.String, java.lang.String, java.lang.String)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r1;
        javax.xml.namespace.QName $r0;
        java.lang.String r2, $r3, r4, $r5, r6, $r7;

        r1 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r0 = new javax.xml.namespace.QName;

        $r3 = virtualinvoke r1.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internNsURI(java.lang.String)>(r2);

        $r5 = virtualinvoke r1.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>(r4);

        $r7 = virtualinvoke r1.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>(r6);

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r3, $r5, $r7);

        return $r0;
    }

    private void _calcNsAndAttrLists(boolean)
    {
        boolean $z0, $z1, z2, $z3;
        java.util.List $r15, $r16, $r18, $r22, $r23;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.util.ArrayList $r10, $r11, $r13, $r14, r19, r20;
        org.w3c.dom.Node $r1, $r3, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        org.w3c.dom.NamedNodeMap $r2;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r12, r21;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        z2 := @parameter0: boolean;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i0 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if $i0 != 0 goto label01;

        $r18 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList> = $r18;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList> = $r18;

        return;

     label01:
        $z0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgNsAware>;

        if $z0 != 0 goto label04;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList> = $r14;

        i6 = 0;

     label02:
        if i6 >= $i0 goto label03;

        $r16 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList>;

        $r17 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i6);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        i6 = i6 + 1;

        goto label02;

     label03:
        $r15 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList> = $r15;

        return;

     label04:
        r19 = null;

        r20 = null;

        i7 = 0;

     label05:
        if i7 >= $i0 goto label15;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i7);

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        if $r4 == null goto label06;

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i4 != 0 goto label09;

     label06:
        $r5 = "xmlns";

        $r6 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label08;

        if z2 == 0 goto label14;

        if r19 != null goto label07;

        $r11 = new java.util.ArrayList;

        $i3 = $i0 - i7;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i3);

        r19 = $r11;

     label07:
        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label14;

     label08:
        r21 = null;

        goto label12;

     label09:
        $r12 = "xmlns";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z3 != 0 goto label11;

        if z2 == 0 goto label14;

        if r19 != null goto label10;

        $r13 = new java.util.ArrayList;

        $i5 = $i0 - i7;

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i5);

        r19 = $r13;

     label10:
        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label14;

     label11:
        r21 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getLocalName()>();

     label12:
        if r20 != null goto label13;

        $r10 = new java.util.ArrayList;

        $i1 = $i0 - i7;

        $i2 = $i1 * 2;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i2);

        r20 = $r10;

     label13:
        $r7 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internName(java.lang.String)>(r21);

        virtualinvoke r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r8 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r9 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String _internNsURI(java.lang.String)>($r8);

        virtualinvoke r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label14:
        i7 = i7 + 1;

        goto label05;

     label15:
        if r19 != null goto label16;

        $r22 = <java.util.Collections: java.util.List EMPTY_LIST>;

        goto label17;

     label16:
        $r22 = r19;

     label17:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _attrList> = $r22;

        if r20 != null goto label18;

        $r23 = <java.util.Collections: java.util.List EMPTY_LIST>;

        goto label19;

     label18:
        $r23 = r20;

     label19:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.util.List _nsDeclList> = $r23;

        return;
    }

    private void handleIllegalAttrIndex(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        org.w3c.dom.Node $r1;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r3;
        java.lang.String $r8, $r13, $r15;
        java.lang.IllegalArgumentException $r14;
        org.w3c.dom.Element r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.w3c.dom.Node _currNode>;

        r2 = (org.w3c.dom.Element) $r1;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i0 = interfaceinvoke $r3.<org.w3c.dom.NamedNodeMap: int getLength()>();

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal attribute index ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; element <");

        $r8 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> has ");

        if $i0 != 0 goto label1;

        $r15 = "no";

        goto label2;

     label1:
        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label2:
        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" attributes");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r14;
    }

    private void handleIllegalNsIndex(int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r4;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuffer $r0, $r1, $r2, $r3, $r5, $r6;
        int i0, $i1;
        java.lang.String $r7;

        r4 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal namespace declaration index ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (has ");

        $i1 = virtualinvoke r4.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int getNamespaceCount()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ns declarations)");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r8;
    }

    private java.lang.String _safeGetLocalName(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r2;
        java.lang.String $r1, r3;

        r2 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

     label1:
        return r3;
    }

    protected void reportWrongState(int)
    {
        java.lang.IllegalStateException $r0;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r1;
        int i0, $i1;
        java.lang.String $r2;

        r1 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $r0 = new java.lang.IllegalStateException;

        $i1 = r1.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $r2 = virtualinvoke r1.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String findErrorDesc(int,int)>(i0, $i1);

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r0;
    }

    protected void reportParseProblem(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i0 := @parameter0: int;

        $i1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: int _currEvent>;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: java.lang.String findErrorDesc(int,int)>(i0, $i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String)>($r1);

        return;
    }

    protected void throwStreamException(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        javax.xml.stream.Location $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: javax.xml.stream.Location getErrorLocation()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: void throwStreamException(java.lang.String,javax.xml.stream.Location)>(r1, $r2);

        return;
    }

    protected javax.xml.stream.Location getErrorLocation()
    {
        org.codehaus.stax2.XMLStreamLocation2 $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        javax.xml.stream.Location r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.XMLStreamLocation2 getCurrentLocation()>();

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: javax.xml.stream.Location getLocation()>();

     label1:
        return r2;
    }

    protected org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException, java.lang.String)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r2;
        java.lang.IllegalArgumentException r0;
        org.codehaus.stax2.typed.TypedXMLStreamException $r4, $r6;
        java.lang.String $r1, r5, r7;
        org.codehaus.stax2.XMLStreamLocation2 $r3;

        r2 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r0 := @parameter0: java.lang.IllegalArgumentException;

        r5 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        r7 = $r1;

        if $r1 != null goto label1;

        r7 = "";

     label1:
        $r3 = virtualinvoke r2.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>();

        if $r3 != null goto label2;

        $r6 = new org.codehaus.stax2.typed.TypedXMLStreamException;

        specialinvoke $r6.<org.codehaus.stax2.typed.TypedXMLStreamException: void <init>(java.lang.String,java.lang.String,java.lang.IllegalArgumentException)>(r5, r7, r0);

        return $r6;

     label2:
        $r4 = new org.codehaus.stax2.typed.TypedXMLStreamException;

        specialinvoke $r4.<org.codehaus.stax2.typed.TypedXMLStreamException: void <init>(java.lang.String,java.lang.String,javax.xml.stream.Location)>(r5, r7, $r3);

        return $r4;
    }

    protected org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.String, java.lang.String)
    {
        org.codehaus.stax2.typed.TypedXMLStreamException $r2, $r5;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;
        java.lang.String r3, r4;
        org.codehaus.stax2.XMLStreamLocation2 $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>();

        if $r1 != null goto label1;

        $r5 = new org.codehaus.stax2.typed.TypedXMLStreamException;

        specialinvoke $r5.<org.codehaus.stax2.typed.TypedXMLStreamException: void <init>(java.lang.String,java.lang.String)>(r3, r4);

        return $r5;

     label1:
        $r2 = new org.codehaus.stax2.typed.TypedXMLStreamException;

        specialinvoke $r2.<org.codehaus.stax2.typed.TypedXMLStreamException: void <init>(java.lang.String,java.lang.String,javax.xml.stream.Location)>(r3, r4, $r1);

        return $r2;
    }

    protected org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1, $r2, $r3;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.stax2.ri.typed.ValueDecoderFactory;

        specialinvoke $r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: void <init>()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory> = $r3;

     label1:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory>;

        return $r2;
    }

    protected org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder()
    {
        org.codehaus.stax2.ri.typed.StringBase64Decoder $r1, $r2, $r3;
        org.codehaus.stax2.ri.dom.DOMWrappingReader r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.stax2.ri.typed.StringBase64Decoder;

        specialinvoke $r3.<org.codehaus.stax2.ri.typed.StringBase64Decoder: void <init>()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingReader: org.codehaus.stax2.ri.typed.StringBase64Decoder _base64Decoder>;

        return $r2;
    }

    protected java.lang.String findErrorDesc(int, int)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r41;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39;
        int i0, i1;
        java.lang.String $r0, $r5, $r10, $r15, $r20, $r25, $r30, $r35, $r40;

        r41 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $r0 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String eventTypeDesc(int)>(i0);

        tableswitch(i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label7;
            case 6: goto label6;
            case 7: goto label3;
            default: goto label8;
        };

     label1:
        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Current event ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", needs to be START_ELEMENT");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r35;

     label2:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Current event ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", needs to be START_ELEMENT or END_ELEMENT");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r30;

     label3:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Current event (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") has no local name");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

     label4:
        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Current event (");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") needs to be PROCESSING_INSTRUCTION");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r25;

     label5:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Current event (");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not a textual event");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;

     label6:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Current event (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not START_ELEMENT, END_ELEMENT, CHARACTERS or CDATA");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;

     label7:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Current event ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", needs to be one of CHARACTERS, CDATA, SPACE or COMMENT");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;

     label8:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error (unrecognized error type: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r40;
    }

    protected java.lang.String _internName(java.lang.String)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r1 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        $z0 = r1.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgInternNames>;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String intern()>();

        goto label3;

     label2:
        $r2 = r0;

     label3:
        return $r2;
    }

    protected java.lang.String _internNsURI(java.lang.String)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingReader r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r1 := @this: org.codehaus.stax2.ri.dom.DOMWrappingReader;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        $z0 = r1.<org.codehaus.stax2.ri.dom.DOMWrappingReader: boolean _cfgInternNsURIs>;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String intern()>();

        goto label3;

     label2:
        $r2 = r0;

     label3:
        return $r2;
    }

    public static void <clinit>()
    {
        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int ERR_STATE_NO_LOCALNAME> = 7;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int ERR_STATE_NOT_TEXTUAL_OR_ELEM> = 6;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int ERR_STATE_NOT_TEXTUAL_XXX> = 5;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int ERR_STATE_NOT_TEXTUAL> = 4;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int ERR_STATE_NOT_PI> = 3;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int ERR_STATE_NOT_ELEM> = 2;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int ERR_STATE_NOT_START_ELEM> = 1;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int MASK_TYPED_ACCESS_BINARY> = 4178;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int MASK_GET_ELEMENT_TEXT> = 4688;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int MASK_GET_TEXT_XXX> = 4208;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int MASK_GET_TEXT> = 6768;

        <org.codehaus.stax2.ri.dom.DOMWrappingReader: int INT_SPACE> = 32;

        return;
    }
}
