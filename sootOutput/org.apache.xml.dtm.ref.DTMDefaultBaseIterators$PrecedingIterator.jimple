public class org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase
{
    private final int _maxAncestors;
    protected int[] _stack;
    protected int _sp;
    protected int _oldsp;
    protected int _markedsp;
    protected int _markedNode;
    protected int _markedDescendant;
    private final org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0;

    public void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator r0;
        int[] $r2;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseIterators;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _maxAncestors> = 8;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0> = r1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _maxAncestors> = 8;

        $r2 = newarray (int)[8];

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack> = $r2;

        return;
    }

    public boolean isReverse()
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator;

        return 1;
    }

    public org.apache.xml.dtm.DTMAxisIterator cloneIterator()
    {
        java.lang.CloneNotSupportedException $r6;
        int[] $r2, r3, $r4, $r5;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.String $r8;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator r0, r9;
        org.apache.xml.dtm.DTMException $r7;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable> = 0;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r9 = (org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator) $r1;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        $i0 = lengthof $r2;

        r3 = newarray (int)[$i0];

        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, $i1);

        r9.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack> = r3;

        return r9;

     label2:
        $r6 := @caughtexception;

        $r7 = new org.apache.xml.dtm.DTMException;

        $r8 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_ITERATOR_CLONE_NOT_SUPPORTED", null);

        specialinvoke $r7.<org.apache.xml.dtm.DTMException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label2;
    }

    public org.apache.xml.dtm.DTMAxisIterator setStartNode(int)
    {
        short $s1;
        int[] $r3, $r4, $r5, r6, $r7, $r8;
        org.apache.xml.dtm.DTMAxisIterator $r9;
        int $i0, $i2, $i3, $i4, i5, i6, i7, i8, $i9, $i10, $i12, $i14;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator r0;
        boolean $z0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators $r1, $r2, $r10, $r11, $r12;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator;

        i5 := @parameter0: int;

        if i5 != 0 goto label1;

        $r11 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        i5 = virtualinvoke $r11.<org.apache.xml.dtm.ref.DTMDefaultBase: int getDocument()>();

     label1:
        $z0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable>;

        if $z0 == 0 goto label7;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i0 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i5);

        i6 = $i0;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $s1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: short _type(int)>($i0);

        $i10 = (int) $s1;

        if $i10 != 2 goto label2;

        $r10 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        i6 = virtualinvoke $r10.<org.apache.xml.dtm.ref.DTMDefaultBase: int _parent(int)>($i0);

     label2:
        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode> = i6;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        i7 = 0;

        $r3[0] = i6;

        i8 = i6;

        goto label5;

     label3:
        i7 = i7 + 1;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        $i2 = lengthof $r4;

        if i7 != $i2 goto label4;

        $i3 = i7 + 4;

        r6 = newarray (int)[$i3];

        $r7 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r6, 0, i7);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack> = r6;

     label4:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        $r5[i7] = $i9;

     label5:
        $r12 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i9 = virtualinvoke $r12.<org.apache.xml.dtm.ref.DTMDefaultBase: int _parent(int)>(i8);

        i8 = $i9;

        $i12 = (int) -1;

        if $i9 != $i12 goto label3;

        if i7 <= 0 goto label6;

        $i14 = (int) -1;

        i7 = i7 + $i14;

     label6:
        $r8 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        $i4 = $r8[i7];

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i4;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _sp> = i7;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _oldsp> = i7;

        $r9 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

        return $r9;

     label7:
        return r0;
    }

    public int next()
    {
        short $s8, $s10;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators $r2, $r3, $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $i1 = $i0 + 1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i1;

        goto label4;

     label1:
        $i4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        $i2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _sp>;

        $i3 = $r1[$i2];

        if $i4 >= $i3 goto label2;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i7 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $s8 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: short _type(int)>($i7);

        $i17 = (int) $s8;

        if $i17 == 2 goto label3;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i9 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $s10 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: short _type(int)>($i9);

        $i18 = (int) $s10;

        if $i18 == 13 goto label3;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i11 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $i12 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>($i11);

        $i13 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>($i12);

        return $i13;

     label2:
        $i5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _sp>;

        $i6 = $i5 - 1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _sp> = $i6;

     label3:
        $i14 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $i15 = $i14 + 1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i15;

     label4:
        $i16 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _sp>;

        if $i16 >= 0 goto label1;

        $i20 = (int) -1;

        return $i20;
    }

    public org.apache.xml.dtm.DTMAxisIterator reset()
    {
        int $i0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator r0;
        org.apache.xml.dtm.DTMAxisIterator $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _oldsp>;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _sp> = $i0;

        $r1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

        return $r1;
    }

    public void setMark()
    {
        int[] $r1;
        int $i0, $i1, $i2;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _sp>;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _markedsp> = $i0;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _markedNode> = $i1;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int[] _stack>;

        $i2 = $r1[0];

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _markedDescendant> = $i2;

        return;
    }

    public void gotoMark()
    {
        int $i0, $i1;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _markedsp>;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _sp> = $i0;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator: int _markedNode>;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i1;

        return;
    }
}
