public class net.oauth.client.OAuthClient extends java.lang.Object
{
    private net.oauth.http.HttpClient http;
    protected final java.util.Map httpParameters;
    public static final java.lang.String PARAMETER_STYLE;
    public static final java.lang.String ACCEPT_ENCODING;
    protected static final java.lang.String PUT;
    protected static final java.lang.String POST;
    protected static final java.lang.String DELETE;
    protected static final java.lang.String CONTENT_LENGTH;

    public void <init>(net.oauth.http.HttpClient)
    {
        java.util.Map $r4;
        net.oauth.client.OAuthClient r0;
        java.lang.Boolean $r3;
        java.util.HashMap $r1;
        net.oauth.http.HttpClient r2;

        r0 := @this: net.oauth.client.OAuthClient;

        r2 := @parameter0: net.oauth.http.HttpClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<net.oauth.client.OAuthClient: java.util.Map httpParameters> = $r1;

        r0.<net.oauth.client.OAuthClient: net.oauth.http.HttpClient http> = r2;

        $r4 = r0.<net.oauth.client.OAuthClient: java.util.Map httpParameters>;

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("followRedirects", $r3);

        return;
    }

    public void setHttpClient(net.oauth.http.HttpClient)
    {
        net.oauth.client.OAuthClient r0;
        net.oauth.http.HttpClient r1;

        r0 := @this: net.oauth.client.OAuthClient;

        r1 := @parameter0: net.oauth.http.HttpClient;

        r0.<net.oauth.client.OAuthClient: net.oauth.http.HttpClient http> = r1;

        return;
    }

    public net.oauth.http.HttpClient getHttpClient()
    {
        net.oauth.client.OAuthClient r0;
        net.oauth.http.HttpClient $r1;

        r0 := @this: net.oauth.client.OAuthClient;

        $r1 = r0.<net.oauth.client.OAuthClient: net.oauth.http.HttpClient http>;

        return $r1;
    }

    public java.util.Map getHttpParameters()
    {
        net.oauth.client.OAuthClient r0;
        java.util.Map $r1;

        r0 := @this: net.oauth.client.OAuthClient;

        $r1 = r0.<net.oauth.client.OAuthClient: java.util.Map httpParameters>;

        return $r1;
    }

    public void getRequestToken(net.oauth.OAuthAccessor) throws java.io.IOException, net.oauth.OAuthException, java.net.URISyntaxException
    {
        net.oauth.client.OAuthClient r0;
        net.oauth.OAuthAccessor r1;

        r0 := @this: net.oauth.client.OAuthClient;

        r1 := @parameter0: net.oauth.OAuthAccessor;

        virtualinvoke r0.<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor,java.lang.String)>(r1, null);

        return;
    }

    public void getRequestToken(net.oauth.OAuthAccessor, java.lang.String) throws java.io.IOException, net.oauth.OAuthException, java.net.URISyntaxException
    {
        net.oauth.client.OAuthClient r0;
        net.oauth.OAuthAccessor r1;
        java.lang.String r2;

        r0 := @this: net.oauth.client.OAuthClient;

        r1 := @parameter0: net.oauth.OAuthAccessor;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor,java.lang.String,java.util.Collection)>(r1, r2, null);

        return;
    }

    public void getRequestToken(net.oauth.OAuthAccessor, java.lang.String, java.util.Collection) throws java.io.IOException, net.oauth.OAuthException, java.net.URISyntaxException
    {
        net.oauth.OAuthAccessor r1;
        java.util.Collection r3;
        net.oauth.client.OAuthClient r0;
        java.lang.String r2;

        r0 := @this: net.oauth.client.OAuthClient;

        r1 := @parameter0: net.oauth.OAuthAccessor;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Collection;

        virtualinvoke r0.<net.oauth.client.OAuthClient: net.oauth.OAuthMessage getRequestTokenResponse(net.oauth.OAuthAccessor,java.lang.String,java.util.Collection)>(r1, r2, r3);

        return;
    }

    public net.oauth.OAuthMessage getRequestTokenResponse(net.oauth.OAuthAccessor, java.lang.String, java.util.Collection) throws java.io.IOException, net.oauth.OAuthException, java.net.URISyntaxException
    {
        net.oauth.OAuthServiceProvider $r9;
        java.util.Collection r6;
        net.oauth.client.OAuthClient r2;
        java.lang.String[] $r14;
        java.util.ArrayList $r7;
        net.oauth.OAuthAccessor r0;
        net.oauth.OAuthMessage $r11;
        net.oauth.OAuthConsumer $r8;
        java.lang.Object $r1;
        java.lang.String r3, $r5, $r10, $r12, $r13;
        net.oauth.OAuth$Parameter $r4;

        r2 := @this: net.oauth.client.OAuthClient;

        r0 := @parameter0: net.oauth.OAuthAccessor;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: java.util.Collection;

        r0.<net.oauth.OAuthAccessor: java.lang.String accessToken> = null;

        r0.<net.oauth.OAuthAccessor: java.lang.String tokenSecret> = null;

        $r1 = virtualinvoke r0.<net.oauth.OAuthAccessor: java.lang.Object getProperty(java.lang.String)>("oauth_accessor_secret");

        if $r1 == null goto label3;

        if r6 != null goto label1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(1);

        goto label2;

     label1:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>(r6);

     label2:
        $r4 = new net.oauth.OAuth$Parameter;

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>("oauth_accessor_secret", $r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

        r6 = $r7;

     label3:
        $r8 = r0.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r9 = $r8.<net.oauth.OAuthConsumer: net.oauth.OAuthServiceProvider serviceProvider>;

        $r10 = $r9.<net.oauth.OAuthServiceProvider: java.lang.String requestTokenURL>;

        $r11 = virtualinvoke r2.<net.oauth.client.OAuthClient: net.oauth.OAuthMessage invoke(net.oauth.OAuthAccessor,java.lang.String,java.lang.String,java.util.Collection)>(r0, r3, $r10, r6);

        $r12 = virtualinvoke $r11.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_token");

        r0.<net.oauth.OAuthAccessor: java.lang.String requestToken> = $r12;

        $r13 = virtualinvoke $r11.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_token_secret");

        r0.<net.oauth.OAuthAccessor: java.lang.String tokenSecret> = $r13;

        $r14 = newarray (java.lang.String)[2];

        $r14[0] = "oauth_token";

        $r14[1] = "oauth_token_secret";

        virtualinvoke $r11.<net.oauth.OAuthMessage: void requireParameters(java.lang.String[])>($r14);

        return $r11;
    }

    public net.oauth.OAuthMessage getAccessToken(net.oauth.OAuthAccessor, java.lang.String, java.util.Collection) throws java.io.IOException, net.oauth.OAuthException, java.net.URISyntaxException
    {
        net.oauth.client.OAuthClient r2;
        java.lang.String[] $r8, $r15;
        java.util.ArrayList $r5;
        java.util.Map $r4;
        java.lang.String $r1, r3, $r7, $r9, $r13, $r16, $r17;
        net.oauth.OAuth$Parameter $r6;
        boolean $z0;
        net.oauth.OAuthServiceProvider $r12;
        java.util.Collection r10;
        net.oauth.OAuthAccessor r0;
        net.oauth.OAuthMessage $r14;
        net.oauth.OAuthConsumer $r11;

        r2 := @this: net.oauth.client.OAuthClient;

        r0 := @parameter0: net.oauth.OAuthAccessor;

        r3 := @parameter1: java.lang.String;

        r10 := @parameter2: java.util.Collection;

        $r1 = r0.<net.oauth.OAuthAccessor: java.lang.String requestToken>;

        if $r1 == null goto label2;

        if r10 != null goto label1;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "oauth_token";

        $r9 = r0.<net.oauth.OAuthAccessor: java.lang.String requestToken>;

        $r8[1] = $r9;

        r10 = staticinvoke <net.oauth.OAuth: java.util.List newList(java.lang.String[])>($r8);

        goto label2;

     label1:
        $r4 = staticinvoke <net.oauth.OAuth: java.util.Map newMap(java.lang.Iterable)>(r10);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>("oauth_token");

        if $z0 != 0 goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r10);

        $r6 = new net.oauth.OAuth$Parameter;

        $r7 = r0.<net.oauth.OAuthAccessor: java.lang.String requestToken>;

        specialinvoke $r6.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>("oauth_token", $r7);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        r10 = $r5;

     label2:
        $r11 = r0.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r12 = $r11.<net.oauth.OAuthConsumer: net.oauth.OAuthServiceProvider serviceProvider>;

        $r13 = $r12.<net.oauth.OAuthServiceProvider: java.lang.String accessTokenURL>;

        $r14 = virtualinvoke r2.<net.oauth.client.OAuthClient: net.oauth.OAuthMessage invoke(net.oauth.OAuthAccessor,java.lang.String,java.lang.String,java.util.Collection)>(r0, r3, $r13, r10);

        $r15 = newarray (java.lang.String)[2];

        $r15[0] = "oauth_token";

        $r15[1] = "oauth_token_secret";

        virtualinvoke $r14.<net.oauth.OAuthMessage: void requireParameters(java.lang.String[])>($r15);

        $r16 = virtualinvoke $r14.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_token");

        r0.<net.oauth.OAuthAccessor: java.lang.String accessToken> = $r16;

        $r17 = virtualinvoke $r14.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_token_secret");

        r0.<net.oauth.OAuthAccessor: java.lang.String tokenSecret> = $r17;

        return $r14;
    }

    public net.oauth.OAuthMessage invoke(net.oauth.OAuthAccessor, java.lang.String, java.lang.String, java.util.Collection) throws java.io.IOException, net.oauth.OAuthException, java.net.URISyntaxException
    {
        net.oauth.client.OAuthClient r11;
        java.lang.Enum $r10;
        java.lang.String r1, r2, $r9, $r15;
        net.oauth.ParameterStyle $r16;
        net.oauth.OAuth$Parameter $r14;
        java.util.Collection r3;
        net.oauth.OAuthAccessor r0;
        java.util.List $r13;
        net.oauth.OAuthMessage $r4, $r12;
        net.oauth.OAuthConsumer $r5, $r7;
        java.lang.Object $r6, $r8;

        r11 := @this: net.oauth.client.OAuthClient;

        r0 := @parameter0: net.oauth.OAuthAccessor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.Collection;

        $r4 = virtualinvoke r0.<net.oauth.OAuthAccessor: net.oauth.OAuthMessage newRequestMessage(java.lang.String,java.lang.String,java.util.Collection)>(r1, r2, r3);

        $r5 = r0.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r6 = virtualinvoke $r5.<net.oauth.OAuthConsumer: java.lang.Object getProperty(java.lang.String)>("HTTP.header.Accept-Encoding");

        if $r6 == null goto label1;

        $r13 = virtualinvoke $r4.<net.oauth.OAuthMessage: java.util.List getHeaders()>();

        $r14 = new net.oauth.OAuth$Parameter;

        $r15 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>("Accept-Encoding", $r15);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);

     label1:
        $r7 = r0.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r8 = virtualinvoke $r7.<net.oauth.OAuthConsumer: java.lang.Object getProperty(java.lang.String)>("parameterStyle");

        if $r8 != null goto label2;

        $r16 = <net.oauth.ParameterStyle: net.oauth.ParameterStyle BODY>;

        goto label3;

     label2:
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/oauth/ParameterStyle;", $r9);

        $r16 = (net.oauth.ParameterStyle) $r10;

     label3:
        $r12 = virtualinvoke r11.<net.oauth.client.OAuthClient: net.oauth.OAuthMessage invoke(net.oauth.OAuthMessage,net.oauth.ParameterStyle)>($r4, $r16);

        return $r12;
    }

    public net.oauth.OAuthMessage invoke(net.oauth.OAuthAccessor, java.lang.String, java.util.Collection) throws java.io.IOException, net.oauth.OAuthException, java.net.URISyntaxException
    {
        net.oauth.OAuthAccessor r1;
        java.util.Collection r3;
        net.oauth.OAuthMessage $r4;
        net.oauth.client.OAuthClient r0;
        java.lang.String r2;

        r0 := @this: net.oauth.client.OAuthClient;

        r1 := @parameter0: net.oauth.OAuthAccessor;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Collection;

        $r4 = virtualinvoke r0.<net.oauth.client.OAuthClient: net.oauth.OAuthMessage invoke(net.oauth.OAuthAccessor,java.lang.String,java.lang.String,java.util.Collection)>(r1, null, r2, r3);

        return $r4;
    }

    public net.oauth.OAuthMessage invoke(net.oauth.OAuthMessage, net.oauth.ParameterStyle) throws java.io.IOException, net.oauth.OAuthException
    {
        net.oauth.http.HttpResponseMessage $r4;
        net.oauth.client.OAuthClient r0;
        net.oauth.OAuthProblemException $r5;
        net.oauth.OAuthMessage r1;
        int $i0, $i1;
        net.oauth.ParameterStyle r2;
        net.oauth.client.OAuthResponseMessage $r3;

        r0 := @this: net.oauth.client.OAuthClient;

        r1 := @parameter0: net.oauth.OAuthMessage;

        r2 := @parameter1: net.oauth.ParameterStyle;

        $r3 = virtualinvoke r0.<net.oauth.client.OAuthClient: net.oauth.client.OAuthResponseMessage access(net.oauth.OAuthMessage,net.oauth.ParameterStyle)>(r1, r2);

        $r4 = virtualinvoke $r3.<net.oauth.client.OAuthResponseMessage: net.oauth.http.HttpResponseMessage getHttpResponse()>();

        $i0 = virtualinvoke $r4.<net.oauth.http.HttpResponseMessage: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 == 2 goto label1;

        $r5 = virtualinvoke $r3.<net.oauth.client.OAuthResponseMessage: net.oauth.OAuthProblemException toOAuthProblemException()>();

        throw $r5;

     label1:
        return $r3;
    }

    public net.oauth.client.OAuthResponseMessage access(net.oauth.OAuthMessage, net.oauth.ParameterStyle) throws java.io.IOException
    {
        net.oauth.http.HttpMessage $r2;
        net.oauth.http.HttpResponseMessage $r6, $r7;
        net.oauth.client.OAuthClient r3;
        net.oauth.OAuthMessage r0;
        java.util.Map $r4;
        net.oauth.http.HttpClient $r5;
        net.oauth.ParameterStyle r1;
        net.oauth.client.OAuthResponseMessage $r8;

        r3 := @this: net.oauth.client.OAuthClient;

        r0 := @parameter0: net.oauth.OAuthMessage;

        r1 := @parameter1: net.oauth.ParameterStyle;

        $r2 = staticinvoke <net.oauth.http.HttpMessage: net.oauth.http.HttpMessage newRequest(net.oauth.OAuthMessage,net.oauth.ParameterStyle)>(r0, r1);

        $r5 = r3.<net.oauth.client.OAuthClient: net.oauth.http.HttpClient http>;

        $r4 = r3.<net.oauth.client.OAuthClient: java.util.Map httpParameters>;

        $r6 = interfaceinvoke $r5.<net.oauth.http.HttpClient: net.oauth.http.HttpResponseMessage execute(net.oauth.http.HttpMessage,java.util.Map)>($r2, $r4);

        $r7 = staticinvoke <net.oauth.http.HttpMessageDecoder: net.oauth.http.HttpResponseMessage decode(net.oauth.http.HttpResponseMessage)>($r6);

        $r8 = new net.oauth.client.OAuthResponseMessage;

        specialinvoke $r8.<net.oauth.client.OAuthResponseMessage: void <init>(net.oauth.http.HttpResponseMessage)>($r7);

        return $r8;
    }

    public net.oauth.OAuthMessage invoke(net.oauth.OAuthMessage, net.oauth.client.OAuthClient$ParameterStyle) throws java.io.IOException, net.oauth.OAuthException
    {
        net.oauth.client.OAuthClient$ParameterStyle r2;
        net.oauth.OAuthMessage r1, $r4;
        net.oauth.client.OAuthClient r0;
        net.oauth.ParameterStyle $r3;

        r0 := @this: net.oauth.client.OAuthClient;

        r1 := @parameter0: net.oauth.OAuthMessage;

        r2 := @parameter1: net.oauth.client.OAuthClient$ParameterStyle;

        $r3 = virtualinvoke r2.<net.oauth.client.OAuthClient$ParameterStyle: net.oauth.ParameterStyle getReplacement()>();

        $r4 = virtualinvoke r0.<net.oauth.client.OAuthClient: net.oauth.OAuthMessage invoke(net.oauth.OAuthMessage,net.oauth.ParameterStyle)>(r1, $r3);

        return $r4;
    }

    public net.oauth.client.OAuthResponseMessage access(net.oauth.OAuthMessage, net.oauth.client.OAuthClient$ParameterStyle) throws java.io.IOException
    {
        net.oauth.client.OAuthClient$ParameterStyle r2;
        net.oauth.OAuthMessage r1;
        net.oauth.client.OAuthClient r0;
        net.oauth.ParameterStyle $r3;
        net.oauth.client.OAuthResponseMessage $r4;

        r0 := @this: net.oauth.client.OAuthClient;

        r1 := @parameter0: net.oauth.OAuthMessage;

        r2 := @parameter1: net.oauth.client.OAuthClient$ParameterStyle;

        $r3 = virtualinvoke r2.<net.oauth.client.OAuthClient$ParameterStyle: net.oauth.ParameterStyle getReplacement()>();

        $r4 = virtualinvoke r0.<net.oauth.client.OAuthClient: net.oauth.client.OAuthResponseMessage access(net.oauth.OAuthMessage,net.oauth.ParameterStyle)>(r1, $r3);

        return $r4;
    }

    public static void <clinit>()
    {
        <net.oauth.client.OAuthClient: java.lang.String CONTENT_LENGTH> = "Content-Length";

        <net.oauth.client.OAuthClient: java.lang.String DELETE> = "DELETE";

        <net.oauth.client.OAuthClient: java.lang.String POST> = "POST";

        <net.oauth.client.OAuthClient: java.lang.String PUT> = "PUT";

        <net.oauth.client.OAuthClient: java.lang.String ACCEPT_ENCODING> = "HTTP.header.Accept-Encoding";

        <net.oauth.client.OAuthClient: java.lang.String PARAMETER_STYLE> = "parameterStyle";

        return;
    }
}
