class org.apache.zookeeper.server.auth.KerberosName$Rule extends java.lang.Object
{
    private final boolean isDefault;
    private final int numOfComponents;
    private final java.lang.String format;
    private final java.util.regex.Pattern match;
    private final java.util.regex.Pattern fromPattern;
    private final java.lang.String toPattern;
    private final boolean repeat;

    void <init>()
    {
        org.apache.zookeeper.server.auth.KerberosName$Rule r0;

        r0 := @this: org.apache.zookeeper.server.auth.KerberosName$Rule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: boolean isDefault> = 1;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: int numOfComponents> = 0;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String format> = null;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern match> = null;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern fromPattern> = null;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String toPattern> = null;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: boolean repeat> = 0;

        return;
    }

    void <init>(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.zookeeper.server.auth.KerberosName$Rule r0;
        int i0;
        java.lang.String r1, r2, r3, r4;
        java.util.regex.Pattern $r5, $r6;
        boolean z0;

        r0 := @this: org.apache.zookeeper.server.auth.KerberosName$Rule;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: boolean isDefault> = 0;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: int numOfComponents> = i0;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String format> = r1;

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r2);

     label2:
        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern match> = $r5;

        if r3 != null goto label3;

        $r6 = null;

        goto label4;

     label3:
        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r3);

     label4:
        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern fromPattern> = $r6;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String toPattern> = r4;

        r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: boolean repeat> = z0;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.zookeeper.server.auth.KerberosName$Rule r1;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r6, $r8;
        java.util.regex.Pattern $r3, $r4, $r5, $r7;
        boolean $z0, $z1;

        r1 := @this: org.apache.zookeeper.server.auth.KerberosName$Rule;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $z0 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: boolean isDefault>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DEFAULT");

        goto label3;

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RULE:[");

        $i0 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: int numOfComponents>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r2 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String format>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r3 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern match>;

        if $r3 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r7 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern match>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label2:
        $r4 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern fromPattern>;

        if $r4 == null goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s/");

        $r5 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern fromPattern>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r6 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String toPattern>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $z1 = r1.<org.apache.zookeeper.server.auth.KerberosName$Rule: boolean repeat>;

        if $z1 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(103);

     label3:
        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static java.lang.String replaceParameters(java.lang.String, java.lang.String[]) throws org.apache.zookeeper.server.auth.KerberosName$BadFormatString
    {
        java.lang.String[] r14;
        java.util.regex.Matcher $r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r1, $r4, $r5, $r6, $r16, $r17, $r23;
        org.apache.zookeeper.server.auth.KerberosName$BadFormatString $r7, $r19;
        boolean $z0;
        java.lang.NumberFormatException $r18;
        java.lang.StringBuilder $r3, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r20, $r21, $r22;
        java.util.regex.Pattern $r0;

        r1 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String[];

        $r0 = staticinvoke <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern access$000()>();

        $r2 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        i5 = 0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 >= $i0 goto label8;

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find(int)>(i5);

        if $z0 == 0 goto label8;

        $r5 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        if $r6 == null goto label7;

     label2:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        if $i1 < 0 goto label3;

        $i4 = lengthof r14;

        if $i1 <= $i4 goto label4;

     label3:
        $r7 = new org.apache.zookeeper.server.auth.KerberosName$BadFormatString;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is outside of the valid range 0 to ");

        $i2 = lengthof r14;

        $i3 = $i2 - 1;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.zookeeper.server.auth.KerberosName$BadFormatString: void <init>(java.lang.String)>($r16);

        throw $r7;

     label4:
        $r17 = r14[$i1];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        $r19 = new org.apache.zookeeper.server.auth.KerberosName$BadFormatString;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad format in username mapping in ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.zookeeper.server.auth.KerberosName$BadFormatString: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r18);

        throw $r19;

     label7:
        i5 = virtualinvoke $r2.<java.util.regex.Matcher: int end()>();

        goto label1;

     label8:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

        catch java.lang.NumberFormatException from label2 to label5 with label6;
    }

    static java.lang.String replaceSubstitution(java.lang.String, java.util.regex.Pattern, java.lang.String, boolean)
    {
        java.util.regex.Matcher $r2;
        java.util.regex.Pattern r0;
        java.lang.String r1, r3, $r4, $r5;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.regex.Pattern;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        if z0 == 0 goto label1;

        $r5 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(r3);

        return $r5;

     label1:
        $r4 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(r3);

        return $r4;
    }

    java.lang.String apply(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r1;
        java.util.regex.Matcher $r3, $r18;
        org.apache.zookeeper.server.auth.KerberosName$NoMatchingRule $r4;
        int $i0, $i1, $i2;
        java.lang.String $r10, $r11, $r12, $r15, $r19, $r20, r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.zookeeper.server.auth.KerberosName$Rule r0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.util.regex.Pattern $r2, $r13, $r14, $r16, $r17;

        r0 := @this: org.apache.zookeeper.server.auth.KerberosName$Rule;

        r1 := @parameter0: java.lang.String[];

        r21 = null;

        $z0 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: boolean isDefault>;

        if $z0 == 0 goto label1;

        $r19 = staticinvoke <org.apache.zookeeper.server.auth.KerberosName: java.lang.String access$100()>();

        $r20 = r1[0];

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z4 == 0 goto label4;

        r21 = r1[1];

        goto label4;

     label1:
        $i0 = lengthof r1;

        $i2 = $i0 - 1;

        $i1 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: int numOfComponents>;

        if $i2 != $i1 goto label4;

        $r11 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String format>;

        $r12 = staticinvoke <org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String replaceParameters(java.lang.String,java.lang.String[])>($r11, r1);

        $r13 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern match>;

        if $r13 == null goto label2;

        $r17 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern match>;

        $r18 = virtualinvoke $r17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r12);

        $z3 = virtualinvoke $r18.<java.util.regex.Matcher: boolean matches()>();

        if $z3 == 0 goto label4;

     label2:
        $r14 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern fromPattern>;

        if $r14 != null goto label3;

        r21 = $r12;

        goto label4;

     label3:
        $r16 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.util.regex.Pattern fromPattern>;

        $r15 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String toPattern>;

        $z2 = r0.<org.apache.zookeeper.server.auth.KerberosName$Rule: boolean repeat>;

        r21 = staticinvoke <org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String replaceSubstitution(java.lang.String,java.util.regex.Pattern,java.lang.String,boolean)>($r12, $r16, $r15, $z2);

     label4:
        if r21 == null goto label5;

        $r2 = staticinvoke <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern access$200()>();

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r21);

        $z1 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label5;

        $r4 = new org.apache.zookeeper.server.auth.KerberosName$NoMatchingRule;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-simple name ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after auth_to_local rule ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.zookeeper.server.auth.KerberosName$NoMatchingRule: void <init>(java.lang.String)>($r10);

        throw $r4;

     label5:
        return r21;
    }
}
