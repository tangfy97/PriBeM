public class org.fife.ui.rsyntaxtextarea.SyntaxScheme extends java.lang.Object implements java.lang.Cloneable, org.fife.ui.rsyntaxtextarea.TokenTypes
{
    private org.fife.ui.rsyntaxtextarea.Style[] styles;
    private static final java.lang.String VERSION;
    static java.lang.Class class$org$fife$ui$rsyntaxtextarea$Token;

    public void <init>(boolean)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        org.fife.ui.rsyntaxtextarea.Style[] $r1;
        boolean z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.fife.ui.rsyntaxtextarea.Style)[35];

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles> = $r1;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: void restoreDefaults(java.awt.Font)>(null);

     label1:
        return;
    }

    public void <init>(java.awt.Font)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        java.awt.Font r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        r1 := @parameter0: java.awt.Font;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: void <init>(java.awt.Font,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.awt.Font, boolean)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        java.awt.Font r2;
        org.fife.ui.rsyntaxtextarea.Style[] $r1;
        boolean z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        r2 := @parameter0: java.awt.Font;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.fife.ui.rsyntaxtextarea.Style)[35];

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles> = $r1;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: void restoreDefaults(java.awt.Font,boolean)>(r2, z0);

        return;
    }

    void changeBaseFont(java.awt.Font, java.awt.Font)
    {
        org.fife.ui.rsyntaxtextarea.Style r3;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        javax.swing.text.StyleContext $r11;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.fife.ui.rsyntaxtextarea.Style[] $r1, $r2;
        java.lang.String $r6, $r8, $r13;
        boolean $z0;
        java.awt.Font $r4, $r5, r7, $r9, $r10, r12, $r14;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        r7 := @parameter0: java.awt.Font;

        r12 := @parameter1: java.awt.Font;

        i5 = 0;

     label1:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $i0 = lengthof $r1;

        if i5 >= $i0 goto label3;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        r3 = $r2[i5];

        if r3 == null goto label2;

        $r4 = r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font>;

        if $r4 == null goto label2;

        $r5 = r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font>;

        $r6 = virtualinvoke $r5.<java.awt.Font: java.lang.String getFamily()>();

        $r8 = virtualinvoke r7.<java.awt.Font: java.lang.String getFamily()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r9 = r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font>;

        $i1 = virtualinvoke $r9.<java.awt.Font: int getSize()>();

        $i2 = virtualinvoke r7.<java.awt.Font: int getSize()>();

        if $i1 != $i2 goto label2;

        $r10 = r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font>;

        $i3 = virtualinvoke $r10.<java.awt.Font: int getStyle()>();

        $r11 = staticinvoke <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>();

        $r13 = virtualinvoke r12.<java.awt.Font: java.lang.String getFamily()>();

        $i4 = virtualinvoke r12.<java.awt.Font: int getSize()>();

        $r14 = virtualinvoke $r11.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>($r13, $i3, $i4);

        r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font> = $r14;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    public java.lang.Object clone()
    {
        org.fife.ui.rsyntaxtextarea.Style r4, $r7;
        java.lang.CloneNotSupportedException $r8;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0, r9;
        int i0;
        java.lang.Object $r1, $r6;
        org.fife.ui.rsyntaxtextarea.Style[] $r2, $r3, $r5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r9 = (org.fife.ui.rsyntaxtextarea.SyntaxScheme) $r1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.CloneNotSupportedException: void printStackTrace()>();

        return null;

     label4:
        $r2 = newarray (org.fife.ui.rsyntaxtextarea.Style)[35];

        r9.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles> = $r2;

        i0 = 0;

     label5:
        if i0 >= 35 goto label7;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        r4 = $r3[i0];

        if r4 == null goto label6;

        $r5 = r9.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r6 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.Style: java.lang.Object clone()>();

        $r7 = (org.fife.ui.rsyntaxtextarea.Style) $r6;

        $r5[i0] = $r7;

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        return r9;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        org.fife.ui.rsyntaxtextarea.Style $r6, $r8, $r9, $r10;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r1, r3;
        int i0, i1;
        java.lang.Object r0;
        org.fife.ui.rsyntaxtextarea.Style[] r2, $r4, $r5, $r7;
        boolean $z0, $z1;

        r3 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (org.fife.ui.rsyntaxtextarea.SyntaxScheme) r0;

        r2 = $r1.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r4 = r3.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        i0 = lengthof $r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r5 = r3.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r6 = $r5[i1];

        if $r6 != null goto label3;

        $r10 = r2[i1];

        if $r10 == null goto label4;

        return 0;

     label3:
        $r7 = r3.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r9 = $r7[i1];

        $r8 = r2[i1];

        $z1 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.Style: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return 1;
    }

    private static final java.lang.String getHexString(java.awt.Color)
    {
        java.awt.Color r2;
        java.lang.StringBuffer $r0, $r1, $r5;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4, $r6;

        r2 := @parameter0: java.awt.Color;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$");

        $i0 = virtualinvoke r2.<java.awt.Color: int getRGB()>();

        $i1 = $i0 & 16777215;

        $i2 = $i1 + 16777216;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1);

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public org.fife.ui.rsyntaxtextarea.Style getStyle(int)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        int i0;
        org.fife.ui.rsyntaxtextarea.Style $r2;
        org.fife.ui.rsyntaxtextarea.Style[] $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getStyleCount()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        org.fife.ui.rsyntaxtextarea.Style[] $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int hashCode()
    {
        org.fife.ui.rsyntaxtextarea.Style $r3, $r5;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        int i0, $i1, i2, i3;
        org.fife.ui.rsyntaxtextarea.Style[] $r1, $r2, $r4;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        i2 = 0;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        i0 = lengthof $r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r3 = $r2[i3];

        if $r3 == null goto label2;

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r5 = $r4[i3];

        $i1 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.Style: int hashCode()>();

        i2 = 0 ^ $i1;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public static org.fife.ui.rsyntaxtextarea.SyntaxScheme load(java.awt.Font, java.io.InputStream) throws java.io.IOException
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r1;
        java.awt.Font r2;
        java.io.InputStream r0;

        r2 := @parameter0: java.awt.Font;

        r0 := @parameter1: java.io.InputStream;

        if r2 != null goto label1;

        r2 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Font getDefaultFont()>();

     label1:
        $r1 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.fife.ui.rsyntaxtextarea.SyntaxScheme load(java.awt.Font,java.io.InputStream)>(r2, r0);

        return $r1;
    }

    public static org.fife.ui.rsyntaxtextarea.SyntaxScheme loadFromString(java.lang.String)
    {
        java.awt.Color r40, r42;
        java.lang.Exception $r39, $r46, $r48, $r50;
        java.lang.StringBuffer $r20, $r21, $r27, $r28, $r29, $r30, $r34, $r35, $r36, $r37, $r45, $r47, $r49;
        org.fife.ui.rsyntaxtextarea.Style[] $r13;
        java.lang.String r1, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r22, $r23, $r24, $r31, $r38, r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.awt.Font r43;
        org.fife.ui.rsyntaxtextarea.Style $r51;
        java.lang.String[] $r2;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r44;
        javax.swing.text.StyleContext $r5;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i16;

        r1 := @parameter0: java.lang.String;

        $r44 = new org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        specialinvoke $r44.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: void <init>(boolean)>(1);

     label01:
        if r1 == null goto label11;

        $i16 = (int) -1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", $i16);

        $i0 = lengthof $r2;

        if $i0 == 0 goto label02;

        $r4 = "*ver1";

        $r3 = $r2[0];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label03;

     label02:
        return $r44;

     label03:
        $i1 = lengthof $r2;

        if $i1 == 246 goto label04;

        $r46 = new java.lang.Exception;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Not enough tokens in packed color scheme: expected ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(246);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", found ");

        $i13 = lengthof $r2;

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.Exception: void <init>(java.lang.String)>($r38);

        throw $r46;

     label04:
        $r5 = staticinvoke <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>();

        i14 = 0;

     label05:
        if i14 >= 35 goto label11;

        $i2 = i14 * 7;

        i3 = $i2 + 1;

        $r6 = $r2[i3];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        if $i4 == i14 goto label06;

        $r48 = new java.lang.Exception;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expected ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i14);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", found ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r48.<java.lang.Exception: void <init>(java.lang.String)>($r31);

        throw $r48;

     label06:
        r40 = null;

        $i5 = i3 + 1;

        r41 = $r2[$i5];

        $r7 = "-";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r41);

        if $z1 != 0 goto label07;

        r40 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.awt.Color stringToColor(java.lang.String)>(r41);

     label07:
        r42 = null;

        $i6 = i3 + 2;

        $r24 = $r2[$i6];

        $r8 = "-";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z2 != 0 goto label08;

        r42 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.awt.Color stringToColor(java.lang.String)>($r24);

     label08:
        $i7 = i3 + 3;

        $r23 = $r2[$i7];

        $r9 = "t";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z3 != 0 goto label09;

        $r16 = "f";

        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z6 != 0 goto label09;

        $r50 = new java.lang.Exception;

        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expected \'t\' or \'f\', found ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r50.<java.lang.Exception: void <init>(java.lang.String)>($r22);

        throw $r50;

     label09:
        $r10 = "t";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        r43 = null;

        $i8 = i3 + 4;

        $r17 = $r2[$i8];

        $r11 = "-";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z5 != 0 goto label10;

        $i9 = i3 + 5;

        $r14 = $r2[$i9];

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        $i11 = i3 + 6;

        $r15 = $r2[$i11];

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        r43 = virtualinvoke $r5.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>($r17, $i10, $i12);

     label10:
        $r13 = $r44.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r51 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r51.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color,java.awt.Color,java.awt.Font,boolean)>(r40, r42, r43, $z4);

        $r13[i14] = $r51;

        i14 = i14 + 1;

        goto label05;

     label11:
        goto label13;

     label12:
        $r39 := @caughtexception;

        virtualinvoke $r39.<java.lang.Exception: void printStackTrace()>();

     label13:
        return $r44;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label11 with label12;
    }

    void refreshFontMetrics(java.awt.Graphics2D)
    {
        java.awt.Font $r4, $r6;
        org.fife.ui.rsyntaxtextarea.Style r3;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        java.awt.FontMetrics $r7;
        java.awt.Graphics2D r5;
        int $i0, i1;
        org.fife.ui.rsyntaxtextarea.Style[] $r1, $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        r5 := @parameter0: java.awt.Graphics2D;

        i1 = 0;

     label1:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label5;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        r3 = $r2[i1];

        if r3 == null goto label4;

        $r4 = r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font>;

        if $r4 != null goto label2;

        $r7 = null;

        goto label3;

     label2:
        $r6 = r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font>;

        $r7 = virtualinvoke r5.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r6);

     label3:
        r3.<org.fife.ui.rsyntaxtextarea.Style: java.awt.FontMetrics fontMetrics> = $r7;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    public void restoreDefaults(java.awt.Font)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        java.awt.Font r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        r1 := @parameter0: java.awt.Font;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: void restoreDefaults(java.awt.Font,boolean)>(r1, 1);

        return;
    }

    public void restoreDefaults(java.awt.Font, boolean)
    {
        java.awt.Color $r0, $r1, r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r18, $r21, $r44, $r51, $r56, $r59, $r64, $r67, $r70, $r73;
        org.fife.ui.rsyntaxtextarea.Style[] $r12, $r14, $r16, $r19, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r45, $r47, $r49, $r52, $r54, $r57, $r60, $r62, $r65, $r68, $r71, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88;
        java.lang.String $r90, $r92;
        boolean z0;
        java.awt.Font $r91, r93, r94, r95;
        org.fife.ui.rsyntaxtextarea.Style $r11, $r13, $r15, $r17, $r20, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r46, $r48, $r50, $r53, $r55, $r58, $r61, $r63, $r66, $r69, $r72, $r75, $r77, $r79, $r81, $r83, $r85, $r87;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r10;
        javax.swing.text.StyleContext $r89;
        int $i0, $i1;

        r10 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        r93 := @parameter0: java.awt.Font;

        z0 := @parameter1: boolean;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int)>(0, 128, 0);

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(164, 0, 0);

        r2 = <java.awt.Color: java.awt.Color BLUE>;

        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(173, 128, 0);

        $r4 = new java.awt.Color;

        specialinvoke $r4.<java.awt.Color: void <init>(int,int,int)>(128, 64, 64);

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(0, 128, 164);

        $r6 = new java.awt.Color;

        specialinvoke $r6.<java.awt.Color: void <init>(int,int,int)>(255, 153, 0);

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(100, 0, 200);

        $r8 = new java.awt.Color;

        specialinvoke $r8.<java.awt.Color: void <init>(int,int,int)>(220, 0, 156);

        $r9 = new java.awt.Color;

        specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(148, 148, 0);

        if r93 != null goto label1;

        r93 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Font getDefaultFont()>();

     label1:
        r94 = r93;

        r95 = r93;

        if z0 == 0 goto label2;

        $r89 = staticinvoke <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>();

        $r90 = virtualinvoke r93.<java.awt.Font: java.lang.String getFamily()>();

        $i0 = virtualinvoke r93.<java.awt.Font: int getSize()>();

        $r91 = virtualinvoke $r89.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>($r90, 1, $i0);

        $r92 = virtualinvoke r93.<java.awt.Font: java.lang.String getFamily()>();

        $i1 = virtualinvoke r93.<java.awt.Font: int getSize()>();

        r94 = virtualinvoke $r89.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>($r92, 2, $i1);

        r95 = $r91;

     label2:
        $r12 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r11 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r11.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color,java.awt.Color,java.awt.Font)>($r0, null, r94);

        $r12[1] = $r11;

        $r14 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r13 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r13.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color,java.awt.Color,java.awt.Font)>($r0, null, r94);

        $r14[2] = $r13;

        $r16 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r15 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r15.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color,java.awt.Color,java.awt.Font)>($r1, null, r94);

        $r16[3] = $r15;

        $r19 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r17 = new org.fife.ui.rsyntaxtextarea.Style;

        $r18 = new java.awt.Color;

        specialinvoke $r18.<java.awt.Color: void <init>(int,int,int)>(255, 152, 0);

        specialinvoke $r17.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color,java.awt.Color,java.awt.Font)>($r18, null, r94);

        $r19[4] = $r17;

        $r22 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r20 = new org.fife.ui.rsyntaxtextarea.Style;

        $r21 = <java.awt.Color: java.awt.Color gray>;

        specialinvoke $r20.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color,java.awt.Color,java.awt.Font)>($r21, null, r94);

        $r22[5] = $r20;

        $r24 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r23 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r23.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color,java.awt.Color,java.awt.Font)>(r2, null, r95);

        $r24[6] = $r23;

        $r26 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r25 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r25.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color,java.awt.Color,java.awt.Font)>(r2, null, r95);

        $r26[7] = $r25;

        $r28 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r27 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r27.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r3);

        $r28[8] = $r27;

        $r30 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r29 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r29.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r7);

        $r30[9] = $r29;

        $r32 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r31 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r31.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r7);

        $r32[10] = $r31;

        $r34 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r33 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r33.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r7);

        $r34[11] = $r33;

        $r36 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r35 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r35.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r7);

        $r36[12] = $r35;

        $r38 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r37 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r37.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r8);

        $r38[13] = $r37;

        $r40 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r39 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r39.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r8);

        $r40[14] = $r39;

        $r42 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r41 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r41.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r8);

        $r42[15] = $r41;

        $r45 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r43 = new org.fife.ui.rsyntaxtextarea.Style;

        $r44 = new java.awt.Color;

        specialinvoke $r44.<java.awt.Color: void <init>(int,int,int)>(0, 128, 128);

        specialinvoke $r43.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r44);

        $r45[16] = $r43;

        $r47 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r46 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r46.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r6);

        $r47[17] = $r46;

        $r49 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r48 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r48.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r5);

        $r49[18] = $r48;

        $r52 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r50 = new org.fife.ui.rsyntaxtextarea.Style;

        $r51 = <java.awt.Color: java.awt.Color gray>;

        specialinvoke $r50.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r51);

        $r52[19] = $r50;

        $r54 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r53 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r53.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>(null);

        $r54[20] = $r53;

        $r57 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r55 = new org.fife.ui.rsyntaxtextarea.Style;

        $r56 = <java.awt.Color: java.awt.Color gray>;

        specialinvoke $r55.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r56);

        $r57[21] = $r55;

        $r60 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r58 = new org.fife.ui.rsyntaxtextarea.Style;

        $r59 = <java.awt.Color: java.awt.Color RED>;

        specialinvoke $r58.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r59);

        $r60[22] = $r58;

        $r62 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r61 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r61.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r4);

        $r62[23] = $r61;

        $r65 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r63 = new org.fife.ui.rsyntaxtextarea.Style;

        $r64 = <java.awt.Color: java.awt.Color gray>;

        specialinvoke $r63.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r64);

        $r65[24] = $r63;

        $r68 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r66 = new org.fife.ui.rsyntaxtextarea.Style;

        $r67 = <java.awt.Color: java.awt.Color RED>;

        specialinvoke $r66.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r67);

        $r68[25] = $r66;

        $r71 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r69 = new org.fife.ui.rsyntaxtextarea.Style;

        $r70 = <java.awt.Color: java.awt.Color BLUE>;

        specialinvoke $r69.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r70);

        $r71[26] = $r69;

        $r74 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r72 = new org.fife.ui.rsyntaxtextarea.Style;

        $r73 = new java.awt.Color;

        specialinvoke $r73.<java.awt.Color: void <init>(int,int,int)>(63, 127, 127);

        specialinvoke $r72.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r73);

        $r74[27] = $r72;

        $r76 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r75 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r75.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r8);

        $r76[28] = $r75;

        $r78 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r77 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r77.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r4);

        $r78[29] = $r77;

        $r80 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r79 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r79.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r6);

        $r80[30] = $r79;

        $r82 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r81 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r81.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r9);

        $r82[31] = $r81;

        $r84 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r83 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r83.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r9);

        $r84[32] = $r83;

        $r86 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r85 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r85.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r9);

        $r86[33] = $r85;

        $r88 = r10.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r87 = new org.fife.ui.rsyntaxtextarea.Style;

        specialinvoke $r87.<org.fife.ui.rsyntaxtextarea.Style: void <init>(java.awt.Color)>($r9);

        $r88[34] = $r87;

        return;
    }

    public void setStyle(int, org.fife.ui.rsyntaxtextarea.Style)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        int i0;
        org.fife.ui.rsyntaxtextarea.Style r1;
        org.fife.ui.rsyntaxtextarea.Style[] $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        i0 := @parameter0: int;

        r1 := @parameter1: org.fife.ui.rsyntaxtextarea.Style;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        $r2[i0] = r1;

        return;
    }

    private static final java.awt.Color stringToColor(java.lang.String)
    {
        java.awt.Color $r3;
        int $i1, $i2, $i3;
        char $c0;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $r3 = new java.awt.Color;

        $i2 = (int) $c0;

        if $i2 == 36 goto label1;

        $i3 = (int) $c0;

        if $i3 != 35 goto label2;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        goto label3;

     label2:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label3:
        specialinvoke $r3.<java.awt.Color: void <init>(int)>($i1);

        return $r3;
    }

    public java.lang.String toCommaSeparatedString()
    {
        java.awt.Color $r21, r22;
        boolean $z0;
        java.awt.Font $r12;
        org.fife.ui.rsyntaxtextarea.Style r5;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r3;
        java.lang.StringBuffer $r0, $r2, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r19, $r20;
        int $i0, $i1, $i2, $i3, i4;
        org.fife.ui.rsyntaxtextarea.Style[] $r4;
        java.lang.String $r1, $r6, $r14, $r18, $r23, $r24, $r25;

        r3 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("*ver1");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        i4 = 0;

     label01:
        if i4 >= 35 goto label11;

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r4 = r3.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        r5 = $r4[i4];

        if r5 != null goto label02;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-,-,f,-,,,");

        goto label10;

     label02:
        r22 = r5.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Color foreground>;

        if r22 == null goto label03;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.lang.String getHexString(java.awt.Color)>(r22);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label04;

     label03:
        $r23 = "-,";

     label04:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r21 = r5.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Color background>;

        if $r21 == null goto label05;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.lang.String getHexString(java.awt.Color)>($r21);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r24 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label06;

     label05:
        $r24 = "-,";

     label06:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $z0 = r5.<org.fife.ui.rsyntaxtextarea.Style: boolean underline>;

        if $z0 == 0 goto label07;

        $r25 = "t,";

        goto label08;

     label07:
        $r25 = "f,";

     label08:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r12 = r5.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font>;

        if $r12 == null goto label09;

        $r6 = virtualinvoke $r12.<java.awt.Font: java.lang.String getFamily()>();

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $i2 = virtualinvoke $r12.<java.awt.Font: int getStyle()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $i3 = virtualinvoke $r12.<java.awt.Font: int getSize()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        goto label10;

     label09:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-,,,");

     label10:
        i4 = i4 + 1;

        goto label01;

     label11:
        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        $i1 = $i0 - 1;

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String substring(int,int)>(0, $i1);

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.awt.Color access$000(java.lang.String)
    {
        java.awt.Color $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.awt.Color stringToColor(java.lang.String)>(r0);

        return $r1;
    }

    static org.fife.ui.rsyntaxtextarea.Style[] access$100(org.fife.ui.rsyntaxtextarea.SyntaxScheme)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r0;
        org.fife.ui.rsyntaxtextarea.Style[] $r1;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] styles>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.lang.String VERSION> = "*ver1";

        return;
    }
}
