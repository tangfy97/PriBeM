public abstract class org.apache.poi.openxml4j.opc.PackagePart extends java.lang.Object implements org.apache.poi.openxml4j.opc.RelationshipSource
{
    protected org.apache.poi.openxml4j.opc.OPCPackage _container;
    protected org.apache.poi.openxml4j.opc.PackagePartName _partName;
    protected org.apache.poi.openxml4j.opc.internal.ContentType _contentType;
    private boolean _isRelationshipPart;
    private boolean _isDeleted;
    private org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships;

    protected void <init>(org.apache.poi.openxml4j.opc.OPCPackage, org.apache.poi.openxml4j.opc.PackagePartName, org.apache.poi.openxml4j.opc.internal.ContentType) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.OPCPackage r1;
        org.apache.poi.openxml4j.opc.PackagePartName r2;
        org.apache.poi.openxml4j.opc.internal.ContentType r3;
        org.apache.poi.openxml4j.opc.PackagePart r0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackagePartName;

        r3 := @parameter2: org.apache.poi.openxml4j.opc.internal.ContentType;

        specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: void <init>(org.apache.poi.openxml4j.opc.OPCPackage,org.apache.poi.openxml4j.opc.PackagePartName,org.apache.poi.openxml4j.opc.internal.ContentType,boolean)>(r1, r2, r3, 1);

        return;
    }

    protected void <init>(org.apache.poi.openxml4j.opc.OPCPackage, org.apache.poi.openxml4j.opc.PackagePartName, org.apache.poi.openxml4j.opc.internal.ContentType, boolean) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.PackagePartName r1, $r4;
        org.apache.poi.openxml4j.opc.OPCPackage r3;
        org.apache.poi.openxml4j.opc.internal.ContentType r2;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        boolean $z0, z1;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r3 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        r1 := @parameter1: org.apache.poi.openxml4j.opc.PackagePartName;

        r2 := @parameter2: org.apache.poi.openxml4j.opc.internal.ContentType;

        z1 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName _partName> = r1;

        r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.internal.ContentType _contentType> = r2;

        r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container> = r3;

        $r4 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName _partName>;

        $z0 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackagePartName: boolean isRelationshipPartURI()>();

        r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isRelationshipPart> = $z0;

        if z1 == 0 goto label1;

        specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: void loadRelationships()>();

     label1:
        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.OPCPackage, org.apache.poi.openxml4j.opc.PackagePartName, java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.OPCPackage r1;
        org.apache.poi.openxml4j.opc.PackagePartName r2;
        org.apache.poi.openxml4j.opc.internal.ContentType $r3;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String r4;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackagePartName;

        r4 := @parameter2: java.lang.String;

        $r3 = new org.apache.poi.openxml4j.opc.internal.ContentType;

        specialinvoke $r3.<org.apache.poi.openxml4j.opc.internal.ContentType: void <init>(java.lang.String)>(r4);

        specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: void <init>(org.apache.poi.openxml4j.opc.OPCPackage,org.apache.poi.openxml4j.opc.PackagePartName,org.apache.poi.openxml4j.opc.internal.ContentType)>(r1, r2, $r3);

        return;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationship addExternalRelationship(java.lang.String, java.lang.String)
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String r1, r2;
        org.apache.poi.openxml4j.opc.PackageRelationship $r3;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship addExternalRelationship(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, null);

        return $r3;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationship addExternalRelationship(java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.URISyntaxException $r12;
        org.apache.poi.openxml4j.opc.PackageRelationship $r8;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r3, $r7, $r9;
        org.apache.poi.openxml4j.opc.PackagePart r2;
        java.lang.String r0, r1, r5, $r17;
        java.net.URI $r4;
        java.lang.IllegalArgumentException $r10, $r11, $r13;
        org.apache.poi.openxml4j.opc.TargetMode $r6;
        java.lang.StringBuilder $r14, $r15, $r16;

        r2 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("target");

        throw $r11;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("relationshipType");

        throw $r10;

     label2:
        $r3 = r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        if $r3 != null goto label3;

        $r9 = new org.apache.poi.openxml4j.opc.PackageRelationshipCollection;

        specialinvoke $r9.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: void <init>()>();

        r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships> = $r9;

     label3:
        $r4 = new java.net.URI;

        specialinvoke $r4.<java.net.URI: void <init>(java.lang.String)>(r0);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid target - ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label6:
        $r7 = r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        $r6 = <org.apache.poi.openxml4j.opc.TargetMode: org.apache.poi.openxml4j.opc.TargetMode EXTERNAL>;

        $r8 = virtualinvoke $r7.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(java.net.URI,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String,java.lang.String)>($r4, $r6, r1, r5);

        return $r8;

        catch java.net.URISyntaxException from label3 to label4 with label5;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName, org.apache.poi.openxml4j.opc.TargetMode, java.lang.String)
    {
        org.apache.poi.openxml4j.opc.TargetMode r2;
        org.apache.poi.openxml4j.opc.PackagePartName r1;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String r3;
        org.apache.poi.openxml4j.opc.PackageRelationship $r4;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePartName;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.TargetMode;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String,java.lang.String)>(r1, r2, r3, null);

        return $r4;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName, org.apache.poi.openxml4j.opc.TargetMode, java.lang.String, java.lang.String)
    {
        org.apache.poi.openxml4j.opc.PackageRelationship $r10;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r6, $r7, $r11;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String r4, r9;
        java.net.URI $r8;
        boolean $z0, $z1;
        org.apache.poi.openxml4j.opc.PackagePartName r2;
        org.apache.poi.openxml4j.exceptions.InvalidOperationException $r5;
        java.lang.IllegalArgumentException $r12, $r13, $r14;
        org.apache.poi.openxml4j.opc.TargetMode r3;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter0: org.apache.poi.openxml4j.opc.PackagePartName;

        r3 := @parameter1: org.apache.poi.openxml4j.opc.TargetMode;

        r4 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        virtualinvoke $r1.<org.apache.poi.openxml4j.opc.OPCPackage: void throwExceptionIfReadOnly()>();

        if r2 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("targetPartName");

        throw $r14;

     label1:
        if r3 != null goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("targetMode");

        throw $r13;

     label2:
        if r4 != null goto label3;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("relationshipType");

        throw $r12;

     label3:
        $z0 = r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isRelationshipPart>;

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r2.<org.apache.poi.openxml4j.opc.PackagePartName: boolean isRelationshipPartURI()>();

        if $z1 == 0 goto label5;

     label4:
        $r5 = new org.apache.poi.openxml4j.exceptions.InvalidOperationException;

        specialinvoke $r5.<org.apache.poi.openxml4j.exceptions.InvalidOperationException: void <init>(java.lang.String)>("Rule M1.25: The Relationships part shall not have relationships to any other part.");

        throw $r5;

     label5:
        $r6 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        if $r6 != null goto label6;

        $r11 = new org.apache.poi.openxml4j.opc.PackageRelationshipCollection;

        specialinvoke $r11.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: void <init>()>();

        r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships> = $r11;

     label6:
        $r7 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        $r8 = virtualinvoke r2.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r10 = virtualinvoke $r7.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(java.net.URI,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String,java.lang.String)>($r8, r3, r4, r9);

        return $r10;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(java.net.URI, org.apache.poi.openxml4j.opc.TargetMode, java.lang.String)
    {
        org.apache.poi.openxml4j.opc.TargetMode r2;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.net.URI r1;
        java.lang.String r3;
        org.apache.poi.openxml4j.opc.PackageRelationship $r4;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.TargetMode;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(java.net.URI,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String,java.lang.String)>(r1, r2, r3, null);

        return $r4;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(java.net.URI, org.apache.poi.openxml4j.opc.TargetMode, java.lang.String, java.lang.String)
    {
        org.apache.poi.openxml4j.opc.PackageRelationship $r9;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r6, $r8, $r10;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.net.URI r2;
        java.lang.String r4, r7;
        boolean $z0, $z1;
        org.apache.poi.openxml4j.exceptions.InvalidOperationException $r5;
        java.lang.IllegalArgumentException $r11, $r12, $r13;
        org.apache.poi.openxml4j.opc.TargetMode r3;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter0: java.net.URI;

        r3 := @parameter1: org.apache.poi.openxml4j.opc.TargetMode;

        r4 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        virtualinvoke $r1.<org.apache.poi.openxml4j.opc.OPCPackage: void throwExceptionIfReadOnly()>();

        if r2 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("targetPartName");

        throw $r13;

     label1:
        if r3 != null goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("targetMode");

        throw $r12;

     label2:
        if r4 != null goto label3;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("relationshipType");

        throw $r11;

     label3:
        $z0 = r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isRelationshipPart>;

        if $z0 != 0 goto label4;

        $z1 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: boolean isRelationshipPartURI(java.net.URI)>(r2);

        if $z1 == 0 goto label5;

     label4:
        $r5 = new org.apache.poi.openxml4j.exceptions.InvalidOperationException;

        specialinvoke $r5.<org.apache.poi.openxml4j.exceptions.InvalidOperationException: void <init>(java.lang.String)>("Rule M1.25: The Relationships part shall not have relationships to any other part.");

        throw $r5;

     label5:
        $r6 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        if $r6 != null goto label6;

        $r10 = new org.apache.poi.openxml4j.opc.PackageRelationshipCollection;

        specialinvoke $r10.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: void <init>()>();

        r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships> = $r10;

     label6:
        $r8 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        $r9 = virtualinvoke $r8.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(java.net.URI,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String,java.lang.String)>(r2, r3, r4, r7);

        return $r9;
    }

    public void clearRelationships()
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r1, $r2;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        virtualinvoke $r2.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: void clear()>();

     label1:
        return;
    }

    public void removeRelationship(java.lang.String)
    {
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r2, $r4;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String r3;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        virtualinvoke $r1.<org.apache.poi.openxml4j.opc.OPCPackage: void throwExceptionIfReadOnly()>();

        $r2 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: void removeRelationship(java.lang.String)>(r3);

     label1:
        return;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationships() throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r1;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsCore(java.lang.String)>(null);

        return $r1;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String)
    {
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r2;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String r1;
        org.apache.poi.openxml4j.opc.PackageRelationship $r3;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        $r3 = virtualinvoke $r2.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: org.apache.poi.openxml4j.opc.PackageRelationship getRelationshipByID(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r3;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String r2;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        virtualinvoke $r1.<org.apache.poi.openxml4j.opc.OPCPackage: void throwExceptionIfWriteOnly()>();

        $r3 = specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsCore(java.lang.String)>(r2);

        return $r3;
    }

    private org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsCore(java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r2, $r3, $r5, $r6;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String r4;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        virtualinvoke $r1.<org.apache.poi.openxml4j.opc.OPCPackage: void throwExceptionIfWriteOnly()>();

        $r2 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        if $r2 != null goto label1;

        specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: void throwExceptionIfRelationship()>();

        $r6 = new org.apache.poi.openxml4j.opc.PackageRelationshipCollection;

        specialinvoke $r6.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: void <init>(org.apache.poi.openxml4j.opc.PackagePart)>(r0);

        r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships> = $r6;

     label1:
        $r3 = new org.apache.poi.openxml4j.opc.PackageRelationshipCollection;

        $r5 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        specialinvoke $r3.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: void <init>(org.apache.poi.openxml4j.opc.PackageRelationshipCollection,java.lang.String)>($r5, r4);

        return $r3;
    }

    public boolean hasRelationships()
    {
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r1, $r2;
        int $i0;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $z0 = r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isRelationshipPart>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        $i0 = virtualinvoke $r2.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: int size()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isRelationshipExists(org.apache.poi.openxml4j.opc.PackageRelationship)
    {
        java.util.Iterator $r2;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r6;
        org.apache.poi.openxml4j.opc.PackageRelationship r4, r5;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r1;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r5 := @parameter0: org.apache.poi.openxml4j.opc.PackageRelationship;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationships()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r3;

        if r4 != r5 goto label4;

     label3:
        return 1;

     label4:
        goto label2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

     label7:
        return 0;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label3 with label6;
        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label4 to label5 with label6;
    }

    public org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        java.net.URISyntaxException $r23;
        org.apache.poi.openxml4j.opc.PackagePart r0, $r6;
        java.net.URI $r2, $r13, r29;
        boolean $z0;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r24;
        org.apache.poi.openxml4j.opc.PackagePartName $r4, $r20;
        org.apache.poi.openxml4j.opc.OPCPackage $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r16, $r17, $r18, $r19, $r21, $r25, $r26, $r27;
        org.apache.poi.openxml4j.opc.PackageRelationship r1;
        int $i0;
        java.lang.String $r3, $r11, $r12, $r14, $r22, $r28;
        java.lang.IllegalArgumentException $r7, $r15;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackageRelationship;

        $z0 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean isRelationshipExists(org.apache.poi.openxml4j.opc.PackageRelationship)>(r1);

        if $z0 != 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relationship ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t start with this part ");

        $r20 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName _partName>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label1:
        $r2 = virtualinvoke r1.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        r29 = $r2;

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String getFragment()>();

        if $r3 == null goto label5;

        $r12 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>();

     label2:
        $r13 = new java.net.URI;

        $i0 = virtualinvoke $r12.<java.lang.String: int indexOf(int)>(35);

        $r14 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        specialinvoke $r13.<java.net.URI: void <init>(java.lang.String)>($r14);

        r29 = $r13;

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        $r24 = new org.apache.poi.openxml4j.exceptions.InvalidFormatException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid target URI: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.poi.openxml4j.exceptions.InvalidFormatException: void <init>(java.lang.String)>($r28);

        throw $r24;

     label5:
        $r4 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>(r29);

        $r5 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r4);

        if $r6 != null goto label6;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No part found for relationship ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label6:
        return $r6;

        catch java.net.URISyntaxException from label2 to label3 with label4;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackagePartName $r5;
        java.io.IOException $r2;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.String $r6, $r8;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStreamImpl()>();

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t obtain the input stream from ");

        $r5 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName _partName>;

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.PackagePartName: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        return $r1;
    }

    public java.io.OutputStream getOutputStream()
    {
        java.io.OutputStream r10;
        org.apache.poi.openxml4j.opc.PackagePartName $r1, $r5;
        org.apache.poi.openxml4j.opc.internal.ContentType $r3;
        org.apache.poi.openxml4j.exceptions.InvalidOperationException $r9;
        org.apache.poi.openxml4j.opc.OPCPackage $r2, $r4;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r8;
        org.apache.poi.openxml4j.opc.PackagePart r0, $r7;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $z0 = r0 instanceof org.apache.poi.openxml4j.opc.ZipPackagePart;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName _partName>;

        virtualinvoke $r2.<org.apache.poi.openxml4j.opc.OPCPackage: void removePart(org.apache.poi.openxml4j.opc.PackagePartName)>($r1);

        $r4 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        $r5 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName _partName>;

        $r3 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.internal.ContentType _contentType>;

        $r6 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.internal.ContentType: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart createPart(org.apache.poi.openxml4j.opc.PackagePartName,java.lang.String,boolean)>($r5, $r6, 0);

        if $r7 != null goto label1;

        $r9 = new org.apache.poi.openxml4j.exceptions.InvalidOperationException;

        specialinvoke $r9.<org.apache.poi.openxml4j.exceptions.InvalidOperationException: void <init>(java.lang.String)>("Can\'t create a temporary part !");

        throw $r9;

     label1:
        $r8 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        $r7.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships> = $r8;

        r10 = virtualinvoke $r7.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStreamImpl()>();

        goto label3;

     label2:
        r10 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStreamImpl()>();

     label3:
        return r10;
    }

    private void throwExceptionIfRelationship() throws org.apache.poi.openxml4j.exceptions.InvalidOperationException
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        org.apache.poi.openxml4j.exceptions.InvalidOperationException $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $z0 = r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isRelationshipPart>;

        if $z0 == 0 goto label1;

        $r1 = new org.apache.poi.openxml4j.exceptions.InvalidOperationException;

        specialinvoke $r1.<org.apache.poi.openxml4j.exceptions.InvalidOperationException: void <init>(java.lang.String)>("Can do this operation on a relationship part !");

        throw $r1;

     label1:
        return;
    }

    private void loadRelationships() throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r1, $r2;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        boolean $z0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships>;

        if $r1 != null goto label1;

        $z0 = r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isRelationshipPart>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: void throwExceptionIfRelationship()>();

        $r2 = new org.apache.poi.openxml4j.opc.PackageRelationshipCollection;

        specialinvoke $r2.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: void <init>(org.apache.poi.openxml4j.opc.PackagePart)>(r0);

        r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection _relationships> = $r2;

     label1:
        return;
    }

    public org.apache.poi.openxml4j.opc.PackagePartName getPartName()
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        org.apache.poi.openxml4j.opc.PackagePartName $r1;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName _partName>;

        return $r1;
    }

    public java.lang.String getContentType()
    {
        org.apache.poi.openxml4j.opc.internal.ContentType $r1;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.lang.String $r2;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.internal.ContentType _contentType>;

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.internal.ContentType: java.lang.String toString()>();

        return $r2;
    }

    public org.apache.poi.openxml4j.opc.internal.ContentType getContentTypeDetails()
    {
        org.apache.poi.openxml4j.opc.internal.ContentType $r1;
        org.apache.poi.openxml4j.opc.PackagePart r0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.internal.ContentType _contentType>;

        return $r1;
    }

    public void setContentType(java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        org.apache.poi.openxml4j.opc.internal.ContentType $r3;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        org.apache.poi.openxml4j.exceptions.InvalidOperationException $r2;
        java.lang.String r4;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        if $r1 != null goto label1;

        $r3 = new org.apache.poi.openxml4j.opc.internal.ContentType;

        specialinvoke $r3.<org.apache.poi.openxml4j.opc.internal.ContentType: void <init>(java.lang.String)>(r4);

        r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.internal.ContentType _contentType> = $r3;

        goto label2;

     label1:
        $r2 = new org.apache.poi.openxml4j.exceptions.InvalidOperationException;

        specialinvoke $r2.<org.apache.poi.openxml4j.exceptions.InvalidOperationException: void <init>(java.lang.String)>("You can\'t change the content type of a part.");

        throw $r2;

     label2:
        return;
    }

    public org.apache.poi.openxml4j.opc.OPCPackage getPackage()
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage _container>;

        return $r1;
    }

    public boolean isRelationshipPart()
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        boolean $z0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $z0 = r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isRelationshipPart>;

        return $z0;
    }

    public boolean isDeleted()
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        boolean $z0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $z0 = r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isDeleted>;

        return $z0;
    }

    public void setDeleted(boolean)
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;
        boolean z0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.openxml4j.opc.PackagePart: boolean _isDeleted> = z0;

        return;
    }

    public long getSize()
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        return -1L;
    }

    public java.lang.String toString()
    {
        org.apache.poi.openxml4j.opc.PackagePartName $r3;
        org.apache.poi.openxml4j.opc.internal.ContentType $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r8;
        org.apache.poi.openxml4j.opc.PackagePart r2;
        java.lang.String $r7, $r9;

        r2 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Name: ");

        $r3 = r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName _partName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Content Type: ");

        $r6 = r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.internal.ContentType _contentType>;

        $r7 = virtualinvoke $r6.<org.apache.poi.openxml4j.opc.internal.ContentType: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    protected abstract java.io.InputStream getInputStreamImpl() throws java.io.IOException;

    protected abstract java.io.OutputStream getOutputStreamImpl();

    public abstract boolean save(java.io.OutputStream) throws org.apache.poi.openxml4j.exceptions.OpenXML4JException;

    public abstract boolean load(java.io.InputStream) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException;

    public abstract void close();

    public abstract void flush();

    public void clear()
    {
        org.apache.poi.openxml4j.opc.PackagePart r0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagePart;

        return;
    }
}
