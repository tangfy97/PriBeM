public class org.apache.batik.dom.util.TriplyIndexedTable$Entry extends java.lang.Object
{
    public int hash;
    public java.lang.Object key1;
    public java.lang.Object key2;
    public java.lang.Object key3;
    public java.lang.Object value;
    public org.apache.batik.dom.util.TriplyIndexedTable$Entry next;

    public void <init>(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, org.apache.batik.dom.util.TriplyIndexedTable$Entry)
    {
        org.apache.batik.dom.util.TriplyIndexedTable$Entry r0, r5;
        int i0;
        java.lang.Object r1, r2, r3, r4;

        r0 := @this: org.apache.batik.dom.util.TriplyIndexedTable$Entry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: org.apache.batik.dom.util.TriplyIndexedTable$Entry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: int hash> = i0;

        r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key1> = r1;

        r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key2> = r2;

        r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key3> = r3;

        r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object value> = r4;

        r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: org.apache.batik.dom.util.TriplyIndexedTable$Entry next> = r5;

        return;
    }

    public boolean match(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.batik.dom.util.TriplyIndexedTable$Entry r0;
        java.lang.Object $r1, r2, $r3, r4, $r5, r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.batik.dom.util.TriplyIndexedTable$Entry;

        r2 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.Object;

        $r1 = r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key1>;

        if $r1 == null goto label1;

        $r9 = r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key1>;

        $z2 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label2;

        return 0;

     label1:
        if r2 == null goto label2;

        return 0;

     label2:
        $r3 = r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key2>;

        if $r3 == null goto label3;

        $r8 = r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key2>;

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label4;

        return 0;

     label3:
        if r4 == null goto label4;

        return 0;

     label4:
        $r5 = r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key3>;

        if $r5 == null goto label5;

        $r7 = r0.<org.apache.batik.dom.util.TriplyIndexedTable$Entry: java.lang.Object key3>;

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        return $z0;

     label5:
        if r6 != null goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        return $z3;
    }
}
