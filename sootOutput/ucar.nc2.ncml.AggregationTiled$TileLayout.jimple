class ucar.nc2.ncml.AggregationTiled$TileLayout extends java.lang.Object
{
    private int srcPos;
    private int resultPos;
    private int nelems;
    private int total;
    private int startElem;
    ucar.ma2.Index index;
    boolean first;
    final ucar.nc2.ncml.AggregationTiled this$0;

    void <init>(ucar.nc2.ncml.AggregationTiled, ucar.ma2.Section, ucar.ma2.Section) throws ucar.ma2.InvalidRangeException
    {
        int[] r17, r18;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r10, $r14, $r15, $r19, $r20;
        ucar.ma2.Section r2, $r3, r4, $r5;
        long $l1, $l13, $l17, $l19, $l20, $l21, $l22, l24, l27;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i23, i25, i26, i28, $i30, $i32;
        ucar.nc2.ncml.AggregationTiled r1;
        java.lang.String $r11, $r16;
        java.io.PrintStream $r8, $r13;
        ucar.ma2.Index $r21;
        ucar.nc2.ncml.AggregationTiled$TileLayout r0;

        r0 := @this: ucar.nc2.ncml.AggregationTiled$TileLayout;

        r1 := @parameter0: ucar.nc2.ncml.AggregationTiled;

        r2 := @parameter1: ucar.ma2.Section;

        r4 := @parameter2: ucar.ma2.Section;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: ucar.nc2.ncml.AggregationTiled this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int srcPos> = 0;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: boolean first> = 1;

        $r3 = virtualinvoke r2.<ucar.ma2.Section: ucar.ma2.Section compact()>();

        $r5 = virtualinvoke r4.<ucar.ma2.Section: ucar.ma2.Section compact()>();

        $z0 = staticinvoke <ucar.nc2.ncml.AggregationTiled: boolean access$300(ucar.nc2.ncml.AggregationTiled)>(r1);

        if $z0 == 0 goto label1;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resultSection: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label1:
        $z1 = staticinvoke <ucar.nc2.ncml.AggregationTiled: boolean access$300(ucar.nc2.ncml.AggregationTiled)>(r1);

        if $z1 == 0 goto label2;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataSection: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label2:
        $i0 = virtualinvoke $r3.<ucar.ma2.Section: int getRank()>();

        $l1 = virtualinvoke $r3.<ucar.ma2.Section: long computeSize()>();

        $i2 = (int) $l1;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int total> = $i2;

        l24 = 1L;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int startElem> = 0;

        i25 = $i0 - 1;

     label3:
        if i25 < 0 goto label5;

        $i14 = virtualinvoke $r3.<ucar.ma2.Section: int getOrigin(int)>(i25);

        $i15 = virtualinvoke $r5.<ucar.ma2.Section: int getOrigin(int)>(i25);

        i26 = $i14 - $i15;

        if i26 <= 0 goto label4;

        $i18 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int startElem>;

        $l21 = (long) $i18;

        $l19 = (long) i26;

        $l20 = l24 * $l19;

        $l22 = $l21 + $l20;

        $i23 = (int) $l22;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int startElem> = $i23;

     label4:
        $i16 = virtualinvoke $r5.<ucar.ma2.Section: int getShape(int)>(i25);

        $l17 = (long) $i16;

        l24 = l24 * $l17;

        $i30 = (int) -1;

        i25 = i25 + $i30;

        goto label3;

     label5:
        $i3 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int startElem>;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int resultPos> = $i3;

        $i4 = $i0 - 1;

        $i5 = virtualinvoke r2.<ucar.ma2.Section: int getShape(int)>($i4);

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int nelems> = $i5;

        $i6 = $i0 - 1;

        r17 = newarray (int)[$i6];

        $i7 = $i0 - 1;

        r18 = newarray (int)[$i7];

        $i8 = $i0 - 1;

        $i9 = virtualinvoke $r5.<ucar.ma2.Section: int getShape(int)>($i8);

        l27 = (long) $i9;

        i28 = $i0 - 2;

     label6:
        if i28 < 0 goto label7;

        $i10 = (int) l27;

        r17[i28] = $i10;

        $i11 = virtualinvoke $r3.<ucar.ma2.Section: int getShape(int)>(i28);

        r18[i28] = $i11;

        $i12 = virtualinvoke $r5.<ucar.ma2.Section: int getShape(int)>(i28);

        $l13 = (long) $i12;

        l27 = l27 * $l13;

        $i32 = (int) -1;

        i28 = i28 + $i32;

        goto label6;

     label7:
        $r21 = new ucar.ma2.Index;

        specialinvoke $r21.<ucar.ma2.Index: void <init>(int[],int[])>(r18, r17);

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: ucar.ma2.Index index> = $r21;

        return;
    }

    boolean hasNext()
    {
        ucar.ma2.Index $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        ucar.nc2.ncml.AggregationTiled$TileLayout r0;
        boolean $z0;

        r0 := @this: ucar.nc2.ncml.AggregationTiled$TileLayout;

        $z0 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: boolean first>;

        if $z0 == 0 goto label1;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: boolean first> = 0;

        return 1;

     label1:
        $i1 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int srcPos>;

        $i0 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int nelems>;

        $i2 = $i1 + $i0;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int srcPos> = $i2;

        $i4 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int srcPos>;

        $i3 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int total>;

        if $i4 < $i3 goto label2;

        return 0;

     label2:
        $r1 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: ucar.ma2.Index index>;

        virtualinvoke $r1.<ucar.ma2.Index: int incr()>();

        $i5 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int startElem>;

        $r2 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: ucar.ma2.Index index>;

        $i6 = virtualinvoke $r2.<ucar.ma2.Index: int currentElement()>();

        $i7 = $i5 + $i6;

        r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int resultPos> = $i7;

        return 1;
    }

    public java.lang.String toString()
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        ucar.nc2.ncml.AggregationTiled$TileLayout r2;

        r2 := @this: ucar.nc2.ncml.AggregationTiled$TileLayout;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  nElems: ");

        $i0 = r2.<ucar.nc2.ncml.AggregationTiled$TileLayout: int nelems>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos: ");

        $i1 = r2.<ucar.nc2.ncml.AggregationTiled$TileLayout: int srcPos>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resultPos: ");

        $i2 = r2.<ucar.nc2.ncml.AggregationTiled$TileLayout: int resultPos>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static int access$000(ucar.nc2.ncml.AggregationTiled$TileLayout)
    {
        int $i0;
        ucar.nc2.ncml.AggregationTiled$TileLayout r0;

        r0 := @parameter0: ucar.nc2.ncml.AggregationTiled$TileLayout;

        $i0 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int srcPos>;

        return $i0;
    }

    static int access$100(ucar.nc2.ncml.AggregationTiled$TileLayout)
    {
        int $i0;
        ucar.nc2.ncml.AggregationTiled$TileLayout r0;

        r0 := @parameter0: ucar.nc2.ncml.AggregationTiled$TileLayout;

        $i0 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int resultPos>;

        return $i0;
    }

    static int access$200(ucar.nc2.ncml.AggregationTiled$TileLayout)
    {
        int $i0;
        ucar.nc2.ncml.AggregationTiled$TileLayout r0;

        r0 := @parameter0: ucar.nc2.ncml.AggregationTiled$TileLayout;

        $i0 = r0.<ucar.nc2.ncml.AggregationTiled$TileLayout: int nelems>;

        return $i0;
    }
}
