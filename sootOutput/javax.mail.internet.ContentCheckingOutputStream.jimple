class javax.mail.internet.ContentCheckingOutputStream extends java.io.OutputStream
{
    private int asciiChars;
    private int nonAsciiChars;
    private boolean containsLongLines;
    private boolean containsMalformedEOL;
    private int previousChar;
    private int span;

    void <init>()
    {
        javax.mail.internet.ContentCheckingOutputStream r0;

        r0 := @this: javax.mail.internet.ContentCheckingOutputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<javax.mail.internet.ContentCheckingOutputStream: int asciiChars> = 0;

        r0.<javax.mail.internet.ContentCheckingOutputStream: int nonAsciiChars> = 0;

        r0.<javax.mail.internet.ContentCheckingOutputStream: boolean containsLongLines> = 0;

        r0.<javax.mail.internet.ContentCheckingOutputStream: boolean containsMalformedEOL> = 0;

        r0.<javax.mail.internet.ContentCheckingOutputStream: int previousChar> = 0;

        r0.<javax.mail.internet.ContentCheckingOutputStream: int span> = 0;

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        javax.mail.internet.ContentCheckingOutputStream r0;

        r0 := @this: javax.mail.internet.ContentCheckingOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<javax.mail.internet.ContentCheckingOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        javax.mail.internet.ContentCheckingOutputStream r0;
        byte $b3;
        int i0, i1, $i2, i4, $i5;

        r0 := @this: javax.mail.internet.ContentCheckingOutputStream;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i2 = i1 + i4;

        $b3 = r1[$i2];

        $i5 = (int) $b3;

        virtualinvoke r0.<javax.mail.internet.ContentCheckingOutputStream: void write(int)>($i5);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void write(int)
    {
        javax.mail.internet.ContentCheckingOutputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;

        r0 := @this: javax.mail.internet.ContentCheckingOutputStream;

        i0 := @parameter0: int;

        if i0 == 10 goto label1;

        if i0 != 13 goto label3;

     label1:
        if i0 != 10 goto label2;

        $i1 = r0.<javax.mail.internet.ContentCheckingOutputStream: int previousChar>;

        if $i1 == 13 goto label2;

        r0.<javax.mail.internet.ContentCheckingOutputStream: boolean containsMalformedEOL> = 1;

     label2:
        r0.<javax.mail.internet.ContentCheckingOutputStream: int span> = 0;

        goto label6;

     label3:
        $i2 = r0.<javax.mail.internet.ContentCheckingOutputStream: int span>;

        $i3 = $i2 + 1;

        r0.<javax.mail.internet.ContentCheckingOutputStream: int span> = $i3;

        $i4 = r0.<javax.mail.internet.ContentCheckingOutputStream: int span>;

        if $i4 <= 998 goto label4;

        r0.<javax.mail.internet.ContentCheckingOutputStream: boolean containsLongLines> = 1;

     label4:
        $z0 = staticinvoke <org.apache.geronimo.mail.util.ASCIIUtil: boolean isAscii(int)>(i0);

        if $z0 != 0 goto label5;

        $i7 = r0.<javax.mail.internet.ContentCheckingOutputStream: int nonAsciiChars>;

        $i8 = $i7 + 1;

        r0.<javax.mail.internet.ContentCheckingOutputStream: int nonAsciiChars> = $i8;

        goto label6;

     label5:
        $i5 = r0.<javax.mail.internet.ContentCheckingOutputStream: int asciiChars>;

        $i6 = $i5 + 1;

        r0.<javax.mail.internet.ContentCheckingOutputStream: int asciiChars> = $i6;

     label6:
        r0.<javax.mail.internet.ContentCheckingOutputStream: int previousChar> = i0;

        return;
    }

    public java.lang.String getBinaryTransferEncoding()
    {
        javax.mail.internet.ContentCheckingOutputStream r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: javax.mail.internet.ContentCheckingOutputStream;

        $i0 = r0.<javax.mail.internet.ContentCheckingOutputStream: int nonAsciiChars>;

        if $i0 != 0 goto label1;

        $z0 = r0.<javax.mail.internet.ContentCheckingOutputStream: boolean containsLongLines>;

        if $z0 != 0 goto label1;

        $z1 = r0.<javax.mail.internet.ContentCheckingOutputStream: boolean containsMalformedEOL>;

        if $z1 == 0 goto label2;

     label1:
        return "base64";

     label2:
        return "7bit";
    }

    public java.lang.String getTextTransferEncoding()
    {
        javax.mail.internet.ContentCheckingOutputStream r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: javax.mail.internet.ContentCheckingOutputStream;

        $i0 = r0.<javax.mail.internet.ContentCheckingOutputStream: int nonAsciiChars>;

        if $i0 != 0 goto label2;

        $z0 = r0.<javax.mail.internet.ContentCheckingOutputStream: boolean containsLongLines>;

        if $z0 == 0 goto label1;

        return "quoted-printable";

     label1:
        return "7bit";

     label2:
        $i2 = r0.<javax.mail.internet.ContentCheckingOutputStream: int nonAsciiChars>;

        $i1 = r0.<javax.mail.internet.ContentCheckingOutputStream: int asciiChars>;

        if $i2 <= $i1 goto label3;

        return "base64";

     label3:
        return "quoted-printable";
    }
}
