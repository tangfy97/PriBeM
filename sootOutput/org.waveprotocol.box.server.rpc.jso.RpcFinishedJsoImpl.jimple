public final class org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl extends org.waveprotocol.wave.communication.gwt.JsonMessage implements org.waveprotocol.box.server.rpc.RpcFinished
{
    private static final java.lang.String keyFailed;
    private static final java.lang.String keyErrorText;

    protected void <init>()
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r0;

        r0 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        specialinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: void <init>()>();

        return;
    }

    public static org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl create()
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage $r0;
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r1;

        $r0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonMessage createJsonMessage()>();

        r1 = (org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl) $r0;

        return r1;
    }

    public void copyFrom(org.waveprotocol.box.server.rpc.RpcFinished)
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r0, $r2;
        org.waveprotocol.box.server.rpc.RpcFinished r1;

        r0 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        r1 := @parameter0: org.waveprotocol.box.server.rpc.RpcFinished;

        $r2 = (org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl) r1;

        specialinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: void copyFrom(org.waveprotocol.wave.communication.gwt.JsonMessage)>($r2);

        return;
    }

    public boolean getFailed()
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean getPropertyAsBoolean(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setFailed(boolean)
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r0;
        boolean z0;

        r0 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        z0 := @parameter0: boolean;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsBoolean(com.google.gwt.core.client.JavaScriptObject,java.lang.String,boolean)>(r0, "1", z0);

        return;
    }

    public boolean hasErrorText()
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        return $z0;
    }

    public void clearErrorText()
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

     label1:
        return;
    }

    public java.lang.String getErrorText()
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: java.lang.String getPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void setErrorText(java.lang.String)
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String,java.lang.String)>(r0, "2", r1);

        return;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl r1;
        java.lang.Object r0;
        org.waveprotocol.box.server.rpc.RpcFinished $r2;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl: boolean nativeIsEqualTo(java.lang.Object)>(r0);

        return $z3;

     label1:
        $z1 = r0 instanceof org.waveprotocol.box.server.rpc.RpcFinished;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.box.server.rpc.RpcFinished) r0;

        $z2 = staticinvoke <org.waveprotocol.box.server.rpc.RpcFinishedUtil: boolean isEqual(org.waveprotocol.box.server.rpc.RpcFinished,org.waveprotocol.box.server.rpc.RpcFinished)>(r1, $r2);

        return $z2;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl: java.lang.String keyErrorText> = "2";

        <org.waveprotocol.box.server.rpc.jso.RpcFinishedJsoImpl: java.lang.String keyFailed> = "1";

        return;
    }
}
