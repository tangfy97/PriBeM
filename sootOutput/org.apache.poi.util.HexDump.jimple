public class org.apache.poi.util.HexDump extends java.lang.Object
{
    public static final java.lang.String EOL;
    private static final char[] _hexcodes;
    private static final int[] _shifts;

    private void <init>()
    {
        org.apache.poi.util.HexDump r0;

        r0 := @this: org.apache.poi.util.HexDump;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void dump(byte[], long, java.io.OutputStream, int, int) throws java.io.IOException, java.lang.ArrayIndexOutOfBoundsException, java.lang.IllegalArgumentException
    {
        byte[] r0, $r14, $r22;
        byte $b12, $b14, $b16, $b19;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r18, $r20, $r23, $r24;
        long l4, $l5, $l10, l20;
        java.lang.StringBuffer $r11, $r27;
        int $i0, i1, $i2, $i3, i6, $i7, $i8, $i9, $i11, $i13, $i15, $i18, i21, i22, i23, i24, $i25, $i26;
        java.lang.String $r7, $r10, $r12, $r13, $r15, $r19, $r21;
        java.io.OutputStream r8;
        char $c17;
        java.lang.ArrayIndexOutOfBoundsException $r25;
        java.lang.IllegalArgumentException $r26;

        r0 := @parameter0: byte[];

        l4 := @parameter1: long;

        r8 := @parameter2: java.io.OutputStream;

        i1 := @parameter3: int;

        i6 := @parameter4: int;

        $i0 = lengthof r0;

        if $i0 != 0 goto label01;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Data");

        $r19 = <org.apache.poi.util.HexDump: java.lang.String EOL>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = virtualinvoke $r21.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r22);

        virtualinvoke r8.<java.io.OutputStream: void flush()>();

        return;

     label01:
        if i1 < 0 goto label02;

        $i3 = lengthof r0;

        if i1 < $i3 goto label03;

     label02:
        $r25 = new java.lang.ArrayIndexOutOfBoundsException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal index: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into array of length ");

        $i2 = lengthof r0;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r25;

     label03:
        if r8 != null goto label04;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot write to nullstream");

        throw $r26;

     label04:
        $l5 = (long) i1;

        l20 = l4 + $l5;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>(int)>(74);

        $i8 = lengthof r0;

        $i7 = i1 + i6;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i7);

        i21 = i1;

     label05:
        if i21 >= $i9 goto label15;

        i22 = $i9 - i21;

        if i22 <= 16 goto label06;

        i22 = 16;

     label06:
        $r10 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String dump(long)>(l20);

        $r11 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i23 = 0;

     label07:
        if i23 >= 16 goto label10;

        if i23 >= i22 goto label08;

        $i18 = i23 + i21;

        $b19 = r0[$i18];

        $r15 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String dump(byte)>($b19);

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        goto label09;

     label08:
        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

     label09:
        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i23 = i23 + 1;

        goto label07;

     label10:
        i24 = 0;

     label11:
        if i24 >= i22 goto label14;

        $i11 = i24 + i21;

        $b12 = r0[$i11];

        $i25 = (int) $b12;

        if $i25 < 32 goto label12;

        $i13 = i24 + i21;

        $b14 = r0[$i13];

        $i26 = (int) $b14;

        if $i26 >= 127 goto label12;

        $i15 = i24 + i21;

        $b16 = r0[$i15];

        $c17 = (char) $b16;

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c17);

        goto label13;

     label12:
        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

     label13:
        i24 = i24 + 1;

        goto label11;

     label14:
        $r12 = <org.apache.poi.util.HexDump: java.lang.String EOL>;

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r14);

        virtualinvoke r8.<java.io.OutputStream: void flush()>();

        virtualinvoke $r27.<java.lang.StringBuffer: void setLength(int)>(0);

        $l10 = (long) i22;

        l20 = l20 + $l10;

        i21 = i21 + 16;

        goto label05;

     label15:
        return;
    }

    public static synchronized void dump(byte[], long, java.io.OutputStream, int) throws java.io.IOException, java.lang.ArrayIndexOutOfBoundsException, java.lang.IllegalArgumentException
    {
        java.io.OutputStream r1;
        byte[] r0;
        int i1, $i2, $i3;
        long l0;

        r0 := @parameter0: byte[];

        l0 := @parameter1: long;

        r1 := @parameter2: java.io.OutputStream;

        i1 := @parameter3: int;

        $i2 = lengthof r0;

        $i3 = $i2 - i1;

        staticinvoke <org.apache.poi.util.HexDump: void dump(byte[],long,java.io.OutputStream,int,int)>(r0, l0, r1, i1, $i3);

        return;
    }

    public static java.lang.String dump(byte[], long, int)
    {
        byte[] r5;
        byte $b9, $b11, $b13, $b16;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r14;
        long l3, $l4, $l7, l17;
        java.lang.StringBuffer $r11, $r16;
        int i0, $i1, $i2, $i5, $i6, $i8, $i10, $i12, $i15, i18, i19, i20, i21, $i22, $i23;
        java.lang.String $r7, $r9, $r10, $r12, $r13;
        char $c14;
        java.lang.ArrayIndexOutOfBoundsException $r15;

        r5 := @parameter0: byte[];

        l3 := @parameter1: long;

        i0 := @parameter2: int;

        if i0 < 0 goto label01;

        $i2 = lengthof r5;

        if i0 < $i2 goto label02;

     label01:
        $r15 = new java.lang.ArrayIndexOutOfBoundsException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal index: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into array of length ");

        $i1 = lengthof r5;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r15;

     label02:
        $l4 = (long) i0;

        l17 = l3 + $l4;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>(int)>(74);

        i18 = i0;

     label03:
        $i5 = lengthof r5;

        if i18 >= $i5 goto label13;

        $i6 = lengthof r5;

        i19 = $i6 - i18;

        if i19 <= 16 goto label04;

        i19 = 16;

     label04:
        $r10 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String dump(long)>(l17);

        $r11 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i20 = 0;

     label05:
        if i20 >= 16 goto label08;

        if i20 >= i19 goto label06;

        $i15 = i20 + i18;

        $b16 = r5[$i15];

        $r13 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String dump(byte)>($b16);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label07;

     label06:
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

     label07:
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i20 = i20 + 1;

        goto label05;

     label08:
        i21 = 0;

     label09:
        if i21 >= i19 goto label12;

        $i8 = i21 + i18;

        $b9 = r5[$i8];

        $i22 = (int) $b9;

        if $i22 < 32 goto label10;

        $i10 = i21 + i18;

        $b11 = r5[$i10];

        $i23 = (int) $b11;

        if $i23 >= 127 goto label10;

        $i12 = i21 + i18;

        $b13 = r5[$i12];

        $c14 = (char) $b13;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c14);

        goto label11;

     label10:
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

     label11:
        i21 = i21 + 1;

        goto label09;

     label12:
        $r12 = <org.apache.poi.util.HexDump: java.lang.String EOL>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $l7 = (long) i19;

        l17 = l17 + $l7;

        i18 = i18 + 16;

        goto label03;

     label13:
        $r9 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    private static java.lang.String dump(long)
    {
        long l0, $l5;
        char $c8;
        int[] $r2, $r3;
        java.lang.StringBuffer $r0;
        int $i1, $i2, $i3, $i4, $i6, $i7, i9;
        char[] $r4;
        java.lang.String $r1;

        l0 := @parameter0: long;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: void setLength(int)>(0);

        i9 = 0;

     label1:
        if i9 >= 8 goto label2;

        $r4 = <org.apache.poi.util.HexDump: char[] _hexcodes>;

        $r3 = <org.apache.poi.util.HexDump: int[] _shifts>;

        $r2 = <org.apache.poi.util.HexDump: int[] _shifts>;

        $i1 = lengthof $r2;

        $i2 = i9 + $i1;

        $i3 = $i2 - 8;

        $i4 = $r3[$i3];

        $l5 = l0 >> $i4;

        $i6 = (int) $l5;

        $i7 = $i6 & 15;

        $c8 = $r4[$i7];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    private static java.lang.String dump(byte)
    {
        char $c5;
        byte b0;
        int[] $r2;
        java.lang.StringBuffer $r4;
        int $i1, $i2, $i3, $i4, i6, $i7;
        char[] $r3;
        java.lang.String $r1;

        b0 := @parameter0: byte;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuffer: void setLength(int)>(0);

        i6 = 0;

     label1:
        if i6 >= 2 goto label2;

        $r3 = <org.apache.poi.util.HexDump: char[] _hexcodes>;

        $r2 = <org.apache.poi.util.HexDump: int[] _shifts>;

        $i1 = i6 + 6;

        $i2 = $r2[$i1];

        $i7 = (int) b0;

        $i3 = $i7 >> $i2;

        $i4 = $i3 & 15;

        $c5 = $r3[$i4];

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String toHex(byte[])
    {
        byte[] r1;
        byte $b1;
        java.lang.StringBuffer $r0;
        int $i0, i2;
        java.lang.String $r2, $r3;

        r1 := @parameter0: byte[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label3;

        if i2 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $b1 = r1[i2];

        $r3 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toHex(short[])
    {
        short $s1;
        java.lang.StringBuffer $r0;
        int $i0, i2;
        short[] r1;
        java.lang.String $r2, $r3;

        r1 := @parameter0: short[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label3;

        if i2 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $s1 = r1[i2];

        $r3 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toHex(byte[], int)
    {
        byte[] r0;
        long $l1, $l5;
        byte $b9;
        java.lang.StringBuffer $r9, $r11;
        int $i0, i2, $i3, i4, i6, i7, i8, $i11;
        java.lang.String $r3, $r5, $r6, $r7, $r8;
        double $d0, $d1, $d2, $d3, $d4;
        java.text.DecimalFormat $r10;

        r0 := @parameter0: byte[];

        i4 := @parameter1: int;

        $i0 = lengthof r0;

        $d0 = (double) $i0;

        $d1 = staticinvoke <java.lang.Math: double log(double)>($d0);

        $d2 = staticinvoke <java.lang.Math: double log(double)>(10.0);

        $d3 = $d1 / $d2;

        $d4 = $d3 + 0.5;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d4);

        i2 = (int) $l1;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        i6 = 0;

     label1:
        if i6 >= i2 goto label2;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        i6 = i6 + 1;

        goto label1;

     label2:
        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r10 = new java.text.DecimalFormat;

        $r3 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.text.DecimalFormat: void <init>(java.lang.String)>($r3);

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r10.<java.text.DecimalFormat: java.lang.String format(long)>(0L);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $i11 = (int) -1;

        i7 = $i11;

        i8 = 0;

     label3:
        $i3 = lengthof r0;

        if i8 >= $i3 goto label6;

        i7 = i7 + 1;

        if i7 != i4 goto label4;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $l5 = (long) i8;

        $r7 = virtualinvoke $r10.<java.text.DecimalFormat: java.lang.String format(long)>($l5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        i7 = 0;

        goto label5;

     label4:
        if i8 <= 0 goto label5;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label5:
        $b9 = r0[i8];

        $r8 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b9);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i8 = i8 + 1;

        goto label3;

     label6:
        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String toHex(short)
    {
        short s0;
        long $l1;
        java.lang.String $r0;

        s0 := @parameter0: short;

        $l1 = (long) s0;

        $r0 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(long,int)>($l1, 4);

        return $r0;
    }

    public static java.lang.String toHex(byte)
    {
        long $l1;
        java.lang.String $r0;
        byte b0;

        b0 := @parameter0: byte;

        $l1 = (long) b0;

        $r0 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(long,int)>($l1, 2);

        return $r0;
    }

    public static java.lang.String toHex(int)
    {
        int i0;
        long $l1;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r0 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(long,int)>($l1, 8);

        return $r0;
    }

    public static java.lang.String toHex(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(long,int)>(l0, 16);

        return $r0;
    }

    private static java.lang.String toHex(long, int)
    {
        long l1, $l5, $l6;
        char $c8;
        int[] $r2;
        java.lang.StringBuffer $r0;
        int i0, $i2, $i3, $i4, $i7, i9;
        char[] $r3;
        java.lang.String $r1;

        l1 := @parameter0: long;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(i0);

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        $r3 = <org.apache.poi.util.HexDump: char[] _hexcodes>;

        $r2 = <org.apache.poi.util.HexDump: int[] _shifts>;

        $i2 = 16 - i0;

        $i3 = i9 + $i2;

        $i4 = $r2[$i3];

        $l5 = l1 >> $i4;

        $l6 = $l5 & 15L;

        $i7 = (int) $l6;

        $c8 = $r3[$i7];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static void dump(java.io.InputStream, java.io.PrintStream, int, int) throws java.io.IOException
    {
        java.io.PrintStream r1;
        byte[] $r3;
        java.io.ByteArrayOutputStream $r4;
        int i0, $i1, i2, $i3, i4, i5, $i6, $i8, $i10, $i12, $i14;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.PrintStream;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $i8 = (int) -1;

        if i0 != $i8 goto label3;

        i4 = virtualinvoke r2.<java.io.InputStream: int read()>();

     label1:
        $i10 = (int) -1;

        if i4 == $i10 goto label2;

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(i4);

        i4 = virtualinvoke r2.<java.io.InputStream: int read()>();

        goto label1;

     label2:
        goto label6;

     label3:
        i5 = i0;

     label4:
        $i1 = i5;

        $i12 = (int) -1;

        i5 = i5 + $i12;

        if $i1 <= 0 goto label6;

        $i3 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i14 = (int) -1;

        if $i3 != $i14 goto label5;

        goto label6;

     label5:
        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i3);

        goto label4;

     label6:
        $r3 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i6 = lengthof $r3;

        staticinvoke <org.apache.poi.util.HexDump: void dump(byte[],long,java.io.OutputStream,int,int)>($r3, 0L, r1, i2, $i6);

        return;
    }

    private static char[] toHexChars(long, int)
    {
        long l2, $l3, l7;
        char $c5;
        int i0, $i1, $i4, i6, $i9;
        char[] r0, $r1;

        l2 := @parameter0: long;

        i0 := @parameter1: int;

        $i1 = i0 * 2;

        i6 = 2 + $i1;

        r0 = newarray (char)[i6];

        l7 = l2;

     label1:
        $i9 = (int) -1;

        i6 = i6 + $i9;

        $r1 = <org.apache.poi.util.HexDump: char[] _hexcodes>;

        $l3 = l7 & 15L;

        $i4 = (int) $l3;

        $c5 = $r1[$i4];

        r0[i6] = $c5;

        l7 = l7 >>> 4;

        if i6 > 1 goto label1;

        r0[0] = 48;

        r0[1] = 120;

        return r0;
    }

    public static char[] longToHex(long)
    {
        char[] $r0;
        long l0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <org.apache.poi.util.HexDump: char[] toHexChars(long,int)>(l0, 8);

        return $r0;
    }

    public static char[] intToHex(int)
    {
        int i0;
        char[] $r0;
        long $l1;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r0 = staticinvoke <org.apache.poi.util.HexDump: char[] toHexChars(long,int)>($l1, 4);

        return $r0;
    }

    public static char[] shortToHex(int)
    {
        int i0;
        char[] $r0;
        long $l1;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r0 = staticinvoke <org.apache.poi.util.HexDump: char[] toHexChars(long,int)>($l1, 2);

        return $r0;
    }

    public static char[] byteToHex(int)
    {
        int i0;
        char[] $r0;
        long $l1;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r0 = staticinvoke <org.apache.poi.util.HexDump: char[] toHexChars(long,int)>($l1, 1);

        return $r0;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r6;
        byte[] r5;
        java.io.BufferedInputStream $r3;
        java.lang.String[] r1;
        long $l0;
        java.io.FileInputStream $r4;
        java.io.File $r0;
        int $i1;
        java.lang.String $r2, $r7;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.io.File;

        $r2 = r1[0];

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = new java.io.BufferedInputStream;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

        $l0 = virtualinvoke $r0.<java.io.File: long length()>();

        $i1 = (int) $l0;

        r5 = newarray (byte)[$i1];

        virtualinvoke $r3.<java.io.InputStream: int read(byte[])>(r5);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String dump(byte[],long,int)>(r5, 0L, 0);

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return;
    }

    static void <clinit>()
    {
        int[] $r3;
        char[] $r2;
        java.lang.String $r0, $r1;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <org.apache.poi.util.HexDump: java.lang.String EOL> = $r0;

        $r1 = "0123456789ABCDEF";

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <org.apache.poi.util.HexDump: char[] _hexcodes> = $r2;

        $r3 = newarray (int)[16];

        $r3[0] = 60;

        $r3[1] = 56;

        $r3[2] = 52;

        $r3[3] = 48;

        $r3[4] = 44;

        $r3[5] = 40;

        $r3[6] = 36;

        $r3[7] = 32;

        $r3[8] = 28;

        $r3[9] = 24;

        $r3[10] = 20;

        $r3[11] = 16;

        $r3[12] = 12;

        $r3[13] = 8;

        $r3[14] = 4;

        $r3[15] = 0;

        <org.apache.poi.util.HexDump: int[] _shifts> = $r3;

        return;
    }
}
