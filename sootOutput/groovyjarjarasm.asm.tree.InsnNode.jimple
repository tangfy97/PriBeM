public class groovyjarjarasm.asm.tree.InsnNode extends groovyjarjarasm.asm.tree.AbstractInsnNode
{
    private static final groovyjarjarasm.asm.tree.InsnNode[] INSNS;

    public static final groovyjarjarasm.asm.tree.InsnNode getByOpcode(int)
    {
        int i0;
        groovyjarjarasm.asm.tree.InsnNode $r1;
        groovyjarjarasm.asm.tree.InsnNode[] $r0;

        i0 := @parameter0: int;

        $r0 = <groovyjarjarasm.asm.tree.InsnNode: groovyjarjarasm.asm.tree.InsnNode[] INSNS>;

        $r1 = $r0[i0];

        return $r1;
    }

    public void <init>(int)
    {
        int i0;
        groovyjarjarasm.asm.tree.InsnNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.InsnNode;

        i0 := @parameter0: int;

        specialinvoke r0.<groovyjarjarasm.asm.tree.AbstractInsnNode: void <init>(int)>(i0);

        return;
    }

    public void accept(groovyjarjarasm.asm.MethodVisitor)
    {
        int $i0;
        groovyjarjarasm.asm.tree.InsnNode r1;
        groovyjarjarasm.asm.MethodVisitor r0;

        r1 := @this: groovyjarjarasm.asm.tree.InsnNode;

        r0 := @parameter0: groovyjarjarasm.asm.MethodVisitor;

        $i0 = r1.<groovyjarjarasm.asm.tree.InsnNode: int opcode>;

        interfaceinvoke r0.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>($i0);

        return;
    }

    public int getType()
    {
        groovyjarjarasm.asm.tree.InsnNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.InsnNode;

        return 0;
    }

    static void <clinit>()
    {
        int $i0, i1;
        groovyjarjarasm.asm.tree.InsnNode $r2;
        groovyjarjarasm.asm.tree.InsnNode[] $r0, $r1, $r3;

        $r0 = newarray (groovyjarjarasm.asm.tree.InsnNode)[255];

        <groovyjarjarasm.asm.tree.InsnNode: groovyjarjarasm.asm.tree.InsnNode[] INSNS> = $r0;

        i1 = 0;

     label1:
        $r1 = <groovyjarjarasm.asm.tree.InsnNode: groovyjarjarasm.asm.tree.InsnNode[] INSNS>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = <groovyjarjarasm.asm.tree.InsnNode: groovyjarjarasm.asm.tree.InsnNode[] INSNS>;

        $r2 = new groovyjarjarasm.asm.tree.InsnNode;

        specialinvoke $r2.<groovyjarjarasm.asm.tree.InsnNode: void <init>(int)>(i1);

        $r3[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
