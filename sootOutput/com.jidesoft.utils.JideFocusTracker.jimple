public class com.jidesoft.utils.JideFocusTracker extends java.lang.Object
{
    protected java.awt.Component compHeighest;
    protected java.awt.event.FocusListener listenerFocus;
    protected java.awt.event.ContainerListener listenerContainer;
    protected transient java.awt.event.FocusListener listenerMultiCast;
    protected boolean repeat;
    protected transient java.awt.Component lastFocus;

    public void <init>()
    {
        com.jidesoft.utils.JideFocusTracker$MainContainerListener $r2;
        com.jidesoft.utils.JideFocusTracker r0;
        com.jidesoft.utils.JideFocusTracker$MainFocusListener $r1;

        r0 := @this: com.jidesoft.utils.JideFocusTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerFocus> = null;

        r0.<com.jidesoft.utils.JideFocusTracker: java.awt.event.ContainerListener listenerContainer> = null;

        r0.<com.jidesoft.utils.JideFocusTracker: java.awt.Component lastFocus> = null;

        virtualinvoke r0.<com.jidesoft.utils.JideFocusTracker: void setRepeating(boolean)>(1);

        $r1 = new com.jidesoft.utils.JideFocusTracker$MainFocusListener;

        specialinvoke $r1.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: void <init>(com.jidesoft.utils.JideFocusTracker)>(r0);

        r0.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerFocus> = $r1;

        $r2 = new com.jidesoft.utils.JideFocusTracker$MainContainerListener;

        specialinvoke $r2.<com.jidesoft.utils.JideFocusTracker$MainContainerListener: void <init>(com.jidesoft.utils.JideFocusTracker)>(r0);

        r0.<com.jidesoft.utils.JideFocusTracker: java.awt.event.ContainerListener listenerContainer> = $r2;

        return;
    }

    public void <init>(java.awt.Component)
    {
        com.jidesoft.utils.JideFocusTracker r0;
        java.awt.Component r1;

        r0 := @this: com.jidesoft.utils.JideFocusTracker;

        r1 := @parameter0: java.awt.Component;

        specialinvoke r0.<com.jidesoft.utils.JideFocusTracker: void <init>()>();

        virtualinvoke r0.<com.jidesoft.utils.JideFocusTracker: void setHeighestComponent(java.awt.Component)>(r1);

        return;
    }

    public void setHeighestComponent(java.awt.Component)
    {
        java.lang.Throwable $r5, $r6;
        java.lang.Object $r3, $r4;
        com.jidesoft.utils.JideFocusTracker r0;
        java.awt.Component r1, r2;

        r0 := @this: com.jidesoft.utils.JideFocusTracker;

        r2 := @parameter0: java.awt.Component;

        r1 = r0.<com.jidesoft.utils.JideFocusTracker: java.awt.Component compHeighest>;

        if r1 == null goto label05;

        $r4 = virtualinvoke r1.<java.awt.Component: java.lang.Object getTreeLock()>();

        entermonitor $r4;

     label01:
        virtualinvoke r0.<com.jidesoft.utils.JideFocusTracker: void removeInternalListeners(java.awt.Component)>(r1);

        exitmonitor $r4;

     label02:
        goto label05;

     label03:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label04:
        throw $r6;

     label05:
        if r2 == null goto label10;

        $r3 = virtualinvoke r2.<java.awt.Component: java.lang.Object getTreeLock()>();

        entermonitor $r3;

     label06:
        virtualinvoke r0.<com.jidesoft.utils.JideFocusTracker: void addInternalListeners(java.awt.Component)>(r2);

        exitmonitor $r3;

     label07:
        goto label10;

     label08:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label09:
        throw $r5;

     label10:
        r0.<com.jidesoft.utils.JideFocusTracker: java.awt.Component compHeighest> = r2;

        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.awt.Component getHeighestComponent()
    {
        com.jidesoft.utils.JideFocusTracker r0;
        java.awt.Component $r1;

        r0 := @this: com.jidesoft.utils.JideFocusTracker;

        $r1 = r0.<com.jidesoft.utils.JideFocusTracker: java.awt.Component compHeighest>;

        return $r1;
    }

    public boolean isRepeating()
    {
        com.jidesoft.utils.JideFocusTracker r0;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.JideFocusTracker;

        $z0 = r0.<com.jidesoft.utils.JideFocusTracker: boolean repeat>;

        return $z0;
    }

    public void setRepeating(boolean)
    {
        com.jidesoft.utils.JideFocusTracker r0;
        boolean z0;

        r0 := @this: com.jidesoft.utils.JideFocusTracker;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.utils.JideFocusTracker: boolean repeat> = z0;

        return;
    }

    public synchronized void addFocusListener(java.awt.event.FocusListener)
    {
        java.awt.event.FocusListener r1, $r2, $r3;
        com.jidesoft.utils.JideFocusTracker r0;

        r0 := @this: com.jidesoft.utils.JideFocusTracker;

        r1 := @parameter0: java.awt.event.FocusListener;

        $r2 = r0.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerMultiCast>;

        $r3 = staticinvoke <java.awt.AWTEventMulticaster: java.awt.event.FocusListener add(java.awt.event.FocusListener,java.awt.event.FocusListener)>($r2, r1);

        r0.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerMultiCast> = $r3;

        return;
    }

    public synchronized void removeFocusListener(java.awt.event.FocusListener)
    {
        java.awt.event.FocusListener r1, $r2, $r3;
        com.jidesoft.utils.JideFocusTracker r0;

        r0 := @this: com.jidesoft.utils.JideFocusTracker;

        r1 := @parameter0: java.awt.event.FocusListener;

        $r2 = r0.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerMultiCast>;

        $r3 = staticinvoke <java.awt.AWTEventMulticaster: java.awt.event.FocusListener remove(java.awt.event.FocusListener,java.awt.event.FocusListener)>($r2, r1);

        r0.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerMultiCast> = $r3;

        return;
    }

    protected void addInternalListeners(java.awt.Component)
    {
        java.awt.event.FocusListener $r2;
        java.awt.Component r0, $r5;
        java.awt.event.ContainerListener $r4;
        int $i0, i1;
        java.awt.Container r3;
        com.jidesoft.utils.JideFocusTracker r1;
        boolean $z0;

        r1 := @this: com.jidesoft.utils.JideFocusTracker;

        r0 := @parameter0: java.awt.Component;

        $r2 = r1.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerFocus>;

        virtualinvoke r0.<java.awt.Component: void addFocusListener(java.awt.event.FocusListener)>($r2);

        $z0 = r0 instanceof java.awt.Container;

        if $z0 == 0 goto label2;

        r3 = (java.awt.Container) r0;

        $r4 = r1.<com.jidesoft.utils.JideFocusTracker: java.awt.event.ContainerListener listenerContainer>;

        virtualinvoke r3.<java.awt.Container: void addContainerListener(java.awt.event.ContainerListener)>($r4);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r3.<java.awt.Container: int getComponentCount()>();

        if i1 >= $i0 goto label2;

        $r5 = virtualinvoke r3.<java.awt.Container: java.awt.Component getComponent(int)>(i1);

        virtualinvoke r1.<com.jidesoft.utils.JideFocusTracker: void addInternalListeners(java.awt.Component)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void removeInternalListeners(java.awt.Component)
    {
        java.awt.event.FocusListener $r2;
        java.awt.Component r0, $r5;
        java.awt.event.ContainerListener $r4;
        int $i0, i1;
        java.awt.Container r3;
        com.jidesoft.utils.JideFocusTracker r1;
        boolean $z0;

        r1 := @this: com.jidesoft.utils.JideFocusTracker;

        r0 := @parameter0: java.awt.Component;

        $r2 = r1.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerFocus>;

        virtualinvoke r0.<java.awt.Component: void removeFocusListener(java.awt.event.FocusListener)>($r2);

        $z0 = r0 instanceof java.awt.Container;

        if $z0 == 0 goto label2;

        r3 = (java.awt.Container) r0;

        $r4 = r1.<com.jidesoft.utils.JideFocusTracker: java.awt.event.ContainerListener listenerContainer>;

        virtualinvoke r3.<java.awt.Container: void removeContainerListener(java.awt.event.ContainerListener)>($r4);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r3.<java.awt.Container: int getComponentCount()>();

        if i1 >= $i0 goto label2;

        $r5 = virtualinvoke r3.<java.awt.Container: java.awt.Component getComponent(int)>(i1);

        virtualinvoke r1.<com.jidesoft.utils.JideFocusTracker: void removeInternalListeners(java.awt.Component)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
