public class org.apache.commons.httpclient.HttpURL extends org.apache.commons.httpclient.URI
{
    public static final char[] DEFAULT_SCHEME;
    public static final char[] _default_scheme;
    public static final int DEFAULT_PORT;
    public static final int _default_port;
    static final long serialVersionUID;

    protected void <init>()
    {
        org.apache.commons.httpclient.HttpURL r0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        return;
    }

    public void <init>(char[], java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] r3;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r3 := @parameter0: char[];

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpURL: java.lang.String protocolCharset> = r1;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r3);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>($r2, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }

    public void <init>(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        char[] r2;
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r2 := @parameter0: char[];

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>($r1, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpURL: java.lang.String protocolCharset> = r1;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>(r2, 0);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>(r1, 0);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, null, r1, i0, r2, null, null);

        return;
    }

    public void <init>(java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, null, r1, i0, r2, r3, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i1;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $i1, null, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, null, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, r4, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, r4, r5, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i1;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, null, r1, $i1, r2, r3, r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i1;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $i1, r3, r4, r5);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, i0, r3, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, i0, r3, r4, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r21;
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.StringBuffer $r20;
        int i0, $i2, $i4;
        java.lang.String r2, r3, r4, r5, r6, $r7, $r9, $r11, $r14, $r17;
        boolean $z0;
        char[] $r18, $r19;
        java.util.BitSet $r8, $r10, $r12, $r13, $r16;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        if r2 != null goto label1;

        if r3 != null goto label1;

        $i2 = (int) -1;

        if i0 == $i2 goto label4;

     label1:
        $r18 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme> = $r18;

        $r19 = <org.apache.commons.httpclient.HttpURL: char[] _default_scheme>;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r19);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("://");

        if r2 == null goto label2;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label2:
        if r3 == null goto label4;

        $r16 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host>;

        $r17 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r3, $r16);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $i4 = (int) -1;

        if i0 != $i4 goto label3;

        if i0 == 80 goto label4;

     label3:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

     label4:
        if r4 == null goto label6;

        $r12 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet scheme>;

        if $r12 == null goto label5;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label5;

        $r21 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r21.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "abs_path requested");

        throw $r21;

     label5:
        $r13 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r14 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r4, $r13);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label6:
        if r5 == null goto label7;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r10 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r11 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r5, $r10);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label7:
        if r6 == null goto label8;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        $r9 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r6, $r8);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label8:
        $r7 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>($r7, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0;
        java.lang.String r1, r2, $r3, r4, r5, r6, r7;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        $r3 = staticinvoke <org.apache.commons.httpclient.HttpURL: java.lang.String toUserinfo(java.lang.String,java.lang.String)>(r1, r2);

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r3, r4, i0, r5, r6, r7);

        return;
    }

    protected static java.lang.String toUserinfo(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.StringBuffer $r1;
        java.lang.String r0, $r3, r4, $r6, $r7, $r8;
        java.util.BitSet $r2, $r5;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(20);

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo>;

        $r3 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r0, $r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        if r4 != null goto label2;

        $r8 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo>;

        $r6 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r4, $r5);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public void <init>(org.apache.commons.httpclient.HttpURL, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0, r1, $r2;
        java.lang.String r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: org.apache.commons.httpclient.HttpURL;

        r3 := @parameter1: java.lang.String;

        $r2 = new org.apache.commons.httpclient.HttpURL;

        specialinvoke $r2.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String)>(r3);

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(org.apache.commons.httpclient.HttpURL,org.apache.commons.httpclient.HttpURL)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.commons.httpclient.HttpURL, org.apache.commons.httpclient.HttpURL) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0, r1, r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: org.apache.commons.httpclient.HttpURL;

        r2 := @parameter1: org.apache.commons.httpclient.HttpURL;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(org.apache.commons.httpclient.URI,org.apache.commons.httpclient.URI)>(r1, r2);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }

    public char[] getRawScheme()
    {
        char[] $r1, $r2;
        org.apache.commons.httpclient.HttpURL r0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

     label2:
        return $r2;
    }

    public java.lang.String getScheme()
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

     label2:
        return $r3;
    }

    public int getPort()
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = 80;

        goto label2;

     label1:
        $i1 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

     label2:
        return $i1;
    }

    public void setRawUserinfo(char[], char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r31, $r32;
        boolean $z0, $z1;
        org.apache.commons.httpclient.HttpURL r2;
        java.lang.StringBuffer $r8, $r10, $r11, $r12, $r17, $r18, $r19, $r21, $r22, $r23, $r35, $r36, $r38, $r39;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r13, $r24, $r28, $r29, $r30, $r33, $r34, $r37;
        char[] r0, r5, $r15, $r25, $r26;
        java.util.BitSet $r3, $r27;

        r2 := @this: org.apache.commons.httpclient.HttpURL;

        r0 := @parameter0: char[];

        r5 := @parameter1: char[];

        if r0 == null goto label01;

        $i0 = lengthof r0;

        if $i0 != 0 goto label02;

     label01:
        $r31 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r31.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "user required");

        throw $r31;

     label02:
        $r3 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $z0 = virtualinvoke r2.<org.apache.commons.httpclient.HttpURL: boolean validate(char[],java.util.BitSet)>(r0, $r3);

        if $z0 == 0 goto label03;

        if r5 == null goto label04;

        $r27 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $z1 = virtualinvoke r2.<org.apache.commons.httpclient.HttpURL: boolean validate(char[],java.util.BitSet)>(r5, $r27);

        if $z1 != 0 goto label04;

     label03:
        $r32 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r32.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped userinfo not valid");

        throw $r32;

     label04:
        $r33 = new java.lang.String;

        specialinvoke $r33.<java.lang.String: void <init>(char[])>(r0);

        if r5 != null goto label05;

        $r28 = null;

        goto label06;

     label05:
        $r34 = new java.lang.String;

        $r28 = $r34;

        specialinvoke $r34.<java.lang.String: void <init>(char[])>(r5);

     label06:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        if $r28 != null goto label07;

        $r29 = "";

        goto label08;

     label07:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r29 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label08:
        $r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = new java.lang.String;

        $r15 = virtualinvoke r2.<org.apache.commons.httpclient.HttpURL: char[] getRawHost()>();

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r15);

        $i1 = r2.<org.apache.commons.httpclient.HttpURL: int _port>;

        $i4 = (int) -1;

        if $i1 != $i4 goto label09;

        $r30 = $r37;

        goto label10;

     label09:
        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i2 = r2.<org.apache.commons.httpclient.HttpURL: int _port>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r30 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

     label10:
        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r25 = virtualinvoke $r13.<java.lang.String: char[] toCharArray()>();

        r2.<org.apache.commons.httpclient.HttpURL: char[] _userinfo> = $r25;

        $r26 = virtualinvoke $r24.<java.lang.String: char[] toCharArray()>();

        r2.<org.apache.commons.httpclient.HttpURL: char[] _authority> = $r26;

        virtualinvoke r2.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;
    }

    public void setEscapedUserinfo(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r2, $r4;
        java.lang.String r1, r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        if r3 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

     label2:
        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawUserinfo(char[],char[])>($r2, $r4);

        return;
    }

    public void setUserinfo(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r4, $r7;
        java.lang.String $r1, r2, r5;
        java.util.BitSet $r3, $r6;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r3 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $r4 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r2, $r3, $r1);

        if r5 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r6 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $r7 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r5, $r6, $r1);

     label2:
        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawUserinfo(char[],char[])>($r4, $r7);

        return;
    }

    public void setRawUser(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r30, $r31;
        boolean $z0;
        org.apache.commons.httpclient.HttpURL r2;
        java.lang.StringBuffer $r7, $r9, $r10, $r11, $r16, $r17, $r18, $r20, $r21, $r22, $r34, $r35, $r37, $r38;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r12, $r23, $r27, $r28, $r29, $r32, $r33, $r36;
        char[] r0, $r5, $r14, $r24, $r25;
        java.util.BitSet $r3;

        r2 := @this: org.apache.commons.httpclient.HttpURL;

        r0 := @parameter0: char[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        $r30 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r30.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "user required");

        throw $r30;

     label2:
        $r3 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $z0 = virtualinvoke r2.<org.apache.commons.httpclient.HttpURL: boolean validate(char[],java.util.BitSet)>(r0, $r3);

        if $z0 != 0 goto label3;

        $r31 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r31.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped user not valid");

        throw $r31;

     label3:
        $r32 = new java.lang.String;

        specialinvoke $r32.<java.lang.String: void <init>(char[])>(r0);

        $r5 = virtualinvoke r2.<org.apache.commons.httpclient.HttpURL: char[] getRawPassword()>();

        if $r5 != null goto label4;

        $r27 = null;

        goto label5;

     label4:
        $r33 = new java.lang.String;

        $r27 = $r33;

        specialinvoke $r33.<java.lang.String: void <init>(char[])>($r5);

     label5:
        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        if $r27 != null goto label6;

        $r28 = "";

        goto label7;

     label6:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r28 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label7:
        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r36 = new java.lang.String;

        $r14 = virtualinvoke r2.<org.apache.commons.httpclient.HttpURL: char[] getRawHost()>();

        specialinvoke $r36.<java.lang.String: void <init>(char[])>($r14);

        $i1 = r2.<org.apache.commons.httpclient.HttpURL: int _port>;

        $i4 = (int) -1;

        if $i1 != $i4 goto label8;

        $r29 = $r36;

        goto label9;

     label8:
        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i2 = r2.<org.apache.commons.httpclient.HttpURL: int _port>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r29 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

     label9:
        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        $r24 = virtualinvoke $r12.<java.lang.String: char[] toCharArray()>();

        r2.<org.apache.commons.httpclient.HttpURL: char[] _userinfo> = $r24;

        $r25 = virtualinvoke $r23.<java.lang.String: char[] toCharArray()>();

        r2.<org.apache.commons.httpclient.HttpURL: char[] _authority> = $r25;

        virtualinvoke r2.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;
    }

    public void setEscapedUser(java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        char[] $r2;
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawUser(char[])>($r2);

        return;
    }

    public void setUser(java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r4;
        java.lang.String r1, $r3;
        java.util.BitSet $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_userinfo>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r1, $r2, $r3);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawUser(char[])>($r4);

        return;
    }

    public char[] getRawUser()
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0, $i1, $i3;
        char[] $r1, $r2, $r3, r4, $r5, $r6;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: int indexFirstOf(char[],char)>($r3, 58);

        $i3 = (int) -1;

        if $i1 != $i3 goto label3;

        $r6 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        return $r6;

     label3:
        r4 = newarray (char)[$i1];

        $r5 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i1);

        return r4;
    }

    public java.lang.String getEscapedUser()
    {
        char[] $r1;
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getUser() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r3 = staticinvoke <org.apache.commons.httpclient.HttpURL: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

     label2:
        return $r3;
    }

    public void setRawPassword(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r32, $r33;
        boolean $z0;
        org.apache.commons.httpclient.HttpURL r1;
        java.lang.StringBuffer $r8, $r10, $r11, $r12, $r17, $r18, $r19, $r21, $r22, $r23, $r36, $r37, $r39, $r40;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r13, $r24, $r29, $r30, $r31, $r34, $r35, $r38;
        char[] r0, $r2, $r4, $r6, $r15, $r25, $r26;
        java.util.BitSet $r27;

        r1 := @this: org.apache.commons.httpclient.HttpURL;

        r0 := @parameter0: char[];

        if r0 == null goto label1;

        $r27 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $z0 = virtualinvoke r1.<org.apache.commons.httpclient.HttpURL: boolean validate(char[],java.util.BitSet)>(r0, $r27);

        if $z0 != 0 goto label1;

        $r32 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r32.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped password not valid");

        throw $r32;

     label1:
        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        if $r2 == null goto label2;

        $r4 = virtualinvoke r1.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        $i0 = lengthof $r4;

        if $i0 != 0 goto label3;

     label2:
        $r33 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r33.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "username required");

        throw $r33;

     label3:
        $r34 = new java.lang.String;

        $r6 = virtualinvoke r1.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r6);

        if r0 != null goto label4;

        $r29 = null;

        goto label5;

     label4:
        $r35 = new java.lang.String;

        $r29 = $r35;

        specialinvoke $r35.<java.lang.String: void <init>(char[])>(r0);

     label5:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        if $r29 != null goto label6;

        $r30 = "";

        goto label7;

     label6:
        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r30 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label7:
        $r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r38 = new java.lang.String;

        $r15 = virtualinvoke r1.<org.apache.commons.httpclient.HttpURL: char[] getRawHost()>();

        specialinvoke $r38.<java.lang.String: void <init>(char[])>($r15);

        $i1 = r1.<org.apache.commons.httpclient.HttpURL: int _port>;

        $i4 = (int) -1;

        if $i1 != $i4 goto label8;

        $r31 = $r38;

        goto label9;

     label8:
        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i2 = r1.<org.apache.commons.httpclient.HttpURL: int _port>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r31 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

     label9:
        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r25 = virtualinvoke $r13.<java.lang.String: char[] toCharArray()>();

        r1.<org.apache.commons.httpclient.HttpURL: char[] _userinfo> = $r25;

        $r26 = virtualinvoke $r24.<java.lang.String: char[] toCharArray()>();

        r1.<org.apache.commons.httpclient.HttpURL: char[] _authority> = $r26;

        virtualinvoke r1.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;
    }

    public void setEscapedPassword(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        char[] $r2;
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

     label2:
        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawPassword(char[])>($r2);

        return;
    }

    public void setPassword(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r4;
        java.lang.String r1, $r3;
        java.util.BitSet $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_userinfo>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r1, $r2, $r3);

     label2:
        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawPassword(char[])>($r4);

        return;
    }

    public char[] getRawPassword()
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0, $i1, $i2, i3, $i4, $i6;
        char[] $r1, $r2, r3, $r4;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: int indexFirstOf(char[],char)>($r1, 58);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i1 = lengthof $r2;

        $i2 = $i1 - $i0;

        i3 = $i2 - 1;

        r3 = newarray (char)[i3];

        $r4 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i4 = $i0 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i4, r3, 0, i3);

        return r3;
    }

    public java.lang.String getEscapedPassword()
    {
        char[] $r1;
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawPassword()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getPassword() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawPassword()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r3 = staticinvoke <org.apache.commons.httpclient.HttpURL: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

     label2:
        return $r3;
    }

    public char[] getRawCurrentHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0;
        char[] $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label2;

     label1:
        $r4 = <org.apache.commons.httpclient.HttpURL: char[] rootPath>;

        goto label3;

     label2:
        $r3 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        $r4 = specialinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath(char[])>($r3);

     label3:
        return $r4;
    }

    public char[] getRawAboveHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0;
        char[] $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawCurrentHierPath()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.HttpURL: char[] rootPath>;

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawCurrentHierPath(char[])>($r1);

     label3:
        return $r2;
    }

    public char[] getRawPath()
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0;
        char[] $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = specialinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPath()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.HttpURL: char[] rootPath>;

        goto label3;

     label2:
        $r2 = $r1;

     label3:
        return $r2;
    }

    public void setQuery(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r1;
        java.lang.StringBuffer $r0;
        char[] $r5, $r8, $r10;
        java.lang.String $r2, r3, r6, $r9;
        java.util.BitSet $r4, $r7;

        r1 := @this: org.apache.commons.httpclient.HttpURL;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r4 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_query>;

        $r5 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r3, $r4, $r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r7 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_query>;

        $r8 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r6, $r7, $r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: char[] toCharArray()>();

        r1.<org.apache.commons.httpclient.HttpURL: char[] _query> = $r10;

        virtualinvoke r1.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;
    }

    public void setQuery(java.lang.String[], java.lang.String[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        java.lang.String[] r0, r1;
        org.apache.commons.httpclient.URIException $r13;
        org.apache.commons.httpclient.HttpURL r3;
        java.lang.StringBuffer $r2;
        int i0, $i1, $i2, i3;
        java.lang.String $r4, $r5, $r8, $r11;
        char[] $r6, $r9, $r12;
        java.util.BitSet $r7, $r10;

        r3 := @this: org.apache.commons.httpclient.HttpURL;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        i0 = lengthof r0;

        $i1 = lengthof r1;

        if i0 == $i1 goto label1;

        $r13 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r13.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("wrong array size of query");

        throw $r13;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r3.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        $r8 = r0[i3];

        $r7 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_query>;

        $r9 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r8, $r7, $r4);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r11 = r1[i3];

        $r10 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_query>;

        $r12 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r11, $r10, $r4);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        $i2 = i3 + 1;

        if $i2 >= i0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(38);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        r3.<org.apache.commons.httpclient.HttpURL: char[] _query> = $r6;

        virtualinvoke r3.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;
    }

    protected void checkValid() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1, $r2, $r3;
        org.apache.commons.httpclient.URIException $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        $r1 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: boolean equals(char[],char[])>($r2, $r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        if $r3 == null goto label1;

        $r4 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r4.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "wrong class use");

        throw $r4;

     label1:
        return;
    }

    protected void setURI()
    {
        org.apache.commons.httpclient.HttpURL r1;
        java.lang.StringBuffer $r18;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r4;
        boolean $z0, $z1;
        char[] $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        r1 := @this: org.apache.commons.httpclient.HttpURL;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        if $r2 == null goto label1;

        $r15 = r1.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r15);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        $z0 = r1.<org.apache.commons.httpclient.HttpURL: boolean _is_net_path>;

        if $z0 == 0 goto label3;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        $r10 = r1.<org.apache.commons.httpclient.HttpURL: char[] _authority>;

        if $r10 == null goto label3;

        $r11 = r1.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        if $r11 == null goto label2;

        $r13 = r1.<org.apache.commons.httpclient.HttpURL: char[] _host>;

        if $r13 == null goto label3;

        $r14 = r1.<org.apache.commons.httpclient.HttpURL: char[] _host>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r14);

        $i1 = r1.<org.apache.commons.httpclient.HttpURL: int _port>;

        $i4 = (int) -1;

        if $i1 == $i4 goto label3;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i2 = r1.<org.apache.commons.httpclient.HttpURL: int _port>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        goto label3;

     label2:
        $r12 = r1.<org.apache.commons.httpclient.HttpURL: char[] _authority>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

     label3:
        $r16 = r1.<org.apache.commons.httpclient.HttpURL: char[] _opaque>;

        if $r16 == null goto label4;

        $z1 = r1.<org.apache.commons.httpclient.HttpURL: boolean _is_opaque_part>;

        if $z1 == 0 goto label4;

        $r9 = r1.<org.apache.commons.httpclient.HttpURL: char[] _opaque>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);

        goto label5;

     label4:
        $r3 = r1.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        if $r3 == null goto label5;

        $r7 = r1.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        $i0 = lengthof $r7;

        if $i0 == 0 goto label5;

        $r8 = r1.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

     label5:
        $r17 = r1.<org.apache.commons.httpclient.HttpURL: char[] _query>;

        if $r17 == null goto label6;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r6 = r1.<org.apache.commons.httpclient.HttpURL: char[] _query>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

     label6:
        $r4 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        r1.<org.apache.commons.httpclient.HttpURL: char[] _uri> = $r5;

        r1.<org.apache.commons.httpclient.HttpURL: int hash> = 0;

        return;
    }

    static void <clinit>()
    {
        char[] $r0, $r1;

        <org.apache.commons.httpclient.HttpURL: long serialVersionUID> = -7158031098595039459L;

        <org.apache.commons.httpclient.HttpURL: int _default_port> = 80;

        <org.apache.commons.httpclient.HttpURL: int DEFAULT_PORT> = 80;

        $r0 = newarray (char)[4];

        $r0[0] = 104;

        $r0[1] = 116;

        $r0[2] = 116;

        $r0[3] = 112;

        <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME> = $r0;

        $r1 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        <org.apache.commons.httpclient.HttpURL: char[] _default_scheme> = $r1;

        return;
    }
}
