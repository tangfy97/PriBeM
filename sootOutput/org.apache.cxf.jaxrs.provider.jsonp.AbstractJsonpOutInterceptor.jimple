public abstract class org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{

    protected void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>(r1);

        return;
    }

    protected java.lang.String getCallbackValue(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor r4;
        org.apache.cxf.message.Exchange $r1;

        r4 := @this: org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("JSONP.CALLBACK");

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    protected void writeValue(org.apache.cxf.message.Message, java.lang.String) throws org.apache.cxf.interceptor.Fault
    {
        byte[] $r5;
        org.apache.cxf.message.Message r0;
        javax.servlet.http.HttpServletResponse r2;
        java.io.IOException $r6;
        org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor r8;
        org.apache.cxf.interceptor.Fault $r7;
        javax.servlet.ServletOutputStream $r3;
        java.lang.Object $r1;
        java.lang.String r4;

        r8 := @this: org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r4 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("HTTP.RESPONSE");

        r2 = (javax.servlet.http.HttpServletResponse) $r1;

     label1:
        $r3 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r5 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r3.<javax.servlet.ServletOutputStream: void write(byte[])>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r7.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
