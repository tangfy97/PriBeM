public final class org.apache.xml.serializer.WriterToUTF8Buffered extends java.io.Writer
{
    private static final int BYTES_MAX;
    private static final int CHARS_MAX;
    private final java.io.OutputStream m_os;
    private final byte[] m_outputBytes;
    private final char[] m_inputChars;
    private int count;

    public void <init>(java.io.OutputStream) throws java.io.UnsupportedEncodingException
    {
        java.io.OutputStream r1;
        byte[] $r2;
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        char[] $r3;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os> = r1;

        $r2 = newarray (byte)[16387];

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes> = $r2;

        $r3 = newarray (char)[5462];

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars> = $r3;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = 0;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        byte $b6, $b12, $b17, $b22, $b27, $b30;
        int $i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i28, $i29;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        if $i0 < 16384 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

     label1:
        if i1 >= 128 goto label2;

        $r6 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i28 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i29 = $i28 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i29;

        $b30 = (byte) i1;

        $r6[$i28] = $b30;

        goto label4;

     label2:
        if i1 >= 2048 goto label3;

        $r4 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i18 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i19 = $i18 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i19;

        $i20 = i1 >> 6;

        $i21 = 192 + $i20;

        $b22 = (byte) $i21;

        $r4[$i18] = $b22;

        $r5 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i23 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i24 = $i23 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i24;

        $i25 = i1 & 63;

        $i26 = 128 + $i25;

        $b27 = (byte) $i26;

        $r5[$i23] = $b27;

        goto label4;

     label3:
        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i3 = $i2 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i3;

        $i4 = i1 >> 12;

        $i5 = 224 + $i4;

        $b6 = (byte) $i5;

        $r1[$i2] = $b6;

        $r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i7 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i8 = $i7 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i8;

        $i9 = i1 >> 6;

        $i10 = $i9 & 63;

        $i11 = 128 + $i10;

        $b12 = (byte) $i11;

        $r2[$i7] = $b12;

        $r3 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i13 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i14 = $i13 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i14;

        $i15 = i1 & 63;

        $i16 = 128 + $i15;

        $b17 = (byte) $i16;

        $r3[$i13] = $b17;

     label4:
        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        byte $b7, $b11, $b14, $b17, $b20, $b22, $b25;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i8, $i9, $i10, $i13, $i15, $i16, $i19, $i21, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, i37, i38, i39, i41, i42, i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51;
        char $c12, $c18, $c23, c40;
        char[] r1;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r1 := @parameter0: char[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = 3 * i0;

        $i2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i3 = 16384 - $i2;

        if i1 < $i3 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        if i1 < 16384 goto label03;

        $i27 = i0 / 5461;

        i33 = 1 + $i27;

        i34 = 0;

        goto label02;

     label01:
        $i28 = i0 * i34;

        $i29 = $i28 / i33;

        i35 = i4 + $i29;

        $i30 = i34 + 1;

        $i31 = i0 * $i30;

        $i32 = $i31 / i33;

        i36 = i4 + $i32;

        i37 = i36 - i35;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void write(char[],int,int)>(r1, i35, i37);

        i34 = i34 + 1;

     label02:
        if i34 < i33 goto label01;

        return;

     label03:
        $i26 = i0 + i4;

        $r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i38 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        i39 = i4;

        goto label05;

     label04:
        $i24 = i38;

        i38 = i38 + 1;

        $b25 = (byte) $c23;

        $r2[$i24] = $b25;

        i39 = i39 + 1;

     label05:
        if i39 >= $i26 goto label06;

        $c23 = r1[i39];

        $i44 = (int) $c23;

        if $i44 < 128 goto label04;

     label06:
        goto label11;

     label07:
        c40 = r1[i39];

        $i45 = (int) c40;

        if $i45 >= 128 goto label08;

        $i21 = i38;

        i38 = i38 + 1;

        $b22 = (byte) c40;

        $r2[$i21] = $b22;

        goto label10;

     label08:
        $i46 = (int) c40;

        if $i46 >= 2048 goto label09;

        i41 = i38 + 1;

        $i47 = (int) c40;

        $i15 = $i47 >> 6;

        $i16 = 192 + $i15;

        $b17 = (byte) $i16;

        $r2[i38] = $b17;

        i38 = i41 + 1;

        $c18 = c40 & 63;

        $i48 = (int) $c18;

        $i19 = 128 + $i48;

        $b20 = (byte) $i19;

        $r2[i41] = $b20;

        goto label10;

     label09:
        i42 = i38 + 1;

        $i49 = (int) c40;

        $i5 = $i49 >> 12;

        $i6 = 224 + $i5;

        $b7 = (byte) $i6;

        $r2[i38] = $b7;

        i43 = i42 + 1;

        $i50 = (int) c40;

        $i8 = $i50 >> 6;

        $i9 = $i8 & 63;

        $i10 = 128 + $i9;

        $b11 = (byte) $i10;

        $r2[i42] = $b11;

        i38 = i43 + 1;

        $c12 = c40 & 63;

        $i51 = (int) $c12;

        $i13 = 128 + $i51;

        $b14 = (byte) $i13;

        $r2[i43] = $b14;

     label10:
        i39 = i39 + 1;

     label11:
        if i39 < $i26 goto label07;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = i38;

        return;
    }

    private void directWrite(char[], int, int) throws java.io.IOException
    {
        byte[] $r1;
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        byte $b5;
        int i0, $i1, $i2, i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19;
        char[] r2;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r2 := @parameter0: char[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i2 = 16384 - $i1;

        if i0 < $i2 goto label3;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        if i0 < 16384 goto label3;

        $i7 = i0 / 5461;

        i14 = 1 + $i7;

        i15 = 0;

        goto label2;

     label1:
        $i8 = i0 * i15;

        $i9 = $i8 / i14;

        i16 = i3 + $i9;

        $i10 = i15 + 1;

        $i11 = i0 * $i10;

        $i12 = $i11 / i14;

        i17 = i3 + $i12;

        i13 = i17 - i16;

        specialinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void directWrite(char[],int,int)>(r2, i16, i13);

        i15 = i15 + 1;

     label2:
        if i15 < i14 goto label1;

        return;

     label3:
        $i6 = i0 + i3;

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i18 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        i19 = i3;

        goto label5;

     label4:
        $i4 = i18;

        i18 = i18 + 1;

        $b5 = $r1[i19];

        $r1[$i4] = $b5;

        i19 = i19 + 1;

     label5:
        if i19 < $i6 goto label4;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = i18;

        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        byte[] $r4;
        org.apache.xml.serializer.WriterToUTF8Buffered r1;
        byte $b6, $b10, $b13, $b16, $b19, $b21, $b24;
        int $i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i12, $i14, $i15, $i18, $i20, $i23, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i33, i34, i35, i36, i37, i39, i40, i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49;
        java.lang.String r0;
        char $c11, $c17, $c22, c38;
        char[] $r2, $r3, $r5, $r6;

        r1 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = 3 * $i0;

        $i2 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i3 = 16384 - $i2;

        if i1 < $i3 goto label03;

        virtualinvoke r1.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        if i1 < 16384 goto label03;

        $i25 = $i0 / 5461;

        i31 = 1 + $i25;

        i32 = 0;

        goto label02;

     label01:
        $i26 = $i0 * i32;

        $i27 = $i26 / i31;

        i33 = 0 + $i27;

        $i28 = i32 + 1;

        $i29 = $i0 * $i28;

        $i30 = $i29 / i31;

        i34 = 0 + $i30;

        i35 = i34 - i33;

        $r5 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(i33, i34, $r5, 0);

        $r6 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r1.<org.apache.xml.serializer.WriterToUTF8Buffered: void write(char[],int,int)>($r6, 0, i35);

        i32 = i32 + 1;

     label02:
        if i32 < i31 goto label01;

        return;

     label03:
        $r2 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r2, 0);

        $r3 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        $r4 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i36 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        i37 = 0;

        goto label05;

     label04:
        $i23 = i36;

        i36 = i36 + 1;

        $b24 = (byte) $c22;

        $r4[$i23] = $b24;

        i37 = i37 + 1;

     label05:
        if i37 >= $i0 goto label06;

        $c22 = $r3[i37];

        $i42 = (int) $c22;

        if $i42 < 128 goto label04;

     label06:
        goto label11;

     label07:
        c38 = $r3[i37];

        $i43 = (int) c38;

        if $i43 >= 128 goto label08;

        $i20 = i36;

        i36 = i36 + 1;

        $b21 = (byte) c38;

        $r4[$i20] = $b21;

        goto label10;

     label08:
        $i44 = (int) c38;

        if $i44 >= 2048 goto label09;

        i39 = i36 + 1;

        $i45 = (int) c38;

        $i14 = $i45 >> 6;

        $i15 = 192 + $i14;

        $b16 = (byte) $i15;

        $r4[i36] = $b16;

        i36 = i39 + 1;

        $c17 = c38 & 63;

        $i46 = (int) $c17;

        $i18 = 128 + $i46;

        $b19 = (byte) $i18;

        $r4[i39] = $b19;

        goto label10;

     label09:
        i40 = i36 + 1;

        $i47 = (int) c38;

        $i4 = $i47 >> 12;

        $i5 = 224 + $i4;

        $b6 = (byte) $i5;

        $r4[i36] = $b6;

        i41 = i40 + 1;

        $i48 = (int) c38;

        $i7 = $i48 >> 6;

        $i8 = $i7 & 63;

        $i9 = 128 + $i8;

        $b10 = (byte) $i9;

        $r4[i40] = $b10;

        i36 = i41 + 1;

        $c11 = c38 & 63;

        $i49 = (int) $c11;

        $i12 = 128 + $i49;

        $b13 = (byte) $i12;

        $r4[i41] = $b13;

     label10:
        i37 = i37 + 1;

     label11:
        if i37 < $i0 goto label07;

        r1.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = i36;

        return;
    }

    public void flushBuffer() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] $r1;
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        int $i0, $i1;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        $i0 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i1);

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = 0;

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.apache.xml.serializer.WriterToUTF8Buffered r0;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.apache.xml.serializer.WriterToUTF8Buffered r0;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public java.io.OutputStream getOutputStream()
    {
        java.io.OutputStream $r1;
        org.apache.xml.serializer.WriterToUTF8Buffered r0;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        return $r1;
    }

    public void directWrite(java.lang.String) throws java.io.IOException
    {
        byte[] $r4;
        org.apache.xml.serializer.WriterToUTF8Buffered r1;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19;
        java.lang.String r0;
        char $c5;
        char[] $r2, $r3, $r5, $r6;

        r1 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i2 = 16384 - $i1;

        if $i0 < $i2 goto label3;

        virtualinvoke r1.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        if $i0 < 16384 goto label3;

        $i7 = $i0 / 5461;

        i15 = 1 + $i7;

        i16 = 0;

        goto label2;

     label1:
        $i8 = $i0 * i16;

        $i9 = $i8 / i15;

        i17 = 0 + $i9;

        $i10 = i16 + 1;

        $i11 = $i0 * $i10;

        $i12 = $i11 / i15;

        i13 = 0 + $i12;

        i14 = i13 - i17;

        $r5 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(i17, i13, $r5, 0);

        $r6 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        specialinvoke r1.<org.apache.xml.serializer.WriterToUTF8Buffered: void directWrite(char[],int,int)>($r6, 0, i14);

        i16 = i16 + 1;

     label2:
        if i16 < i15 goto label1;

        return;

     label3:
        $r2 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r2, 0);

        $r3 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        $r4 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i18 = r1.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        i19 = 0;

        goto label5;

     label4:
        $i3 = i18;

        i18 = i18 + 1;

        $i4 = i19;

        i19 = i19 + 1;

        $c5 = $r3[$i4];

        $b6 = (byte) $c5;

        $r4[$i3] = $b6;

     label5:
        if i19 < $i0 goto label4;

        r1.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = i18;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xml.serializer.WriterToUTF8Buffered: int CHARS_MAX> = 5461;

        <org.apache.xml.serializer.WriterToUTF8Buffered: int BYTES_MAX> = 16384;

        return;
    }
}
