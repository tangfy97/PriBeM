class groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    private groovy.lang.Reference info;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder;

    public void <init>(java.lang.Object, java.lang.Object, groovy.lang.Reference)
    {
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7 r2;
        groovy.lang.Reference r5, $r6;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r3, r4;

        r2 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: groovy.lang.Reference;

        $r0 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (groovy.lang.Reference) r5;

        r2.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: groovy.lang.Reference info> = $r6;

        return;
    }

    public java.lang.Object doCall(java.lang.Object, java.lang.Object)
    {
        java.lang.Integer $r13, $r26;
        java.lang.Object[] $r12, $r15, $r25, $r28;
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7 r9;
        groovy.lang.Reference $r1, $r3, $r10, $r23;
        java.lang.Object r0, r2, $r11, $r14, $r16, $r24, $r27, $r29, $r30;
        java.lang.Class $r4, r5, $r6, $r7, $r8, $r17, $r18, $r19, $r20, $r21, $r22, $r31, $r32;

        r9 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r4 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0>;

        if $r4 != null goto label01;

        $r18 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0> = $r18;

        goto label02;

     label01:
        $r18 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0>;

     label02:
        r5 = $r18;

        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r6 != null goto label03;

        $r19 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r19;

        goto label04;

     label03:
        $r19 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r7 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r7 != null goto label05;

        $r17 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        $r20 = $r17;

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r17;

        goto label06;

     label05:
        $r20 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label06:
        $r8 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r8 != null goto label07;

        $r21 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        $r22 = $r21;

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r21;

        goto label08;

     label07:
        $r22 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label08:
        $r23 = r9.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: groovy.lang.Reference info>;

        $r24 = virtualinvoke $r23.<groovy.lang.Reference: java.lang.Object get()>();

        $r25 = newarray (java.lang.Object)[1];

        $r26 = new java.lang.Integer;

        specialinvoke $r26.<java.lang.Integer: void <init>(int)>(1);

        $r25[0] = $r26;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r22, $r24, "getAt", $r25);

        $r28 = newarray (java.lang.Object)[1];

        $r29 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r28[0] = $r29;

        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r20, $r27, "curry", $r28);

        $r31 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r31 != null goto label09;

        $r32 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r32;

        goto label10;

     label09:
        $r32 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label10:
        $r10 = r9.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: groovy.lang.Reference info>;

        $r11 = virtualinvoke $r10.<groovy.lang.Reference: java.lang.Object get()>();

        $r12 = newarray (java.lang.Object)[1];

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(2);

        $r12[0] = $r13;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r32, $r11, "getAt", $r12);

        $r15 = newarray (java.lang.Object)[2];

        $r16 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r15[0] = $r16;

        $r15[1] = $r30;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r5, $r14, "putAt", $r15);

        return $r30;
    }

    public java.lang.Object call(java.lang.Object, java.lang.Object)
    {
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7 r7;
        java.lang.Object[] $r8;
        groovy.lang.Reference $r1, $r3;
        java.lang.Object r0, r2, $r9, $r10, $r11;
        java.lang.Class $r4, r5, $r6, $r12, $r13;

        r7 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r4 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0>;

        if $r4 != null goto label1;

        $r12 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0>;

     label2:
        r5 = $r12;

        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r6 != null goto label3;

        $r13 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r8 = newarray (java.lang.Object)[2];

        $r9 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r8[0] = $r9;

        $r10 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r8[1] = $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r5, r7, "doCall", $r8);

        return $r11;
    }

    public java.lang.Object getInfo()
    {
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object $r4;

        r2 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7;

        $r0 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3_closure6_closure7: groovy.lang.Reference info>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
