public class org.waveprotocol.wave.model.document.util.DocumentImpl extends org.waveprotocol.wave.model.document.MutableDocumentImpl implements org.waveprotocol.wave.model.document.Document
{

    public void <init>(org.waveprotocol.wave.model.operation.OperationSequencer, org.waveprotocol.wave.model.document.ReadableWDocument)
    {
        org.waveprotocol.wave.model.document.util.DocumentImpl r0;
        org.waveprotocol.wave.model.operation.OperationSequencer r1;
        org.waveprotocol.wave.model.document.ReadableWDocument r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocumentImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.OperationSequencer;

        r2 := @parameter1: org.waveprotocol.wave.model.document.ReadableWDocument;

        specialinvoke r0.<org.waveprotocol.wave.model.document.MutableDocumentImpl: void <init>(org.waveprotocol.wave.model.operation.OperationSequencer,org.waveprotocol.wave.model.document.ReadableWDocument)>(r1, r2);

        $r3 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.ReadableWDocument: java.lang.Object getDocumentElement()>();

        $z0 = $r3 instanceof org.waveprotocol.wave.model.document.Doc$E;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Document and sequencer must be for nodes of the Doc.* variety");

        return;
    }
}
