public final class org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement extends java.lang.Object implements org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement
{
    private final org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive;
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet listeners;
    private org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive;
    private final boolean usePrivateGadgetStates;

    public void <init>(org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement, boolean, boolean)
    {
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl $r4;
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement r2, $r3;
        boolean z0, z1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r2 := @parameter0: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement;

        z1 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet create()>();

        r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners> = $r1;

        r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive> = r2;

        r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: boolean usePrivateGadgetStates> = z0;

        if z1 != 0 goto label1;

        $r4 = new org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl;

        $r3 = $r4;

        specialinvoke $r4.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl: void <init>()>();

        goto label2;

     label1:
        $r3 = r2;

     label2:
        r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive> = $r3;

        return;
    }

    public void addFolder(int)
    {
        int i0;
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void addFolder(int)>(i0);

        return;
    }

    public void addWantedEvaluation(org.waveprotocol.wave.model.supplement.WantedEvaluation)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.WantedEvaluation r1;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.WantedEvaluation;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void addWantedEvaluation(org.waveprotocol.wave.model.supplement.WantedEvaluation)>(r1);

        return;
    }

    public void archiveAtVersion(org.waveprotocol.wave.model.id.WaveletId, int)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        i0 := @parameter1: int;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void archiveAtVersion(org.waveprotocol.wave.model.id.WaveletId,int)>(r1, i0);

        return;
    }

    public void clearArchiveState()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void clearArchiveState()>();

        return;
    }

    public void clearBlipReadState(org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r3;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void clearBlipReadState(org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r1, r2);

        return;
    }

    public void clearFollow()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void clearFollow()>();

        return;
    }

    public void clearPendingNotification()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void clearPendingNotification()>();

        return;
    }

    public void clearReadState()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void clearReadState()>();

        return;
    }

    public void follow()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void follow()>();

        return;
    }

    public int getArchiveWaveletVersion(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int $i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: int getArchiveWaveletVersion(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $i0;
    }

    public java.lang.Iterable getArchiveWavelets()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;
        java.lang.Iterable $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.lang.Iterable getArchiveWavelets()>();

        return $r2;
    }

    public java.lang.Iterable getFolders()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;
        java.lang.Iterable $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.lang.Iterable getFolders()>();

        return $r2;
    }

    public java.lang.Boolean getFollowed()
    {
        java.lang.Boolean $r2;
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.lang.Boolean getFollowed()>();

        return $r2;
    }

    public int getLastReadBlipVersion(org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r3;
        int $i0;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $i0 = interfaceinvoke $r3.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: int getLastReadBlipVersion(org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r1, r2);

        return $i0;
    }

    public int getLastReadParticipantsVersion(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int $i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: int getLastReadParticipantsVersion(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $i0;
    }

    public int getLastReadTagsVersion(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int $i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: int getLastReadTagsVersion(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $i0;
    }

    public int getLastReadWaveletVersion(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int $i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: int getLastReadWaveletVersion(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $i0;
    }

    public boolean getPendingNotification()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: boolean getPendingNotification()>();

        return $z0;
    }

    public java.lang.Iterable getReadBlips(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.Iterable $r3;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.lang.Iterable getReadBlips(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $r3;
    }

    public java.lang.Iterable getReadWavelets()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;
        java.lang.Iterable $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.lang.Iterable getReadWavelets()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getSeenVersion(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        org.waveprotocol.wave.model.version.HashedVersion $r3;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: org.waveprotocol.wave.model.version.HashedVersion getSeenVersion(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $r3;
    }

    public int getNotifiedVersion(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int $i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: int getNotifiedVersion(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $i0;
    }

    public java.util.Set getSeenWavelets()
    {
        java.util.Set $r2;
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.util.Set getSeenWavelets()>();

        return $r2;
    }

    public java.util.Set getNotifiedWavelets()
    {
        java.util.Set $r2;
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.util.Set getNotifiedWavelets()>();

        return $r2;
    }

    public java.lang.Iterable getStatefulThreads(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.Iterable $r3;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.lang.Iterable getStatefulThreads(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $r3;
    }

    public org.waveprotocol.wave.model.supplement.ThreadState getThreadState(org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r3;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;
        org.waveprotocol.wave.model.supplement.ThreadState $r4;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: org.waveprotocol.wave.model.supplement.ThreadState getThreadState(org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r1, r2);

        return $r4;
    }

    public java.util.Set getWantedEvaluations()
    {
        java.util.Set $r2;
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.util.Set getWantedEvaluations()>();

        return $r2;
    }

    public java.lang.Iterable getWaveletsWithThreadState()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;
        java.lang.Iterable $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: java.lang.Iterable getWaveletsWithThreadState()>();

        return $r2;
    }

    public boolean isInFolder(int)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;
        int i0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: boolean isInFolder(int)>(i0);

        return $z0;
    }

    public void removeAllFolders()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void removeAllFolders()>();

        return;
    }

    public void removeFolder(int)
    {
        int i0;
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void removeFolder(int)>(i0);

        return;
    }

    public void setLastReadBlipVersion(org.waveprotocol.wave.model.id.WaveletId, java.lang.String, int)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r3;
        int i0;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void setLastReadBlipVersion(org.waveprotocol.wave.model.id.WaveletId,java.lang.String,int)>(r1, r2, i0);

        return;
    }

    public void setLastReadParticipantsVersion(org.waveprotocol.wave.model.id.WaveletId, int)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        i0 := @parameter1: int;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void setLastReadParticipantsVersion(org.waveprotocol.wave.model.id.WaveletId,int)>(r1, i0);

        return;
    }

    public void setLastReadTagsVersion(org.waveprotocol.wave.model.id.WaveletId, int)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        i0 := @parameter1: int;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void setLastReadTagsVersion(org.waveprotocol.wave.model.id.WaveletId,int)>(r1, i0);

        return;
    }

    public void setLastReadWaveletVersion(org.waveprotocol.wave.model.id.WaveletId, int)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        i0 := @parameter1: int;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void setLastReadWaveletVersion(org.waveprotocol.wave.model.id.WaveletId,int)>(r1, i0);

        return;
    }

    public void setNotifiedVersion(org.waveprotocol.wave.model.id.WaveletId, int)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        int i0;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        i0 := @parameter1: int;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void setNotifiedVersion(org.waveprotocol.wave.model.id.WaveletId,int)>(r1, i0);

        return;
    }

    public void setSeenVersion(org.waveprotocol.wave.model.id.WaveletId, org.waveprotocol.wave.model.version.HashedVersion)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r3;
        org.waveprotocol.wave.model.version.HashedVersion r2;
        org.waveprotocol.wave.model.id.WaveletId r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        $r3 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void setSeenVersion(org.waveprotocol.wave.model.id.WaveletId,org.waveprotocol.wave.model.version.HashedVersion)>(r1, r2);

        return;
    }

    public void clearSeenVersion(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.id.WaveletId r1;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void clearSeenVersion(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return;
    }

    public void setThreadState(org.waveprotocol.wave.model.id.WaveletId, java.lang.String, org.waveprotocol.wave.model.supplement.ThreadState)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r4;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;
        org.waveprotocol.wave.model.supplement.ThreadState r3;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.waveprotocol.wave.model.supplement.ThreadState;

        $r4 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void setThreadState(org.waveprotocol.wave.model.id.WaveletId,java.lang.String,org.waveprotocol.wave.model.supplement.ThreadState)>(r1, r2, r3);

        return;
    }

    public void unfollow()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void unfollow()>();

        return;
    }

    public void addListener(org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r3;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2, $r4, $r5, $r6;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void addListener(java.lang.Object)>(r1);

        $r3 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r3.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean add(java.lang.Object)>(r1);

        $r5 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r4 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        if $r5 == $r4 goto label1;

        $r6 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void addListener(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void removeListener(org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r3;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2, $r4, $r5, $r6;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void removeListener(java.lang.Object)>(r1);

        $r3 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r3.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r4 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        if $r5 == $r4 goto label1;

        $r6 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void removeListener(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void startPartitioning()
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        return;
    }

    public void stopPartitioning()
    {
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl $r3;
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        java.util.Iterator $r5;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r4;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener r7;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r1, $r2, $r8;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        if $r2 == $r1 goto label2;

        $r3 = new org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl;

        specialinvoke $r3.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl: void <init>()>();

        r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive> = $r3;

        $r4 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener) $r6;

        $r8 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement presentationPrimitive>;

        interfaceinvoke $r8.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void addListener(java.lang.Object)>(r7);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.wave.model.util.ReadableStringMap getGadgetState(java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r2;
        java.lang.String r1;
        org.waveprotocol.wave.model.util.ReadableStringMap $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: boolean usePrivateGadgetStates>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: org.waveprotocol.wave.model.util.ReadableStringMap getGadgetState(java.lang.String)>(r1);

        goto label2;

     label1:
        $r3 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap emptyMap()>();

     label2:
        return $r3;
    }

    public void setGadgetState(java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r4;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: boolean usePrivateGadgetStates>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement realPrimitive>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void setGadgetState(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label1:
        return;
    }

    public volatile void removeListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: void removeListener(org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.supplement.PartitioningPrimitiveSupplement: void addListener(org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener)>($r2);

        return;
    }
}
