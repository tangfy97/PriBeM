public final class org.waveprotocol.wave.model.undo.UndoManagerFactory extends java.lang.Object
{
    private static final org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms algorithms;

    public void <init>()
    {
        org.waveprotocol.wave.model.undo.UndoManagerFactory r0;

        r0 := @this: org.waveprotocol.wave.model.undo.UndoManagerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.model.undo.UndoManagerPlus createUndoManager()
    {
        org.waveprotocol.wave.model.undo.UndoManagerImpl $r0;
        org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms $r1;

        $r0 = new org.waveprotocol.wave.model.undo.UndoManagerImpl;

        $r1 = <org.waveprotocol.wave.model.undo.UndoManagerFactory: org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms algorithms>;

        specialinvoke $r0.<org.waveprotocol.wave.model.undo.UndoManagerImpl: void <init>(org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms)>($r1);

        return $r0;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.undo.UndoManagerFactory$1 $r0;

        $r0 = new org.waveprotocol.wave.model.undo.UndoManagerFactory$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.undo.UndoManagerFactory$1: void <init>()>();

        <org.waveprotocol.wave.model.undo.UndoManagerFactory: org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms algorithms> = $r0;

        return;
    }
}
