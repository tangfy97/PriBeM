public class com.hp.hpl.jena.tdb.nodetable.NodeTableSink extends java.lang.Object implements com.hp.hpl.jena.tdb.nodetable.NodeTable
{
    long id;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableSink: long id> = 0L;

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        return;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.TDBException $r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r1;

        r1 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r0 = new com.hp.hpl.jena.tdb.TDBException;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>("NodeTableSink.nodeIdForNode");

        throw $r0;
    }

    public com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.TDBException $r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r1;
        com.hp.hpl.jena.tdb.store.NodeId r2;

        r1 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        r2 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r0 = new com.hp.hpl.jena.tdb.TDBException;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>("NodeTableSink.retrieveNodeByNodeId");

        throw $r0;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.store.NodeId $r1;
        long $l0, $l1, $l2;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $l0 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableSink: long id>;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(long)>($l0);

        $l1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableSink: long id>;

        $l2 = $l1 + 1L;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableSink: long id> = $l2;

        return $r1;
    }

    public com.hp.hpl.jena.tdb.store.NodeId allocOffset()
    {
        long $l0;
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r0;
        com.hp.hpl.jena.tdb.store.NodeId $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        $l0 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableSink: long id>;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(long)>($l0);

        return $r1;
    }

    public java.util.Iterator all()
    {
        java.util.Iterator $r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r1;

        r1 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        $r0 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator nullIterator()>();

        return $r0;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        return;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        return 0;
    }
}
