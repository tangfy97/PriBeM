public final class org.apache.poi.util.LittleEndianOutputStream extends java.io.FilterOutputStream implements org.apache.poi.util.LittleEndianOutput
{

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.poi.util.LittleEndianOutputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        return;
    }

    public void writeByte(int)
    {
        java.io.OutputStream $r1;
        org.apache.poi.util.LittleEndianOutputStream r0;
        int i0;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.apache.poi.util.LittleEndianOutputStream;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<org.apache.poi.util.LittleEndianOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeDouble(double)
    {
        org.apache.poi.util.LittleEndianOutputStream r0;
        long $l0;
        double d0;

        r0 := @this: org.apache.poi.util.LittleEndianOutputStream;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        virtualinvoke r0.<org.apache.poi.util.LittleEndianOutputStream: void writeLong(long)>($l0);

        return;
    }

    public void writeInt(int)
    {
        org.apache.poi.util.LittleEndianOutputStream r0;
        int i0, $i1, i2, $i3, i4, $i5, i6, $i7, i8;
        java.io.OutputStream $r1, $r2, $r3, $r4;
        java.io.IOException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: org.apache.poi.util.LittleEndianOutputStream;

        i0 := @parameter0: int;

        $i1 = i0 >>> 24;

        i2 = $i1 & 255;

        $i3 = i0 >>> 16;

        i4 = $i3 & 255;

        $i5 = i0 >>> 8;

        i6 = $i5 & 255;

        $i7 = i0 >>> 0;

        i8 = $i7 & 255;

     label1:
        $r1 = r0.<org.apache.poi.util.LittleEndianOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i8);

        $r2 = r0.<org.apache.poi.util.LittleEndianOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(i6);

        $r3 = r0.<org.apache.poi.util.LittleEndianOutputStream: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(i4);

        $r4 = r0.<org.apache.poi.util.LittleEndianOutputStream: java.io.OutputStream out>;

        virtualinvoke $r4.<java.io.OutputStream: void write(int)>(i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeLong(long)
    {
        org.apache.poi.util.LittleEndianOutputStream r0;
        int $i2, $i4;
        long l0, $l1, $l3;

        r0 := @this: org.apache.poi.util.LittleEndianOutputStream;

        l0 := @parameter0: long;

        $l1 = l0 >> 0;

        $i2 = (int) $l1;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianOutputStream: void writeInt(int)>($i2);

        $l3 = l0 >> 32;

        $i4 = (int) $l3;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianOutputStream: void writeInt(int)>($i4);

        return;
    }

    public void writeShort(int)
    {
        java.io.OutputStream $r1, $r2;
        org.apache.poi.util.LittleEndianOutputStream r0;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        int i0, $i1, i2, $i3, i4;

        r0 := @this: org.apache.poi.util.LittleEndianOutputStream;

        i0 := @parameter0: int;

        $i1 = i0 >>> 8;

        i2 = $i1 & 255;

        $i3 = i0 >>> 0;

        i4 = $i3 & 255;

     label1:
        $r1 = r0.<org.apache.poi.util.LittleEndianOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i4);

        $r2 = r0.<org.apache.poi.util.LittleEndianOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(i2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(byte[])
    {
        org.apache.poi.util.LittleEndianOutputStream r0;
        byte[] r1;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.apache.poi.util.LittleEndianOutputStream;

        r1 := @parameter0: byte[];

     label1:
        specialinvoke r0.<java.io.FilterOutputStream: void write(byte[])>(r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(byte[], int, int)
    {
        org.apache.poi.util.LittleEndianOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.apache.poi.util.LittleEndianOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        specialinvoke r0.<java.io.FilterOutputStream: void write(byte[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
