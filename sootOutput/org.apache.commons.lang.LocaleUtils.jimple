public class org.apache.commons.lang.LocaleUtils extends java.lang.Object
{
    private static final java.util.List cAvailableLocaleList;
    private static java.util.Set cAvailableLocaleSet;
    private static final java.util.Map cLanguagesByCountry;
    private static final java.util.Map cCountriesByLanguage;

    public void <init>()
    {
        org.apache.commons.lang.LocaleUtils r0;

        r0 := @this: org.apache.commons.lang.LocaleUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Locale toLocale(java.lang.String)
    {
        java.util.Locale $r41, $r44, $r47, $r50;
        java.lang.StringBuffer $r7, $r8, $r18, $r19, $r24, $r25, $r29, $r30, $r34, $r35, $r37, $r39, $r42, $r45, $r48;
        int $i0, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String r0, $r2, $r3, $r4, $r9, $r11, $r12, $r14, $r15, $r20, $r26, $r31, $r36;
        char $c1, $c2, $c3, $c4, $c5, $c6;
        java.lang.IllegalArgumentException $r38, $r40, $r43, $r46, $r49;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 2 goto label02;

        if $i0 == 5 goto label02;

        if $i0 >= 7 goto label02;

        $r38 = new java.lang.IllegalArgumentException;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r38;

     label02:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i7 = (int) $c5;

        if $i7 < 97 goto label03;

        $i8 = (int) $c5;

        if $i8 > 122 goto label03;

        $i9 = (int) $c6;

        if $i9 < 97 goto label03;

        $i10 = (int) $c6;

        if $i10 <= 122 goto label04;

     label03:
        $r40 = new java.lang.IllegalArgumentException;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r40;

     label04:
        if $i0 != 2 goto label05;

        $r41 = new java.util.Locale;

        specialinvoke $r41.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r0, "");

        return $r41;

     label05:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i11 = (int) $c1;

        if $i11 == 95 goto label06;

        $r43 = new java.lang.IllegalArgumentException;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r43;

     label06:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i12 = (int) $c2;

        if $i12 != 95 goto label07;

        $r44 = new java.util.Locale;

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r15 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(4);

        specialinvoke $r44.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r14, "", $r15);

        return $r44;

     label07:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);

        $i13 = (int) $c2;

        if $i13 < 65 goto label08;

        $i14 = (int) $c2;

        if $i14 > 90 goto label08;

        $i15 = (int) $c3;

        if $i15 < 65 goto label08;

        $i16 = (int) $c3;

        if $i16 <= 90 goto label09;

     label08:
        $r46 = new java.lang.IllegalArgumentException;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r46;

     label09:
        if $i0 != 5 goto label10;

        $r47 = new java.util.Locale;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        specialinvoke $r47.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r11, $r12);

        return $r47;

     label10:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(5);

        $i17 = (int) $c4;

        if $i17 == 95 goto label11;

        $r49 = new java.lang.IllegalArgumentException;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r49.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r49;

     label11:
        $r50 = new java.util.Locale;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(6);

        specialinvoke $r50.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        return $r50;
    }

    public static java.util.List localeLookupList(java.util.Locale)
    {
        java.util.List $r1;
        java.util.Locale r0;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List localeLookupList(java.util.Locale,java.util.Locale)>(r0, r0);

        return $r1;
    }

    public static java.util.List localeLookupList(java.util.Locale, java.util.Locale)
    {
        java.util.ArrayList $r0;
        java.util.List $r10;
        java.util.Locale r1, r4, $r5, $r7;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r6, $r8, $r9;
        boolean $z0;

        r1 := @parameter0: java.util.Locale;

        r4 := @parameter1: java.util.Locale;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(4);

        if r1 == null goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r2 = virtualinvoke r1.<java.util.Locale: java.lang.String getVariant()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r7 = new java.util.Locale;

        $r8 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        $r9 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        specialinvoke $r7.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r8, $r9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $r5 = new java.util.Locale;

        $r6 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        specialinvoke $r5.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r6, "");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z0 != 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        $r10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r10;
    }

    public static java.util.List availableLocaleList()
    {
        java.util.List $r0;

        $r0 = <org.apache.commons.lang.LocaleUtils: java.util.List cAvailableLocaleList>;

        return $r0;
    }

    public static java.util.Set availableLocaleSet()
    {
        java.util.HashSet $r0;
        java.util.List $r1;
        java.util.Set $r2, r3;

        r3 = <org.apache.commons.lang.LocaleUtils: java.util.Set cAvailableLocaleSet>;

        if r3 != null goto label1;

        $r0 = new java.util.HashSet;

        $r1 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List availableLocaleList()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r1);

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        r3 = $r2;

        <org.apache.commons.lang.LocaleUtils: java.util.Set cAvailableLocaleSet> = $r2;

     label1:
        return r3;
    }

    public static boolean isAvailableLocale(java.util.Locale)
    {
        java.util.List $r0;
        java.util.Locale r1;
        boolean $z0;

        r1 := @parameter0: java.util.Locale;

        $r0 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List availableLocaleList()>();

        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public static java.util.List languagesByCountry(java.lang.String)
    {
        java.util.ArrayList $r4;
        java.util.List $r5, r10;
        java.util.Locale r7;
        java.util.Map $r1, $r3;
        int $i0, $i1, i2;
        java.lang.Object $r2, $r6;
        java.lang.String r0, $r8, $r9;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.lang.LocaleUtils: java.util.Map cLanguagesByCountry>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r10 = (java.util.List) $r2;

        if r10 != null goto label6;

        if r0 == null goto label4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List availableLocaleList()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        r7 = (java.util.Locale) $r6;

        $r8 = virtualinvoke r7.<java.util.Locale: java.lang.String getCountry()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r7.<java.util.Locale: java.lang.String getVariant()>();

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r7);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        goto label5;

     label4:
        r10 = <java.util.Collections: java.util.List EMPTY_LIST>;

     label5:
        $r3 = <org.apache.commons.lang.LocaleUtils: java.util.Map cLanguagesByCountry>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r10);

     label6:
        return r10;
    }

    public static java.util.List countriesByLanguage(java.lang.String)
    {
        java.util.ArrayList $r4;
        java.util.Locale r7;
        java.util.Map $r1, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.String r0, $r8, $r9, $r10;
        boolean $z0;
        java.util.List $r5, r11;
        java.lang.Object $r2, $r6;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.lang.LocaleUtils: java.util.Map cCountriesByLanguage>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r11 = (java.util.List) $r2;

        if r11 != null goto label6;

        if r0 == null goto label4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List availableLocaleList()>();

        i3 = 0;

     label1:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i3 >= $i0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        r7 = (java.util.Locale) $r6;

        $r8 = virtualinvoke r7.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r7.<java.util.Locale: java.lang.String getCountry()>();

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i1 == 0 goto label2;

        $r10 = virtualinvoke r7.<java.util.Locale: java.lang.String getVariant()>();

        $i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i2 != 0 goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r7);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        goto label5;

     label4:
        r11 = <java.util.Collections: java.util.List EMPTY_LIST>;

     label5:
        $r3 = <org.apache.commons.lang.LocaleUtils: java.util.Map cCountriesByLanguage>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r11);

     label6:
        return r11;
    }

    static void <clinit>()
    {
        java.util.Locale[] $r4;
        java.util.List $r5, $r6;
        java.util.Map $r1, $r3;
        java.util.HashMap $r0, $r2;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);

        <org.apache.commons.lang.LocaleUtils: java.util.Map cLanguagesByCountry> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        <org.apache.commons.lang.LocaleUtils: java.util.Map cCountriesByLanguage> = $r3;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale[] getAvailableLocales()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        <org.apache.commons.lang.LocaleUtils: java.util.List cAvailableLocaleList> = $r6;

        return;
    }
}
