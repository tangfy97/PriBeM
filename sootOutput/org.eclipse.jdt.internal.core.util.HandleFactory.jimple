public class org.eclipse.jdt.internal.core.util.HandleFactory extends java.lang.Object
{
    private java.lang.String lastPkgFragmentRootPath;
    private org.eclipse.jdt.internal.core.PackageFragmentRoot lastPkgFragmentRoot;
    private org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject packageHandles;
    private org.eclipse.jdt.internal.core.JavaModel javaModel;

    public void <init>()
    {
        org.eclipse.jdt.internal.core.JavaModel $r2;
        org.eclipse.jdt.internal.core.util.HandleFactory r0;
        org.eclipse.jdt.internal.core.JavaModelManager $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.HandleFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.eclipse.jdt.internal.core.JavaModelManager: org.eclipse.jdt.internal.core.JavaModelManager getJavaModelManager()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.JavaModelManager: org.eclipse.jdt.internal.core.JavaModel getJavaModel()>();

        r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.JavaModel javaModel> = $r2;

        return;
    }

    public org.eclipse.jdt.internal.core.Openable createOpenable(java.lang.String, org.eclipse.jdt.core.search.IJavaSearchScope)
    {
        org.eclipse.jdt.core.IClassFile $r12, $r37;
        org.eclipse.jdt.internal.core.Openable $r13, $r15, $r38;
        char[][] $r24, $r26;
        org.eclipse.jdt.core.IPackageFragment $r20, $r42, $r57, $r58, $r59;
        org.eclipse.jdt.core.search.IJavaSearchScope r29;
        org.eclipse.core.runtime.Path $r54, $r56;
        java.lang.String $r1, $r4, $r6, $r7, $r19, $r21, $r27, $r28, $r31, $r36, $r43, $r44, r45, $r46;
        org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject $r10, $r18, $r34, $r41, $r53, $r55;
        char[] $r22;
        org.eclipse.jdt.core.ICompilationUnit $r14;
        org.eclipse.core.runtime.IPath $r3;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.core.util.HandleFactory r0;
        org.eclipse.jdt.internal.core.PackageFragmentRoot $r2, $r16, $r23, $r25, $r39, $r47, $r50;
        java.lang.String[] $r9, $r33, r48, r51;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14;
        org.eclipse.jdt.internal.core.PackageFragment $r17, $r40;
        char $c5;
        java.lang.Object $r11, $r35, r49, r52;

        r0 := @this: org.eclipse.jdt.internal.core.util.HandleFactory;

        r45 := @parameter0: java.lang.String;

        r29 := @parameter1: org.eclipse.jdt.core.search.IJavaSearchScope;

        $i0 = virtualinvoke r45.<java.lang.String: int indexOf(java.lang.String)>("|");

        $i13 = (int) -1;

        if $i0 <= $i13 goto label07;

        $r28 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath>;

        if $r28 == null goto label01;

        $r43 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath>;

        $i9 = virtualinvoke $r43.<java.lang.String: int length()>();

        $i10 = virtualinvoke r45.<java.lang.String: int length()>();

        if $i9 != $i10 goto label01;

        $r44 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath>;

        $z3 = virtualinvoke r45.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r44, 0, $i9);

        if $z3 != 0 goto label03;

     label01:
        $r46 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r47 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot getJarPkgFragmentRoot(java.lang.String,int,java.lang.String,org.eclipse.jdt.core.search.IJavaSearchScope)>(r45, $i0, $r46, r29);

        if $r47 != null goto label02;

        return null;

     label02:
        r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath> = $r46;

        r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot lastPkgFragmentRoot> = $r47;

        $r53 = new org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject;

        specialinvoke $r53.<org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject: void <init>(int)>(5);

        r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject packageHandles> = $r53;

     label03:
        $i7 = $i0 + 1;

        $r31 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>($i7);

        $r54 = new org.eclipse.core.runtime.Path;

        specialinvoke $r54.<org.eclipse.core.runtime.Path: void <init>(java.lang.String)>($r31);

        $r33 = virtualinvoke $r54.<org.eclipse.core.runtime.Path: java.lang.String[] segments()>();

        $i8 = lengthof $r33;

        $i11 = $i8 - 1;

        if $i11 <= 0 goto label04;

        r48 = newarray (java.lang.String)[$i11];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r33, 0, r48, 0, $i11);

        goto label05;

     label04:
        r48 = <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String[] NO_STRINGS>;

     label05:
        $r34 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject packageHandles>;

        $r35 = virtualinvoke $r34.<org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject: java.lang.Object get(java.lang.Object[])>(r48);

        $r42 = (org.eclipse.jdt.core.IPackageFragment) $r35;

        r49 = $r42;

        if $r42 != null goto label06;

        $r39 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot lastPkgFragmentRoot>;

        $r40 = virtualinvoke $r39.<org.eclipse.jdt.internal.core.PackageFragmentRoot: org.eclipse.jdt.internal.core.PackageFragment getPackageFragment(java.lang.String[])>(r48);

        r49 = $r40;

        $r41 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject packageHandles>;

        virtualinvoke $r41.<org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject: java.lang.Object put(java.lang.Object[],java.lang.Object)>(r48, $r40);

     label06:
        $r36 = $r33[$i11];

        $r57 = (org.eclipse.jdt.core.IPackageFragment) r49;

        $r37 = interfaceinvoke $r57.<org.eclipse.jdt.core.IPackageFragment: org.eclipse.jdt.core.IClassFile getClassFile(java.lang.String)>($r36);

        $r38 = (org.eclipse.jdt.internal.core.Openable) $r37;

        return $r38;

     label07:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath>;

        if $r1 == null goto label08;

        $r21 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath>;

        $z1 = virtualinvoke r45.<java.lang.String: boolean startsWith(java.lang.String)>($r21);

        if $z1 == 0 goto label08;

        $r22 = virtualinvoke r45.<java.lang.String: char[] toCharArray()>();

        $r23 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot lastPkgFragmentRoot>;

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.core.PackageFragmentRoot: char[][] fullInclusionPatternChars()>();

        $r25 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot lastPkgFragmentRoot>;

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.core.PackageFragmentRoot: char[][] fullExclusionPatternChars()>();

        $z2 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: boolean isExcluded(char[],char[][],char[][],boolean)>($r22, $r24, $r26, 0);

        if $z2 != 0 goto label08;

        $r27 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath>;

        $i4 = virtualinvoke $r27.<java.lang.String: int length()>();

        if $i4 <= 0 goto label08;

        $c5 = virtualinvoke r45.<java.lang.String: char charAt(int)>($i4);

        $i14 = (int) $c5;

        if $i14 == 47 goto label10;

     label08:
        $r50 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot getPkgFragmentRoot(java.lang.String)>(r45);

        if $r50 != null goto label09;

        return null;

     label09:
        r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot lastPkgFragmentRoot> = $r50;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot lastPkgFragmentRoot>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.PackageFragmentRoot: org.eclipse.core.runtime.IPath internalPath()>();

        $r4 = interfaceinvoke $r3.<org.eclipse.core.runtime.IPath: java.lang.String toString()>();

        r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath> = $r4;

        $r55 = new org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject;

        specialinvoke $r55.<org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject: void <init>(int)>(5);

        r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject packageHandles> = $r55;

     label10:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: java.lang.String lastPkgFragmentRootPath>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i2 = $i1 + 1;

        $r7 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>($i2);

        $r56 = new org.eclipse.core.runtime.Path;

        specialinvoke $r56.<org.eclipse.core.runtime.Path: void <init>(java.lang.String)>($r7);

        $r9 = virtualinvoke $r56.<org.eclipse.core.runtime.Path: java.lang.String[] segments()>();

        $i3 = lengthof $r9;

        $i6 = $i3 - 1;

        if $i6 <= 0 goto label11;

        r51 = newarray (java.lang.String)[$i6];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r51, 0, $i6);

        goto label12;

     label11:
        r51 = <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String[] NO_STRINGS>;

     label12:
        $r10 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject packageHandles>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject: java.lang.Object get(java.lang.Object[])>(r51);

        $r20 = (org.eclipse.jdt.core.IPackageFragment) $r11;

        r52 = $r20;

        if $r20 != null goto label13;

        $r16 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot lastPkgFragmentRoot>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.core.PackageFragmentRoot: org.eclipse.jdt.internal.core.PackageFragment getPackageFragment(java.lang.String[])>(r51);

        r52 = $r17;

        $r18 = r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject packageHandles>;

        virtualinvoke $r18.<org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject: java.lang.Object put(java.lang.Object[],java.lang.Object)>(r51, $r17);

     label13:
        $r19 = $r9[$i6];

        $z0 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: boolean isJavaLikeFileName(java.lang.String)>($r19);

        if $z0 == 0 goto label14;

        $r58 = (org.eclipse.jdt.core.IPackageFragment) r52;

        $r14 = interfaceinvoke $r58.<org.eclipse.jdt.core.IPackageFragment: org.eclipse.jdt.core.ICompilationUnit getCompilationUnit(java.lang.String)>($r19);

        $r15 = (org.eclipse.jdt.internal.core.Openable) $r14;

        return $r15;

     label14:
        $r59 = (org.eclipse.jdt.core.IPackageFragment) r52;

        $r12 = interfaceinvoke $r59.<org.eclipse.jdt.core.IPackageFragment: org.eclipse.jdt.core.IClassFile getClassFile(java.lang.String)>($r19);

        $r13 = (org.eclipse.jdt.internal.core.Openable) $r12;

        return $r13;
    }

    public org.eclipse.jdt.core.IJavaElement createElement(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.core.ICompilationUnit, java.util.HashSet, java.util.HashMap)
    {
        org.eclipse.jdt.core.ICompilationUnit r3;
        java.util.HashMap r5;
        org.eclipse.jdt.internal.core.util.HandleFactory r0;
        java.util.HashSet r4;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r1;
        org.eclipse.jdt.core.IJavaElement $r6;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.HandleFactory;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r3 := @parameter1: org.eclipse.jdt.core.ICompilationUnit;

        r4 := @parameter2: java.util.HashSet;

        r5 := @parameter3: java.util.HashMap;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        $i0 = $r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $r6 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.core.IJavaElement createElement(org.eclipse.jdt.internal.compiler.lookup.Scope,int,org.eclipse.jdt.core.ICompilationUnit,java.util.HashSet,java.util.HashMap)>(r1, $i0, r3, r4, r5);

        return $r6;
    }

    private org.eclipse.jdt.core.IJavaElement createElement(org.eclipse.jdt.internal.compiler.lookup.Scope, int, org.eclipse.jdt.core.ICompilationUnit, java.util.HashSet, java.util.HashMap)
    {
        org.eclipse.jdt.core.ICompilationUnit r3, $r18;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r23;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r30, $r31;
        org.eclipse.jdt.internal.core.SourceRefElement $r12;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r32;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.core.util.HandleFactory r4;
        org.eclipse.jdt.core.IType $r11, $r14, r38;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r29;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r9, $r15, $r19;
        java.util.HashMap r0;
        java.lang.String[] $r27;
        org.eclipse.jdt.core.IMember r37;
        java.util.HashSet r5;
        int $i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, i10, i11;
        java.lang.String $r39, $r40, $r41, $r42, $r43;
        org.eclipse.jdt.internal.compiler.lookup.Scope r1, $r6, $r21, $r35;
        org.eclipse.jdt.core.IJavaElement $r7, $r22, $r44, $r45;
        org.eclipse.jdt.core.IMethod $r28;
        char[] $r10, $r16, $r20, $r26, $r34;
        java.lang.Object $r2, r36;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r24;

        r4 := @this: org.eclipse.jdt.internal.core.util.HandleFactory;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        i1 := @parameter1: int;

        r3 := @parameter2: org.eclipse.jdt.core.ICompilationUnit;

        r5 := @parameter3: java.util.HashSet;

        r0 := @parameter4: java.util.HashMap;

        $r2 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r36 = (org.eclipse.jdt.core.IJavaElement) $r2;

        if r36 == null goto label01;

        $r44 = (org.eclipse.jdt.core.IJavaElement) r36;

        return $r44;

     label01:
        $i0 = r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: int kind>;

        tableswitch($i0)
        {
            case 1: goto label20;
            case 2: goto label11;
            case 3: goto label03;
            case 4: goto label02;
            default: goto label21;
        };

     label02:
        r36 = r3;

        goto label21;

     label03:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.Scope parent>;

        $r7 = specialinvoke r4.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.core.IJavaElement createElement(org.eclipse.jdt.internal.compiler.lookup.Scope,int,org.eclipse.jdt.core.ICompilationUnit,java.util.HashSet,java.util.HashMap)>($r6, i1, r3, r5, r0);

        $i2 = interfaceinvoke $r7.<org.eclipse.jdt.core.IJavaElement: int getElementType()>();

        tableswitch($i2)
        {
            case 5: goto label04;
            case 6: goto label10;
            case 7: goto label05;
            case 8: goto label06;
            case 9: goto label06;
            case 10: goto label06;
            default: goto label10;
        };

     label04:
        $r18 = (org.eclipse.jdt.core.ICompilationUnit) $r7;

        $r39 = new java.lang.String;

        $r19 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r20 = $r19.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName>;

        specialinvoke $r39.<java.lang.String: void <init>(char[])>($r20);

        r36 = interfaceinvoke $r18.<org.eclipse.jdt.core.ICompilationUnit: org.eclipse.jdt.core.IType getType(java.lang.String)>($r39);

        goto label10;

     label05:
        $r14 = (org.eclipse.jdt.core.IType) $r7;

        $r40 = new java.lang.String;

        $r15 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName>;

        specialinvoke $r40.<java.lang.String: void <init>(char[])>($r16);

        r36 = interfaceinvoke $r14.<org.eclipse.jdt.core.IType: org.eclipse.jdt.core.IType getType(java.lang.String)>($r40);

        goto label10;

     label06:
        r37 = (org.eclipse.jdt.core.IMember) $r7;

        $z0 = interfaceinvoke r37.<org.eclipse.jdt.core.IMember: boolean isBinary()>();

        if $z0 == 0 goto label07;

        return null;

     label07:
        $r41 = new java.lang.String;

        $r9 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r10 = $r9.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName>;

        specialinvoke $r41.<java.lang.String: void <init>(char[])>($r10);

        $r11 = interfaceinvoke r37.<org.eclipse.jdt.core.IMember: org.eclipse.jdt.core.IType getType(java.lang.String,int)>($r41, 1);

        r36 = $r11;

        if $r11 == null goto label10;

        goto label09;

     label08:
        $r12 = (org.eclipse.jdt.internal.core.SourceRefElement) $r11;

        $i3 = $r12.<org.eclipse.jdt.internal.core.SourceRefElement: int occurrenceCount>;

        $i4 = $i3 + 1;

        $r12.<org.eclipse.jdt.internal.core.SourceRefElement: int occurrenceCount> = $i4;

     label09:
        $z1 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>($r11);

        if $z1 == 0 goto label08;

     label10:
        if r36 == null goto label21;

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r36);

        goto label21;

     label11:
        $r21 = r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.Scope parent>;

        $r22 = specialinvoke r4.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.core.IJavaElement createElement(org.eclipse.jdt.internal.compiler.lookup.Scope,int,org.eclipse.jdt.core.ICompilationUnit,java.util.HashSet,java.util.HashMap)>($r21, i1, r3, r5, r0);

        r38 = (org.eclipse.jdt.core.IType) $r22;

        r23 = (org.eclipse.jdt.internal.compiler.lookup.MethodScope) r1;

        $z2 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isInsideInitializer()>();

        if $z2 == 0 goto label19;

        $r29 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceType()>();

        i10 = 1;

        i11 = 0;

        $r30 = $r29.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i5 = lengthof $r30;

        goto label18;

     label12:
        $r31 = $r29.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        r32 = $r31[i11];

        $i6 = r32.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        if $i6 > i1 goto label16;

        $i8 = r32.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if i1 > $i8 goto label16;

        $i9 = virtualinvoke r32.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        tableswitch($i9)
        {
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label13;
            default: goto label15;
        };

     label13:
        $r42 = new java.lang.String;

        $r34 = r32.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r42.<java.lang.String: void <init>(char[])>($r34);

        r36 = interfaceinvoke r38.<org.eclipse.jdt.core.IType: org.eclipse.jdt.core.IField getField(java.lang.String)>($r42);

        goto label21;

     label14:
        r36 = interfaceinvoke r38.<org.eclipse.jdt.core.IType: org.eclipse.jdt.core.IInitializer getInitializer(int)>(i10);

     label15:
        goto label21;

     label16:
        $i7 = virtualinvoke r32.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        if $i7 != 2 goto label17;

        i10 = i10 + 1;

     label17:
        i11 = i11 + 1;

     label18:
        if i11 < i5 goto label12;

        goto label21;

     label19:
        $r24 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration referenceMethod()>();

        $r43 = new java.lang.String;

        $r26 = $r24.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r43.<java.lang.String: void <init>(char[])>($r26);

        $r27 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: java.lang.String[] typeParameterSignatures(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>($r24);

        $r28 = interfaceinvoke r38.<org.eclipse.jdt.core.IType: org.eclipse.jdt.core.IMethod getMethod(java.lang.String,java.lang.String[])>($r43, $r27);

        r36 = $r28;

        if $r28 == null goto label21;

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r28);

        goto label21;

     label20:
        $r35 = r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.Scope parent>;

        r36 = specialinvoke r4.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.core.IJavaElement createElement(org.eclipse.jdt.internal.compiler.lookup.Scope,int,org.eclipse.jdt.core.ICompilationUnit,java.util.HashSet,java.util.HashMap)>($r35, i1, r3, r5, r0);

     label21:
        $r45 = (org.eclipse.jdt.core.IJavaElement) r36;

        return $r45;
    }

    private org.eclipse.jdt.internal.core.PackageFragmentRoot getJarPkgFragmentRoot(java.lang.String, int, java.lang.String, org.eclipse.jdt.core.search.IJavaSearchScope)
    {
        org.eclipse.jdt.internal.core.search.AbstractJavaSearchScope $r15;
        org.eclipse.core.runtime.IPath r7, $r31, $r33, $r35, $r36;
        boolean $z0, $z1;
        org.eclipse.jdt.core.IClasspathEntry $r19;
        org.eclipse.jdt.core.IJavaProject $r10, $r18;
        org.eclipse.core.runtime.IPath[] $r6;
        org.eclipse.jdt.internal.core.util.HandleFactory r4;
        org.eclipse.jdt.core.IJavaProject[] $r12, $r13, r27, $r29;
        org.eclipse.jdt.core.search.IJavaSearchScope r3;
        org.eclipse.core.runtime.Path $r30;
        java.lang.Throwable $r22, $r23;
        org.eclipse.jdt.internal.core.PackageFragmentRoot $r5, $r11, $r21, r26;
        org.eclipse.jdt.internal.core.JavaProject r25;
        org.eclipse.jdt.internal.core.JavaModel $r8, $r17, $r28;
        int $i0, $i1, i2, i3, i4, i5;
        org.eclipse.core.resources.IFile r24;
        java.lang.String r1, $r9, r14;
        org.eclipse.jdt.core.IPackageFragmentRoot $r16, $r20;
        org.eclipse.core.resources.IResource $r32, $r34;
        java.lang.Object $r2;

        r4 := @this: org.eclipse.jdt.internal.core.util.HandleFactory;

        r14 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r3 := @parameter3: org.eclipse.jdt.core.search.IJavaSearchScope;

        $r30 = new org.eclipse.core.runtime.Path;

        specialinvoke $r30.<org.eclipse.core.runtime.Path: void <init>(java.lang.String)>(r1);

        $r31 = (org.eclipse.core.runtime.IPath) $r30;

        $r2 = staticinvoke <org.eclipse.jdt.internal.core.JavaModel: java.lang.Object getTarget(org.eclipse.core.runtime.IPath,boolean)>($r31, 0);

        $z0 = $r2 instanceof org.eclipse.core.resources.IFile;

        if $z0 == 0 goto label04;

        r24 = (org.eclipse.core.resources.IFile) $r2;

        $r17 = r4.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.JavaModel javaModel>;

        $r32 = (org.eclipse.core.resources.IResource) r24;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.core.JavaModel: org.eclipse.jdt.core.IJavaProject getJavaProject(org.eclipse.core.resources.IResource)>($r32);

        r25 = (org.eclipse.jdt.internal.core.JavaProject) $r18;

     label01:
        $r33 = (org.eclipse.core.runtime.IPath) $r30;

        $r19 = virtualinvoke r25.<org.eclipse.jdt.internal.core.JavaProject: org.eclipse.jdt.core.IClasspathEntry getClasspathEntryFor(org.eclipse.core.runtime.IPath)>($r33);

        if $r19 == null goto label04;

        $r34 = (org.eclipse.core.resources.IResource) r24;

        $r20 = virtualinvoke r25.<org.eclipse.jdt.internal.core.JavaProject: org.eclipse.jdt.core.IPackageFragmentRoot getPackageFragmentRoot(org.eclipse.core.resources.IResource)>($r34);

        $r21 = (org.eclipse.jdt.internal.core.PackageFragmentRoot) $r20;

     label02:
        return $r21;

     label03:
        $r23 := @caughtexception;

     label04:
        if r3 == null goto label10;

        $z1 = r3 instanceof org.eclipse.jdt.internal.core.search.AbstractJavaSearchScope;

        if $z1 == 0 goto label05;

        $r15 = (org.eclipse.jdt.internal.core.search.AbstractJavaSearchScope) r3;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.core.search.AbstractJavaSearchScope: org.eclipse.jdt.core.IPackageFragmentRoot packageFragmentRoot(java.lang.String,int,java.lang.String)>(r14, i2, r1);

        r26 = (org.eclipse.jdt.internal.core.PackageFragmentRoot) $r16;

        if r26 == null goto label10;

        return r26;

     label05:
        $r6 = interfaceinvoke r3.<org.eclipse.jdt.core.search.IJavaSearchScope: org.eclipse.core.runtime.IPath[] enclosingProjectsAndJars()>();

        i3 = lengthof $r6;

        r27 = newarray (org.eclipse.jdt.core.IJavaProject)[i3];

        i4 = 0;

        i5 = 0;

        goto label08;

     label06:
        r7 = $r6[i5];

        $i0 = interfaceinvoke r7.<org.eclipse.core.runtime.IPath: int segmentCount()>();

        if $i0 != 1 goto label07;

        $i1 = i4;

        i4 = i4 + 1;

        $r8 = r4.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.JavaModel javaModel>;

        $r9 = interfaceinvoke r7.<org.eclipse.core.runtime.IPath: java.lang.String segment(int)>(0);

        $r10 = virtualinvoke $r8.<org.eclipse.jdt.internal.core.JavaModel: org.eclipse.jdt.core.IJavaProject getJavaProject(java.lang.String)>($r9);

        r27[$i1] = $r10;

     label07:
        i5 = i5 + 1;

     label08:
        if i5 < i3 goto label06;

        if i4 >= i3 goto label09;

        $r13 = r27;

        $r12 = newarray (org.eclipse.jdt.core.IJavaProject)[i4];

        r27 = $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r12, 0, i4);

     label09:
        $r35 = (org.eclipse.core.runtime.IPath) $r30;

        $r11 = specialinvoke r4.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot getJarPkgFragmentRoot(org.eclipse.core.runtime.IPath,java.lang.Object,org.eclipse.jdt.core.IJavaProject[])>($r35, $r2, r27);

        if $r11 == null goto label10;

        return $r11;

     label10:
        $r28 = r4.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.JavaModel javaModel>;

        $r29 = virtualinvoke $r28.<org.eclipse.jdt.internal.core.JavaModel: org.eclipse.jdt.core.IJavaProject[] getJavaProjects()>();

     label11:
        goto label13;

     label12:
        $r22 := @caughtexception;

        return null;

     label13:
        $r36 = (org.eclipse.core.runtime.IPath) $r30;

        $r5 = specialinvoke r4.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.PackageFragmentRoot getJarPkgFragmentRoot(org.eclipse.core.runtime.IPath,java.lang.Object,org.eclipse.jdt.core.IJavaProject[])>($r36, $r2, $r29);

        return $r5;

        catch org.eclipse.jdt.core.JavaModelException from label01 to label02 with label03;
        catch org.eclipse.jdt.core.JavaModelException from label10 to label11 with label12;
    }

    private org.eclipse.jdt.internal.core.PackageFragmentRoot getJarPkgFragmentRoot(org.eclipse.core.runtime.IPath, java.lang.Object, org.eclipse.jdt.core.IJavaProject[])
    {
        java.lang.Throwable $r11;
        org.eclipse.jdt.internal.core.PackageFragmentRoot $r7, $r10;
        org.eclipse.jdt.internal.core.JavaProject r2;
        org.eclipse.core.runtime.IPath r3;
        int i0, i1;
        org.eclipse.core.resources.IFile $r8;
        org.eclipse.jdt.core.IClasspathEntry $r4;
        boolean $z0;
        org.eclipse.jdt.core.IPackageFragmentRoot $r6, $r9;
        org.eclipse.jdt.core.IJavaProject $r1;
        org.eclipse.jdt.internal.core.util.HandleFactory r12;
        org.eclipse.jdt.core.IJavaProject[] r0;
        org.eclipse.core.resources.IResource $r13;
        java.lang.Object r5;

        r12 := @this: org.eclipse.jdt.internal.core.util.HandleFactory;

        r3 := @parameter0: org.eclipse.core.runtime.IPath;

        r5 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.eclipse.jdt.core.IJavaProject[];

        i1 = 0;

        i0 = lengthof r0;

        goto label7;

     label1:
        $r1 = r0[i1];

        r2 = (org.eclipse.jdt.internal.core.JavaProject) $r1;

        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.core.JavaProject: org.eclipse.jdt.core.IClasspathEntry getClasspathEntryFor(org.eclipse.core.runtime.IPath)>(r3);

        if $r4 == null goto label6;

        $z0 = r5 instanceof org.eclipse.core.resources.IFile;

        if $z0 == 0 goto label3;

        $r8 = (org.eclipse.core.resources.IFile) r5;

        $r13 = (org.eclipse.core.resources.IResource) $r8;

        $r9 = virtualinvoke r2.<org.eclipse.jdt.internal.core.JavaProject: org.eclipse.jdt.core.IPackageFragmentRoot getPackageFragmentRoot(org.eclipse.core.resources.IResource)>($r13);

        $r10 = (org.eclipse.jdt.internal.core.PackageFragmentRoot) $r9;

     label2:
        return $r10;

     label3:
        $r6 = virtualinvoke r2.<org.eclipse.jdt.internal.core.JavaProject: org.eclipse.jdt.core.IPackageFragmentRoot getPackageFragmentRoot0(org.eclipse.core.runtime.IPath)>(r3);

        $r7 = (org.eclipse.jdt.internal.core.PackageFragmentRoot) $r6;

     label4:
        return $r7;

     label5:
        $r11 := @caughtexception;

     label6:
        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label1;

        return null;

        catch org.eclipse.jdt.core.JavaModelException from label1 to label2 with label5;
        catch org.eclipse.jdt.core.JavaModelException from label3 to label4 with label5;
    }

    private org.eclipse.jdt.internal.core.PackageFragmentRoot getPkgFragmentRoot(java.lang.String)
    {
        java.lang.Throwable $r15;
        org.eclipse.jdt.internal.core.PackageFragmentRoot r11;
        char[][] $r13, $r14;
        org.eclipse.core.resources.IWorkspaceRoot $r3;
        org.eclipse.jdt.internal.core.JavaModel $r7;
        org.eclipse.core.resources.IProject r5;
        org.eclipse.core.resources.IWorkspace $r2;
        org.eclipse.core.runtime.IPath $r12, $r18, $r19;
        int i0, i1, i2, i3;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.core.IPackageFragmentRoot $r10;
        org.eclipse.jdt.core.IJavaProject $r8;
        org.eclipse.core.resources.IProject[] $r4;
        org.eclipse.jdt.internal.core.util.HandleFactory r6;
        org.eclipse.jdt.core.IPackageFragmentRoot[] $r9;
        org.eclipse.core.runtime.Path $r16;
        org.eclipse.core.resources.IResource $r17;

        r6 := @this: org.eclipse.jdt.internal.core.util.HandleFactory;

        r1 := @parameter0: java.lang.String;

        $r16 = new org.eclipse.core.runtime.Path;

        specialinvoke $r16.<org.eclipse.core.runtime.Path: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.eclipse.core.resources.ResourcesPlugin: org.eclipse.core.resources.IWorkspace getWorkspace()>();

        $r3 = interfaceinvoke $r2.<org.eclipse.core.resources.IWorkspace: org.eclipse.core.resources.IWorkspaceRoot getRoot()>();

        $r4 = interfaceinvoke $r3.<org.eclipse.core.resources.IWorkspaceRoot: org.eclipse.core.resources.IProject[] getProjects()>();

        i2 = 0;

        i0 = lengthof $r4;

        goto label11;

     label01:
        r5 = $r4[i2];

        $z0 = interfaceinvoke r5.<org.eclipse.core.resources.IProject: boolean isAccessible()>();

        if $z0 == 0 goto label10;

        $z1 = interfaceinvoke r5.<org.eclipse.core.resources.IProject: boolean hasNature(java.lang.String)>("org.eclipse.jdt.core.javanature");

        if $z1 != 0 goto label03;

     label02:
        goto label10;

     label03:
        $r7 = r6.<org.eclipse.jdt.internal.core.util.HandleFactory: org.eclipse.jdt.internal.core.JavaModel javaModel>;

        $r17 = (org.eclipse.core.resources.IResource) r5;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.JavaModel: org.eclipse.jdt.core.IJavaProject getJavaProject(org.eclipse.core.resources.IResource)>($r17);

        $r9 = interfaceinvoke $r8.<org.eclipse.jdt.core.IJavaProject: org.eclipse.jdt.core.IPackageFragmentRoot[] getPackageFragmentRoots()>();

        i3 = 0;

        i1 = lengthof $r9;

        goto label07;

     label04:
        $r10 = $r9[i3];

        r11 = (org.eclipse.jdt.internal.core.PackageFragmentRoot) $r10;

        $r12 = virtualinvoke r11.<org.eclipse.jdt.internal.core.PackageFragmentRoot: org.eclipse.core.runtime.IPath internalPath()>();

        $r18 = (org.eclipse.core.runtime.IPath) $r16;

        $z2 = interfaceinvoke $r12.<org.eclipse.core.runtime.IPath: boolean isPrefixOf(org.eclipse.core.runtime.IPath)>($r18);

        if $z2 == 0 goto label06;

        $r13 = virtualinvoke r11.<org.eclipse.jdt.internal.core.PackageFragmentRoot: char[][] fullInclusionPatternChars()>();

        $r14 = virtualinvoke r11.<org.eclipse.jdt.internal.core.PackageFragmentRoot: char[][] fullExclusionPatternChars()>();

        $r19 = (org.eclipse.core.runtime.IPath) $r16;

        $z3 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: boolean isExcluded(org.eclipse.core.runtime.IPath,char[][],char[][],boolean)>($r19, $r13, $r14, 0);

        if $z3 != 0 goto label06;

     label05:
        return r11;

     label06:
        i3 = i3 + 1;

     label07:
        if i3 < i1 goto label04;

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

     label10:
        i2 = i2 + 1;

     label11:
        if i2 < i0 goto label01;

        return null;

        catch org.eclipse.core.runtime.CoreException from label01 to label02 with label09;
        catch org.eclipse.core.runtime.CoreException from label03 to label05 with label09;
        catch org.eclipse.core.runtime.CoreException from label06 to label08 with label09;
    }
}
