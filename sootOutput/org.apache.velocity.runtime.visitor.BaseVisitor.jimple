public abstract class org.apache.velocity.runtime.visitor.BaseVisitor extends java.lang.Object implements org.apache.velocity.runtime.parser.node.ParserVisitor
{
    protected org.apache.velocity.context.InternalContextAdapter context;
    protected java.io.Writer writer;

    public void <init>()
    {
        org.apache.velocity.runtime.visitor.BaseVisitor r0;

        r0 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setWriter(java.io.Writer)
    {
        java.io.Writer r1;
        org.apache.velocity.runtime.visitor.BaseVisitor r0;

        r0 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r1 := @parameter0: java.io.Writer;

        r0.<org.apache.velocity.runtime.visitor.BaseVisitor: java.io.Writer writer> = r1;

        return;
    }

    public void setContext(org.apache.velocity.context.InternalContextAdapter)
    {
        org.apache.velocity.context.InternalContextAdapter r1;
        org.apache.velocity.runtime.visitor.BaseVisitor r0;

        r0 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r0.<org.apache.velocity.runtime.visitor.BaseVisitor: org.apache.velocity.context.InternalContextAdapter context> = r1;

        return;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.SimpleNode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.SimpleNode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.SimpleNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTprocess, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTprocess r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTprocess;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTprocess: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTExpression, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTExpression r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTExpression;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTExpression: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTAssignment, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTAssignment r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTAssignment;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTAssignment: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTOrNode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTOrNode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTOrNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTOrNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTAndNode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTAndNode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTAndNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTAndNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTEQNode, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.parser.node.ASTEQNode r0;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTEQNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTEQNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTNENode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTNENode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTNENode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTLTNode, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.parser.node.ASTLTNode r0;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTLTNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTLTNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTGTNode, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;
        org.apache.velocity.runtime.parser.node.ASTGTNode r0;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTGTNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTGTNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTLENode, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.parser.node.ASTLENode r0;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTLENode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTLENode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTGENode, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;
        org.apache.velocity.runtime.parser.node.ASTGENode r0;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTGENode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTGENode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTAddNode, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.parser.node.ASTAddNode r0;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTAddNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTAddNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTSubtractNode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTSubtractNode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTSubtractNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTSubtractNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTMulNode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTMulNode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTMulNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMulNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTDivNode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTDivNode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTDivNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDivNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTModNode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTModNode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTModNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTModNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTNotNode, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTNotNode r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTNotNode;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNotNode: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTIntegerLiteral, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTIntegerLiteral r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTIntegerLiteral;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTIntegerLiteral: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTFloatingPointLiteral, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTFloatingPointLiteral r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTFloatingPointLiteral;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTFloatingPointLiteral: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTStringLiteral, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.parser.node.ASTStringLiteral r0;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTStringLiteral;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTStringLiteral: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTIdentifier, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTIdentifier r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTIdentifier;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTIdentifier: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTMethod, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;
        org.apache.velocity.runtime.parser.node.ASTMethod r0;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTMethod;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTReference, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;
        org.apache.velocity.runtime.parser.node.ASTReference r0;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTReference;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTTrue, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTTrue r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTTrue;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTTrue: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTFalse, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.parser.node.ASTFalse r0;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTFalse;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTFalse: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTBlock, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTBlock r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTBlock;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTBlock: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTText, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTText r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTText;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTText: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTIfStatement, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTIfStatement r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTIfStatement;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTIfStatement: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTElseStatement, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTElseStatement r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTElseStatement;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTElseStatement: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTElseIfStatement, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTElseIfStatement r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTElseIfStatement;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTElseIfStatement: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTComment, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.parser.node.ASTComment r0;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTComment;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTComment: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTObjectArray, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;
        org.apache.velocity.runtime.parser.node.ASTObjectArray r0;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTObjectArray;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTObjectArray: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTWord, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTWord r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTWord;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTWord: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTSetDirective, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTSetDirective r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTSetDirective;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTSetDirective: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTDirective, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTDirective r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTDirective;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTEscapedDirective, java.lang.Object)
    {
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;
        org.apache.velocity.runtime.parser.node.ASTEscapedDirective r0;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTEscapedDirective;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTEscapedDirective: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTEscape, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTEscape r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTEscape;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTEscape: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTMap, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTMap r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTMap;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMap: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }

    public java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTIntegerRange, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTIntegerRange r0;
        java.lang.Object $r2, r3;
        org.apache.velocity.runtime.visitor.BaseVisitor r1;

        r1 := @this: org.apache.velocity.runtime.visitor.BaseVisitor;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ASTIntegerRange;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTIntegerRange: java.lang.Object childrenAccept(org.apache.velocity.runtime.parser.node.ParserVisitor,java.lang.Object)>(r1, r3);

        return $r2;
    }
}
