final class org.springframework.http.client.CommonsClientHttpResponse extends java.lang.Object implements org.springframework.http.client.ClientHttpResponse
{
    private final org.apache.commons.httpclient.HttpMethod httpMethod;
    private org.springframework.http.HttpHeaders headers;

    void <init>(org.apache.commons.httpclient.HttpMethod)
    {
        org.springframework.http.client.CommonsClientHttpResponse r0;
        org.apache.commons.httpclient.HttpMethod r1;

        r0 := @this: org.springframework.http.client.CommonsClientHttpResponse;

        r1 := @parameter0: org.apache.commons.httpclient.HttpMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.http.client.CommonsClientHttpResponse: org.apache.commons.httpclient.HttpMethod httpMethod> = r1;

        return;
    }

    public org.springframework.http.HttpStatus getStatusCode()
    {
        org.springframework.http.HttpStatus $r2;
        org.apache.commons.httpclient.HttpMethod $r1;
        int $i0;
        org.springframework.http.client.CommonsClientHttpResponse r0;

        r0 := @this: org.springframework.http.client.CommonsClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.CommonsClientHttpResponse: org.apache.commons.httpclient.HttpMethod httpMethod>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.httpclient.HttpMethod: int getStatusCode()>();

        $r2 = staticinvoke <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus valueOf(int)>($i0);

        return $r2;
    }

    public java.lang.String getStatusText()
    {
        org.springframework.http.client.CommonsClientHttpResponse r0;
        org.apache.commons.httpclient.HttpMethod $r1;
        java.lang.String $r2;

        r0 := @this: org.springframework.http.client.CommonsClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.CommonsClientHttpResponse: org.apache.commons.httpclient.HttpMethod httpMethod>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.httpclient.HttpMethod: java.lang.String getStatusText()>();

        return $r2;
    }

    public org.springframework.http.HttpHeaders getHeaders()
    {
        org.springframework.http.HttpHeaders $r1, $r2, $r3, $r7;
        org.apache.commons.httpclient.Header r6;
        org.apache.commons.httpclient.HttpMethod $r4;
        int i0, i1;
        org.springframework.http.client.CommonsClientHttpResponse r0;
        java.lang.String $r8, $r9;
        org.apache.commons.httpclient.Header[] $r5;

        r0 := @this: org.springframework.http.client.CommonsClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.CommonsClientHttpResponse: org.springframework.http.HttpHeaders headers>;

        if $r1 != null goto label3;

        $r3 = new org.springframework.http.HttpHeaders;

        specialinvoke $r3.<org.springframework.http.HttpHeaders: void <init>()>();

        r0.<org.springframework.http.client.CommonsClientHttpResponse: org.springframework.http.HttpHeaders headers> = $r3;

        $r4 = r0.<org.springframework.http.client.CommonsClientHttpResponse: org.apache.commons.httpclient.HttpMethod httpMethod>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.httpclient.HttpMethod: org.apache.commons.httpclient.Header[] getResponseHeaders()>();

        i0 = lengthof $r5;

        i1 = 0;

        goto label2;

     label1:
        r6 = $r5[i1];

        $r7 = r0.<org.springframework.http.client.CommonsClientHttpResponse: org.springframework.http.HttpHeaders headers>;

        $r8 = virtualinvoke r6.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $r9 = virtualinvoke r6.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        virtualinvoke $r7.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>($r8, $r9);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        $r2 = r0.<org.springframework.http.client.CommonsClientHttpResponse: org.springframework.http.HttpHeaders headers>;

        return $r2;
    }

    public java.io.InputStream getBody() throws java.io.IOException
    {
        org.springframework.http.client.CommonsClientHttpResponse r0;
        org.apache.commons.httpclient.HttpMethod $r1;
        java.io.InputStream $r2;

        r0 := @this: org.springframework.http.client.CommonsClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.CommonsClientHttpResponse: org.apache.commons.httpclient.HttpMethod httpMethod>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.httpclient.HttpMethod: java.io.InputStream getResponseBodyAsStream()>();

        return $r2;
    }

    public void close()
    {
        org.springframework.http.client.CommonsClientHttpResponse r0;
        org.apache.commons.httpclient.HttpMethod $r1;

        r0 := @this: org.springframework.http.client.CommonsClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.CommonsClientHttpResponse: org.apache.commons.httpclient.HttpMethod httpMethod>;

        interfaceinvoke $r1.<org.apache.commons.httpclient.HttpMethod: void releaseConnection()>();

        return;
    }
}
