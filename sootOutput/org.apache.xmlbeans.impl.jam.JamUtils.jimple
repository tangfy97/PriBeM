public class org.apache.xmlbeans.impl.jam.JamUtils extends java.lang.Object
{
    private static final org.apache.xmlbeans.impl.jam.JamUtils INSTANCE;
    private static java.util.Comparator SOURCE_POSITION_COMPARATOR;

    public static final org.apache.xmlbeans.impl.jam.JamUtils getInstance()
    {
        org.apache.xmlbeans.impl.jam.JamUtils $r0;

        $r0 = <org.apache.xmlbeans.impl.jam.JamUtils: org.apache.xmlbeans.impl.jam.JamUtils INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        org.apache.xmlbeans.impl.jam.JamUtils r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.JamUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.reflect.Method getMethodOn(org.apache.xmlbeans.impl.jam.JMethod, java.lang.Class) throws java.lang.NoSuchMethodException, java.lang.ClassNotFoundException
    {
        org.apache.xmlbeans.impl.jam.JamUtils r3;
        org.apache.xmlbeans.impl.jam.JParameter $r4;
        int $i0, $i1, $i2, i3;
        java.lang.String $r11;
        java.lang.reflect.Method $r12;
        org.apache.xmlbeans.impl.jam.JParameter[] $r2;
        java.lang.Class[] r10;
        org.apache.xmlbeans.impl.jam.JClass $r5;
        java.lang.IllegalArgumentException $r8, $r9;
        java.lang.Class r0, $r7;
        java.lang.ClassLoader $r6;
        org.apache.xmlbeans.impl.jam.JMethod r1;

        r3 := @this: org.apache.xmlbeans.impl.jam.JamUtils;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JMethod;

        r0 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null class");

        throw $r9;

     label1:
        if r1 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null method");

        throw $r8;

     label2:
        r10 = null;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.JMethod: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        if $r2 == null goto label4;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label4;

        $i1 = lengthof $r2;

        r10 = newarray (java.lang.Class)[$i1];

        i3 = 0;

     label3:
        $i2 = lengthof r10;

        if i3 >= $i2 goto label4;

        $r4 = $r2[i3];

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.JParameter: org.apache.xmlbeans.impl.jam.JClass getType()>();

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r7 = virtualinvoke r3.<org.apache.xmlbeans.impl.jam.JamUtils: java.lang.Class loadClass(org.apache.xmlbeans.impl.jam.JClass,java.lang.ClassLoader)>($r5, $r6);

        r10[i3] = $r7;

        i3 = i3 + 1;

        goto label3;

     label4:
        $r11 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.JMethod: java.lang.String getSimpleName()>();

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r11, r10);

        return $r12;
    }

    public java.lang.reflect.Constructor getConstructorOn(org.apache.xmlbeans.impl.jam.JConstructor, java.lang.Class) throws java.lang.NoSuchMethodException, java.lang.ClassNotFoundException
    {
        java.lang.reflect.Constructor $r11;
        org.apache.xmlbeans.impl.jam.JConstructor r1;
        org.apache.xmlbeans.impl.jam.JamUtils r3;
        org.apache.xmlbeans.impl.jam.JParameter $r4;
        int $i0, $i1, $i2, i3;
        org.apache.xmlbeans.impl.jam.JParameter[] $r2;
        java.lang.Class[] r10;
        org.apache.xmlbeans.impl.jam.JClass $r5;
        java.lang.IllegalArgumentException $r8, $r9;
        java.lang.Class r0, $r7;
        java.lang.ClassLoader $r6;

        r3 := @this: org.apache.xmlbeans.impl.jam.JamUtils;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JConstructor;

        r0 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null class");

        throw $r9;

     label1:
        if r1 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null ctor");

        throw $r8;

     label2:
        r10 = null;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.JConstructor: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        if $r2 == null goto label4;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label4;

        $i1 = lengthof $r2;

        r10 = newarray (java.lang.Class)[$i1];

        i3 = 0;

     label3:
        $i2 = lengthof r10;

        if i3 >= $i2 goto label4;

        $r4 = $r2[i3];

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.JParameter: org.apache.xmlbeans.impl.jam.JClass getType()>();

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r7 = virtualinvoke r3.<org.apache.xmlbeans.impl.jam.JamUtils: java.lang.Class loadClass(org.apache.xmlbeans.impl.jam.JClass,java.lang.ClassLoader)>($r5, $r6);

        r10[i3] = $r7;

        i3 = i3 + 1;

        goto label3;

     label4:
        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r10);

        return $r11;
    }

    public java.lang.reflect.Field getFieldOn(org.apache.xmlbeans.impl.jam.JField, java.lang.Class) throws java.lang.NoSuchFieldException
    {
        org.apache.xmlbeans.impl.jam.JamUtils r6;
        org.apache.xmlbeans.impl.jam.JField r1;
        java.lang.Class r0;
        java.lang.String $r2;
        java.lang.reflect.Field $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r6 := @this: org.apache.xmlbeans.impl.jam.JamUtils;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JField;

        r0 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null class");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null field");

        throw $r4;

     label2:
        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.JField: java.lang.String getSimpleName()>();

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.Class loadClass(org.apache.xmlbeans.impl.jam.JClass, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.apache.xmlbeans.impl.jam.JamUtils r4;
        java.lang.Class $r3;
        java.lang.ClassLoader r0;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.jam.JClass r1;

        r4 := @this: org.apache.xmlbeans.impl.jam.JamUtils;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        r0 := @parameter1: java.lang.ClassLoader;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        $r3 = virtualinvoke r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r2);

        return $r3;
    }

    public void placeInSourceOrder(org.apache.xmlbeans.impl.jam.JElement[])
    {
        org.apache.xmlbeans.impl.jam.JElement[] r0;
        org.apache.xmlbeans.impl.jam.JamUtils r3;
        java.util.Comparator $r1;
        java.lang.IllegalArgumentException $r2;

        r3 := @this: org.apache.xmlbeans.impl.jam.JamUtils;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JElement[];

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null elements");

        throw $r2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.jam.JamUtils: java.util.Comparator SOURCE_POSITION_COMPARATOR>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r0, $r1);

        return;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.impl.jam.JamUtils$1 $r1;
        org.apache.xmlbeans.impl.jam.JamUtils $r0;

        $r0 = new org.apache.xmlbeans.impl.jam.JamUtils;

        specialinvoke $r0.<org.apache.xmlbeans.impl.jam.JamUtils: void <init>()>();

        <org.apache.xmlbeans.impl.jam.JamUtils: org.apache.xmlbeans.impl.jam.JamUtils INSTANCE> = $r0;

        $r1 = new org.apache.xmlbeans.impl.jam.JamUtils$1;

        specialinvoke $r1.<org.apache.xmlbeans.impl.jam.JamUtils$1: void <init>()>();

        <org.apache.xmlbeans.impl.jam.JamUtils: java.util.Comparator SOURCE_POSITION_COMPARATOR> = $r1;

        return;
    }
}
