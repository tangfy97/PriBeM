class ucar.nc2.Structure$IteratorRank1 extends java.lang.Object implements ucar.ma2.StructureDataIterator
{
    private int count;
    private int recnum;
    private int readStart;
    private int readCount;
    private int readAtaTime;
    private ucar.ma2.ArrayStructure as;
    final ucar.nc2.Structure this$0;

    protected void <init>(ucar.nc2.Structure, int)
    {
        ucar.nc2.Structure$IteratorRank1 r0;
        int $i1, i2;
        long $l0;
        ucar.nc2.Structure r1, $r2;

        r0 := @this: ucar.nc2.Structure$IteratorRank1;

        r1 := @parameter0: ucar.nc2.Structure;

        i2 := @parameter1: int;

        r0.<ucar.nc2.Structure$IteratorRank1: ucar.nc2.Structure this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.Structure$IteratorRank1: int count> = 0;

        $r2 = r0.<ucar.nc2.Structure$IteratorRank1: ucar.nc2.Structure this$0>;

        $l0 = virtualinvoke $r2.<ucar.nc2.Structure: long getSize()>();

        $i1 = (int) $l0;

        r0.<ucar.nc2.Structure$IteratorRank1: int recnum> = $i1;

        r0.<ucar.nc2.Structure$IteratorRank1: int readStart> = 0;

        r0.<ucar.nc2.Structure$IteratorRank1: int readCount> = 0;

        r0.<ucar.nc2.Structure$IteratorRank1: ucar.ma2.ArrayStructure as> = null;

        virtualinvoke r0.<ucar.nc2.Structure$IteratorRank1: void setBufferSize(int)>(i2);

        return;
    }

    public boolean hasNext()
    {
        ucar.nc2.Structure$IteratorRank1 r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: ucar.nc2.Structure$IteratorRank1;

        $i1 = r0.<ucar.nc2.Structure$IteratorRank1: int count>;

        $i0 = r0.<ucar.nc2.Structure$IteratorRank1: int recnum>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public ucar.ma2.StructureDataIterator reset()
    {
        ucar.nc2.Structure$IteratorRank1 r0;

        r0 := @this: ucar.nc2.Structure$IteratorRank1;

        r0.<ucar.nc2.Structure$IteratorRank1: int count> = 0;

        r0.<ucar.nc2.Structure$IteratorRank1: int readStart> = 0;

        r0.<ucar.nc2.Structure$IteratorRank1: int readCount> = 0;

        return r0;
    }

    public ucar.ma2.StructureData next() throws java.io.IOException
    {
        ucar.ma2.ArrayStructure $r1;
        ucar.nc2.Structure$IteratorRank1 r0;
        ucar.ma2.StructureData $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: ucar.nc2.Structure$IteratorRank1;

        $i1 = r0.<ucar.nc2.Structure$IteratorRank1: int count>;

        $i0 = r0.<ucar.nc2.Structure$IteratorRank1: int readStart>;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<ucar.nc2.Structure$IteratorRank1: void readNext()>();

     label1:
        $i2 = r0.<ucar.nc2.Structure$IteratorRank1: int count>;

        $i3 = $i2 + 1;

        r0.<ucar.nc2.Structure$IteratorRank1: int count> = $i3;

        $r1 = r0.<ucar.nc2.Structure$IteratorRank1: ucar.ma2.ArrayStructure as>;

        $i4 = r0.<ucar.nc2.Structure$IteratorRank1: int readCount>;

        $i5 = $i4 + 1;

        r0.<ucar.nc2.Structure$IteratorRank1: int readCount> = $i5;

        $r2 = virtualinvoke $r1.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>($i4);

        return $r2;
    }

    public int getCurrentRecno()
    {
        int $i0, $i1;
        ucar.nc2.Structure$IteratorRank1 r0;

        r0 := @this: ucar.nc2.Structure$IteratorRank1;

        $i0 = r0.<ucar.nc2.Structure$IteratorRank1: int count>;

        $i1 = $i0 - 1;

        return $i1;
    }

    private void readNext() throws java.io.IOException
    {
        java.lang.IllegalStateException $r12;
        ucar.ma2.ArrayStructure $r2;
        ucar.nc2.Structure $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r9;
        boolean $z0;
        java.io.PrintStream $r4;
        org.slf4j.Logger $r11;
        ucar.nc2.Structure$IteratorRank1 r0;
        ucar.ma2.InvalidRangeException $r10;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8;

        r0 := @this: ucar.nc2.Structure$IteratorRank1;

        $i3 = r0.<ucar.nc2.Structure$IteratorRank1: int recnum>;

        $i1 = r0.<ucar.nc2.Structure$IteratorRank1: int readStart>;

        $i0 = r0.<ucar.nc2.Structure$IteratorRank1: int readAtaTime>;

        $i2 = $i1 + $i0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        $i5 = r0.<ucar.nc2.Structure$IteratorRank1: int readStart>;

        i6 = $i4 - $i5;

     label1:
        $r1 = r0.<ucar.nc2.Structure$IteratorRank1: ucar.nc2.Structure this$0>;

        $i7 = r0.<ucar.nc2.Structure$IteratorRank1: int readStart>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Structure: ucar.ma2.ArrayStructure readStructure(int,int)>($i7, i6);

        r0.<ucar.nc2.Structure$IteratorRank1: ucar.ma2.ArrayStructure as> = $r2;

        $z0 = <ucar.nc2.NetcdfFile: boolean debugStructureIterator>;

        if $z0 == 0 goto label2;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNext ");

        $i10 = r0.<ucar.nc2.Structure$IteratorRank1: int count>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i11 = r0.<ucar.nc2.Structure$IteratorRank1: int readStart>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = <ucar.nc2.Structure: org.slf4j.Logger log>;

        interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Structure.IteratorRank1.readNext() ", $r10);

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Structure.Iterator.readNext() ", $r10);

        throw $r12;

     label4:
        $i8 = r0.<ucar.nc2.Structure$IteratorRank1: int readStart>;

        $i9 = $i8 + i6;

        r0.<ucar.nc2.Structure$IteratorRank1: int readStart> = $i9;

        r0.<ucar.nc2.Structure$IteratorRank1: int readCount> = 0;

        return;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    public void setBufferSize(int)
    {
        ucar.nc2.Structure $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r8;
        boolean $z0;
        java.io.PrintStream $r3;
        ucar.nc2.Structure$IteratorRank1 r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7;

        r0 := @this: ucar.nc2.Structure$IteratorRank1;

        i5 := @parameter0: int;

        $i0 = r0.<ucar.nc2.Structure$IteratorRank1: int count>;

        if $i0 <= 0 goto label1;

        return;

     label1:
        $r1 = r0.<ucar.nc2.Structure$IteratorRank1: ucar.nc2.Structure this$0>;

        $i1 = virtualinvoke $r1.<ucar.nc2.Structure: int calcStructureSize()>();

        i6 = $i1;

        if $i1 > 0 goto label2;

        i6 = 1;

     label2:
        if i5 > 0 goto label3;

        i5 = <ucar.nc2.Structure: int defaultBufferSize>;

     label3:
        $i2 = i5 / i6;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(10, $i2);

        r0.<ucar.nc2.Structure$IteratorRank1: int readAtaTime> = $i3;

        $z0 = <ucar.nc2.NetcdfFile: boolean debugStructureIterator>;

        if $z0 == 0 goto label4;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Iterator structureSize= ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" readAtaTime= ");

        $i4 = r0.<ucar.nc2.Structure$IteratorRank1: int readAtaTime>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label4:
        return;
    }
}
