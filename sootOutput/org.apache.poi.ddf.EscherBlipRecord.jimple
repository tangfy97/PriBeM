public class org.apache.poi.ddf.EscherBlipRecord extends org.apache.poi.ddf.EscherRecord
{
    public static final short RECORD_ID_START;
    public static final short RECORD_ID_END;
    public static final java.lang.String RECORD_DESCRIPTION;
    private static final int HEADER_SIZE;
    protected byte[] field_pictureData;

    public void <init>()
    {
        org.apache.poi.ddf.EscherBlipRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherBlipRecord;

        specialinvoke r0.<org.apache.poi.ddf.EscherRecord: void <init>()>();

        return;
    }

    public int fillFields(byte[], int, org.apache.poi.ddf.EscherRecordFactory)
    {
        org.apache.poi.ddf.EscherRecordFactory r4;
        byte[] r1, $r2, $r3;
        org.apache.poi.ddf.EscherBlipRecord r0;
        int i0, $i1, i2, $i3;

        r0 := @this: org.apache.poi.ddf.EscherBlipRecord;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r4 := @parameter2: org.apache.poi.ddf.EscherRecordFactory;

        $i1 = virtualinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: int readHeader(byte[],int)>(r1, i0);

        i2 = i0 + 8;

        $r2 = newarray (byte)[$i1];

        r0.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData> = $r2;

        $r3 = r0.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, $r3, 0, $i1);

        $i3 = $i1 + 8;

        return $i3;
    }

    public int serialize(int, byte[], org.apache.poi.ddf.EscherSerializationListener)
    {
        byte[] r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.poi.ddf.EscherSerializationListener r0;
        short $s1, $s2, $s4, $s10;
        int i0, $i3, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14;
        org.apache.poi.ddf.EscherBlipRecord r1;

        r1 := @this: org.apache.poi.ddf.EscherBlipRecord;

        i0 := @parameter0: int;

        r2 := @parameter1: byte[];

        r0 := @parameter2: org.apache.poi.ddf.EscherSerializationListener;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherBlipRecord: short getRecordId()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void beforeRecordSerialize(int,short,org.apache.poi.ddf.EscherRecord)>(i0, $s1, r1);

        $s2 = virtualinvoke r1.<org.apache.poi.ddf.EscherBlipRecord: short getOptions()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, i0, $s2);

        $i3 = i0 + 2;

        $s4 = virtualinvoke r1.<org.apache.poi.ddf.EscherBlipRecord: short getRecordId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, $i3, $s4);

        $r4 = r1.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        $i6 = i0 + 4;

        $r3 = r1.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        $i5 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, $i6, $i5);

        $i8 = i0 + 4;

        $r5 = r1.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        $i7 = lengthof $r5;

        $i9 = $i8 + $i7;

        $s10 = virtualinvoke r1.<org.apache.poi.ddf.EscherBlipRecord: short getRecordId()>();

        $r6 = r1.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        $i11 = lengthof $r6;

        $i12 = $i11 + 4;

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void afterRecordSerialize(int,short,int,org.apache.poi.ddf.EscherRecord)>($i9, $s10, $i12, r1);

        $r7 = r1.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        $i13 = lengthof $r7;

        $i14 = $i13 + 4;

        return $i14;
    }

    public int getRecordSize()
    {
        byte[] $r1;
        org.apache.poi.ddf.EscherBlipRecord r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.ddf.EscherBlipRecord;

        $r1 = r0.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 8;

        return $i1;
    }

    public java.lang.String getRecordName()
    {
        org.apache.poi.ddf.EscherBlipRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherBlipRecord;

        return "Blip";
    }

    public byte[] getPicturedata()
    {
        org.apache.poi.ddf.EscherBlipRecord r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.ddf.EscherBlipRecord;

        $r1 = r0.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        return $r1;
    }

    public void setPictureData(byte[])
    {
        org.apache.poi.ddf.EscherBlipRecord r0;
        byte[] r1;

        r0 := @this: org.apache.poi.ddf.EscherBlipRecord;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData> = r1;

        return;
    }

    public java.lang.String toString()
    {
        byte[] $r1;
        short $s0, $s1, $s2;
        java.lang.String $r2, $r5, $r10, $r14, $r18, $r24;
        org.apache.poi.ddf.EscherBlipRecord r0;
        java.lang.StringBuilder $r3, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23;
        java.lang.Class $r4;

        r0 := @this: org.apache.poi.ddf.EscherBlipRecord;

        $r1 = r0.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        $r2 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[],int)>($r1, 32);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  RecordId: 0x");

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: short getRecordId()>();

        $r10 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Version: 0x");

        $s1 = virtualinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: short getVersion()>();

        $r14 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Instance: 0x");

        $s2 = virtualinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: short getInstance()>();

        $r18 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Extra Data:");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }

    public java.lang.String toXml(java.lang.String)
    {
        byte[] $r1;
        short $s0, $s1, $s2;
        java.lang.String $r2, r4, $r7, $r8, $r9, $r10, $r11, $r20, $r22;
        org.apache.poi.ddf.EscherBlipRecord r0;
        java.lang.StringBuilder $r3, $r5, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r21;
        java.lang.Class $r6, $r19;

        r0 := @this: org.apache.poi.ddf.EscherBlipRecord;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.ddf.EscherBlipRecord: byte[] field_pictureData>;

        $r2 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[],int)>($r1, 32);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: short getRecordId()>();

        $r8 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $s1 = virtualinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: short getVersion()>();

        $r9 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $s2 = virtualinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: short getInstance()>();

        $r10 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r11 = virtualinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: java.lang.String formatXmlRecordHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r9, $r10);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<ExtraData>");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</ExtraData>\n");

        $r17 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r22 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ddf.EscherBlipRecord: int HEADER_SIZE> = 8;

        <org.apache.poi.ddf.EscherBlipRecord: java.lang.String RECORD_DESCRIPTION> = "msofbtBlip";

        <org.apache.poi.ddf.EscherBlipRecord: short RECORD_ID_END> = -3817;

        <org.apache.poi.ddf.EscherBlipRecord: short RECORD_ID_START> = -4072;

        return;
    }
}
