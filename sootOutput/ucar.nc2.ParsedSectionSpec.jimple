public class ucar.nc2.ParsedSectionSpec extends java.lang.Object
{
    public ucar.nc2.Variable v;
    public ucar.ma2.Section section;
    public ucar.nc2.ParsedSectionSpec child;
    private static boolean debugSelector;

    private void <init>(ucar.nc2.Variable, ucar.ma2.Section)
    {
        ucar.nc2.ParsedSectionSpec r0;
        ucar.nc2.Variable r1;
        ucar.ma2.Section r2;

        r0 := @this: ucar.nc2.ParsedSectionSpec;

        r1 := @parameter0: ucar.nc2.Variable;

        r2 := @parameter1: ucar.ma2.Section;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ParsedSectionSpec: ucar.nc2.Variable v> = r1;

        r0.<ucar.nc2.ParsedSectionSpec: ucar.ma2.Section section> = r2;

        r0.<ucar.nc2.ParsedSectionSpec: ucar.nc2.ParsedSectionSpec child> = null;

        return;
    }

    public static ucar.nc2.ParsedSectionSpec parseVariableSection(ucar.nc2.NetcdfFile, java.lang.String) throws ucar.ma2.InvalidRangeException
    {
        java.lang.IllegalArgumentException $r8;
        java.util.StringTokenizer $r0;
        ucar.nc2.ParsedSectionSpec $r4, $r7, r13;
        ucar.nc2.Variable $r6;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String r1, $r2, $r5, $r12;
        ucar.nc2.NetcdfFile r3;
        boolean $z0;

        r3 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ".");

        $r2 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        if $r2 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("empty sectionSpec = ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $r4 = staticinvoke <ucar.nc2.ParsedSectionSpec: ucar.nc2.ParsedSectionSpec parseVariableSelector(java.lang.Object,java.lang.String)>(r3, $r2);

        r13 = $r4;

     label2:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r6 = r13.<ucar.nc2.ParsedSectionSpec: ucar.nc2.Variable v>;

        $r7 = staticinvoke <ucar.nc2.ParsedSectionSpec: ucar.nc2.ParsedSectionSpec parseVariableSelector(java.lang.Object,java.lang.String)>($r6, $r5);

        r13.<ucar.nc2.ParsedSectionSpec: ucar.nc2.ParsedSectionSpec child> = $r7;

        r13 = r13.<ucar.nc2.ParsedSectionSpec: ucar.nc2.ParsedSectionSpec child>;

        goto label2;

     label3:
        return $r4;
    }

    private static ucar.nc2.ParsedSectionSpec parseVariableSelector(java.lang.Object, java.lang.String) throws ucar.ma2.InvalidRangeException
    {
        int[] $r6;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r2, $r3;
        ucar.nc2.ParsedSectionSpec $r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        ucar.nc2.NetcdfFile r28;
        ucar.ma2.Section $r5, r30;
        ucar.nc2.Structure r29;
        int $i0, $i1;
        ucar.nc2.Variable r27;
        java.lang.String $r0, $r13, $r23, r24, r25, r26;
        java.io.PrintStream $r15;
        java.lang.IllegalArgumentException $r7;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        r24 := @parameter1: java.lang.String;

        r25 = null;

        $r0 = staticinvoke <ucar.nc2.NetcdfFile: java.lang.String unescapeName(java.lang.String)>(r24);

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(40);

        if $i0 >= 0 goto label1;

        r26 = $r0;

        goto label2;

     label1:
        r26 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(41);

        r25 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label2:
        $z0 = <ucar.nc2.ParsedSectionSpec: boolean debugSelector>;

        if $z0 == 0 goto label3;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parseVariableSection <");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> = <");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, <");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label3:
        r27 = null;

        $z1 = r1 instanceof ucar.nc2.NetcdfFile;

        if $z1 == 0 goto label4;

        r28 = (ucar.nc2.NetcdfFile) r1;

        r27 = virtualinvoke r28.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>(r26);

        goto label5;

     label4:
        $z2 = r1 instanceof ucar.nc2.Structure;

        if $z2 == 0 goto label5;

        r29 = (ucar.nc2.Structure) r1;

        r27 = virtualinvoke r29.<ucar.nc2.Structure: ucar.nc2.Variable findVariable(java.lang.String)>(r26);

     label5:
        if r27 != null goto label6;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cant find variable: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in selector=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label6:
        $r2 = virtualinvoke r27.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r2 != $r3 goto label7;

        r25 = null;

     label7:
        if r25 == null goto label8;

        $r5 = new ucar.ma2.Section;

        specialinvoke $r5.<ucar.ma2.Section: void <init>(java.lang.String)>(r25);

        $r6 = virtualinvoke r27.<ucar.nc2.Variable: int[] getShape()>();

        r30 = staticinvoke <ucar.ma2.Section: ucar.ma2.Section fill(ucar.ma2.Section,int[])>($r5, $r6);

        goto label9;

     label8:
        r30 = virtualinvoke r27.<ucar.nc2.Variable: ucar.ma2.Section getShapeAsSection()>();

     label9:
        $r4 = new ucar.nc2.ParsedSectionSpec;

        specialinvoke $r4.<ucar.nc2.ParsedSectionSpec: void <init>(ucar.nc2.Variable,ucar.ma2.Section)>(r27, r30);

        return $r4;
    }

    public static java.lang.String makeSectionSpecString(ucar.nc2.Variable, java.util.List) throws ucar.ma2.InvalidRangeException
    {
        java.util.List r2;
        java.lang.StringBuilder $r0;
        ucar.nc2.Variable r1;
        java.lang.String $r3;

        r1 := @parameter0: ucar.nc2.Variable;

        r2 := @parameter1: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <ucar.nc2.ParsedSectionSpec: java.util.List makeSpec(java.lang.StringBuilder,ucar.nc2.Variable,java.util.List)>($r0, r1, r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static java.util.List makeSpec(java.lang.StringBuilder, ucar.nc2.Variable, java.util.List) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.Structure $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        ucar.nc2.Variable r0;
        java.lang.String $r6, $r10;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.Range $r4, r11;
        java.util.List r1, r8, $r9, $r12;
        java.lang.StringBuilder r2;
        java.lang.Object $r3;
        ucar.nc2.Dimension $r5;

        r2 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: ucar.nc2.Variable;

        r8 := @parameter2: java.util.List;

        $z0 = virtualinvoke r0.<ucar.nc2.Variable: boolean isMemberOfStructure()>();

        if $z0 == 0 goto label01;

        $r7 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Structure getParentStructure()>();

        r8 = staticinvoke <ucar.nc2.ParsedSectionSpec: java.util.List makeSpec(java.lang.StringBuilder,ucar.nc2.Variable,java.util.List)>(r2, $r7, r8);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label01:
        if r8 != null goto label02;

        $r9 = virtualinvoke r0.<ucar.nc2.Variable: java.util.List getRanges()>();

        goto label03;

     label02:
        $r9 = r8;

     label03:
        r1 = $r9;

        $z1 = virtualinvoke r0.<ucar.nc2.Variable: boolean isMemberOfStructure()>();

        if $z1 == 0 goto label04;

        $r6 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r10 = staticinvoke <ucar.nc2.NetcdfFile: java.lang.String escapeName(java.lang.String)>($r6);

        goto label05;

     label04:
        $r10 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getNameEscaped()>();

     label05:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $z2 = virtualinvoke r0.<ucar.nc2.Variable: boolean isVariableLength()>();

        if $z2 != 0 goto label10;

        $z3 = virtualinvoke r0.<ucar.nc2.Variable: boolean isScalar()>();

        if $z3 != 0 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        i7 = 0;

     label06:
        $i2 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        if i7 >= $i2 goto label09;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r11 = (ucar.ma2.Range) $r3;

        if r11 != null goto label07;

        $r4 = new ucar.ma2.Range;

        $r5 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(i7);

        $i6 = virtualinvoke $r5.<ucar.nc2.Dimension: int getLength()>();

        specialinvoke $r4.<ucar.ma2.Range: void <init>(int,int)>(0, $i6);

        r11 = $r4;

     label07:
        if i7 <= 0 goto label08;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label08:
        $i3 = virtualinvoke r11.<ucar.ma2.Range: int first()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i4 = virtualinvoke r11.<ucar.ma2.Range: int last()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i5 = virtualinvoke r11.<ucar.ma2.Range: int stride()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        i7 = i7 + 1;

        goto label06;

     label09:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label10:
        if r8 != null goto label11;

        $r12 = null;

        goto label12;

     label11:
        $i0 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r12 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

     label12:
        return $r12;
    }

    static void <clinit>()
    {
        <ucar.nc2.ParsedSectionSpec: boolean debugSelector> = 0;

        return;
    }
}
