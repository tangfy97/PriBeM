public class org.apache.pdfbox.cos.COSString extends org.apache.pdfbox.cos.COSBase
{
    private static final org.apache.commons.logging.Log LOG;
    public static final byte[] STRING_OPEN;
    public static final byte[] STRING_CLOSE;
    public static final byte[] HEX_STRING_OPEN;
    public static final byte[] HEX_STRING_CLOSE;
    public static final byte[] ESCAPE;
    public static final byte[] CR_ESCAPE;
    public static final byte[] LF_ESCAPE;
    public static final byte[] HT_ESCAPE;
    public static final byte[] BS_ESCAPE;
    public static final byte[] FF_ESCAPE;
    private java.io.ByteArrayOutputStream out;
    private java.lang.String str;
    private boolean forceHexForm;

    public void <init>()
    {
        java.io.ByteArrayOutputStream $r1;
        org.apache.pdfbox.cos.COSString r0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        specialinvoke r0.<org.apache.pdfbox.cos.COSBase: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out> = null;

        r0.<org.apache.pdfbox.cos.COSString: java.lang.String str> = null;

        r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm> = 0;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out> = $r1;

        return;
    }

    public void <init>(boolean)
    {
        org.apache.pdfbox.cos.COSString r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.cos.COSString: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        byte[] $r3, $r6;
        java.io.ByteArrayOutputStream $r5, $r8, $r9, $r10, $r13, $r14;
        org.apache.pdfbox.cos.COSString r0;
        int i0, $i1, $i2, $i3, i5, $i6;
        java.lang.String r1;
        boolean z0;
        char $c4;
        java.io.IOException $r11;
        char[] $r2;
        org.apache.commons.logging.Log $r12;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.pdfbox.cos.COSBase: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out> = null;

        r0.<org.apache.pdfbox.cos.COSString: java.lang.String str> = null;

        r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm> = 0;

     label1:
        z0 = 0;

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof $r2;

        i5 = 0;

     label2:
        if i5 >= i0 goto label4;

        $c4 = $r2[i5];

        $i6 = (int) $c4;

        if $i6 <= 255 goto label3;

        z0 = 1;

        goto label4;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        $r6 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16BE");

        $r13 = new java.io.ByteArrayOutputStream;

        $i2 = lengthof $r6;

        $i3 = $i2 + 2;

        specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>(int)>($i3);

        r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out> = $r13;

        $r8 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(int)>(254);

        $r9 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(int)>(255);

        $r10 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(byte[])>($r6);

        goto label6;

     label5:
        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r14 = new java.io.ByteArrayOutputStream;

        $i1 = lengthof $r3;

        specialinvoke $r14.<java.io.ByteArrayOutputStream: void <init>(int)>($i1);

        r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out> = $r14;

        $r5 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[])>($r3);

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;

        $r12 = <org.apache.pdfbox.cos.COSString: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r11, $r11);

     label8:
        return;

        catch java.io.IOException from label1 to label6 with label7;
    }

    public void <init>(byte[])
    {
        byte[] r2;
        java.io.ByteArrayOutputStream $r1, $r3;
        int $i0;
        java.io.IOException $r4;
        org.apache.commons.logging.Log $r5;
        org.apache.pdfbox.cos.COSString r0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        r2 := @parameter0: byte[];

        specialinvoke r0.<org.apache.pdfbox.cos.COSBase: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out> = null;

        r0.<org.apache.pdfbox.cos.COSString: java.lang.String str> = null;

        r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm> = 0;

     label1:
        $r1 = new java.io.ByteArrayOutputStream;

        $i0 = lengthof r2;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out> = $r1;

        $r3 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[])>(r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = <org.apache.pdfbox.cos.COSString: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r4, $r4);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setForceLiteralForm(boolean)
    {
        org.apache.pdfbox.cos.COSString r0;
        boolean z0, $z1;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm> = $z1;

        return;
    }

    public void setForceHexForm(boolean)
    {
        org.apache.pdfbox.cos.COSString r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm> = z0;

        return;
    }

    public static org.apache.pdfbox.cos.COSString createFromHexString(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        org.apache.pdfbox.cos.COSString $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.pdfbox.cos.COSString: org.apache.pdfbox.cos.COSString createFromHexString(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    public static org.apache.pdfbox.cos.COSString createFromHexString(java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSString $r0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r2, $r3, $r4, $r10;
        boolean z0;
        java.lang.NumberFormatException $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r1, $r7, $r8, $r9;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.pdfbox.cos.COSString;

        specialinvoke $r0.<org.apache.pdfbox.cos.COSString: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $i1 = $i0 % 2;

        if $i1 == 0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label1:
        $i2 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        i5 = 0;

     label2:
        if i5 >= $i2 goto label8;

     label3:
        $i3 = i5 + 2;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String substring(int,int)>(i5, $i3);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 16);

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSString: void append(int)>($i4);

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        if z0 == 0 goto label6;

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSString: void append(int)>(63);

        goto label7;

     label6:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hex string: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r10);

        virtualinvoke $r6.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        throw $r6;

     label7:
        i5 = i5 + 2;

        goto label2;

     label8:
        return $r0;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public java.lang.String getHexString()
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r2;
        java.lang.String[] $r5;
        org.apache.pdfbox.cos.COSString r1;
        byte $b3;
        int $i0, $i1, i2, $i4, $i5, i6, $i7;
        java.lang.StringBuilder $r7;
        java.lang.String $r4, $r6;

        r1 := @this: org.apache.pdfbox.cos.COSString;

        $r7 = new java.lang.StringBuilder;

        $r2 = r1.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        $i0 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: int size()>();

        $i1 = $i0 * 2;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r3 = virtualinvoke r1.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        i2 = lengthof $r3;

        i6 = 0;

     label1:
        if i6 >= i2 goto label2;

        $r5 = <org.apache.pdfbox.persistence.util.COSHEXTable: java.lang.String[] HEX_TABLE>;

        $b3 = $r3[i6];

        $i7 = (int) $b3;

        $i4 = $i7 + 256;

        $i5 = $i4 % 256;

        $r6 = $r5[$i5];

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getString()
    {
        byte[] $r2;
        org.apache.pdfbox.cos.COSString r0;
        byte $b1, $b2, $b3, $b4, b5, b8, b9;
        java.nio.charset.Charset r4;
        int $i0, $i6, $i7, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21;
        java.lang.String $r1, $r3, $r5;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        $r1 = r0.<org.apache.pdfbox.cos.COSString: java.lang.String str>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.pdfbox.cos.COSString: java.lang.String str>;

        return $r3;

     label1:
        r4 = <org.apache.pdfbox.encoding.PDFDocEncodingCharset: org.apache.pdfbox.encoding.PDFDocEncodingCharset INSTANCE>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        b5 = 0;

        b9 = 0;

        b8 = 0;

        $i0 = lengthof $r2;

        if $i0 <= 2 goto label3;

        $b1 = $r2[0];

        $i10 = (int) $b1;

        $i12 = (int) -1;

        if $i10 != $i12 goto label2;

        $b4 = $r2[1];

        $i13 = (int) $b4;

        $i15 = (int) -2;

        if $i13 != $i15 goto label2;

        r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16LE");

        b5 = 2;

        b9 = 2;

        b8 = 2;

        goto label3;

     label2:
        $b2 = $r2[0];

        $i16 = (int) $b2;

        $i18 = (int) -2;

        if $i16 != $i18 goto label3;

        $b3 = $r2[1];

        $i19 = (int) $b3;

        $i21 = (int) -1;

        if $i19 != $i21 goto label3;

        r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16BE");

        b5 = 2;

        b9 = 2;

        b8 = 2;

     label3:
        $i6 = lengthof $r2;

        $i7 = $i6 - b9;

        $r5 = staticinvoke <org.apache.pdfbox.cos.COSString: java.lang.String toString(byte[],int,int,java.nio.charset.Charset)>($r2, b8, $i7, r4);

        r0.<org.apache.pdfbox.cos.COSString: java.lang.String str> = $r5;

        return $r5;
    }

    private static java.lang.String toString(byte[], int, int, java.nio.charset.Charset)
    {
        byte[] r1;
        java.nio.charset.Charset r0;
        java.nio.CharBuffer $r3;
        int i0, i1;
        java.lang.String $r4;
        java.nio.ByteBuffer $r2;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: java.nio.charset.Charset;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r1, i0, i1);

        $r3 = virtualinvoke r0.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r2);

        $r4 = virtualinvoke $r3.<java.nio.CharBuffer: java.lang.String toString()>();

        return $r4;
    }

    public void append(byte[]) throws java.io.IOException
    {
        byte[] r1;
        java.io.ByteArrayOutputStream $r2;
        org.apache.pdfbox.cos.COSString r0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        r0.<org.apache.pdfbox.cos.COSString: java.lang.String str> = null;

        return;
    }

    public void append(int) throws java.io.IOException
    {
        int i0;
        java.io.ByteArrayOutputStream $r1;
        org.apache.pdfbox.cos.COSString r0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(i0);

        r0.<org.apache.pdfbox.cos.COSString: java.lang.String str> = null;

        return;
    }

    public void reset()
    {
        java.io.ByteArrayOutputStream $r1;
        org.apache.pdfbox.cos.COSString r0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        $r1 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void reset()>();

        r0.<org.apache.pdfbox.cos.COSString: java.lang.String str> = null;

        return;
    }

    public byte[] getBytes()
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r1;
        org.apache.pdfbox.cos.COSString r0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        $r1 = r0.<org.apache.pdfbox.cos.COSString: java.io.ByteArrayOutputStream out>;

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        org.apache.pdfbox.cos.COSString r2;

        r2 := @this: org.apache.pdfbox.cos.COSString;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSString{");

        $r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void writePDF(java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        byte $b1, $b4, $b7, $b8, $b9;
        boolean $z0, z1, $z2;
        byte[][] $r5;
        org.apache.pdfbox.cos.COSString r0;
        int i0, $i2, $i3, $i5, i6, i10, i11, i12, $i13, $i14, $i15, $i16, $i17;
        java.io.OutputStream r2;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        r2 := @parameter0: java.io.OutputStream;

        z1 = 0;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        i0 = lengthof $r1;

        i10 = 0;

     label01:
        if i10 >= i0 goto label04;

        if z1 != 0 goto label04;

        $b9 = $r1[i10];

        $i13 = (int) $b9;

        if $i13 >= 0 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z1 = $z2;

        i10 = i10 + 1;

        goto label01;

     label04:
        if z1 != 0 goto label15;

        $z0 = r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm>;

        if $z0 != 0 goto label15;

        $r7 = <org.apache.pdfbox.cos.COSString: byte[] STRING_OPEN>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r7);

        i11 = 0;

     label05:
        if i11 >= i0 goto label14;

        $b4 = $r1[i11];

        $i14 = (int) $b4;

        $i5 = $i14 + 256;

        i6 = $i5 % 256;

        lookupswitch(i6)
        {
            case 8: goto label10;
            case 9: goto label09;
            case 10: goto label07;
            case 12: goto label11;
            case 13: goto label08;
            case 40: goto label06;
            case 41: goto label06;
            case 92: goto label06;
            default: goto label12;
        };

     label06:
        $r9 = <org.apache.pdfbox.cos.COSString: byte[] ESCAPE>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r9);

        $b7 = (byte) i6;

        $i15 = (int) $b7;

        virtualinvoke r2.<java.io.OutputStream: void write(int)>($i15);

        goto label13;

     label07:
        $r12 = <org.apache.pdfbox.cos.COSString: byte[] LF_ESCAPE>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r12);

        goto label13;

     label08:
        $r10 = <org.apache.pdfbox.cos.COSString: byte[] CR_ESCAPE>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r10);

        goto label13;

     label09:
        $r13 = <org.apache.pdfbox.cos.COSString: byte[] HT_ESCAPE>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r13);

        goto label13;

     label10:
        $r14 = <org.apache.pdfbox.cos.COSString: byte[] BS_ESCAPE>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r14);

        goto label13;

     label11:
        $r11 = <org.apache.pdfbox.cos.COSString: byte[] FF_ESCAPE>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r11);

        goto label13;

     label12:
        $b8 = (byte) i6;

        $i16 = (int) $b8;

        virtualinvoke r2.<java.io.OutputStream: void write(int)>($i16);

     label13:
        i11 = i11 + 1;

        goto label05;

     label14:
        $r8 = <org.apache.pdfbox.cos.COSString: byte[] STRING_CLOSE>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r8);

        goto label18;

     label15:
        $r3 = <org.apache.pdfbox.cos.COSString: byte[] HEX_STRING_OPEN>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r3);

        i12 = 0;

     label16:
        if i12 >= i0 goto label17;

        $r5 = <org.apache.pdfbox.persistence.util.COSHEXTable: byte[][] TABLE>;

        $b1 = $r1[i12];

        $i17 = (int) $b1;

        $i2 = $i17 + 256;

        $i3 = $i2 % 256;

        $r6 = $r5[$i3];

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r6);

        i12 = i12 + 1;

        goto label16;

     label17:
        $r4 = <org.apache.pdfbox.cos.COSString: byte[] HEX_STRING_CLOSE>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r4);

     label18:
        return;
    }

    public java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor) throws org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.cos.ICOSVisitor r0;
        java.lang.Object $r2;
        org.apache.pdfbox.cos.COSString r1;

        r1 := @this: org.apache.pdfbox.cos.COSString;

        r0 := @parameter0: org.apache.pdfbox.cos.ICOSVisitor;

        $r2 = interfaceinvoke r0.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromString(org.apache.pdfbox.cos.COSString)>(r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.pdfbox.cos.COSString r1, r2;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @this: org.apache.pdfbox.cos.COSString;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.pdfbox.cos.COSString;

        if $z0 == 0 goto label3;

        r1 = (org.apache.pdfbox.cos.COSString) r0;

        $r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        $r4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z3 = r2.<org.apache.pdfbox.cos.COSString: boolean forceHexForm>;

        $z2 = r1.<org.apache.pdfbox.cos.COSString: boolean forceHexForm>;

        if $z3 != $z2 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        return 0;
    }

    public int hashCode()
    {
        byte $b2;
        int $i0, $i1;
        java.lang.String $r1;
        org.apache.pdfbox.cos.COSString r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.cos.COSString;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $z0 = r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm>;

        if $z0 == 0 goto label1;

        $b2 = 17;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        $i1 = $i0 + $b2;

        return $i1;
    }

    static void <clinit>()
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/cos/COSString;");

        <org.apache.pdfbox.cos.COSString: org.apache.commons.logging.Log LOG> = $r0;

        $r1 = newarray (byte)[1];

        $r1[0] = 40;

        <org.apache.pdfbox.cos.COSString: byte[] STRING_OPEN> = $r1;

        $r2 = newarray (byte)[1];

        $r2[0] = 41;

        <org.apache.pdfbox.cos.COSString: byte[] STRING_CLOSE> = $r2;

        $r3 = newarray (byte)[1];

        $r3[0] = 60;

        <org.apache.pdfbox.cos.COSString: byte[] HEX_STRING_OPEN> = $r3;

        $r4 = newarray (byte)[1];

        $r4[0] = 62;

        <org.apache.pdfbox.cos.COSString: byte[] HEX_STRING_CLOSE> = $r4;

        $r5 = newarray (byte)[1];

        $r5[0] = 92;

        <org.apache.pdfbox.cos.COSString: byte[] ESCAPE> = $r5;

        $r6 = newarray (byte)[2];

        $r6[0] = 92;

        $r6[1] = 114;

        <org.apache.pdfbox.cos.COSString: byte[] CR_ESCAPE> = $r6;

        $r7 = newarray (byte)[2];

        $r7[0] = 92;

        $r7[1] = 110;

        <org.apache.pdfbox.cos.COSString: byte[] LF_ESCAPE> = $r7;

        $r8 = newarray (byte)[2];

        $r8[0] = 92;

        $r8[1] = 116;

        <org.apache.pdfbox.cos.COSString: byte[] HT_ESCAPE> = $r8;

        $r9 = newarray (byte)[2];

        $r9[0] = 92;

        $r9[1] = 98;

        <org.apache.pdfbox.cos.COSString: byte[] BS_ESCAPE> = $r9;

        $r10 = newarray (byte)[2];

        $r10[0] = 92;

        $r10[1] = 102;

        <org.apache.pdfbox.cos.COSString: byte[] FF_ESCAPE> = $r10;

        return;
    }
}
