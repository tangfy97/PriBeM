public class org.waveprotocol.wave.util.settings.SettingsBinder extends java.lang.Object
{
    private static final java.util.Map supportedSettingTypes;
    private static final org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator DEFAULT_TYPE_VALIDATOR;
    private static final org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator LIST_TYPE_VALIDATOR;

    public void <init>()
    {
        org.waveprotocol.wave.util.settings.SettingsBinder r0;

        r0 := @this: org.waveprotocol.wave.util.settings.SettingsBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient com.google.inject.Module bindSettings(java.lang.String, java.lang.Class[]) throws org.apache.commons.configuration.ConfigurationException
    {
        org.waveprotocol.wave.util.settings.Setting r33, r40;
        org.apache.commons.configuration.CompositeConfiguration $r0;
        org.apache.commons.configuration.SystemConfiguration $r1;
        java.util.Map $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r9;
        org.waveprotocol.wave.util.settings.SettingsBinder$3 $r11;
        org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator r39;
        java.util.List $r35;
        java.lang.reflect.Type $r31;
        java.lang.'annotation'.Annotation $r32;
        java.lang.StringBuilder $r12, $r26, $r28, $r29;
        org.apache.commons.configuration.ConfigurationException $r15;
        com.google.common.base.Joiner $r13;
        java.util.ArrayList $r4, $r8;
        java.util.LinkedHashMap $r6;
        int $i0, $i1, i2;
        java.lang.String r2, $r3, $r14, $r16, $r18, $r19, $r20, $r30;
        org.apache.commons.configuration.PropertiesConfiguration $r36;
        java.util.Iterator $r7, $r10;
        java.lang.Class[] r5;
        java.lang.IllegalArgumentException $r25;
        java.lang.reflect.Field r38;
        java.lang.reflect.Field[] $r34;
        java.lang.Object $r17, $r21, $r24;
        java.lang.Class $r23, $r27, r37;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Class[];

        $r0 = new org.apache.commons.configuration.CompositeConfiguration;

        specialinvoke $r0.<org.apache.commons.configuration.CompositeConfiguration: void <init>()>();

        $r1 = new org.apache.commons.configuration.SystemConfiguration;

        specialinvoke $r1.<org.apache.commons.configuration.SystemConfiguration: void <init>()>();

        virtualinvoke $r0.<org.apache.commons.configuration.CompositeConfiguration: void addConfiguration(org.apache.commons.configuration.Configuration)>($r1);

        $r3 = virtualinvoke $r0.<org.apache.commons.configuration.CompositeConfiguration: java.lang.String getString(java.lang.String)>(r2);

        if $r3 == null goto label01;

        $r36 = new org.apache.commons.configuration.PropertiesConfiguration;

        specialinvoke $r36.<org.apache.commons.configuration.PropertiesConfiguration: void <init>(java.lang.String)>($r3);

        virtualinvoke $r0.<org.apache.commons.configuration.CompositeConfiguration: void addConfiguration(org.apache.commons.configuration.Configuration)>($r36);

     label01:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $i1 = lengthof r5;

        i2 = 0;

     label02:
        if i2 >= $i1 goto label03;

        r37 = r5[i2];

        $r34 = virtualinvoke r37.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $r35 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r34);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r35);

        i2 = i2 + 1;

        goto label02;

     label03:
        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        $r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z5 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label08;

        $r21 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.lang.reflect.Field) $r21;

        $z3 = virtualinvoke r38.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(class "Lorg/waveprotocol/wave/util/settings/Setting;");

        if $z3 != 0 goto label05;

        goto label04;

     label05:
        $r22 = <org.waveprotocol.wave.util.settings.SettingsBinder: java.util.Map supportedSettingTypes>;

        $r23 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r24 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23);

        r39 = (org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator) $r24;

        if r39 == null goto label06;

        $r31 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $z4 = interfaceinvoke r39.<org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator: boolean check(java.lang.reflect.Type)>($r31);

        if $z4 != 0 goto label07;

     label06:
        $r25 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not one of the supported setting types");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r25;

     label07:
        $r32 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/waveprotocol/wave/util/settings/Setting;");

        r33 = (org.waveprotocol.wave.util.settings.Setting) $r32;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r33, r38);

        goto label04;

     label08:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r17 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r40 = (org.waveprotocol.wave.util.settings.Setting) $r17;

        $r18 = interfaceinvoke r40.<org.waveprotocol.wave.util.settings.Setting: java.lang.String defaultValue()>();

        $z1 = virtualinvoke $r18.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label10;

        $r19 = interfaceinvoke r40.<org.waveprotocol.wave.util.settings.Setting: java.lang.String name()>();

        $z2 = virtualinvoke $r0.<org.apache.commons.configuration.CompositeConfiguration: boolean containsKey(java.lang.String)>($r19);

        if $z2 != 0 goto label10;

        $r20 = interfaceinvoke r40.<org.waveprotocol.wave.util.settings.Setting: java.lang.String name()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r20);

     label10:
        goto label09;

     label11:
        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 <= 0 goto label12;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The following required properties are missing from the server configuration: ");

        $r13 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(", ");

        $r14 = virtualinvoke $r13.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r8);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = new org.apache.commons.configuration.ConfigurationException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label12:
        $r11 = new org.waveprotocol.wave.util.settings.SettingsBinder$3;

        specialinvoke $r11.<org.waveprotocol.wave.util.settings.SettingsBinder$3: void <init>(java.util.Map,org.apache.commons.configuration.CompositeConfiguration)>($r6, $r0);

        return $r11;
    }

    static void <clinit>()
    {
        com.google.common.collect.ImmutableMap $r9;
        org.waveprotocol.wave.util.settings.SettingsBinder$2 $r1;
        org.waveprotocol.wave.util.settings.SettingsBinder$1 $r0;
        org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator $r3, $r5, $r7, $r8;
        com.google.common.collect.ImmutableMap$Builder $r2;
        java.lang.Class $r4, $r6;

        $r0 = new org.waveprotocol.wave.util.settings.SettingsBinder$1;

        specialinvoke $r0.<org.waveprotocol.wave.util.settings.SettingsBinder$1: void <init>()>();

        <org.waveprotocol.wave.util.settings.SettingsBinder: org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator DEFAULT_TYPE_VALIDATOR> = $r0;

        $r1 = new org.waveprotocol.wave.util.settings.SettingsBinder$2;

        specialinvoke $r1.<org.waveprotocol.wave.util.settings.SettingsBinder$2: void <init>()>();

        <org.waveprotocol.wave.util.settings.SettingsBinder: org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator LIST_TYPE_VALIDATOR> = $r1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3 = <org.waveprotocol.wave.util.settings.SettingsBinder: org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator DEFAULT_TYPE_VALIDATOR>;

        virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r5 = <org.waveprotocol.wave.util.settings.SettingsBinder: org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator DEFAULT_TYPE_VALIDATOR>;

        virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r6, $r5);

        $r7 = <org.waveprotocol.wave.util.settings.SettingsBinder: org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator DEFAULT_TYPE_VALIDATOR>;

        virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r7);

        $r8 = <org.waveprotocol.wave.util.settings.SettingsBinder: org.waveprotocol.wave.util.settings.SettingsBinder$SettingTypeValidator LIST_TYPE_VALIDATOR>;

        virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(class "Ljava/util/List;", $r8);

        $r9 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        <org.waveprotocol.wave.util.settings.SettingsBinder: java.util.Map supportedSettingTypes> = $r9;

        return;
    }
}
