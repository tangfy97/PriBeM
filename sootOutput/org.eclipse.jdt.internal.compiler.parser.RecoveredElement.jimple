public class org.eclipse.jdt.internal.compiler.parser.RecoveredElement extends java.lang.Object
{
    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent;
    public int bracketBalance;
    public boolean foundOpeningBrace;
    protected org.eclipse.jdt.internal.compiler.parser.Parser recoveringParser;

    public void <init>(org.eclipse.jdt.internal.compiler.parser.RecoveredElement, int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter1: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void <init>(org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int,org.eclipse.jdt.internal.compiler.parser.Parser)>(r1, i0, null);

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.parser.RecoveredElement, int, org.eclipse.jdt.internal.compiler.parser.Parser)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, r1;
        org.eclipse.jdt.internal.compiler.parser.Parser r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter1: int;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.parser.Parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent> = r1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int bracketBalance> = i0;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.Parser recoveringParser> = r2;

        return;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement addAnnotationName(int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r2, $r3;
        int i0, $i1, $i2, i3, i4, i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        i5 := @parameter3: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $i1 = i0 - 1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int previousAvailableLineEnd(int)>($i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int)>($i2);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement addAnnotationName(int,int,int,int)>(i3, i4, i0, i5);

        return $r3;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r3, $r4;
        int $i0, $i1, $i2, i3;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        i3 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int previousAvailableLineEnd(int)>($i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int)>($i2);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,int)>(r2, i3);

        return $r4;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r3, $r4;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Block;

        i3 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int previousAvailableLineEnd(int)>($i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int)>($i2);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>(r2, i3);

        return $r4;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r3, $r4;
        int $i0, $i1, $i2, i3;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        i3 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int previousAvailableLineEnd(int)>($i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int)>($i2);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,int)>(r2, i3);

        return $r4;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.ImportReference, int)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r3, $r4;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        i3 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationSourceStart>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int previousAvailableLineEnd(int)>($i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int)>($i2);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.ImportReference,int)>(r2, i3);

        return $r4;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r2;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        i3 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceStart>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int previousAvailableLineEnd(int)>($i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int)>($i2);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,int)>(r2, i3);

        return $r4;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.Statement r2;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        i3 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceStart>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int previousAvailableLineEnd(int)>($i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int)>($i2);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int)>(r2, i3);

        return $r4;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r3, $r4;
        int $i0, $i1, $i2, i3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i3 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int previousAvailableLineEnd(int)>($i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int)>($i2);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int)>(r2, i3);

        return $r4;
    }

    protected void addBlockStatement(org.eclipse.jdt.internal.compiler.parser.RecoveredBlock)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r2, r3;
        org.eclipse.jdt.internal.compiler.ast.Block r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r5;
        org.eclipse.jdt.internal.compiler.ast.Statement $r4;
        int $i0, i1;

        r5 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r2 == null goto label3;

        r3 = r1.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        i1 = 0;

        goto label2;

     label1:
        $r4 = r3[i1];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int)>($r4, 0);

        i1 = i1 + 1;

     label2:
        $i0 = lengthof r3;

        if i1 < $i0 goto label1;

     label3:
        return;
    }

    public void addModifier(int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public int depth()
    {
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 = 0;

        r2 = r0;

        goto label2;

     label1:
        i0 = i0 + 1;

     label2:
        $r1 = r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        r2 = $r1;

        if $r1 != null goto label1;

        return i0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer enclosingInitializer()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 = r0;

        goto label3;

     label1:
        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        if $z0 == 0 goto label2;

        $r1 = (org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer) r2;

        return $r1;

     label2:
        r2 = r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

     label3:
        if r2 != null goto label1;

        return null;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredMethod enclosingMethod()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 = r0;

        goto label3;

     label1:
        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        if $z0 == 0 goto label2;

        $r1 = (org.eclipse.jdt.internal.compiler.parser.RecoveredMethod) r2;

        return $r1;

     label2:
        r2 = r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

     label3:
        if r2 != null goto label1;

        return null;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredType enclosingType()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredType $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, r2;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 = r0;

        goto label3;

     label1:
        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredType;

        if $z0 == 0 goto label2;

        $r1 = (org.eclipse.jdt.internal.compiler.parser.RecoveredType) r2;

        return $r1;

     label2:
        r2 = r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

     label3:
        if r2 != null goto label1;

        return null;
    }

    public org.eclipse.jdt.internal.compiler.parser.Parser parser()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, r3;
        org.eclipse.jdt.internal.compiler.parser.Parser $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r3 = r0;

        goto label3;

     label1:
        $r1 = r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.Parser recoveringParser>;

        if $r1 == null goto label2;

        $r2 = r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.Parser recoveringParser>;

        return $r2;

     label2:
        r3 = r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

     label3:
        if r3 != null goto label1;

        return null;
    }

    public org.eclipse.jdt.internal.compiler.ast.ASTNode parseTree()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        return null;
    }

    public void resetPendingModifiers()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        return;
    }

    public void preserveEnclosingBlocks()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r3 = r0;

        goto label4;

     label1:
        $z0 = r3 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        if $z0 == 0 goto label2;

        $r2 = (org.eclipse.jdt.internal.compiler.parser.RecoveredBlock) r3;

        $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: boolean preserveContent> = 1;

     label2:
        $z1 = r3 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredType;

        if $z1 == 0 goto label3;

        $r1 = (org.eclipse.jdt.internal.compiler.parser.RecoveredType) r3;

        $r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: boolean preserveContent> = 1;

     label3:
        r3 = r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

     label4:
        if r3 != null goto label1;

        return;
    }

    public int previousAvailableLineEnd(int)
    {
        int[] $r3, $r4, $r5;
        int i0, $i1, $i2, $i3, i4, i7, $i8, $i9;
        org.eclipse.jdt.internal.compiler.parser.Parser $r1;
        org.eclipse.jdt.internal.compiler.parser.Scanner r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;
        char $c5, $c6;
        char[] r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        if $r1 != null goto label1;

        return i0;

     label1:
        r2 = $r1.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.parser.Scanner scanner>;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.parser.Scanner: int[] lineEnds>;

        if $r3 != null goto label2;

        return i0;

     label2:
        $r4 = r2.<org.eclipse.jdt.internal.compiler.parser.Scanner: int[] lineEnds>;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.parser.Scanner: int linePtr>;

        $i2 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>(i0, $r4, 0, $i1);

        if $i2 >= 2 goto label3;

        return i0;

     label3:
        $r5 = r2.<org.eclipse.jdt.internal.compiler.parser.Scanner: int[] lineEnds>;

        $i3 = $i2 - 2;

        i4 = $r5[$i3];

        r6 = r2.<org.eclipse.jdt.internal.compiler.parser.Scanner: char[] source>;

        i7 = i4 + 1;

        goto label6;

     label4:
        $c5 = r6[i7];

        $i8 = (int) $c5;

        if $i8 == 32 goto label5;

        $c6 = r6[i7];

        $i9 = (int) $c6;

        if $i9 == 9 goto label5;

        return i0;

     label5:
        i7 = i7 + 1;

     label6:
        if i7 < i0 goto label4;

        return i4;
    }

    public int sourceEnd()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        return 0;
    }

    protected java.lang.String tabString(int)
    {
        java.lang.StringBuffer $r3;
        int i0, i1, $i3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r2;
        java.lang.String $r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter0: int;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i1 = i0;

        goto label2;

     label1:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $i3 = (int) -1;

        i1 = i1 + $i3;

     label2:
        if i1 > 0 goto label1;

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement topElement()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 = r0;

        goto label2;

     label1:
        r2 = r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

     label2:
        $r1 = r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 != null goto label1;

        return r2;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: java.lang.String toString(int)>(0);

        return $r1;
    }

    public java.lang.String toString(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredType type()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredType $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, r2;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        r2 = r0;

        goto label3;

     label1:
        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredType;

        if $z0 == 0 goto label2;

        $r1 = (org.eclipse.jdt.internal.compiler.parser.RecoveredType) r2;

        return $r1;

     label2:
        r2 = r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

     label3:
        if r2 != null goto label1;

        return null;
    }

    public void updateBodyStart(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: boolean foundOpeningBrace> = 1;

        return;
    }

    public void updateFromParserState()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        return;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int, int)
    {
        int $i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0, $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int bracketBalance>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int bracketBalance> = $i1;

        if $i1 > 0 goto label1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 == null goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int,int)>(i2, i3);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        return $r2;

     label1:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnOpeningBrace(int, int)
    {
        int $i0, $i1, i2, $i3, i4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i4 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int bracketBalance>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: int bracketBalance> = $i1;

        if $i0 != 0 goto label1;

        $i3 = i2 + 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateBodyStart(int)>($i3);

        return r0;

     label1:
        return null;
    }

    public void updateParseTree()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        return;
    }

    public void updateSourceEndIfNecessary(int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void updateSourceEndIfNecessary(int)
    {
        int i0, $i1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void updateSourceEndIfNecessary(int,int)>($i1, i0);

        return;
    }
}
