public class org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader extends java.lang.Object
{
    private final org.springframework.beans.factory.support.BeanDefinitionRegistry registry;
    private org.springframework.beans.factory.support.BeanNameGenerator beanNameGenerator;
    private org.springframework.context.'annotation'.ScopeMetadataResolver scopeMetadataResolver;

    public void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.context.'annotation'.AnnotationBeanNameGenerator $r1;
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader r0;
        org.springframework.context.'annotation'.AnnotationScopeMetadataResolver $r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r3, $r4;

        r0 := @this: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        r3 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.context.'annotation'.AnnotationBeanNameGenerator;

        specialinvoke $r1.<org.springframework.context.'annotation'.AnnotationBeanNameGenerator: void <init>()>();

        r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanNameGenerator beanNameGenerator> = $r1;

        $r2 = new org.springframework.context.'annotation'.AnnotationScopeMetadataResolver;

        specialinvoke $r2.<org.springframework.context.'annotation'.AnnotationScopeMetadataResolver: void <init>()>();

        r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.context.'annotation'.ScopeMetadataResolver scopeMetadataResolver> = $r2;

        r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry registry> = r3;

        $r4 = r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry registry>;

        staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: void registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)>($r4);

        return;
    }

    public final org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()
    {
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1;
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader r0;

        r0 := @this: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        $r1 = r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry registry>;

        return $r1;
    }

    public void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)
    {
        org.springframework.context.'annotation'.AnnotationBeanNameGenerator $r3;
        org.springframework.beans.factory.support.BeanNameGenerator r1, $r2;
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader r0;

        r0 := @this: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        r1 := @parameter0: org.springframework.beans.factory.support.BeanNameGenerator;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r3 = new org.springframework.context.'annotation'.AnnotationBeanNameGenerator;

        $r2 = $r3;

        specialinvoke $r3.<org.springframework.context.'annotation'.AnnotationBeanNameGenerator: void <init>()>();

     label2:
        r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanNameGenerator beanNameGenerator> = $r2;

        return;
    }

    public void setScopeMetadataResolver(org.springframework.context.'annotation'.ScopeMetadataResolver)
    {
        org.springframework.context.'annotation'.ScopeMetadataResolver r1, $r2;
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader r0;
        org.springframework.context.'annotation'.AnnotationScopeMetadataResolver $r3;

        r0 := @this: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        r1 := @parameter0: org.springframework.context.'annotation'.ScopeMetadataResolver;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r3 = new org.springframework.context.'annotation'.AnnotationScopeMetadataResolver;

        $r2 = $r3;

        specialinvoke $r3.<org.springframework.context.'annotation'.AnnotationScopeMetadataResolver: void <init>()>();

     label2:
        r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.context.'annotation'.ScopeMetadataResolver scopeMetadataResolver> = $r2;

        return;
    }

    public transient void register(java.lang.Class[])
    {
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader r2;
        int i0, i1;
        java.lang.Class[] r0;
        java.lang.Class r1;

        r2 := @this: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        r0 := @parameter0: java.lang.Class[];

        i0 = lengthof r0;

        i1 = 0;

        goto label2;

     label1:
        r1 = r0[i1];

        virtualinvoke r2.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: void registerBean(java.lang.Class)>(r1);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        return;
    }

    public void registerBean(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader r0;

        r0 := @this: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        r1 := @parameter0: java.lang.Class;

        virtualinvoke r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: void registerBean(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, null, null);

        return;
    }

    public transient void registerBean(java.lang.Class, java.lang.Class[])
    {
        java.lang.Class[] r2;
        java.lang.Class r1;
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader r0;

        r0 := @this: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        virtualinvoke r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: void registerBean(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, null, r2);

        return;
    }

    public transient void registerBean(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        org.springframework.beans.factory.support.AutowireCandidateQualifier $r17;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r7, $r12, $r14;
        org.springframework.context.'annotation'.ScopeMetadata $r4;
        org.springframework.beans.factory.config.BeanDefinitionHolder $r11, $r13;
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader r2;
        int i0, i1;
        java.lang.String $r5, r6, r9, $r18;
        org.springframework.beans.factory.'annotation'.AnnotatedGenericBeanDefinition $r0;
        boolean $z0, $z1;
        java.lang.Class[] r10;
        org.springframework.context.'annotation'.ScopeMetadataResolver $r3;
        org.springframework.beans.factory.support.BeanNameGenerator $r8;
        java.lang.Class r1, $r15, $r16, r19;

        r2 := @this: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        r1 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.Class[];

        $r0 = new org.springframework.beans.factory.'annotation'.AnnotatedGenericBeanDefinition;

        specialinvoke $r0.<org.springframework.beans.factory.'annotation'.AnnotatedGenericBeanDefinition: void <init>(java.lang.Class)>(r1);

        $r3 = r2.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.context.'annotation'.ScopeMetadataResolver scopeMetadataResolver>;

        $r4 = interfaceinvoke $r3.<org.springframework.context.'annotation'.ScopeMetadataResolver: org.springframework.context.'annotation'.ScopeMetadata resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)>($r0);

        $r5 = virtualinvoke $r4.<org.springframework.context.'annotation'.ScopeMetadata: java.lang.String getScopeName()>();

        virtualinvoke $r0.<org.springframework.beans.factory.'annotation'.AnnotatedGenericBeanDefinition: void setScope(java.lang.String)>($r5);

        if r6 == null goto label1;

        $r18 = r6;

        goto label2;

     label1:
        $r8 = r2.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanNameGenerator beanNameGenerator>;

        $r7 = r2.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry registry>;

        $r18 = interfaceinvoke $r8.<org.springframework.beans.factory.support.BeanNameGenerator: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)>($r0, $r7);

     label2:
        r9 = $r18;

        staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: void processCommonDefinitionAnnotations(org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition)>($r0);

        if r10 == null goto label8;

        i0 = lengthof r10;

        i1 = 0;

        goto label7;

     label3:
        r19 = r10[i1];

        $r15 = class "Lorg/springframework/context/annotation/Primary;";

        $z0 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>(r19);

        if $z0 == 0 goto label4;

        virtualinvoke $r0.<org.springframework.beans.factory.'annotation'.AnnotatedGenericBeanDefinition: void setPrimary(boolean)>(1);

        goto label6;

     label4:
        $r16 = class "Lorg/springframework/context/annotation/Lazy;";

        $z1 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>(r19);

        if $z1 == 0 goto label5;

        virtualinvoke $r0.<org.springframework.beans.factory.'annotation'.AnnotatedGenericBeanDefinition: void setLazyInit(boolean)>(1);

        goto label6;

     label5:
        $r17 = new org.springframework.beans.factory.support.AutowireCandidateQualifier;

        specialinvoke $r17.<org.springframework.beans.factory.support.AutowireCandidateQualifier: void <init>(java.lang.Class)>(r19);

        virtualinvoke $r0.<org.springframework.beans.factory.'annotation'.AnnotatedGenericBeanDefinition: void addQualifier(org.springframework.beans.factory.support.AutowireCandidateQualifier)>($r17);

     label6:
        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label3;

     label8:
        $r11 = new org.springframework.beans.factory.config.BeanDefinitionHolder;

        specialinvoke $r11.<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r0, r9);

        $r12 = r2.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry registry>;

        $r13 = staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: org.springframework.beans.factory.config.BeanDefinitionHolder applyScopedProxyMode(org.springframework.context.'annotation'.ScopeMetadata,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)>($r4, $r11, $r12);

        $r14 = r2.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry registry>;

        staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: void registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)>($r13, $r14);

        return;
    }
}
