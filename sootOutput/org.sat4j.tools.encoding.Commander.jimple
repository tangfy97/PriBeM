public class org.sat4j.tools.encoding.Commander extends org.sat4j.tools.encoding.EncodingStrategyAdapter
{

    public void <init>()
    {
        org.sat4j.tools.encoding.Commander r0;

        r0 := @this: org.sat4j.tools.encoding.Commander;

        specialinvoke r0.<org.sat4j.tools.encoding.EncodingStrategyAdapter: void <init>()>();

        return;
    }

    public org.sat4j.specs.IConstr addAtMostOne(org.sat4j.specs.ISolver, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ISolver r1;
        org.sat4j.specs.IConstr $r3;
        org.sat4j.specs.IVecInt r2;
        org.sat4j.tools.encoding.Commander r0;

        r0 := @this: org.sat4j.tools.encoding.Commander;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        r2 := @parameter1: org.sat4j.specs.IVecInt;

        $r3 = specialinvoke r0.<org.sat4j.tools.encoding.Commander: org.sat4j.specs.IConstr addAtMostOne(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r1, r2, 3);

        return $r3;
    }

    private org.sat4j.specs.IConstr addAtMostOne(org.sat4j.specs.ISolver, org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        int[] r12;
        org.sat4j.specs.ISolver r5;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, i37, i38, i39, $i40, i41, i42;
        double $d0, $d1, $d2, $d3;
        org.sat4j.specs.IConstr $r7, $r8, $r9, $r10, $r11;
        org.sat4j.core.ConstrGroup $r0;
        org.sat4j.specs.IVecInt r3;
        org.sat4j.core.VecInt $r1, $r2, $r6;
        org.sat4j.tools.encoding.Commander r4;

        r4 := @this: org.sat4j.tools.encoding.Commander;

        r5 := @parameter0: org.sat4j.specs.ISolver;

        r3 := @parameter1: org.sat4j.specs.IVecInt;

        i2 := @parameter2: int;

        $r0 = new org.sat4j.core.ConstrGroup;

        specialinvoke $r0.<org.sat4j.core.ConstrGroup: void <init>(boolean)>(0);

        $r1 = new org.sat4j.core.VecInt;

        specialinvoke $r1.<org.sat4j.core.VecInt: void <init>()>();

        $r2 = new org.sat4j.core.VecInt;

        specialinvoke $r2.<org.sat4j.core.VecInt: void <init>()>();

        $i0 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int size()>();

        $i1 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int size()>();

        $d1 = (double) $i1;

        $d0 = (double) i2;

        $d2 = $d1 / $d0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i3 = (int) $d3;

        if i3 != 1 goto label05;

        i33 = 0;

     label01:
        $i26 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int size()>();

        $i27 = $i26 - 1;

        if i33 >= $i27 goto label04;

        i34 = i33 + 1;

     label02:
        $i28 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int size()>();

        if i34 >= $i28 goto label03;

        $i29 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int get(int)>(i33);

        $i30 = neg $i29;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i30);

        $i31 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int get(int)>(i34);

        $i32 = neg $i31;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i32);

        $r11 = interfaceinvoke r5.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r1);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r11);

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        i34 = i34 + 1;

        goto label02;

     label03:
        i33 = i33 + 1;

        goto label01;

     label04:
        return $r0;

     label05:
        r12 = newarray (int)[i3];

        i35 = 0;

     label06:
        if i35 >= i3 goto label07;

        $i25 = interfaceinvoke r5.<org.sat4j.specs.ISolver: int nextFreeVarId(boolean)>(1);

        r12[i35] = $i25;

        i35 = i35 + 1;

        goto label06;

     label07:
        $i4 = i3 - 1;

        $i5 = $i4 * i2;

        i36 = $i0 - $i5;

        i37 = 0;

     label08:
        if i37 >= i3 goto label17;

        $i6 = i3 - 1;

        if i37 != $i6 goto label09;

        i38 = i36;

        goto label10;

     label09:
        i38 = i2;

     label10:
        i39 = 0;

     label11:
        $i40 = i38 - 1;

        if i39 >= $i40 goto label14;

        i41 = i39 + 1;

     label12:
        if i41 >= i38 goto label13;

        $i17 = i37 * i2;

        $i18 = $i17 + i39;

        $i19 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int get(int)>($i18);

        $i20 = neg $i19;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i20);

        $i21 = i37 * i2;

        $i22 = $i21 + i41;

        $i23 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int get(int)>($i22);

        $i24 = neg $i23;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i24);

        $r10 = interfaceinvoke r5.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r1);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r10);

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        i41 = i41 + 1;

        goto label12;

     label13:
        i39 = i39 + 1;

        goto label11;

     label14:
        $i7 = r12[i37];

        $i8 = neg $i7;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        i42 = 0;

     label15:
        if i42 >= i38 goto label16;

        $i9 = i37 * i2;

        $i10 = $i9 + i42;

        $i11 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int get(int)>($i10);

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i11);

        $i12 = r12[i37];

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i12);

        $i13 = i37 * i2;

        $i14 = $i13 + i42;

        $i15 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int get(int)>($i14);

        $i16 = neg $i15;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i16);

        $r9 = interfaceinvoke r5.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r1);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r9);

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        i42 = i42 + 1;

        goto label15;

     label16:
        $r8 = interfaceinvoke r5.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r2);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r8);

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void clear()>();

        i37 = i37 + 1;

        goto label08;

     label17:
        $r6 = new org.sat4j.core.VecInt;

        specialinvoke $r6.<org.sat4j.core.VecInt: void <init>(int[])>(r12);

        $r7 = specialinvoke r4.<org.sat4j.tools.encoding.Commander: org.sat4j.specs.IConstr addAtMostOne(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r5, $r6, i2);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r7);

        return $r0;
    }

    public org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.ISolver, org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ISolver r1;
        org.sat4j.specs.IConstr $r3;
        org.sat4j.specs.IVecInt r2;
        int i0;
        org.sat4j.tools.encoding.Commander r0;

        r0 := @this: org.sat4j.tools.encoding.Commander;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        r2 := @parameter1: org.sat4j.specs.IVecInt;

        i0 := @parameter2: int;

        $r3 = specialinvoke r0.<org.sat4j.tools.encoding.EncodingStrategyAdapter: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r1, r2, i0);

        return $r3;
    }

    private org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.ISolver, org.sat4j.specs.IVecInt, int, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ISolver r7;
        org.sat4j.specs.IConstr $r8, $r11, $r13, $r15, $r17, $r19, $r32;
        org.sat4j.core.ConstrGroup $r0;
        org.sat4j.specs.IVecInt r2, r33;
        org.sat4j.core.VecInt $r1, $r3, $r4, $r12, $r16, $r21, $r22, $r23, $r25, $r26;
        int[][] r34;
        int[] $r9, $r10, $r20, $r24, $r27, $r28, $r29, $r30;
        org.sat4j.tools.encoding.Binomial $r5;
        int $i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58;
        double $d0, $d1, $d2, $d3;
        java.io.PrintStream $r14, $r18;
        org.sat4j.core.VecInt[] r35;
        org.sat4j.specs.IVecInt[] $r31;
        org.sat4j.tools.encoding.Commander r6;

        r6 := @this: org.sat4j.tools.encoding.Commander;

        r7 := @parameter0: org.sat4j.specs.ISolver;

        r2 := @parameter1: org.sat4j.specs.IVecInt;

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        $r0 = new org.sat4j.core.ConstrGroup;

        specialinvoke $r0.<org.sat4j.core.ConstrGroup: void <init>(boolean)>(0);

        $r1 = new org.sat4j.core.VecInt;

        specialinvoke $r1.<org.sat4j.core.VecInt: void <init>()>();

        $i0 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int size()>();

        $d1 = (double) $i0;

        $d0 = (double) i1;

        $d2 = $d1 / $d0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i2 = (int) $d3;

        if i2 != 1 goto label05;

        $i38 = i3 + 1;

        $r31 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt[] subset(int)>($i38);

        i42 = lengthof $r31;

        i43 = 0;

     label01:
        if i43 >= i42 goto label04;

        r33 = $r31[i43];

        i44 = 0;

     label02:
        $i39 = interfaceinvoke r33.<org.sat4j.specs.IVecInt: int size()>();

        if i44 >= $i39 goto label03;

        $i40 = interfaceinvoke r33.<org.sat4j.specs.IVecInt: int get(int)>(i44);

        $i41 = neg $i40;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i41);

        i44 = i44 + 1;

        goto label02;

     label03:
        $r32 = interfaceinvoke r7.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r1);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r32);

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        i43 = i43 + 1;

        goto label01;

     label04:
        return $r0;

     label05:
        r34 = newmultiarray (int)[i2][i3];

        $r3 = new org.sat4j.core.VecInt;

        specialinvoke $r3.<org.sat4j.core.VecInt: void <init>()>();

        i45 = 0;

     label06:
        $i4 = i2 - 1;

        if i45 >= $i4 goto label09;

        i46 = 0;

     label07:
        if i46 >= i3 goto label08;

        $r29 = r34[i45];

        $i36 = interfaceinvoke r7.<org.sat4j.specs.ISolver: int nextFreeVarId(boolean)>(1);

        $r29[i46] = $i36;

        $r30 = r34[i45];

        $i37 = $r30[i46];

        virtualinvoke $r3.<org.sat4j.core.VecInt: org.sat4j.specs.IVecInt push(int)>($i37);

        i46 = i46 + 1;

        goto label07;

     label08:
        i45 = i45 + 1;

        goto label06;

     label09:
        $i5 = i2 - 1;

        $i6 = $i5 * i1;

        i47 = $i0 - $i6;

        i48 = 0;

     label10:
        if i48 >= i3 goto label11;

        $i32 = i2 - 1;

        $r27 = r34[$i32];

        $i33 = interfaceinvoke r7.<org.sat4j.specs.ISolver: int nextFreeVarId(boolean)>(1);

        $r27[i48] = $i33;

        $i34 = i2 - 1;

        $r28 = r34[$i34];

        $i35 = $r28[i48];

        virtualinvoke $r3.<org.sat4j.core.VecInt: org.sat4j.specs.IVecInt push(int)>($i35);

        i48 = i48 + 1;

        goto label10;

     label11:
        r35 = newarray (org.sat4j.core.VecInt)[i2];

        i49 = 0;

     label12:
        $i7 = i2 - 1;

        if i49 >= $i7 goto label19;

        $r23 = new org.sat4j.core.VecInt;

        specialinvoke $r23.<org.sat4j.core.VecInt: void <init>()>();

        r35[i49] = $r23;

        $i26 = i2 - 1;

        if i49 != $i26 goto label13;

        i50 = i47;

        goto label14;

     label13:
        i50 = i1;

     label14:
        i51 = 0;

     label15:
        if i51 >= i50 goto label16;

        $r26 = r35[i49];

        $i29 = i49 * i1;

        $i30 = $i29 + i51;

        $i31 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int get(int)>($i30);

        virtualinvoke $r26.<org.sat4j.core.VecInt: org.sat4j.specs.IVecInt push(int)>($i31);

        i51 = i51 + 1;

        goto label15;

     label16:
        i52 = 0;

     label17:
        if i52 >= i3 goto label18;

        $r25 = r35[i49];

        $r24 = r34[i49];

        $i27 = $r24[i52];

        $i28 = neg $i27;

        virtualinvoke $r25.<org.sat4j.core.VecInt: org.sat4j.specs.IVecInt push(int)>($i28);

        i52 = i52 + 1;

        goto label17;

     label18:
        i49 = i49 + 1;

        goto label12;

     label19:
        $i8 = i2 - 1;

        $r4 = new org.sat4j.core.VecInt;

        specialinvoke $r4.<org.sat4j.core.VecInt: void <init>()>();

        r35[$i8] = $r4;

        i53 = 0;

     label20:
        if i53 >= i47 goto label21;

        $i21 = i2 - 1;

        $r22 = r35[$i21];

        $i22 = i2 - 1;

        $i23 = $i22 * i1;

        $i24 = $i23 + i53;

        $i25 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int get(int)>($i24);

        virtualinvoke $r22.<org.sat4j.core.VecInt: org.sat4j.specs.IVecInt push(int)>($i25);

        i53 = i53 + 1;

        goto label20;

     label21:
        i54 = 0;

     label22:
        if i54 >= i3 goto label23;

        $i17 = i2 - 1;

        $r21 = r35[$i17];

        $i18 = i2 - 1;

        $r20 = r34[$i18];

        $i19 = $r20[i54];

        $i20 = neg $i19;

        virtualinvoke $r21.<org.sat4j.core.VecInt: org.sat4j.specs.IVecInt push(int)>($i20);

        i54 = i54 + 1;

        goto label22;

     label23:
        $r5 = new org.sat4j.tools.encoding.Binomial;

        specialinvoke $r5.<org.sat4j.tools.encoding.Binomial: void <init>()>();

        i55 = 0;

     label24:
        if i55 >= i2 goto label25;

        $r16 = r35[i55];

        $r17 = virtualinvoke $r5.<org.sat4j.tools.encoding.Binomial: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r7, $r16, i3);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r17);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r19 = virtualinvoke $r0.<org.sat4j.core.ConstrGroup: org.sat4j.specs.IConstr getConstr(int)>(i55);

        $i16 = interfaceinvoke $r19.<org.sat4j.specs.IConstr: int size()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(int)>($i16);

        i55 = i55 + 1;

        goto label24;

     label25:
        i56 = 0;

     label26:
        if i56 >= i2 goto label27;

        $r12 = r35[i56];

        $r13 = virtualinvoke $r5.<org.sat4j.tools.encoding.Binomial: org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r7, $r12, i3);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r13);

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $i14 = i56 + i2;

        $r15 = virtualinvoke $r0.<org.sat4j.core.ConstrGroup: org.sat4j.specs.IConstr getConstr(int)>($i14);

        $i15 = interfaceinvoke $r15.<org.sat4j.specs.IConstr: int size()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(int)>($i15);

        i56 = i56 + 1;

        goto label26;

     label27:
        i57 = 0;

     label28:
        if i57 >= i2 goto label31;

        i58 = 0;

     label29:
        $i9 = i3 - 1;

        if i58 >= $i9 goto label30;

        $r9 = r34[i57];

        $i10 = $r9[i58];

        $i11 = neg $i10;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i11);

        $r10 = r34[i57];

        $i12 = i58 + 1;

        $i13 = $r10[$i12];

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i13);

        $r11 = interfaceinvoke r7.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r1);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r11);

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        i58 = i58 + 1;

        goto label29;

     label30:
        i57 = i57 + 1;

        goto label28;

     label31:
        $r8 = virtualinvoke r6.<org.sat4j.tools.encoding.Commander: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r7, $r3, i3);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r8);

        return $r0;
    }

    public org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.ISolver, org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ISolver r3;
        org.sat4j.specs.IConstr $r4;
        org.sat4j.specs.IVecInt r1;
        int $i0, $i1, i2, $i3, $i4, $i5, i6;
        org.sat4j.core.VecInt $r0;
        org.sat4j.tools.encoding.Commander r2;

        r2 := @this: org.sat4j.tools.encoding.Commander;

        r3 := @parameter0: org.sat4j.specs.ISolver;

        r1 := @parameter1: org.sat4j.specs.IVecInt;

        i2 := @parameter2: int;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>()>();

        i6 = 0;

     label1:
        $i0 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if i6 >= $i0 goto label2;

        $i4 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int get(int)>(i6);

        $i5 = neg $i4;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        $i3 = $i1 - i2;

        $r4 = virtualinvoke r2.<org.sat4j.tools.encoding.Commander: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r3, $r0, $i3);

        return $r4;
    }

    public org.sat4j.specs.IConstr addExactlyOne(org.sat4j.specs.ISolver, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ISolver r2;
        org.sat4j.specs.IConstr $r4, $r5;
        org.sat4j.core.ConstrGroup $r0;
        org.sat4j.specs.IVecInt r3;
        org.sat4j.tools.encoding.Commander r1;

        r1 := @this: org.sat4j.tools.encoding.Commander;

        r2 := @parameter0: org.sat4j.specs.ISolver;

        r3 := @parameter1: org.sat4j.specs.IVecInt;

        $r0 = new org.sat4j.core.ConstrGroup;

        specialinvoke $r0.<org.sat4j.core.ConstrGroup: void <init>()>();

        $r4 = virtualinvoke r1.<org.sat4j.tools.encoding.Commander: org.sat4j.specs.IConstr addAtLeastOne(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt)>(r2, r3);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r4);

        $r5 = virtualinvoke r1.<org.sat4j.tools.encoding.Commander: org.sat4j.specs.IConstr addAtMostOne(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt)>(r2, r3);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r5);

        return $r0;
    }

    public org.sat4j.specs.IConstr addExactly(org.sat4j.specs.ISolver, org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ISolver r2;
        org.sat4j.specs.IConstr $r4, $r5;
        org.sat4j.core.ConstrGroup $r0;
        org.sat4j.specs.IVecInt r3;
        int i0;
        org.sat4j.tools.encoding.Commander r1;

        r1 := @this: org.sat4j.tools.encoding.Commander;

        r2 := @parameter0: org.sat4j.specs.ISolver;

        r3 := @parameter1: org.sat4j.specs.IVecInt;

        i0 := @parameter2: int;

        $r0 = new org.sat4j.core.ConstrGroup;

        specialinvoke $r0.<org.sat4j.core.ConstrGroup: void <init>()>();

        $r4 = virtualinvoke r1.<org.sat4j.tools.encoding.Commander: org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r2, r3, i0);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r4);

        $r5 = virtualinvoke r1.<org.sat4j.tools.encoding.Commander: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.ISolver,org.sat4j.specs.IVecInt,int)>(r2, r3, i0);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r5);

        return $r0;
    }
}
