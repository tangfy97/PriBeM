public class org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI extends org.fife.ui.rtextarea.RTextAreaUI
{
    private static final java.lang.String SHARED_ACTION_MAP_NAME;
    private static final java.lang.String SHARED_INPUT_MAP_NAME;
    private static final javax.swing.text.EditorKit defaultKit;

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        specialinvoke $r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: void <init>(javax.swing.JComponent)>(r1);

        return $r0;
    }

    public void <init>(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        r1 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: void <init>(javax.swing.JComponent)>(r1);

        return;
    }

    public javax.swing.text.View create(javax.swing.text.Element)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView $r5;
        org.fife.ui.rsyntaxtextarea.SyntaxView $r3;
        javax.swing.text.View r6;
        javax.swing.text.Element r4;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        r4 := @parameter0: javax.swing.text.Element;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: org.fife.ui.rtextarea.RTextArea getRTextArea()>();

        $z0 = $r1 instanceof org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        if $z0 == 0 goto label3;

        r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r1;

        $z1 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getLineWrap()>();

        if $z1 == 0 goto label1;

        $r5 = new org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        specialinvoke $r5.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void <init>(javax.swing.text.Element)>(r4);

        r6 = $r5;

        goto label2;

     label1:
        $r3 = new org.fife.ui.rsyntaxtextarea.SyntaxView;

        specialinvoke $r3.<org.fife.ui.rsyntaxtextarea.SyntaxView: void <init>(javax.swing.text.Element)>(r4);

        r6 = $r3;

     label2:
        return r6;

     label3:
        return null;
    }

    protected javax.swing.text.Highlighter createHighlighter()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter $r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        $r0 = new org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        specialinvoke $r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void <init>()>();

        return $r0;
    }

    protected java.lang.String getActionMapName()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        return "RSyntaxTextAreaUI.actionMap";
    }

    public javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent)
    {
        javax.swing.text.EditorKit $r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r1;
        javax.swing.text.JTextComponent r2;

        r1 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        r2 := @parameter0: javax.swing.text.JTextComponent;

        $r0 = <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: javax.swing.text.EditorKit defaultKit>;

        return $r0;
    }

    protected javax.swing.InputMap getRTextAreaInputMap()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r3;
        javax.swing.plaf.InputMapUIResource $r0;
        java.lang.Object $r1;
        javax.swing.InputMap r4;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaDefaultInputMap $r2;

        r3 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        $r0 = new javax.swing.plaf.InputMapUIResource;

        specialinvoke $r0.<javax.swing.plaf.InputMapUIResource: void <init>()>();

        $r1 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("RSyntaxTextAreaUI.inputMap");

        r4 = (javax.swing.InputMap) $r1;

        if r4 != null goto label1;

        $r2 = new org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaDefaultInputMap;

        specialinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaDefaultInputMap: void <init>()>();

        r4 = $r2;

        staticinvoke <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>("RSyntaxTextAreaUI.inputMap", $r2);

     label1:
        virtualinvoke $r0.<javax.swing.InputMap: void setParent(javax.swing.InputMap)>(r4);

        return $r0;
    }

    protected void paintBackground(java.awt.Graphics)
    {
        java.awt.Graphics r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: void paintBackground(java.awt.Graphics)>(r1);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: void paintMatchedBracket(java.awt.Graphics)>(r1);

        return;
    }

    protected void paintMatchedBracket(java.awt.Graphics)
    {
        java.awt.Rectangle $r3, $r4;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        java.awt.Graphics r5;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        r5 := @parameter0: java.awt.Graphics;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r1;

        $z0 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean isBracketMatchingEnabled()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Rectangle getMatchRectangle()>();

        if $r3 == null goto label1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: void paintMatchedBracketImpl(java.awt.Graphics,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,java.awt.Rectangle)>(r5, r2, $r3);

     label1:
        $z1 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getPaintMatchedBracketPair()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Rectangle getDotRectangle()>();

        if $r4 == null goto label2;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: void paintMatchedBracketImpl(java.awt.Graphics,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,java.awt.Rectangle)>(r5, r2, $r4);

     label2:
        return;
    }

    private void paintMatchedBracketImpl(java.awt.Graphics, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, java.awt.Rectangle)
    {
        java.awt.Color $r1, $r3, $r5, $r6;
        java.awt.Rectangle r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r7;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r0;
        java.awt.Graphics r2;

        r7 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        r2 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        r4 := @parameter2: java.awt.Rectangle;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getAnimateBracketMatching()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMatchedBracketBGColor()>();

        if $r5 == null goto label1;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i19 = r4.<java.awt.Rectangle: int x>;

        $i18 = r4.<java.awt.Rectangle: int y>;

        $i17 = r4.<java.awt.Rectangle: int width>;

        $i15 = r4.<java.awt.Rectangle: int height>;

        $i16 = $i15 - 1;

        virtualinvoke r2.<java.awt.Graphics: void fillRoundRect(int,int,int,int,int,int)>($i19, $i18, $i17, $i16, 5, 5);

     label1:
        $r6 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMatchedBracketBorderColor()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i14 = r4.<java.awt.Rectangle: int x>;

        $i13 = r4.<java.awt.Rectangle: int y>;

        $i12 = r4.<java.awt.Rectangle: int width>;

        $i10 = r4.<java.awt.Rectangle: int height>;

        $i11 = $i10 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawRoundRect(int,int,int,int,int,int)>($i14, $i13, $i12, $i11, 5, 5);

        goto label4;

     label2:
        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMatchedBracketBGColor()>();

        if $r1 == null goto label3;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r1);

        $i9 = r4.<java.awt.Rectangle: int x>;

        $i8 = r4.<java.awt.Rectangle: int y>;

        $i7 = r4.<java.awt.Rectangle: int width>;

        $i5 = r4.<java.awt.Rectangle: int height>;

        $i6 = $i5 - 1;

        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>($i9, $i8, $i7, $i6);

     label3:
        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMatchedBracketBorderColor()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i4 = r4.<java.awt.Rectangle: int x>;

        $i3 = r4.<java.awt.Rectangle: int y>;

        $i2 = r4.<java.awt.Rectangle: int width>;

        $i0 = r4.<java.awt.Rectangle: int height>;

        $i1 = $i0 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawRect(int,int,int,int)>($i4, $i3, $i2, $i1);

     label4:
        return;
    }

    protected void propertyChange(java.beans.PropertyChangeEvent)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r2;
        java.lang.String $r1;
        java.beans.PropertyChangeEvent r0;
        boolean $z0;

        r2 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        r0 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("RSTA.syntaxScheme");

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: void modelChanged()>();

        goto label2;

     label1:
        specialinvoke r2.<org.fife.ui.rtextarea.RTextAreaUI: void propertyChange(java.beans.PropertyChangeEvent)>(r0);

     label2:
        return;
    }

    public void refreshSyntaxHighlighting()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: void modelChanged()>();

        return;
    }

    public int yForLine(int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle $r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r2;
        org.fife.ui.rsyntaxtextarea.RSTAView r5;
        int i0, $i1, $i3;
        javax.swing.text.View $r3, $r4;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: java.awt.Rectangle getVisibleEditorRect()>();

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: javax.swing.text.View getRootView(javax.swing.text.JTextComponent)>($r2);

        $r4 = virtualinvoke $r3.<javax.swing.text.View: javax.swing.text.View getView(int)>(0);

        r5 = (org.fife.ui.rsyntaxtextarea.RSTAView) $r4;

        $i1 = interfaceinvoke r5.<org.fife.ui.rsyntaxtextarea.RSTAView: int yForLine(java.awt.Rectangle,int)>($r1, i0);

        return $i1;

     label1:
        $i3 = (int) -1;

        return $i3;
    }

    public int yForLineContaining(int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle $r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r2;
        org.fife.ui.rsyntaxtextarea.RSTAView r5;
        int i0, $i1, $i3;
        javax.swing.text.View $r3, $r4;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: java.awt.Rectangle getVisibleEditorRect()>();

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: javax.swing.text.View getRootView(javax.swing.text.JTextComponent)>($r2);

        $r4 = virtualinvoke $r3.<javax.swing.text.View: javax.swing.text.View getView(int)>(0);

        r5 = (org.fife.ui.rsyntaxtextarea.RSTAView) $r4;

        $i1 = interfaceinvoke r5.<org.fife.ui.rsyntaxtextarea.RSTAView: int yForLineContaining(java.awt.Rectangle,int)>($r1, i0);

        return $i1;

     label1:
        $i3 = (int) -1;

        return $i3;
    }

    static void <clinit>()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaEditorKit $r0;

        <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: java.lang.String SHARED_INPUT_MAP_NAME> = "RSyntaxTextAreaUI.inputMap";

        <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: java.lang.String SHARED_ACTION_MAP_NAME> = "RSyntaxTextAreaUI.actionMap";

        $r0 = new org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaEditorKit;

        specialinvoke $r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaEditorKit: void <init>()>();

        <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaUI: javax.swing.text.EditorKit defaultKit> = $r0;

        return;
    }
}
