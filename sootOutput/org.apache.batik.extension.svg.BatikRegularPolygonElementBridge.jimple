public class org.apache.batik.extension.svg.BatikRegularPolygonElementBridge extends org.apache.batik.bridge.SVGDecoratedShapeElementBridge implements org.apache.batik.extension.svg.BatikExtConstants
{

    public void <init>()
    {
        org.apache.batik.extension.svg.BatikRegularPolygonElementBridge r0;

        r0 := @this: org.apache.batik.extension.svg.BatikRegularPolygonElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.SVGDecoratedShapeElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.extension.svg.BatikRegularPolygonElementBridge r0;

        r0 := @this: org.apache.batik.extension.svg.BatikRegularPolygonElementBridge;

        return "http://xml.apache.org/batik/ext";
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.extension.svg.BatikRegularPolygonElementBridge r0;

        r0 := @this: org.apache.batik.extension.svg.BatikRegularPolygonElementBridge;

        return "regularPolygon";
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.extension.svg.BatikRegularPolygonElementBridge $r0, r1;

        r1 := @this: org.apache.batik.extension.svg.BatikRegularPolygonElementBridge;

        $r0 = new org.apache.batik.extension.svg.BatikRegularPolygonElementBridge;

        specialinvoke $r0.<org.apache.batik.extension.svg.BatikRegularPolygonElementBridge: void <init>()>();

        return $r0;
    }

    protected void buildShape(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.ShapeNode)
    {
        org.apache.batik.bridge.BridgeException $r6;
        org.apache.batik.bridge.BridgeContext r0;
        float $f0, $f1, $f2, $f3, $f4, f5, f6;
        java.awt.geom.GeneralPath $r8;
        java.lang.Object[] $r7;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r3, $r4, $r5;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, d10, $d11, $d12, $d13, $d14, d15;
        org.apache.batik.parser.UnitProcessor$Context $r2;
        org.apache.batik.gvt.ShapeNode r9;
        org.w3c.dom.Element r1;
        org.apache.batik.extension.svg.BatikRegularPolygonElementBridge r10;

        r10 := @this: org.apache.batik.extension.svg.BatikRegularPolygonElementBridge;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r1 := @parameter1: org.w3c.dom.Element;

        r9 := @parameter2: org.apache.batik.gvt.ShapeNode;

        $r2 = staticinvoke <org.apache.batik.bridge.UnitProcessor: org.apache.batik.parser.UnitProcessor$Context createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r0, r1);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "cx");

        f5 = 0.0F;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        f5 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgHorizontalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r3, "cx", $r2);

     label1:
        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "cy");

        f6 = 0.0F;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 == 0 goto label2;

        f6 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgVerticalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r4, "cy", $r2);

     label2:
        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "r");

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i2 == 0 goto label3;

        $f0 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgOtherLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r5, "r", $r2);

        goto label4;

     label3:
        $r6 = new org.apache.batik.bridge.BridgeException;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "r";

        $r7[1] = $r5;

        specialinvoke $r6.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r0, r1, "attribute.missing", $r7);

        throw $r6;

     label4:
        $i3 = staticinvoke <org.apache.batik.extension.svg.BatikRegularPolygonElementBridge: int convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext)>(r1, "sides", 3, r0);

        $r8 = new java.awt.geom.GeneralPath;

        specialinvoke $r8.<java.awt.geom.GeneralPath: void <init>()>();

        i4 = 0;

        goto label8;

     label5:
        $d0 = (double) i4;

        $d3 = $d0 + 0.5;

        $d1 = (double) $i3;

        $d2 = 6.283185307179586 / $d1;

        $d4 = $d3 * $d2;

        d5 = $d4 - 1.5707963267948966;

        $d6 = (double) f5;

        $d7 = (double) $f0;

        $d8 = staticinvoke <java.lang.Math: double cos(double)>(d5);

        $d9 = $d7 * $d8;

        d10 = $d6 + $d9;

        $d11 = (double) f6;

        $d12 = (double) $f0;

        $d13 = staticinvoke <java.lang.Math: double sin(double)>(d5);

        $d14 = $d12 * $d13;

        d15 = $d11 - $d14;

        if i4 != 0 goto label6;

        $f4 = (float) d10;

        $f3 = (float) d15;

        virtualinvoke $r8.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f4, $f3);

        goto label7;

     label6:
        $f2 = (float) d10;

        $f1 = (float) d15;

        virtualinvoke $r8.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f2, $f1);

     label7:
        i4 = i4 + 1;

     label8:
        if i4 < $i3 goto label5;

        virtualinvoke $r8.<java.awt.geom.GeneralPath: void closePath()>();

        virtualinvoke r9.<org.apache.batik.gvt.ShapeNode: void setShape(java.awt.Shape)>($r8);

        return;
    }

    protected static int convertSides(org.w3c.dom.Element, java.lang.String, int, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r5, $r8;
        org.apache.batik.bridge.BridgeException $r3, $r7;
        org.apache.batik.bridge.BridgeContext r4;
        java.lang.NumberFormatException $r6;
        org.w3c.dom.Element r0;
        int $i0, $i1, i2;
        java.lang.String r1, $r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        r4 := @parameter3: org.apache.batik.bridge.BridgeContext;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return i2;

     label1:
        $i1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: int convertSVGInteger(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.batik.bridge.BridgeException;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r1;

        $r8[1] = $r2;

        specialinvoke $r7.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r4, r0, $r6, "attribute.malformed", $r8);

        throw $r7;

     label4:
        if $i1 >= 3 goto label5;

        $r3 = new org.apache.batik.bridge.BridgeException;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = $r2;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r4, r0, "attribute.malformed", $r5);

        throw $r3;

     label5:
        return $i1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
