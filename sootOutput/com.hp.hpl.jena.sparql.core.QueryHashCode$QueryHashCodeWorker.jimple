class com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker extends java.lang.Object implements com.hp.hpl.jena.query.QueryVisitor
{
    int x;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = 0;

        return;
    }

    public void startVisit(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        return;
    }

    public void visitResultForm(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        return;
    }

    public void visitPrologue(com.hp.hpl.jena.sparql.core.Prologue)
    {
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;
        com.hp.hpl.jena.sparql.core.Prologue r1;
        int $i0, $i1, $i2;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Prologue;

        $i0 = r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $i1 = staticinvoke <com.hp.hpl.jena.sparql.core.Prologue: int hash(com.hp.hpl.jena.sparql.core.Prologue)>(r1);

        $i2 = $i0 ^ $i1;

        r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

        return;
    }

    public void visitSelectResultForm(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r1;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.sparql.core.VarExprList $r2;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: boolean isQueryResultStar()>();

        if $z0 != 0 goto label1;

        $i0 = r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.core.VarExprList getProject()>();

        $i1 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.core.VarExprList: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

     label1:
        return;
    }

    public void visitConstructResultForm(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.sparql.syntax.Template $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        $i0 = r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.syntax.Template getConstructTemplate()>();

        $i1 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.syntax.Template: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

        return;
    }

    public void visitDescribeResultForm(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        java.util.List $r2, $r3;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        $i0 = r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: java.util.List getResultVars()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

        $i3 = r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: java.util.List getResultURIs()>();

        $i4 = interfaceinvoke $r3.<java.util.List: int hashCode()>();

        $i5 = $i3 ^ $i4;

        r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i5;

        return;
    }

    public void visitAskResultForm(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        return;
    }

    public void visitDatasetDecl(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;
        int $i0, $i1, $i2;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        $i0 = r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: java.util.List getNamedGraphURIs()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

        return;
    }

    public void visitQueryPattern(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r2;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.sparql.syntax.Element $r1, $r3;

        r2 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.syntax.Element getQueryPattern()>();

        if $r1 == null goto label1;

        $i0 = r2.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.syntax.Element getQueryPattern()>();

        $i1 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.syntax.Element: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r2.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

     label1:
        return;
    }

    public void visitGroupBy(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r1;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.sparql.core.VarExprList $r2;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: boolean hasGroupBy()>();

        if $z0 == 0 goto label1;

        $i0 = r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.core.VarExprList getGroupBy()>();

        $i1 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.core.VarExprList: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

     label1:
        return;
    }

    public void visitHaving(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: boolean hasHaving()>();

        if $z0 == 0 goto label1;

        $i0 = r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: java.util.List getHavingExprs()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

     label1:
        return;
    }

    public void visitOrderBy(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        java.util.List $r1, $r3;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r2;
        int $i0, $i1, $i2;

        r2 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: java.util.List getOrderBy()>();

        if $r1 == null goto label1;

        $i0 = r2.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: java.util.List getOrderBy()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r2.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

     label1:
        return;
    }

    public void visitLimit(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;
        int $i0, $i4;
        long $l1, $l2, $l3;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        $i0 = r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $l1 = (long) $i0;

        $l2 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: long getLimit()>();

        $l3 = $l1 ^ $l2;

        $i4 = (int) $l3;

        r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i4;

        return;
    }

    public void visitOffset(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;
        int $i0, $i4;
        long $l1, $l2, $l3;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        $i0 = r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $l1 = (long) $i0;

        $l2 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: long getOffset()>();

        $l3 = $l1 ^ $l2;

        $i4 = (int) $l3;

        r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i4;

        return;
    }

    public void visitValues(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        java.util.List $r2, $r3;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: boolean hasValues()>();

        if $z0 == 0 goto label1;

        $i0 = r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: java.util.List getValuesVariables()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        $i2 = $i0 ^ $i1;

        r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i2;

        $i3 = r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: java.util.List getValuesData()>();

        $i4 = interfaceinvoke $r3.<java.util.List: int hashCode()>();

        $i5 = $i3 ^ $i4;

        r1.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x> = $i5;

     label1:
        return;
    }

    public void finishVisit(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        return;
    }

    public int calculatedHashCode()
    {
        int $i0;
        com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker;

        $i0 = r0.<com.hp.hpl.jena.sparql.core.QueryHashCode$QueryHashCodeWorker: int x>;

        return $i0;
    }
}
