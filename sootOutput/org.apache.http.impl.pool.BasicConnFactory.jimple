public class org.apache.http.impl.pool.BasicConnFactory extends java.lang.Object implements org.apache.http.pool.ConnFactory
{
    private final javax.net.ssl.SSLSocketFactory sslfactory;
    private final org.apache.http.params.HttpParams params;

    public void <init>(javax.net.ssl.SSLSocketFactory, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.pool.BasicConnFactory r0;
        org.apache.http.params.HttpParams r1;
        java.lang.IllegalArgumentException $r3;
        javax.net.ssl.SSLSocketFactory r2;

        r0 := @this: org.apache.http.impl.pool.BasicConnFactory;

        r2 := @parameter0: javax.net.ssl.SSLSocketFactory;

        r1 := @parameter1: org.apache.http.params.HttpParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP params may not be null");

        throw $r3;

     label1:
        r0.<org.apache.http.impl.pool.BasicConnFactory: javax.net.ssl.SSLSocketFactory sslfactory> = r2;

        r0.<org.apache.http.impl.pool.BasicConnFactory: org.apache.http.params.HttpParams params> = r1;

        return;
    }

    public void <init>(org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.pool.BasicConnFactory r0;
        org.apache.http.params.HttpParams r1;

        r0 := @this: org.apache.http.impl.pool.BasicConnFactory;

        r1 := @parameter0: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.pool.BasicConnFactory: void <init>(javax.net.ssl.SSLSocketFactory,org.apache.http.params.HttpParams)>(null, r1);

        return;
    }

    protected org.apache.http.HttpClientConnection create(java.net.Socket, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.pool.BasicConnFactory r3;
        java.net.Socket r1;
        org.apache.http.impl.DefaultHttpClientConnection $r0;
        org.apache.http.params.HttpParams r2;

        r3 := @this: org.apache.http.impl.pool.BasicConnFactory;

        r1 := @parameter0: java.net.Socket;

        r2 := @parameter1: org.apache.http.params.HttpParams;

        $r0 = new org.apache.http.impl.DefaultHttpClientConnection;

        specialinvoke $r0.<org.apache.http.impl.DefaultHttpClientConnection: void <init>()>();

        virtualinvoke $r0.<org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>(r1, r2);

        return $r0;
    }

    public org.apache.http.HttpClientConnection create(org.apache.http.HttpHost) throws java.io.IOException
    {
        java.net.Socket $r18, r19;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r3, $r8, $r15;
        boolean $z0, $z1;
        org.apache.http.HttpClientConnection $r10;
        java.io.IOException $r11;
        java.net.InetSocketAddress $r7;
        javax.net.ssl.SSLSocketFactory $r16, $r17;
        org.apache.http.impl.pool.BasicConnFactory r4;
        org.apache.http.params.HttpParams $r5, $r6, $r9;
        java.lang.StringBuilder $r12, $r13, $r14;
        org.apache.http.HttpHost r0;

        r4 := @this: org.apache.http.impl.pool.BasicConnFactory;

        r0 := @parameter0: org.apache.http.HttpHost;

        $r1 = virtualinvoke r0.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        r19 = null;

        $r2 = "http";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r18 = new java.net.Socket;

        specialinvoke $r18.<java.net.Socket: void <init>()>();

        r19 = $r18;

     label1:
        $r3 = "https";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z1 == 0 goto label2;

        $r16 = r4.<org.apache.http.impl.pool.BasicConnFactory: javax.net.ssl.SSLSocketFactory sslfactory>;

        if $r16 == null goto label2;

        $r17 = r4.<org.apache.http.impl.pool.BasicConnFactory: javax.net.ssl.SSLSocketFactory sslfactory>;

        r19 = virtualinvoke $r17.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

     label2:
        if r19 != null goto label3;

        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scheme is not supported");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label3:
        $r5 = r4.<org.apache.http.impl.pool.BasicConnFactory: org.apache.http.params.HttpParams params>;

        $i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>($r5);

        $r6 = r4.<org.apache.http.impl.pool.BasicConnFactory: org.apache.http.params.HttpParams params>;

        $i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>($r6);

        virtualinvoke r19.<java.net.Socket: void setSoTimeout(int)>($i1);

        $r7 = new java.net.InetSocketAddress;

        $r8 = virtualinvoke r0.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i2 = virtualinvoke r0.<org.apache.http.HttpHost: int getPort()>();

        specialinvoke $r7.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r8, $i2);

        virtualinvoke r19.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r7, $i0);

        $r9 = r4.<org.apache.http.impl.pool.BasicConnFactory: org.apache.http.params.HttpParams params>;

        $r10 = virtualinvoke r4.<org.apache.http.impl.pool.BasicConnFactory: org.apache.http.HttpClientConnection create(java.net.Socket,org.apache.http.params.HttpParams)>(r19, $r9);

        return $r10;
    }

    public volatile java.lang.Object create(java.lang.Object) throws java.io.IOException
    {
        org.apache.http.impl.pool.BasicConnFactory r0;
        org.apache.http.HttpClientConnection $r3;
        java.lang.Object r1;
        org.apache.http.HttpHost $r2;

        r0 := @this: org.apache.http.impl.pool.BasicConnFactory;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.http.HttpHost) r1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.pool.BasicConnFactory: org.apache.http.HttpClientConnection create(org.apache.http.HttpHost)>($r2);

        return $r3;
    }
}
