public class com.jhlabs.math.FFT extends java.lang.Object
{
    protected float[] w1;
    protected float[] w2;
    protected float[] w3;

    public void <init>(int)
    {
        com.jhlabs.math.FFT r0;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int i0, i1, i2;
        double $d0, d1, $d2, $d3, $d4;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.jhlabs.math.FFT;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[i0];

        r0.<com.jhlabs.math.FFT: float[] w1> = $r1;

        $r2 = newarray (float)[i0];

        r0.<com.jhlabs.math.FFT: float[] w2> = $r2;

        $r3 = newarray (float)[i0];

        r0.<com.jhlabs.math.FFT: float[] w3> = $r3;

        i1 = 1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        i1 = i1 << 1;

        $d0 = (double) i1;

        d1 = -6.283185307179586 / $d0;

        $r4 = r0.<com.jhlabs.math.FFT: float[] w1>;

        $d2 = 0.5 * d1;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $f0 = (float) $d3;

        $r4[i2] = $f0;

        $r7 = r0.<com.jhlabs.math.FFT: float[] w2>;

        $r5 = r0.<com.jhlabs.math.FFT: float[] w1>;

        $f1 = $r5[i2];

        $f3 = -2.0F * $f1;

        $r6 = r0.<com.jhlabs.math.FFT: float[] w1>;

        $f2 = $r6[i2];

        $f4 = $f3 * $f2;

        $r7[i2] = $f4;

        $r8 = r0.<com.jhlabs.math.FFT: float[] w3>;

        $d4 = staticinvoke <java.lang.Math: double sin(double)>(d1);

        $f5 = (float) $d4;

        $r8[i2] = $f5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void scramble(int, float[], float[])
    {
        com.jhlabs.math.FFT r2;
        float[] r0, r1;
        int i0, i1, i2, i3;
        float $f0, $f1, f2, f3;

        r2 := @this: com.jhlabs.math.FFT;

        i0 := @parameter0: int;

        r0 := @parameter1: float[];

        r1 := @parameter2: float[];

        i1 = 0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        if i2 <= i1 goto label2;

        f2 = r0[i1];

        $f0 = r0[i2];

        r0[i1] = $f0;

        r0[i2] = f2;

        f3 = r1[i1];

        $f1 = r1[i2];

        r1[i1] = $f1;

        r1[i2] = f3;

     label2:
        i3 = i0 >> 1;

     label3:
        if i1 < i3 goto label4;

        if i3 < 2 goto label4;

        i1 = i1 - i3;

        i3 = i3 >> 1;

        goto label3;

     label4:
        i1 = i1 + i3;

        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    private void butterflies(int, int, int, float[], float[])
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, $f18, $f19, f20, $f21, $f22, f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32, f33, f34, f35;
        com.jhlabs.math.FFT r2;
        float[] r0, r1, $r3, $r4, $r5;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i11;

        r2 := @this: com.jhlabs.math.FFT;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: float[];

        r1 := @parameter4: float[];

        i5 = 1;

        i6 = 0;

     label1:
        if i6 >= i0 goto label6;

        i3 = i5;

        i5 = i5 << 1;

        $r3 = r2.<com.jhlabs.math.FFT: float[] w1>;

        $f5 = $r3[i6];

        $r4 = r2.<com.jhlabs.math.FFT: float[] w2>;

        f6 = $r4[i6];

        $f8 = (float) i1;

        $r5 = r2.<com.jhlabs.math.FFT: float[] w3>;

        $f7 = $r5[i6];

        f9 = $f8 * $f7;

        f32 = 1.0F;

        f33 = 0.0F;

        i7 = 0;

     label2:
        if i7 >= i3 goto label5;

        i8 = i7;

     label3:
        if i8 >= i2 goto label4;

        i4 = i8 + i3;

        f16 = r0[i4];

        f17 = r1[i4];

        $f19 = f32 * f16;

        $f18 = f33 * f17;

        f20 = $f19 - $f18;

        $f22 = f33 * f16;

        $f21 = f32 * f17;

        f23 = $f22 + $f21;

        $f24 = r0[i8];

        $f25 = $f24 - f20;

        r0[i4] = $f25;

        $f26 = r0[i8];

        $f27 = $f26 + f20;

        r0[i8] = $f27;

        $f28 = r1[i8];

        $f29 = $f28 - f23;

        r1[i4] = $f29;

        $f30 = r1[i8];

        $f31 = $f30 + f23;

        r1[i8] = $f31;

        i8 = i8 + i5;

        goto label3;

     label4:
        f34 = f32;

        $f11 = f32 * f6;

        $f10 = f33 * f9;

        $f12 = $f11 - $f10;

        f32 = $f12 + f32;

        $f14 = f33 * f6;

        $f13 = f34 * f9;

        $f15 = $f14 + $f13;

        f33 = $f15 + f33;

        i7 = i7 + 1;

        goto label2;

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        $i11 = (int) -1;

        if i1 != $i11 goto label8;

        $f0 = (float) i2;

        f35 = 1.0F / $f0;

        i9 = 0;

     label7:
        if i9 >= i2 goto label8;

        $f1 = r0[i9];

        $f2 = $f1 * f35;

        r0[i9] = $f2;

        $f3 = r1[i9];

        $f4 = $f3 * f35;

        r1[i9] = $f4;

        i9 = i9 + 1;

        goto label7;

     label8:
        return;
    }

    public void transform1D(float[], float[], int, int, boolean)
    {
        byte $b2;
        com.jhlabs.math.FFT r0;
        int i0, i1;
        float[] r1, r2;
        boolean z0;

        r0 := @this: com.jhlabs.math.FFT;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.jhlabs.math.FFT: void scramble(int,float[],float[])>(i0, r1, r2);

        if z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = -1;

     label2:
        specialinvoke r0.<com.jhlabs.math.FFT: void butterflies(int,int,int,float[],float[])>(i0, i1, $b2, r1, r2);

        return;
    }

    public void transform2D(float[], float[], int, int, boolean)
    {
        com.jhlabs.math.FFT r0;
        float[] r1, r2, r3, r4;
        int i0, $i1, i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11;
        boolean z0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.jhlabs.math.FFT;

        r3 := @parameter0: float[];

        r4 := @parameter1: float[];

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i1 = specialinvoke r0.<com.jhlabs.math.FFT: int log2(int)>(i0);

        $i3 = specialinvoke r0.<com.jhlabs.math.FFT: int log2(int)>(i2);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i0);

        r1 = newarray (float)[$i4];

        r2 = newarray (float)[$i4];

        i5 = 0;

     label1:
        if i5 >= i2 goto label2;

        i6 = i5 * i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i6, r1, 0, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i6, r2, 0, i0);

        virtualinvoke r0.<com.jhlabs.math.FFT: void transform1D(float[],float[],int,int,boolean)>(r1, r2, $i1, i0, z0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, i6, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, i6, i0);

        i5 = i5 + 1;

        goto label1;

     label2:
        i7 = 0;

     label3:
        if i7 >= i0 goto label8;

        i8 = i7;

        i9 = 0;

     label4:
        if i9 >= i2 goto label5;

        $f2 = r3[i8];

        r1[i9] = $f2;

        $f3 = r4[i8];

        r2[i9] = $f3;

        i8 = i8 + i0;

        i9 = i9 + 1;

        goto label4;

     label5:
        virtualinvoke r0.<com.jhlabs.math.FFT: void transform1D(float[],float[],int,int,boolean)>(r1, r2, $i3, i2, z0);

        i10 = i7;

        i11 = 0;

     label6:
        if i11 >= i2 goto label7;

        $f0 = r1[i11];

        r3[i10] = $f0;

        $f1 = r2[i11];

        r4[i10] = $f1;

        i10 = i10 + i0;

        i11 = i11 + 1;

        goto label6;

     label7:
        i7 = i7 + 1;

        goto label3;

     label8:
        return;
    }

    private int log2(int)
    {
        com.jhlabs.math.FFT r0;
        int i0, i1, i2, $i3, $i5;

        r0 := @this: com.jhlabs.math.FFT;

        i0 := @parameter0: int;

        i1 = 1;

        i2 = 0;

     label1:
        if i1 >= i0 goto label2;

        i1 = i1 * 2;

        i2 = i2 + 1;

        goto label1;

     label2:
        if i1 != i0 goto label3;

        $i3 = i2;

        goto label4;

     label3:
        $i5 = (int) -1;

        $i3 = $i5;

     label4:
        return $i3;
    }
}
