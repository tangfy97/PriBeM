final class com.mycila.inject.internal.cglib.core.KeyFactory$2 extends java.lang.Object implements com.mycila.inject.internal.cglib.core.Customizer
{

    void <init>()
    {
        com.mycila.inject.internal.cglib.core.KeyFactory$2 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.KeyFactory$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void customize(com.mycila.inject.internal.cglib.core.CodeEmitter, com.mycila.inject.internal.asm.Type)
    {
        com.mycila.inject.internal.cglib.core.KeyFactory$2 r3;
        com.mycila.inject.internal.cglib.core.Signature $r2;
        com.mycila.inject.internal.asm.Type $r1, r4;
        com.mycila.inject.internal.cglib.core.CodeEmitter r0;

        r3 := @this: com.mycila.inject.internal.cglib.core.KeyFactory$2;

        r0 := @parameter0: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r4 := @parameter1: com.mycila.inject.internal.asm.Type;

        $r1 = <com.mycila.inject.internal.cglib.core.Constants: com.mycila.inject.internal.asm.Type TYPE_OBJECT>;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature access$100()>();

        virtualinvoke r0.<com.mycila.inject.internal.cglib.core.CodeEmitter: void invoke_virtual(com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.cglib.core.Signature)>($r1, $r2);

        return;
    }
}
