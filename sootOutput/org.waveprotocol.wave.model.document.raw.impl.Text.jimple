public final class org.waveprotocol.wave.model.document.raw.impl.Text extends org.waveprotocol.wave.model.document.raw.impl.Node implements org.waveprotocol.wave.model.document.Doc$T
{
    private java.lang.String data;

    public void <init>(java.lang.String)
    {
        org.waveprotocol.wave.model.document.raw.impl.Text r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.model.document.raw.impl.Node: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data> = r1;

        return;
    }

    public short getNodeType()
    {
        org.waveprotocol.wave.model.document.raw.impl.Text r0;
        short $s0;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        $s0 = <org.waveprotocol.wave.model.document.indexed.NodeType: short TEXT_NODE>;

        return $s0;
    }

    public java.lang.String getData()
    {
        org.waveprotocol.wave.model.document.raw.impl.Text r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        $r1 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        return $r1;
    }

    public int getLength()
    {
        int $i0;
        org.waveprotocol.wave.model.document.raw.impl.Text r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        $r1 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public void appendData(java.lang.String)
    {
        org.waveprotocol.wave.model.document.raw.impl.Text r1;
        java.lang.StringBuilder $r0, $r3, $r5;
        java.lang.String $r2, r4, $r6;

        r1 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data> = $r6;

        return;
    }

    public void insertData(int, java.lang.String)
    {
        int i0;
        org.waveprotocol.wave.model.document.raw.impl.Text r0;
        java.lang.StringBuilder $r1, $r4, $r6, $r9;
        java.lang.String $r2, $r3, r5, $r7, $r8, $r10;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data> = $r10;

        return;
    }

    public void deleteData(int, int)
    {
        int i0, i1, $i2;
        org.waveprotocol.wave.model.document.raw.impl.Text r0;
        java.lang.StringBuilder $r1, $r4, $r7;
        java.lang.String $r2, $r3, $r5, $r6, $r8;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        $i2 = i0 + i1;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data> = $r8;

        return;
    }

    public org.waveprotocol.wave.model.document.raw.impl.Text splitText(int)
    {
        org.waveprotocol.wave.model.document.raw.impl.Element $r7;
        org.waveprotocol.wave.model.document.raw.impl.Node $r6;
        int i0, $i1;
        org.waveprotocol.wave.model.document.raw.impl.Text r0, $r5;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        $i1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.raw.impl.Text: int getLength()>();

        if i0 < $i1 goto label2;

        return null;

     label2:
        $r1 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $r3 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String data> = $r4;

        $r5 = new org.waveprotocol.wave.model.document.raw.impl.Text;

        specialinvoke $r5.<org.waveprotocol.wave.model.document.raw.impl.Text: void <init>(java.lang.String)>($r2);

        $r7 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: org.waveprotocol.wave.model.document.raw.impl.Element parent>;

        $r6 = r0.<org.waveprotocol.wave.model.document.raw.impl.Text: org.waveprotocol.wave.model.document.raw.impl.Node nextSibling>;

        virtualinvoke $r7.<org.waveprotocol.wave.model.document.raw.impl.Element: org.waveprotocol.wave.model.document.raw.impl.Node insertBefore(org.waveprotocol.wave.model.document.raw.impl.Node,org.waveprotocol.wave.model.document.raw.impl.Node)>($r5, $r6);

        return $r5;
    }

    public int calculateSize()
    {
        int $i0;
        org.waveprotocol.wave.model.document.raw.impl.Text r0;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.raw.impl.Text: int getLength()>();

        return $i0;
    }

    public org.waveprotocol.wave.model.document.raw.impl.Element asElement()
    {
        org.waveprotocol.wave.model.document.raw.impl.Text r0;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        return null;
    }

    public org.waveprotocol.wave.model.document.raw.impl.Text asText()
    {
        org.waveprotocol.wave.model.document.raw.impl.Text r0;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        return r0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.raw.impl.Text r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.document.raw.impl.Text;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.raw.impl.Text: java.lang.String getData()>();

        return $r1;
    }
}
