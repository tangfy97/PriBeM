class org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase extends org.apache.jena.riot.system.StreamRDFWrapper implements org.apache.jena.riot.system.StreamRDF, org.apache.jena.riot.lang.StreamRDFCounting
{
    private long countTriples;
    private long countQuads;
    private long countTuples;
    private long countBase;
    private long countPrefixes;

    public void <init>(org.apache.jena.riot.system.StreamRDF)
    {
        org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase r0;
        org.apache.jena.riot.system.StreamRDF r1;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase;

        r1 := @parameter0: org.apache.jena.riot.system.StreamRDF;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void <init>(org.apache.jena.riot.system.StreamRDF)>(r1);

        r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTriples> = 0L;

        r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countQuads> = 0L;

        r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTuples> = 0L;

        r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countBase> = 0L;

        r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countPrefixes> = 0L;

        return;
    }

    public void triple(com.hp.hpl.jena.graph.Triple)
    {
        org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase r0;
        long $l0, $l1;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $l0 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTriples>;

        $l1 = $l0 + 1L;

        r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTriples> = $l1;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void triple(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public void quad(com.hp.hpl.jena.sparql.core.Quad)
    {
        org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase r0;
        long $l0, $l1;
        com.hp.hpl.jena.sparql.core.Quad r1;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $l0 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countQuads>;

        $l1 = $l0 + 1L;

        r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countQuads> = $l1;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void quad(com.hp.hpl.jena.sparql.core.Quad)>(r1);

        return;
    }

    public void tuple(org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.atlas.lib.Tuple r1;
        org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase r0;
        long $l0, $l1;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $l0 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTuples>;

        $l1 = $l0 + 1L;

        r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTuples> = $l1;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void tuple(org.apache.jena.atlas.lib.Tuple)>(r1);

        return;
    }

    public long count()
    {
        org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase r0;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase;

        $l1 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTriples>;

        $l0 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countQuads>;

        $l3 = $l1 + $l0;

        $l2 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTuples>;

        $l4 = $l3 + $l2;

        return $l4;
    }

    public long countTriples()
    {
        org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase r0;
        long $l0;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase;

        $l0 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTriples>;

        return $l0;
    }

    public long countQuads()
    {
        org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase r0;
        long $l0;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase;

        $l0 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countQuads>;

        return $l0;
    }

    public long countTuples()
    {
        org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase r0;
        long $l0;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase;

        $l0 = r0.<org.apache.jena.riot.system.StreamRDFLib$StreamRDFCountingBase: long countTuples>;

        return $l0;
    }
}
