public class ucar.nc2.ft.point.remote.RemotePointFeatureIterator extends ucar.nc2.ft.point.PointIteratorAbstract
{
    private static final boolean debug;
    private java.io.InputStream in;
    private ucar.nc2.ft.point.remote.FeatureMaker featureMaker;
    private ucar.nc2.ft.PointFeature pf;
    private boolean finished;

    void <init>(java.io.InputStream, ucar.nc2.ft.point.remote.FeatureMaker) throws java.io.IOException
    {
        ucar.nc2.ft.point.remote.RemotePointFeatureIterator r0;
        java.io.InputStream r1;
        ucar.nc2.ft.point.remote.FeatureMaker r2;

        r0 := @this: ucar.nc2.ft.point.remote.RemotePointFeatureIterator;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: ucar.nc2.ft.point.remote.FeatureMaker;

        specialinvoke r0.<ucar.nc2.ft.point.PointIteratorAbstract: void <init>()>();

        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: boolean finished> = 0;

        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in> = r1;

        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.point.remote.FeatureMaker featureMaker> = r2;

        return;
    }

    public void finish()
    {
        java.io.IOException $r3;
        ucar.nc2.ft.point.remote.RemotePointFeatureIterator r0;
        boolean $z0;
        java.io.InputStream $r1, $r2;

        r0 := @this: ucar.nc2.ft.point.remote.RemotePointFeatureIterator;

        $z0 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: boolean finished>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in>;

        if $r1 == null goto label5;

     label2:
        $r2 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in>;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in> = null;

        virtualinvoke r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: void finishCalcBounds()>();

        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: boolean finished> = 1;

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public boolean hasNext() throws java.io.IOException
    {
        byte[] r20, r21;
        ucar.nc2.ft.PointFeature $r19;
        int $i0, $i1;
        java.lang.String $r10, $r14;
        ucar.nc2.ft.point.remote.RemotePointFeatureIterator r0;
        boolean $z0;
        ucar.nc2.ft.point.remote.FeatureMaker $r18;
        ucar.nc2.stream.NcStreamProto$Error $r13;
        java.io.IOException $r6, $r15;
        ucar.nc2.ft.point.remote.PointStream$MessageType $r2, $r3, $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.io.InputStream $r1, $r11, $r12, $r16, $r17;

        r0 := @this: ucar.nc2.ft.point.remote.RemotePointFeatureIterator;

        $z0 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: boolean finished>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in>;

        $r2 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: ucar.nc2.ft.point.remote.PointStream$MessageType readMagic(java.io.InputStream)>($r1);

        $r3 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType PointFeature>;

        if $r2 != $r3 goto label2;

        $r16 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in>;

        $i1 = staticinvoke <ucar.nc2.stream.NcStream: int readVInt(java.io.InputStream)>($r16);

        r20 = newarray (byte)[$i1];

        $r17 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in>;

        staticinvoke <ucar.nc2.stream.NcStream: int readFully(java.io.InputStream,byte[])>($r17, r20);

        $r18 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.point.remote.FeatureMaker featureMaker>;

        $r19 = interfaceinvoke $r18.<ucar.nc2.ft.point.remote.FeatureMaker: ucar.nc2.ft.PointFeature make(byte[])>(r20);

        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.PointFeature pf> = $r19;

        return 1;

     label2:
        $r4 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType End>;

        if $r2 != $r4 goto label3;

        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.PointFeature pf> = null;

        virtualinvoke r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: void finish()>();

        return 0;

     label3:
        $r5 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType Error>;

        if $r2 != $r5 goto label4;

        $r11 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in>;

        $i0 = staticinvoke <ucar.nc2.stream.NcStream: int readVInt(java.io.InputStream)>($r11);

        r21 = newarray (byte)[$i0];

        $r12 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: java.io.InputStream in>;

        staticinvoke <ucar.nc2.stream.NcStream: int readFully(java.io.InputStream,byte[])>($r12, r21);

        $r13 = staticinvoke <ucar.nc2.stream.NcStreamProto$Error: ucar.nc2.stream.NcStreamProto$Error parseFrom(byte[])>(r21);

        $r14 = staticinvoke <ucar.nc2.stream.NcStream: java.lang.String decodeErrorMessage(ucar.nc2.stream.NcStreamProto$Error)>($r13);

        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.PointFeature pf> = null;

        virtualinvoke r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: void finish()>();

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r15;

     label4:
        r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.PointFeature pf> = null;

        virtualinvoke r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: void finish()>();

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal pointstream message type= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    public ucar.nc2.ft.PointFeature next() throws java.io.IOException
    {
        ucar.nc2.ft.PointFeature $r1, $r2, $r3;
        ucar.nc2.ft.point.remote.RemotePointFeatureIterator r0;

        r0 := @this: ucar.nc2.ft.point.remote.RemotePointFeatureIterator;

        $r1 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.PointFeature pf>;

        if null != $r1 goto label1;

        return null;

     label1:
        $r2 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.PointFeature pf>;

        virtualinvoke r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: void calcBounds(ucar.nc2.ft.PointFeature)>($r2);

        $r3 = r0.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: ucar.nc2.ft.PointFeature pf>;

        return $r3;
    }

    public void setBufferSize(int)
    {
        int i0;
        ucar.nc2.ft.point.remote.RemotePointFeatureIterator r0;

        r0 := @this: ucar.nc2.ft.point.remote.RemotePointFeatureIterator;

        i0 := @parameter0: int;

        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.ft.point.remote.RemotePointFeatureIterator: boolean debug> = 0;

        return;
    }
}
