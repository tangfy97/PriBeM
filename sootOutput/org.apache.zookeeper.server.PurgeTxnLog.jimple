public class org.apache.zookeeper.server.PurgeTxnLog extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;

    public void <init>()
    {
        org.apache.zookeeper.server.PurgeTxnLog r0;

        r0 := @this: org.apache.zookeeper.server.PurgeTxnLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void printUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("PurgeTxnLog dataLogDir [snapDir] -n count");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("\tdataLogDir -- path to the txn log directory");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("\tsnapDir -- path to the snapshot directory");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\tcount -- the number of old snaps/logs you want to keep");

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }

    public static void purge(java.io.File, java.io.File, int) throws java.io.IOException
    {
        org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter $r13, $r17;
        java.lang.Long $r27;
        java.text.DateFormat $r26;
        boolean $z0, $z1, $z2;
        java.util.List $r4, $r10, $r15, $r19;
        java.lang.StringBuilder $r23, $r25, $r29, $r30, $r32, $r34, $r36, $r38;
        long $l4, $l5;
        java.util.ArrayList $r11;
        java.util.HashSet $r3;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog $r0;
        int i0, $i1, $i2, $i3;
        java.lang.String $r8, $r28, $r31, $r33, $r37, $r39;
        java.io.PrintStream $r24, $r35;
        java.util.Iterator $r7, $r20;
        java.lang.IllegalArgumentException $r42;
        java.io.File r1, r2, r6, $r12, $r16, r22, r41;
        java.lang.Object $r5, $r21, $r40;
        java.io.File[] $r9, $r14, $r18;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        if i0 >= 3 goto label1;

        $r42 = new java.lang.IllegalArgumentException;

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("count should be greater than 3");

        throw $r42;

     label1:
        $r0 = new org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        specialinvoke $r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: void <init>(java.io.File,java.io.File)>(r1, r2);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = virtualinvoke $r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.util.List findNRecentSnapshots(int)>(i0);

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i1 != 0 goto label2;

        return;

     label2:
        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i3);

        r6 = (java.io.File) $r5;

        $r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r40 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.io.File) $r40;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r41);

        goto label3;

     label4:
        $r8 = virtualinvoke r6.<java.io.File: java.lang.String getName()>();

        $l4 = staticinvoke <org.apache.zookeeper.server.persistence.Util: long getZxidFromName(java.lang.String,java.lang.String)>($r8, "snapshot");

        $r9 = virtualinvoke $r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File[] getSnapshotLogs(long)>($l4);

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r10);

        $r11 = new java.util.ArrayList;

        $r12 = virtualinvoke $r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File getDataDir()>();

        $r13 = new org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter;

        specialinvoke $r13.<org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter: void <init>(java.lang.String,java.util.Set)>("log.", $r3);

        $r14 = virtualinvoke $r12.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r13);

        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14);

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>($r15);

        $r16 = virtualinvoke $r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File getSnapDir()>();

        $r17 = new org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter;

        specialinvoke $r17.<org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter: void <init>(java.lang.String,java.util.Set)>("snapshot.", $r3);

        $r18 = virtualinvoke $r16.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r17);

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18);

        interfaceinvoke $r11.<java.util.List: boolean addAll(java.util.Collection)>($r19);

        $r20 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.io.File) $r21;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing file: ");

        $r26 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>();

        $l5 = virtualinvoke r22.<java.io.File: long lastModified()>();

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r28 = virtualinvoke $r26.<java.text.DateFormat: java.lang.String format(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r31 = virtualinvoke r22.<java.io.File: java.lang.String getPath()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $z2 = virtualinvoke r22.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label6;

        $r35 = <java.lang.System: java.io.PrintStream err>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove ");

        $r37 = virtualinvoke r22.<java.io.File: java.lang.String getPath()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);

     label6:
        goto label5;

     label7:
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        java.io.File $r2, $r4, r6;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r1, $r3, $r5;
        boolean z0;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 < 3 goto label1;

        $i2 = lengthof r0;

        if $i2 <= 4 goto label2;

     label1:
        staticinvoke <org.apache.zookeeper.server.PurgeTxnLog: void printUsage()>();

     label2:
        z0 = 0;

        $r4 = new java.io.File;

        $r5 = r0[0];

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        r6 = $r4;

        $i3 = lengthof r0;

        if $i3 != 4 goto label3;

        z0 = 1;

        $r2 = new java.io.File;

        $r3 = r0[1];

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        r6 = $r2;

     label3:
        i4 = z0 + 1;

        i5 = i4 + 1;

        $r1 = r0[i5];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        staticinvoke <org.apache.zookeeper.server.PurgeTxnLog: void purge(java.io.File,java.io.File,int)>($r4, r6, $i1);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/PurgeTxnLog;");

        <org.apache.zookeeper.server.PurgeTxnLog: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
