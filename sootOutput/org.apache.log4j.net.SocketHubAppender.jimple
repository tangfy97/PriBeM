public class org.apache.log4j.net.SocketHubAppender extends org.apache.log4j.AppenderSkeleton
{
    static final int DEFAULT_PORT;
    private int port;
    private java.util.Vector oosList;
    private org.apache.log4j.net.SocketHubAppender$ServerMonitor serverMonitor;
    private boolean locationInfo;
    private org.apache.log4j.helpers.CyclicBuffer buffer;
    private java.lang.String application;
    private boolean advertiseViaMulticastDNS;
    private org.apache.log4j.net.ZeroConfSupport zeroConf;
    public static final java.lang.String ZONE;

    public void <init>()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        java.util.Vector $r1;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        r0.<org.apache.log4j.net.SocketHubAppender: int port> = 4560;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList> = $r1;

        r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.net.SocketHubAppender$ServerMonitor serverMonitor> = null;

        r0.<org.apache.log4j.net.SocketHubAppender: boolean locationInfo> = 0;

        r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer buffer> = null;

        return;
    }

    public void <init>(int)
    {
        org.apache.log4j.net.SocketHubAppender r0;
        int i0;
        java.util.Vector $r1;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        r0.<org.apache.log4j.net.SocketHubAppender: int port> = 4560;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList> = $r1;

        r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.net.SocketHubAppender$ServerMonitor serverMonitor> = null;

        r0.<org.apache.log4j.net.SocketHubAppender: boolean locationInfo> = 0;

        r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer buffer> = null;

        r0.<org.apache.log4j.net.SocketHubAppender: int port> = i0;

        specialinvoke r0.<org.apache.log4j.net.SocketHubAppender: void startServer()>();

        return;
    }

    public void activateOptions()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        org.apache.log4j.net.ZeroConfSupport $r1, $r3;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        $z0 = r0.<org.apache.log4j.net.SocketHubAppender: boolean advertiseViaMulticastDNS>;

        if $z0 == 0 goto label1;

        $r1 = new org.apache.log4j.net.ZeroConfSupport;

        $i0 = r0.<org.apache.log4j.net.SocketHubAppender: int port>;

        $r2 = virtualinvoke r0.<org.apache.log4j.AppenderSkeleton: java.lang.String getName()>();

        specialinvoke $r1.<org.apache.log4j.net.ZeroConfSupport: void <init>(java.lang.String,int,java.lang.String)>("_log4j_obj_tcpaccept_appender.local.", $i0, $r2);

        r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.net.ZeroConfSupport zeroConf> = $r1;

        $r3 = r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.net.ZeroConfSupport zeroConf>;

        virtualinvoke $r3.<org.apache.log4j.net.ZeroConfSupport: void advertise()>();

     label1:
        specialinvoke r0.<org.apache.log4j.net.SocketHubAppender: void startServer()>();

        return;
    }

    public synchronized void close()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        org.apache.log4j.net.ZeroConfSupport $r12;
        java.lang.StringBuffer $r1, $r2, $r4, $r6, $r7, $r9, $r10;
        java.lang.String $r3, $r5, $r8, $r11;
        boolean $z0, $z1;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        $z0 = r0.<org.apache.log4j.AppenderSkeleton: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("closing SocketHubAppender ");

        $r3 = virtualinvoke r0.<org.apache.log4j.AppenderSkeleton: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r5);

        r0.<org.apache.log4j.AppenderSkeleton: boolean closed> = 1;

        $z1 = r0.<org.apache.log4j.net.SocketHubAppender: boolean advertiseViaMulticastDNS>;

        if $z1 == 0 goto label2;

        $r12 = r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.net.ZeroConfSupport zeroConf>;

        virtualinvoke $r12.<org.apache.log4j.net.ZeroConfSupport: void unadvertise()>();

     label2:
        virtualinvoke r0.<org.apache.log4j.net.SocketHubAppender: void cleanUp()>();

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SocketHubAppender ");

        $r8 = virtualinvoke r0.<org.apache.log4j.AppenderSkeleton: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" closed");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r11);

        return;
    }

    public void cleanUp()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        org.apache.log4j.net.SocketHubAppender$ServerMonitor $r1;
        java.io.IOException $r6;
        java.io.InterruptedIOException $r7;
        java.util.Vector $r2, $r3, $r9;
        java.lang.Thread $r8;
        int $i0;
        java.lang.Object $r4;
        java.io.ObjectOutputStream r5;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("stopping ServerSocket");

        $r1 = r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.net.SocketHubAppender$ServerMonitor serverMonitor>;

        virtualinvoke $r1.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: void stopMonitor()>();

        r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.net.SocketHubAppender$ServerMonitor serverMonitor> = null;

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("closing client connections");

     label1:
        $r2 = r0.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 == 0 goto label8;

        $r3 = r0.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        r5 = (java.io.ObjectOutputStream) $r4;

        if r5 == null goto label7;

     label2:
        virtualinvoke r5.<java.io.ObjectOutputStream: void close()>();

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void interrupt()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("could not close oos.", $r7);

        goto label6;

     label5:
        $r6 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("could not close oos.", $r6);

     label6:
        $r9 = r0.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList>;

        virtualinvoke $r9.<java.util.Vector: void removeElementAt(int)>(0);

     label7:
        goto label1;

     label8:
        return;

        catch java.io.InterruptedIOException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    public void append(org.apache.log4j.spi.LoggingEvent)
    {
        java.util.Vector $r2, $r3, $r4, $r11;
        org.apache.log4j.helpers.CyclicBuffer $r7, $r8;
        java.lang.Thread $r12;
        int $i0, $i1, i2, $i4;
        java.io.ObjectOutputStream r14;
        java.lang.String $r6, $r9;
        boolean $z0, $z1;
        org.apache.log4j.net.SocketHubAppender r1;
        org.apache.log4j.spi.LoggingEvent r0;
        java.io.IOException $r10;
        java.lang.ArrayIndexOutOfBoundsException $r13;
        java.lang.Object $r5;

        r1 := @this: org.apache.log4j.net.SocketHubAppender;

        r0 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        if r0 == null goto label03;

        $z0 = r1.<org.apache.log4j.net.SocketHubAppender: boolean locationInfo>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.LocationInfo getLocationInformation()>();

     label01:
        $r6 = r1.<org.apache.log4j.net.SocketHubAppender: java.lang.String application>;

        if $r6 == null goto label02;

        $r9 = r1.<org.apache.log4j.net.SocketHubAppender: java.lang.String application>;

        virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: void setProperty(java.lang.String,java.lang.String)>("application", $r9);

     label02:
        virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.String getNDC()>();

        virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.String getThreadName()>();

        virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: void getMDCCopy()>();

        virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.String getRenderedMessage()>();

        virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: java.lang.String[] getThrowableStrRep()>();

        $r7 = r1.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer buffer>;

        if $r7 == null goto label03;

        $r8 = r1.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer buffer>;

        virtualinvoke $r8.<org.apache.log4j.helpers.CyclicBuffer: void add(org.apache.log4j.spi.LoggingEvent)>(r0);

     label03:
        if r0 == null goto label04;

        $r2 = r1.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 != 0 goto label05;

     label04:
        return;

     label05:
        i2 = 0;

     label06:
        $r3 = r1.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if i2 >= $i1 goto label16;

        r14 = null;

     label07:
        $r4 = r1.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r14 = (java.io.ObjectOutputStream) $r5;

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

     label10:
        if r14 != null goto label11;

        goto label16;

     label11:
        virtualinvoke r14.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0);

        virtualinvoke r14.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke r14.<java.io.ObjectOutputStream: void reset()>();

     label12:
        goto label15;

     label13:
        $r10 := @caughtexception;

        $z1 = $r10 instanceof java.io.InterruptedIOException;

        if $z1 == 0 goto label14;

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r12.<java.lang.Thread: void interrupt()>();

     label14:
        $r11 = r1.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList>;

        virtualinvoke $r11.<java.util.Vector: void removeElementAt(int)>(i2);

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("dropped connection");

        $i4 = (int) -1;

        i2 = i2 + $i4;

     label15:
        i2 = i2 + 1;

        goto label06;

     label16:
        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label09;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public boolean requiresLayout()
    {
        org.apache.log4j.net.SocketHubAppender r0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        return 0;
    }

    public void setPort(int)
    {
        org.apache.log4j.net.SocketHubAppender r0;
        int i0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        i0 := @parameter0: int;

        r0.<org.apache.log4j.net.SocketHubAppender: int port> = i0;

        return;
    }

    public void setApplication(java.lang.String)
    {
        org.apache.log4j.net.SocketHubAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.SocketHubAppender: java.lang.String application> = r1;

        return;
    }

    public java.lang.String getApplication()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        $r1 = r0.<org.apache.log4j.net.SocketHubAppender: java.lang.String application>;

        return $r1;
    }

    public int getPort()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        int $i0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        $i0 = r0.<org.apache.log4j.net.SocketHubAppender: int port>;

        return $i0;
    }

    public void setBufferSize(int)
    {
        org.apache.log4j.net.SocketHubAppender r0;
        int i0;
        org.apache.log4j.helpers.CyclicBuffer $r1;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        i0 := @parameter0: int;

        $r1 = new org.apache.log4j.helpers.CyclicBuffer;

        specialinvoke $r1.<org.apache.log4j.helpers.CyclicBuffer: void <init>(int)>(i0);

        r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer buffer> = $r1;

        return;
    }

    public int getBufferSize()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        org.apache.log4j.helpers.CyclicBuffer $r1, $r2;
        int $i0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        $r1 = r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer buffer>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer buffer>;

        $i0 = virtualinvoke $r2.<org.apache.log4j.helpers.CyclicBuffer: int getMaxSize()>();

        return $i0;
    }

    public void setLocationInfo(boolean)
    {
        org.apache.log4j.net.SocketHubAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.net.SocketHubAppender: boolean locationInfo> = z0;

        return;
    }

    public boolean getLocationInfo()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        $z0 = r0.<org.apache.log4j.net.SocketHubAppender: boolean locationInfo>;

        return $z0;
    }

    public void setAdvertiseViaMulticastDNS(boolean)
    {
        org.apache.log4j.net.SocketHubAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.net.SocketHubAppender: boolean advertiseViaMulticastDNS> = z0;

        return;
    }

    public boolean isAdvertiseViaMulticastDNS()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        $z0 = r0.<org.apache.log4j.net.SocketHubAppender: boolean advertiseViaMulticastDNS>;

        return $z0;
    }

    private void startServer()
    {
        org.apache.log4j.net.SocketHubAppender r0;
        java.util.Vector $r2;
        int $i0;
        org.apache.log4j.net.SocketHubAppender$ServerMonitor $r1;

        r0 := @this: org.apache.log4j.net.SocketHubAppender;

        $r1 = new org.apache.log4j.net.SocketHubAppender$ServerMonitor;

        $i0 = r0.<org.apache.log4j.net.SocketHubAppender: int port>;

        $r2 = r0.<org.apache.log4j.net.SocketHubAppender: java.util.Vector oosList>;

        specialinvoke $r1.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: void <init>(org.apache.log4j.net.SocketHubAppender,int,java.util.Vector)>(r0, $i0, $r2);

        r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.net.SocketHubAppender$ServerMonitor serverMonitor> = $r1;

        return;
    }

    protected java.net.ServerSocket createServerSocket(int) throws java.io.IOException
    {
        java.net.ServerSocket $r0;
        int i0;
        org.apache.log4j.net.SocketHubAppender r1;

        r1 := @this: org.apache.log4j.net.SocketHubAppender;

        i0 := @parameter0: int;

        $r0 = new java.net.ServerSocket;

        specialinvoke $r0.<java.net.ServerSocket: void <init>(int)>(i0);

        return $r0;
    }

    static org.apache.log4j.helpers.CyclicBuffer access$000(org.apache.log4j.net.SocketHubAppender)
    {
        org.apache.log4j.net.SocketHubAppender r0;
        org.apache.log4j.helpers.CyclicBuffer $r1;

        r0 := @parameter0: org.apache.log4j.net.SocketHubAppender;

        $r1 = r0.<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer buffer>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.net.SocketHubAppender: java.lang.String ZONE> = "_log4j_obj_tcpaccept_appender.local.";

        <org.apache.log4j.net.SocketHubAppender: int DEFAULT_PORT> = 4560;

        return;
    }
}
