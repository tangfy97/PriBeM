public class org.springframework.web.context.request.FacesRequestAttributes extends java.lang.Object implements org.springframework.web.context.request.RequestAttributes
{
    private static final boolean portletApiPresent;
    private static final org.apache.commons.logging.Log logger;
    private final javax.faces.context.FacesContext facesContext;

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r2;
        java.lang.ClassLoader $r1;
        boolean $z0;

        $r0 = class "Lorg/springframework/web/context/request/FacesRequestAttributes;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>("javax.portlet.PortletSession", $r1);

        <org.springframework.web.context.request.FacesRequestAttributes: boolean portletApiPresent> = $z0;

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/web/context/request/FacesRequestAttributes;");

        <org.springframework.web.context.request.FacesRequestAttributes: org.apache.commons.logging.Log logger> = $r2;

        return;
    }

    public void <init>(javax.faces.context.FacesContext)
    {
        org.springframework.web.context.request.FacesRequestAttributes r0;
        javax.faces.context.FacesContext r1;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        r1 := @parameter0: javax.faces.context.FacesContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "FacesContext must not be null");

        r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.FacesContext facesContext> = r1;

        return;
    }

    protected final javax.faces.context.FacesContext getFacesContext()
    {
        org.springframework.web.context.request.FacesRequestAttributes r0;
        javax.faces.context.FacesContext $r1;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        $r1 = r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.FacesContext facesContext>;

        return $r1;
    }

    protected final javax.faces.context.ExternalContext getExternalContext()
    {
        javax.faces.context.ExternalContext $r2;
        org.springframework.web.context.request.FacesRequestAttributes r0;
        javax.faces.context.FacesContext $r1;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.FacesContext getFacesContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.FacesContext: javax.faces.context.ExternalContext getExternalContext()>();

        return $r2;
    }

    protected java.util.Map getAttributeMap(int)
    {
        javax.faces.context.ExternalContext $r1, $r3;
        org.springframework.web.context.request.FacesRequestAttributes r0;
        java.util.Map $r2, $r4;
        int i0;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r3 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r4 = virtualinvoke $r3.<javax.faces.context.ExternalContext: java.util.Map getRequestMap()>();

        return $r4;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getSessionMap()>();

        return $r2;
    }

    public java.lang.Object getAttribute(java.lang.String, int)
    {
        javax.faces.context.ExternalContext $r4;
        org.springframework.web.context.request.FacesRequestAttributes r0;
        java.util.Map $r1;
        int i0;
        java.lang.Object $r3, $r5;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 2 goto label1;

        $z0 = <org.springframework.web.context.request.FacesRequestAttributes: boolean portletApiPresent>;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r5 = staticinvoke <org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: java.lang.Object getAttribute(java.lang.String,javax.faces.context.ExternalContext)>(r2, $r4);

        return $r5;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: java.util.Map getAttributeMap(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        return $r3;
    }

    public void setAttribute(java.lang.String, java.lang.Object, int)
    {
        javax.faces.context.ExternalContext $r4;
        org.springframework.web.context.request.FacesRequestAttributes r0;
        java.util.Map $r1;
        int i0;
        java.lang.Object r3;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        if i0 != 2 goto label1;

        $z0 = <org.springframework.web.context.request.FacesRequestAttributes: boolean portletApiPresent>;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        staticinvoke <org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: void setAttribute(java.lang.String,java.lang.Object,javax.faces.context.ExternalContext)>(r2, r3, $r4);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: java.util.Map getAttributeMap(int)>(i0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label2:
        return;
    }

    public void removeAttribute(java.lang.String, int)
    {
        javax.faces.context.ExternalContext $r3;
        org.springframework.web.context.request.FacesRequestAttributes r0;
        java.util.Map $r1;
        int i0;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 2 goto label1;

        $z0 = <org.springframework.web.context.request.FacesRequestAttributes: boolean portletApiPresent>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        staticinvoke <org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: void removeAttribute(java.lang.String,javax.faces.context.ExternalContext)>(r2, $r3);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: java.util.Map getAttributeMap(int)>(i0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public java.lang.String[] getAttributeNames(int)
    {
        javax.faces.context.ExternalContext $r5;
        java.util.Collection $r3;
        java.util.Set $r2;
        java.lang.String[] $r4, $r6;
        org.springframework.web.context.request.FacesRequestAttributes r0;
        java.util.Map $r1;
        int i0;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $z0 = <org.springframework.web.context.request.FacesRequestAttributes: boolean portletApiPresent>;

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r6 = staticinvoke <org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: java.lang.String[] getAttributeNames(javax.faces.context.ExternalContext)>($r5);

        return $r6;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: java.util.Map getAttributeMap(int)>(i0);

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = (java.util.Collection) $r2;

        $r4 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>($r3);

        return $r4;
    }

    public void registerDestructionCallback(java.lang.String, java.lang.Runnable, int)
    {
        java.lang.Runnable r3;
        org.springframework.web.context.request.FacesRequestAttributes r10;
        int i0;
        org.apache.commons.logging.Log $r0, $r2;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.String r6, $r9;
        boolean $z0;

        r10 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        r6 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Runnable;

        i0 := @parameter2: int;

        $r0 = <org.springframework.web.context.request.FacesRequestAttributes: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.springframework.web.context.request.FacesRequestAttributes: org.apache.commons.logging.Log logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not register destruction callback [");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for attribute \'");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' because FacesRequestAttributes does not support such callbacks");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r9);

     label1:
        return;
    }

    public java.lang.Object resolveReference(java.lang.String)
    {
        java.util.Map $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        javax.faces.context.FacesContext $r16, $r17;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        javax.faces.context.ExternalContext $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41;
        javax.faces.component.UIViewRoot $r18;
        org.springframework.web.context.request.FacesRequestAttributes r15;
        java.lang.Object $r38, $r40, $r42;

        r15 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        r0 := @parameter0: java.lang.String;

        $r1 = "request";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        $r41 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r42 = virtualinvoke $r41.<javax.faces.context.ExternalContext: java.lang.Object getRequest()>();

        return $r42;

     label01:
        $r2 = "session";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label02;

        $r39 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r40 = virtualinvoke $r39.<javax.faces.context.ExternalContext: java.lang.Object getSession(boolean)>(1);

        return $r40;

     label02:
        $r3 = "application";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label03;

        $r37 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r38 = virtualinvoke $r37.<javax.faces.context.ExternalContext: java.lang.Object getContext()>();

        return $r38;

     label03:
        $r4 = "requestScope";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label04;

        $r35 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r36 = virtualinvoke $r35.<javax.faces.context.ExternalContext: java.util.Map getRequestMap()>();

        return $r36;

     label04:
        $r5 = "sessionScope";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label05;

        $r33 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r34 = virtualinvoke $r33.<javax.faces.context.ExternalContext: java.util.Map getSessionMap()>();

        return $r34;

     label05:
        $r6 = "applicationScope";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label06;

        $r31 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r32 = virtualinvoke $r31.<javax.faces.context.ExternalContext: java.util.Map getApplicationMap()>();

        return $r32;

     label06:
        $r7 = "cookie";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label07;

        $r29 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r30 = virtualinvoke $r29.<javax.faces.context.ExternalContext: java.util.Map getRequestCookieMap()>();

        return $r30;

     label07:
        $r8 = "header";

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label08;

        $r27 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r28 = virtualinvoke $r27.<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderMap()>();

        return $r28;

     label08:
        $r9 = "headerValues";

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z8 == 0 goto label09;

        $r25 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r26 = virtualinvoke $r25.<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderValuesMap()>();

        return $r26;

     label09:
        $r10 = "param";

        $z9 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z9 == 0 goto label10;

        $r23 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r24 = virtualinvoke $r23.<javax.faces.context.ExternalContext: java.util.Map getRequestParameterMap()>();

        return $r24;

     label10:
        $r11 = "paramValues";

        $z10 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z10 == 0 goto label11;

        $r21 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r22 = virtualinvoke $r21.<javax.faces.context.ExternalContext: java.util.Map getRequestParameterValuesMap()>();

        return $r22;

     label11:
        $r12 = "initParam";

        $z11 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z11 == 0 goto label12;

        $r19 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r20 = virtualinvoke $r19.<javax.faces.context.ExternalContext: java.util.Map getInitParameterMap()>();

        return $r20;

     label12:
        $r13 = "view";

        $z12 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z12 == 0 goto label13;

        $r17 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.FacesContext getFacesContext()>();

        $r18 = virtualinvoke $r17.<javax.faces.context.FacesContext: javax.faces.component.UIViewRoot getViewRoot()>();

        return $r18;

     label13:
        $r14 = "facesContext";

        $z13 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z13 == 0 goto label14;

        $r16 = virtualinvoke r15.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.FacesContext getFacesContext()>();

        return $r16;

     label14:
        return null;
    }

    public java.lang.String getSessionId()
    {
        javax.faces.context.ExternalContext $r1;
        java.lang.IllegalStateException $r9;
        java.lang.NoSuchMethodException $r8;
        java.lang.Class[] $r4;
        org.springframework.web.context.request.FacesRequestAttributes r0;
        java.lang.Object $r2, $r6;
        java.lang.Class $r3;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r7, $r13;
        java.lang.reflect.Method $r5;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.lang.Object getSession(boolean)>(1);

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getId", $r4);

        $r6 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object)>($r5, $r2);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session object [");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] does not have a getId() method");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r9;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public java.lang.Object getSessionMutex()
    {
        javax.faces.context.ExternalContext $r1, $r3;
        org.springframework.web.context.request.FacesRequestAttributes r0;
        java.util.Map $r4;
        java.lang.Object $r2, $r6, r7;
        java.lang.String $r5;

        r0 := @this: org.springframework.web.context.request.FacesRequestAttributes;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.lang.Object getSession(boolean)>(1);

        $r3 = virtualinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()>();

        $r4 = virtualinvoke $r3.<javax.faces.context.ExternalContext: java.util.Map getSessionMap()>();

        $r5 = <org.springframework.web.util.WebUtils: java.lang.String SESSION_MUTEX_ATTRIBUTE>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = $r6;

        if $r6 != null goto label1;

        r7 = $r2;

     label1:
        return r7;
    }
}
