public final class minalloy.MinMailBug extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{

    private void <init>()
    {
        minalloy.MinMailBug r0;

        r0 := @this: minalloy.MinMailBug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setup()
    {
        java.lang.Thread$UncaughtExceptionHandler $r0;
        minalloy.MinMailBug $r1;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        if $r0 == null goto label1;

        return;

     label1:
        $r1 = new minalloy.MinMailBug;

        specialinvoke $r1.<minalloy.MinMailBug: void <init>()>();

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r1);

        return;
    }

    public static java.lang.String dump(java.lang.Throwable)
    {
        java.lang.Throwable $r7, r12;
        java.lang.StackTraceElement[] $r6;
        int i0, i1;
        java.lang.StringBuilder $r0, $r2, $r3, $r5, $r9;
        java.lang.Class $r1;
        java.lang.StackTraceElement $r8;
        java.lang.String $r4, $r10, $r11;

        r12 := @parameter0: java.lang.Throwable;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        goto label5;

     label1:
        $r1 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke r12.<java.lang.Throwable: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r6 = virtualinvoke r12.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        if $r6 == null goto label4;

        i0 = lengthof $r6;

        i1 = 0;

        goto label3;

     label2:
        $r8 = $r6[i1];

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label2;

     label4:
        $r7 = virtualinvoke r12.<java.lang.Throwable: java.lang.Throwable getCause()>();

        r12 = $r7;

        if $r7 == null goto label5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caused by...\n");

     label5:
        if r12 != null goto label1;

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        return $r11;
    }

    private void copyToClipboard(java.lang.String)
    {
        java.awt.datatransfer.Clipboard $r3;
        java.awt.datatransfer.StringSelection $r0;
        java.lang.String r1;
        minalloy.MinMailBug r4;
        java.awt.Toolkit $r2;

        r4 := @this: minalloy.MinMailBug;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.awt.datatransfer.StringSelection;

        specialinvoke $r0.<java.awt.datatransfer.StringSelection: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r3 = virtualinvoke $r2.<java.awt.Toolkit: java.awt.datatransfer.Clipboard getSystemClipboard()>();

        virtualinvoke $r3.<java.awt.datatransfer.Clipboard: void setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)>($r0, $r0);

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable r0, r23;
        java.lang.Object[] $r1, $r2, $r3;
        minalloy.MinMailBug r5;
        java.lang.Thread r22;
        java.lang.String $r4, $r6, $r13, $r17, $r20;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r7, $r8, $r10, $r15, $r18, $r19, $r21;
        java.lang.StringBuilder $r9, $r12, $r14, $r16;
        java.lang.Class $r11;

        r5 := @this: minalloy.MinMailBug;

        r22 := @parameter0: java.lang.Thread;

        r0 := @parameter1: java.lang.Throwable;

        if r0 == null goto label1;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void flush()>();

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void flush()>();

        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception: ");

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message: ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Stacktrace:");

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r20 = staticinvoke <minalloy.MinMailBug: java.lang.String dump(java.lang.Throwable)>(r0);

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void flush()>();

     label1:
        r23 = r0;

        goto label5;

     label2:
        $z0 = r23 instanceof java.lang.StackOverflowError;

        if $z0 == 0 goto label3;

        $r2 = newarray (java.lang.Object)[7];

        $r2[0] = "Sorry. Aluminum has run out of stack space.";

        $r2[1] = " ";

        $r2[2] = "Try simplifying your model or reducing the scope.";

        $r2[3] = "And try reducing Options->SkolemDepth to 0.";

        $r2[4] = "And try increasing Options->Stack.";

        $r2[5] = " ";

        $r2[6] = "There is no way for Aluminum to continue execution, so pressing OK will shut down Aluminum.";

        staticinvoke <edu.mit.csail.sdg.alloy4.OurDialog: void fatal(java.lang.Object)>($r2);

     label3:
        $z1 = r23 instanceof java.lang.OutOfMemoryError;

        if $z1 == 0 goto label4;

        $r1 = newarray (java.lang.Object)[7];

        $r1[0] = "Sorry. Aluminum has run out of memory.";

        $r1[1] = " ";

        $r1[2] = "Try simplifying your model or reducing the scope.";

        $r1[3] = "And try reducing Options->SkolemDepth to 0.";

        $r1[4] = "And try increasing Options->Memory.";

        $r1[5] = " ";

        $r1[6] = "There is no way for Aluminum to continue execution, so pressing OK will shut down Aluminum.";

        staticinvoke <edu.mit.csail.sdg.alloy4.OurDialog: void fatal(java.lang.Object)>($r1);

     label4:
        r23 = virtualinvoke r23.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label5:
        if r23 != null goto label2;

        $r3 = newarray (java.lang.Object)[8];

        $r3[0] = "Sorry. A fatal internal error has occurred.";

        $r3[1] = " ";

        $r3[2] = "Please send email to tn@cs.wpi.edu describing the error below.";

        $r3[3] = " ";

        $r3[4] = "(Click below to copy the error to your clipboard before exiting Aluminum.)";

        $r3[5] = " ";

        $r4 = staticinvoke <minalloy.MinMailBug: java.lang.String dump(java.lang.Throwable)>(r0);

        $r3[6] = $r4;

        $r3[7] = " ";

        $z2 = staticinvoke <edu.mit.csail.sdg.alloy4.OurDialog: boolean yesno(java.lang.Object,java.lang.String,java.lang.String)>($r3, "Copy to Clipboard", "Exit without copying");

        if $z2 == 0 goto label6;

        $r6 = staticinvoke <minalloy.MinMailBug: java.lang.String dump(java.lang.Throwable)>(r0);

        specialinvoke r5.<minalloy.MinMailBug: void copyToClipboard(java.lang.String)>($r6);

     label6:
        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }
}
