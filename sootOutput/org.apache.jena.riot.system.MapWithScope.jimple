public class org.apache.jena.riot.system.MapWithScope extends java.lang.Object
{
    private final org.apache.jena.riot.system.MapWithScope$ScopePolicy scopePolicy;
    private final org.apache.jena.riot.system.MapWithScope$Allocator allocator;

    protected void <init>(org.apache.jena.riot.system.MapWithScope$ScopePolicy, org.apache.jena.riot.system.MapWithScope$Allocator)
    {
        org.apache.jena.riot.system.MapWithScope$ScopePolicy r1;
        org.apache.jena.riot.system.MapWithScope r0;
        org.apache.jena.riot.system.MapWithScope$Allocator r2;

        r0 := @this: org.apache.jena.riot.system.MapWithScope;

        r1 := @parameter0: org.apache.jena.riot.system.MapWithScope$ScopePolicy;

        r2 := @parameter1: org.apache.jena.riot.system.MapWithScope$Allocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.system.MapWithScope: org.apache.jena.riot.system.MapWithScope$ScopePolicy scopePolicy> = r1;

        r0.<org.apache.jena.riot.system.MapWithScope: org.apache.jena.riot.system.MapWithScope$Allocator allocator> = r2;

        return;
    }

    public java.lang.Object get(java.lang.Object, java.lang.Object)
    {
        org.apache.jena.riot.system.MapWithScope$ScopePolicy $r3;
        org.apache.jena.riot.system.MapWithScope r1;
        java.util.Map $r4;
        org.apache.jena.riot.system.MapWithScope$Allocator $r6, $r8;
        java.lang.Object r0, r2, $r5, $r7, $r9, r11;
        org.apache.jena.atlas.lib.InternalErrorException $r10;

        r1 := @this: org.apache.jena.riot.system.MapWithScope;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r10 = new org.apache.jena.atlas.lib.InternalErrorException;

        specialinvoke $r10.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>("null in MapWithScope.get(,null)");

        throw $r10;

     label1:
        $r3 = r1.<org.apache.jena.riot.system.MapWithScope: org.apache.jena.riot.system.MapWithScope$ScopePolicy scopePolicy>;

        $r4 = interfaceinvoke $r3.<org.apache.jena.riot.system.MapWithScope$ScopePolicy: java.util.Map getScope(java.lang.Object)>(r2);

        if $r4 != null goto label2;

        $r8 = r1.<org.apache.jena.riot.system.MapWithScope: org.apache.jena.riot.system.MapWithScope$Allocator allocator>;

        $r9 = interfaceinvoke $r8.<org.apache.jena.riot.system.MapWithScope$Allocator: java.lang.Object alloc(java.lang.Object,java.lang.Object)>(r2, r0);

        return $r9;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r11 = $r5;

        if $r5 != null goto label3;

        $r6 = r1.<org.apache.jena.riot.system.MapWithScope: org.apache.jena.riot.system.MapWithScope$Allocator allocator>;

        $r7 = interfaceinvoke $r6.<org.apache.jena.riot.system.MapWithScope$Allocator: java.lang.Object alloc(java.lang.Object,java.lang.Object)>(r2, r0);

        r11 = $r7;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r7);

     label3:
        return r11;
    }

    public java.lang.Object create()
    {
        java.lang.Object $r2;
        org.apache.jena.riot.system.MapWithScope r0;
        org.apache.jena.riot.system.MapWithScope$Allocator $r1;

        r0 := @this: org.apache.jena.riot.system.MapWithScope;

        $r1 = r0.<org.apache.jena.riot.system.MapWithScope: org.apache.jena.riot.system.MapWithScope$Allocator allocator>;

        $r2 = interfaceinvoke $r1.<org.apache.jena.riot.system.MapWithScope$Allocator: java.lang.Object create()>();

        return $r2;
    }

    public void clear()
    {
        org.apache.jena.riot.system.MapWithScope$ScopePolicy $r1;
        org.apache.jena.riot.system.MapWithScope r0;
        org.apache.jena.riot.system.MapWithScope$Allocator $r2;

        r0 := @this: org.apache.jena.riot.system.MapWithScope;

        $r1 = r0.<org.apache.jena.riot.system.MapWithScope: org.apache.jena.riot.system.MapWithScope$ScopePolicy scopePolicy>;

        interfaceinvoke $r1.<org.apache.jena.riot.system.MapWithScope$ScopePolicy: void clear()>();

        $r2 = r0.<org.apache.jena.riot.system.MapWithScope: org.apache.jena.riot.system.MapWithScope$Allocator allocator>;

        interfaceinvoke $r2.<org.apache.jena.riot.system.MapWithScope$Allocator: void reset()>();

        return;
    }
}
