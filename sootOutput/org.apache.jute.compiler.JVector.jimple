public class org.apache.jute.compiler.JVector extends org.apache.jute.compiler.JCompType
{
    private static int level;
    private org.apache.jute.compiler.JType mElement;

    private static java.lang.String getId(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2, $r4;
        java.lang.String r1, $r3, $r5;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getLevel()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.String getLevel()
    {
        int $i0;
        java.lang.String $r0;

        $i0 = <org.apache.jute.compiler.JVector: int level>;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r0;
    }

    private static void incrLevel()
    {
        int $i0, $i1;

        $i0 = <org.apache.jute.compiler.JVector: int level>;

        $i1 = $i0 + 1;

        <org.apache.jute.compiler.JVector: int level> = $i1;

        return;
    }

    private static void decrLevel()
    {
        int $i0, $i1;

        $i0 = <org.apache.jute.compiler.JVector: int level>;

        $i1 = $i0 - 1;

        <org.apache.jute.compiler.JVector: int level> = $i1;

        return;
    }

    public void <init>(org.apache.jute.compiler.JType)
    {
        java.lang.StringBuilder $r1, $r2, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35;
        org.apache.jute.compiler.JVector r0;
        org.apache.jute.compiler.JType r3;
        java.lang.String $r4, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36;

        r0 := @this: org.apache.jute.compiler.JVector;

        r3 := @parameter0: org.apache.jute.compiler.JType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("struct ");

        $r4 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String extractVectorName(org.apache.jute.compiler.JType)>(r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ::std::vector<");

        $r9 = virtualinvoke r3.<org.apache.jute.compiler.JType: java.lang.String getCppType()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System.Collections.Generic.List<");

        $r15 = virtualinvoke r3.<org.apache.jute.compiler.JType: java.lang.String getCsharpType()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("java.util.List<");

        $r21 = virtualinvoke r3.<org.apache.jute.compiler.JType: java.lang.String getJavaType()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System.Collections.Generic.List<");

        $r27 = virtualinvoke r3.<org.apache.jute.compiler.JType: java.lang.String getCsharpType()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("java.util.ArrayList<");

        $r33 = virtualinvoke r3.<org.apache.jute.compiler.JType: java.lang.String getJavaType()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.jute.compiler.JCompType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r6, $r12, $r18, $r24, "Vector", $r30, $r36);

        r0.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement> = r3;

        return;
    }

    public java.lang.String getSignature()
    {
        org.apache.jute.compiler.JType $r3;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;
        org.apache.jute.compiler.JVector r2;

        r2 := @this: org.apache.jute.compiler.JVector;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = r2.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r4 = virtualinvoke $r3.<org.apache.jute.compiler.JType: java.lang.String getSignature()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String genJavaCompareTo(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String r2, $r5;
        org.apache.jute.compiler.JVector r6;

        r6 := @this: org.apache.jute.compiler.JVector;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    throw new UnsupportedOperationException(\"comparing ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unimplemented\");\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String genJavaReadWrapper(java.lang.String, java.lang.String, boolean)
    {
        boolean z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34, $r40, $r41, $r42, $r43, $r45, $r46, $r48, $r49, $r50, $r51, $r54, $r55, $r56, $r57;
        org.apache.jute.compiler.JVector r21;
        org.apache.jute.compiler.JType $r22, $r36;
        java.lang.String $r3, r6, $r9, $r12, $r15, r18, $r23, $r26, $r29, $r32, $r35, $r37, $r38, $r39, $r44, $r47, $r52, $r53, $r58;

        r21 := @this: org.apache.jute.compiler.JVector;

        r18 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        if z0 == 0 goto label1;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      java.util.List ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    {\n");

        staticinvoke <org.apache.jute.compiler.JVector: void incrLevel()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      Index ");

        $r3 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = a_.startVector(\"");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      if (");

        $r12 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!= null) {");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=new java.util.ArrayList<");

        $r22 = r21.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r23 = virtualinvoke $r22.<org.apache.jute.compiler.JType: java.lang.String getJavaType()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">();\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          for (; !");

        $r29 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".done(); ");

        $r32 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".incr()) {\n");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r36 = r21.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r37 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r38 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r39 = virtualinvoke $r36.<org.apache.jute.compiler.JType: java.lang.String genJavaReadWrapper(java.lang.String,java.lang.String,boolean)>($r37, $r38, 1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("            ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".add(");

        $r44 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          }\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      }\n");

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.endVector(\"");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        staticinvoke <org.apache.jute.compiler.JVector: void decrLevel()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    }\n");

        $r53 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r53;
    }

    public java.lang.String genJavaReadMethod(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, $r3;
        org.apache.jute.compiler.JVector r0;

        r0 := @this: org.apache.jute.compiler.JVector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JVector: java.lang.String genJavaReadWrapper(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        return $r3;
    }

    public java.lang.String genJavaWriteWrapper(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r43, $r44, $r46, $r47, $r50, $r51, $r52, $r53, $r55, $r56, $r62, $r63, $r64, $r65, $r66, $r67;
        org.apache.jute.compiler.JVector r40;
        java.lang.String r3, r6, $r9, $r14, $r17, $r22, $r25, $r28, $r31, $r34, $r37, $r42, $r45, $r49, $r54, $r57, $r59, $r60, $r61, $r68, $r69;
        org.apache.jute.compiler.JType $r41, $r48, $r58;

        r40 := @this: org.apache.jute.compiler.JVector;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("    {\n");

        staticinvoke <org.apache.jute.compiler.JVector: void incrLevel()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      a_.startVector(");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      if (");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!= null) {");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          int ");

        $r17 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("len");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".size();\n");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          for(int ");

        $r25 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0; ");

        $r28 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r31 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("len");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r34 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("++) {\n");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("            ");

        $r41 = r40.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r42 = virtualinvoke $r41.<org.apache.jute.compiler.JType: java.lang.String getJavaWrapperType()>();

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r45 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (");

        $r48 = r40.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r49 = virtualinvoke $r48.<org.apache.jute.compiler.JType: java.lang.String getJavaWrapperType()>();

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".get(");

        $r54 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r58 = r40.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r59 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r60 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r61 = virtualinvoke $r58.<org.apache.jute.compiler.JType: java.lang.String genJavaWriteWrapper(java.lang.String,java.lang.String)>($r59, $r60);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          }\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      }\n");

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      a_.endVector(");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    }\n");

        staticinvoke <org.apache.jute.compiler.JVector: void decrLevel()>();

        $r69 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r69;
    }

    public java.lang.String genJavaWriteMethod(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, $r3;
        org.apache.jute.compiler.JVector r0;

        r0 := @this: org.apache.jute.compiler.JVector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JVector: java.lang.String genJavaWriteWrapper(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    public org.apache.jute.compiler.JType getElementType()
    {
        org.apache.jute.compiler.JType $r1;
        org.apache.jute.compiler.JVector r0;

        r0 := @this: org.apache.jute.compiler.JVector;

        $r1 = r0.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        return $r1;
    }

    public java.lang.String genCsharpWriteWrapper(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r2, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r46, $r47, $r49, $r50, $r53, $r54, $r56, $r57, $r59, $r60, $r66, $r67, $r69, $r70, $r71, $r72;
        org.apache.jute.compiler.JVector r43;
        java.lang.String r3, $r4, r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r45, $r48, $r52, $r55, $r58, $r61, $r63, $r64, $r65, $r68, $r73, $r74;
        org.apache.jute.compiler.JType $r44, $r51, $r62;

        r43 := @this: org.apache.jute.compiler.JVector;

        r3 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("    {\n");

        staticinvoke <org.apache.jute.compiler.JVector: void incrLevel()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      a_.StartVector(");

        $r4 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String capitalize(java.lang.String)>(r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      if (");

        $r13 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String capitalize(java.lang.String)>(r3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!= null) {");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          int ");

        $r19 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("len");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r22 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String capitalize(java.lang.String)>(r3);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Count;\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          for(int ");

        $r28 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0; ");

        $r31 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r34 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("len");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r37 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("++) {\n");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("            ");

        $r44 = r43.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r45 = virtualinvoke $r44.<org.apache.jute.compiler.JType: java.lang.String getCsharpWrapperType()>();

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r48 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (");

        $r51 = r43.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r52 = virtualinvoke $r51.<org.apache.jute.compiler.JType: java.lang.String getCsharpWrapperType()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r55 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String capitalize(java.lang.String)>(r3);

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r58 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("];\n");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r62 = r43.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r63 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r64 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r65 = virtualinvoke $r62.<org.apache.jute.compiler.JType: java.lang.String genCsharpWriteWrapper(java.lang.String,java.lang.String)>($r63, $r64);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          }\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      }\n");

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      a_.EndVector(");

        $r68 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String capitalize(java.lang.String)>(r3);

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    }\n");

        staticinvoke <org.apache.jute.compiler.JVector: void decrLevel()>();

        $r74 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r74;
    }

    java.lang.String genCsharpWriteMethod(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, $r3;
        org.apache.jute.compiler.JVector r0;

        r0 := @this: org.apache.jute.compiler.JVector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JVector: java.lang.String genCsharpWriteWrapper(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    public java.lang.String genCsharpReadWrapper(java.lang.String, java.lang.String, boolean)
    {
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r20, $r21, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r41, $r42, $r44, $r45, $r47, $r48, $r50, $r51, $r52, $r53, $r56, $r57, $r60, $r61, $r63, $r64;
        org.apache.jute.compiler.JVector r22;
        java.lang.String $r3, r6, $r9, $r12, $r15, r18, $r19, $r24, $r27, $r30, $r33, $r36, $r38, $r39, $r40, $r43, $r46, $r49, $r54, $r55, $r59, $r62, $r65;
        boolean z0;
        org.apache.jute.compiler.JType $r23, $r37, $r58;

        r22 := @this: org.apache.jute.compiler.JVector;

        r18 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        if z0 == 0 goto label1;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      System.Collections.Generic.List<");

        $r58 = r22.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r59 = virtualinvoke $r58.<org.apache.jute.compiler.JType: java.lang.String getCsharpType()>();

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $r62 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String capitalize(java.lang.String)>(r18);

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    {\n");

        staticinvoke <org.apache.jute.compiler.JVector: void incrLevel()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      IIndex ");

        $r3 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = a_.StartVector(\"");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      if (");

        $r12 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!= null) {");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          ");

        $r19 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String capitalize(java.lang.String)>(r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=new System.Collections.Generic.List<");

        $r23 = r22.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r24 = virtualinvoke $r23.<org.apache.jute.compiler.JType: java.lang.String getCsharpType()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">();\n");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          for (; !");

        $r30 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Done(); ");

        $r33 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("vidx");

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Incr()) {\n");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r37 = r22.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType mElement>;

        $r38 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r39 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r40 = virtualinvoke $r37.<org.apache.jute.compiler.JType: java.lang.String genCsharpReadWrapper(java.lang.String,java.lang.String,boolean)>($r38, $r39, 1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("            ");

        $r43 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String capitalize(java.lang.String)>(r18);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Add(");

        $r46 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String getId(java.lang.String)>("e");

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          }\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      }\n");

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.EndVector(\"");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        staticinvoke <org.apache.jute.compiler.JVector: void decrLevel()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    }\n");

        $r55 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r55;
    }

    java.lang.String genCsharpReadMethod(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, $r3;
        org.apache.jute.compiler.JVector r0;

        r0 := @this: org.apache.jute.compiler.JVector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JVector: java.lang.String genCsharpReadWrapper(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        return $r3;
    }

    public static java.lang.String extractVectorName(org.apache.jute.compiler.JType)
    {
        org.apache.jute.compiler.JType r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @parameter0: org.apache.jute.compiler.JType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractMethodSuffix(org.apache.jute.compiler.JType)>(r1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_vector");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        <org.apache.jute.compiler.JVector: int level> = 0;

        return;
    }
}
