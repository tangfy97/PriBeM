class org.apache.solr.common.cloud.ZkStateReader$2 extends java.lang.Object implements org.apache.zookeeper.Watcher
{
    final org.apache.solr.common.cloud.ZkStateReader this$0;

    void <init>(org.apache.solr.common.cloud.ZkStateReader)
    {
        org.apache.solr.common.cloud.ZkStateReader r1;
        org.apache.solr.common.cloud.ZkStateReader$2 r0;

        r0 := @this: org.apache.solr.common.cloud.ZkStateReader$2;

        r1 := @parameter0: org.apache.solr.common.cloud.ZkStateReader;

        r0.<org.apache.solr.common.cloud.ZkStateReader$2: org.apache.solr.common.cloud.ZkStateReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.zookeeper.WatchedEvent)
    {
        byte[] $r16;
        org.apache.solr.common.cloud.ClusterState $r6, $r8, $r22, $r25;
        org.apache.zookeeper.data.Stat $r13;
        java.lang.Integer $r10, $r24;
        java.lang.Thread $r28;
        boolean $z0;
        org.apache.solr.common.cloud.ZkStateReader $r5, $r7, $r11, $r14, $r17, $r21, $r26;
        org.apache.solr.common.cloud.ZooKeeperException $r37;
        java.util.Set $r9, $r23;
        java.util.List $r19;
        java.lang.Throwable $r39;
        java.util.HashSet $r20;
        org.apache.zookeeper.KeeperException$Code $r31, $r32, $r34, $r35;
        int $i0, $i1;
        org.slf4j.Logger $r3, $r29, $r33, $r36;
        org.apache.zookeeper.KeeperException $r30;
        org.apache.zookeeper.WatchedEvent r0;
        org.apache.solr.common.SolrException$ErrorCode $r38;
        org.apache.solr.common.cloud.ZkStateReader$2 r4;
        java.lang.InterruptedException $r27;
        org.apache.zookeeper.Watcher$Event$EventType $r1, $r2;
        java.lang.Object $r12;
        org.apache.solr.common.cloud.SolrZkClient $r15, $r18;

        r4 := @this: org.apache.solr.common.cloud.ZkStateReader$2;

        r0 := @parameter0: org.apache.zookeeper.WatchedEvent;

        $r1 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType None>;

        $r2 = virtualinvoke r0.<org.apache.zookeeper.WatchedEvent: org.apache.zookeeper.Watcher$Event$EventType getType()>();

        $z0 = virtualinvoke $r1.<org.apache.zookeeper.Watcher$Event$EventType: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r3 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        $r5 = r4.<org.apache.solr.common.cloud.ZkStateReader$2: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r6 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.ClusterState access$200(org.apache.solr.common.cloud.ZkStateReader)>($r5);

        if $r6 != null goto label02;

        $i1 = 0;

        goto label03;

     label02:
        $r7 = r4.<org.apache.solr.common.cloud.ZkStateReader$2: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r8 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.ClusterState access$200(org.apache.solr.common.cloud.ZkStateReader)>($r7);

        $r9 = virtualinvoke $r8.<org.apache.solr.common.cloud.ClusterState: java.util.Set getLiveNodes()>();

        $i1 = interfaceinvoke $r9.<java.util.Set: int size()>();

     label03:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("A cluster state change: {}, has occurred - updating... (live nodes size: {})", r0, $r10);

     label04:
        $r11 = r4.<org.apache.solr.common.cloud.ZkStateReader$2: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r12 = virtualinvoke $r11.<org.apache.solr.common.cloud.ZkStateReader: java.lang.Object getUpdateLock()>();

        entermonitor $r12;

     label05:
        $r13 = new org.apache.zookeeper.data.Stat;

        specialinvoke $r13.<org.apache.zookeeper.data.Stat: void <init>()>();

        $r14 = r4.<org.apache.solr.common.cloud.ZkStateReader$2: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r15 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.SolrZkClient access$300(org.apache.solr.common.cloud.ZkStateReader)>($r14);

        $r16 = virtualinvoke $r15.<org.apache.solr.common.cloud.SolrZkClient: byte[] getData(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat,boolean)>("/clusterstate.json", r4, $r13, 1);

        $r17 = r4.<org.apache.solr.common.cloud.ZkStateReader$2: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r18 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.SolrZkClient access$300(org.apache.solr.common.cloud.ZkStateReader)>($r17);

        $r19 = virtualinvoke $r18.<org.apache.solr.common.cloud.SolrZkClient: java.util.List getChildren(java.lang.String,org.apache.zookeeper.Watcher,boolean)>("/live_nodes", r4, 1);

        $r20 = new java.util.HashSet;

        specialinvoke $r20.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r20.<java.util.Set: boolean addAll(java.util.Collection)>($r19);

        $r21 = r4.<org.apache.solr.common.cloud.ZkStateReader$2: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r22 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.ClusterState access$200(org.apache.solr.common.cloud.ZkStateReader)>($r21);

        $r23 = virtualinvoke $r22.<org.apache.solr.common.cloud.ClusterState: java.util.Set getLiveNodes()>();

        $i0 = virtualinvoke $r13.<org.apache.zookeeper.data.Stat: int getVersion()>();

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r25 = staticinvoke <org.apache.solr.common.cloud.ClusterState: org.apache.solr.common.cloud.ClusterState load(java.lang.Integer,byte[],java.util.Set)>($r24, $r16, $r23);

        $r26 = r4.<org.apache.solr.common.cloud.ZkStateReader$2: org.apache.solr.common.cloud.ZkStateReader this$0>;

        staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.ClusterState access$202(org.apache.solr.common.cloud.ZkStateReader,org.apache.solr.common.cloud.ClusterState)>($r26, $r25);

        exitmonitor $r12;

     label06:
        goto label09;

     label07:
        $r39 := @caughtexception;

        exitmonitor $r12;

     label08:
        throw $r39;

     label09:
        goto label14;

     label10:
        $r30 := @caughtexception;

        $r31 = virtualinvoke $r30.<org.apache.zookeeper.KeeperException: org.apache.zookeeper.KeeperException$Code code()>();

        $r32 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code SESSIONEXPIRED>;

        if $r31 == $r32 goto label11;

        $r34 = virtualinvoke $r30.<org.apache.zookeeper.KeeperException: org.apache.zookeeper.KeeperException$Code code()>();

        $r35 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code CONNECTIONLOSS>;

        if $r34 != $r35 goto label12;

     label11:
        $r33 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r33.<org.slf4j.Logger: void warn(java.lang.String)>("ZooKeeper watch triggered, but Solr cannot talk to ZK");

        return;

     label12:
        $r36 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r36.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("", $r30);

        $r37 = new org.apache.solr.common.cloud.ZooKeeperException;

        $r38 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR>;

        specialinvoke $r37.<org.apache.solr.common.cloud.ZooKeeperException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String,java.lang.Throwable)>($r38, "", $r30);

        throw $r37;

     label13:
        $r27 := @caughtexception;

        $r28 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r28.<java.lang.Thread: void interrupt()>();

        $r29 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r29.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("", $r27);

        return;

     label14:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch org.apache.zookeeper.KeeperException from label04 to label09 with label10;
        catch java.lang.InterruptedException from label04 to label09 with label13;
    }
}
