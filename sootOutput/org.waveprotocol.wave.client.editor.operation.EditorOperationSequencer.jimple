public class org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer extends java.lang.Object implements org.waveprotocol.wave.model.operation.OperationSequencer
{
    private final org.waveprotocol.wave.model.document.operation.NindoSink$Silent sink;

    public void <init>(org.waveprotocol.wave.model.document.operation.NindoSink$Silent)
    {
        org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer r0;
        org.waveprotocol.wave.model.document.operation.NindoSink$Silent r1;

        r0 := @this: org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.NindoSink$Silent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer: org.waveprotocol.wave.model.document.operation.NindoSink$Silent sink> = r1;

        return;
    }

    public void begin()
    {
        org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer;

        return;
    }

    public void end()
    {
        org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer;

        return;
    }

    public void consume(org.waveprotocol.wave.model.document.operation.Nindo)
    {
        org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer r0;
        org.waveprotocol.wave.model.document.operation.Nindo r1;
        org.waveprotocol.wave.model.document.operation.NindoSink$Silent $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Nindo;

        $r2 = r0.<org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer: org.waveprotocol.wave.model.document.operation.NindoSink$Silent sink>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.NindoSink$Silent: org.waveprotocol.wave.model.document.operation.DocOp consumeAndReturnInvertible(org.waveprotocol.wave.model.document.operation.Nindo)>(r1);

        return;
    }

    public volatile void consume(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.operation.Nindo $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.document.operation.Nindo) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.operation.EditorOperationSequencer: void consume(org.waveprotocol.wave.model.document.operation.Nindo)>($r2);

        return;
    }
}
