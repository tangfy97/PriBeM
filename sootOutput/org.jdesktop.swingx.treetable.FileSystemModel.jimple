public class org.jdesktop.swingx.treetable.FileSystemModel extends org.jdesktop.swingx.treetable.AbstractTreeTableModel
{
    private static final java.lang.Long DIRECTORY;

    public void <init>()
    {
        org.jdesktop.swingx.treetable.FileSystemModel r0;
        java.lang.String $r2;
        java.io.File $r1;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        $r1 = new java.io.File;

        $r2 = <java.io.File: java.lang.String separator>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        specialinvoke r0.<org.jdesktop.swingx.treetable.FileSystemModel: void <init>(java.io.File)>($r1);

        return;
    }

    public void <init>(java.io.File)
    {
        org.jdesktop.swingx.treetable.FileSystemModel r0;
        java.io.File r1;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.jdesktop.swingx.treetable.AbstractTreeTableModel: void <init>(java.lang.Object)>(r1);

        return;
    }

    private boolean isValidFileNode(java.lang.Object)
    {
        java.lang.Object r0, $r2;
        org.jdesktop.swingx.treetable.FileSystemModel r1;
        java.io.File r3;
        boolean $z0, z1;

        r1 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r0 := @parameter0: java.lang.Object;

        z1 = 0;

        $z0 = r0 instanceof java.io.File;

        if $z0 == 0 goto label2;

        r3 = (java.io.File) r0;

     label1:
        if z1 != 0 goto label2;

        if r3 == null goto label2;

        $r2 = r1.<org.jdesktop.swingx.treetable.FileSystemModel: java.lang.Object root>;

        z1 = virtualinvoke r3.<java.io.File: boolean equals(java.lang.Object)>($r2);

        r3 = virtualinvoke r3.<java.io.File: java.io.File getParentFile()>();

        goto label1;

     label2:
        return z1;
    }

    public java.io.File getChild(java.lang.Object, int)
    {
        java.lang.String[] $r3;
        java.lang.IllegalArgumentException $r6;
        java.io.File r2, $r4;
        int i0;
        java.lang.Object r1;
        org.jdesktop.swingx.treetable.FileSystemModel r0;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.treetable.FileSystemModel: boolean isValidFileNode(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parent is not a file governed by this model");

        throw $r6;

     label1:
        r2 = (java.io.File) r1;

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String[] list()>();

        if $r3 == null goto label2;

        $r4 = new java.io.File;

        $r5 = $r3[i0];

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r5);

        return $r4;

     label2:
        return null;
    }

    public int getChildCount(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0;
        java.lang.String[] $r2;
        org.jdesktop.swingx.treetable.FileSystemModel r3;
        java.io.File $r1;
        boolean $z0;

        r3 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.io.File;

        if $z0 == 0 goto label1;

        $r1 = (java.io.File) r0;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String[] list()>();

        if $r2 == null goto label1;

        $i0 = lengthof $r2;

        return $i0;

     label1:
        return 0;
    }

    public java.lang.Class getColumnClass(int)
    {
        int i0;
        java.lang.Class $r1;
        org.jdesktop.swingx.treetable.FileSystemModel r0;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return class "Ljava/lang/String;";

     label2:
        return class "Ljava/lang/Long;";

     label3:
        return class "Ljava/lang/Boolean;";

     label4:
        return class "Ljava/util/Date;";

     label5:
        $r1 = specialinvoke r0.<org.jdesktop.swingx.treetable.AbstractTreeTableModel: java.lang.Class getColumnClass(int)>(i0);

        return $r1;
    }

    public int getColumnCount()
    {
        org.jdesktop.swingx.treetable.FileSystemModel r0;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        return 4;
    }

    public java.lang.String getColumnName(int)
    {
        int i0;
        org.jdesktop.swingx.treetable.FileSystemModel r0;
        java.lang.String $r1;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return "Name";

     label2:
        return "Size";

     label3:
        return "Directory";

     label4:
        return "Modification Date";

     label5:
        $r1 = specialinvoke r0.<org.jdesktop.swingx.treetable.AbstractTreeTableModel: java.lang.String getColumnName(int)>(i0);

        return $r1;
    }

    public java.lang.Object getValueAt(java.lang.Object, int)
    {
        java.util.Date $r2;
        long $l1, $l2;
        java.io.File r1;
        java.lang.Long $r5, $r6;
        int i0;
        java.lang.Boolean $r3;
        java.lang.Object r0;
        org.jdesktop.swingx.treetable.FileSystemModel r4;
        java.lang.String $r7;
        boolean $z0, $z1, $z2;

        r4 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof java.io.File;

        if $z0 == 0 goto label7;

        r1 = (java.io.File) r0;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label1:
        $r7 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        return $r7;

     label2:
        $z2 = virtualinvoke r4.<org.jdesktop.swingx.treetable.FileSystemModel: boolean isLeaf(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $l2 = virtualinvoke r1.<java.io.File: long length()>();

        goto label4;

     label3:
        $r5 = <org.jdesktop.swingx.treetable.FileSystemModel: java.lang.Long DIRECTORY>;

        $l2 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

     label4:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        return $r6;

     label5:
        $z1 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r3;

     label6:
        $r2 = new java.util.Date;

        $l1 = virtualinvoke r1.<java.io.File: long lastModified()>();

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l1);

        return $r2;

     label7:
        return null;
    }

    public int getIndexOfChild(java.lang.Object, java.lang.Object)
    {
        java.io.File r2, $r4;
        int i0, i1, $i3;
        java.lang.Object r0, r1;
        org.jdesktop.swingx.treetable.FileSystemModel r5;
        java.io.File[] $r3;
        boolean $z0, $z1, $z2;

        r5 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.io.File;

        if $z0 == 0 goto label3;

        $z1 = r1 instanceof java.io.File;

        if $z1 == 0 goto label3;

        r2 = (java.io.File) r0;

        $r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r3);

        i1 = 0;

        i0 = lengthof $r3;

     label1:
        if i1 >= i0 goto label3;

        $r4 = $r3[i1];

        $z2 = virtualinvoke $r4.<java.io.File: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public java.io.File getRoot()
    {
        java.lang.Object $r1;
        org.jdesktop.swingx.treetable.FileSystemModel r0;
        java.io.File $r2;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        $r1 = r0.<org.jdesktop.swingx.treetable.FileSystemModel: java.lang.Object root>;

        $r2 = (java.io.File) $r1;

        return $r2;
    }

    public void setRoot(java.io.File)
    {
        org.jdesktop.swingx.treetable.FileSystemModel r0;
        org.jdesktop.swingx.tree.TreeModelSupport $r2;
        java.io.File r1;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r1 := @parameter0: java.io.File;

        r0.<org.jdesktop.swingx.treetable.FileSystemModel: java.lang.Object root> = r1;

        $r2 = r0.<org.jdesktop.swingx.treetable.FileSystemModel: org.jdesktop.swingx.tree.TreeModelSupport modelSupport>;

        virtualinvoke $r2.<org.jdesktop.swingx.tree.TreeModelSupport: void fireNewRoot()>();

        return;
    }

    public boolean isLeaf(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String[] $r2;
        org.jdesktop.swingx.treetable.FileSystemModel r3;
        java.io.File $r1;
        boolean $z0, $z1;

        r3 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.io.File;

        if $z0 == 0 goto label3;

        $r1 = (java.io.File) r0;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String[] list()>();

        if $r2 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 1;
    }

    public volatile java.lang.Object getRoot()
    {
        org.jdesktop.swingx.treetable.FileSystemModel r0;
        java.io.File $r1;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.treetable.FileSystemModel: java.io.File getRoot()>();

        return $r1;
    }

    public volatile java.lang.Object getChild(java.lang.Object, int)
    {
        int i0;
        java.lang.Object r1;
        org.jdesktop.swingx.treetable.FileSystemModel r0;
        java.io.File $r2;

        r0 := @this: org.jdesktop.swingx.treetable.FileSystemModel;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.treetable.FileSystemModel: java.io.File getChild(java.lang.Object,int)>(r1, i0);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Long $r0;

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        <org.jdesktop.swingx.treetable.FileSystemModel: java.lang.Long DIRECTORY> = $r0;

        return;
    }
}
