public class com.google.gxp.compiler.js.JavaScriptCodeGenerator extends com.google.gxp.compiler.codegen.BracesCodeGenerator
{

    public void <init>(com.google.gxp.compiler.msgextract.MessageExtractedTree)
    {
        com.google.gxp.compiler.msgextract.MessageExtractedTree r1;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator r0;

        r0 := @this: com.google.gxp.compiler.js.JavaScriptCodeGenerator;

        r1 := @parameter0: com.google.gxp.compiler.msgextract.MessageExtractedTree;

        specialinvoke r0.<com.google.gxp.compiler.codegen.BracesCodeGenerator: void <init>(com.google.gxp.compiler.base.Tree)>(r1);

        return;
    }

    public void generateCode(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink)
    {
        java.lang.Appendable r6;
        com.google.gxp.compiler.alerts.AlertSet $r4;
        com.google.gxp.compiler.msgextract.MessageExtractedTree $r3;
        com.google.gxp.compiler.base.Root $r7;
        com.google.gxp.compiler.alerts.AlertSink r0;
        com.google.gxp.compiler.base.Tree $r2;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator$1 $r5;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator r1;

        r1 := @this: com.google.gxp.compiler.js.JavaScriptCodeGenerator;

        r6 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        $r2 = r1.<com.google.gxp.compiler.js.JavaScriptCodeGenerator: com.google.gxp.compiler.base.Tree tree>;

        $r3 = (com.google.gxp.compiler.msgextract.MessageExtractedTree) $r2;

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.msgextract.MessageExtractedTree: com.google.gxp.compiler.alerts.AlertSet getAlerts()>();

        interfaceinvoke r0.<com.google.gxp.compiler.alerts.AlertSink: void addAll(com.google.gxp.compiler.alerts.AlertSet)>($r4);

        $r7 = r1.<com.google.gxp.compiler.js.JavaScriptCodeGenerator: com.google.gxp.compiler.base.Root root>;

        $r5 = new com.google.gxp.compiler.js.JavaScriptCodeGenerator$1;

        specialinvoke $r5.<com.google.gxp.compiler.js.JavaScriptCodeGenerator$1: void <init>(com.google.gxp.compiler.js.JavaScriptCodeGenerator,com.google.gxp.compiler.alerts.AlertSink,java.lang.Appendable)>(r1, r0, r6);

        interfaceinvoke $r7.<com.google.gxp.compiler.base.Root: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.RootVisitor)>($r5);

        return;
    }

    private void validateFormalTypeParameters(com.google.gxp.compiler.alerts.AlertSink, java.util.List)
    {
        java.util.Iterator $r1;
        com.google.gxp.compiler.base.FormalTypeParameter r3;
        java.util.List r0;
        com.google.gxp.compiler.alerts.AlertSink r4;
        com.google.gxp.compiler.base.OutputLanguage $r5;
        java.lang.Object $r2;
        java.lang.String $r6;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator r7;
        boolean $z0;

        r7 := @this: com.google.gxp.compiler.js.JavaScriptCodeGenerator;

        r4 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r0 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.gxp.compiler.base.FormalTypeParameter) $r2;

        $r5 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVASCRIPT>;

        $r6 = virtualinvoke r3.<com.google.gxp.compiler.base.FormalTypeParameter: java.lang.String getName()>();

        virtualinvoke $r5.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String validateName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Node,java.lang.String)>(r4, r3, $r6);

        goto label1;

     label2:
        return;
    }

    private com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker createTemplateWorker(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker $r0;
        com.google.gxp.compiler.alerts.AlertSink r2;
        java.lang.Appendable r1;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator r4;
        com.google.gxp.compiler.base.Template r3;

        r4 := @this: com.google.gxp.compiler.js.JavaScriptCodeGenerator;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter2: com.google.gxp.compiler.base.Template;

        $r0 = new com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker;

        specialinvoke $r0.<com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker: void <init>(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Template)>(r1, r2, r3);

        return $r0;
    }

    static void access$000(com.google.gxp.compiler.js.JavaScriptCodeGenerator, com.google.gxp.compiler.alerts.AlertSink, java.util.List)
    {
        java.util.List r2;
        com.google.gxp.compiler.alerts.AlertSink r1;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator r0;

        r0 := @parameter0: com.google.gxp.compiler.js.JavaScriptCodeGenerator;

        r1 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<com.google.gxp.compiler.js.JavaScriptCodeGenerator: void validateFormalTypeParameters(com.google.gxp.compiler.alerts.AlertSink,java.util.List)>(r1, r2);

        return;
    }

    static com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker access$100(com.google.gxp.compiler.js.JavaScriptCodeGenerator, java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.alerts.AlertSink r2;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker $r4;
        java.lang.Appendable r1;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator r0;
        com.google.gxp.compiler.base.Template r3;

        r0 := @parameter0: com.google.gxp.compiler.js.JavaScriptCodeGenerator;

        r1 := @parameter1: java.lang.Appendable;

        r2 := @parameter2: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter3: com.google.gxp.compiler.base.Template;

        $r4 = specialinvoke r0.<com.google.gxp.compiler.js.JavaScriptCodeGenerator: com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker createTemplateWorker(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Template)>(r1, r2, r3);

        return $r4;
    }

    static java.lang.String access$200(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.js.JavaScriptCodeGenerator: java.lang.String getDefaultMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$300(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.js.JavaScriptCodeGenerator: java.lang.String getDefaultMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$400(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.js.JavaScriptCodeGenerator: java.lang.String getConstructorMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$500(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.js.JavaScriptCodeGenerator: java.lang.String getConstructorMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$700(com.google.gxp.compiler.base.FormalParameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.FormalParameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.FormalParameter;

        $r1 = staticinvoke <com.google.gxp.compiler.js.JavaScriptCodeGenerator: java.lang.String getDefaultMethodName(com.google.gxp.compiler.base.FormalParameter)>(r0);

        return $r1;
    }

    static java.lang.String access$4000(com.google.gxp.compiler.base.FormalParameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.FormalParameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.FormalParameter;

        $r1 = staticinvoke <com.google.gxp.compiler.js.JavaScriptCodeGenerator: java.lang.String getConstructorMethodName(com.google.gxp.compiler.base.FormalParameter)>(r0);

        return $r1;
    }
}
