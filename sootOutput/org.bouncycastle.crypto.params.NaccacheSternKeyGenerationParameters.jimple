public class org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters extends org.bouncycastle.crypto.KeyGenerationParameters
{
    private int certainty;
    private int cntSmallPrimes;
    private boolean debug;

    public void <init>(java.security.SecureRandom, int, int, int)
    {
        java.security.SecureRandom r1;
        int i0, i1, i2;
        org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters;

        r1 := @parameter0: java.security.SecureRandom;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters: void <init>(java.security.SecureRandom,int,int,int,boolean)>(r1, i0, i1, i2, 0);

        return;
    }

    public void <init>(java.security.SecureRandom, int, int, int, boolean)
    {
        java.lang.IllegalArgumentException $r2, $r3;
        java.security.SecureRandom r1;
        int i0, i1, i2, $i3;
        org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters r0;
        boolean z0;

        r0 := @this: org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters;

        r1 := @parameter0: java.security.SecureRandom;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<org.bouncycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>(r1, i0);

        r0.<org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters: boolean debug> = 0;

        r0.<org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters: int certainty> = i1;

        $i3 = i2 % 2;

        if $i3 != 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cntSmallPrimes must be a multiple of 2");

        throw $r3;

     label1:
        if i2 >= 30 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cntSmallPrimes must be >= 30 for security reasons");

        throw $r2;

     label2:
        r0.<org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters: int cntSmallPrimes> = i2;

        r0.<org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters: boolean debug> = z0;

        return;
    }

    public int getCertainty()
    {
        int $i0;
        org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters;

        $i0 = r0.<org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters: int certainty>;

        return $i0;
    }

    public int getCntSmallPrimes()
    {
        int $i0;
        org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters;

        $i0 = r0.<org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters: int cntSmallPrimes>;

        return $i0;
    }

    public boolean isDebug()
    {
        org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters;

        $z0 = r0.<org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters: boolean debug>;

        return $z0;
    }
}
