public class org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor extends org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter implements org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor, org.springframework.core.PriorityOrdered, org.springframework.beans.factory.BeanFactoryAware
{
    public static final java.lang.String SKIP_REQUIRED_CHECK_ATTRIBUTE;
    private java.lang.Class requiredAnnotationType;
    private int order;
    private org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory;
    private final java.util.Set validatedBeanNames;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <org.springframework.core.Conventions: java.lang.String getQualifiedAttributeName(java.lang.Class,java.lang.String)>(class "Lorg/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor;", "skipRequiredCheck");

        <org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.lang.String SKIP_REQUIRED_CHECK_ATTRIBUTE> = $r0;

        return;
    }

    public void <init>()
    {
        java.util.HashSet $r1;
        java.util.Set $r2;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        specialinvoke r0.<org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter: void <init>()>();

        r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.lang.Class requiredAnnotationType> = class "Lorg/springframework/beans/factory/annotation/Required;";

        r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: int order> = 2147483646;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r1);

        r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.util.Set validatedBeanNames> = $r2;

        return;
    }

    public void setRequiredAnnotationType(java.lang.Class)
    {
        java.lang.Class r0;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r1;

        r1 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "\'requiredAnnotationType\' must not be null");

        r1.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.lang.Class requiredAnnotationType> = r0;

        return;
    }

    protected java.lang.Class getRequiredAnnotationType()
    {
        java.lang.Class $r1;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        $r1 = r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.lang.Class requiredAnnotationType>;

        return $r1;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r1;
        org.springframework.beans.factory.BeanFactory r0;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r2;
        boolean $z0;

        r1 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        r0 := @parameter0: org.springframework.beans.factory.BeanFactory;

        $z0 = r0 instanceof org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        if $z0 == 0 goto label1;

        $r2 = (org.springframework.beans.factory.config.ConfigurableListableBeanFactory) r0;

        r1.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory> = $r2;

     label1:
        return;
    }

    public void setOrder(int)
    {
        int i0;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        i0 := @parameter0: int;

        r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: int order> = i0;

        return;
    }

    public int getOrder()
    {
        int $i0;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        $i0 = r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: int order>;

        return $i0;
    }

    public void postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)
    {
        org.springframework.beans.factory.support.RootBeanDefinition r1;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r0;
        java.lang.Class r2;
        java.lang.String r3;

        r0 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        r1 := @parameter0: org.springframework.beans.factory.support.RootBeanDefinition;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public org.springframework.beans.PropertyValues postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException
    {
        java.beans.PropertyDescriptor[] r7;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r4;
        org.springframework.beans.factory.BeanInitializationException $r11;
        java.util.ArrayList $r6;
        int i0, i1;
        java.lang.String r1, $r9, $r10, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r2, $r5;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r0;
        java.beans.PropertyDescriptor r8;
        java.lang.Object r13;
        org.springframework.beans.PropertyValues r3;

        r0 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        r3 := @parameter0: org.springframework.beans.PropertyValues;

        r7 := @parameter1: java.beans.PropertyDescriptor[];

        r13 := @parameter2: java.lang.Object;

        r1 := @parameter3: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.util.Set validatedBeanNames>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label5;

        $r4 = r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $z1 = virtualinvoke r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: boolean shouldSkip(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.lang.String)>($r4, r1);

        if $z1 != 0 goto label4;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r7;

        i1 = 0;

        goto label3;

     label1:
        r8 = r7[i1];

        $z2 = virtualinvoke r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: boolean isRequiredProperty(java.beans.PropertyDescriptor)>(r8);

        if $z2 == 0 goto label2;

        $r9 = virtualinvoke r8.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $z3 = interfaceinvoke r3.<org.springframework.beans.PropertyValues: boolean contains(java.lang.String)>($r9);

        if $z3 != 0 goto label2;

        $r10 = virtualinvoke r8.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        $z4 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label4;

        $r11 = new org.springframework.beans.factory.BeanInitializationException;

        $r12 = specialinvoke r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.lang.String buildExceptionMessage(java.util.List,java.lang.String)>($r6, r1);

        specialinvoke $r11.<org.springframework.beans.factory.BeanInitializationException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label4:
        $r5 = r0.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.util.Set validatedBeanNames>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label5:
        return r3;
    }

    protected boolean shouldSkip(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.lang.String)
    {
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r0;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r8;
        org.springframework.beans.factory.config.BeanDefinition $r2;
        java.lang.Boolean $r5, $r7;
        java.lang.Object $r4;
        java.lang.String r1, $r3, $r6;
        boolean $z0, $z1, $z2;

        r8 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        r0 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean containsBeanDefinition(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>(r1);

        $r3 = <org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.lang.String SKIP_REQUIRED_CHECK_ATTRIBUTE>;

        $r4 = interfaceinvoke $r2.<org.springframework.beans.factory.config.BeanDefinition: java.lang.Object getAttribute(java.lang.String)>($r3);

        if $r4 == null goto label4;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label3;

        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    protected boolean isRequiredProperty(java.beans.PropertyDescriptor)
    {
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r2;
        java.beans.PropertyDescriptor r0;
        java.lang.'annotation'.Annotation $r4;
        java.lang.Class $r3;
        java.lang.reflect.Method $r1;

        r2 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        r0 := @parameter0: java.beans.PropertyDescriptor;

        $r1 = virtualinvoke r0.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r2.<org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor: java.lang.Class getRequiredAnnotationType()>();

        $r4 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation getAnnotation(java.lang.reflect.Method,java.lang.Class)>($r1, $r3);

        if $r4 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.lang.String buildExceptionMessage(java.util.List, java.lang.String)
    {
        int $i0, $i1, i2;
        java.lang.String r3, r5, $r7, $r9, $r12;
        java.util.List r0;
        org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor r8;
        java.lang.StringBuilder $r1, $r4, $r6, $r10, $r11;
        java.lang.Object $r2;

        r8 := @this: org.springframework.beans.factory.'annotation'.RequiredAnnotationBeanPostProcessor;

        r0 := @parameter0: java.util.List;

        r5 := @parameter1: java.lang.String;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        if $i0 != 1 goto label1;

        $r9 = "Property";

        goto label2;

     label1:
        $r9 = "Properties";

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i2 = 0;

        goto label6;

     label3:
        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (java.lang.String) $r2;

        if i2 <= 0 goto label5;

        $i1 = $i0 - 1;

        if i2 != $i1 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and");

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label5:
        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        i2 = i2 + 1;

     label6:
        if i2 < $i0 goto label3;

        if $i0 != 1 goto label7;

        $r12 = " is";

        goto label8;

     label7:
        $r12 = " are";

     label8:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" required for bean \'");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
