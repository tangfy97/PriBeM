class com.google.common.collect.Maps$TransformedEntriesMap extends java.util.AbstractMap
{
    final java.util.Map fromMap;
    final com.google.common.collect.Maps$EntryTransformer transformer;
    com.google.common.collect.Maps$TransformedEntriesMap$EntrySet entrySet;

    void <init>(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
    {
        com.google.common.collect.Maps$TransformedEntriesMap r0;
        com.google.common.collect.Maps$EntryTransformer r4, $r6;
        java.util.Map r1, $r3;
        java.lang.Object $r2, $r5;

        r0 := @this: com.google.common.collect.Maps$TransformedEntriesMap;

        r1 := @parameter0: java.util.Map;

        r4 := @parameter1: com.google.common.collect.Maps$EntryTransformer;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.Map) $r2;

        r0.<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Map fromMap> = $r3;

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = (com.google.common.collect.Maps$EntryTransformer) $r5;

        r0.<com.google.common.collect.Maps$TransformedEntriesMap: com.google.common.collect.Maps$EntryTransformer transformer> = $r6;

        return;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.Maps$TransformedEntriesMap r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$TransformedEntriesMap;

        $r1 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Map fromMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.Maps$TransformedEntriesMap r0;
        java.util.Map $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$TransformedEntriesMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Map fromMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.Maps$TransformedEntriesMap r0;
        com.google.common.collect.Maps$EntryTransformer $r4;
        java.util.Map $r2, $r5;
        java.lang.Object r1, $r3, $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$TransformedEntriesMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Map fromMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 != null goto label1;

        $r5 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Map fromMap>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $r4 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: com.google.common.collect.Maps$EntryTransformer transformer>;

        $r6 = interfaceinvoke $r4.<com.google.common.collect.Maps$EntryTransformer: java.lang.Object transformEntry(java.lang.Object,java.lang.Object)>(r1, $r3);

        goto label3;

     label2:
        $r6 = null;

     label3:
        return $r6;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.common.collect.Maps$TransformedEntriesMap r0;
        com.google.common.collect.Maps$EntryTransformer $r4;
        java.util.Map $r2, $r3;
        java.lang.Object r1, $r5, $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$TransformedEntriesMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Map fromMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: com.google.common.collect.Maps$EntryTransformer transformer>;

        $r3 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Map fromMap>;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r6 = interfaceinvoke $r4.<com.google.common.collect.Maps$EntryTransformer: java.lang.Object transformEntry(java.lang.Object,java.lang.Object)>(r1, $r5);

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    public void clear()
    {
        com.google.common.collect.Maps$TransformedEntriesMap r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$TransformedEntriesMap;

        $r1 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: java.util.Map fromMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public java.util.Set entrySet()
    {
        com.google.common.collect.Maps$TransformedEntriesMap r0;
        com.google.common.collect.Maps$TransformedEntriesMap$EntrySet $r1, r2;

        r0 := @this: com.google.common.collect.Maps$TransformedEntriesMap;

        r2 = r0.<com.google.common.collect.Maps$TransformedEntriesMap: com.google.common.collect.Maps$TransformedEntriesMap$EntrySet entrySet>;

        if r2 != null goto label1;

        $r1 = new com.google.common.collect.Maps$TransformedEntriesMap$EntrySet;

        specialinvoke $r1.<com.google.common.collect.Maps$TransformedEntriesMap$EntrySet: void <init>(com.google.common.collect.Maps$TransformedEntriesMap)>(r0);

        r2 = $r1;

        r0.<com.google.common.collect.Maps$TransformedEntriesMap: com.google.common.collect.Maps$TransformedEntriesMap$EntrySet entrySet> = $r1;

     label1:
        return r2;
    }
}
