public class org.apache.batik.svggen.font.table.DirectoryEntry extends java.lang.Object
{
    private int tag;
    private int checksum;
    private int offset;
    private int length;
    private org.apache.batik.svggen.font.table.Table table;

    protected void <init>(java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        int $i0, $i1, $i2, $i3;
        org.apache.batik.svggen.font.table.DirectoryEntry r0;

        r0 := @this: org.apache.batik.svggen.font.table.DirectoryEntry;

        r1 := @parameter0: java.io.RandomAccessFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.svggen.font.table.DirectoryEntry: org.apache.batik.svggen.font.table.Table table> = null;

        $i0 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.DirectoryEntry: int tag> = $i0;

        $i1 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.DirectoryEntry: int checksum> = $i1;

        $i2 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.DirectoryEntry: int offset> = $i2;

        $i3 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.DirectoryEntry: int length> = $i3;

        return;
    }

    public int getChecksum()
    {
        int $i0;
        org.apache.batik.svggen.font.table.DirectoryEntry r0;

        r0 := @this: org.apache.batik.svggen.font.table.DirectoryEntry;

        $i0 = r0.<org.apache.batik.svggen.font.table.DirectoryEntry: int checksum>;

        return $i0;
    }

    public int getLength()
    {
        int $i0;
        org.apache.batik.svggen.font.table.DirectoryEntry r0;

        r0 := @this: org.apache.batik.svggen.font.table.DirectoryEntry;

        $i0 = r0.<org.apache.batik.svggen.font.table.DirectoryEntry: int length>;

        return $i0;
    }

    public int getOffset()
    {
        int $i0;
        org.apache.batik.svggen.font.table.DirectoryEntry r0;

        r0 := @this: org.apache.batik.svggen.font.table.DirectoryEntry;

        $i0 = r0.<org.apache.batik.svggen.font.table.DirectoryEntry: int offset>;

        return $i0;
    }

    public int getTag()
    {
        int $i0;
        org.apache.batik.svggen.font.table.DirectoryEntry r0;

        r0 := @this: org.apache.batik.svggen.font.table.DirectoryEntry;

        $i0 = r0.<org.apache.batik.svggen.font.table.DirectoryEntry: int tag>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i15, $i16, $i17;
        java.lang.String $r11, $r13;
        char $c3, $c7, $c11, $c14;
        org.apache.batik.svggen.font.table.DirectoryEntry r1;

        r1 := @this: org.apache.batik.svggen.font.table.DirectoryEntry;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = r1.<org.apache.batik.svggen.font.table.DirectoryEntry: int tag>;

        $i1 = $i0 >> 24;

        $i2 = $i1 & 255;

        $c3 = (char) $i2;

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i4 = r1.<org.apache.batik.svggen.font.table.DirectoryEntry: int tag>;

        $i5 = $i4 >> 16;

        $i6 = $i5 & 255;

        $c7 = (char) $i6;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        $i8 = r1.<org.apache.batik.svggen.font.table.DirectoryEntry: int tag>;

        $i9 = $i8 >> 8;

        $i10 = $i9 & 255;

        $c11 = (char) $i10;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c11);

        $i12 = r1.<org.apache.batik.svggen.font.table.DirectoryEntry: int tag>;

        $i13 = $i12 & 255;

        $c14 = (char) $i13;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c14);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", offset: ");

        $i15 = r1.<org.apache.batik.svggen.font.table.DirectoryEntry: int offset>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i15);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", length: ");

        $i16 = r1.<org.apache.batik.svggen.font.table.DirectoryEntry: int length>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i16);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", checksum: 0x");

        $i17 = r1.<org.apache.batik.svggen.font.table.DirectoryEntry: int checksum>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i17);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }
}
