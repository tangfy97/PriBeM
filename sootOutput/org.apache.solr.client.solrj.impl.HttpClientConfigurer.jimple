public class org.apache.solr.client.solrj.impl.HttpClientConfigurer extends java.lang.Object
{

    public void <init>()
    {
        org.apache.solr.client.solrj.impl.HttpClientConfigurer r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpClientConfigurer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void configure(org.apache.http.impl.client.DefaultHttpClient, org.apache.solr.common.params.SolrParams)
    {
        org.apache.http.impl.client.DefaultHttpClient r9;
        java.lang.Integer $r14, $r15, $r16, $r17;
        org.apache.solr.common.params.SolrParams r0;
        org.apache.solr.client.solrj.impl.HttpClientConfigurer r18;
        int $i0, $i1, $i2, $i3;
        java.lang.Boolean $r11, $r12, $r13;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        boolean $z0, $z1, $z2;

        r18 := @this: org.apache.solr.client.solrj.impl.HttpClientConfigurer;

        r9 := @parameter0: org.apache.http.impl.client.DefaultHttpClient;

        r0 := @parameter1: org.apache.solr.common.params.SolrParams;

        $r1 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("maxConnections");

        if $r1 == null goto label1;

        $r17 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.Integer getInt(java.lang.String)>("maxConnections");

        $i3 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setMaxConnections(org.apache.http.client.HttpClient,int)>(r9, $i3);

     label1:
        $r2 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("maxConnectionsPerHost");

        if $r2 == null goto label2;

        $r16 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.Integer getInt(java.lang.String)>("maxConnectionsPerHost");

        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setMaxConnectionsPerHost(org.apache.http.client.HttpClient,int)>(r9, $i2);

     label2:
        $r3 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("connTimeout");

        if $r3 == null goto label3;

        $r15 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.Integer getInt(java.lang.String)>("connTimeout");

        $i1 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setConnectionTimeout(org.apache.http.client.HttpClient,int)>(r9, $i1);

     label3:
        $r4 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("socketTimeout");

        if $r4 == null goto label4;

        $r14 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.Integer getInt(java.lang.String)>("socketTimeout");

        $i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setSoTimeout(org.apache.http.client.HttpClient,int)>(r9, $i0);

     label4:
        $r5 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("retry");

        if $r5 == null goto label5;

        $r13 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.Boolean getBool(java.lang.String)>("retry");

        $z2 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setUseRetry(org.apache.http.impl.client.DefaultHttpClient,boolean)>(r9, $z2);

     label5:
        $r6 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("followRedirects");

        if $r6 == null goto label6;

        $r12 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.Boolean getBool(java.lang.String)>("followRedirects");

        $z1 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setFollowRedirects(org.apache.http.client.HttpClient,boolean)>(r9, $z1);

     label6:
        $r7 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("httpBasicAuthUser");

        $r8 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("httpBasicAuthPassword");

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setBasicAuth(org.apache.http.impl.client.DefaultHttpClient,java.lang.String,java.lang.String)>(r9, $r7, $r8);

        $r10 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("allowCompression");

        if $r10 == null goto label7;

        $r11 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.Boolean getBool(java.lang.String)>("allowCompression");

        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setAllowCompression(org.apache.http.impl.client.DefaultHttpClient,boolean)>(r9, $z0);

     label7:
        return;
    }
}
