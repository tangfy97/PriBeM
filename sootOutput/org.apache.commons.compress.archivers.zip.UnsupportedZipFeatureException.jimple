public class org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException extends java.util.zip.ZipException
{
    private final org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason;
    private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;
    private static final long serialVersionUID;

    public void <init>(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature, org.apache.commons.compress.archivers.zip.ZipArchiveEntry)
    {
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature r3;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r6;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8;
        java.lang.String $r7, $r9;
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException;

        r3 := @parameter0: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature;

        r6 := @parameter1: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported feature ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" used in entry ");

        $r7 = virtualinvoke r6.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.util.zip.ZipException: void <init>(java.lang.String)>($r9);

        r0.<org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason> = r3;

        r0.<org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry> = r6;

        return;
    }

    public void <init>(org.apache.commons.compress.archivers.zip.ZipMethod, org.apache.commons.compress.archivers.zip.ZipArchiveEntry)
    {
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature $r11;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r7;
        org.apache.commons.compress.archivers.zip.ZipMethod r3;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9;
        java.lang.String $r4, $r8, $r10;
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException;

        r3 := @parameter0: org.apache.commons.compress.archivers.zip.ZipMethod;

        r7 := @parameter1: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported feature method \'");

        $r4 = virtualinvoke r3.<org.apache.commons.compress.archivers.zip.ZipMethod: java.lang.String name()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' used in entry ");

        $r8 = virtualinvoke r7.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.util.zip.ZipException: void <init>(java.lang.String)>($r10);

        $r11 = <org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature METHOD>;

        r0.<org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason> = $r11;

        r0.<org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry> = r7;

        return;
    }

    public void <init>(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature)
    {
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature r3;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r6;
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException;

        r3 := @parameter0: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported feature ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" used in archive.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.util.zip.ZipException: void <init>(java.lang.String)>($r6);

        r0.<org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason> = r3;

        r0.<org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry> = null;

        return;
    }

    public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature getFeature()
    {
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature $r1;
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason>;

        return $r1;
    }

    public org.apache.commons.compress.archivers.zip.ZipArchiveEntry getEntry()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry $r1;
        org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException: long serialVersionUID> = 20130101L;

        return;
    }
}
