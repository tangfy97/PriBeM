class org.codehaus.groovy.tools.shell.Groovysh$_closure1 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;
        org.codehaus.groovy.tools.shell.Groovysh$_closure1 r2;

        r2 := @this: org.codehaus.groovy.tools.shell.Groovysh$_closure1;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_closure1");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.codehaus.groovy.runtime.GStringImpl $r40;
        java.lang.Object[] $r39, $r41, $r47;
        java.lang.String[] $r50;
        java.lang.Boolean $r23, $r28, $r33;
        groovy.lang.Reference $r1;
        java.lang.Object r0, $r7, $r8, $r14, $r15, $r27, $r32, $r37, $r38, $r48, $r49;
        java.lang.Class $r2, r3, $r4, $r5, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r29, $r30, $r31, $r34, $r35, $r36, $r42, $r43, $r44, $r45, $r46;
        org.codehaus.groovy.tools.shell.Groovysh$_closure1 r6;

        r6 := @this: org.codehaus.groovy.tools.shell.Groovysh$_closure1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_closure1");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$0> = $r19;

        goto label02;

     label01:
        $r19 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$0>;

     label02:
        r3 = $r19;

        $r4 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label03;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r20;

        goto label04;

     label03:
        $r20 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r5 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r5 != null goto label05;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r21;

        goto label06;

     label05:
        $r21 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label06:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r6, "io");

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r21, $r7, "quiet");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r8);

        if $z0 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        if $z3 == 0 goto label18;

        $r13 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r13 != null goto label09;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r22;

        goto label10;

     label09:
        $r22 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label10:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r6, "io");

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r22, $r14, "verbose");

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r15);

        if $z1 == 0 goto label12;

     label11:
        $r23 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label17;

     label12:
        $r16 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r16 != null goto label13;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r24 = $r18;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r18;

        goto label14;

     label13:
        $r24 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label14:
        $r17 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r17 != null goto label15;

        $r25 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        $r26 = $r25;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r25;

        goto label16;

     label15:
        $r26 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label16:
        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r24, $r26, "showLastResult");

        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r27);

        if $z4 != 0 goto label11;

        $r23 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label17:
        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r23);

        if $z2 == 0 goto label18;

        $r28 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label19;

     label18:
        $r28 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label19:
        $r29 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$java$lang$Boolean>;

        if $r29 != null goto label20;

        $r30 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        $r31 = $r30;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$java$lang$Boolean> = $r30;

        goto label21;

     label20:
        $r31 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$java$lang$Boolean>;

     label21:
        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r28, $r31);

        $r33 = (java.lang.Boolean) $r32;

        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r33);

        if $z5 == 0 goto label30;

        $r9 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r9 != null goto label22;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r34 = $r12;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r12;

        goto label23;

     label22:
        $r34 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label23:
        $r10 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r10 != null goto label24;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r36 = $r35;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r35;

        goto label25;

     label24:
        $r36 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label25:
        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r6, "io");

        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r36, $r37, "out");

        $r39 = newarray (java.lang.Object)[1];

        $r40 = new org.codehaus.groovy.runtime.GStringImpl;

        $r41 = newarray (java.lang.Object)[1];

        $r42 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r42 != null goto label26;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r43 = $r11;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r11;

        goto label27;

     label26:
        $r43 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label27:
        $r44 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$java$lang$String>;

        if $r44 != null goto label28;

        $r45 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r46 = $r45;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$java$lang$String> = $r45;

        goto label29;

     label28:
        $r46 = <org.codehaus.groovy.tools.shell.Groovysh$_closure1: java.lang.Class class$java$lang$String>;

     label29:
        $r47 = newarray (java.lang.Object)[1];

        $r48 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r47[0] = $r48;

        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r43, $r46, "valueOf", $r47);

        $r41[0] = $r49;

        $r50 = newarray (java.lang.String)[2];

        $r50[0] = "@|bold ===>| ";

        $r50[1] = "";

        specialinvoke $r40.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r41, $r50);

        $r39[0] = $r40;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r34, $r38, "println", $r39);

        goto label30;

     label30:
        return null;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
