public class com.google.gwt.user.server.Base64Utils extends java.lang.Object
{
    private static final char[] base64Chars;
    private static final byte[] base64Values;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.google.gwt.user.server.Base64Utils r0;

        r0 := @this: com.google.gwt.user.server.Base64Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] fromBase64(java.lang.String)
    {
        byte[] $r2, $r3, $r4, $r5, $r6, $r7;
        byte b8, b11, b14, b17, $b25, $b27, $b28;
        boolean $z0;
        java.lang.AssertionError $r9;
        int $i0, $i1, $i2, $i4, $i18, $i19, $i20, $i21, $i22, i23, $i24, $i26, $i29, i30, i31, i32, i33, i34, i35, i36, i37, $i38, $i40, $i41, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51;
        java.lang.String r0;
        char $c3, $c5, $c6, $c7, $c9, $c10, $c12, $c13, $c15, $c16;
        char[] r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $z0 = <com.google.gwt.user.server.Base64Utils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i29 = $i0 % 4;

        if $i29 == 0 goto label2;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        if $i0 != 0 goto label3;

        $r7 = newarray (byte)[0];

        return $r7;

     label3:
        r1 = newarray (char)[$i0];

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, r1, 0);

        $i1 = $i0 / 4;

        i30 = 3 * $i1;

        $i2 = $i0 - 2;

        $c3 = r1[$i2];

        $i38 = (int) $c3;

        if $i38 != 61 goto label4;

        $i40 = (int) -1;

        i30 = i30 + $i40;

     label4:
        $i4 = $i0 - 1;

        $c5 = r1[$i4];

        $i41 = (int) $c5;

        if $i41 != 61 goto label5;

        $i43 = (int) -1;

        i30 = i30 + $i43;

     label5:
        $r6 = newarray (byte)[i30];

        i31 = 0;

        i32 = 0;

     label6:
        if i31 >= $i0 goto label9;

        $r2 = <com.google.gwt.user.server.Base64Utils: byte[] base64Values>;

        i33 = i31 + 1;

        $c6 = r1[i31];

        $c7 = $c6 & 255;

        $i44 = (int) $c7;

        b8 = $r2[$i44];

        $r3 = <com.google.gwt.user.server.Base64Utils: byte[] base64Values>;

        i34 = i33 + 1;

        $c9 = r1[i33];

        $c10 = $c9 & 255;

        $i45 = (int) $c10;

        b11 = $r3[$i45];

        $r4 = <com.google.gwt.user.server.Base64Utils: byte[] base64Values>;

        i35 = i34 + 1;

        $c12 = r1[i34];

        $c13 = $c12 & 255;

        $i46 = (int) $c13;

        b14 = $r4[$i46];

        $r5 = <com.google.gwt.user.server.Base64Utils: byte[] base64Values>;

        i31 = i35 + 1;

        $c15 = r1[i35];

        $c16 = $c15 & 255;

        $i47 = (int) $c16;

        b17 = $r5[$i47];

        $i48 = (int) b8;

        $i19 = $i48 << 18;

        $i49 = (int) b11;

        $i18 = $i49 << 12;

        $i21 = $i19 | $i18;

        $i50 = (int) b14;

        $i20 = $i50 << 6;

        $i22 = $i21 | $i20;

        $i51 = (int) b17;

        i23 = $i22 | $i51;

        i36 = i32 + 1;

        $i24 = i23 >> 16;

        $b25 = (byte) $i24;

        $r6[i32] = $b25;

        if i36 != i30 goto label7;

        goto label9;

     label7:
        i37 = i36 + 1;

        $i26 = i23 >> 8;

        $b27 = (byte) $i26;

        $r6[i36] = $b27;

        if i37 != i30 goto label8;

        goto label9;

     label8:
        i32 = i37 + 1;

        $b28 = (byte) i23;

        $r6[i37] = $b28;

        goto label6;

     label9:
        return $r6;
    }

    public static long longFromBase64(java.lang.String)
    {
        byte[] $r1, $r2;
        char $c0, $c4;
        long $l6, l8, l9;
        byte $b1, $b5;
        int $i2, $i3, i7, $i10, $i11;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.gwt.user.server.Base64Utils: byte[] base64Values>;

        i7 = 1;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i10 = (int) $c0;

        $b1 = $r1[$i10];

        l8 = (long) $b1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i7 >= $i2 goto label2;

        l9 = l8 << 6;

        $r2 = <com.google.gwt.user.server.Base64Utils: byte[] base64Values>;

        $i3 = i7;

        i7 = i7 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i11 = (int) $c4;

        $b5 = $r2[$i11];

        $l6 = (long) $b5;

        l8 = l9 | $l6;

        goto label1;

     label2:
        return l8;
    }

    public static java.lang.String toBase64(byte[])
    {
        byte[] r0;
        byte $b5, $b17, $b24;
        short s6, s7, $s28, $s29, $s35;
        int i0, $i1, $i2, i3, $i4, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i18, $i19, $i20, $i21, $i22, $i23, i25, i26, i27, i30, i31, i32, $i36, $i38;
        java.lang.String $r7;
        char $c14, $c15, $c33, $c34;
        char[] r1, $r3, $r4, $r5, $r6;

        r0 := @parameter0: byte[];

        if r0 != null goto label01;

        return null;

     label01:
        i0 = lengthof r0;

        if i0 != 0 goto label02;

        return "";

     label02:
        $i1 = i0 + 2;

        $i2 = $i1 / 3;

        i3 = 4 * $i2;

        r1 = newarray (char)[i3];

        i25 = 0;

        i26 = 0;

        i27 = i0;

     label03:
        if i27 <= 0 goto label12;

        $i4 = i25;

        i25 = i25 + 1;

        $b5 = r0[$i4];

        $s35 = (short) $b5;

        s6 = $s35 & 255;

        if i27 <= 1 goto label04;

        $i23 = i25;

        i25 = i25 + 1;

        $b24 = r0[$i23];

        $s28 = $b24 & 255;

        goto label05;

     label04:
        $s28 = 0;

     label05:
        s7 = $s28;

        if i27 <= 2 goto label06;

        $i16 = i25;

        i25 = i25 + 1;

        $b17 = r0[$i16];

        $s29 = $b17 & 255;

        goto label07;

     label06:
        $s29 = 0;

     label07:
        $i36 = (int) s6;

        $i9 = $i36 << 16;

        $i8 = s7 << 8;

        $i10 = $i9 | $i8;

        $i18 = $i10 | $s29;

        $i11 = $i18 >> 18;

        $i19 = $i11 & 63;

        $i12 = $i18 >> 12;

        $i20 = $i12 & 63;

        $i13 = $i18 >> 6;

        $i21 = $i13 & 63;

        $i22 = $i18 & 63;

        i30 = i26 + 1;

        $r3 = <com.google.gwt.user.server.Base64Utils: char[] base64Chars>;

        $c14 = $r3[$i19];

        r1[i26] = $c14;

        i31 = i30 + 1;

        $r4 = <com.google.gwt.user.server.Base64Utils: char[] base64Chars>;

        $c15 = $r4[$i20];

        r1[i30] = $c15;

        i32 = i31 + 1;

        if i27 <= 1 goto label08;

        $r6 = <com.google.gwt.user.server.Base64Utils: char[] base64Chars>;

        $c33 = $r6[$i21];

        goto label09;

     label08:
        $c33 = 61;

     label09:
        r1[i31] = $c33;

        i26 = i32 + 1;

        if i27 <= 2 goto label10;

        $r5 = <com.google.gwt.user.server.Base64Utils: char[] base64Chars>;

        $c34 = $r5[$i22];

        goto label11;

     label10:
        $c34 = 61;

     label11:
        r1[i32] = $c34;

        $i38 = (int) -3;

        i27 = i27 + $i38;

        goto label03;

     label12:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>(r1);

        return $r7;
    }

    public static java.lang.String toBase64(long)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r0;
        long l0, $l1, $l3;
        int i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.lang.String $r1;

        l0 := @parameter0: long;

        $l1 = l0 & -1L;

        i2 = (int) $l1;

        $l3 = l0 >> 32;

        i4 = (int) $l3;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i5 = i4 >> 28;

        $i6 = $i5 & 15;

        $z0 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i6, 0);

        $i7 = i4 >> 22;

        $i8 = $i7 & 63;

        $z1 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i8, $z0);

        $i9 = i4 >> 16;

        $i10 = $i9 & 63;

        $z2 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i10, $z1);

        $i11 = i4 >> 10;

        $i12 = $i11 & 63;

        $z3 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i12, $z2);

        $i13 = i4 >> 4;

        $i14 = $i13 & 63;

        $z4 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i14, $z3);

        $i15 = i4 & 15;

        $i18 = $i15 << 2;

        $i16 = i2 >> 30;

        $i17 = $i16 & 3;

        i19 = $i18 | $i17;

        $z5 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, i19, $z4);

        $i20 = i2 >> 24;

        $i21 = $i20 & 63;

        $z6 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i21, $z5);

        $i22 = i2 >> 18;

        $i23 = $i22 & 63;

        $z7 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i23, $z6);

        $i24 = i2 >> 12;

        $i25 = $i24 & 63;

        $z8 = staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i25, $z7);

        $i26 = i2 >> 6;

        $i27 = $i26 & 63;

        staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i27, $z8);

        $i28 = i2 & 63;

        staticinvoke <com.google.gwt.user.server.Base64Utils: boolean base64Append(java.lang.StringBuilder,int,boolean)>($r0, $i28, 1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private static boolean base64Append(java.lang.StringBuilder, int, boolean)
    {
        int i0;
        char[] $r1;
        java.lang.StringBuilder r0;
        char $c1;
        boolean z0;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 <= 0 goto label1;

        z0 = 1;

     label1:
        if z0 == 0 goto label2;

        $r1 = <com.google.gwt.user.server.Base64Utils: char[] base64Chars>;

        $c1 = $r1[i0];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label2:
        return z0;
    }

    static void <clinit>()
    {
        byte[] $r2, $r4;
        char $c1;
        byte $b0;
        int i2, $i3, $i4;
        char[] $r1, $r3, $r5;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/google/gwt/user/server/Base64Utils;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.google.gwt.user.server.Base64Utils: boolean $assertionsDisabled> = $z1;

        $r1 = newarray (char)[64];

        $r1[0] = 65;

        $r1[1] = 66;

        $r1[2] = 67;

        $r1[3] = 68;

        $r1[4] = 69;

        $r1[5] = 70;

        $r1[6] = 71;

        $r1[7] = 72;

        $r1[8] = 73;

        $r1[9] = 74;

        $r1[10] = 75;

        $r1[11] = 76;

        $r1[12] = 77;

        $r1[13] = 78;

        $r1[14] = 79;

        $r1[15] = 80;

        $r1[16] = 81;

        $r1[17] = 82;

        $r1[18] = 83;

        $r1[19] = 84;

        $r1[20] = 85;

        $r1[21] = 86;

        $r1[22] = 87;

        $r1[23] = 88;

        $r1[24] = 89;

        $r1[25] = 90;

        $r1[26] = 97;

        $r1[27] = 98;

        $r1[28] = 99;

        $r1[29] = 100;

        $r1[30] = 101;

        $r1[31] = 102;

        $r1[32] = 103;

        $r1[33] = 104;

        $r1[34] = 105;

        $r1[35] = 106;

        $r1[36] = 107;

        $r1[37] = 108;

        $r1[38] = 109;

        $r1[39] = 110;

        $r1[40] = 111;

        $r1[41] = 112;

        $r1[42] = 113;

        $r1[43] = 114;

        $r1[44] = 115;

        $r1[45] = 116;

        $r1[46] = 117;

        $r1[47] = 118;

        $r1[48] = 119;

        $r1[49] = 120;

        $r1[50] = 121;

        $r1[51] = 122;

        $r1[52] = 48;

        $r1[53] = 49;

        $r1[54] = 50;

        $r1[55] = 51;

        $r1[56] = 52;

        $r1[57] = 53;

        $r1[58] = 54;

        $r1[59] = 55;

        $r1[60] = 56;

        $r1[61] = 57;

        $r1[62] = 36;

        $r1[63] = 95;

        <com.google.gwt.user.server.Base64Utils: char[] base64Chars> = $r1;

        $r2 = newarray (byte)[128];

        <com.google.gwt.user.server.Base64Utils: byte[] base64Values> = $r2;

        i2 = 0;

     label3:
        $r5 = <com.google.gwt.user.server.Base64Utils: char[] base64Chars>;

        $i3 = lengthof $r5;

        if i2 >= $i3 goto label4;

        $r4 = <com.google.gwt.user.server.Base64Utils: byte[] base64Values>;

        $r3 = <com.google.gwt.user.server.Base64Utils: char[] base64Chars>;

        $c1 = $r3[i2];

        $b0 = (byte) i2;

        $i4 = (int) $c1;

        $r4[$i4] = $b0;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }
}
