public abstract class org.apache.batik.css.engine.CSSEngine extends java.lang.Object
{
    protected org.apache.batik.css.engine.CSSEngineUserAgent userAgent;
    protected org.apache.batik.css.engine.CSSContext cssContext;
    protected org.w3c.dom.Document document;
    protected org.apache.batik.util.ParsedURL documentURI;
    protected boolean isCSSNavigableDocument;
    protected org.apache.batik.css.engine.StringIntMap indexes;
    protected org.apache.batik.css.engine.StringIntMap shorthandIndexes;
    protected org.apache.batik.css.engine.value.ValueManager[] valueManagers;
    protected org.apache.batik.css.engine.value.ShorthandManager[] shorthandManagers;
    protected org.apache.batik.css.parser.ExtendedParser parser;
    protected java.lang.String[] pseudoElementNames;
    protected int fontSizeIndex;
    protected int lineHeightIndex;
    protected int colorIndex;
    protected org.apache.batik.css.engine.StyleSheet userAgentStyleSheet;
    protected org.apache.batik.css.engine.StyleSheet userStyleSheet;
    protected org.w3c.css.sac.SACMediaList media;
    protected java.util.List styleSheetNodes;
    protected java.util.List fontFaces;
    protected java.lang.String styleNamespaceURI;
    protected java.lang.String styleLocalName;
    protected java.lang.String classNamespaceURI;
    protected java.lang.String classLocalName;
    protected java.util.Set nonCSSPresentationalHints;
    protected java.lang.String nonCSSPresentationalHintsNamespaceURI;
    protected org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler styleDeclarationDocumentHandler;
    protected org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler styleDeclarationUpdateHandler;
    protected org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler styleSheetDocumentHandler;
    protected org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder styleDeclarationBuilder;
    protected org.apache.batik.css.engine.CSSStylableElement element;
    protected org.apache.batik.util.ParsedURL cssBaseURI;
    protected java.lang.String alternateStyleSheet;
    protected org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler cssNavigableDocumentListener;
    protected org.w3c.dom.events.EventListener domAttrModifiedListener;
    protected org.w3c.dom.events.EventListener domNodeInsertedListener;
    protected org.w3c.dom.events.EventListener domNodeRemovedListener;
    protected org.w3c.dom.events.EventListener domSubtreeModifiedListener;
    protected org.w3c.dom.events.EventListener domCharacterDataModifiedListener;
    protected boolean styleSheetRemoved;
    protected org.w3c.dom.Node removedStylableElementSibling;
    protected java.util.List listeners;
    protected java.util.Set selectorAttributes;
    protected final int[] ALL_PROPERTIES;
    protected org.apache.batik.css.engine.sac.CSSConditionFactory cssConditionFactory;
    protected static final org.apache.batik.css.engine.CSSEngineListener[] LISTENER_ARRAY;

    public static org.w3c.dom.Node getCSSParentNode(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r1, $r3;
        boolean $z0;
        org.apache.batik.css.engine.CSSNavigableNode $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSNavigableNode;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.batik.css.engine.CSSNavigableNode) r0;

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.CSSNavigableNode: org.w3c.dom.Node getCSSParentNode()>();

        return $r3;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        return $r1;
    }

    protected static org.w3c.dom.Node getCSSFirstChild(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r1, $r3;
        boolean $z0;
        org.apache.batik.css.engine.CSSNavigableNode $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSNavigableNode;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.batik.css.engine.CSSNavigableNode) r0;

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.CSSNavigableNode: org.w3c.dom.Node getCSSFirstChild()>();

        return $r3;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        return $r1;
    }

    protected static org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r1, $r3;
        boolean $z0;
        org.apache.batik.css.engine.CSSNavigableNode $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSNavigableNode;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.batik.css.engine.CSSNavigableNode) r0;

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.CSSNavigableNode: org.w3c.dom.Node getCSSNextSibling()>();

        return $r3;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        return $r1;
    }

    protected static org.w3c.dom.Node getCSSPreviousSibling(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r1, $r3;
        boolean $z0;
        org.apache.batik.css.engine.CSSNavigableNode $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSNavigableNode;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.batik.css.engine.CSSNavigableNode) r0;

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.CSSNavigableNode: org.w3c.dom.Node getCSSPreviousSibling()>();

        return $r3;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        return $r1;
    }

    public static org.apache.batik.css.engine.CSSStylableElement getParentCSSStylableElement(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.w3c.dom.Node r2;
        org.apache.batik.css.engine.CSSStylableElement $r1;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSParentNode(org.w3c.dom.Node)>(r0);

        goto label3;

     label1:
        $z0 = r2 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z0 == 0 goto label2;

        $r1 = (org.apache.batik.css.engine.CSSStylableElement) r2;

        return $r1;

     label2:
        r2 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSParentNode(org.w3c.dom.Node)>(r2);

     label3:
        if r2 != null goto label1;

        return null;
    }

    protected void <init>(org.w3c.dom.Document, org.apache.batik.util.ParsedURL, org.apache.batik.css.parser.ExtendedParser, org.apache.batik.css.engine.value.ValueManager[], org.apache.batik.css.engine.value.ShorthandManager[], java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, org.apache.batik.css.engine.CSSContext)
    {
        org.w3c.dom.Document r7, $r29, $r30;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler $r51;
        org.apache.batik.css.engine.StringIntMap $r21, $r25, $r48, $r49;
        org.apache.batik.css.engine.value.ValueManager[] r17;
        java.util.Set $r37, $r40;
        org.apache.batik.util.ParsedURL r8;
        org.apache.batik.css.engine.value.ValueManager $r19, $r35;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder $r45;
        java.lang.String r11, r12, r13, r14, $r20, $r26, r34, $r36, $r39;
        org.apache.batik.css.engine.value.ShorthandManager[] r22;
        org.apache.batik.css.parser.ExtendedParser r9;
        int[] $r28, $r41;
        org.w3c.dom.events.EventTarget $r31;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6;
        org.apache.batik.css.engine.CSSContext r15, $r27;
        java.util.List $r6;
        java.lang.String[] r10;
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.sac.CSSConditionFactory $r47;
        java.util.HashSet $r50;
        org.apache.batik.css.engine.value.ShorthandManager $r24, $r38;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, i8, i9, i10, i11, i12, i13, $i14, $i15, i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34;
        java.util.LinkedList $r42, $r46;
        org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler $r44;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler $r43;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r7 := @parameter0: org.w3c.dom.Document;

        r8 := @parameter1: org.apache.batik.util.ParsedURL;

        r9 := @parameter2: org.apache.batik.css.parser.ExtendedParser;

        r17 := @parameter3: org.apache.batik.css.engine.value.ValueManager[];

        r22 := @parameter4: org.apache.batik.css.engine.value.ShorthandManager[];

        r10 := @parameter5: java.lang.String[];

        r11 := @parameter6: java.lang.String;

        r12 := @parameter7: java.lang.String;

        r13 := @parameter8: java.lang.String;

        r14 := @parameter9: java.lang.String;

        z4 := @parameter10: boolean;

        r34 := @parameter11: java.lang.String;

        r15 := @parameter12: org.apache.batik.css.engine.CSSContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i18 = (int) -1;

        r0.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex> = $i18;

        $i20 = (int) -1;

        r0.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex> = $i20;

        $i22 = (int) -1;

        r0.<org.apache.batik.css.engine.CSSEngine: int colorIndex> = $i22;

        $r42 = new java.util.LinkedList;

        specialinvoke $r42.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.css.engine.CSSEngine: java.util.List fontFaces> = $r42;

        $r43 = new org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler;

        specialinvoke $r43.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler styleDeclarationDocumentHandler> = $r43;

        $r44 = new org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler;

        specialinvoke $r44.<org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler styleSheetDocumentHandler> = $r44;

        $r45 = new org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder;

        specialinvoke $r45.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder styleDeclarationBuilder> = $r45;

        $r46 = new java.util.LinkedList;

        specialinvoke $r46.<java.util.LinkedList: void <init>()>();

        $r6 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r46);

        r0.<org.apache.batik.css.engine.CSSEngine: java.util.List listeners> = $r6;

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document> = r7;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI> = r8;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser> = r9;

        r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String[] pseudoElementNames> = r10;

        r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleNamespaceURI> = r11;

        r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleLocalName> = r12;

        r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String classNamespaceURI> = r13;

        r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String classLocalName> = r14;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext cssContext> = r15;

        $z0 = r7 instanceof org.apache.batik.css.engine.CSSNavigableDocument;

        r0.<org.apache.batik.css.engine.CSSEngine: boolean isCSSNavigableDocument> = $z0;

        $r47 = new org.apache.batik.css.engine.sac.CSSConditionFactory;

        specialinvoke $r47.<org.apache.batik.css.engine.sac.CSSConditionFactory: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r13, r14, null, "id");

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.sac.CSSConditionFactory cssConditionFactory> = $r47;

        i4 = lengthof r17;

        $r48 = new org.apache.batik.css.engine.StringIntMap;

        specialinvoke $r48.<org.apache.batik.css.engine.StringIntMap: void <init>(int)>(i4);

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StringIntMap indexes> = $r48;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers> = r17;

        i5 = i4 - 1;

        goto label05;

     label01:
        $r19 = r17[i5];

        $r20 = interfaceinvoke $r19.<org.apache.batik.css.engine.value.ValueManager: java.lang.String getPropertyName()>();

        $r21 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StringIntMap indexes>;

        virtualinvoke $r21.<org.apache.batik.css.engine.StringIntMap: void put(java.lang.String,int)>($r20, i5);

        $i0 = r0.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex>;

        $i24 = (int) -1;

        if $i0 != $i24 goto label02;

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("font-size");

        if $z3 == 0 goto label02;

        r0.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex> = i5;

     label02:
        $i6 = r0.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex>;

        $i26 = (int) -1;

        if $i6 != $i26 goto label03;

        $z2 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("line-height");

        if $z2 == 0 goto label03;

        r0.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex> = i5;

     label03:
        $i7 = r0.<org.apache.batik.css.engine.CSSEngine: int colorIndex>;

        $i28 = (int) -1;

        if $i7 != $i28 goto label04;

        $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("color");

        if $z1 == 0 goto label04;

        r0.<org.apache.batik.css.engine.CSSEngine: int colorIndex> = i5;

     label04:
        $i30 = (int) -1;

        i5 = i5 + $i30;

     label05:
        if i5 >= 0 goto label01;

        i8 = lengthof r22;

        $r49 = new org.apache.batik.css.engine.StringIntMap;

        specialinvoke $r49.<org.apache.batik.css.engine.StringIntMap: void <init>(int)>(i8);

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StringIntMap shorthandIndexes> = $r49;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ShorthandManager[] shorthandManagers> = r22;

        i9 = i8 - 1;

        goto label07;

     label06:
        $r25 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StringIntMap shorthandIndexes>;

        $r24 = r22[i9];

        $r26 = interfaceinvoke $r24.<org.apache.batik.css.engine.value.ShorthandManager: java.lang.String getPropertyName()>();

        virtualinvoke $r25.<org.apache.batik.css.engine.StringIntMap: void put(java.lang.String,int)>($r26, i9);

        $i32 = (int) -1;

        i9 = i9 + $i32;

     label07:
        if i9 >= 0 goto label06;

        if z4 == 0 goto label12;

        $r50 = new java.util.HashSet;

        $i2 = lengthof r17;

        $i1 = lengthof r22;

        $i3 = $i2 + $i1;

        specialinvoke $r50.<java.util.HashSet: void <init>(int)>($i3);

        r0.<org.apache.batik.css.engine.CSSEngine: java.util.Set nonCSSPresentationalHints> = $r50;

        r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String nonCSSPresentationalHintsNamespaceURI> = r34;

        i10 = lengthof r17;

        i11 = 0;

        goto label09;

     label08:
        $r35 = r17[i11];

        $r36 = interfaceinvoke $r35.<org.apache.batik.css.engine.value.ValueManager: java.lang.String getPropertyName()>();

        $r37 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.Set nonCSSPresentationalHints>;

        interfaceinvoke $r37.<java.util.Set: boolean add(java.lang.Object)>($r36);

        i11 = i11 + 1;

     label09:
        if i11 < i10 goto label08;

        i12 = lengthof r22;

        i13 = 0;

        goto label11;

     label10:
        $r38 = r22[i13];

        $r39 = interfaceinvoke $r38.<org.apache.batik.css.engine.value.ShorthandManager: java.lang.String getPropertyName()>();

        $r40 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.Set nonCSSPresentationalHints>;

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>($r39);

        i13 = i13 + 1;

     label11:
        if i13 < i12 goto label10;

     label12:
        $r27 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext cssContext>;

        $z5 = interfaceinvoke $r27.<org.apache.batik.css.engine.CSSContext: boolean isDynamic()>();

        if $z5 == 0 goto label13;

        $r29 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        $z6 = $r29 instanceof org.w3c.dom.events.EventTarget;

        if $z6 == 0 goto label13;

        $r30 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        $r31 = (org.w3c.dom.events.EventTarget) $r30;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void addEventListeners(org.w3c.dom.events.EventTarget)>($r31);

        $r51 = new org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler;

        specialinvoke $r51.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler styleDeclarationUpdateHandler> = $r51;

     label13:
        $i14 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        $r41 = newarray (int)[$i14];

        r0.<org.apache.batik.css.engine.CSSEngine: int[] ALL_PROPERTIES> = $r41;

        $i15 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i16 = $i15 - 1;

        goto label15;

     label14:
        $r28 = r0.<org.apache.batik.css.engine.CSSEngine: int[] ALL_PROPERTIES>;

        $r28[i16] = i16;

        $i34 = (int) -1;

        i16 = i16 + $i34;

     label15:
        if i16 >= 0 goto label14;

        return;
    }

    protected void addEventListeners(org.w3c.dom.events.EventTarget)
    {
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler $r12, $r14;
        org.w3c.dom.events.EventTarget r2;
        org.apache.batik.css.engine.CSSNavigableDocument r13;
        org.apache.batik.css.engine.CSSEngine$DOMAttrModifiedListener $r1;
        org.apache.batik.css.engine.CSSEngine$DOMSubtreeModifiedListener $r8;
        boolean $z0;
        org.apache.batik.css.engine.CSSEngine$DOMCharacterDataModifiedListener $r10;
        org.apache.batik.css.engine.CSSEngine$DOMNodeInsertedListener $r4;
        org.w3c.dom.events.EventListener $r3, $r5, $r7, $r9, $r11;
        org.apache.batik.css.engine.CSSEngine$DOMNodeRemovedListener $r6;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r2 := @parameter0: org.w3c.dom.events.EventTarget;

        $z0 = r0.<org.apache.batik.css.engine.CSSEngine: boolean isCSSNavigableDocument>;

        if $z0 == 0 goto label1;

        $r12 = new org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        specialinvoke $r12.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler cssNavigableDocumentListener> = $r12;

        r13 = (org.apache.batik.css.engine.CSSNavigableDocument) r2;

        $r14 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler cssNavigableDocumentListener>;

        interfaceinvoke r13.<org.apache.batik.css.engine.CSSNavigableDocument: void addCSSNavigableDocumentListener(org.apache.batik.css.engine.CSSNavigableDocumentListener)>($r14);

        goto label2;

     label1:
        $r1 = new org.apache.batik.css.engine.CSSEngine$DOMAttrModifiedListener;

        specialinvoke $r1.<org.apache.batik.css.engine.CSSEngine$DOMAttrModifiedListener: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domAttrModifiedListener> = $r1;

        $r3 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domAttrModifiedListener>;

        interfaceinvoke r2.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMAttrModified", $r3, 0);

        $r4 = new org.apache.batik.css.engine.CSSEngine$DOMNodeInsertedListener;

        specialinvoke $r4.<org.apache.batik.css.engine.CSSEngine$DOMNodeInsertedListener: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domNodeInsertedListener> = $r4;

        $r5 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domNodeInsertedListener>;

        interfaceinvoke r2.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMNodeInserted", $r5, 0);

        $r6 = new org.apache.batik.css.engine.CSSEngine$DOMNodeRemovedListener;

        specialinvoke $r6.<org.apache.batik.css.engine.CSSEngine$DOMNodeRemovedListener: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domNodeRemovedListener> = $r6;

        $r7 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domNodeRemovedListener>;

        interfaceinvoke r2.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMNodeRemoved", $r7, 0);

        $r8 = new org.apache.batik.css.engine.CSSEngine$DOMSubtreeModifiedListener;

        specialinvoke $r8.<org.apache.batik.css.engine.CSSEngine$DOMSubtreeModifiedListener: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domSubtreeModifiedListener> = $r8;

        $r9 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domSubtreeModifiedListener>;

        interfaceinvoke r2.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMSubtreeModified", $r9, 0);

        $r10 = new org.apache.batik.css.engine.CSSEngine$DOMCharacterDataModifiedListener;

        specialinvoke $r10.<org.apache.batik.css.engine.CSSEngine$DOMCharacterDataModifiedListener: void <init>(org.apache.batik.css.engine.CSSEngine)>(r0);

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domCharacterDataModifiedListener> = $r10;

        $r11 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domCharacterDataModifiedListener>;

        interfaceinvoke r2.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMCharacterDataModified", $r11, 0);

     label2:
        return;
    }

    protected void removeEventListeners(org.w3c.dom.events.EventTarget)
    {
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler $r8;
        org.w3c.dom.events.EventTarget r1;
        org.w3c.dom.events.EventListener $r2, $r3, $r4, $r5, $r6;
        org.apache.batik.css.engine.CSSNavigableDocument r7;
        boolean $z0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.w3c.dom.events.EventTarget;

        $z0 = r0.<org.apache.batik.css.engine.CSSEngine: boolean isCSSNavigableDocument>;

        if $z0 == 0 goto label1;

        r7 = (org.apache.batik.css.engine.CSSNavigableDocument) r1;

        $r8 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler cssNavigableDocumentListener>;

        interfaceinvoke r7.<org.apache.batik.css.engine.CSSNavigableDocument: void removeCSSNavigableDocumentListener(org.apache.batik.css.engine.CSSNavigableDocumentListener)>($r8);

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domAttrModifiedListener>;

        interfaceinvoke r1.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMAttrModified", $r2, 0);

        $r3 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domNodeInsertedListener>;

        interfaceinvoke r1.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMNodeInserted", $r3, 0);

        $r4 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domNodeRemovedListener>;

        interfaceinvoke r1.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMNodeRemoved", $r4, 0);

        $r5 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domSubtreeModifiedListener>;

        interfaceinvoke r1.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMSubtreeModified", $r5, 0);

        $r6 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.events.EventListener domCharacterDataModifiedListener>;

        interfaceinvoke r1.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("DOMCharacterDataModified", $r6, 0);

     label2:
        return;
    }

    public void dispose()
    {
        org.w3c.dom.Element $r2;
        org.w3c.dom.events.EventTarget $r5;
        org.w3c.dom.Document $r1, $r3, $r4;
        org.apache.batik.css.engine.CSSEngine r0;
        boolean $z0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void setCSSEngineUserAgent(org.apache.batik.css.engine.CSSEngineUserAgent)>(null);

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void disposeStyleMaps(org.w3c.dom.Node)>($r2);

        $r3 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        $z0 = $r3 instanceof org.w3c.dom.events.EventTarget;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        $r5 = (org.w3c.dom.events.EventTarget) $r4;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void removeEventListeners(org.w3c.dom.events.EventTarget)>($r5);

     label1:
        return;
    }

    protected void disposeStyleMaps(org.w3c.dom.Node)
    {
        short $s0;
        org.w3c.dom.Node r0, r3;
        org.apache.batik.css.engine.CSSStylableElement $r2;
        org.apache.batik.css.engine.CSSEngine r1;
        boolean $z0;

        r1 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.batik.css.engine.CSSStylableElement) r0;

        interfaceinvoke $r2.<org.apache.batik.css.engine.CSSStylableElement: void setComputedStyleMap(java.lang.String,org.apache.batik.css.engine.StyleMap)>(null, null);

     label1:
        r3 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSFirstChild(org.w3c.dom.Node)>(r0);

        goto label4;

     label2:
        $s0 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label3;

        virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: void disposeStyleMaps(org.w3c.dom.Node)>(r3);

     label3:
        r3 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r3);

     label4:
        if r3 != null goto label2;

        return;
    }

    public org.apache.batik.css.engine.CSSContext getCSSContext()
    {
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.CSSContext $r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext cssContext>;

        return $r1;
    }

    public org.w3c.dom.Document getDocument()
    {
        org.apache.batik.css.engine.CSSEngine r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        return $r1;
    }

    public int getFontSizeIndex()
    {
        int $i0;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $i0 = r0.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex>;

        return $i0;
    }

    public int getLineHeightIndex()
    {
        int $i0;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $i0 = r0.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex>;

        return $i0;
    }

    public int getColorIndex()
    {
        int $i0;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $i0 = r0.<org.apache.batik.css.engine.CSSEngine: int colorIndex>;

        return $i0;
    }

    public int getNumberOfProperties()
    {
        org.apache.batik.css.engine.value.ValueManager[] $r1;
        int $i0;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getPropertyIndex(java.lang.String)
    {
        org.apache.batik.css.engine.StringIntMap $r2;
        int $i0;
        java.lang.String r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StringIntMap indexes>;

        $i0 = virtualinvoke $r2.<org.apache.batik.css.engine.StringIntMap: int get(java.lang.String)>(r1);

        return $i0;
    }

    public int getShorthandIndex(java.lang.String)
    {
        org.apache.batik.css.engine.StringIntMap $r2;
        int $i0;
        java.lang.String r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StringIntMap shorthandIndexes>;

        $i0 = virtualinvoke $r2.<org.apache.batik.css.engine.StringIntMap: int get(java.lang.String)>(r1);

        return $i0;
    }

    public java.lang.String getPropertyName(int)
    {
        org.apache.batik.css.engine.value.ValueManager $r2;
        int i0;
        org.apache.batik.css.engine.value.ValueManager[] $r1;
        java.lang.String $r3;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers>;

        $r2 = $r1[i0];

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.ValueManager: java.lang.String getPropertyName()>();

        return $r3;
    }

    public void setCSSEngineUserAgent(org.apache.batik.css.engine.CSSEngineUserAgent)
    {
        org.apache.batik.css.engine.CSSEngineUserAgent r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngineUserAgent;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent> = r1;

        return;
    }

    public org.apache.batik.css.engine.CSSEngineUserAgent getCSSEngineUserAgent()
    {
        org.apache.batik.css.engine.CSSEngineUserAgent $r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        return $r1;
    }

    public void setUserAgentStyleSheet(org.apache.batik.css.engine.StyleSheet)
    {
        org.apache.batik.css.engine.StyleSheet r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.apache.batik.css.engine.StyleSheet;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleSheet userAgentStyleSheet> = r1;

        return;
    }

    public void setUserStyleSheet(org.apache.batik.css.engine.StyleSheet)
    {
        org.apache.batik.css.engine.StyleSheet r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.apache.batik.css.engine.StyleSheet;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleSheet userStyleSheet> = r1;

        return;
    }

    public org.apache.batik.css.engine.value.ValueManager[] getValueManagers()
    {
        org.apache.batik.css.engine.value.ValueManager[] $r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers>;

        return $r1;
    }

    public org.apache.batik.css.engine.value.ShorthandManager[] getShorthandManagers()
    {
        org.apache.batik.css.engine.value.ShorthandManager[] $r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ShorthandManager[] shorthandManagers>;

        return $r1;
    }

    public java.util.List getFontFaces()
    {
        java.util.List $r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.List fontFaces>;

        return $r1;
    }

    public void setMedia(java.lang.String)
    {
        org.apache.batik.css.parser.ExtendedParser $r2;
        java.lang.Object[] $r6;
        org.apache.batik.css.engine.CSSEngine r0;
        java.lang.Exception $r4;
        org.w3c.css.sac.SACMediaList $r3;
        org.w3c.dom.DOMException $r8;
        java.lang.String r1, $r5, $r7, r9;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.parser.ExtendedParser: org.w3c.css.sac.SACMediaList parseMedia(java.lang.String)>(r1);

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.css.sac.SACMediaList media> = $r3;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        r9 = $r5;

        if $r5 != null goto label4;

        r9 = "";

     label4:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r1;

        $r6[1] = r9;

        $r7 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("media.error", $r6);

        $r8 = new org.w3c.dom.DOMException;

        specialinvoke $r8.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r7);

        throw $r8;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setAlternateStyleSheet(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String alternateStyleSheet> = r1;

        return;
    }

    public void importCascadedStyleMaps(org.w3c.dom.Element, org.apache.batik.css.engine.CSSEngine, org.w3c.dom.Element)
    {
        java.lang.String[] $r7, $r8, $r9;
        org.apache.batik.css.engine.CSSStylableElement r12, r13;
        org.apache.batik.css.engine.CSSEngine r2, r3;
        short $s0;
        org.apache.batik.css.engine.StyleMap $r6, $r11;
        org.w3c.dom.Node r14, r15;
        int i1, i2;
        java.lang.String r10;
        boolean $z0;
        org.w3c.dom.Element r0, r1, $r4, $r5;

        r2 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter2: org.w3c.dom.Element;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z0 == 0 goto label3;

        r12 = (org.apache.batik.css.engine.CSSStylableElement) r0;

        r13 = (org.apache.batik.css.engine.CSSStylableElement) r1;

        $r6 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleMap getCascadedStyleMap(org.apache.batik.css.engine.CSSStylableElement,java.lang.String)>(r12, null);

        virtualinvoke $r6.<org.apache.batik.css.engine.StyleMap: void setFixedCascadedStyle(boolean)>(1);

        interfaceinvoke r13.<org.apache.batik.css.engine.CSSStylableElement: void setComputedStyleMap(java.lang.String,org.apache.batik.css.engine.StyleMap)>(null, $r6);

        $r7 = r2.<org.apache.batik.css.engine.CSSEngine: java.lang.String[] pseudoElementNames>;

        if $r7 == null goto label3;

        $r8 = r2.<org.apache.batik.css.engine.CSSEngine: java.lang.String[] pseudoElementNames>;

        i1 = lengthof $r8;

        i2 = 0;

        goto label2;

     label1:
        $r9 = r2.<org.apache.batik.css.engine.CSSEngine: java.lang.String[] pseudoElementNames>;

        r10 = $r9[i2];

        $r11 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleMap getCascadedStyleMap(org.apache.batik.css.engine.CSSStylableElement,java.lang.String)>(r12, r10);

        interfaceinvoke r13.<org.apache.batik.css.engine.CSSStylableElement: void setComputedStyleMap(java.lang.String,org.apache.batik.css.engine.StyleMap)>(r10, $r11);

        i2 = i2 + 1;

     label2:
        if i2 < i1 goto label1;

     label3:
        r14 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSFirstChild(org.w3c.dom.Node)>(r1);

        r15 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSFirstChild(org.w3c.dom.Node)>(r0);

        goto label6;

     label4:
        $s0 = interfaceinvoke r15.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label5;

        $r5 = (org.w3c.dom.Element) r15;

        $r4 = (org.w3c.dom.Element) r14;

        virtualinvoke r2.<org.apache.batik.css.engine.CSSEngine: void importCascadedStyleMaps(org.w3c.dom.Element,org.apache.batik.css.engine.CSSEngine,org.w3c.dom.Element)>($r5, r3, $r4);

     label5:
        r14 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r14);

        r15 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r15);

     label6:
        if r14 != null goto label4;

        return;
    }

    public org.apache.batik.util.ParsedURL getCSSBaseURI()
    {
        org.apache.batik.util.ParsedURL $r1, $r2, $r4;
        org.apache.batik.css.engine.CSSStylableElement $r3;
        org.apache.batik.css.engine.CSSEngine r0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.util.ParsedURL getCSSBase()>();

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = $r4;

     label1:
        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI>;

        return $r2;
    }

    public org.apache.batik.css.engine.StyleMap getCascadedStyleMap(org.apache.batik.css.engine.CSSStylableElement, java.lang.String)
    {
        org.apache.batik.css.engine.CSSStylableElement r4;
        org.apache.batik.css.engine.CSSEngineUserAgent $r53, $r54, $r83, $r84;
        java.util.Set $r5, $r35;
        java.lang.Exception $r45, $r56;
        org.apache.batik.util.ParsedURL $r47, $r48, $r77, $r78;
        org.w3c.css.sac.SACMediaList $r88;
        java.lang.Throwable $r44;
        java.lang.Object[] $r49, $r79;
        java.util.ArrayList $r24, $r40, $r42;
        org.apache.batik.css.engine.StyleSheet $r2, $r3, $r26, $r41, $r43;
        java.lang.StringBuffer $r57, $r59, $r60, $r62, $r64, $r65, $r67, $r69, $r72;
        java.lang.String $r9, $r12, $r13, $r14, r27, $r28, $r29, $r30, $r34, $r36, $r38, $r46, $r50, $r51, $r61, $r66, $r71, $r73, $r76, $r80, $r81, r85, $r86, r89, $r90;
        org.apache.batik.css.engine.value.Value $r11;
        org.apache.batik.css.parser.ExtendedParser $r16, $r18, $r21, $r22, $r37;
        org.w3c.css.sac.LexicalUnit $r39;
        org.apache.batik.css.engine.CSSEngine$1 $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.css.engine.StyleDeclaration $r10;
        org.apache.batik.css.engine.CSSContext $r6;
        java.util.List $r8;
        org.apache.batik.css.engine.StyleDeclarationProvider $r91;
        org.apache.batik.css.engine.CSSEngine r0, $r7;
        org.apache.batik.css.engine.sac.CSSConditionFactory $r17;
        org.apache.batik.css.engine.StyleMap $r1;
        org.w3c.dom.Node $r33;
        org.w3c.dom.DOMException $r52, $r82;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        org.w3c.dom.NamedNodeMap $r32;
        org.w3c.css.sac.SelectorFactory $r15;
        java.io.PrintStream $r58, $r63, $r68, $r74, $r75;
        org.apache.batik.css.engine.CSSStyleSheetNode r87;
        java.lang.Object $r25;
        java.lang.Class $r55, $r70;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler $r19, $r20, $r23;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r4 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r27 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        $r1 = new org.apache.batik.css.engine.StyleMap;

        specialinvoke $r1.<org.apache.batik.css.engine.StyleMap: void <init>(int)>($i0);

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleSheet userAgentStyleSheet>;

        if $r2 == null goto label01;

        $r42 = new java.util.ArrayList;

        specialinvoke $r42.<java.util.ArrayList: void <init>()>();

        $r43 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleSheet userAgentStyleSheet>;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void addMatchingRules(java.util.List,org.apache.batik.css.engine.StyleSheet,org.w3c.dom.Element,java.lang.String)>($r42, $r43, r4, r27);

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void addRules(org.w3c.dom.Element,java.lang.String,org.apache.batik.css.engine.StyleMap,java.util.ArrayList,short)>(r4, r27, $r1, $r42, 0);

     label01:
        $r3 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleSheet userStyleSheet>;

        if $r3 == null goto label02;

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        $r41 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleSheet userStyleSheet>;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void addMatchingRules(java.util.List,org.apache.batik.css.engine.StyleSheet,org.w3c.dom.Element,java.lang.String)>($r40, $r41, r4, r27);

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void addRules(org.w3c.dom.Element,java.lang.String,org.apache.batik.css.engine.StyleMap,java.util.ArrayList,short)>(r4, r27, $r1, $r40, 8192);

     label02:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = r4;

     label03:
        $r5 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.Set nonCSSPresentationalHints>;

        if $r5 == null goto label14;

        $r31 = new org.apache.batik.css.engine.CSSEngine$1;

        specialinvoke $r31.<org.apache.batik.css.engine.CSSEngine$1: void <init>(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.StyleMap)>(r0, $r1);

        $r32 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i5 = interfaceinvoke $r32.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i6 = 0;

        goto label13;

     label04:
        $r33 = interfaceinvoke $r32.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i6);

        $r34 = interfaceinvoke $r33.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r35 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.Set nonCSSPresentationalHints>;

        $z4 = interfaceinvoke $r35.<java.util.Set: boolean contains(java.lang.Object)>($r34);

        if $z4 == 0 goto label12;

        $r36 = interfaceinvoke $r33.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label05:
        $r37 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r38 = interfaceinvoke $r33.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r39 = interfaceinvoke $r37.<org.apache.batik.css.parser.ExtendedParser: org.w3c.css.sac.LexicalUnit parsePropertyValue(java.lang.String)>($r38);

        interfaceinvoke $r31.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>($r34, $r39, 0);

     label06:
        goto label12;

     label07:
        $r56 := @caughtexception;

        $r58 = <java.lang.System: java.io.PrintStream err>;

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n***** CSSEngine: exception property.syntax.error:");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r56);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r61);

        $r63 = <java.lang.System: java.io.PrintStream err>;

        $r62 = new java.lang.StringBuffer;

        specialinvoke $r62.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nAttrValue:");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r66);

        $r68 = <java.lang.System: java.io.PrintStream err>;

        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nException:");

        $r70 = virtualinvoke $r56.<java.lang.Object: java.lang.Class getClass()>();

        $r71 = virtualinvoke $r70.<java.lang.Class: java.lang.String getName()>();

        $r72 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>($r73);

        $r74 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r56.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r74);

        $r75 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>("\n***** CSSEngine: exception....");

        $r76 = virtualinvoke $r56.<java.lang.Throwable: java.lang.String getMessage()>();

        r85 = $r76;

        if $r76 != null goto label08;

        r85 = "";

     label08:
        $r77 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r77 != null goto label09;

        $r86 = "<unknown>";

        goto label10;

     label09:
        $r78 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r86 = virtualinvoke $r78.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label10:
        $r79 = newarray (java.lang.Object)[4];

        $r79[0] = $r86;

        $r79[1] = $r34;

        $r80 = interfaceinvoke $r33.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r79[2] = $r80;

        $r79[3] = r85;

        $r81 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("property.syntax.error.at", $r79);

        $r82 = new org.w3c.dom.DOMException;

        specialinvoke $r82.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r81);

        $r83 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r83 != null goto label11;

        throw $r82;

     label11:
        $r84 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r84.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r82);

     label12:
        i6 = i6 + 1;

     label13:
        if i6 < $i5 goto label04;

     label14:
        $r6 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext cssContext>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.css.engine.CSSContext: org.apache.batik.css.engine.CSSEngine getCSSEngineForElement(org.w3c.dom.Element)>(r4);

        $r8 = virtualinvoke $r7.<org.apache.batik.css.engine.CSSEngine: java.util.List getStyleSheetNodes()>();

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i1 <= 0 goto label19;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        i7 = 0;

        goto label18;

     label15:
        $r25 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i7);

        r87 = (org.apache.batik.css.engine.CSSStyleSheetNode) $r25;

        $r26 = interfaceinvoke r87.<org.apache.batik.css.engine.CSSStyleSheetNode: org.apache.batik.css.engine.StyleSheet getCSSStyleSheet()>();

        if $r26 == null goto label17;

        $z2 = virtualinvoke $r26.<org.apache.batik.css.engine.StyleSheet: boolean isAlternate()>();

        if $z2 == 0 goto label16;

        $r28 = virtualinvoke $r26.<org.apache.batik.css.engine.StyleSheet: java.lang.String getTitle()>();

        if $r28 == null goto label16;

        $r29 = virtualinvoke $r26.<org.apache.batik.css.engine.StyleSheet: java.lang.String getTitle()>();

        $r30 = r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String alternateStyleSheet>;

        $z3 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z3 == 0 goto label17;

     label16:
        $r88 = virtualinvoke $r26.<org.apache.batik.css.engine.StyleSheet: org.w3c.css.sac.SACMediaList getMedia()>();

        $z5 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: boolean mediaMatch(org.w3c.css.sac.SACMediaList)>($r88);

        if $z5 == 0 goto label17;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void addMatchingRules(java.util.List,org.apache.batik.css.engine.StyleSheet,org.w3c.dom.Element,java.lang.String)>($r24, $r26, r4, r27);

     label17:
        i7 = i7 + 1;

     label18:
        if i7 < $i1 goto label15;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void addRules(org.w3c.dom.Element,java.lang.String,org.apache.batik.css.engine.StyleMap,java.util.ArrayList,short)>(r4, r27, $r1, $r24, 24576);

     label19:
        $r9 = r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleLocalName>;

        if $r9 == null goto label27;

        $r13 = r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleNamespaceURI>;

        $r12 = r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleLocalName>;

        $r14 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>($r13, $r12);

        $i4 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i4 <= 0 goto label27;

     label20:
        $r16 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r15 = <org.apache.batik.css.engine.sac.CSSSelectorFactory: org.w3c.css.sac.SelectorFactory INSTANCE>;

        interfaceinvoke $r16.<org.w3c.css.sac.Parser: void setSelectorFactory(org.w3c.css.sac.SelectorFactory)>($r15);

        $r18 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r17 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.sac.CSSConditionFactory cssConditionFactory>;

        interfaceinvoke $r18.<org.w3c.css.sac.Parser: void setConditionFactory(org.w3c.css.sac.ConditionFactory)>($r17);

        $r19 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler styleDeclarationDocumentHandler>;

        $r19.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler: org.apache.batik.css.engine.StyleMap styleMap> = $r1;

        $r21 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r20 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler styleDeclarationDocumentHandler>;

        interfaceinvoke $r21.<org.w3c.css.sac.Parser: void setDocumentHandler(org.w3c.css.sac.DocumentHandler)>($r20);

        $r22 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        interfaceinvoke $r22.<org.apache.batik.css.parser.ExtendedParser: void parseStyleDeclaration(java.lang.String)>($r14);

        $r23 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler styleDeclarationDocumentHandler>;

        $r23.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationDocumentHandler: org.apache.batik.css.engine.StyleMap styleMap> = null;

     label21:
        goto label27;

     label22:
        $r45 := @caughtexception;

        $r46 = virtualinvoke $r45.<java.lang.Throwable: java.lang.String getMessage()>();

        r89 = $r46;

        if $r46 != null goto label23;

        $r55 = virtualinvoke $r45.<java.lang.Object: java.lang.Class getClass()>();

        r89 = virtualinvoke $r55.<java.lang.Class: java.lang.String getName()>();

     label23:
        $r47 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r47 != null goto label24;

        $r90 = "<unknown>";

        goto label25;

     label24:
        $r48 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r90 = virtualinvoke $r48.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label25:
        $r49 = newarray (java.lang.Object)[4];

        $r49[0] = $r90;

        $r50 = r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleLocalName>;

        $r49[1] = $r50;

        $r49[2] = $r14;

        $r49[3] = r89;

        $r51 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("style.syntax.error.at", $r49);

        $r52 = new org.w3c.dom.DOMException;

        specialinvoke $r52.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r51);

        $r53 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r53 != null goto label26;

        throw $r52;

     label26:
        $r54 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r54.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r52);

     label27:
        $r91 = interfaceinvoke r4.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleDeclarationProvider getOverrideStyleDeclarationProvider()>();

        if $r91 == null goto label32;

        $r10 = interfaceinvoke $r91.<org.apache.batik.css.engine.StyleDeclarationProvider: org.apache.batik.css.engine.StyleDeclaration getStyleDeclaration()>();

        if $r10 == null goto label32;

        $i2 = virtualinvoke $r10.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        i8 = 0;

        goto label31;

     label28:
        $i3 = virtualinvoke $r10.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i8);

        $r11 = virtualinvoke $r10.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value getValue(int)>(i8);

        $z0 = virtualinvoke $r10.<org.apache.batik.css.engine.StyleDeclaration: boolean getPriority(int)>(i8);

        $z1 = virtualinvoke $r1.<org.apache.batik.css.engine.StyleMap: boolean isImportant(int)>($i3);

        if $z1 == 0 goto label29;

        if $z0 == 0 goto label30;

     label29:
        virtualinvoke $r1.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>($i3, $r11);

        virtualinvoke $r1.<org.apache.batik.css.engine.StyleMap: void putImportant(int,boolean)>($i3, $z0);

        virtualinvoke $r1.<org.apache.batik.css.engine.StyleMap: void putOrigin(int,short)>($i3, -24576);

     label30:
        i8 = i8 + 1;

     label31:
        if i8 < $i2 goto label28;

     label32:
        goto label37;

     label33:
        goto label36;

     label34:
        $r44 := @caughtexception;

        goto label38;

     label35:
        throw $r44;

     label36:
        return $r1;

     label37:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label33;

     label38:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label35;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Throwable from label03 to label34 with label34;
    }

    public org.apache.batik.css.engine.value.Value getComputedStyle(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, int)
    {
        org.apache.batik.css.engine.CSSStylableElement r0, $r7;
        org.apache.batik.css.engine.CSSEngine r4;
        org.apache.batik.css.engine.value.ComputedValue $r8;
        org.apache.batik.css.engine.StyleMap $r2, $r10, r11;
        int i0;
        java.lang.String r1;
        org.apache.batik.css.engine.value.InheritValue $r9;
        boolean $z0, $z1;
        org.apache.batik.css.engine.value.ValueManager[] $r5;
        org.apache.batik.css.engine.value.Value $r3, r12, r13;
        org.apache.batik.css.engine.value.ValueManager r6;

        r4 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = interfaceinvoke r0.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleMap getComputedStyleMap(java.lang.String)>(r1);

        r11 = $r2;

        if $r2 != null goto label1;

        $r10 = virtualinvoke r4.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleMap getCascadedStyleMap(org.apache.batik.css.engine.CSSStylableElement,java.lang.String)>(r0, r1);

        r11 = $r10;

        interfaceinvoke r0.<org.apache.batik.css.engine.CSSStylableElement: void setComputedStyleMap(java.lang.String,org.apache.batik.css.engine.StyleMap)>(r1, $r10);

     label1:
        $r3 = virtualinvoke r11.<org.apache.batik.css.engine.StyleMap: org.apache.batik.css.engine.value.Value getValue(int)>(i0);

        $z0 = virtualinvoke r11.<org.apache.batik.css.engine.StyleMap: boolean isComputed(int)>(i0);

        if $z0 == 0 goto label2;

        return $r3;

     label2:
        r12 = $r3;

        $r5 = r4.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers>;

        r6 = $r5[i0];

        $r7 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement getParentCSSStylableElement(org.w3c.dom.Element)>(r0);

        if $r3 != null goto label4;

        if $r7 == null goto label3;

        $z1 = interfaceinvoke r6.<org.apache.batik.css.engine.value.ValueManager: boolean isInheritedProperty()>();

        if $z1 != 0 goto label5;

     label3:
        r12 = interfaceinvoke r6.<org.apache.batik.css.engine.value.ValueManager: org.apache.batik.css.engine.value.Value getDefaultValue()>();

        goto label5;

     label4:
        if $r7 == null goto label5;

        $r9 = <org.apache.batik.css.engine.value.InheritValue: org.apache.batik.css.engine.value.InheritValue INSTANCE>;

        if $r3 != $r9 goto label5;

        r12 = null;

     label5:
        if r12 != null goto label6;

        r13 = virtualinvoke r4.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.Value getComputedStyle(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,int)>($r7, null, i0);

        virtualinvoke r11.<org.apache.batik.css.engine.StyleMap: void putParentRelative(int,boolean)>(i0, 1);

        virtualinvoke r11.<org.apache.batik.css.engine.StyleMap: void putInherited(int,boolean)>(i0, 1);

        goto label7;

     label6:
        r13 = interfaceinvoke r6.<org.apache.batik.css.engine.value.ValueManager: org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,org.apache.batik.css.engine.CSSEngine,int,org.apache.batik.css.engine.StyleMap,org.apache.batik.css.engine.value.Value)>(r0, r1, r4, i0, r11, r12);

     label7:
        if $r3 != null goto label8;

        virtualinvoke r11.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>(i0, r13);

        virtualinvoke r11.<org.apache.batik.css.engine.StyleMap: void putNullCascaded(int,boolean)>(i0, 1);

        goto label9;

     label8:
        if r13 == $r3 goto label9;

        $r8 = new org.apache.batik.css.engine.value.ComputedValue;

        specialinvoke $r8.<org.apache.batik.css.engine.value.ComputedValue: void <init>(org.apache.batik.css.engine.value.Value)>($r3);

        virtualinvoke $r8.<org.apache.batik.css.engine.value.ComputedValue: void setComputedValue(org.apache.batik.css.engine.value.Value)>(r13);

        virtualinvoke r11.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>(i0, $r8);

        r13 = $r8;

     label9:
        virtualinvoke r11.<org.apache.batik.css.engine.StyleMap: void putComputed(int,boolean)>(i0, 1);

        return r13;
    }

    public java.util.List getStyleSheetNodes()
    {
        java.util.Set $r11;
        org.apache.batik.css.engine.CSSEngine r0;
        java.util.ArrayList $r3;
        java.util.HashSet $r4;
        org.apache.batik.css.engine.StyleSheet $r10;
        java.util.List $r1, $r2, $r6, $r7;
        org.w3c.dom.Document $r5;
        int $i0, i1;
        org.apache.batik.css.engine.CSSStyleSheetNode r9;
        java.lang.Object $r8;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes>;

        if $r1 != null goto label4;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<org.apache.batik.css.engine.CSSEngine: java.util.Set selectorAttributes> = $r4;

        $r5 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void findStyleSheetNodes(org.w3c.dom.Node)>($r5);

        $r6 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r7 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        r9 = (org.apache.batik.css.engine.CSSStyleSheetNode) $r8;

        $r10 = interfaceinvoke r9.<org.apache.batik.css.engine.CSSStyleSheetNode: org.apache.batik.css.engine.StyleSheet getCSSStyleSheet()>();

        if $r10 == null goto label2;

        $r11 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.Set selectorAttributes>;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void findSelectorAttributes(java.util.Set,org.apache.batik.css.engine.StyleSheet)>($r11, $r10);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes>;

        return $r2;
    }

    protected void findStyleSheetNodes(org.w3c.dom.Node)
    {
        java.util.List $r2;
        org.w3c.dom.Node r0, r3;
        org.apache.batik.css.engine.CSSEngine r1;
        boolean $z0;

        r1 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSStyleSheetNode;

        if $z0 == 0 goto label1;

        $r2 = r1.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        r3 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSFirstChild(org.w3c.dom.Node)>(r0);

        goto label3;

     label2:
        virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: void findStyleSheetNodes(org.w3c.dom.Node)>(r3);

        r3 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r3);

     label3:
        if r3 != null goto label2;

        return;
    }

    protected void findSelectorAttributes(java.util.Set, org.apache.batik.css.engine.StyleSheet)
    {
        org.w3c.css.sac.SelectorList $r6;
        org.apache.batik.css.engine.Rule $r1;
        org.w3c.css.sac.Selector $r7;
        org.apache.batik.css.engine.CSSEngine r2;
        org.apache.batik.css.engine.StyleSheet r0;
        short $s1;
        int $i0, $i2, i3, i4, $i5;
        boolean $z0;
        org.apache.batik.css.engine.StyleRule r5;
        java.util.Set r4;
        org.w3c.css.sac.SACMediaList $r3;
        org.apache.batik.css.engine.MediaRule r9;
        org.apache.batik.css.engine.sac.ExtendedSelector r8;

        r2 := @this: org.apache.batik.css.engine.CSSEngine;

        r4 := @parameter0: java.util.Set;

        r0 := @parameter1: org.apache.batik.css.engine.StyleSheet;

        $i0 = virtualinvoke r0.<org.apache.batik.css.engine.StyleSheet: int getSize()>();

        i3 = 0;

        goto label7;

     label1:
        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule getRule(int)>(i3);

        $s1 = interfaceinvoke $r1.<org.apache.batik.css.engine.Rule: short getType()>();

        $i5 = (int) $s1;

        tableswitch($i5)
        {
            case 0: goto label2;
            case 1: goto label5;
            case 2: goto label5;
            default: goto label6;
        };

     label2:
        r5 = (org.apache.batik.css.engine.StyleRule) $r1;

        $r6 = virtualinvoke r5.<org.apache.batik.css.engine.StyleRule: org.w3c.css.sac.SelectorList getSelectorList()>();

        $i2 = interfaceinvoke $r6.<org.w3c.css.sac.SelectorList: int getLength()>();

        i4 = 0;

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<org.w3c.css.sac.SelectorList: org.w3c.css.sac.Selector item(int)>(i4);

        r8 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r7;

        interfaceinvoke r8.<org.apache.batik.css.engine.sac.ExtendedSelector: void fillAttributeSet(java.util.Set)>(r4);

        i4 = i4 + 1;

     label4:
        if i4 < $i2 goto label3;

        goto label6;

     label5:
        r9 = (org.apache.batik.css.engine.MediaRule) $r1;

        $r3 = virtualinvoke r9.<org.apache.batik.css.engine.MediaRule: org.w3c.css.sac.SACMediaList getMediaList()>();

        $z0 = virtualinvoke r2.<org.apache.batik.css.engine.CSSEngine: boolean mediaMatch(org.w3c.css.sac.SACMediaList)>($r3);

        if $z0 == 0 goto label6;

        virtualinvoke r2.<org.apache.batik.css.engine.CSSEngine: void findSelectorAttributes(java.util.Set,org.apache.batik.css.engine.StyleSheet)>(r4, r9);

     label6:
        i3 = i3 + 1;

     label7:
        if i3 < $i0 goto label1;

        return;
    }

    public void setMainProperties(org.apache.batik.css.engine.CSSStylableElement, org.apache.batik.css.engine.CSSEngine$MainPropertyReceiver, java.lang.String, java.lang.String, boolean)
    {
        java.lang.Throwable $r8;
        org.apache.batik.css.parser.ExtendedParser $r3;
        java.lang.Object[] $r13;
        org.apache.batik.css.engine.CSSStylableElement r1;
        org.apache.batik.css.engine.CSSEngine$MainPropertyReceiver r6;
        org.apache.batik.css.engine.CSSEngine r0;
        org.w3c.dom.DOMException $r15;
        org.w3c.css.sac.LexicalUnit $r4;
        java.lang.String r2, r7, $r10, $r14, r18, $r19;
        org.apache.batik.css.engine.CSSEngine$2 $r5;
        boolean z0;
        org.apache.batik.css.engine.CSSEngineUserAgent $r16, $r17;
        java.lang.Exception $r9;
        org.apache.batik.util.ParsedURL $r11, $r12;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r6 := @parameter1: org.apache.batik.css.engine.CSSEngine$MainPropertyReceiver;

        r7 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

     label01:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = r1;

        $r3 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.parser.ExtendedParser: org.w3c.css.sac.LexicalUnit parsePropertyValue(java.lang.String)>(r2);

        $r5 = new org.apache.batik.css.engine.CSSEngine$2;

        specialinvoke $r5.<org.apache.batik.css.engine.CSSEngine$2: void <init>(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.CSSEngine$MainPropertyReceiver)>(r0, r6);

        interfaceinvoke $r5.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>(r7, $r4, z0);

     label02:
        goto label13;

     label03:
        goto label12;

     label04:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String getMessage()>();

        r18 = $r10;

        if $r10 != null goto label05;

        r18 = "";

     label05:
        $r11 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r11 != null goto label06;

        $r19 = "<unknown>";

        goto label07;

     label06:
        $r12 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r19 = virtualinvoke $r12.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label07:
        $r13 = newarray (java.lang.Object)[4];

        $r13[0] = $r19;

        $r13[1] = r7;

        $r13[2] = r2;

        $r13[3] = r18;

        $r14 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("property.syntax.error.at", $r13);

        $r15 = new org.w3c.dom.DOMException;

        specialinvoke $r15.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r14);

        $r16 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r16 != null goto label08;

        throw $r15;

     label08:
        $r17 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r17.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r15);

        goto label14;

     label09:
        goto label12;

     label10:
        $r8 := @caughtexception;

        goto label15;

     label11:
        throw $r8;

     label12:
        return;

     label13:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label03;

     label14:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label09;

     label15:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label11;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label10 with label10;
    }

    public org.apache.batik.css.engine.value.Value parsePropertyValue(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.batik.css.parser.ExtendedParser $r6;
        java.lang.Object[] $r14;
        org.apache.batik.css.engine.CSSStylableElement r4;
        org.apache.batik.css.engine.CSSEngine r0;
        org.w3c.dom.DOMException $r22;
        int $i0, $i2;
        org.w3c.css.sac.LexicalUnit $r7;
        java.lang.String r1, r5, $r11, $r15, r20, $r21;
        org.apache.batik.css.engine.value.ValueManager[] $r2;
        org.apache.batik.css.engine.CSSEngineUserAgent $r17, $r18;
        org.apache.batik.css.engine.value.Value $r8, $r19;
        java.lang.Exception $r10;
        org.apache.batik.util.ParsedURL $r12, $r13;
        org.apache.batik.css.engine.value.ValueManager r3;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r4 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>(r1);

        $i2 = (int) -1;

        if $i0 != $i2 goto label01;

        return null;

     label01:
        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers>;

        r3 = $r2[$i0];

     label02:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = r4;

        $r6 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.css.parser.ExtendedParser: org.w3c.css.sac.LexicalUnit parsePropertyValue(java.lang.String)>(r5);

        $r8 = interfaceinvoke r3.<org.apache.batik.css.engine.value.ValueManager: org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit,org.apache.batik.css.engine.CSSEngine)>($r7, r0);

        goto label13;

     label03:
        return $r8;

     label04:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String getMessage()>();

        r20 = $r11;

        if $r11 != null goto label05;

        r20 = "";

     label05:
        $r12 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r12 != null goto label06;

        $r21 = "<unknown>";

        goto label07;

     label06:
        $r13 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r21 = virtualinvoke $r13.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label07:
        $r14 = newarray (java.lang.Object)[4];

        $r14[0] = $r21;

        $r14[1] = r1;

        $r14[2] = r5;

        $r14[3] = r20;

        $r15 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("property.syntax.error.at", $r14);

        $r22 = new org.w3c.dom.DOMException;

        specialinvoke $r22.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r15);

        $r17 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r17 != null goto label08;

        throw $r22;

     label08:
        $r18 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r18.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r22);

        goto label14;

     label09:
        goto label12;

     label10:
        $r9 := @caughtexception;

        goto label15;

     label11:
        throw $r9;

     label12:
        $r19 = interfaceinvoke r3.<org.apache.batik.css.engine.value.ValueManager: org.apache.batik.css.engine.value.Value getDefaultValue()>();

        return $r19;

     label13:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label03;

     label14:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label09;

     label15:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label11;

        catch java.lang.Exception from label02 to label04 with label04;
        catch java.lang.Throwable from label02 to label10 with label10;
    }

    public org.apache.batik.css.engine.StyleDeclaration parseStyleDeclaration(org.apache.batik.css.engine.CSSStylableElement, java.lang.String)
    {
        java.lang.Throwable $r14;
        org.apache.batik.css.parser.ExtendedParser $r5, $r7, $r9, $r11;
        java.lang.Object[] $r19;
        org.apache.batik.css.engine.CSSStylableElement r3;
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder $r2, $r8, $r12;
        org.apache.batik.css.engine.sac.CSSConditionFactory $r6;
        org.w3c.dom.DOMException $r21;
        java.lang.String r10, $r16, $r20, r24, $r25;
        org.w3c.css.sac.SelectorFactory $r4;
        org.apache.batik.css.engine.StyleDeclaration $r1, $r13;
        org.apache.batik.css.engine.CSSEngineUserAgent $r22, $r23;
        java.lang.Exception $r15;
        org.apache.batik.util.ParsedURL $r17, $r18;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r3 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r10 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder styleDeclarationBuilder>;

        $r1 = new org.apache.batik.css.engine.StyleDeclaration;

        specialinvoke $r1.<org.apache.batik.css.engine.StyleDeclaration: void <init>()>();

        $r2.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder: org.apache.batik.css.engine.StyleDeclaration styleDeclaration> = $r1;

     label01:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = r3;

        $r5 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r4 = <org.apache.batik.css.engine.sac.CSSSelectorFactory: org.w3c.css.sac.SelectorFactory INSTANCE>;

        interfaceinvoke $r5.<org.w3c.css.sac.Parser: void setSelectorFactory(org.w3c.css.sac.SelectorFactory)>($r4);

        $r7 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r6 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.sac.CSSConditionFactory cssConditionFactory>;

        interfaceinvoke $r7.<org.w3c.css.sac.Parser: void setConditionFactory(org.w3c.css.sac.ConditionFactory)>($r6);

        $r9 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r8 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder styleDeclarationBuilder>;

        interfaceinvoke $r9.<org.w3c.css.sac.Parser: void setDocumentHandler(org.w3c.css.sac.DocumentHandler)>($r8);

        $r11 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        interfaceinvoke $r11.<org.apache.batik.css.parser.ExtendedParser: void parseStyleDeclaration(java.lang.String)>(r10);

     label02:
        goto label13;

     label03:
        goto label12;

     label04:
        $r15 := @caughtexception;

        $r16 = virtualinvoke $r15.<java.lang.Throwable: java.lang.String getMessage()>();

        r24 = $r16;

        if $r16 != null goto label05;

        r24 = "";

     label05:
        $r17 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r17 != null goto label06;

        $r25 = "<unknown>";

        goto label07;

     label06:
        $r18 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r25 = virtualinvoke $r18.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label07:
        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = $r25;

        $r19[1] = r24;

        $r20 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("syntax.error.at", $r19);

        $r21 = new org.w3c.dom.DOMException;

        specialinvoke $r21.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r20);

        $r22 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r22 != null goto label08;

        throw $r21;

     label08:
        $r23 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r23.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r21);

        goto label14;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        goto label15;

     label11:
        throw $r14;

     label12:
        $r12 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder styleDeclarationBuilder>;

        $r13 = $r12.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationBuilder: org.apache.batik.css.engine.StyleDeclaration styleDeclaration>;

        return $r13;

     label13:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label03;

     label14:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label09;

     label15:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label11;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label10 with label10;
    }

    public org.apache.batik.css.engine.StyleSheet parseStyleSheet(org.apache.batik.util.ParsedURL, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.parser.ExtendedParser $r3;
        java.lang.Object[] $r10;
        org.apache.batik.css.engine.CSSEngine r1;
        org.apache.batik.css.engine.StyleSheet $r0;
        org.w3c.dom.DOMException $r12;
        java.lang.String r2, $r7, $r11, r15, $r16;
        org.apache.batik.css.engine.CSSEngineUserAgent $r13, $r14;
        java.lang.Exception $r6;
        org.w3c.css.sac.SACMediaList $r4;
        org.apache.batik.util.ParsedURL r5, $r8, $r9;

        r1 := @this: org.apache.batik.css.engine.CSSEngine;

        r5 := @parameter0: org.apache.batik.util.ParsedURL;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.css.engine.StyleSheet;

        specialinvoke $r0.<org.apache.batik.css.engine.StyleSheet: void <init>()>();

     label1:
        $r3 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.parser.ExtendedParser: org.w3c.css.sac.SACMediaList parseMedia(java.lang.String)>(r2);

        virtualinvoke $r0.<org.apache.batik.css.engine.StyleSheet: void setMedia(org.w3c.css.sac.SACMediaList)>($r4);

     label2:
        goto label8;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        r15 = $r7;

        if $r7 != null goto label4;

        r15 = "";

     label4:
        $r8 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r8 != null goto label5;

        $r16 = "<unknown>";

        goto label6;

     label5:
        $r9 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r16 = virtualinvoke $r9.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label6:
        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r16;

        $r10[1] = r15;

        $r11 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("syntax.error.at", $r10);

        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r11);

        $r13 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r13 != null goto label7;

        throw $r12;

     label7:
        $r14 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r14.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r12);

        return $r0;

     label8:
        virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: void parseStyleSheet(org.apache.batik.css.engine.StyleSheet,org.apache.batik.util.ParsedURL)>($r0, r5);

        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public org.apache.batik.css.engine.StyleSheet parseStyleSheet(org.w3c.css.sac.InputSource, org.apache.batik.util.ParsedURL, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.parser.ExtendedParser $r3;
        java.lang.Object[] $r11;
        org.apache.batik.css.engine.CSSEngine r1;
        org.apache.batik.css.engine.StyleSheet $r0;
        org.w3c.dom.DOMException $r13;
        java.lang.String r2, $r8, $r12, r16, $r17;
        org.apache.batik.css.engine.CSSEngineUserAgent $r14, $r15;
        org.w3c.css.sac.InputSource r5;
        java.lang.Exception $r7;
        org.w3c.css.sac.SACMediaList $r4;
        org.apache.batik.util.ParsedURL r6, $r9, $r10;

        r1 := @this: org.apache.batik.css.engine.CSSEngine;

        r5 := @parameter0: org.w3c.css.sac.InputSource;

        r6 := @parameter1: org.apache.batik.util.ParsedURL;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.apache.batik.css.engine.StyleSheet;

        specialinvoke $r0.<org.apache.batik.css.engine.StyleSheet: void <init>()>();

     label1:
        $r3 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.parser.ExtendedParser: org.w3c.css.sac.SACMediaList parseMedia(java.lang.String)>(r2);

        virtualinvoke $r0.<org.apache.batik.css.engine.StyleSheet: void setMedia(org.w3c.css.sac.SACMediaList)>($r4);

        virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: void parseStyleSheet(org.apache.batik.css.engine.StyleSheet,org.w3c.css.sac.InputSource,org.apache.batik.util.ParsedURL)>($r0, r5, r6);

     label2:
        goto label8;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        r16 = $r8;

        if $r8 != null goto label4;

        r16 = "";

     label4:
        $r9 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r9 != null goto label5;

        $r17 = "<unknown>";

        goto label6;

     label5:
        $r10 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r17 = virtualinvoke $r10.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label6:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r17;

        $r11[1] = r16;

        $r12 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("syntax.error.at", $r11);

        $r13 = new org.w3c.dom.DOMException;

        specialinvoke $r13.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r12);

        $r14 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r14 != null goto label7;

        throw $r13;

     label7:
        $r15 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r15.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r13);

     label8:
        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void parseStyleSheet(org.apache.batik.css.engine.StyleSheet, org.apache.batik.util.ParsedURL) throws org.w3c.dom.DOMException
    {
        java.lang.Object[] $r7, $r14;
        org.apache.batik.css.engine.CSSEngine r1;
        org.apache.batik.css.engine.StyleSheet r4;
        org.w3c.dom.DOMException $r9, $r17;
        java.lang.SecurityException $r21;
        java.lang.String $r6, $r8, $r13, $r15, $r16, r22;
        org.apache.batik.css.engine.CSSEngineUserAgent $r10, $r11, $r18, $r19;
        org.w3c.css.sac.InputSource $r5;
        org.apache.batik.css.engine.CSSContext $r3;
        java.lang.Exception $r12;
        org.apache.batik.util.ParsedURL r0, $r2;
        java.lang.Class $r20;

        r1 := @this: org.apache.batik.css.engine.CSSEngine;

        r4 := @parameter0: org.apache.batik.css.engine.StyleSheet;

        r0 := @parameter1: org.apache.batik.util.ParsedURL;

        if r0 != null goto label2;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "Null Document reference";

        $r7[1] = "";

        $r8 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("syntax.error.at", $r7);

        $r9 = new org.w3c.dom.DOMException;

        specialinvoke $r9.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r8);

        $r10 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r10 != null goto label1;

        throw $r9;

     label1:
        $r11 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r11.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r9);

        return;

     label2:
        $r3 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext cssContext>;

        $r2 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        interfaceinvoke $r3.<org.apache.batik.css.engine.CSSContext: void checkLoadExternalResource(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>(r0, $r2);

        $r5 = new org.w3c.css.sac.InputSource;

        $r6 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        specialinvoke $r5.<org.w3c.css.sac.InputSource: void <init>(java.lang.String)>($r6);

        virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: void parseStyleSheet(org.apache.batik.css.engine.StyleSheet,org.w3c.css.sac.InputSource,org.apache.batik.util.ParsedURL)>(r4, $r5, r0);

     label3:
        goto label8;

     label4:
        $r21 := @caughtexception;

        throw $r21;

     label5:
        $r12 := @caughtexception;

        $r13 = virtualinvoke $r12.<java.lang.Throwable: java.lang.String getMessage()>();

        r22 = $r13;

        if $r13 != null goto label6;

        $r20 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        r22 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

     label6:
        $r14 = newarray (java.lang.Object)[2];

        $r15 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        $r14[0] = $r15;

        $r14[1] = r22;

        $r16 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("syntax.error.at", $r14);

        $r17 = new org.w3c.dom.DOMException;

        specialinvoke $r17.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r16);

        $r18 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r18 != null goto label7;

        throw $r17;

     label7:
        $r19 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r19.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r17);

     label8:
        return;

        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    public org.apache.batik.css.engine.StyleSheet parseStyleSheet(java.lang.String, org.apache.batik.util.ParsedURL, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.parser.ExtendedParser $r3;
        java.lang.Object[] $r11;
        org.apache.batik.css.engine.CSSEngine r1;
        org.apache.batik.css.engine.StyleSheet $r0;
        org.w3c.dom.DOMException $r13;
        java.lang.String r2, r5, $r8, $r12, r16, $r17;
        org.apache.batik.css.engine.CSSEngineUserAgent $r14, $r15;
        java.lang.Exception $r7;
        org.w3c.css.sac.SACMediaList $r4;
        org.apache.batik.util.ParsedURL r6, $r9, $r10;

        r1 := @this: org.apache.batik.css.engine.CSSEngine;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: org.apache.batik.util.ParsedURL;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.apache.batik.css.engine.StyleSheet;

        specialinvoke $r0.<org.apache.batik.css.engine.StyleSheet: void <init>()>();

     label1:
        $r3 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.parser.ExtendedParser: org.w3c.css.sac.SACMediaList parseMedia(java.lang.String)>(r2);

        virtualinvoke $r0.<org.apache.batik.css.engine.StyleSheet: void setMedia(org.w3c.css.sac.SACMediaList)>($r4);

     label2:
        goto label8;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        r16 = $r8;

        if $r8 != null goto label4;

        r16 = "";

     label4:
        $r9 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r9 != null goto label5;

        $r17 = "<unknown>";

        goto label6;

     label5:
        $r10 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r17 = virtualinvoke $r10.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label6:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r17;

        $r11[1] = r16;

        $r12 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("syntax.error.at", $r11);

        $r13 = new org.w3c.dom.DOMException;

        specialinvoke $r13.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r12);

        $r14 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r14 != null goto label7;

        throw $r13;

     label7:
        $r15 = r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r15.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r13);

        return $r0;

     label8:
        virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: void parseStyleSheet(org.apache.batik.css.engine.StyleSheet,java.lang.String,org.apache.batik.util.ParsedURL)>($r0, r5, r6);

        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void parseStyleSheet(org.apache.batik.css.engine.StyleSheet, java.lang.String, org.apache.batik.util.ParsedURL) throws org.w3c.dom.DOMException
    {
        java.lang.Object[] $r8;
        org.apache.batik.css.engine.CSSEngineUserAgent $r12, $r13;
        org.w3c.css.sac.InputSource $r2;
        org.apache.batik.css.engine.CSSEngine r0;
        java.lang.Exception $r6;
        org.apache.batik.css.engine.StyleSheet r1;
        java.io.StringReader $r3;
        org.apache.batik.util.ParsedURL r5;
        org.w3c.dom.DOMException $r11;
        java.lang.String r4, $r7, $r9, $r10, r14;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.apache.batik.css.engine.StyleSheet;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: org.apache.batik.util.ParsedURL;

     label1:
        $r2 = new org.w3c.css.sac.InputSource;

        $r3 = new java.io.StringReader;

        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>(r4);

        specialinvoke $r2.<org.w3c.css.sac.InputSource: void <init>(java.io.Reader)>($r3);

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void parseStyleSheet(org.apache.batik.css.engine.StyleSheet,org.w3c.css.sac.InputSource,org.apache.batik.util.ParsedURL)>(r1, $r2, r5);

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        r14 = $r7;

        if $r7 != null goto label4;

        r14 = "";

     label4:
        $r8 = newarray (java.lang.Object)[3];

        $r9 = virtualinvoke r5.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        $r8[0] = $r9;

        $r8[1] = r4;

        $r8[2] = r14;

        $r10 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("stylesheet.syntax.error", $r8);

        $r11 = new org.w3c.dom.DOMException;

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r10);

        $r12 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r12 != null goto label5;

        throw $r11;

     label5:
        $r13 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r13.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r11);

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void parseStyleSheet(org.apache.batik.css.engine.StyleSheet, org.w3c.css.sac.InputSource, org.apache.batik.util.ParsedURL) throws java.io.IOException
    {
        java.lang.Throwable $r15;
        org.apache.batik.css.parser.ExtendedParser $r2, $r4, $r9, $r11;
        org.apache.batik.css.engine.ImportRule r13;
        org.apache.batik.css.engine.Rule $r12;
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.sac.CSSConditionFactory $r3;
        org.apache.batik.css.engine.StyleSheet r6;
        short $s1;
        int $i0, i2, $i3;
        org.w3c.css.sac.SelectorFactory $r1;
        org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler $r7, $r8;
        org.w3c.css.sac.InputSource r10;
        org.apache.batik.util.ParsedURL r5, $r14;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r6 := @parameter0: org.apache.batik.css.engine.StyleSheet;

        r10 := @parameter1: org.w3c.css.sac.InputSource;

        r5 := @parameter2: org.apache.batik.util.ParsedURL;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r1 = <org.apache.batik.css.engine.sac.CSSSelectorFactory: org.w3c.css.sac.SelectorFactory INSTANCE>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void setSelectorFactory(org.w3c.css.sac.SelectorFactory)>($r1);

        $r4 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r3 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.sac.CSSConditionFactory cssConditionFactory>;

        interfaceinvoke $r4.<org.w3c.css.sac.Parser: void setConditionFactory(org.w3c.css.sac.ConditionFactory)>($r3);

     label01:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = r5;

        $r7 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler styleSheetDocumentHandler>;

        $r7.<org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler: org.apache.batik.css.engine.StyleSheet styleSheet> = r6;

        $r9 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r8 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleSheetDocumentHandler styleSheetDocumentHandler>;

        interfaceinvoke $r9.<org.w3c.css.sac.Parser: void setDocumentHandler(org.w3c.css.sac.DocumentHandler)>($r8);

        $r11 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        interfaceinvoke $r11.<org.w3c.css.sac.Parser: void parseStyleSheet(org.w3c.css.sac.InputSource)>(r10);

        $i0 = virtualinvoke r6.<org.apache.batik.css.engine.StyleSheet: int getSize()>();

        i2 = 0;

        goto label04;

     label02:
        $r12 = virtualinvoke r6.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule getRule(int)>(i2);

        $s1 = interfaceinvoke $r12.<org.apache.batik.css.engine.Rule: short getType()>();

        $i3 = (int) $s1;

        if $i3 == 2 goto label03;

        goto label05;

     label03:
        r13 = (org.apache.batik.css.engine.ImportRule) $r12;

        $r14 = virtualinvoke r13.<org.apache.batik.css.engine.ImportRule: org.apache.batik.util.ParsedURL getURI()>();

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void parseStyleSheet(org.apache.batik.css.engine.StyleSheet,org.apache.batik.util.ParsedURL)>(r13, $r14);

        i2 = i2 + 1;

     label04:
        if i2 < $i0 goto label02;

     label05:
        goto label10;

     label06:
        goto label09;

     label07:
        $r15 := @caughtexception;

        goto label11;

     label08:
        throw $r15;

     label09:
        return;

     label10:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label06;

     label11:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label08;

        catch java.lang.Throwable from label01 to label07 with label07;
    }

    protected void putAuthorProperty(org.apache.batik.css.engine.StyleMap, int, org.apache.batik.css.engine.value.Value, boolean, short)
    {
        org.apache.batik.css.engine.value.Value $r1, r2;
        org.apache.batik.css.engine.CSSEngine r3;
        short $s1, s2;
        org.apache.batik.css.engine.StyleMap r0;
        int i0, $i3;
        boolean $z0, z1, z3, $z4, $z5, $z6, $z7;

        r3 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.apache.batik.css.engine.StyleMap;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.batik.css.engine.value.Value;

        z1 := @parameter3: boolean;

        s2 := @parameter4: short;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: org.apache.batik.css.engine.value.Value getValue(int)>(i0);

        $s1 = virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: short getOrigin(int)>(i0);

        $z0 = virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: boolean isImportant(int)>(i0);

        if $r1 != null goto label01;

        $z7 = 1;

        $z6 = 1;

        goto label02;

     label01:
        $z7 = 0;

        $z6 = 0;

     label02:
        z3 = $z7;

        if $z6 != 0 goto label12;

        $i3 = (int) $s1;

        lookupswitch($i3)
        {
            case -24576: goto label10;
            case 8192: goto label03;
            case 24576: goto label06;
            default: goto label11;
        };

     label03:
        if $z0 != 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        z3 = $z4;

        goto label12;

     label06:
        if $z0 == 0 goto label07;

        if z1 == 0 goto label08;

     label07:
        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        z3 = $z5;

        goto label12;

     label10:
        z3 = 0;

        goto label12;

     label11:
        z3 = 1;

     label12:
        if z3 == 0 goto label13;

        virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>(i0, r2);

        virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: void putImportant(int,boolean)>(i0, z1);

        virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: void putOrigin(int,short)>(i0, s2);

     label13:
        return;
    }

    protected void addMatchingRules(java.util.List, org.apache.batik.css.engine.StyleSheet, org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.css.sac.SelectorList $r8;
        org.apache.batik.css.engine.Rule $r1;
        org.w3c.css.sac.Selector $r9;
        org.apache.batik.css.engine.CSSEngine r2;
        org.apache.batik.css.engine.StyleSheet r0;
        short $s1;
        int $i0, $i2, i3, i4, $i5;
        java.lang.String r6;
        boolean $z0, $z1;
        org.apache.batik.css.engine.StyleRule r7;
        java.util.List r4;
        org.w3c.dom.Element r5;
        org.w3c.css.sac.SACMediaList $r3;
        org.apache.batik.css.engine.MediaRule r11;
        org.apache.batik.css.engine.sac.ExtendedSelector r10;

        r2 := @this: org.apache.batik.css.engine.CSSEngine;

        r4 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.batik.css.engine.StyleSheet;

        r5 := @parameter2: org.w3c.dom.Element;

        r6 := @parameter3: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.batik.css.engine.StyleSheet: int getSize()>();

        i3 = 0;

        goto label8;

     label1:
        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule getRule(int)>(i3);

        $s1 = interfaceinvoke $r1.<org.apache.batik.css.engine.Rule: short getType()>();

        $i5 = (int) $s1;

        tableswitch($i5)
        {
            case 0: goto label2;
            case 1: goto label6;
            case 2: goto label6;
            default: goto label7;
        };

     label2:
        r7 = (org.apache.batik.css.engine.StyleRule) $r1;

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.StyleRule: org.w3c.css.sac.SelectorList getSelectorList()>();

        $i2 = interfaceinvoke $r8.<org.w3c.css.sac.SelectorList: int getLength()>();

        i4 = 0;

        goto label5;

     label3:
        $r9 = interfaceinvoke $r8.<org.w3c.css.sac.SelectorList: org.w3c.css.sac.Selector item(int)>(i4);

        r10 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r9;

        $z1 = interfaceinvoke r10.<org.apache.batik.css.engine.sac.ExtendedSelector: boolean match(org.w3c.dom.Element,java.lang.String)>(r5, r6);

        if $z1 == 0 goto label4;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7);

     label4:
        i4 = i4 + 1;

     label5:
        if i4 < $i2 goto label3;

        goto label7;

     label6:
        r11 = (org.apache.batik.css.engine.MediaRule) $r1;

        $r3 = virtualinvoke r11.<org.apache.batik.css.engine.MediaRule: org.w3c.css.sac.SACMediaList getMediaList()>();

        $z0 = virtualinvoke r2.<org.apache.batik.css.engine.CSSEngine: boolean mediaMatch(org.w3c.css.sac.SACMediaList)>($r3);

        if $z0 == 0 goto label7;

        virtualinvoke r2.<org.apache.batik.css.engine.CSSEngine: void addMatchingRules(java.util.List,org.apache.batik.css.engine.StyleSheet,org.w3c.dom.Element,java.lang.String)>(r4, r11, r5, r6);

     label7:
        i3 = i3 + 1;

     label8:
        if i3 < $i0 goto label1;

        return;
    }

    protected void addRules(org.w3c.dom.Element, java.lang.String, org.apache.batik.css.engine.StyleMap, java.util.ArrayList, short)
    {
        org.apache.batik.css.engine.CSSEngine r0;
        java.util.ArrayList r1;
        short s1;
        org.apache.batik.css.engine.StyleMap r6;
        int $i0, $i2, $i3, $i4, $i5, i6, i7, i8, i9, $i10;
        java.lang.String r3;
        boolean $z0, $z1;
        org.apache.batik.css.engine.StyleDeclaration $r5, $r9;
        org.apache.batik.css.engine.StyleRule r11, r12;
        org.apache.batik.css.engine.value.Value $r7, $r10;
        org.w3c.dom.Element r2;
        java.lang.Object $r4, $r8;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r2 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: org.apache.batik.css.engine.StyleMap;

        r1 := @parameter3: java.util.ArrayList;

        s1 := @parameter4: short;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void sortRules(java.util.ArrayList,org.w3c.dom.Element,java.lang.String)>(r1, r2, r3);

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i10 = (int) s1;

        if $i10 != 24576 goto label05;

        i6 = 0;

        goto label04;

     label01:
        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r11 = (org.apache.batik.css.engine.StyleRule) $r8;

        $r9 = virtualinvoke r11.<org.apache.batik.css.engine.StyleRule: org.apache.batik.css.engine.StyleDeclaration getStyleDeclaration()>();

        $i4 = virtualinvoke $r9.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        i7 = 0;

        goto label03;

     label02:
        $i5 = virtualinvoke $r9.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i7);

        $r10 = virtualinvoke $r9.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value getValue(int)>(i7);

        $z1 = virtualinvoke $r9.<org.apache.batik.css.engine.StyleDeclaration: boolean getPriority(int)>(i7);

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void putAuthorProperty(org.apache.batik.css.engine.StyleMap,int,org.apache.batik.css.engine.value.Value,boolean,short)>(r6, $i5, $r10, $z1, s1);

        i7 = i7 + 1;

     label03:
        if i7 < $i4 goto label02;

        i6 = i6 + 1;

     label04:
        if i6 < $i0 goto label01;

        goto label10;

     label05:
        i8 = 0;

        goto label09;

     label06:
        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r12 = (org.apache.batik.css.engine.StyleRule) $r4;

        $r5 = virtualinvoke r12.<org.apache.batik.css.engine.StyleRule: org.apache.batik.css.engine.StyleDeclaration getStyleDeclaration()>();

        $i2 = virtualinvoke $r5.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        i9 = 0;

        goto label08;

     label07:
        $i3 = virtualinvoke $r5.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i9);

        $r7 = virtualinvoke $r5.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value getValue(int)>(i9);

        virtualinvoke r6.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>($i3, $r7);

        $z0 = virtualinvoke $r5.<org.apache.batik.css.engine.StyleDeclaration: boolean getPriority(int)>(i9);

        virtualinvoke r6.<org.apache.batik.css.engine.StyleMap: void putImportant(int,boolean)>($i3, $z0);

        virtualinvoke r6.<org.apache.batik.css.engine.StyleMap: void putOrigin(int,short)>($i3, s1);

        i9 = i9 + 1;

     label08:
        if i9 < $i2 goto label07;

        i8 = i8 + 1;

     label09:
        if i8 < $i0 goto label06;

     label10:
        return;
    }

    protected void sortRules(java.util.ArrayList, org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.css.sac.SelectorList $r3;
        org.w3c.css.sac.Selector $r4;
        org.apache.batik.css.engine.CSSEngine r10;
        java.util.ArrayList r0;
        int[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, $i16;
        java.lang.String r7;
        boolean $z0;
        org.apache.batik.css.engine.StyleRule r11;
        org.w3c.dom.Element r6;
        java.lang.Object $r2, $r8, $r9;
        org.apache.batik.css.engine.sac.ExtendedSelector r5;

        r10 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: java.util.ArrayList;

        r6 := @parameter1: org.w3c.dom.Element;

        r7 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        r1 = newarray (int)[$i0];

        i9 = 0;

        goto label05;

     label01:
        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r11 = (org.apache.batik.css.engine.StyleRule) $r2;

        $r3 = virtualinvoke r11.<org.apache.batik.css.engine.StyleRule: org.w3c.css.sac.SelectorList getSelectorList()>();

        i10 = 0;

        $i1 = interfaceinvoke $r3.<org.w3c.css.sac.SelectorList: int getLength()>();

        i11 = 0;

        goto label04;

     label02:
        $r4 = interfaceinvoke $r3.<org.w3c.css.sac.SelectorList: org.w3c.css.sac.Selector item(int)>(i11);

        r5 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r4;

        $z0 = interfaceinvoke r5.<org.apache.batik.css.engine.sac.ExtendedSelector: boolean match(org.w3c.dom.Element,java.lang.String)>(r6, r7);

        if $z0 == 0 goto label03;

        $i2 = interfaceinvoke r5.<org.apache.batik.css.engine.sac.ExtendedSelector: int getSpecificity()>();

        if $i2 <= i10 goto label03;

        i10 = $i2;

     label03:
        i11 = i11 + 1;

     label04:
        if i11 < $i1 goto label02;

        r1[i9] = i10;

        i9 = i9 + 1;

     label05:
        if i9 < $i0 goto label01;

        i12 = 1;

        goto label10;

     label06:
        $r8 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        i13 = r1[i12];

        i14 = i12 - 1;

        goto label08;

     label07:
        $i6 = i14 + 1;

        $r9 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i6, $r9);

        $i8 = i14 + 1;

        $i7 = r1[i14];

        r1[$i8] = $i7;

        $i16 = (int) -1;

        i14 = i14 + $i16;

     label08:
        if i14 < 0 goto label09;

        $i5 = r1[i14];

        if $i5 > i13 goto label07;

     label09:
        $i3 = i14 + 1;

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i3, $r8);

        $i4 = i14 + 1;

        r1[$i4] = i13;

        i12 = i12 + 1;

     label10:
        if i12 < $i0 goto label06;

        return;
    }

    protected boolean mediaMatch(org.w3c.css.sac.SACMediaList)
    {
        org.apache.batik.css.engine.CSSEngine r0;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r4, $r7, $r8, $r10;
        boolean $z0, $z1, $z2;
        org.w3c.css.sac.SACMediaList $r1, r2, $r3, $r5, $r6, $r9;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r2 := @parameter0: org.w3c.css.sac.SACMediaList;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.css.sac.SACMediaList media>;

        if $r1 == null goto label1;

        if r2 == null goto label1;

        $r3 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.css.sac.SACMediaList media>;

        $i0 = interfaceinvoke $r3.<org.w3c.css.sac.SACMediaList: int getLength()>();

        if $i0 == 0 goto label1;

        $i1 = interfaceinvoke r2.<org.w3c.css.sac.SACMediaList: int getLength()>();

        if $i1 != 0 goto label2;

     label1:
        return 1;

     label2:
        i4 = 0;

        goto label9;

     label3:
        $r4 = interfaceinvoke r2.<org.w3c.css.sac.SACMediaList: java.lang.String item(int)>(i4);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("all");

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i5 = 0;

        goto label8;

     label5:
        $r6 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.css.sac.SACMediaList media>;

        $r7 = interfaceinvoke $r6.<org.w3c.css.sac.SACMediaList: java.lang.String item(int)>(i5);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("all");

        if $z1 != 0 goto label6;

        $r8 = interfaceinvoke r2.<org.w3c.css.sac.SACMediaList: java.lang.String item(int)>(i4);

        $r9 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.css.sac.SACMediaList media>;

        $r10 = interfaceinvoke $r9.<org.w3c.css.sac.SACMediaList: java.lang.String item(int)>(i5);

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if $z2 == 0 goto label7;

     label6:
        return 1;

     label7:
        i5 = i5 + 1;

     label8:
        $r5 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.css.sac.SACMediaList media>;

        $i3 = interfaceinvoke $r5.<org.w3c.css.sac.SACMediaList: int getLength()>();

        if i5 < $i3 goto label5;

        i4 = i4 + 1;

     label9:
        $i2 = interfaceinvoke r2.<org.w3c.css.sac.SACMediaList: int getLength()>();

        if i4 < $i2 goto label3;

        return 0;
    }

    public void addCSSEngineListener(org.apache.batik.css.engine.CSSEngineListener)
    {
        java.util.List $r2;
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.CSSEngineListener r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngineListener;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeCSSEngineListener(org.apache.batik.css.engine.CSSEngineListener)
    {
        java.util.List $r2;
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.CSSEngineListener r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngineListener;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    protected void firePropertiesChangedEvent(org.w3c.dom.Element, int[])
    {
        java.lang.Object[] $r3;
        org.apache.batik.css.engine.CSSEngineListener[] $r1, r4;
        org.apache.batik.css.engine.CSSEngine r0;
        java.util.List $r2;
        org.w3c.dom.Element r6;
        int[] r7;
        org.apache.batik.css.engine.CSSEngineListener $r8;
        int i0, i1;
        org.apache.batik.css.engine.CSSEngineEvent $r5;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r6 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: int[];

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: java.util.List listeners>;

        $r1 = <org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineListener[] LISTENER_ARRAY>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        r4 = (org.apache.batik.css.engine.CSSEngineListener[]) $r3;

        i0 = lengthof r4;

        if i0 <= 0 goto label3;

        $r5 = new org.apache.batik.css.engine.CSSEngineEvent;

        specialinvoke $r5.<org.apache.batik.css.engine.CSSEngineEvent: void <init>(org.apache.batik.css.engine.CSSEngine,org.w3c.dom.Element,int[])>(r0, r6, r7);

        i1 = 0;

        goto label2;

     label1:
        $r8 = r4[i1];

        interfaceinvoke $r8.<org.apache.batik.css.engine.CSSEngineListener: void propertiesChanged(org.apache.batik.css.engine.CSSEngineEvent)>($r5);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        return;
    }

    protected void inlineStyleAttributeUpdated(org.apache.batik.css.engine.CSSStylableElement, org.apache.batik.css.engine.StyleMap, short, java.lang.String, java.lang.String)
    {
        org.apache.batik.css.engine.CSSStylableElement r5;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler $r1, $r11, $r12, $r15;
        org.apache.batik.css.engine.CSSEngineUserAgent $r26, $r27;
        java.lang.Exception $r18;
        org.apache.batik.util.ParsedURL $r20, $r21;
        java.lang.Throwable $r17;
        java.lang.Object[] $r22;
        short s1, $s13;
        java.lang.String r3, r6, $r19, $r23, $r24, r28, $r29;
        boolean[] r2;
        org.apache.batik.css.parser.ExtendedParser $r8, $r10, $r13, $r14;
        java.lang.IllegalStateException $r32;
        int[] r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, z9, $z10, z11, $z12, z13;
        org.apache.batik.css.engine.CSSEngine r0;
        org.apache.batik.css.engine.sac.CSSConditionFactory $r9;
        org.apache.batik.css.engine.StyleMap r4;
        org.w3c.dom.DOMException $r31;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, i15, i16, i17, i18, i19, i20, $i22, $i23, $i24, $i26, $i28, $i30, $i32, $i34, $i36, $i38;
        org.w3c.css.sac.SelectorFactory $r7;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r5 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r4 := @parameter1: org.apache.batik.css.engine.StyleMap;

        s1 := @parameter2: short;

        r3 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler styleDeclarationUpdateHandler>;

        r2 = $r1.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: boolean[] updatedProperties>;

        $i0 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i15 = $i0 - 1;

        goto label02;

     label01:
        r2[i15] = 0;

        $i22 = (int) -1;

        i15 = i15 + $i22;

     label02:
        if i15 >= 0 goto label01;

        $i23 = (int) s1;

        tableswitch($i23)
        {
            case 1: goto label03;
            case 2: goto label03;
            case 3: goto label15;
            default: goto label38;
        };

     label03:
        $i14 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i14 <= 0 goto label15;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = r5;

     label04:
        $r8 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r7 = <org.apache.batik.css.engine.sac.CSSSelectorFactory: org.w3c.css.sac.SelectorFactory INSTANCE>;

        interfaceinvoke $r8.<org.w3c.css.sac.Parser: void setSelectorFactory(org.w3c.css.sac.SelectorFactory)>($r7);

        $r10 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r9 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.sac.CSSConditionFactory cssConditionFactory>;

        interfaceinvoke $r10.<org.w3c.css.sac.Parser: void setConditionFactory(org.w3c.css.sac.ConditionFactory)>($r9);

        $r11 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler styleDeclarationUpdateHandler>;

        $r11.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.StyleMap styleMap> = r4;

        $r13 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r12 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler styleDeclarationUpdateHandler>;

        interfaceinvoke $r13.<org.w3c.css.sac.Parser: void setDocumentHandler(org.w3c.css.sac.DocumentHandler)>($r12);

        $r14 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        interfaceinvoke $r14.<org.apache.batik.css.parser.ExtendedParser: void parseStyleDeclaration(java.lang.String)>(r6);

        $r15 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler styleDeclarationUpdateHandler>;

        $r15.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.StyleMap styleMap> = null;

     label05:
        goto label40;

     label06:
        goto label15;

     label07:
        $r18 := @caughtexception;

        $r19 = virtualinvoke $r18.<java.lang.Throwable: java.lang.String getMessage()>();

        r28 = $r19;

        if $r19 != null goto label08;

        r28 = "";

     label08:
        $r20 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r20 != null goto label09;

        $r29 = "<unknown>";

        goto label10;

     label09:
        $r21 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r29 = virtualinvoke $r21.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label10:
        $r22 = newarray (java.lang.Object)[4];

        $r22[0] = $r29;

        $r23 = r0.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleLocalName>;

        $r22[1] = $r23;

        $r22[2] = r6;

        $r22[3] = r28;

        $r24 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("style.syntax.error.at", $r22);

        $r31 = new org.w3c.dom.DOMException;

        specialinvoke $r31.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r24);

        $r26 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r26 != null goto label11;

        throw $r31;

     label11:
        $r27 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r27.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r31);

        goto label41;

     label12:
        goto label15;

     label13:
        $r17 := @caughtexception;

        goto label42;

     label14:
        throw $r17;

     label15:
        z7 = 0;

        if r3 == null goto label19;

        $i11 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i11 <= 0 goto label19;

        $i12 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i16 = $i12 - 1;

        goto label18;

     label16:
        $z5 = virtualinvoke r4.<org.apache.batik.css.engine.StyleMap: boolean isComputed(int)>(i16);

        if $z5 == 0 goto label17;

        $z6 = r2[i16];

        if $z6 != 0 goto label17;

        $s13 = virtualinvoke r4.<org.apache.batik.css.engine.StyleMap: short getOrigin(int)>(i16);

        $i24 = (int) $s13;

        $i26 = (int) -32768;

        if $i24 < $i26 goto label17;

        z7 = 1;

        r2[i16] = 1;

     label17:
        $i28 = (int) -1;

        i16 = i16 + $i28;

     label18:
        if i16 >= 0 goto label16;

     label19:
        if z7 == 0 goto label20;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r5, null, r2, 1);

        goto label39;

     label20:
        i17 = 0;

        $i2 = r0.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex>;

        $i30 = (int) -1;

        if $i2 != $i30 goto label21;

        $z8 = 0;

        goto label22;

     label21:
        $i3 = r0.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex>;

        $z8 = r2[$i3];

     label22:
        z9 = $z8;

        $i4 = r0.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex>;

        $i32 = (int) -1;

        if $i4 != $i32 goto label23;

        $z10 = 0;

        goto label24;

     label23:
        $i5 = r0.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex>;

        $z10 = r2[$i5];

     label24:
        z11 = $z10;

        $i6 = r0.<org.apache.batik.css.engine.CSSEngine: int colorIndex>;

        $i34 = (int) -1;

        if $i6 != $i34 goto label25;

        $z12 = 0;

        goto label26;

     label25:
        $i7 = r0.<org.apache.batik.css.engine.CSSEngine: int colorIndex>;

        $z12 = r2[$i7];

     label26:
        z13 = $z12;

        $i8 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i18 = $i8 - 1;

        goto label33;

     label27:
        $z0 = r2[i18];

        if $z0 == 0 goto label28;

        i17 = i17 + 1;

        goto label32;

     label28:
        if z9 == 0 goto label29;

        $z3 = virtualinvoke r4.<org.apache.batik.css.engine.StyleMap: boolean isFontSizeRelative(int)>(i18);

        if $z3 != 0 goto label31;

     label29:
        if z11 == 0 goto label30;

        $z2 = virtualinvoke r4.<org.apache.batik.css.engine.StyleMap: boolean isLineHeightRelative(int)>(i18);

        if $z2 != 0 goto label31;

     label30:
        if z13 == 0 goto label32;

        $z1 = virtualinvoke r4.<org.apache.batik.css.engine.StyleMap: boolean isColorRelative(int)>(i18);

        if $z1 == 0 goto label32;

     label31:
        r2[i18] = 1;

        staticinvoke <org.apache.batik.css.engine.CSSEngine: void clearComputedValue(org.apache.batik.css.engine.StyleMap,int)>(r4, i18);

        i17 = i17 + 1;

     label32:
        $i36 = (int) -1;

        i18 = i18 + $i36;

     label33:
        if i18 >= 0 goto label27;

        if i17 <= 0 goto label37;

        r30 = newarray (int)[i17];

        i19 = 0;

        $i9 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i20 = $i9 - 1;

        goto label36;

     label34:
        $z4 = r2[i20];

        if $z4 == 0 goto label35;

        $i10 = i19;

        i19 = i19 + 1;

        r30[$i10] = i20;

     label35:
        $i38 = (int) -1;

        i20 = i20 + $i38;

     label36:
        if i20 >= 0 goto label34;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r5, r30, null, 1);

     label37:
        goto label39;

     label38:
        $r32 = new java.lang.IllegalStateException;

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid attrChangeType");

        throw $r32;

     label39:
        return;

     label40:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label06;

     label41:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label12;

     label42:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label14;

        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label13 with label13;
    }

    private static void clearComputedValue(org.apache.batik.css.engine.StyleMap, int)
    {
        org.apache.batik.css.engine.StyleMap r0;
        int i0;
        org.apache.batik.css.engine.value.Value $r1, $r3;
        boolean $z0, $z1;
        org.apache.batik.css.engine.value.ComputedValue r2;

        r0 := @parameter0: org.apache.batik.css.engine.StyleMap;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: boolean isNullCascaded(int)>(i0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>(i0, null);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: org.apache.batik.css.engine.value.Value getValue(int)>(i0);

        $z1 = $r1 instanceof org.apache.batik.css.engine.value.ComputedValue;

        if $z1 == 0 goto label2;

        r2 = (org.apache.batik.css.engine.value.ComputedValue) $r1;

        $r3 = virtualinvoke r2.<org.apache.batik.css.engine.value.ComputedValue: org.apache.batik.css.engine.value.Value getCascadedValue()>();

        virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>(i0, $r3);

     label2:
        virtualinvoke r0.<org.apache.batik.css.engine.StyleMap: void putComputed(int,boolean)>(i0, 0);

        return;
    }

    protected void invalidateProperties(org.w3c.dom.Node, int[], boolean[], boolean)
    {
        org.apache.batik.css.engine.CSSStylableElement r1;
        org.apache.batik.css.engine.value.ComputedValue $r12;
        int[] r6, r14;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.batik.css.engine.CSSEngine r3;
        org.w3c.dom.Node r0;
        org.apache.batik.css.engine.StyleMap $r2, $r7;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, $i8, i9, $i10, i11, i12, $i13;
        java.lang.String $r9, $r10;
        boolean[] r4, r5;
        org.apache.batik.css.engine.value.Value $r8, $r11, r13;

        r3 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.w3c.dom.Node;

        r6 := @parameter1: int[];

        r5 := @parameter2: boolean[];

        z1 := @parameter3: boolean;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = (org.apache.batik.css.engine.CSSStylableElement) r0;

        $r2 = interfaceinvoke r1.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleMap getComputedStyleMap(java.lang.String)>(null);

        if $r2 != null goto label02;

        return;

     label02:
        $i0 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        r4 = newarray (boolean)[$i0];

        if r5 == null goto label03;

        $i4 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r4, 0, $i4);

     label03:
        if r6 == null goto label06;

        i5 = 0;

        goto label05;

     label04:
        $i3 = r6[i5];

        r4[$i3] = 1;

        i5 = i5 + 1;

     label05:
        $i2 = lengthof r6;

        if i5 < $i2 goto label04;

     label06:
        i6 = 0;

        if z1 != 0 goto label10;

        i7 = 0;

        goto label09;

     label07:
        $z8 = r4[i7];

        if $z8 == 0 goto label08;

        i6 = i6 + 1;

     label08:
        i7 = i7 + 1;

     label09:
        $i8 = lengthof r4;

        if i7 < $i8 goto label07;

        goto label19;

     label10:
        $r7 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleMap getCascadedStyleMap(org.apache.batik.css.engine.CSSStylableElement,java.lang.String)>(r1, null);

        interfaceinvoke r1.<org.apache.batik.css.engine.CSSStylableElement: void setComputedStyleMap(java.lang.String,org.apache.batik.css.engine.StyleMap)>(null, $r7);

        i9 = 0;

        goto label18;

     label11:
        $z2 = r4[i9];

        if $z2 == 0 goto label12;

        i6 = i6 + 1;

        goto label17;

     label12:
        $r8 = virtualinvoke $r7.<org.apache.batik.css.engine.StyleMap: org.apache.batik.css.engine.value.Value getValue(int)>(i9);

        r13 = null;

        $z3 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleMap: boolean isNullCascaded(int)>(i9);

        if $z3 != 0 goto label13;

        $r11 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleMap: org.apache.batik.css.engine.value.Value getValue(int)>(i9);

        r13 = $r11;

        $z6 = $r11 instanceof org.apache.batik.css.engine.value.ComputedValue;

        if $z6 == 0 goto label13;

        $r12 = (org.apache.batik.css.engine.value.ComputedValue) $r11;

        r13 = virtualinvoke $r12.<org.apache.batik.css.engine.value.ComputedValue: org.apache.batik.css.engine.value.Value getCascadedValue()>();

     label13:
        if $r8 != r13 goto label14;

        goto label17;

     label14:
        if $r8 == null goto label16;

        if r13 == null goto label16;

        $z4 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r13);

        if $z4 == 0 goto label15;

        goto label17;

     label15:
        $r9 = interfaceinvoke r13.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        $r10 = interfaceinvoke $r8.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        if $r10 == $r9 goto label17;

        if $r10 == null goto label16;

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z5 == 0 goto label16;

        goto label17;

     label16:
        i6 = i6 + 1;

        r4[i9] = 1;

     label17:
        i9 = i9 + 1;

     label18:
        $i10 = lengthof r4;

        if i9 < $i10 goto label11;

     label19:
        r14 = null;

        if i6 == 0 goto label23;

        r14 = newarray (int)[i6];

        i11 = 0;

        i12 = 0;

        goto label22;

     label20:
        $z7 = r4[i12];

        if $z7 == 0 goto label21;

        $i1 = i11;

        i11 = i11 + 1;

        r14[$i1] = i12;

     label21:
        i12 = i12 + 1;

     label22:
        $i13 = lengthof r4;

        if i12 < $i13 goto label20;

     label23:
        virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: void propagateChanges(org.w3c.dom.Node,int[],boolean)>(r1, r14, z1);

        return;
    }

    protected void propagateChanges(org.w3c.dom.Node, int[], boolean)
    {
        org.apache.batik.css.engine.CSSStylableElement r1;
        int[] r6, r8;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler $r5;
        boolean $z0, z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, z12, $z13;
        org.apache.batik.css.engine.value.ValueManager[] $r4;
        org.apache.batik.css.engine.value.ValueManager r9;
        org.apache.batik.css.engine.CSSEngine r3;
        short $s0;
        org.w3c.dom.Node r0, r10;
        org.apache.batik.css.engine.StyleMap $r2;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, $i25, i26, i27, $i28, $i30, $i32, $i34, $i36, $i38, $i40, $i42, $i44, $i46;
        boolean[] r7;

        r3 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.w3c.dom.Node;

        r6 := @parameter1: int[];

        z1 := @parameter2: boolean;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = (org.apache.batik.css.engine.CSSStylableElement) r0;

        $r2 = interfaceinvoke r1.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleMap getComputedStyleMap(java.lang.String)>(null);

        if $r2 == null goto label24;

        $r5 = r3.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler styleDeclarationUpdateHandler>;

        r7 = $r5.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: boolean[] updatedProperties>;

        $i5 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i16 = $i5 - 1;

        goto label03;

     label02:
        r7[i16] = 0;

        $i30 = (int) -1;

        i16 = i16 + $i30;

     label03:
        if i16 >= 0 goto label02;

        if r6 == null goto label06;

        $i15 = lengthof r6;

        i17 = $i15 - 1;

        goto label05;

     label04:
        i18 = r6[i17];

        r7[i18] = 1;

        $i32 = (int) -1;

        i17 = i17 + $i32;

     label05:
        if i17 >= 0 goto label04;

     label06:
        $i6 = r3.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex>;

        $i34 = (int) -1;

        if $i6 != $i34 goto label07;

        $z9 = 0;

        goto label08;

     label07:
        $i7 = r3.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex>;

        $z9 = r7[$i7];

     label08:
        z10 = $z9;

        $i8 = r3.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex>;

        $i36 = (int) -1;

        if $i8 != $i36 goto label09;

        $z11 = 0;

        goto label10;

     label09:
        $i9 = r3.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex>;

        $z11 = r7[$i9];

     label10:
        z12 = $z11;

        $i10 = r3.<org.apache.batik.css.engine.CSSEngine: int colorIndex>;

        $i38 = (int) -1;

        if $i10 != $i38 goto label11;

        $z13 = 0;

        goto label12;

     label11:
        $i11 = r3.<org.apache.batik.css.engine.CSSEngine: int colorIndex>;

        $z13 = r7[$i11];

     label12:
        z3 = $z13;

        i19 = 0;

        $i12 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i20 = $i12 - 1;

        goto label19;

     label13:
        $z4 = r7[i20];

        if $z4 == 0 goto label14;

        i19 = i19 + 1;

        goto label18;

     label14:
        if z10 == 0 goto label15;

        $z7 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleMap: boolean isFontSizeRelative(int)>(i20);

        if $z7 != 0 goto label17;

     label15:
        if z12 == 0 goto label16;

        $z6 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleMap: boolean isLineHeightRelative(int)>(i20);

        if $z6 != 0 goto label17;

     label16:
        if z3 == 0 goto label18;

        $z5 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleMap: boolean isColorRelative(int)>(i20);

        if $z5 == 0 goto label18;

     label17:
        r7[i20] = 1;

        staticinvoke <org.apache.batik.css.engine.CSSEngine: void clearComputedValue(org.apache.batik.css.engine.StyleMap,int)>($r2, i20);

        i19 = i19 + 1;

     label18:
        $i40 = (int) -1;

        i20 = i20 + $i40;

     label19:
        if i20 >= 0 goto label13;

        if i19 != 0 goto label20;

        r6 = null;

        goto label24;

     label20:
        r6 = newarray (int)[i19];

        i21 = 0;

        $i13 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i22 = $i13 - 1;

        goto label23;

     label21:
        $z8 = r7[i22];

        if $z8 == 0 goto label22;

        $i14 = i21;

        i21 = i21 + 1;

        r6[$i14] = i22;

     label22:
        $i42 = (int) -1;

        i22 = i22 + $i42;

     label23:
        if i22 >= 0 goto label21;

        virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: void firePropertiesChangedEvent(org.w3c.dom.Element,int[])>(r1, r6);

     label24:
        r8 = r6;

        if r6 == null goto label33;

        i23 = 0;

        i24 = 0;

        goto label28;

     label25:
        $r4 = r3.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers>;

        $i1 = r6[i24];

        r9 = $r4[$i1];

        $z2 = interfaceinvoke r9.<org.apache.batik.css.engine.value.ValueManager: boolean isInheritedProperty()>();

        if $z2 == 0 goto label26;

        i23 = i23 + 1;

        goto label27;

     label26:
        $i44 = (int) -1;

        r6[i24] = $i44;

     label27:
        i24 = i24 + 1;

     label28:
        $i25 = lengthof r6;

        if i24 < $i25 goto label25;

        if i23 != 0 goto label29;

        r8 = null;

        goto label33;

     label29:
        r8 = newarray (int)[i23];

        i26 = 0;

        i27 = 0;

        goto label32;

     label30:
        $i2 = r6[i27];

        $i46 = (int) -1;

        if $i2 == $i46 goto label31;

        $i3 = i26;

        i26 = i26 + 1;

        $i4 = r6[i27];

        r8[$i3] = $i4;

     label31:
        i27 = i27 + 1;

     label32:
        $i28 = lengthof r6;

        if i27 < $i28 goto label30;

     label33:
        r10 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSFirstChild(org.w3c.dom.Node)>(r0);

        goto label36;

     label34:
        $s0 = interfaceinvoke r10.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label35;

        virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r10, r8, null, z1);

     label35:
        r10 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r10);

     label36:
        if r10 != null goto label34;

        return;
    }

    protected void nonCSSPresentationalHintUpdated(org.apache.batik.css.engine.CSSStylableElement, org.apache.batik.css.engine.StyleMap, java.lang.String, short, java.lang.String)
    {
        org.apache.batik.css.parser.ExtendedParser $r6;
        org.apache.batik.css.engine.CSSStylableElement r4;
        int[] $r3, r11;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler $r10;
        org.w3c.css.sac.LexicalUnit $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, z9, $z10, z11;
        org.apache.batik.css.engine.value.ValueManager[] $r8;
        org.apache.batik.css.engine.CSSEngineUserAgent $r21, $r22;
        java.lang.Exception $r14;
        org.apache.batik.util.ParsedURL $r16, $r17;
        org.apache.batik.css.engine.value.ValueManager r23;
        java.lang.Throwable $r13;
        java.lang.Object[] $r18;
        org.apache.batik.css.engine.CSSEngine r0;
        short $s1, s2;
        org.apache.batik.css.engine.StyleMap r2;
        org.w3c.dom.DOMException $r26;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, $i15, $i16, $i18, $i20, $i22;
        java.lang.String r1, r5, $r15, $r19, r24, $r25;
        boolean[] $r12;
        org.apache.batik.css.engine.value.Value $r9;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r4 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r2 := @parameter1: org.apache.batik.css.engine.StyleMap;

        r1 := @parameter2: java.lang.String;

        s2 := @parameter3: short;

        r5 := @parameter4: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<org.apache.batik.css.engine.StyleMap: boolean isImportant(int)>($i0);

        if $z0 == 0 goto label01;

        return;

     label01:
        $s1 = virtualinvoke r2.<org.apache.batik.css.engine.StyleMap: short getOrigin(int)>($i0);

        $i15 = (int) $s1;

        if $i15 < 24576 goto label02;

        return;

     label02:
        $i16 = (int) s2;

        tableswitch($i16)
        {
            case 1: goto label03;
            case 2: goto label03;
            case 3: goto label16;
            default: goto label17;
        };

     label03:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = r4;

     label04:
        $r6 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.parser.ExtendedParser parser>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.css.parser.ExtendedParser: org.w3c.css.sac.LexicalUnit parsePropertyValue(java.lang.String)>(r5);

        $r8 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers>;

        r23 = $r8[$i0];

        $r9 = interfaceinvoke r23.<org.apache.batik.css.engine.value.ValueManager: org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit,org.apache.batik.css.engine.CSSEngine)>($r7, r0);

        virtualinvoke r2.<org.apache.batik.css.engine.StyleMap: void putMask(int,short)>($i0, 0);

        virtualinvoke r2.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>($i0, $r9);

        virtualinvoke r2.<org.apache.batik.css.engine.StyleMap: void putOrigin(int,short)>($i0, 16384);

     label05:
        goto label36;

     label06:
        goto label15;

     label07:
        $r14 := @caughtexception;

        $r15 = virtualinvoke $r14.<java.lang.Throwable: java.lang.String getMessage()>();

        r24 = $r15;

        if $r15 != null goto label08;

        r24 = "";

     label08:
        $r16 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        if $r16 != null goto label09;

        $r25 = "<unknown>";

        goto label10;

     label09:
        $r17 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL documentURI>;

        $r25 = virtualinvoke $r17.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label10:
        $r18 = newarray (java.lang.Object)[4];

        $r18[0] = $r25;

        $r18[1] = r1;

        $r18[2] = r5;

        $r18[3] = r24;

        $r19 = staticinvoke <org.apache.batik.css.engine.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("property.syntax.error.at", $r18);

        $r26 = new org.w3c.dom.DOMException;

        specialinvoke $r26.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r19);

        $r21 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        if $r21 != null goto label11;

        throw $r26;

     label11:
        $r22 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineUserAgent userAgent>;

        interfaceinvoke $r22.<org.apache.batik.css.engine.CSSEngineUserAgent: void displayError(java.lang.Exception)>($r26);

        goto label37;

     label12:
        goto label15;

     label13:
        $r13 := @caughtexception;

        goto label38;

     label14:
        throw $r13;

     label15:
        goto label17;

     label16:
        $r3 = newarray (int)[1];

        $r3[0] = $i0;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r4, $r3, null, 1);

        return;

     label17:
        $r10 = r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler styleDeclarationUpdateHandler>;

        $r12 = $r10.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: boolean[] updatedProperties>;

        $i3 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i10 = $i3 - 1;

        goto label19;

     label18:
        $r12[i10] = 0;

        $i18 = (int) -1;

        i10 = i10 + $i18;

     label19:
        if i10 >= 0 goto label18;

        $r12[$i0] = 1;

        $i4 = r0.<org.apache.batik.css.engine.CSSEngine: int fontSizeIndex>;

        if $i0 != $i4 goto label20;

        $z6 = 1;

        goto label21;

     label20:
        $z6 = 0;

     label21:
        z7 = $z6;

        $i5 = r0.<org.apache.batik.css.engine.CSSEngine: int lineHeightIndex>;

        if $i0 != $i5 goto label22;

        $z8 = 1;

        goto label23;

     label22:
        $z8 = 0;

     label23:
        z9 = $z8;

        $i6 = r0.<org.apache.batik.css.engine.CSSEngine: int colorIndex>;

        if $i0 != $i6 goto label24;

        $z10 = 1;

        goto label25;

     label24:
        $z10 = 0;

     label25:
        z11 = $z10;

        i11 = 0;

        $i7 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i12 = $i7 - 1;

        goto label32;

     label26:
        $z1 = $r12[i12];

        if $z1 == 0 goto label27;

        i11 = i11 + 1;

        goto label31;

     label27:
        if z7 == 0 goto label28;

        $z4 = virtualinvoke r2.<org.apache.batik.css.engine.StyleMap: boolean isFontSizeRelative(int)>(i12);

        if $z4 != 0 goto label30;

     label28:
        if z9 == 0 goto label29;

        $z3 = virtualinvoke r2.<org.apache.batik.css.engine.StyleMap: boolean isLineHeightRelative(int)>(i12);

        if $z3 != 0 goto label30;

     label29:
        if z11 == 0 goto label31;

        $z2 = virtualinvoke r2.<org.apache.batik.css.engine.StyleMap: boolean isColorRelative(int)>(i12);

        if $z2 == 0 goto label31;

     label30:
        $r12[i12] = 1;

        staticinvoke <org.apache.batik.css.engine.CSSEngine: void clearComputedValue(org.apache.batik.css.engine.StyleMap,int)>(r2, i12);

        i11 = i11 + 1;

     label31:
        $i20 = (int) -1;

        i12 = i12 + $i20;

     label32:
        if i12 >= 0 goto label26;

        r11 = newarray (int)[i11];

        i13 = 0;

        $i8 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        i14 = $i8 - 1;

        goto label35;

     label33:
        $z5 = $r12[i14];

        if $z5 == 0 goto label34;

        $i9 = i13;

        i13 = i13 + 1;

        r11[$i9] = i14;

     label34:
        $i22 = (int) -1;

        i14 = i14 + $i22;

     label35:
        if i14 >= 0 goto label33;

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r4, r11, null, 1);

        return;

     label36:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label06;

     label37:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label12;

     label38:
        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement element> = null;

        r0.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL cssBaseURI> = null;

        goto label14;

        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label13 with label13;
    }

    protected boolean hasStyleSheetNode(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1, r2;
        org.apache.batik.css.engine.CSSEngine r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.w3c.dom.Node;

        $z0 = r1 instanceof org.apache.batik.css.engine.CSSStyleSheetNode;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r2 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSFirstChild(org.w3c.dom.Node)>(r1);

        goto label4;

     label2:
        $z1 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: boolean hasStyleSheetNode(org.w3c.dom.Node)>(r2);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        r2 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r2);

     label4:
        if r2 != null goto label2;

        return 0;
    }

    protected void handleAttrModified(org.w3c.dom.Element, org.w3c.dom.Attr, short, java.lang.String, java.lang.String)
    {
        org.apache.batik.css.engine.CSSStylableElement $r15;
        org.w3c.dom.Attr r3;
        org.apache.batik.css.engine.CSSEngine r7;
        short s0;
        org.apache.batik.css.engine.StyleMap $r6;
        org.w3c.dom.Node r19;
        java.lang.String r1, r2, $r4, r5, $r9, $r10, $r11, $r13, $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Set $r8, $r12, $r17, $r18;
        org.w3c.dom.Element r0;

        r7 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.w3c.dom.Attr;

        s0 := @parameter2: short;

        r2 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label02;

        return;

     label02:
        $r4 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r4 != null goto label03;

        $r16 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        goto label04;

     label03:
        $r16 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getLocalName()>();

     label04:
        r5 = $r16;

        $r15 = (org.apache.batik.css.engine.CSSStylableElement) r0;

        $r6 = interfaceinvoke $r15.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleMap getComputedStyleMap(java.lang.String)>(null);

        if $r6 == null goto label08;

        $r9 = r7.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleNamespaceURI>;

        if $r4 == $r9 goto label05;

        if $r4 == null goto label06;

        $r14 = r7.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleNamespaceURI>;

        $z6 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z6 == 0 goto label06;

     label05:
        $r10 = r7.<org.apache.batik.css.engine.CSSEngine: java.lang.String styleLocalName>;

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z3 == 0 goto label06;

        virtualinvoke r7.<org.apache.batik.css.engine.CSSEngine: void inlineStyleAttributeUpdated(org.apache.batik.css.engine.CSSStylableElement,org.apache.batik.css.engine.StyleMap,short,java.lang.String,java.lang.String)>($r15, $r6, s0, r2, r1);

        return;

     label06:
        $r17 = r7.<org.apache.batik.css.engine.CSSEngine: java.util.Set nonCSSPresentationalHints>;

        if $r17 == null goto label08;

        $r11 = r7.<org.apache.batik.css.engine.CSSEngine: java.lang.String nonCSSPresentationalHintsNamespaceURI>;

        if $r4 == $r11 goto label07;

        if $r4 == null goto label08;

        $r13 = r7.<org.apache.batik.css.engine.CSSEngine: java.lang.String nonCSSPresentationalHintsNamespaceURI>;

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z5 == 0 goto label08;

     label07:
        $r12 = r7.<org.apache.batik.css.engine.CSSEngine: java.util.Set nonCSSPresentationalHints>;

        $z4 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z4 == 0 goto label08;

        virtualinvoke r7.<org.apache.batik.css.engine.CSSEngine: void nonCSSPresentationalHintUpdated(org.apache.batik.css.engine.CSSStylableElement,org.apache.batik.css.engine.StyleMap,java.lang.String,short,java.lang.String)>($r15, $r6, r5, s0, r1);

        return;

     label08:
        $r18 = r7.<org.apache.batik.css.engine.CSSEngine: java.util.Set selectorAttributes>;

        if $r18 == null goto label11;

        $r8 = r7.<org.apache.batik.css.engine.CSSEngine: java.util.Set selectorAttributes>;

        $z2 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z2 == 0 goto label11;

        virtualinvoke r7.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>($r15, null, null, 1);

        r19 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>($r15);

        goto label10;

     label09:
        virtualinvoke r7.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r19, null, null, 1);

        r19 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r19);

     label10:
        if r19 != null goto label09;

     label11:
        return;
    }

    protected void handleNodeInserted(org.w3c.dom.Node)
    {
        org.w3c.dom.Element $r2;
        org.w3c.dom.Document $r1;
        org.w3c.dom.Node r3, r4;
        org.apache.batik.css.engine.CSSEngine r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r3 := @parameter0: org.w3c.dom.Node;

        $z0 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: boolean hasStyleSheetNode(org.w3c.dom.Node)>(r3);

        if $z0 == 0 goto label1;

        r0.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes> = null;

        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>($r2, null, null, 1);

        goto label4;

     label1:
        $z1 = r3 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z1 == 0 goto label4;

        r4 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r3);

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r4, null, null, 1);

        r4 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r4);

     label3:
        if r4 != null goto label2;

     label4:
        return;
    }

    protected void handleNodeRemoved(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1, $r2;
        org.apache.batik.css.engine.CSSEngine r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r1 := @parameter0: org.w3c.dom.Node;

        $z0 = virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: boolean hasStyleSheetNode(org.w3c.dom.Node)>(r1);

        if $z0 == 0 goto label1;

        r0.<org.apache.batik.css.engine.CSSEngine: boolean styleSheetRemoved> = 1;

        goto label2;

     label1:
        $z1 = r1 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r1);

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node removedStylableElementSibling> = $r2;

     label2:
        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void disposeStyleMaps(org.w3c.dom.Node)>(r1);

        return;
    }

    protected void handleSubtreeModified(org.w3c.dom.Node)
    {
        org.w3c.dom.Element $r3;
        org.w3c.dom.Document $r2;
        org.w3c.dom.Node $r1, r4, r5;
        org.apache.batik.css.engine.CSSEngine r0;
        boolean $z0;

        r0 := @this: org.apache.batik.css.engine.CSSEngine;

        r4 := @parameter0: org.w3c.dom.Node;

        $z0 = r0.<org.apache.batik.css.engine.CSSEngine: boolean styleSheetRemoved>;

        if $z0 == 0 goto label1;

        r0.<org.apache.batik.css.engine.CSSEngine: boolean styleSheetRemoved> = 0;

        r0.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes> = null;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>($r3, null, null, 1);

        goto label4;

     label1:
        $r1 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node removedStylableElementSibling>;

        if $r1 == null goto label4;

        r5 = r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node removedStylableElementSibling>;

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r5, null, null, 1);

        r5 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSNextSibling(org.w3c.dom.Node)>(r5);

     label3:
        if r5 != null goto label2;

        r0.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node removedStylableElementSibling> = null;

     label4:
        return;
    }

    protected void handleCharacterDataModified(org.w3c.dom.Node)
    {
        org.w3c.dom.Element $r4;
        org.w3c.dom.Document $r3;
        org.w3c.dom.Node r0, $r1;
        org.apache.batik.css.engine.CSSEngine r2;
        boolean $z0;

        r2 := @this: org.apache.batik.css.engine.CSSEngine;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Node getCSSParentNode(org.w3c.dom.Node)>(r0);

        $z0 = $r1 instanceof org.apache.batik.css.engine.CSSStyleSheetNode;

        if $z0 == 0 goto label1;

        r2.<org.apache.batik.css.engine.CSSEngine: java.util.List styleSheetNodes> = null;

        $r3 = r2.<org.apache.batik.css.engine.CSSEngine: org.w3c.dom.Document document>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke r2.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>($r4, null, null, 1);

     label1:
        return;
    }

    static void <clinit>()
    {
        org.apache.batik.css.engine.CSSEngineListener[] $r0;

        $r0 = newarray (org.apache.batik.css.engine.CSSEngineListener)[0];

        <org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSEngineListener[] LISTENER_ARRAY> = $r0;

        return;
    }
}
