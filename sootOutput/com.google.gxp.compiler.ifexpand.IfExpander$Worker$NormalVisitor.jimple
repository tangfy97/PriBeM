class com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor extends com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor
{
    final com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0;

    private void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker)
    {
        com.google.gxp.compiler.ifexpand.IfExpander$Worker r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.ifexpand.IfExpander$Worker;

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0> = r1;

        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor: void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker,com.google.gxp.compiler.ifexpand.IfExpander$1)>(r1, null);

        return;
    }

    protected com.google.gxp.compiler.parser.ParsedElement defaultVisitElement(com.google.gxp.compiler.parser.ParsedElement)
    {
        java.util.Iterator $r3;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r7, $r9;
        java.util.ArrayList $r0;
        java.util.List $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker $r8;
        com.google.gxp.compiler.parser.ParsedElement r1, $r4, r6;
        java.lang.Object $r5, $r10;
        boolean $z0;

        r7 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.ParsedElement;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.parser.ParsedElement: java.util.List getChildren()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.google.gxp.compiler.parser.ParsedElement) $r5;

        $r8 = r7.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0>;

        $r9 = staticinvoke <com.google.gxp.compiler.ifexpand.IfExpander$Worker: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor access$100(com.google.gxp.compiler.ifexpand.IfExpander$Worker)>($r8);

        $r10 = virtualinvoke r6.<com.google.gxp.compiler.parser.ParsedElement: java.lang.Object acceptVisitor(com.google.gxp.compiler.parser.ParsedElementVisitor)>($r9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r4 = virtualinvoke r1.<com.google.gxp.compiler.parser.ParsedElement: com.google.gxp.compiler.parser.ParsedElement withChildren(java.util.List)>($r0);

        return $r4;
    }

    private com.google.gxp.compiler.parser.ParsedElement reportBadNodeAndContinue(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.base.Node)
    {
        com.google.gxp.compiler.parser.NullElement $r6;
        com.google.gxp.compiler.alerts.common.BadNodePlacementError $r3;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker $r1;
        com.google.gxp.compiler.alerts.AlertSink $r2;
        com.google.gxp.compiler.base.Node r4, r5;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r4 := @parameter0: com.google.gxp.compiler.base.Node;

        r5 := @parameter1: com.google.gxp.compiler.base.Node;

        $r1 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0>;

        $r2 = staticinvoke <com.google.gxp.compiler.ifexpand.IfExpander$Worker: com.google.gxp.compiler.alerts.AlertSink access$300(com.google.gxp.compiler.ifexpand.IfExpander$Worker)>($r1);

        $r3 = new com.google.gxp.compiler.alerts.common.BadNodePlacementError;

        specialinvoke $r3.<com.google.gxp.compiler.alerts.common.BadNodePlacementError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>(r4, r5);

        interfaceinvoke $r2.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r3);

        $r6 = new com.google.gxp.compiler.parser.NullElement;

        specialinvoke $r6.<com.google.gxp.compiler.parser.NullElement: void <init>(com.google.gxp.compiler.base.Node)>(r4);

        return $r6;
    }

    public com.google.gxp.compiler.parser.ParsedElement visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.parser.ParsedElement $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.parser.ParsedElement reportBadNodeAndContinue(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>(r1, null);

        return $r2;
    }

    public com.google.gxp.compiler.parser.ParsedElement visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.parser.ParsedElement $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.parser.ParsedElement reportBadNodeAndContinue(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>(r1, null);

        return $r2;
    }

    public com.google.gxp.compiler.parser.ParsedElement visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.alerts.SourcePosition $r5;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType $r7;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;
        java.util.List $r2, $r3;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1, $r4;
        java.lang.String $r6;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: java.util.List processIfChildren(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r4 = new com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r6 = virtualinvoke r1.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: java.lang.String getDisplayName()>();

        $r7 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType COND>;

        specialinvoke $r4.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.util.List,java.util.List,com.google.gxp.compiler.parser.GxpNamespace$ElementType)>($r5, $r6, $r3, $r2, $r7);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitValue(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r0;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r1;

        r1 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r0 := @parameter0: com.google.gxp.compiler.base.Expression;

        return r0;
    }

    public volatile java.lang.Object visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.parser.ParsedElement $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.parser.ParsedElement visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.parser.ParsedElement $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.parser.ParsedElement visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.parser.ParsedElement $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.parser.ParsedElement visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    protected volatile java.lang.Object defaultVisitElement(com.google.gxp.compiler.parser.ParsedElement)
    {
        com.google.gxp.compiler.parser.ParsedElement r1, $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.ParsedElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: com.google.gxp.compiler.parser.ParsedElement defaultVisitElement(com.google.gxp.compiler.parser.ParsedElement)>(r1);

        return $r2;
    }

    void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker, com.google.gxp.compiler.ifexpand.IfExpander$1)
    {
        com.google.gxp.compiler.ifexpand.IfExpander$1 r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor;

        r1 := @parameter0: com.google.gxp.compiler.ifexpand.IfExpander$Worker;

        r2 := @parameter1: com.google.gxp.compiler.ifexpand.IfExpander$1;

        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor: void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker)>(r1);

        return;
    }
}
