final class com.mycila.inject.internal.guava.collect.SortedMaps$1 extends java.lang.Object implements com.mycila.inject.internal.guava.collect.Maps$EntryTransformer
{
    final com.mycila.inject.internal.guava.base.Function val$function;

    void <init>(com.mycila.inject.internal.guava.base.Function)
    {
        com.mycila.inject.internal.guava.collect.SortedMaps$1 r0;
        com.mycila.inject.internal.guava.base.Function r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Function;

        r0.<com.mycila.inject.internal.guava.collect.SortedMaps$1: com.mycila.inject.internal.guava.base.Function val$function> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object transformEntry(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.SortedMaps$1 r0;
        java.lang.Object r1, $r3, r4;
        com.mycila.inject.internal.guava.base.Function $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$1;

        r4 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.SortedMaps$1: com.mycila.inject.internal.guava.base.Function val$function>;

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.base.Function: java.lang.Object apply(java.lang.Object)>(r1);

        return $r3;
    }
}
