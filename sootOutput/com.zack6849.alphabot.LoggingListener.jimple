public class com.zack6849.alphabot.LoggingListener extends org.pircbotx.hooks.ListenerAdapter
{
    public static java.util.HashMap fileWriterMap;

    public void <init>()
    {
        com.zack6849.alphabot.LoggingListener r0;

        r0 := @this: com.zack6849.alphabot.LoggingListener;

        specialinvoke r0.<org.pircbotx.hooks.ListenerAdapter: void <init>()>();

        return;
    }

    public static java.io.BufferedWriter getOrCreateNewBW(java.lang.String) throws java.io.IOException
    {
        java.io.BufferedWriter $r4, r8;
        java.io.FileWriter $r5;
        java.util.HashMap $r1, $r6;
        java.io.File $r3, $r7;
        java.lang.Object $r2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.zack6849.alphabot.LoggingListener: java.util.HashMap fileWriterMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r8 = (java.io.BufferedWriter) $r2;

        if r8 != null goto label2;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r0);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

     label1:
        $r4 = new java.io.BufferedWriter;

        $r5 = new java.io.FileWriter;

        specialinvoke $r5.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r3, 1);

        specialinvoke $r4.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r5);

        r8 = $r4;

        $r6 = <com.zack6849.alphabot.LoggingListener: java.util.HashMap fileWriterMap>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

     label2:
        return r8;
    }

    public static synchronized void log(java.lang.String, java.lang.String)
    {
        java.util.logging.Level $r18;
        java.lang.String r2, $r5, $r8, $r11, r13, $r16;
        java.io.BufferedWriter $r12;
        java.io.IOException $r14;
        java.util.logging.Logger $r17;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.Class $r15;

        r2 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logs/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getMonth()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getDay()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".txt");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <com.zack6849.alphabot.LoggingListener: java.io.BufferedWriter getOrCreateNewBW(java.lang.String)>($r11);

        virtualinvoke $r12.<java.io.BufferedWriter: void write(java.lang.String)>(r13);

        virtualinvoke $r12.<java.io.BufferedWriter: void newLine()>();

        virtualinvoke $r12.<java.io.BufferedWriter: void flush()>();

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        $r15 = class "Lcom/zack6849/alphabot/Bot;";

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r16);

        $r18 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r17.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r18, null, $r14);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public synchronized void onServerResponse(org.pircbotx.hooks.events.ServerResponseEvent)
    {
        java.lang.String[] $r2;
        java.util.HashMap $r5;
        com.zack6849.alphabot.LoggingListener r6;
        org.pircbotx.hooks.events.ServerResponseEvent r0;
        int $i0, $i1;
        java.lang.String $r1, r3, r4;

        r6 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.ServerResponseEvent;

        $i0 = virtualinvoke r0.<org.pircbotx.hooks.events.ServerResponseEvent: int getCode()>();

        if $i0 != 354 goto label2;

        $r1 = virtualinvoke r0.<org.pircbotx.hooks.events.ServerResponseEvent: java.lang.String getResponse()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i1 = lengthof $r2;

        if $i1 == 3 goto label1;

        return;

     label1:
        r3 = $r2[1];

        r4 = $r2[2];

        $r5 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label2:
        return;
    }

    public synchronized void onKick(org.pircbotx.hooks.events.KickEvent)
    {
        org.pircbotx.hooks.events.KickEvent r0;
        org.pircbotx.PircBotX $r34, $r52;
        com.zack6849.alphabot.LoggingListener r69;
        org.pircbotx.User $r6, $r14, $r18, $r26, $r30, $r44, $r48, $r61, $r65, $r75;
        java.lang.Throwable $r68;
        java.lang.Object[] $r11, $r24, $r40, $r58;
        java.util.ArrayList $r70;
        java.lang.String $r3, $r4, $r7, $r8, $r10, $r13, $r15, $r17, $r19, $r20, $r21, $r23, $r25, $r27, $r29, $r31, $r32, $r33, $r37, $r38, $r41, $r43, $r45, $r47, $r49, $r50, $r51, $r55, $r56, $r59, $r60, $r62, $r64, $r66, $r67, $r72, $r76;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.HashMap $r1, $r5, $r35, $r53, $r73, $r74;
        org.pircbotx.Channel $r2, $r9, $r12, $r16, $r22, $r28, $r36, $r42, $r46, $r54, $r63, $r71;
        java.lang.Object $r39, $r57;

        r69 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.KickEvent;

        $r1 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label02;

        $r33 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: java.lang.String getReason()>();

        $z2 = virtualinvoke $r33.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label01;

        $r52 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.PircBotX getBot()>();

        $r53 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r54 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r55 = virtualinvoke $r54.<org.pircbotx.Channel: java.lang.String getName()>();

        $r56 = virtualinvoke $r55.<java.lang.String: java.lang.String toLowerCase()>();

        $r57 = virtualinvoke $r53.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r56);

        $r59 = (java.lang.String) $r57;

        $r58 = newarray (java.lang.Object)[4];

        $r60 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r58[0] = $r60;

        $r61 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getRecipient()>();

        $r62 = virtualinvoke $r61.<org.pircbotx.User: java.lang.String getNick()>();

        $r58[1] = $r62;

        $r63 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r64 = virtualinvoke $r63.<org.pircbotx.Channel: java.lang.String getName()>();

        $r58[2] = $r64;

        $r65 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getSource()>();

        $r66 = virtualinvoke $r65.<org.pircbotx.User: java.lang.String getNick()>();

        $r58[3] = $r66;

        $r67 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s has been kicked from %s by %s ", $r58);

        virtualinvoke $r52.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r59, $r67);

        goto label02;

     label01:
        $r34 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.PircBotX getBot()>();

        $r35 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r36 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r37 = virtualinvoke $r36.<org.pircbotx.Channel: java.lang.String getName()>();

        $r38 = virtualinvoke $r37.<java.lang.String: java.lang.String toLowerCase()>();

        $r39 = virtualinvoke $r35.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r38);

        $r41 = (java.lang.String) $r39;

        $r40 = newarray (java.lang.Object)[5];

        $r42 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r43 = virtualinvoke $r42.<org.pircbotx.Channel: java.lang.String getName()>();

        $r40[0] = $r43;

        $r44 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getRecipient()>();

        $r45 = virtualinvoke $r44.<org.pircbotx.User: java.lang.String getNick()>();

        $r40[1] = $r45;

        $r46 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r47 = virtualinvoke $r46.<org.pircbotx.Channel: java.lang.String getName()>();

        $r40[2] = $r47;

        $r48 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getSource()>();

        $r49 = virtualinvoke $r48.<org.pircbotx.User: java.lang.String getNick()>();

        $r40[3] = $r49;

        $r50 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: java.lang.String getReason()>();

        $r40[4] = $r50;

        $r51 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s has been kicked from %s by %s (%s)", $r40);

        virtualinvoke $r34.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r41, $r51);

     label02:
        $r70 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r71 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r72 = virtualinvoke $r71.<org.pircbotx.Channel: java.lang.String getName()>();

        $z3 = virtualinvoke $r70.<java.util.ArrayList: boolean contains(java.lang.Object)>($r72);

        if $z3 == 0 goto label04;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: java.lang.String getReason()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label03;

        $r22 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r23 = virtualinvoke $r22.<org.pircbotx.Channel: java.lang.String getName()>();

        $r24 = newarray (java.lang.Object)[4];

        $r25 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r24[0] = $r25;

        $r26 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getRecipient()>();

        $r27 = virtualinvoke $r26.<org.pircbotx.User: java.lang.String getNick()>();

        $r24[1] = $r27;

        $r28 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r29 = virtualinvoke $r28.<org.pircbotx.Channel: java.lang.String getName()>();

        $r24[2] = $r29;

        $r30 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getSource()>();

        $r31 = virtualinvoke $r30.<org.pircbotx.User: java.lang.String getNick()>();

        $r24[3] = $r31;

        $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s has been kicked from %s by %s ", $r24);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r23, $r32);

        goto label04;

     label03:
        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r10 = virtualinvoke $r9.<org.pircbotx.Channel: java.lang.String getName()>();

        $r11 = newarray (java.lang.Object)[5];

        $r12 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r13 = virtualinvoke $r12.<org.pircbotx.Channel: java.lang.String getName()>();

        $r11[0] = $r13;

        $r14 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getRecipient()>();

        $r15 = virtualinvoke $r14.<org.pircbotx.User: java.lang.String getNick()>();

        $r11[1] = $r15;

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.Channel getChannel()>();

        $r17 = virtualinvoke $r16.<org.pircbotx.Channel: java.lang.String getName()>();

        $r11[2] = $r17;

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getSource()>();

        $r19 = virtualinvoke $r18.<org.pircbotx.User: java.lang.String getNick()>();

        $r11[3] = $r19;

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: java.lang.String getReason()>();

        $r11[4] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s has been kicked from %s by %s (%s)", $r11);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r10, $r21);

     label04:
        $r73 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        entermonitor $r73;

     label05:
        $r74 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r75 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getRecipient()>();

        $r76 = virtualinvoke $r75.<org.pircbotx.User: java.lang.String getNick()>();

        $z4 = virtualinvoke $r74.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r76);

        if $z4 == 0 goto label06;

        $r5 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.KickEvent: org.pircbotx.User getRecipient()>();

        $r7 = virtualinvoke $r6.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

     label06:
        exitmonitor $r73;

     label07:
        goto label10;

     label08:
        $r68 := @caughtexception;

        exitmonitor $r73;

     label09:
        throw $r68;

     label10:
        return;

        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onPart(org.pircbotx.hooks.events.PartEvent)
    {
        org.pircbotx.PircBotX $r51, $r76;
        com.zack6849.alphabot.LoggingListener r101;
        java.lang.StringBuilder $r12, $r15, $r16, $r19, $r38, $r41, $r42, $r45, $r63, $r66, $r67, $r70, $r88, $r91, $r92, $r95;
        org.pircbotx.User $r10, $r13, $r17, $r27, $r30, $r36, $r39, $r43, $r61, $r64, $r68, $r86, $r89, $r93;
        java.lang.Throwable $r100;
        java.lang.Object[] $r8, $r34, $r57, $r82;
        java.util.ArrayList $r102;
        org.pircbotx.hooks.events.PartEvent r0;
        java.lang.String $r3, $r4, $r5, $r7, $r9, $r11, $r14, $r18, $r20, $r22, $r23, $r24, $r28, $r31, $r33, $r35, $r37, $r40, $r44, $r46, $r48, $r49, $r50, $r54, $r55, $r58, $r60, $r62, $r65, $r69, $r71, $r73, $r74, $r75, $r79, $r80, $r83, $r85, $r87, $r90, $r94, $r96, $r98, $r99, $r104;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.HashMap $r1, $r25, $r26, $r29, $r52, $r77;
        org.pircbotx.Channel $r2, $r6, $r21, $r32, $r47, $r53, $r59, $r72, $r78, $r84, $r97, $r103;
        java.lang.Object $r56, $r81;

        r101 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.PartEvent;

        $r1 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label02;

        $r50 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: java.lang.String getReason()>();

        $z3 = virtualinvoke $r50.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label01;

        $r76 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.PircBotX getBot()>();

        $r77 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r78 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r79 = virtualinvoke $r78.<org.pircbotx.Channel: java.lang.String getName()>();

        $r80 = virtualinvoke $r79.<java.lang.String: java.lang.String toLowerCase()>();

        $r81 = virtualinvoke $r77.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r80);

        $r83 = (java.lang.String) $r81;

        $r82 = newarray (java.lang.Object)[4];

        $r84 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r85 = virtualinvoke $r84.<org.pircbotx.Channel: java.lang.String getName()>();

        $r82[0] = $r85;

        $r86 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r87 = virtualinvoke $r86.<org.pircbotx.User: java.lang.String getNick()>();

        $r82[1] = $r87;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r90 = virtualinvoke $r89.<org.pircbotx.User: java.lang.String getLogin()>();

        $r91 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r93 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r94 = virtualinvoke $r93.<org.pircbotx.User: java.lang.String getHostmask()>();

        $r95 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        $r82[2] = $r96;

        $r97 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r98 = virtualinvoke $r97.<org.pircbotx.Channel: java.lang.String getName()>();

        $r82[3] = $r98;

        $r99 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s (%s) has left %s (no reason)", $r82);

        virtualinvoke $r76.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r83, $r99);

        goto label02;

     label01:
        $r51 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.PircBotX getBot()>();

        $r52 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r53 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r54 = virtualinvoke $r53.<org.pircbotx.Channel: java.lang.String getName()>();

        $r55 = virtualinvoke $r54.<java.lang.String: java.lang.String toLowerCase()>();

        $r56 = virtualinvoke $r52.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r55);

        $r58 = (java.lang.String) $r56;

        $r57 = newarray (java.lang.Object)[5];

        $r59 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r60 = virtualinvoke $r59.<org.pircbotx.Channel: java.lang.String getName()>();

        $r57[0] = $r60;

        $r61 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r62 = virtualinvoke $r61.<org.pircbotx.User: java.lang.String getNick()>();

        $r57[1] = $r62;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r65 = virtualinvoke $r64.<org.pircbotx.User: java.lang.String getLogin()>();

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r68 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r69 = virtualinvoke $r68.<org.pircbotx.User: java.lang.String getHostmask()>();

        $r70 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        $r57[2] = $r71;

        $r72 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r73 = virtualinvoke $r72.<org.pircbotx.Channel: java.lang.String getName()>();

        $r57[3] = $r73;

        $r74 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: java.lang.String getReason()>();

        $r57[4] = $r74;

        $r75 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s (%s) has left %s :%s", $r57);

        virtualinvoke $r51.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r58, $r75);

     label02:
        $r102 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r103 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r104 = virtualinvoke $r103.<org.pircbotx.Channel: java.lang.String getName()>();

        $z4 = virtualinvoke $r102.<java.util.ArrayList: boolean contains(java.lang.Object)>($r104);

        if $z4 == 0 goto label10;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: java.lang.String getReason()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label03;

        $r32 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r33 = virtualinvoke $r32.<org.pircbotx.Channel: java.lang.String getName()>();

        $r34 = newarray (java.lang.Object)[4];

        $r35 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r34[0] = $r35;

        $r36 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r37 = virtualinvoke $r36.<org.pircbotx.User: java.lang.String getNick()>();

        $r34[1] = $r37;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r40 = virtualinvoke $r39.<org.pircbotx.User: java.lang.String getLogin()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r43 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r44 = virtualinvoke $r43.<org.pircbotx.User: java.lang.String getHostmask()>();

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34[2] = $r46;

        $r47 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r48 = virtualinvoke $r47.<org.pircbotx.Channel: java.lang.String getName()>();

        $r34[3] = $r48;

        $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s (%s) has left %s (no reason)", $r34);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r33, $r49);

        goto label04;

     label03:
        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r7 = virtualinvoke $r6.<org.pircbotx.Channel: java.lang.String getName()>();

        $r8 = newarray (java.lang.Object)[5];

        $r9 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r8[0] = $r9;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r11 = virtualinvoke $r10.<org.pircbotx.User: java.lang.String getNick()>();

        $r8[1] = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r14 = virtualinvoke $r13.<org.pircbotx.User: java.lang.String getLogin()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r17 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r18 = virtualinvoke $r17.<org.pircbotx.User: java.lang.String getHostmask()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8[2] = $r20;

        $r21 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.Channel getChannel()>();

        $r22 = virtualinvoke $r21.<org.pircbotx.Channel: java.lang.String getName()>();

        $r8[3] = $r22;

        $r23 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: java.lang.String getReason()>();

        $r8[4] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s (%s) has left %s :%s", $r8);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r7, $r24);

     label04:
        $r25 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        entermonitor $r25;

     label05:
        $r26 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r27 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r28 = virtualinvoke $r27.<org.pircbotx.User: java.lang.String getNick()>();

        $z2 = virtualinvoke $r26.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r28);

        if $z2 == 0 goto label06;

        $r29 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r30 = virtualinvoke r0.<org.pircbotx.hooks.events.PartEvent: org.pircbotx.User getUser()>();

        $r31 = virtualinvoke $r30.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r31);

     label06:
        exitmonitor $r25;

     label07:
        goto label10;

     label08:
        $r100 := @caughtexception;

        exitmonitor $r25;

     label09:
        throw $r100;

     label10:
        return;

        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onQuit(org.pircbotx.hooks.events.QuitEvent)
    {
        java.lang.Throwable $r8;
        java.util.HashMap $r0, $r2, $r5;
        com.zack6849.alphabot.LoggingListener r9;
        org.pircbotx.hooks.events.QuitEvent r1;
        org.pircbotx.UserSnapshot $r3, $r6;
        java.lang.String $r4, $r7;
        boolean $z0;

        r9 := @this: com.zack6849.alphabot.LoggingListener;

        r1 := @parameter0: org.pircbotx.hooks.events.QuitEvent;

        $r0 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        entermonitor $r0;

     label1:
        $r2 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r3 = virtualinvoke r1.<org.pircbotx.hooks.events.QuitEvent: org.pircbotx.UserSnapshot getUser()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.UserSnapshot: java.lang.String getNick()>();

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r6 = virtualinvoke r1.<org.pircbotx.hooks.events.QuitEvent: org.pircbotx.UserSnapshot getUser()>();

        $r7 = virtualinvoke $r6.<org.pircbotx.UserSnapshot: java.lang.String getNick()>();

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

     label2:
        exitmonitor $r0;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onNickChange(org.pircbotx.hooks.events.NickChangeEvent)
    {
        java.lang.Throwable $r8;
        org.pircbotx.hooks.events.NickChangeEvent r1;
        java.util.HashMap $r0, $r2, $r5;
        com.zack6849.alphabot.LoggingListener r9;
        java.lang.String $r4, $r7;
        org.pircbotx.User $r3, $r6;
        boolean $z0;

        r9 := @this: com.zack6849.alphabot.LoggingListener;

        r1 := @parameter0: org.pircbotx.hooks.events.NickChangeEvent;

        $r0 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        entermonitor $r0;

     label1:
        $r2 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r3 = virtualinvoke r1.<org.pircbotx.hooks.events.NickChangeEvent: org.pircbotx.User getUser()>();

        $r4 = virtualinvoke $r3.<org.pircbotx.User: java.lang.String getNick()>();

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = <com.zack6849.alphabot.Utils: java.util.HashMap userNickServMap>;

        $r6 = virtualinvoke r1.<org.pircbotx.hooks.events.NickChangeEvent: org.pircbotx.User getUser()>();

        $r7 = virtualinvoke $r6.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

     label2:
        exitmonitor $r0;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onMessage(org.pircbotx.hooks.events.MessageEvent)
    {
        java.lang.Object[] $r4;
        com.zack6849.alphabot.LoggingListener r13;
        org.pircbotx.hooks.events.MessageEvent r0;
        java.util.ArrayList $r1;
        org.pircbotx.Channel $r2, $r11;
        java.lang.String $r3, $r5, $r7, $r8, $r9, $r10, $r12;
        org.pircbotx.User $r6;
        boolean $z0;

        r13 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.MessageEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = newarray (java.lang.Object)[3];

        $r5 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r4[0] = $r5;

        $r6 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.User getUser()>();

        $r7 = virtualinvoke $r6.<org.pircbotx.User: java.lang.String getNick()>();

        $r4[1] = $r7;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: java.lang.String getMessage()>();

        $r9 = staticinvoke <org.pircbotx.Colors: java.lang.String removeFormattingAndColors(java.lang.String)>($r8);

        $r4[2] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s: %s", $r4);

        $r11 = virtualinvoke r0.<org.pircbotx.hooks.events.MessageEvent: org.pircbotx.Channel getChannel()>();

        $r12 = virtualinvoke $r11.<org.pircbotx.Channel: java.lang.String getName()>();

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r12, $r10);

     label1:
        return;
    }

    public void onJoin(org.pircbotx.hooks.events.JoinEvent)
    {
        org.pircbotx.PircBotX $r8;
        boolean $z0, $z1;
        org.pircbotx.hooks.events.JoinEvent r0;
        com.zack6849.alphabot.LoggingListener r50;
        java.lang.StringBuilder $r20, $r23, $r24, $r27, $r38, $r41, $r42, $r45;
        org.pircbotx.User $r18, $r21, $r25, $r36, $r39, $r43;
        java.lang.Object[] $r14, $r34;
        java.util.HashMap $r4, $r9;
        java.util.ArrayList $r1;
        java.lang.String $r3, $r6, $r7, $r11, $r12, $r15, $r17, $r19, $r22, $r26, $r28, $r30, $r31, $r33, $r35, $r37, $r40, $r44, $r46, $r48, $r49;
        org.pircbotx.Channel $r2, $r5, $r10, $r16, $r29, $r32, $r47;
        java.lang.Object $r13;

        r50 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.JoinEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r32 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.Channel getChannel()>();

        $r33 = virtualinvoke $r32.<org.pircbotx.Channel: java.lang.String getName()>();

        $r34 = newarray (java.lang.Object)[4];

        $r35 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r34[0] = $r35;

        $r36 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.User getUser()>();

        $r37 = virtualinvoke $r36.<org.pircbotx.User: java.lang.String getNick()>();

        $r34[1] = $r37;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.User getUser()>();

        $r40 = virtualinvoke $r39.<org.pircbotx.User: java.lang.String getLogin()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r43 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.User getUser()>();

        $r44 = virtualinvoke $r43.<org.pircbotx.User: java.lang.String getHostmask()>();

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34[2] = $r46;

        $r47 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.Channel getChannel()>();

        $r48 = virtualinvoke $r47.<org.pircbotx.Channel: java.lang.String getName()>();

        $r34[3] = $r48;

        $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s (%s) has joined %s", $r34);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r33, $r49);

     label1:
        $r4 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.Channel getChannel()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.Channel: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.Channel getChannel()>();

        $r11 = virtualinvoke $r10.<org.pircbotx.Channel: java.lang.String getName()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        $r15 = (java.lang.String) $r13;

        $r14 = newarray (java.lang.Object)[4];

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.Channel getChannel()>();

        $r17 = virtualinvoke $r16.<org.pircbotx.Channel: java.lang.String getName()>();

        $r14[0] = $r17;

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.User getUser()>();

        $r19 = virtualinvoke $r18.<org.pircbotx.User: java.lang.String getNick()>();

        $r14[1] = $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.User getUser()>();

        $r22 = virtualinvoke $r21.<org.pircbotx.User: java.lang.String getLogin()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r25 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.User getUser()>();

        $r26 = virtualinvoke $r25.<org.pircbotx.User: java.lang.String getHostmask()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14[2] = $r28;

        $r29 = virtualinvoke r0.<org.pircbotx.hooks.events.JoinEvent: org.pircbotx.Channel getChannel()>();

        $r30 = virtualinvoke $r29.<org.pircbotx.Channel: java.lang.String getName()>();

        $r14[3] = $r30;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s (%s) has joined %s", $r14);

        virtualinvoke $r8.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r15, $r31);

     label2:
        return;
    }

    public void onMode(org.pircbotx.hooks.events.ModeEvent)
    {
        org.pircbotx.PircBotX $r10;
        boolean $z0, $z1, $z2, $z3;
        com.zack6849.alphabot.LoggingListener r36;
        org.pircbotx.hooks.events.ModeEvent r0;
        org.pircbotx.User $r20, $r30;
        java.lang.Object[] $r16, $r28;
        java.util.HashMap $r4, $r11;
        java.util.ArrayList $r1;
        java.lang.String $r3, $r6, $r7, $r8, $r9, $r13, $r14, $r17, $r19, $r21, $r22, $r24, $r25, $r27, $r29, $r31, $r32, $r34, $r35;
        org.pircbotx.Channel $r2, $r5, $r12, $r18, $r23, $r26, $r33;
        java.lang.Object $r15;

        r36 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.ModeEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r26 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.Channel getChannel()>();

        $r27 = virtualinvoke $r26.<org.pircbotx.Channel: java.lang.String getName()>();

        $r28 = newarray (java.lang.Object)[4];

        $r29 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r28[0] = $r29;

        $r30 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.User getUser()>();

        $r31 = virtualinvoke $r30.<org.pircbotx.User: java.lang.String getNick()>();

        $r28[1] = $r31;

        $r32 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: java.lang.String getMode()>();

        $r28[2] = $r32;

        $r33 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.Channel getChannel()>();

        $r34 = virtualinvoke $r33.<org.pircbotx.Channel: java.lang.String getName()>();

        $r28[3] = $r34;

        $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s sets mode %s on %s", $r28);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r27, $r35);

     label1:
        $r4 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.Channel getChannel()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.Channel: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: java.lang.String getMode()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("+b");

        if $z2 != 0 goto label2;

        $r9 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: java.lang.String getMode()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("-b");

        if $z3 != 0 goto label2;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.PircBotX getBot()>();

        $r11 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r12 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.Channel getChannel()>();

        $r13 = virtualinvoke $r12.<org.pircbotx.Channel: java.lang.String getName()>();

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase()>();

        $r15 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        $r17 = (java.lang.String) $r15;

        $r16 = newarray (java.lang.Object)[4];

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.Channel getChannel()>();

        $r19 = virtualinvoke $r18.<org.pircbotx.Channel: java.lang.String getName()>();

        $r16[0] = $r19;

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.User getUser()>();

        $r21 = virtualinvoke $r20.<org.pircbotx.User: java.lang.String getNick()>();

        $r16[1] = $r21;

        $r22 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: java.lang.String getMode()>();

        $r16[2] = $r22;

        $r23 = virtualinvoke r0.<org.pircbotx.hooks.events.ModeEvent: org.pircbotx.Channel getChannel()>();

        $r24 = virtualinvoke $r23.<org.pircbotx.Channel: java.lang.String getName()>();

        $r16[3] = $r24;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s sets mode %s on %s", $r16);

        virtualinvoke $r10.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r17, $r25);

     label2:
        return;
    }

    public void onSetSecret(org.pircbotx.hooks.events.SetSecretEvent)
    {
        java.lang.Object[] $r6;
        com.zack6849.alphabot.LoggingListener r13;
        java.util.ArrayList $r1;
        org.pircbotx.Channel $r2, $r4, $r10;
        org.pircbotx.hooks.events.SetSecretEvent r0;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r12;
        org.pircbotx.User $r8;
        boolean $z0;

        r13 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.SetSecretEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.SetSecretEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.pircbotx.hooks.events.SetSecretEvent: org.pircbotx.Channel getChannel()>();

        $r5 = virtualinvoke $r4.<org.pircbotx.Channel: java.lang.String getName()>();

        $r6 = newarray (java.lang.Object)[3];

        $r7 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r6[0] = $r7;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.SetSecretEvent: org.pircbotx.User getUser()>();

        $r9 = virtualinvoke $r8.<org.pircbotx.User: java.lang.String getNick()>();

        $r6[1] = $r9;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.SetSecretEvent: org.pircbotx.Channel getChannel()>();

        $r11 = virtualinvoke $r10.<org.pircbotx.Channel: java.lang.String getName()>();

        $r6[2] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s sets %s to secret", $r6);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r5, $r12);

     label1:
        return;
    }

    public void onTopic(org.pircbotx.hooks.events.TopicEvent)
    {
        org.pircbotx.hooks.events.TopicEvent r0;
        org.pircbotx.PircBotX $r8;
        boolean $z0, $z1;
        com.zack6849.alphabot.LoggingListener r30;
        org.pircbotx.User $r18, $r26;
        java.lang.Object[] $r14, $r24;
        java.util.HashMap $r4, $r9;
        java.util.ArrayList $r1;
        java.lang.String $r3, $r6, $r7, $r11, $r12, $r15, $r17, $r19, $r20, $r21, $r23, $r25, $r27, $r28, $r29;
        org.pircbotx.Channel $r2, $r5, $r10, $r16, $r22;
        java.lang.Object $r13;

        r30 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.TopicEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r22 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: org.pircbotx.Channel getChannel()>();

        $r23 = virtualinvoke $r22.<org.pircbotx.Channel: java.lang.String getName()>();

        $r24 = newarray (java.lang.Object)[3];

        $r25 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r24[0] = $r25;

        $r26 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: org.pircbotx.User getUser()>();

        $r27 = virtualinvoke $r26.<org.pircbotx.User: java.lang.String getNick()>();

        $r24[1] = $r27;

        $r28 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: java.lang.String getTopic()>();

        $r24[2] = $r28;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s set the topic to: %s", $r24);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r23, $r29);

     label1:
        $r4 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: org.pircbotx.Channel getChannel()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.Channel: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: org.pircbotx.Channel getChannel()>();

        $r11 = virtualinvoke $r10.<org.pircbotx.Channel: java.lang.String getName()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        $r15 = (java.lang.String) $r13;

        $r14 = newarray (java.lang.Object)[3];

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: org.pircbotx.Channel getChannel()>();

        $r17 = virtualinvoke $r16.<org.pircbotx.Channel: java.lang.String getName()>();

        $r14[0] = $r17;

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: org.pircbotx.User getUser()>();

        $r19 = virtualinvoke $r18.<org.pircbotx.User: java.lang.String getNick()>();

        $r14[1] = $r19;

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.TopicEvent: java.lang.String getTopic()>();

        $r14[2] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s set the topic to: %s", $r14);

        virtualinvoke $r8.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r15, $r21);

     label2:
        return;
    }

    public void onSetTopicProtection(org.pircbotx.hooks.events.SetTopicProtectionEvent)
    {
        org.pircbotx.hooks.events.SetTopicProtectionEvent r0;
        org.pircbotx.PircBotX $r8;
        boolean $z0, $z1, $z2, $z3;
        com.zack6849.alphabot.LoggingListener r32;
        org.pircbotx.User $r18, $r27;
        java.lang.Object[] $r14, $r25;
        java.util.HashMap $r4, $r9;
        java.util.ArrayList $r1;
        java.lang.String $r3, $r6, $r7, $r11, $r12, $r15, $r17, $r19, $r21, $r22, $r24, $r26, $r28, $r30, $r31;
        org.pircbotx.Channel $r2, $r5, $r10, $r16, $r20, $r23, $r29;
        java.lang.Object $r13;

        r32 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.SetTopicProtectionEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r23 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.Channel getChannel()>();

        $r24 = virtualinvoke $r23.<org.pircbotx.Channel: java.lang.String getName()>();

        $r25 = newarray (java.lang.Object)[3];

        $r26 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r25[0] = $r26;

        $r27 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.User getUser()>();

        $r28 = virtualinvoke $r27.<org.pircbotx.User: java.lang.String getNick()>();

        $r25[1] = $r28;

        $r29 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.Channel getChannel()>();

        $z3 = virtualinvoke $r29.<org.pircbotx.Channel: boolean hasTopicProtection()>();

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3);

        $r25[2] = $r30;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s set topic protection to %s", $r25);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r24, $r31);

     label1:
        $r4 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.Channel getChannel()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.Channel: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.Channel getChannel()>();

        $r11 = virtualinvoke $r10.<org.pircbotx.Channel: java.lang.String getName()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        $r15 = (java.lang.String) $r13;

        $r14 = newarray (java.lang.Object)[3];

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.Channel getChannel()>();

        $r17 = virtualinvoke $r16.<org.pircbotx.Channel: java.lang.String getName()>();

        $r14[0] = $r17;

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.User getUser()>();

        $r19 = virtualinvoke $r18.<org.pircbotx.User: java.lang.String getNick()>();

        $r14[1] = $r19;

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.SetTopicProtectionEvent: org.pircbotx.Channel getChannel()>();

        $z2 = virtualinvoke $r20.<org.pircbotx.Channel: boolean hasTopicProtection()>();

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2);

        $r14[2] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s set topic protection to %s", $r14);

        virtualinvoke $r8.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r15, $r22);

     label2:
        return;
    }

    public void onSetChannelBan(org.pircbotx.hooks.events.SetChannelBanEvent)
    {
        org.pircbotx.PircBotX $r8;
        boolean $z0, $z1;
        com.zack6849.alphabot.LoggingListener r30;
        org.pircbotx.User $r18, $r26;
        java.lang.Object[] $r14, $r24;
        java.util.HashMap $r4, $r9;
        org.pircbotx.hooks.events.SetChannelBanEvent r0;
        java.util.ArrayList $r1;
        java.lang.String $r3, $r6, $r7, $r11, $r12, $r15, $r17, $r19, $r20, $r21, $r23, $r25, $r27, $r28, $r29;
        org.pircbotx.Channel $r2, $r5, $r10, $r16, $r22;
        java.lang.Object $r13;

        r30 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.SetChannelBanEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r22 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r23 = virtualinvoke $r22.<org.pircbotx.Channel: java.lang.String getName()>();

        $r24 = newarray (java.lang.Object)[3];

        $r25 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r24[0] = $r25;

        $r26 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: org.pircbotx.User getUser()>();

        $r27 = virtualinvoke $r26.<org.pircbotx.User: java.lang.String getNick()>();

        $r24[1] = $r27;

        $r28 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: java.lang.String getHostmask()>();

        $r24[2] = $r28;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s set ban on %s", $r24);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r23, $r29);

     label1:
        $r4 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.Channel: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r11 = virtualinvoke $r10.<org.pircbotx.Channel: java.lang.String getName()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        $r15 = (java.lang.String) $r13;

        $r14 = newarray (java.lang.Object)[3];

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r17 = virtualinvoke $r16.<org.pircbotx.Channel: java.lang.String getName()>();

        $r14[0] = $r17;

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: org.pircbotx.User getUser()>();

        $r19 = virtualinvoke $r18.<org.pircbotx.User: java.lang.String getNick()>();

        $r14[1] = $r19;

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.SetChannelBanEvent: java.lang.String getHostmask()>();

        $r14[2] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s set ban on %s", $r14);

        virtualinvoke $r8.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r15, $r21);

     label2:
        return;
    }

    public void onRemoveChannelBan(org.pircbotx.hooks.events.RemoveChannelBanEvent)
    {
        org.pircbotx.hooks.events.RemoveChannelBanEvent r0;
        org.pircbotx.PircBotX $r8;
        boolean $z0, $z1;
        com.zack6849.alphabot.LoggingListener r30;
        org.pircbotx.User $r18, $r26;
        java.lang.Object[] $r14, $r24;
        java.util.HashMap $r4, $r9;
        java.util.ArrayList $r1;
        java.lang.String $r3, $r6, $r7, $r11, $r12, $r15, $r17, $r19, $r20, $r21, $r23, $r25, $r27, $r28, $r29;
        org.pircbotx.Channel $r2, $r5, $r10, $r16, $r22;
        java.lang.Object $r13;

        r30 := @this: com.zack6849.alphabot.LoggingListener;

        r0 := @parameter0: org.pircbotx.hooks.events.RemoveChannelBanEvent;

        $r1 = <com.zack6849.alphabot.Config: java.util.ArrayList LOGGED_CHANS>;

        $r2 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r3 = virtualinvoke $r2.<org.pircbotx.Channel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r22 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r23 = virtualinvoke $r22.<org.pircbotx.Channel: java.lang.String getName()>();

        $r24 = newarray (java.lang.Object)[3];

        $r25 = staticinvoke <com.zack6849.alphabot.Utils: java.lang.String getTime()>();

        $r24[0] = $r25;

        $r26 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: org.pircbotx.User getUser()>();

        $r27 = virtualinvoke $r26.<org.pircbotx.User: java.lang.String getNick()>();

        $r24[1] = $r27;

        $r28 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: java.lang.String getHostmask()>();

        $r24[2] = $r28;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s removes ban on %s", $r24);

        staticinvoke <com.zack6849.alphabot.LoggingListener: void log(java.lang.String,java.lang.String)>($r23, $r29);

     label1:
        $r4 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r5 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r6 = virtualinvoke $r5.<org.pircbotx.Channel: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: org.pircbotx.PircBotX getBot()>();

        $r9 = <com.zack6849.alphabot.Bot: java.util.HashMap relay>;

        $r10 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r11 = virtualinvoke $r10.<org.pircbotx.Channel: java.lang.String getName()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        $r15 = (java.lang.String) $r13;

        $r14 = newarray (java.lang.Object)[3];

        $r16 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: org.pircbotx.Channel getChannel()>();

        $r17 = virtualinvoke $r16.<org.pircbotx.Channel: java.lang.String getName()>();

        $r14[0] = $r17;

        $r18 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: org.pircbotx.User getUser()>();

        $r19 = virtualinvoke $r18.<org.pircbotx.User: java.lang.String getNick()>();

        $r14[1] = $r19;

        $r20 = virtualinvoke r0.<org.pircbotx.hooks.events.RemoveChannelBanEvent: java.lang.String getHostmask()>();

        $r14[2] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s] %s removes ban on %s", $r14);

        virtualinvoke $r8.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r15, $r21);

     label2:
        return;
    }

    static void <clinit>()
    {
        com.zack6849.alphabot.LoggingListener$FileCloseThread $r3;
        java.lang.Runtime $r1;
        java.lang.Thread $r2;
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.zack6849.alphabot.LoggingListener: java.util.HashMap fileWriterMap> = $r0;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r2 = new java.lang.Thread;

        $r3 = new com.zack6849.alphabot.LoggingListener$FileCloseThread;

        specialinvoke $r3.<com.zack6849.alphabot.LoggingListener$FileCloseThread: void <init>(com.zack6849.alphabot.LoggingListener$1)>(null);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);

        virtualinvoke $r1.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r2);

        return;
    }
}
