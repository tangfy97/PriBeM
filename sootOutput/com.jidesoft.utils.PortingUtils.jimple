public class com.jidesoft.utils.PortingUtils extends java.lang.Object
{
    private static java.awt.Rectangle SCREEN_BOUNDS;
    private static java.awt.geom.Area SCREEN_AREA;
    private static java.awt.Rectangle[] SCREENS;
    private static java.awt.Insets[] INSETS;
    private static java.lang.Thread _initializationThread;
    public static boolean INITIALIZE_SCREEN_AREA_USING_THREAD;

    public void <init>()
    {
        com.jidesoft.utils.PortingUtils r0;

        r0 := @this: com.jidesoft.utils.PortingUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.awt.Component getCurrentFocusComponent(java.awt.AWTEvent)
    {
        java.awt.AWTEvent r2;
        java.awt.KeyboardFocusManager $r0;
        java.awt.Component $r1;

        r2 := @parameter0: java.awt.AWTEvent;

        $r0 = staticinvoke <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>();

        $r1 = virtualinvoke $r0.<java.awt.KeyboardFocusManager: java.awt.Component getFocusOwner()>();

        return $r1;
    }

    public static int getFrameState(java.awt.Frame)
    {
        int $i0;
        java.awt.Frame r0;

        r0 := @parameter0: java.awt.Frame;

        $i0 = virtualinvoke r0.<java.awt.Frame: int getExtendedState()>();

        return $i0;
    }

    public static void setFrameState(java.awt.Frame, int)
    {
        int i0;
        java.awt.Frame r0;

        r0 := @parameter0: java.awt.Frame;

        i0 := @parameter1: int;

        virtualinvoke r0.<java.awt.Frame: void setExtendedState(int)>(i0);

        return;
    }

    public static int getMouseModifiers(java.awt.event.MouseEvent)
    {
        int $i0;
        java.awt.event.MouseEvent r0;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getModifiersEx()>();

        return $i0;
    }

    public static void removeFocus(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;

        r0 := @parameter0: javax.swing.JComponent;

        virtualinvoke r0.<javax.swing.JComponent: void setRequestFocusEnabled(boolean)>(0);

        virtualinvoke r0.<javax.swing.JComponent: void setFocusable(boolean)>(0);

        return;
    }

    public static void removeButtonBorder(javax.swing.AbstractButton)
    {
        java.awt.Insets $r1;
        javax.swing.AbstractButton r0;
        javax.swing.border.Border $r2;

        r0 := @parameter0: javax.swing.AbstractButton;

        virtualinvoke r0.<javax.swing.AbstractButton: void setContentAreaFilled(boolean)>(0);

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        virtualinvoke r0.<javax.swing.AbstractButton: void setMargin(java.awt.Insets)>($r1);

        $r2 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        virtualinvoke r0.<javax.swing.AbstractButton: void setBorder(javax.swing.border.Border)>($r2);

        return;
    }

    public static java.awt.Rectangle containsInScreenBounds(java.awt.Component, java.awt.Rectangle)
    {
        java.awt.Rectangle r1, $r2;
        java.awt.Component r0;

        r0 := @parameter0: java.awt.Component;

        r1 := @parameter1: java.awt.Rectangle;

        $r2 = staticinvoke <com.jidesoft.utils.PortingUtils: java.awt.Rectangle containsInScreenBounds(java.awt.Component,java.awt.Rectangle,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static java.awt.Rectangle containsInScreenBounds(java.awt.Component, java.awt.Rectangle, boolean)
    {
        java.awt.Point $r3;
        boolean z0;
        java.awt.Component r0;
        java.awt.Dimension $r5;
        java.awt.Rectangle $r1, r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;

        r0 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.awt.Rectangle;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <com.jidesoft.utils.PortingUtils: java.awt.Rectangle getScreenBounds(java.awt.Component,boolean)>(r0, z0);

        $r3 = virtualinvoke r2.<java.awt.Rectangle: java.awt.Point getLocation()>();

        $i1 = $r3.<java.awt.Point: int x>;

        $i0 = r2.<java.awt.Rectangle: int width>;

        $i5 = $i1 + $i0;

        $i3 = $r1.<java.awt.Rectangle: int x>;

        $i2 = $r1.<java.awt.Rectangle: int width>;

        $i4 = $i3 + $i2;

        if $i5 <= $i4 goto label1;

        $i24 = $r1.<java.awt.Rectangle: int x>;

        $i23 = $r1.<java.awt.Rectangle: int width>;

        $i26 = $i24 + $i23;

        $i25 = r2.<java.awt.Rectangle: int width>;

        $i27 = $i26 - $i25;

        $r3.<java.awt.Point: int x> = $i27;

     label1:
        $i7 = $r3.<java.awt.Point: int y>;

        $i6 = r2.<java.awt.Rectangle: int height>;

        $i11 = $i7 + $i6;

        $i9 = $r1.<java.awt.Rectangle: int y>;

        $i8 = $r1.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        if $i11 <= $i10 goto label2;

        $i19 = $r1.<java.awt.Rectangle: int y>;

        $i18 = $r1.<java.awt.Rectangle: int height>;

        $i21 = $i19 + $i18;

        $i20 = r2.<java.awt.Rectangle: int height>;

        $i22 = $i21 - $i20;

        $r3.<java.awt.Point: int y> = $i22;

     label2:
        $i13 = $r3.<java.awt.Point: int x>;

        $i12 = $r1.<java.awt.Rectangle: int x>;

        if $i13 >= $i12 goto label3;

        $i17 = $r1.<java.awt.Rectangle: int x>;

        $r3.<java.awt.Point: int x> = $i17;

     label3:
        $i15 = $r3.<java.awt.Point: int y>;

        $i14 = $r1.<java.awt.Rectangle: int y>;

        if $i15 >= $i14 goto label4;

        $i16 = $r1.<java.awt.Rectangle: int y>;

        $r3.<java.awt.Point: int y> = $i16;

     label4:
        $r4 = new java.awt.Rectangle;

        $r5 = virtualinvoke r2.<java.awt.Rectangle: java.awt.Dimension getSize()>();

        specialinvoke $r4.<java.awt.Rectangle: void <init>(java.awt.Point,java.awt.Dimension)>($r3, $r5);

        return $r4;
    }

    public static java.awt.Rectangle overlapWithScreenBounds(java.awt.Component, java.awt.Rectangle)
    {
        java.awt.Point $r3;
        java.awt.Component r0;
        java.awt.Dimension $r5;
        java.awt.Rectangle $r1, r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;

        r0 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.awt.Rectangle;

        $r1 = staticinvoke <com.jidesoft.utils.PortingUtils: java.awt.Rectangle getScreenBounds(java.awt.Component)>(r0);

        $r3 = virtualinvoke r2.<java.awt.Rectangle: java.awt.Point getLocation()>();

        $i3 = $r3.<java.awt.Point: int x>;

        $i1 = $r1.<java.awt.Rectangle: int x>;

        $i0 = $r1.<java.awt.Rectangle: int width>;

        $i2 = $i1 + $i0;

        if $i3 <= $i2 goto label1;

        $i24 = $r1.<java.awt.Rectangle: int x>;

        $i23 = $r1.<java.awt.Rectangle: int width>;

        $i26 = $i24 + $i23;

        $i25 = r2.<java.awt.Rectangle: int width>;

        $i27 = $i26 - $i25;

        $r3.<java.awt.Point: int x> = $i27;

     label1:
        $i7 = $r3.<java.awt.Point: int y>;

        $i5 = $r1.<java.awt.Rectangle: int y>;

        $i4 = $r1.<java.awt.Rectangle: int height>;

        $i6 = $i5 + $i4;

        if $i7 <= $i6 goto label2;

        $i19 = $r1.<java.awt.Rectangle: int y>;

        $i18 = $r1.<java.awt.Rectangle: int height>;

        $i21 = $i19 + $i18;

        $i20 = r2.<java.awt.Rectangle: int height>;

        $i22 = $i21 - $i20;

        $r3.<java.awt.Point: int y> = $i22;

     label2:
        $i9 = $r3.<java.awt.Point: int x>;

        $i8 = r2.<java.awt.Rectangle: int width>;

        $i11 = $i9 + $i8;

        $i10 = $r1.<java.awt.Rectangle: int x>;

        if $i11 >= $i10 goto label3;

        $i17 = $r1.<java.awt.Rectangle: int x>;

        $r3.<java.awt.Point: int x> = $i17;

     label3:
        $i13 = $r3.<java.awt.Point: int y>;

        $i12 = r2.<java.awt.Rectangle: int height>;

        $i15 = $i13 + $i12;

        $i14 = $r1.<java.awt.Rectangle: int y>;

        if $i15 >= $i14 goto label4;

        $i16 = $r1.<java.awt.Rectangle: int y>;

        $r3.<java.awt.Point: int y> = $i16;

     label4:
        $r4 = new java.awt.Rectangle;

        $r5 = virtualinvoke r2.<java.awt.Rectangle: java.awt.Dimension getSize()>();

        specialinvoke $r4.<java.awt.Rectangle: void <init>(java.awt.Point,java.awt.Dimension)>($r3, $r5);

        return $r4;
    }

    public static java.awt.Dimension getScreenSize(java.awt.Component)
    {
        java.awt.Rectangle $r0;
        java.awt.Insets $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        java.awt.GraphicsConfiguration $r3, $r5;
        java.awt.Component r2;
        java.awt.Dimension $r1;
        java.awt.Toolkit $r4;

        r2 := @parameter0: java.awt.Component;

        staticinvoke <com.jidesoft.utils.PortingUtils: void ensureScreenBounds()>();

        $r0 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS>;

        $r1 = virtualinvoke $r0.<java.awt.Rectangle: java.awt.Dimension getSize()>();

        if r2 == null goto label1;

        $z0 = r2 instanceof javax.swing.JApplet;

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r2.<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        if $r3 == null goto label1;

        $r4 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r5 = virtualinvoke r2.<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        $r6 = virtualinvoke $r4.<java.awt.Toolkit: java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration)>($r5);

        $i3 = $r1.<java.awt.Dimension: int width>;

        $i1 = $r6.<java.awt.Insets: int left>;

        $i0 = $r6.<java.awt.Insets: int right>;

        $i2 = $i1 + $i0;

        $i4 = $i3 - $i2;

        $r1.<java.awt.Dimension: int width> = $i4;

        $i8 = $r1.<java.awt.Dimension: int height>;

        $i6 = $r6.<java.awt.Insets: int top>;

        $i5 = $r6.<java.awt.Insets: int bottom>;

        $i7 = $i6 + $i5;

        $i9 = $i8 - $i7;

        $r1.<java.awt.Dimension: int height> = $i9;

     label1:
        return $r1;
    }

    public static java.awt.Dimension getLocalScreenSize(java.awt.Component)
    {
        java.awt.Rectangle $r3;
        java.awt.Insets $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        java.awt.GraphicsConfiguration $r1, $r2;
        java.awt.Component r0;
        java.awt.Dimension $r6, $r7;
        java.awt.Toolkit $r4;

        r0 := @parameter0: java.awt.Component;

        staticinvoke <com.jidesoft.utils.PortingUtils: void ensureScreenBounds()>();

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.swing.JApplet;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        $r3 = virtualinvoke $r2.<java.awt.GraphicsConfiguration: java.awt.Rectangle getBounds()>();

        $r4 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r5 = virtualinvoke $r4.<java.awt.Toolkit: java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration)>($r2);

        $i3 = $r3.<java.awt.Rectangle: int width>;

        $i1 = $r5.<java.awt.Insets: int left>;

        $i0 = $r5.<java.awt.Insets: int right>;

        $i2 = $i1 + $i0;

        $i4 = $i3 - $i2;

        $r3.<java.awt.Rectangle: int width> = $i4;

        $i8 = $r3.<java.awt.Rectangle: int height>;

        $i6 = $r5.<java.awt.Insets: int top>;

        $i5 = $r5.<java.awt.Insets: int bottom>;

        $i7 = $i6 + $i5;

        $i9 = $i8 - $i7;

        $r3.<java.awt.Rectangle: int height> = $i9;

        $r6 = virtualinvoke $r3.<java.awt.Rectangle: java.awt.Dimension getSize()>();

        return $r6;

     label1:
        $r7 = staticinvoke <com.jidesoft.utils.PortingUtils: java.awt.Dimension getScreenSize(java.awt.Component)>(r0);

        return $r7;
    }

    public static java.awt.Rectangle getScreenBounds(java.awt.Component, boolean)
    {
        java.awt.Rectangle r0, $r8, $r10;
        java.awt.Insets $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0, $z1;
        java.awt.GraphicsConfiguration $r2, $r4, $r6, $r7;
        java.awt.Component r1;
        java.lang.Object $r9;
        java.awt.Toolkit $r3;

        r1 := @parameter0: java.awt.Component;

        z0 := @parameter1: boolean;

        staticinvoke <com.jidesoft.utils.PortingUtils: void ensureScreenBounds()>();

        if z0 == 0 goto label1;

        if r1 == null goto label1;

        $r6 = virtualinvoke r1.<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        if $r6 != null goto label2;

     label1:
        $r8 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS>;

        $r9 = virtualinvoke $r8.<java.awt.Rectangle: java.lang.Object clone()>();

        $r10 = (java.awt.Rectangle) $r9;

        goto label3;

     label2:
        $r7 = virtualinvoke r1.<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        $r10 = virtualinvoke $r7.<java.awt.GraphicsConfiguration: java.awt.Rectangle getBounds()>();

     label3:
        r0 = $r10;

        if r1 == null goto label4;

        $z1 = r1 instanceof javax.swing.JApplet;

        if $z1 != 0 goto label4;

        $r2 = virtualinvoke r1.<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        if $r2 == null goto label4;

        $r3 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r4 = virtualinvoke r1.<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        $r5 = virtualinvoke $r3.<java.awt.Toolkit: java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration)>($r4);

        $i1 = $r10.<java.awt.Rectangle: int x>;

        $i0 = $r5.<java.awt.Insets: int left>;

        $i2 = $i1 + $i0;

        $r10.<java.awt.Rectangle: int x> = $i2;

        $i4 = $r10.<java.awt.Rectangle: int y>;

        $i3 = $r5.<java.awt.Insets: int top>;

        $i5 = $i4 + $i3;

        $r10.<java.awt.Rectangle: int y> = $i5;

        $i9 = $r10.<java.awt.Rectangle: int width>;

        $i7 = $r5.<java.awt.Insets: int left>;

        $i6 = $r5.<java.awt.Insets: int right>;

        $i8 = $i7 + $i6;

        $i10 = $i9 - $i8;

        $r10.<java.awt.Rectangle: int width> = $i10;

        $i14 = $r10.<java.awt.Rectangle: int height>;

        $i12 = $r5.<java.awt.Insets: int top>;

        $i11 = $r5.<java.awt.Insets: int bottom>;

        $i13 = $i12 + $i11;

        $i15 = $i14 - $i13;

        $r10.<java.awt.Rectangle: int height> = $i15;

     label4:
        return r0;
    }

    public static java.awt.Rectangle getScreenBounds(java.awt.Component)
    {
        java.awt.Rectangle $r1;
        java.awt.Component r0;

        r0 := @parameter0: java.awt.Component;

        $r1 = staticinvoke <com.jidesoft.utils.PortingUtils: java.awt.Rectangle getScreenBounds(java.awt.Component,boolean)>(r0, 0);

        return $r1;
    }

    public static java.awt.Rectangle getLocalScreenBounds()
    {
        java.awt.Rectangle $r1;
        java.awt.GraphicsEnvironment $r0;

        $r0 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r1 = virtualinvoke $r0.<java.awt.GraphicsEnvironment: java.awt.Rectangle getMaximumWindowBounds()>();

        return $r1;
    }

    private static void ensureScreenBounds()
    {
        java.awt.Rectangle $r0, $r1, $r6, $r7, $r8;
        java.awt.GraphicsConfiguration $r5;
        java.awt.GraphicsDevice r4;
        java.awt.GraphicsEnvironment $r2;
        java.awt.GraphicsDevice[] $r3;
        int i0, i1;

        $r0 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS>;

        if $r0 != null goto label2;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS> = $r1;

        $r2 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r3 = virtualinvoke $r2.<java.awt.GraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = $r3[i1];

        $r5 = virtualinvoke r4.<java.awt.GraphicsDevice: java.awt.GraphicsConfiguration getDefaultConfiguration()>();

        $r6 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS>;

        $r7 = virtualinvoke $r5.<java.awt.GraphicsConfiguration: java.awt.Rectangle getBounds()>();

        $r8 = virtualinvoke $r6.<java.awt.Rectangle: java.awt.Rectangle union(java.awt.Rectangle)>($r7);

        <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS> = $r8;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static synchronized void initializeScreenArea()
    {
        staticinvoke <com.jidesoft.utils.PortingUtils: void initializeScreenArea(int)>(5);

        return;
    }

    public static synchronized void initializeScreenArea(int)
    {
        java.lang.Thread $r0, $r2, $r3, $r4;
        com.jidesoft.utils.PortingUtils$1 $r1;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        if $r0 != null goto label2;

        $r1 = new com.jidesoft.utils.PortingUtils$1;

        specialinvoke $r1.<com.jidesoft.utils.PortingUtils$1: void <init>()>();

        <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread> = $r1;

        $r2 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        virtualinvoke $r2.<java.lang.Thread: void setPriority(int)>(i0);

        $z0 = <com.jidesoft.utils.PortingUtils: boolean INITIALIZE_SCREEN_AREA_USING_THREAD>;

        if $z0 == 0 goto label1;

        $r4 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        goto label2;

     label1:
        $r3 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        virtualinvoke $r3.<java.lang.Thread: void run()>();

     label2:
        return;
    }

    public static boolean isInitializationThreadAlive()
    {
        java.lang.Thread $r0, $r1;
        boolean $z0, $z1;

        $r0 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        if $r0 == null goto label1;

        $r1 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        $z0 = virtualinvoke $r1.<java.lang.Thread: boolean isAlive()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isInitalizationThreadStarted()
    {
        java.lang.Thread $r0;
        boolean $z0;

        $r0 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        if $r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static void waitForInitialization()
    {
        java.lang.InterruptedException $r1;
        java.lang.Thread $r0, $r2;
        boolean $z0;

        staticinvoke <com.jidesoft.utils.PortingUtils: void initializeScreenArea()>();

     label1:
        $r2 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        if $r2 == null goto label5;

        $r0 = <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread>;

        $z0 = virtualinvoke $r0.<java.lang.Thread: boolean isAlive()>();

        if $z0 == 0 goto label5;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label3:
        goto label1;

     label4:
        $r1 := @caughtexception;

        goto label1;

     label5:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public static java.awt.Rectangle ensureVisible(java.awt.Component, java.awt.Rectangle)
    {
        java.awt.Rectangle $r0, r1, $r4;
        java.awt.Point $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        java.awt.Component r3;

        r3 := @parameter0: java.awt.Component;

        r1 := @parameter1: java.awt.Rectangle;

        $r0 = staticinvoke <com.jidesoft.utils.PortingUtils: java.awt.Rectangle getLocalScreenBounds()>();

        $r2 = virtualinvoke r1.<java.awt.Rectangle: java.awt.Point getLocation()>();

        $z0 = virtualinvoke $r0.<java.awt.Rectangle: boolean contains(java.awt.Point)>($r2);

        if $z0 != 0 goto label4;

        $r4 = staticinvoke <com.jidesoft.utils.PortingUtils: java.awt.Rectangle getScreenBounds(java.awt.Component,boolean)>(r3, 0);

        $i3 = r1.<java.awt.Rectangle: int x>;

        $i1 = $r4.<java.awt.Rectangle: int x>;

        $i0 = $r4.<java.awt.Rectangle: int width>;

        $i2 = $i1 + $i0;

        if $i3 > $i2 goto label1;

        $i9 = r1.<java.awt.Rectangle: int x>;

        $i8 = $r4.<java.awt.Rectangle: int x>;

        if $i9 >= $i8 goto label2;

     label1:
        $i4 = $r0.<java.awt.Rectangle: int x>;

        r1.<java.awt.Rectangle: int x> = $i4;

     label2:
        $i10 = r1.<java.awt.Rectangle: int y>;

        $i11 = $r4.<java.awt.Rectangle: int y>;

        $i12 = $r4.<java.awt.Rectangle: int height>;

        $i13 = $i11 + $i12;

        if $i10 > $i13 goto label3;

        $i7 = r1.<java.awt.Rectangle: int y>;

        $i6 = $r4.<java.awt.Rectangle: int y>;

        if $i7 >= $i6 goto label4;

     label3:
        $i5 = $r0.<java.awt.Rectangle: int y>;

        r1.<java.awt.Rectangle: int y> = $i5;

     label4:
        return r1;
    }

    public static java.awt.Rectangle ensureOnScreen(java.awt.Rectangle)
    {
        java.awt.geom.Area $r2;
        java.awt.Point $r3;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Rectangle $r0, r1, $r5, $r7, r9, r11, r12;
        java.awt.Rectangle[] $r4, $r6, $r8, r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, i32, i33;

        r1 := @parameter0: java.awt.Rectangle;

        $r0 = staticinvoke <com.jidesoft.utils.PortingUtils: java.awt.Rectangle getLocalScreenBounds()>();

        $z0 = virtualinvoke $r0.<java.awt.Rectangle: boolean contains(java.awt.Rectangle)>(r1);

        if $z0 == 0 goto label01;

        return r1;

     label01:
        staticinvoke <com.jidesoft.utils.PortingUtils: void waitForInitialization()>();

        $r2 = <com.jidesoft.utils.PortingUtils: java.awt.geom.Area SCREEN_AREA>;

        $z1 = virtualinvoke $r2.<java.awt.geom.Area: boolean contains(java.awt.geom.Rectangle2D)>(r1);

        if $z1 == 0 goto label02;

        return r1;

     label02:
        r9 = null;

        $r3 = virtualinvoke r1.<java.awt.Rectangle: java.awt.Point getLocation()>();

        r10 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        i29 = lengthof r10;

        i30 = 0;

     label03:
        if i30 >= i29 goto label05;

        r11 = r10[i30];

        $z3 = virtualinvoke r11.<java.awt.Rectangle: boolean contains(java.awt.Point)>($r3);

        if $z3 == 0 goto label04;

        r9 = r11;

        goto label05;

     label04:
        i30 = i30 + 1;

        goto label03;

     label05:
        $r8 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        $i28 = lengthof $r8;

        i31 = 0;

     label06:
        if i31 >= $i28 goto label08;

        r12 = $r8[i31];

        $z2 = virtualinvoke r12.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>(r1);

        if $z2 == 0 goto label07;

        r9 = r12;

        goto label08;

     label07:
        i31 = i31 + 1;

        goto label06;

     label08:
        if r9 != null goto label09;

        $r4 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        $r5 = $r4[0];

        $i21 = $r5.<java.awt.Rectangle: int width>;

        $i20 = r1.<java.awt.Rectangle: int width>;

        $i22 = $i21 - $i20;

        $i23 = $i22 / 2;

        r1.<java.awt.Rectangle: int x> = $i23;

        $r6 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        $r7 = $r6[0];

        $i25 = $r7.<java.awt.Rectangle: int width>;

        $i24 = r1.<java.awt.Rectangle: int width>;

        $i26 = $i25 - $i24;

        $i27 = $i26 / 2;

        r1.<java.awt.Rectangle: int y> = $i27;

        return r1;

     label09:
        $i1 = r1.<java.awt.Rectangle: int x>;

        $i0 = r1.<java.awt.Rectangle: int width>;

        i32 = $i1 + $i0;

        $i3 = r9.<java.awt.Rectangle: int x>;

        $i2 = r9.<java.awt.Rectangle: int width>;

        i33 = $i3 + $i2;

        if i32 <= i33 goto label10;

        $i18 = r1.<java.awt.Rectangle: int width>;

        $i19 = i33 - $i18;

        r1.<java.awt.Rectangle: int x> = $i19;

     label10:
        $i5 = r1.<java.awt.Rectangle: int x>;

        $i4 = r9.<java.awt.Rectangle: int x>;

        if $i5 >= $i4 goto label11;

        $i15 = r9.<java.awt.Rectangle: int x>;

        r1.<java.awt.Rectangle: int x> = $i15;

     label11:
        $i7 = r1.<java.awt.Rectangle: int y>;

        $i6 = r1.<java.awt.Rectangle: int height>;

        $i16 = $i7 + $i6;

        $i9 = r9.<java.awt.Rectangle: int y>;

        $i8 = r9.<java.awt.Rectangle: int height>;

        $i17 = $i9 + $i8;

        if $i16 <= $i17 goto label12;

        $i13 = r1.<java.awt.Rectangle: int height>;

        $i14 = $i17 - $i13;

        r1.<java.awt.Rectangle: int y> = $i14;

     label12:
        $i11 = r1.<java.awt.Rectangle: int y>;

        $i10 = r9.<java.awt.Rectangle: int y>;

        if $i11 >= $i10 goto label13;

        $i12 = r9.<java.awt.Rectangle: int y>;

        r1.<java.awt.Rectangle: int y> = $i12;

     label13:
        return r1;
    }

    public static java.awt.Rectangle getContainingScreenBounds(java.awt.Rectangle, boolean)
    {
        java.awt.Point $r1;
        boolean z0, $z1, $z2;
        java.awt.Insets[] $r5, $r7, $r9;
        java.awt.Rectangle r0, $r3, r10, r12, r14;
        java.awt.Insets r11;
        java.awt.Rectangle[] $r2, $r4, $r6, $r8, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, $i19;

        r0 := @parameter0: java.awt.Rectangle;

        z0 := @parameter1: boolean;

        staticinvoke <com.jidesoft.utils.PortingUtils: void waitForInitialization()>();

        r10 = null;

        r11 = null;

        $r1 = virtualinvoke r0.<java.awt.Rectangle: java.awt.Point getLocation()>();

        i17 = 0;

     label1:
        $r2 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        $i0 = lengthof $r2;

        if i17 >= $i0 goto label3;

        $r8 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        r12 = $r8[i17];

        $z2 = virtualinvoke r12.<java.awt.Rectangle: boolean contains(java.awt.Point)>($r1);

        if $z2 == 0 goto label2;

        r10 = r12;

        $r9 = <com.jidesoft.utils.PortingUtils: java.awt.Insets[] INSETS>;

        r11 = $r9[i17];

        goto label3;

     label2:
        i17 = i17 + 1;

        goto label1;

     label3:
        i18 = 0;

     label4:
        $r13 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        $i19 = lengthof $r13;

        if i18 >= $i19 goto label6;

        $r6 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        r14 = $r6[i18];

        $z1 = virtualinvoke r14.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>(r0);

        if $z1 == 0 goto label5;

        r10 = r14;

        $r7 = <com.jidesoft.utils.PortingUtils: java.awt.Insets[] INSETS>;

        r11 = $r7[i18];

        goto label6;

     label5:
        i18 = i18 + 1;

        goto label4;

     label6:
        if r10 != null goto label7;

        $r4 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS>;

        r10 = $r4[0];

        $r5 = <com.jidesoft.utils.PortingUtils: java.awt.Insets[] INSETS>;

        r11 = $r5[0];

     label7:
        $r3 = new java.awt.Rectangle;

        specialinvoke $r3.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>(r10);

        if z0 == 0 goto label8;

        if r11 == null goto label8;

        $i2 = $r3.<java.awt.Rectangle: int x>;

        $i1 = r11.<java.awt.Insets: int left>;

        $i3 = $i2 + $i1;

        $r3.<java.awt.Rectangle: int x> = $i3;

        $i5 = $r3.<java.awt.Rectangle: int y>;

        $i4 = r11.<java.awt.Insets: int top>;

        $i6 = $i5 + $i4;

        $r3.<java.awt.Rectangle: int y> = $i6;

        $i10 = $r3.<java.awt.Rectangle: int width>;

        $i8 = r11.<java.awt.Insets: int left>;

        $i7 = r11.<java.awt.Insets: int right>;

        $i9 = $i8 + $i7;

        $i11 = $i10 - $i9;

        $r3.<java.awt.Rectangle: int width> = $i11;

        $i15 = $r3.<java.awt.Rectangle: int height>;

        $i13 = r11.<java.awt.Insets: int top>;

        $i12 = r11.<java.awt.Insets: int bottom>;

        $i14 = $i13 + $i12;

        $i16 = $i15 - $i14;

        $r3.<java.awt.Rectangle: int height> = $i16;

     label8:
        return $r3;
    }

    public static java.awt.geom.Area getScreenArea()
    {
        java.awt.geom.Area $r0;

        staticinvoke <com.jidesoft.utils.PortingUtils: void waitForInitialization()>();

        $r0 = <com.jidesoft.utils.PortingUtils: java.awt.geom.Area SCREEN_AREA>;

        return $r0;
    }

    public static void notifyUser()
    {
        staticinvoke <com.jidesoft.utils.PortingUtils: void notifyUser(java.awt.Component)>(null);

        return;
    }

    public static void notifyUser(java.awt.Component)
    {
        javax.swing.LookAndFeel $r2;
        java.lang.String $r0, $r1;
        java.awt.Component r3;
        boolean $z0;

        r3 := @parameter0: java.awt.Component;

        $r0 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String getProperty(java.lang.String,java.lang.String)>("jide.beepNotifyUser", "true");

        $r1 = "true";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r2.<javax.swing.LookAndFeel: void provideErrorFeedback(java.awt.Component)>(r3);

     label1:
        return;
    }

    public static void prerequisiteChecking()
    {
        boolean $z0, $z1, $z2;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk14Above()>();

        if $z0 != 0 goto label1;

        staticinvoke <com.jidesoft.utils.PortingUtils: void notifyUser()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, "J2SE 1.4 or above is required for this demo.", "JIDE Software, Inc.", 2);

        staticinvoke <java.lang.System: void exit(int)>(0);

     label1:
        $z1 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk142Above()>();

        if $z1 != 0 goto label2;

        staticinvoke <com.jidesoft.utils.PortingUtils: void notifyUser()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, "J2SE 1.4.2 or above is recommended for this demo for the best experience of seamless integration with Windows XP.", "JIDE Software, Inc.", 2);

     label2:
        $z2 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isMacOSX()>();

        if $z2 == 0 goto label3;

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("apple.laf.useScreenMenuBar", "true");

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("apple.awt.brushMetalLook", "true");

     label3:
        return;
    }

    public static void setPreferredSize(java.awt.Component, java.awt.Dimension)
    {
        javax.swing.JComponent $r2;
        java.awt.Dimension r1;
        java.awt.Component r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Component;

        r1 := @parameter1: java.awt.Dimension;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk15Above()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<java.awt.Component: void setPreferredSize(java.awt.Dimension)>(r1);

        goto label2;

     label1:
        $z1 = r0 instanceof javax.swing.JComponent;

        if $z1 == 0 goto label2;

        $r2 = (javax.swing.JComponent) r0;

        virtualinvoke $r2.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>(r1);

     label2:
        return;
    }

    public static void setMinimumSize(java.awt.Component, java.awt.Dimension)
    {
        javax.swing.JComponent $r2;
        java.awt.Dimension r1;
        java.awt.Component r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Component;

        r1 := @parameter1: java.awt.Dimension;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk15Above()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<java.awt.Component: void setMinimumSize(java.awt.Dimension)>(r1);

        goto label2;

     label1:
        $z1 = r0 instanceof javax.swing.JComponent;

        if $z1 == 0 goto label2;

        $r2 = (javax.swing.JComponent) r0;

        virtualinvoke $r2.<javax.swing.JComponent: void setMinimumSize(java.awt.Dimension)>(r1);

     label2:
        return;
    }

    static java.awt.geom.Area access$002(java.awt.geom.Area)
    {
        java.awt.geom.Area r0;

        r0 := @parameter0: java.awt.geom.Area;

        <com.jidesoft.utils.PortingUtils: java.awt.geom.Area SCREEN_AREA> = r0;

        return r0;
    }

    static java.awt.Rectangle access$102(java.awt.Rectangle)
    {
        java.awt.Rectangle r0;

        r0 := @parameter0: java.awt.Rectangle;

        <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS> = r0;

        return r0;
    }

    static java.awt.geom.Area access$000()
    {
        java.awt.geom.Area $r0;

        $r0 = <com.jidesoft.utils.PortingUtils: java.awt.geom.Area SCREEN_AREA>;

        return $r0;
    }

    static java.awt.Rectangle access$100()
    {
        java.awt.Rectangle $r0;

        $r0 = <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS>;

        return $r0;
    }

    static java.awt.Rectangle[] access$202(java.awt.Rectangle[])
    {
        java.awt.Rectangle[] r0;

        r0 := @parameter0: java.awt.Rectangle[];

        <com.jidesoft.utils.PortingUtils: java.awt.Rectangle[] SCREENS> = r0;

        return r0;
    }

    static java.awt.Insets[] access$302(java.awt.Insets[])
    {
        java.awt.Insets[] r0;

        r0 := @parameter0: java.awt.Insets[];

        <com.jidesoft.utils.PortingUtils: java.awt.Insets[] INSETS> = r0;

        return r0;
    }

    static java.lang.Thread access$402(java.lang.Thread)
    {
        java.lang.Thread r0;

        r0 := @parameter0: java.lang.Thread;

        <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread> = r0;

        return r0;
    }

    static void <clinit>()
    {
        <com.jidesoft.utils.PortingUtils: java.awt.Rectangle SCREEN_BOUNDS> = null;

        <com.jidesoft.utils.PortingUtils: java.lang.Thread _initializationThread> = null;

        <com.jidesoft.utils.PortingUtils: boolean INITIALIZE_SCREEN_AREA_USING_THREAD> = 1;

        return;
    }
}
