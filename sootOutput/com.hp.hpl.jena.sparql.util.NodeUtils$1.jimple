final class com.hp.hpl.jena.sparql.util.NodeUtils$1 extends java.lang.Object implements com.hp.hpl.jena.util.iterator.MapFilter
{

    void <init>()
    {
        com.hp.hpl.jena.sparql.util.NodeUtils$1 r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.NodeUtils$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String accept(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0;
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.util.NodeUtils$1 r2;

        r2 := @this: com.hp.hpl.jena.sparql.util.NodeUtils$1;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        return $r1;
    }

    public volatile java.lang.Object accept(java.lang.Object)
    {
        com.hp.hpl.jena.sparql.util.NodeUtils$1 r0;
        java.lang.Object r1;
        com.hp.hpl.jena.graph.Node $r2;
        java.lang.String $r3;

        r0 := @this: com.hp.hpl.jena.sparql.util.NodeUtils$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.graph.Node) r1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.NodeUtils$1: java.lang.String accept(com.hp.hpl.jena.graph.Node)>($r2);

        return $r3;
    }
}
