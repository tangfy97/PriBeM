public class org.springframework.beans.factory.config.BeanReferenceFactoryBean extends java.lang.Object implements org.springframework.beans.factory.SmartFactoryBean, org.springframework.beans.factory.BeanFactoryAware
{
    private java.lang.String targetBeanName;
    private org.springframework.beans.factory.BeanFactory beanFactory;

    public void <init>()
    {
        org.springframework.beans.factory.config.BeanReferenceFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.BeanReferenceFactoryBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setTargetBeanName(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.factory.config.BeanReferenceFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.BeanReferenceFactoryBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.String targetBeanName> = r1;

        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        java.lang.IllegalArgumentException $r9;
        org.springframework.beans.factory.BeanFactory r1, $r4, $r6;
        org.springframework.beans.factory.NoSuchBeanDefinitionException $r5;
        java.lang.String $r2, $r3, $r7, $r8;
        org.springframework.beans.factory.config.BeanReferenceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.BeanReferenceFactoryBean;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        $r2 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.String targetBeanName>;

        if $r2 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'targetBeanName\' is required");

        throw $r9;

     label1:
        $r4 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r3 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.String targetBeanName>;

        $z0 = interfaceinvoke $r4.<org.springframework.beans.factory.BeanFactory: boolean containsBean(java.lang.String)>($r3);

        if $z0 != 0 goto label2;

        $r5 = new org.springframework.beans.factory.NoSuchBeanDefinitionException;

        $r7 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.String targetBeanName>;

        $r6 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r8 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        throw $r5;

     label2:
        return;
    }

    public java.lang.Object getObject() throws org.springframework.beans.BeansException
    {
        org.springframework.beans.factory.BeanFactory $r1, $r3;
        org.springframework.beans.factory.FactoryBeanNotInitializedException $r5;
        java.lang.Object $r4;
        java.lang.String $r2;
        org.springframework.beans.factory.config.BeanReferenceFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.BeanReferenceFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        if $r1 != null goto label1;

        $r5 = new org.springframework.beans.factory.FactoryBeanNotInitializedException;

        specialinvoke $r5.<org.springframework.beans.factory.FactoryBeanNotInitializedException: void <init>()>();

        throw $r5;

     label1:
        $r3 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r2 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.String targetBeanName>;

        $r4 = interfaceinvoke $r3.<org.springframework.beans.factory.BeanFactory: java.lang.Object getBean(java.lang.String)>($r2);

        return $r4;
    }

    public java.lang.Class getObjectType()
    {
        org.springframework.beans.factory.BeanFactory $r1, $r3;
        java.lang.Class $r4;
        java.lang.String $r2;
        org.springframework.beans.factory.config.BeanReferenceFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.BeanReferenceFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r2 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.String targetBeanName>;

        $r4 = interfaceinvoke $r3.<org.springframework.beans.factory.BeanFactory: java.lang.Class getType(java.lang.String)>($r2);

        return $r4;
    }

    public boolean isSingleton()
    {
        org.springframework.beans.factory.BeanFactory $r1, $r3;
        org.springframework.beans.factory.FactoryBeanNotInitializedException $r4;
        java.lang.String $r2;
        org.springframework.beans.factory.config.BeanReferenceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.BeanReferenceFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        if $r1 != null goto label1;

        $r4 = new org.springframework.beans.factory.FactoryBeanNotInitializedException;

        specialinvoke $r4.<org.springframework.beans.factory.FactoryBeanNotInitializedException: void <init>()>();

        throw $r4;

     label1:
        $r3 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r2 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.String targetBeanName>;

        $z0 = interfaceinvoke $r3.<org.springframework.beans.factory.BeanFactory: boolean isSingleton(java.lang.String)>($r2);

        return $z0;
    }

    public boolean isPrototype()
    {
        org.springframework.beans.factory.BeanFactory $r1, $r3;
        org.springframework.beans.factory.FactoryBeanNotInitializedException $r4;
        java.lang.String $r2;
        org.springframework.beans.factory.config.BeanReferenceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.BeanReferenceFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        if $r1 != null goto label1;

        $r4 = new org.springframework.beans.factory.FactoryBeanNotInitializedException;

        specialinvoke $r4.<org.springframework.beans.factory.FactoryBeanNotInitializedException: void <init>()>();

        throw $r4;

     label1:
        $r3 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r2 = r0.<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.String targetBeanName>;

        $z0 = interfaceinvoke $r3.<org.springframework.beans.factory.BeanFactory: boolean isPrototype(java.lang.String)>($r2);

        return $z0;
    }

    public boolean isEagerInit()
    {
        org.springframework.beans.factory.config.BeanReferenceFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.BeanReferenceFactoryBean;

        return 0;
    }
}
