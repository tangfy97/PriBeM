public abstract class org.joda.time.Chronology extends java.lang.Object
{

    public void <init>()
    {
        org.joda.time.Chronology r0;

        r0 := @this: org.joda.time.Chronology;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.joda.time.Chronology getISO()
    {
        org.joda.time.chrono.ISOChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance()>();

        return $r0;
    }

    public static org.joda.time.Chronology getISOUTC()
    {
        org.joda.time.chrono.ISOChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>();

        return $r0;
    }

    public static org.joda.time.Chronology getISO(org.joda.time.DateTimeZone)
    {
        org.joda.time.chrono.ISOChronology $r1;
        org.joda.time.DateTimeZone r0;

        r0 := @parameter0: org.joda.time.DateTimeZone;

        $r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)>(r0);

        return $r1;
    }

    public static org.joda.time.Chronology getGJ()
    {
        org.joda.time.chrono.GJChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance()>();

        return $r0;
    }

    public static org.joda.time.Chronology getGJUTC()
    {
        org.joda.time.chrono.GJChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstanceUTC()>();

        return $r0;
    }

    public static org.joda.time.Chronology getGJ(org.joda.time.DateTimeZone)
    {
        org.joda.time.DateTimeZone r0;
        org.joda.time.chrono.GJChronology $r1;

        r0 := @parameter0: org.joda.time.DateTimeZone;

        $r1 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone)>(r0);

        return $r1;
    }

    public static org.joda.time.Chronology getGregorian()
    {
        org.joda.time.chrono.GregorianChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.GregorianChronology: org.joda.time.chrono.GregorianChronology getInstance()>();

        return $r0;
    }

    public static org.joda.time.Chronology getGregorianUTC()
    {
        org.joda.time.chrono.GregorianChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.GregorianChronology: org.joda.time.chrono.GregorianChronology getInstanceUTC()>();

        return $r0;
    }

    public static org.joda.time.Chronology getGregorian(org.joda.time.DateTimeZone)
    {
        org.joda.time.DateTimeZone r0;
        org.joda.time.chrono.GregorianChronology $r1;

        r0 := @parameter0: org.joda.time.DateTimeZone;

        $r1 = staticinvoke <org.joda.time.chrono.GregorianChronology: org.joda.time.chrono.GregorianChronology getInstance(org.joda.time.DateTimeZone)>(r0);

        return $r1;
    }

    public static org.joda.time.Chronology getJulian()
    {
        org.joda.time.chrono.JulianChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.JulianChronology: org.joda.time.chrono.JulianChronology getInstance()>();

        return $r0;
    }

    public static org.joda.time.Chronology getJulianUTC()
    {
        org.joda.time.chrono.JulianChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.JulianChronology: org.joda.time.chrono.JulianChronology getInstanceUTC()>();

        return $r0;
    }

    public static org.joda.time.Chronology getJulian(org.joda.time.DateTimeZone)
    {
        org.joda.time.DateTimeZone r0;
        org.joda.time.chrono.JulianChronology $r1;

        r0 := @parameter0: org.joda.time.DateTimeZone;

        $r1 = staticinvoke <org.joda.time.chrono.JulianChronology: org.joda.time.chrono.JulianChronology getInstance(org.joda.time.DateTimeZone)>(r0);

        return $r1;
    }

    public static org.joda.time.Chronology getBuddhist()
    {
        org.joda.time.chrono.BuddhistChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.BuddhistChronology: org.joda.time.chrono.BuddhistChronology getInstance()>();

        return $r0;
    }

    public static org.joda.time.Chronology getBuddhistUTC()
    {
        org.joda.time.chrono.BuddhistChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.BuddhistChronology: org.joda.time.chrono.BuddhistChronology getInstanceUTC()>();

        return $r0;
    }

    public static org.joda.time.Chronology getBuddhist(org.joda.time.DateTimeZone)
    {
        org.joda.time.DateTimeZone r0;
        org.joda.time.chrono.BuddhistChronology $r1;

        r0 := @parameter0: org.joda.time.DateTimeZone;

        $r1 = staticinvoke <org.joda.time.chrono.BuddhistChronology: org.joda.time.chrono.BuddhistChronology getInstance(org.joda.time.DateTimeZone)>(r0);

        return $r1;
    }

    public static org.joda.time.Chronology getCoptic()
    {
        org.joda.time.chrono.CopticChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.CopticChronology: org.joda.time.chrono.CopticChronology getInstance()>();

        return $r0;
    }

    public static org.joda.time.Chronology getCopticUTC()
    {
        org.joda.time.chrono.CopticChronology $r0;

        $r0 = staticinvoke <org.joda.time.chrono.CopticChronology: org.joda.time.chrono.CopticChronology getInstanceUTC()>();

        return $r0;
    }

    public static org.joda.time.Chronology getCoptic(org.joda.time.DateTimeZone)
    {
        org.joda.time.DateTimeZone r0;
        org.joda.time.chrono.CopticChronology $r1;

        r0 := @parameter0: org.joda.time.DateTimeZone;

        $r1 = staticinvoke <org.joda.time.chrono.CopticChronology: org.joda.time.chrono.CopticChronology getInstance(org.joda.time.DateTimeZone)>(r0);

        return $r1;
    }

    public abstract org.joda.time.DateTimeZone getZone();

    public abstract org.joda.time.Chronology withUTC();

    public abstract org.joda.time.Chronology withZone(org.joda.time.DateTimeZone);

    public abstract long getDateTimeMillis(int, int, int, int);

    public abstract long getDateTimeMillis(int, int, int, int, int, int, int);

    public abstract long getDateTimeMillis(long, int, int, int, int);

    public abstract void validate(org.joda.time.ReadablePartial, int[]);

    public abstract int[] get(org.joda.time.ReadablePartial, long);

    public abstract long set(org.joda.time.ReadablePartial, long);

    public abstract int[] get(org.joda.time.ReadablePeriod, long, long);

    public abstract int[] get(org.joda.time.ReadablePeriod, long);

    public abstract long add(org.joda.time.ReadablePeriod, long, int);

    public abstract long add(long, long, int);

    public abstract org.joda.time.DurationField millis();

    public abstract org.joda.time.DateTimeField millisOfSecond();

    public abstract org.joda.time.DateTimeField millisOfDay();

    public abstract org.joda.time.DurationField seconds();

    public abstract org.joda.time.DateTimeField secondOfMinute();

    public abstract org.joda.time.DateTimeField secondOfDay();

    public abstract org.joda.time.DurationField minutes();

    public abstract org.joda.time.DateTimeField minuteOfHour();

    public abstract org.joda.time.DateTimeField minuteOfDay();

    public abstract org.joda.time.DurationField hours();

    public abstract org.joda.time.DateTimeField hourOfDay();

    public abstract org.joda.time.DateTimeField clockhourOfDay();

    public abstract org.joda.time.DurationField halfdays();

    public abstract org.joda.time.DateTimeField hourOfHalfday();

    public abstract org.joda.time.DateTimeField clockhourOfHalfday();

    public abstract org.joda.time.DateTimeField halfdayOfDay();

    public abstract org.joda.time.DurationField days();

    public abstract org.joda.time.DateTimeField dayOfWeek();

    public abstract org.joda.time.DateTimeField dayOfMonth();

    public abstract org.joda.time.DateTimeField dayOfYear();

    public abstract org.joda.time.DurationField weeks();

    public abstract org.joda.time.DateTimeField weekOfWeekyear();

    public abstract org.joda.time.DurationField weekyears();

    public abstract org.joda.time.DateTimeField weekyear();

    public abstract org.joda.time.DateTimeField weekyearOfCentury();

    public abstract org.joda.time.DurationField months();

    public abstract org.joda.time.DateTimeField monthOfYear();

    public abstract org.joda.time.DurationField years();

    public abstract org.joda.time.DateTimeField year();

    public abstract org.joda.time.DateTimeField yearOfEra();

    public abstract org.joda.time.DateTimeField yearOfCentury();

    public abstract org.joda.time.DurationField centuries();

    public abstract org.joda.time.DateTimeField centuryOfEra();

    public abstract org.joda.time.DurationField eras();

    public abstract org.joda.time.DateTimeField era();

    public abstract java.lang.String toString();
}
