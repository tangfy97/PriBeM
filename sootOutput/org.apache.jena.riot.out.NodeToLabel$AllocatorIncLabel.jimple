class org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel extends org.apache.jena.riot.out.NodeToLabel$AllocatorBase
{
    private int X;

    void <init>()
    {
        org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel r0;

        r0 := @this: org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel;

        specialinvoke r0.<org.apache.jena.riot.out.NodeToLabel$AllocatorBase: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        r0.<org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel: int X> = 0;

        return;
    }

    protected java.lang.String labelForBlank(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r6;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r4;
        org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel r2;
        java.lang.String $r3, $r5;

        r2 := @this: org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel;

        r6 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_:b");

        $i0 = r2.<org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel: int X>;

        $i1 = $i0 + 1;

        r2.<org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel: int X> = $i1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
