public interface  org.apache.xerces.xs.XSSimpleTypeDefinition extends java.lang.Object implements org.apache.xerces.xs.XSTypeDefinition
{
    public static final short VARIETY_ABSENT;
    public static final short VARIETY_ATOMIC;
    public static final short VARIETY_LIST;
    public static final short VARIETY_UNION;
    public static final short FACET_NONE;
    public static final short FACET_LENGTH;
    public static final short FACET_MINLENGTH;
    public static final short FACET_MAXLENGTH;
    public static final short FACET_PATTERN;
    public static final short FACET_WHITESPACE;
    public static final short FACET_MAXINCLUSIVE;
    public static final short FACET_MAXEXCLUSIVE;
    public static final short FACET_MINEXCLUSIVE;
    public static final short FACET_MININCLUSIVE;
    public static final short FACET_TOTALDIGITS;
    public static final short FACET_FRACTIONDIGITS;
    public static final short FACET_ENUMERATION;
    public static final short ORDERED_FALSE;
    public static final short ORDERED_PARTIAL;
    public static final short ORDERED_TOTAL;

    public abstract short getVariety();

    public abstract org.apache.xerces.xs.XSSimpleTypeDefinition getPrimitiveType();

    public abstract short getBuiltInKind();

    public abstract org.apache.xerces.xs.XSSimpleTypeDefinition getItemType();

    public abstract org.apache.xerces.xs.XSObjectList getMemberTypes();

    public abstract short getDefinedFacets();

    public abstract boolean isDefinedFacet(short);

    public abstract short getFixedFacets();

    public abstract boolean isFixedFacet(short);

    public abstract java.lang.String getLexicalFacetValue(short);

    public abstract org.apache.xerces.xs.StringList getLexicalEnumeration();

    public abstract org.apache.xerces.xs.StringList getLexicalPattern();

    public abstract short getOrdered();

    public abstract boolean getFinite();

    public abstract boolean getBounded();

    public abstract boolean getNumeric();

    public abstract org.apache.xerces.xs.XSObjectList getFacets();

    public abstract org.apache.xerces.xs.XSObjectList getMultiValueFacets();

    public abstract org.apache.xerces.xs.XSObject getFacet(int);

    public abstract org.apache.xerces.xs.XSObjectList getAnnotations();

    public static void <clinit>()
    {
        <org.apache.xerces.xs.XSSimpleTypeDefinition: short ORDERED_TOTAL> = 2;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short ORDERED_PARTIAL> = 1;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short ORDERED_FALSE> = 0;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_ENUMERATION> = 2048;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_FRACTIONDIGITS> = 1024;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_TOTALDIGITS> = 512;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_MININCLUSIVE> = 256;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_MINEXCLUSIVE> = 128;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_MAXEXCLUSIVE> = 64;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_MAXINCLUSIVE> = 32;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_WHITESPACE> = 16;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_PATTERN> = 8;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_MAXLENGTH> = 4;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_MINLENGTH> = 2;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_LENGTH> = 1;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short FACET_NONE> = 0;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short VARIETY_UNION> = 3;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short VARIETY_LIST> = 2;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short VARIETY_ATOMIC> = 1;

        <org.apache.xerces.xs.XSSimpleTypeDefinition: short VARIETY_ABSENT> = 0;

        return;
    }
}
