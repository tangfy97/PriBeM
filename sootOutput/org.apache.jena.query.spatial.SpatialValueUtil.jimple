public class org.apache.jena.query.spatial.SpatialValueUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.jena.query.spatial.SpatialValueUtil r0;

        r0 := @this: org.apache.jena.query.spatial.SpatialValueUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isDecimal(com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r2, $r3, $r4, $r5;
        java.lang.NumberFormatException $r7;
        com.hp.hpl.jena.datatypes.RDFDatatype $r1;
        com.hp.hpl.jena.graph.impl.LiteralLabel r0;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabel: com.hp.hpl.jena.datatypes.RDFDatatype getDatatype()>();

        if $r1 != null goto label4;

     label1:
        $r6 = interfaceinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String getLexicalForm()>();

        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

        return 0;

     label4:
        $r2 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDfloat>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label5;

        $r3 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal>;

        $z1 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label5;

        $r4 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdouble>;

        $z2 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z2 != 0 goto label5;

        $r5 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDinteger>;

        $z3 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label6;

     label5:
        return 1;

     label6:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static boolean isWKTLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.RDFDatatype $r1;
        com.hp.hpl.jena.graph.impl.LiteralLabel r0;
        java.lang.String $r2, $r4;
        com.hp.hpl.jena.rdf.model.Resource $r3;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabel: com.hp.hpl.jena.datatypes.RDFDatatype getDatatype()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.datatypes.RDFDatatype: java.lang.String getURI()>();

        $r3 = <org.apache.jena.query.spatial.EntityDefinition: com.hp.hpl.jena.rdf.model.Resource geosparql_wktLiteral>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
}
