public class org.apache.zookeeper.server.ByteBufferOutputStream extends java.io.OutputStream
{
    java.nio.ByteBuffer bb;

    public void <init>(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r1;
        org.apache.zookeeper.server.ByteBufferOutputStream r0;

        r0 := @this: org.apache.zookeeper.server.ByteBufferOutputStream;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.zookeeper.server.ByteBufferOutputStream: java.nio.ByteBuffer bb> = r1;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte $b1;
        org.apache.zookeeper.server.ByteBufferOutputStream r0;
        int i0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.apache.zookeeper.server.ByteBufferOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.zookeeper.server.ByteBufferOutputStream: java.nio.ByteBuffer bb>;

        $b1 = (byte) i0;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        byte[] r1;
        java.nio.ByteBuffer $r2;
        org.apache.zookeeper.server.ByteBufferOutputStream r0;

        r0 := @this: org.apache.zookeeper.server.ByteBufferOutputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.zookeeper.server.ByteBufferOutputStream: java.nio.ByteBuffer bb>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.zookeeper.server.ByteBufferOutputStream r0;
        int i0, i1;
        java.nio.ByteBuffer $r2;

        r0 := @this: org.apache.zookeeper.server.ByteBufferOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.zookeeper.server.ByteBufferOutputStream: java.nio.ByteBuffer bb>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public static void record2ByteBuffer(org.apache.jute.Record, java.nio.ByteBuffer) throws java.io.IOException
    {
        org.apache.jute.BinaryOutputArchive $r2;
        org.apache.zookeeper.server.ByteBufferOutputStream $r0;
        org.apache.jute.Record r3;
        java.nio.ByteBuffer r1;

        r3 := @parameter0: org.apache.jute.Record;

        r1 := @parameter1: java.nio.ByteBuffer;

        $r0 = new org.apache.zookeeper.server.ByteBufferOutputStream;

        specialinvoke $r0.<org.apache.zookeeper.server.ByteBufferOutputStream: void <init>(java.nio.ByteBuffer)>(r1);

        $r2 = staticinvoke <org.apache.jute.BinaryOutputArchive: org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream)>($r0);

        interfaceinvoke r3.<org.apache.jute.Record: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r2, "request");

        return;
    }
}
