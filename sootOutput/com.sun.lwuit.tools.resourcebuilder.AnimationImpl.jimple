public class com.sun.lwuit.tools.resourcebuilder.AnimationImpl extends java.lang.Object
{
    private java.io.File file;
    private boolean loop;

    public void <init>()
    {
        com.sun.lwuit.tools.resourcebuilder.AnimationImpl r0;

        r0 := @this: com.sun.lwuit.tools.resourcebuilder.AnimationImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl: boolean loop> = 1;

        return;
    }

    public void writeResource(java.io.DataOutputStream) throws java.io.IOException
    {
        byte[] $r15;
        java.lang.Integer $r17, $r22, $r23;
        java.io.DataOutputStream r9;
        javax.imageio.stream.ImageInputStream $r6;
        java.util.ArrayList $r7, $r8;
        javax.imageio.ImageReader r2;
        java.io.File $r5;
        com.sun.lwuit.tools.resourcebuilder.AnimationImpl r4;
        java.awt.Point $r25;
        com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame $r13, $r19, r30;
        int[] $r14, $r20, $r21, $r26, r31, r32;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z7, $z8;
        java.awt.image.BufferedImage $r18, $r27, r28;
        java.awt.Graphics2D $r24, r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30;
        java.util.Iterator $r0, $r10;
        java.io.FileInputStream $r3;
        java.lang.Object $r1, $r11, $r12, $r16;

        r4 := @this: com.sun.lwuit.tools.resourcebuilder.AnimationImpl;

        r9 := @parameter0: java.io.DataOutputStream;

        $r0 = staticinvoke <javax.imageio.ImageIO: java.util.Iterator getImageReadersBySuffix(java.lang.String)>("gif");

        $r1 = interfaceinvoke $r0.<java.util.Iterator: java.lang.Object next()>();

        r2 = (javax.imageio.ImageReader) $r1;

        $r3 = new java.io.FileInputStream;

        $r5 = r4.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl: java.io.File file>;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        $r6 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>($r3);

        virtualinvoke r2.<javax.imageio.ImageReader: void setInput(java.lang.Object)>($r6);

        $i0 = virtualinvoke r2.<javax.imageio.ImageReader: int getNumImages(boolean)>(1);

        r28 = null;

        i19 = 0;

        i20 = 0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        i21 = 0;

        i22 = 0;

     label01:
        if i22 >= $i0 goto label10;

        z5 = 0;

        $r18 = virtualinvoke r2.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(i22);

        if r28 == null goto label05;

        $r24 = virtualinvoke r28.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        r29 = $r24;

        $z4 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: boolean isRestoreToBackgroundColor(javax.imageio.ImageReader,int)>(r2, i22);

        if $z4 != 0 goto label02;

        $z8 = 1;

        $z7 = 1;

        goto label03;

     label02:
        $z8 = 0;

        $z7 = 0;

     label03:
        z5 = $z8;

        if $z7 != 0 goto label04;

        $r27 = new java.awt.image.BufferedImage;

        $i17 = virtualinvoke r28.<java.awt.image.BufferedImage: int getWidth()>();

        $i18 = virtualinvoke r28.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r27.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i17, $i18, 2);

        r28 = $r27;

        virtualinvoke $r24.<java.awt.Graphics2D: void dispose()>();

        r29 = virtualinvoke $r27.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

     label04:
        $r25 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: java.awt.Point getPixelOffsets(javax.imageio.ImageReader,int)>(r2, i22);

        $i15 = $r25.<java.awt.Point: int x>;

        $i14 = $r25.<java.awt.Point: int y>;

        virtualinvoke r29.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r18, $i15, $i14, null);

        virtualinvoke r29.<java.awt.Graphics2D: void dispose()>();

        goto label06;

     label05:
        i19 = virtualinvoke $r18.<java.awt.image.BufferedImage: int getWidth()>();

        i20 = virtualinvoke $r18.<java.awt.image.BufferedImage: int getHeight()>();

        r28 = $r18;

     label06:
        $r19 = new com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame;

        specialinvoke $r19.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: void <init>(com.sun.lwuit.tools.resourcebuilder.AnimationImpl$1)>(null);

        $i9 = i19 * i20;

        $r20 = newarray (int)[$i9];

        $r19.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int[] imageData> = $r20;

        $r21 = $r19.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int[] imageData>;

        virtualinvoke r28.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, i19, i20, $r21, 0, i19);

        $i10 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: int getFrameTime(javax.imageio.ImageReader,int)>(r2, i22);

        $r19.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int time> = $i10;

        $r19.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: boolean drawPreviousFrame> = z5;

        $i11 = $r19.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int time>;

        i21 = i21 + $i11;

        $r26 = $r19.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int[] imageData>;

        $i16 = lengthof $r26;

        i23 = 0;

     label07:
        if i23 >= $i16 goto label09;

        i12 = $r26[i23];

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $z3 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>($r22);

        if $z3 != 0 goto label08;

        $i13 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i13 >= 255 goto label08;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r23);

     label08:
        i23 = i23 + 1;

        goto label07;

     label09:
        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r19);

        i22 = i22 + 1;

        goto label01;

     label10:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        virtualinvoke r9.<java.io.DataOutputStream: void writeByte(int)>($i1);

        $r10 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r16 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.lang.Integer) $r16;

        $i8 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        virtualinvoke r9.<java.io.DataOutputStream: void writeInt(int)>($i8);

        goto label11;

     label12:
        virtualinvoke r9.<java.io.DataOutputStream: void writeShort(int)>(i19);

        virtualinvoke r9.<java.io.DataOutputStream: void writeShort(int)>(i20);

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        virtualinvoke r9.<java.io.DataOutputStream: void writeByte(int)>($i2);

        virtualinvoke r9.<java.io.DataOutputStream: void writeInt(int)>(i21);

        $z1 = r4.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl: boolean loop>;

        virtualinvoke r9.<java.io.DataOutputStream: void writeBoolean(boolean)>($z1);

        i24 = 0;

     label13:
        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i24 >= $i3 goto label20;

        $r11 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i24);

        r30 = (com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame) $r11;

        if i24 != 0 goto label16;

        r31 = r30.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int[] imageData>;

        i25 = lengthof r31;

        i26 = 0;

     label14:
        if i26 >= i25 goto label15;

        i27 = r31[i26];

        $i7 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: int getPaletteIndex(java.util.List,int)>($r8, i27);

        virtualinvoke r9.<java.io.DataOutputStream: void writeByte(int)>($i7);

        i26 = i26 + 1;

        goto label14;

     label15:
        goto label19;

     label16:
        $i4 = i24 - 1;

        $r12 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i4);

        $r13 = (com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame) $r12;

        $r14 = $r13.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int[] imageData>;

        $r15 = virtualinvoke r30.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: byte[] compress(int,int[],java.util.List)>(i19, $r14, $r8);

        $i5 = r30.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int time>;

        virtualinvoke r9.<java.io.DataOutputStream: void writeInt(int)>($i5);

        if $r15 == null goto label17;

        virtualinvoke r9.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

        $z2 = r30.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: boolean drawPreviousFrame>;

        virtualinvoke r9.<java.io.DataOutputStream: void writeBoolean(boolean)>($z2);

        virtualinvoke r9.<java.io.DataOutputStream: void write(byte[])>($r15);

        goto label19;

     label17:
        virtualinvoke r9.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        r32 = r30.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl$Frame: int[] imageData>;

        i28 = lengthof r32;

        i29 = 0;

     label18:
        if i29 >= i28 goto label19;

        i30 = r32[i29];

        $i6 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: int getPaletteIndex(java.util.List,int)>($r8, i30);

        virtualinvoke r9.<java.io.DataOutputStream: void writeByte(int)>($i6);

        i29 = i29 + 1;

        goto label18;

     label19:
        i24 = i24 + 1;

        goto label13;

     label20:
        return;
    }

    private static int getPaletteIndex(java.util.List, int)
    {
        java.util.List r0;
        int i0, $i1;
        java.lang.Integer $r1;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i1 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1);

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        return $i1;
    }

    public static java.awt.Point getPixelOffsets(javax.imageio.ImageReader, int) throws java.io.IOException
    {
        javax.imageio.metadata.IIOMetadata $r1;
        java.awt.Point $r11;
        org.w3c.dom.Node $r3, r9, r10;
        int i0, $i1, $i2, $i4, $i6;
        java.lang.String $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        javax.imageio.ImageReader r0;

        r0 := @parameter0: javax.imageio.ImageReader;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(i0);

        $r11 = new java.awt.Point;

        $i4 = (int) -1;

        $i6 = (int) -1;

        specialinvoke $r11.<java.awt.Point: void <init>(int,int)>($i4, $i6);

        $r3 = virtualinvoke $r1.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>("javax_imageio_1.0");

        r9 = interfaceinvoke $r3.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r9 == null goto label7;

        $r4 = interfaceinvoke r9.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r5 = "Dimension";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        r10 = interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label2:
        if r10 == null goto label5;

        $r6 = interfaceinvoke r10.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r7 = "HorizontalPixelOffset";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label3;

        $i2 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: int getValueAttribute(org.w3c.dom.Node)>(r10);

        $r11.<java.awt.Point: int x> = $i2;

        goto label4;

     label3:
        $r8 = "VerticalPixelOffset";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label4;

        $i1 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: int getValueAttribute(org.w3c.dom.Node)>(r10);

        $r11.<java.awt.Point: int y> = $i1;

     label4:
        r10 = interfaceinvoke r10.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label2;

     label5:
        return $r11;

     label6:
        r9 = interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label7:
        return $r11;
    }

    public static int getFrameTime(javax.imageio.ImageReader, int) throws java.io.IOException
    {
        javax.imageio.ImageReader r0;
        org.w3c.dom.NodeList $r3;
        javax.imageio.metadata.IIOMetadata $r1;
        org.w3c.dom.Node $r2, $r4, $r7;
        int i0, $i1, $i2, $i3, i4;
        org.w3c.dom.NamedNodeMap $r6;
        java.lang.String $r5, $r8;
        boolean $z0;

        r0 := @parameter0: javax.imageio.ImageReader;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(i0);

        $r2 = virtualinvoke $r1.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>("javax_imageio_gif_image_1.0");

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i4 = 0;

     label1:
        $i1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if i4 >= $i1 goto label3;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i4);

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("GraphicControlExtension");

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("delayTime");

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $i3 = $i2 * 10;

        return $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 1000;
    }

    static boolean isRestoreToBackgroundColor(javax.imageio.ImageReader, int) throws java.io.IOException
    {
        javax.imageio.ImageReader r0;
        org.w3c.dom.NodeList $r3;
        javax.imageio.metadata.IIOMetadata $r1;
        org.w3c.dom.Node $r2, $r4, $r7;
        int i0, $i1, i2;
        org.w3c.dom.NamedNodeMap $r6;
        java.lang.String $r5, $r8;
        boolean $z0, $z1;

        r0 := @parameter0: javax.imageio.ImageReader;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(i0);

        $r2 = virtualinvoke $r1.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>("javax_imageio_gif_image_1.0");

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i2 = 0;

     label1:
        $i1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if i2 >= $i1 goto label3;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("GraphicControlExtension");

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("disposalMethod");

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("restoreToBackgroundColor");

        return $z1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static void printNodeTree(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r2, $r22;
        int $i0, $i1, i2;
        java.lang.String $r3, $r6, $r8, $r13, $r15, $r19, $r21;
        java.io.PrintStream $r1, $r11, $r17;
        org.w3c.dom.NodeList $r9;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r10, $r12, $r14, $r16, $r18, $r20;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has attributes: ");

        $r6 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: java.lang.String getNodeAttrs(org.w3c.dom.Node)>(r2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r9 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        if $r9 == null goto label3;

        $i0 = interfaceinvoke $r9.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 <= 0 goto label3;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Begin children of : ");

        $r13 = interfaceinvoke r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);

        i2 = 0;

     label1:
        $i1 = interfaceinvoke $r9.<org.w3c.dom.NodeList: int getLength()>();

        if i2 >= $i1 goto label2;

        $r22 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: void printNodeTree(org.w3c.dom.Node)>($r22);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End children of : ");

        $r19 = interfaceinvoke r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label3:
        return;
    }

    private static java.lang.String getNodeAttrs(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r4, $r8;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r10, $r11;
        java.lang.String $r5, $r9, r12;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        r12 = "";

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r4 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r8 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return r12;
    }

    static int getValueAttribute(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r2;
        int $i0;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.NumberFormatException $r4;
        java.lang.String $r3;

        r0 := @parameter0: org.w3c.dom.Node;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("value");

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.io.File getFile()
    {
        com.sun.lwuit.tools.resourcebuilder.AnimationImpl r0;
        java.io.File $r1;

        r0 := @this: com.sun.lwuit.tools.resourcebuilder.AnimationImpl;

        $r1 = r0.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl: java.io.File file>;

        return $r1;
    }

    public void setFile(java.io.File)
    {
        com.sun.lwuit.tools.resourcebuilder.AnimationImpl r0;
        java.io.File r1;

        r0 := @this: com.sun.lwuit.tools.resourcebuilder.AnimationImpl;

        r1 := @parameter0: java.io.File;

        r0.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl: java.io.File file> = r1;

        return;
    }

    public boolean getLoop()
    {
        com.sun.lwuit.tools.resourcebuilder.AnimationImpl r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.tools.resourcebuilder.AnimationImpl;

        $z0 = r0.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl: boolean loop>;

        return $z0;
    }

    public void setLoop(boolean)
    {
        com.sun.lwuit.tools.resourcebuilder.AnimationImpl r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.tools.resourcebuilder.AnimationImpl;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl: boolean loop> = z0;

        return;
    }

    public com.sun.lwuit.StaticAnimation convert() throws java.io.IOException
    {
        java.io.DataInputStream $r3;
        byte[] $r5;
        java.io.ByteArrayOutputStream $r0;
        java.io.DataOutputStream $r2;
        java.io.ByteArrayInputStream $r4;
        com.sun.lwuit.tools.resourcebuilder.AnimationImpl r1;
        com.sun.lwuit.StaticAnimation $r6;

        r1 := @this: com.sun.lwuit.tools.resourcebuilder.AnimationImpl;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = new java.io.DataOutputStream;

        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke r1.<com.sun.lwuit.tools.resourcebuilder.AnimationImpl: void writeResource(java.io.DataOutputStream)>($r2);

        $r3 = new java.io.DataInputStream;

        $r4 = new java.io.ByteArrayInputStream;

        $r5 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        specialinvoke $r3.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r4);

        $r6 = staticinvoke <com.sun.lwuit.StaticAnimation: com.sun.lwuit.StaticAnimation createAnimation(java.io.DataInputStream)>($r3);

        return $r6;
    }

    static int access$100(java.util.List, int)
    {
        int i0, $i1;
        java.util.List r0;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $i1 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: int getPaletteIndex(java.util.List,int)>(r0, i0);

        return $i1;
    }
}
