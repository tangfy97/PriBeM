final enum class com.sun.xml.bind.v2.model.impl.Messages extends java.lang.Enum
{
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ID_MUST_BE_STRING;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages MUTUALLY_EXCLUSIVE_ANNOTATIONS;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_ANNOTATIONS;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages NO_DEFAULT_CONSTRUCTOR;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages CANT_HANDLE_INTERFACE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages CANT_HANDLE_INNER_CLASS;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ANNOTATION_ON_WRONG_METHOD;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages GETTER_SETTER_INCOMPATIBLE_TYPE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_ENTRY_IN_PROP_ORDER;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_PROPERTIES;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XML_ELEMENT_MAPPING_ON_NON_IXMLELEMENT_METHOD;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages SCOPE_IS_NOT_COMPLEXTYPE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages CONFLICTING_XML_ELEMENT_MAPPING;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages REFERENCE_TO_NON_ELEMENT;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages NON_EXISTENT_ELEMENT_MAPPING;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages TWO_ATTRIBUTE_WILDCARDS;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages SUPER_CLASS_HAS_WILDCARD;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages INVALID_ATTRIBUTE_WILDCARD_TYPE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages PROPERTY_MISSING_FROM_ORDER;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages PROPERTY_ORDER_CONTAINS_UNUSED_ENTRY;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages INVALID_XML_ENUM_VALUE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages FAILED_TO_INITIALE_DATATYPE_FACTORY;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages NO_IMAGE_WRITER;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ILLEGAL_MIME_TYPE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ILLEGAL_ANNOTATION;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages MULTIPLE_VALUE_PROPERTY;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ELEMENT_AND_VALUE_PROPERTY;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages CONFLICTING_XML_TYPE_MAPPING;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLVALUE_IN_DERIVED_TYPE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages SIMPLE_TYPE_IS_REQUIRED;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages PROPERTY_COLLISION;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages INVALID_IDREF;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages INVALID_XML_ELEMENT_REF;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages NO_XML_ELEMENT_DECL;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XML_ELEMENT_WRAPPER_ON_NON_COLLECTION;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ANNOTATION_NOT_ALLOWED;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLLIST_NEEDS_SIMPLETYPE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLLIST_ON_SINGLE_PROPERTY;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages NO_FACTORY_METHOD;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages FACTORY_CLASS_NEEDS_FACTORY_METHOD;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages INCOMPATIBLE_API_VERSION;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages INCOMPATIBLE_API_VERSION_MUSTANG;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages RUNNING_WITH_1_0_RUNTIME;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages MISSING_JAXB_PROPERTIES;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages TRANSIENT_FIELD_NOT_BINDABLE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages THERE_MUST_BE_VALUE_IN_XMLVALUE;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages UNMATCHABLE_ADAPTER;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ANONYMOUS_ARRAY_ITEM;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ACCESSORFACTORY_INSTANTIATION_EXCEPTION;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages ACCESSORFACTORY_ACCESS_EXCEPTION;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages CUSTOM_ACCESSORFACTORY_PROPERTY_ERROR;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages CUSTOM_ACCESSORFACTORY_FIELD_ERROR;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_INVALID;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_SEC;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_MIN;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_HR;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_DAY;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_MONTH;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_YEAR;
    public static final enum com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_TIMEZONE;
    private static final java.util.ResourceBundle rb;
    private static final com.sun.xml.bind.v2.model.impl.Messages[] $VALUES;

    public static com.sun.xml.bind.v2.model.impl.Messages[] values()
    {
        java.lang.Object $r1;
        com.sun.xml.bind.v2.model.impl.Messages[] $r0, $r2;

        $r0 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.sun.xml.bind.v2.model.impl.Messages[]) $r1;

        return $r2;
    }

    public static com.sun.xml.bind.v2.model.impl.Messages valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.sun.xml.bind.v2.model.impl.Messages $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/sun/xml/bind/v2/model/impl/Messages;", r0);

        $r2 = (com.sun.xml.bind.v2.model.impl.Messages) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.sun.xml.bind.v2.model.impl.Messages r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.Messages;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1;
        java.lang.String $r2;
        com.sun.xml.bind.v2.model.impl.Messages r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.Messages;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r1);

        return $r2;
    }

    public transient java.lang.String format(java.lang.Object[])
    {
        java.lang.Object[] r4;
        com.sun.xml.bind.v2.model.impl.Messages r0;
        java.util.ResourceBundle $r1;
        java.lang.String $r2, $r3, $r5;

        r0 := @this: com.sun.xml.bind.v2.model.impl.Messages;

        r4 := @parameter0: java.lang.Object[];

        $r1 = <com.sun.xml.bind.v2.model.impl.Messages: java.util.ResourceBundle rb>;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String name()>();

        $r3 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r2);

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, r4);

        return $r5;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r123;
        java.lang.String $r122;
        com.sun.xml.bind.v2.model.impl.Messages[] $r60;
        com.sun.xml.bind.v2.model.impl.Messages $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120;
        java.lang.Class $r121;

        $r0 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r0.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ID_MUST_BE_STRING", 0);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ID_MUST_BE_STRING> = $r0;

        $r1 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r1.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("MUTUALLY_EXCLUSIVE_ANNOTATIONS", 1);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages MUTUALLY_EXCLUSIVE_ANNOTATIONS> = $r1;

        $r2 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r2.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("DUPLICATE_ANNOTATIONS", 2);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_ANNOTATIONS> = $r2;

        $r3 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r3.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("NO_DEFAULT_CONSTRUCTOR", 3);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NO_DEFAULT_CONSTRUCTOR> = $r3;

        $r4 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r4.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("CANT_HANDLE_INTERFACE", 4);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CANT_HANDLE_INTERFACE> = $r4;

        $r5 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r5.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("CANT_HANDLE_INNER_CLASS", 5);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CANT_HANDLE_INNER_CLASS> = $r5;

        $r6 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r6.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ANNOTATION_ON_WRONG_METHOD", 6);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ANNOTATION_ON_WRONG_METHOD> = $r6;

        $r7 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r7.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("GETTER_SETTER_INCOMPATIBLE_TYPE", 7);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages GETTER_SETTER_INCOMPATIBLE_TYPE> = $r7;

        $r8 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r8.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("DUPLICATE_ENTRY_IN_PROP_ORDER", 8);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_ENTRY_IN_PROP_ORDER> = $r8;

        $r9 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r9.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("DUPLICATE_PROPERTIES", 9);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_PROPERTIES> = $r9;

        $r10 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r10.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XML_ELEMENT_MAPPING_ON_NON_IXMLELEMENT_METHOD", 10);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XML_ELEMENT_MAPPING_ON_NON_IXMLELEMENT_METHOD> = $r10;

        $r11 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r11.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("SCOPE_IS_NOT_COMPLEXTYPE", 11);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages SCOPE_IS_NOT_COMPLEXTYPE> = $r11;

        $r12 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r12.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("CONFLICTING_XML_ELEMENT_MAPPING", 12);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CONFLICTING_XML_ELEMENT_MAPPING> = $r12;

        $r13 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r13.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("REFERENCE_TO_NON_ELEMENT", 13);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages REFERENCE_TO_NON_ELEMENT> = $r13;

        $r14 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r14.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("NON_EXISTENT_ELEMENT_MAPPING", 14);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NON_EXISTENT_ELEMENT_MAPPING> = $r14;

        $r15 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r15.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("TWO_ATTRIBUTE_WILDCARDS", 15);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages TWO_ATTRIBUTE_WILDCARDS> = $r15;

        $r16 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r16.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("SUPER_CLASS_HAS_WILDCARD", 16);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages SUPER_CLASS_HAS_WILDCARD> = $r16;

        $r17 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r17.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("INVALID_ATTRIBUTE_WILDCARD_TYPE", 17);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_ATTRIBUTE_WILDCARD_TYPE> = $r17;

        $r18 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r18.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("PROPERTY_MISSING_FROM_ORDER", 18);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages PROPERTY_MISSING_FROM_ORDER> = $r18;

        $r19 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r19.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("PROPERTY_ORDER_CONTAINS_UNUSED_ENTRY", 19);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages PROPERTY_ORDER_CONTAINS_UNUSED_ENTRY> = $r19;

        $r20 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r20.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("INVALID_XML_ENUM_VALUE", 20);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_XML_ENUM_VALUE> = $r20;

        $r21 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r21.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("FAILED_TO_INITIALE_DATATYPE_FACTORY", 21);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages FAILED_TO_INITIALE_DATATYPE_FACTORY> = $r21;

        $r22 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r22.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("NO_IMAGE_WRITER", 22);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NO_IMAGE_WRITER> = $r22;

        $r23 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r23.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ILLEGAL_MIME_TYPE", 23);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ILLEGAL_MIME_TYPE> = $r23;

        $r24 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r24.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ILLEGAL_ANNOTATION", 24);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ILLEGAL_ANNOTATION> = $r24;

        $r25 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r25.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("MULTIPLE_VALUE_PROPERTY", 25);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages MULTIPLE_VALUE_PROPERTY> = $r25;

        $r26 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r26.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ELEMENT_AND_VALUE_PROPERTY", 26);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ELEMENT_AND_VALUE_PROPERTY> = $r26;

        $r27 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r27.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("CONFLICTING_XML_TYPE_MAPPING", 27);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CONFLICTING_XML_TYPE_MAPPING> = $r27;

        $r28 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r28.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLVALUE_IN_DERIVED_TYPE", 28);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLVALUE_IN_DERIVED_TYPE> = $r28;

        $r29 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r29.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("SIMPLE_TYPE_IS_REQUIRED", 29);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages SIMPLE_TYPE_IS_REQUIRED> = $r29;

        $r30 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r30.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("PROPERTY_COLLISION", 30);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages PROPERTY_COLLISION> = $r30;

        $r31 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r31.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("INVALID_IDREF", 31);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_IDREF> = $r31;

        $r32 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r32.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("INVALID_XML_ELEMENT_REF", 32);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_XML_ELEMENT_REF> = $r32;

        $r33 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r33.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("NO_XML_ELEMENT_DECL", 33);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NO_XML_ELEMENT_DECL> = $r33;

        $r34 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r34.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XML_ELEMENT_WRAPPER_ON_NON_COLLECTION", 34);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XML_ELEMENT_WRAPPER_ON_NON_COLLECTION> = $r34;

        $r35 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r35.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ANNOTATION_NOT_ALLOWED", 35);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ANNOTATION_NOT_ALLOWED> = $r35;

        $r36 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r36.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLLIST_NEEDS_SIMPLETYPE", 36);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLLIST_NEEDS_SIMPLETYPE> = $r36;

        $r37 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r37.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLLIST_ON_SINGLE_PROPERTY", 37);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLLIST_ON_SINGLE_PROPERTY> = $r37;

        $r38 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r38.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("NO_FACTORY_METHOD", 38);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NO_FACTORY_METHOD> = $r38;

        $r39 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r39.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("FACTORY_CLASS_NEEDS_FACTORY_METHOD", 39);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages FACTORY_CLASS_NEEDS_FACTORY_METHOD> = $r39;

        $r40 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r40.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("INCOMPATIBLE_API_VERSION", 40);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INCOMPATIBLE_API_VERSION> = $r40;

        $r41 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r41.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("INCOMPATIBLE_API_VERSION_MUSTANG", 41);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INCOMPATIBLE_API_VERSION_MUSTANG> = $r41;

        $r42 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r42.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("RUNNING_WITH_1_0_RUNTIME", 42);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages RUNNING_WITH_1_0_RUNTIME> = $r42;

        $r43 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r43.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("MISSING_JAXB_PROPERTIES", 43);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages MISSING_JAXB_PROPERTIES> = $r43;

        $r44 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r44.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("TRANSIENT_FIELD_NOT_BINDABLE", 44);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages TRANSIENT_FIELD_NOT_BINDABLE> = $r44;

        $r45 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r45.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("THERE_MUST_BE_VALUE_IN_XMLVALUE", 45);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages THERE_MUST_BE_VALUE_IN_XMLVALUE> = $r45;

        $r46 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r46.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("UNMATCHABLE_ADAPTER", 46);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages UNMATCHABLE_ADAPTER> = $r46;

        $r47 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r47.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ANONYMOUS_ARRAY_ITEM", 47);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ANONYMOUS_ARRAY_ITEM> = $r47;

        $r48 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r48.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ACCESSORFACTORY_INSTANTIATION_EXCEPTION", 48);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ACCESSORFACTORY_INSTANTIATION_EXCEPTION> = $r48;

        $r49 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r49.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("ACCESSORFACTORY_ACCESS_EXCEPTION", 49);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ACCESSORFACTORY_ACCESS_EXCEPTION> = $r49;

        $r50 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r50.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("CUSTOM_ACCESSORFACTORY_PROPERTY_ERROR", 50);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CUSTOM_ACCESSORFACTORY_PROPERTY_ERROR> = $r50;

        $r51 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r51.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("CUSTOM_ACCESSORFACTORY_FIELD_ERROR", 51);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CUSTOM_ACCESSORFACTORY_FIELD_ERROR> = $r51;

        $r52 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r52.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLGREGORIANCALENDAR_INVALID", 52);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_INVALID> = $r52;

        $r53 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r53.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLGREGORIANCALENDAR_SEC", 53);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_SEC> = $r53;

        $r54 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r54.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLGREGORIANCALENDAR_MIN", 54);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_MIN> = $r54;

        $r55 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r55.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLGREGORIANCALENDAR_HR", 55);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_HR> = $r55;

        $r56 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r56.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLGREGORIANCALENDAR_DAY", 56);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_DAY> = $r56;

        $r57 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r57.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLGREGORIANCALENDAR_MONTH", 57);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_MONTH> = $r57;

        $r58 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r58.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLGREGORIANCALENDAR_YEAR", 58);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_YEAR> = $r58;

        $r59 = new com.sun.xml.bind.v2.model.impl.Messages;

        specialinvoke $r59.<com.sun.xml.bind.v2.model.impl.Messages: void <init>(java.lang.String,int)>("XMLGREGORIANCALENDAR_TIMEZONE", 59);

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_TIMEZONE> = $r59;

        $r60 = newarray (com.sun.xml.bind.v2.model.impl.Messages)[60];

        $r61 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ID_MUST_BE_STRING>;

        $r60[0] = $r61;

        $r62 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages MUTUALLY_EXCLUSIVE_ANNOTATIONS>;

        $r60[1] = $r62;

        $r63 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_ANNOTATIONS>;

        $r60[2] = $r63;

        $r64 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NO_DEFAULT_CONSTRUCTOR>;

        $r60[3] = $r64;

        $r65 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CANT_HANDLE_INTERFACE>;

        $r60[4] = $r65;

        $r66 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CANT_HANDLE_INNER_CLASS>;

        $r60[5] = $r66;

        $r67 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ANNOTATION_ON_WRONG_METHOD>;

        $r60[6] = $r67;

        $r68 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages GETTER_SETTER_INCOMPATIBLE_TYPE>;

        $r60[7] = $r68;

        $r69 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_ENTRY_IN_PROP_ORDER>;

        $r60[8] = $r69;

        $r70 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_PROPERTIES>;

        $r60[9] = $r70;

        $r71 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XML_ELEMENT_MAPPING_ON_NON_IXMLELEMENT_METHOD>;

        $r60[10] = $r71;

        $r72 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages SCOPE_IS_NOT_COMPLEXTYPE>;

        $r60[11] = $r72;

        $r73 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CONFLICTING_XML_ELEMENT_MAPPING>;

        $r60[12] = $r73;

        $r74 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages REFERENCE_TO_NON_ELEMENT>;

        $r60[13] = $r74;

        $r75 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NON_EXISTENT_ELEMENT_MAPPING>;

        $r60[14] = $r75;

        $r76 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages TWO_ATTRIBUTE_WILDCARDS>;

        $r60[15] = $r76;

        $r77 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages SUPER_CLASS_HAS_WILDCARD>;

        $r60[16] = $r77;

        $r78 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_ATTRIBUTE_WILDCARD_TYPE>;

        $r60[17] = $r78;

        $r79 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages PROPERTY_MISSING_FROM_ORDER>;

        $r60[18] = $r79;

        $r80 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages PROPERTY_ORDER_CONTAINS_UNUSED_ENTRY>;

        $r60[19] = $r80;

        $r81 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_XML_ENUM_VALUE>;

        $r60[20] = $r81;

        $r82 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages FAILED_TO_INITIALE_DATATYPE_FACTORY>;

        $r60[21] = $r82;

        $r83 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NO_IMAGE_WRITER>;

        $r60[22] = $r83;

        $r84 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ILLEGAL_MIME_TYPE>;

        $r60[23] = $r84;

        $r85 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ILLEGAL_ANNOTATION>;

        $r60[24] = $r85;

        $r86 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages MULTIPLE_VALUE_PROPERTY>;

        $r60[25] = $r86;

        $r87 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ELEMENT_AND_VALUE_PROPERTY>;

        $r60[26] = $r87;

        $r88 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CONFLICTING_XML_TYPE_MAPPING>;

        $r60[27] = $r88;

        $r89 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLVALUE_IN_DERIVED_TYPE>;

        $r60[28] = $r89;

        $r90 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages SIMPLE_TYPE_IS_REQUIRED>;

        $r60[29] = $r90;

        $r91 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages PROPERTY_COLLISION>;

        $r60[30] = $r91;

        $r92 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_IDREF>;

        $r60[31] = $r92;

        $r93 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_XML_ELEMENT_REF>;

        $r60[32] = $r93;

        $r94 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NO_XML_ELEMENT_DECL>;

        $r60[33] = $r94;

        $r95 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XML_ELEMENT_WRAPPER_ON_NON_COLLECTION>;

        $r60[34] = $r95;

        $r96 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ANNOTATION_NOT_ALLOWED>;

        $r60[35] = $r96;

        $r97 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLLIST_NEEDS_SIMPLETYPE>;

        $r60[36] = $r97;

        $r98 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLLIST_ON_SINGLE_PROPERTY>;

        $r60[37] = $r98;

        $r99 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NO_FACTORY_METHOD>;

        $r60[38] = $r99;

        $r100 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages FACTORY_CLASS_NEEDS_FACTORY_METHOD>;

        $r60[39] = $r100;

        $r101 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INCOMPATIBLE_API_VERSION>;

        $r60[40] = $r101;

        $r102 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INCOMPATIBLE_API_VERSION_MUSTANG>;

        $r60[41] = $r102;

        $r103 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages RUNNING_WITH_1_0_RUNTIME>;

        $r60[42] = $r103;

        $r104 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages MISSING_JAXB_PROPERTIES>;

        $r60[43] = $r104;

        $r105 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages TRANSIENT_FIELD_NOT_BINDABLE>;

        $r60[44] = $r105;

        $r106 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages THERE_MUST_BE_VALUE_IN_XMLVALUE>;

        $r60[45] = $r106;

        $r107 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages UNMATCHABLE_ADAPTER>;

        $r60[46] = $r107;

        $r108 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ANONYMOUS_ARRAY_ITEM>;

        $r60[47] = $r108;

        $r109 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ACCESSORFACTORY_INSTANTIATION_EXCEPTION>;

        $r60[48] = $r109;

        $r110 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages ACCESSORFACTORY_ACCESS_EXCEPTION>;

        $r60[49] = $r110;

        $r111 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CUSTOM_ACCESSORFACTORY_PROPERTY_ERROR>;

        $r60[50] = $r111;

        $r112 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CUSTOM_ACCESSORFACTORY_FIELD_ERROR>;

        $r60[51] = $r112;

        $r113 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_INVALID>;

        $r60[52] = $r113;

        $r114 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_SEC>;

        $r60[53] = $r114;

        $r115 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_MIN>;

        $r60[54] = $r115;

        $r116 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_HR>;

        $r60[55] = $r116;

        $r117 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_DAY>;

        $r60[56] = $r117;

        $r118 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_MONTH>;

        $r60[57] = $r118;

        $r119 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_YEAR>;

        $r60[58] = $r119;

        $r120 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XMLGREGORIANCALENDAR_TIMEZONE>;

        $r60[59] = $r120;

        <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages[] $VALUES> = $r60;

        $r121 = class "Lcom/sun/xml/bind/v2/model/impl/Messages;";

        $r122 = virtualinvoke $r121.<java.lang.Class: java.lang.String getName()>();

        $r123 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>($r122);

        <com.sun.xml.bind.v2.model.impl.Messages: java.util.ResourceBundle rb> = $r123;

        return;
    }
}
