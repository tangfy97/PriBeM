public class org.waveprotocol.wave.client.editor.content.ContentRange extends org.waveprotocol.wave.model.document.util.PointRange
{

    public void <init>(org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.client.editor.content.ContentRange r0;
        org.waveprotocol.wave.model.document.util.Point r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentRange;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.PointRange: void <init>(org.waveprotocol.wave.model.document.util.Point)>(r1);

        return;
    }

    public void <init>(org.waveprotocol.wave.model.document.util.Point, org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.client.editor.content.ContentRange r0;
        org.waveprotocol.wave.model.document.util.Point r1, r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentRange;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        r2 := @parameter1: org.waveprotocol.wave.model.document.util.Point;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.PointRange: void <init>(org.waveprotocol.wave.model.document.util.Point,org.waveprotocol.wave.model.document.util.Point)>(r1, r2);

        return;
    }
}
