class org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1$1 extends java.lang.Object implements org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListener
{
    final org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1 this$0;

    void <init>(org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1)
    {
        org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1$1 r0;
        org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1 r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1$1;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1;

        r0.<org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1$1: org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1 this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClose(boolean)
    {
        org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1$1 r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1$1;

        z0 := @parameter0: boolean;

        return;
    }

    public void onUpdate(org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListener$UnsavedDataInfo)
    {
        org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1$1 r0;
        org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListener$UnsavedDataInfo r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListenerFactory$1$1;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.common.UnsavedDataListener$UnsavedDataInfo;

        return;
    }
}
