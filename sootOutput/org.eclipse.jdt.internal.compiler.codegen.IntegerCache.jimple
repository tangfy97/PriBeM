public class org.eclipse.jdt.internal.compiler.codegen.IntegerCache extends java.lang.Object
{
    public int[] keyTable;
    public int[] valueTable;
    int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: void <init>(int)>(13);

        return;
    }

    public void <init>(int)
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;
        int[] $r1, $r2;
        int i0, $i1;
        double $d0, $d1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int elementSize> = 0;

        $d0 = (double) i0;

        $d1 = $d0 * 0.66;

        $i1 = (int) $d1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int threshold> = $i1;

        $r1 = newarray (int)[i0];

        r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable> = $r1;

        $r2 = newarray (int)[i0];

        r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable> = $r2;

        return;
    }

    public void clear()
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;
        int[] $r1, $r2, $r3;
        int i0, $i2;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        i0 = lengthof $r1;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $r2[i0] = 0;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $r3[i0] = 0;

     label2:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        if i0 >= 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int elementSize> = 0;

        return;
    }

    public boolean containsKey(int)
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;
        int[] $r1, $r2, $r3, $r4, $r5;
        int i0, i1, $i2, $i3, $i4, i5, $i6;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        i0 := @parameter0: int;

        i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int hash(int)>(i0);

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        i1 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i2 = $r2[i5];

        if $i2 != i0 goto label2;

        return 1;

     label2:
        i5 = i5 + 1;

        if i5 != i1 goto label3;

        i5 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i6 = $r5[i5];

        if $i6 != 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i3 = $r3[i5];

        if $i3 != 0 goto label4;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $i4 = $r4[i5];

        if $i4 != 0 goto label1;

     label4:
        return 0;
    }

    public int hash(int)
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;
        int[] $r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        i0 := @parameter0: int;

        $i2 = i0 & 2147483647;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i1 = lengthof $r1;

        $i3 = $i2 % $i1;

        return $i3;
    }

    public int put(int, int)
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int hash(int)>(i0);

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        i1 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i2 = $r2[i9];

        if $i2 != i0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $r3[i9] = i3;

        return i3;

     label2:
        i9 = i9 + 1;

        if i9 != i1 goto label3;

        i9 = 0;

     label3:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i10 = $r8[i9];

        if $i10 != 0 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i4 = $r4[i9];

        if $i4 != 0 goto label4;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $i8 = $r7[i9];

        if $i8 != 0 goto label1;

     label4:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $r5[i9] = i0;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $r6[i9] = i3;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int elementSize>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int elementSize> = $i6;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int threshold>;

        if $i6 <= $i7 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: void rehash()>();

     label5:
        return i3;
    }

    public int putIfAbsent(int, int)
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        i11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int hash(int)>(i0);

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        i1 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i2 = $r2[i11];

        if $i2 != i0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $i3 = $r3[i11];

        return $i3;

     label2:
        i11 = i11 + 1;

        if i11 != i1 goto label3;

        i11 = 0;

     label3:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i12 = $r8[i11];

        if $i12 != 0 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i4 = $r4[i11];

        if $i4 != 0 goto label4;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $i10 = $r7[i11];

        if $i10 != 0 goto label1;

     label4:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $r5[i11] = i0;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $r6[i11] = i5;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int elementSize>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int elementSize> = $i7;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int threshold>;

        if $i7 <= $i8 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: void rehash()>();

     label5:
        $i9 = neg i5;

        return $i9;
    }

    private void rehash()
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r1, $r8;
        int[] $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, i2, i3, $i4, i5, $i7;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        $r8 = new org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i0 = lengthof $r2;

        $i1 = $i0 * 2;

        specialinvoke $r8.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: void <init>(int)>($i1);

        $r3 = r1.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        i5 = lengthof $r3;

        goto label3;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        i2 = $r4[i5];

        $r5 = r1.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        i3 = $r5[i5];

        if i2 != 0 goto label2;

        if i2 != 0 goto label3;

        if i3 == 0 goto label3;

     label2:
        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int put(int,int)>(i2, i3);

     label3:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        if i5 >= 0 goto label1;

        $r6 = $r8.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable> = $r6;

        $r7 = $r8.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable> = $r7;

        $i4 = $r8.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int threshold> = $i4;

        return;
    }

    public int size()
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.codegen.IntegerCache r0;
        int[] $r2, $r3, $r6, $r7, $r8;
        java.lang.StringBuffer $r1, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.IntegerCache;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int size()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        i6 = 0;

        goto label5;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i1 = $r2[i6];

        if $i1 != 0 goto label2;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i4 = $r7[i6];

        if $i4 != 0 goto label3;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $i5 = $r8[i6];

        if $i5 == 0 goto label3;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] keyTable>;

        $i2 = $r3[i6];

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("->");

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.IntegerCache: int[] valueTable>;

        $i3 = $r6[i6];

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

     label3:
        if i6 >= $i0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label4:
        i6 = i6 + 1;

     label5:
        if i6 < $i0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r9 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
