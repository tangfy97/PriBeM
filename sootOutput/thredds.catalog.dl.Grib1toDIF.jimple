public class thredds.catalog.dl.Grib1toDIF extends java.lang.Object implements thredds.catalog.dl.VocabTranslator
{
    private static thredds.catalog.dl.Grib1toDIF singleton;
    private java.util.HashMap hash;
    private int maxLines;

    public static thredds.catalog.dl.Grib1toDIF getInstance() throws java.io.IOException
    {
        thredds.catalog.dl.Grib1toDIF $r0, $r1, $r2;

        $r0 = <thredds.catalog.dl.Grib1toDIF: thredds.catalog.dl.Grib1toDIF singleton>;

        if $r0 != null goto label1;

        $r2 = new thredds.catalog.dl.Grib1toDIF;

        specialinvoke $r2.<thredds.catalog.dl.Grib1toDIF: void <init>()>();

        <thredds.catalog.dl.Grib1toDIF: thredds.catalog.dl.Grib1toDIF singleton> = $r2;

     label1:
        $r1 = <thredds.catalog.dl.Grib1toDIF: thredds.catalog.dl.Grib1toDIF singleton>;

        return $r1;
    }

    private void <init>() throws java.io.IOException
    {
        thredds.catalog.dl.Grib1toDIF r0;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r29, $r30, $r31;
        java.util.HashMap $r1, $r27;
        java.util.StringTokenizer $r7;
        int $i0, i1;
        java.lang.String $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r26, $r32;
        java.io.IOException $r28;
        java.io.InputStreamReader $r5;
        java.lang.Class $r2;
        java.io.BufferedReader $r4;
        java.io.InputStream $r3;

        r0 := @this: thredds.catalog.dl.Grib1toDIF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<thredds.catalog.dl.Grib1toDIF: java.util.HashMap hash> = $r1;

        r0.<thredds.catalog.dl.Grib1toDIF: int maxLines> = 1000;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/resources/thredds/dl/GRIB-GCMD.csv");

        if $r3 != null goto label1;

        $r28 = new java.io.IOException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant find resource= ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/resources/thredds/dl/GRIB-GCMD.csv");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r32);

        throw $r28;

     label1:
        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        i1 = 0;

     label2:
        $i0 = r0.<thredds.catalog.dl.Grib1toDIF: int maxLines>;

        if i1 >= $i0 goto label4;

        $r6 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r6 != null goto label3;

        goto label4;

     label3:
        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r6, ",");

        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $r12 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $r14 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        $r16 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = r0.<thredds.catalog.dl.Grib1toDIF: java.util.HashMap hash>;

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r26);

        i1 = i1 + 1;

        goto label2;

     label4:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

        return;
    }

    public java.lang.String translate(java.lang.String)
    {
        java.util.HashMap $r4;
        thredds.catalog.dl.Grib1toDIF r3;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String r0, $r1, $r2, $r6;

        r3 := @this: thredds.catalog.dl.Grib1toDIF;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(",");

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r4 = r3.<thredds.catalog.dl.Grib1toDIF: java.util.HashMap hash>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }
}
