public class org.apache.jena.iri.impl.ResolvedRelativeIRI extends org.apache.jena.iri.impl.AbsIRIImpl
{
    private final org.apache.jena.iri.impl.AbsIRIImpl base;
    private final org.apache.jena.iri.impl.AbsIRIImpl rel;
    int useBaseUntilThisComponent;
    long pathErrors;
    final java.lang.String iri;

    public void <init>(org.apache.jena.iri.impl.AbsIRIImpl, org.apache.jena.iri.impl.AbsIRIImpl)
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl r1, r2;
        long $l2, $l3, $l4;
        int[] $r4, $r5;
        int $i0, $i1, i5;
        java.lang.String $r3;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        r1 := @parameter0: org.apache.jena.iri.impl.AbsIRIImpl;

        r2 := @parameter1: org.apache.jena.iri.impl.AbsIRIImpl;

        specialinvoke r0.<org.apache.jena.iri.impl.AbsIRIImpl: void <init>()>();

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base> = r1;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel> = r2;

        specialinvoke r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: void transformReferences()>();

        $r3 = specialinvoke r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String createIRIString()>();

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String iri> = $r3;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long allErrors> = 0L;

        i5 = 0;

     label1:
        $r4 = <org.apache.jena.iri.impl.Parser: int[] fields>;

        $i0 = lengthof $r4;

        if i5 >= $i0 goto label2;

        $l2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long allErrors>;

        $r5 = <org.apache.jena.iri.impl.Parser: int[] fields>;

        $i1 = $r5[i5];

        $l3 = virtualinvoke r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long errors(int)>($i1);

        $l4 = $l2 | $l3;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long allErrors> = $l4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    private void transformReferences()
    {
        org.apache.jena.iri.impl.AbsIRIImpl $r1, $r2, $r3, $r6, $r7, $r8, $r10, $r12, $r14, $r16, $r18, $r19, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.jena.iri.impl.IRIFactoryImpl $r15;
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7;
        int $i8, $i9;
        java.lang.String $r4, $r5, $r9, $r11, $r13, $r17, $r20, $r22;
        char $c0;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long pathErrors> = 0L;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String path> = null;

        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $z0 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: boolean has(int)>(2);

        if $z0 == 0 goto label2;

        $r15 = virtualinvoke r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.IRIFactoryImpl getFactory()>();

        $r16 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r17 = virtualinvoke $r16.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getScheme()>();

        $z4 = virtualinvoke $r15.<org.apache.jena.iri.impl.IRIFactoryImpl: boolean getSameSchemaRelativeReferences(java.lang.String)>($r17);

        if $z4 == 0 goto label1;

        $r18 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $z5 = virtualinvoke $r18.<org.apache.jena.iri.impl.AbsIRIImpl: boolean has(int)>(2);

        if $z5 == 0 goto label1;

        $r19 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r20 = virtualinvoke $r19.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getScheme()>();

        $r21 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r22 = virtualinvoke $r21.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getScheme()>();

        $z6 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r22);

        if $z6 != 0 goto label2;

     label1:
        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent> = 2;

        goto label7;

     label2:
        $r2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $z1 = virtualinvoke $r2.<org.apache.jena.iri.impl.AbsIRIImpl: boolean has(int)>(4);

        if $z1 == 0 goto label3;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent> = 4;

        goto label7;

     label3:
        $r3 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getRawPath()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label5;

        $r14 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $z3 = virtualinvoke $r14.<org.apache.jena.iri.impl.AbsIRIImpl: boolean has(int)>(13);

        if $z3 == 0 goto label4;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent> = 13;

        goto label7;

     label4:
        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent> = 15;

        goto label7;

     label5:
        $c0 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        $i9 = (int) $c0;

        if $i9 != 47 goto label6;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent> = 11;

        goto label7;

     label6:
        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent> = 11;

        $r5 = specialinvoke r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String mergePathsRemoveDots()>();

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String path> = $r5;

        $r6 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $l1 = virtualinvoke $r6.<org.apache.jena.iri.impl.AbsIRIImpl: long errors(int)>(11);

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long pathErrors> = $l1;

     label7:
        $i8 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent>;

        if $i8 > 11 goto label8;

        $l5 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long pathErrors>;

        $r10 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $l6 = virtualinvoke $r10.<org.apache.jena.iri.impl.AbsIRIImpl: long errors(int)>(11);

        $l7 = $l5 | $l6;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long pathErrors> = $l7;

        $r11 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String path>;

        if $r11 != null goto label9;

        $r12 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r13 = virtualinvoke $r12.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String pathRemoveDots()>();

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String path> = $r13;

        goto label9;

     label8:
        $l2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long pathErrors>;

        $r7 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $l3 = virtualinvoke $r7.<org.apache.jena.iri.impl.AbsIRIImpl: long errors(int)>(11);

        $l4 = $l2 | $l3;

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long pathErrors> = $l4;

        $r8 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r9 = virtualinvoke $r8.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getRawPath()>();

        r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String path> = $r9;

     label9:
        return;
    }

    private java.lang.String createIRIString()
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r1;
        java.lang.StringBuffer $r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $z0 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: boolean has(int)>(2);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String getScheme()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        $z1 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: boolean has(int)>(4);

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        $r6 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String getRawAuthority()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label2:
        $r2 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String getRawPath()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $z2 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: boolean has(int)>(13);

        if $z2 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r5 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String getRawQuery()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label3:
        $z3 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: boolean has(int)>(15);

        if $z3 == 0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r4 = virtualinvoke r1.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String getRawFragment()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label4:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private java.lang.String mergePathsRemoveDots()
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl $r1, $r2, $r5;
        java.lang.String $r3, $r4, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $z0 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: boolean has(int)>(4);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r6 = virtualinvoke $r5.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getRawPath()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label1;

        $r7 = specialinvoke r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String mergePathsRemoveDots(java.lang.String)>("/");

        return $r7;

     label1:
        $r2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getRawPath()>();

        $r4 = specialinvoke r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String mergePathsRemoveDots(java.lang.String)>($r3);

        return $r4;
    }

    private java.lang.String mergePathsRemoveDots(java.lang.String)
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r2;
        org.apache.jena.iri.impl.AbsIRIImpl $r3, $r4, $r8, $r9;
        java.lang.StringBuffer $r14;
        int $i0, $i1, $i3;
        java.lang.String r0, $r5, $r6, $r7, $r10, $r11, $r12, r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r2 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $i1 = $i0 + 1;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

     label1:
        $r3 = r2.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $z0 = virtualinvoke $r3.<org.apache.jena.iri.impl.AbsIRIImpl: boolean dotsOK()>();

        if $z0 == 0 goto label6;

        $r8 = r2.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $z1 = virtualinvoke $r8.<org.apache.jena.iri.impl.AbsIRIImpl: boolean dotsOK()>();

        if $z1 == 0 goto label6;

        $r9 = r2.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r10 = virtualinvoke $r9.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getRawPath()>();

        r13 = $r10;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("./");

        if $z2 == 0 goto label2;

        r13 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(2);

     label2:
        $z5 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("../");

        if $z5 == 0 goto label3;

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>(3);

        staticinvoke <org.apache.jena.iri.impl.ResolvedRelativeIRI: void removeLastSeqment2(java.lang.StringBuffer)>($r14);

        goto label2;

     label3:
        $z3 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("..");

        if $z3 == 0 goto label4;

        r13 = "";

        staticinvoke <org.apache.jena.iri.impl.ResolvedRelativeIRI: void removeLastSeqment2(java.lang.StringBuffer)>($r14);

     label4:
        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>(".");

        if $z4 == 0 goto label5;

        r13 = "";

     label5:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r11 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;

     label6:
        $r4 = r2.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r5 = virtualinvoke $r4.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String getRawPath()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String removeDotSegments(java.lang.String)>($r6);

        return $r7;
    }

    private static void removeLastSeqment2(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int $i0, i2, $i4, $i5;
        char $c1;

        r0 := @parameter0: java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        i2 = $i0 - 1;

        if i2 > 0 goto label1;

        return;

     label1:
        if i2 <= 0 goto label2;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        $c1 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i2);

        $i5 = (int) $c1;

        if $i5 != 47 goto label1;

        i2 = i2 + 1;

        goto label2;

     label2:
        virtualinvoke r0.<java.lang.StringBuffer: void setLength(int)>(i2);

        return;
    }

    protected org.apache.jena.iri.impl.IRIFactoryImpl getFactory()
    {
        org.apache.jena.iri.impl.IRIFactoryImpl $r2;
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl $r1;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: org.apache.jena.iri.impl.IRIFactoryImpl getFactory()>();

        return $r2;
    }

    long errors(int)
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl $r1, $r2;
        int i0, $i1;
        long $l2;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        i0 := @parameter0: int;

        if i0 != 11 goto label1;

        $l2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: long pathErrors>;

        goto label3;

     label1:
        $i1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent>;

        if i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $l2 = virtualinvoke $r2.<org.apache.jena.iri.impl.AbsIRIImpl: long errors(int)>(i0);

        goto label3;

     label2:
        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $l2 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: long errors(int)>(i0);

     label3:
        return $l2;
    }

    boolean has(int)
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl $r1, $r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        i0 := @parameter0: int;

        if i0 == 11 goto label2;

        $i1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent>;

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $z1 = virtualinvoke $r2.<org.apache.jena.iri.impl.AbsIRIImpl: boolean has(int)>(i0);

        if $z1 == 0 goto label3;

        goto label2;

     label1:
        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $z0 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: boolean has(int)>(i0);

        if $z0 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    java.lang.String get(int)
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl $r1, $r2;
        int i0, $i1;
        java.lang.String $r3;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        i0 := @parameter0: int;

        if i0 != 11 goto label1;

        $r3 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String path>;

        goto label3;

     label1:
        $i1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent>;

        if i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String get(int)>(i0);

        goto label3;

     label2:
        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r3 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String get(int)>(i0);

     label3:
        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String iri>;

        return $r1;
    }

    java.lang.String pathRemoveDots()
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        $i0 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent>;

        if $i0 <= 11 goto label1;

        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.String pathRemoveDots()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: java.lang.String path>;

     label2:
        return $r2;
    }

    boolean dotsOK()
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        return 1;
    }

    org.apache.jena.iri.impl.SchemeSpecificPart getSchemeSpec()
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl $r1, $r3;
        int $i0;
        org.apache.jena.iri.impl.SchemeSpecificPart $r2, $r4;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        $i0 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent>;

        if $i0 != 2 goto label1;

        $r3 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.impl.AbsIRIImpl: org.apache.jena.iri.impl.SchemeSpecificPart getSchemeSpec()>();

        return $r4;

     label1:
        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: org.apache.jena.iri.impl.SchemeSpecificPart getSchemeSpec()>();

        return $r2;
    }

    java.lang.Exception getIDNAException()
    {
        org.apache.jena.iri.impl.ResolvedRelativeIRI r0;
        org.apache.jena.iri.impl.AbsIRIImpl $r1, $r3;
        int $i0, $i1;
        java.lang.Exception $r2, $r4;

        r0 := @this: org.apache.jena.iri.impl.ResolvedRelativeIRI;

        $i0 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent>;

        if $i0 == 2 goto label1;

        $i1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: int useBaseUntilThisComponent>;

        if $i1 != 4 goto label2;

     label1:
        $r1 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl rel>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.Exception getIDNAException()>();

        return $r2;

     label2:
        $r3 = r0.<org.apache.jena.iri.impl.ResolvedRelativeIRI: org.apache.jena.iri.impl.AbsIRIImpl base>;

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.impl.AbsIRIImpl: java.lang.Exception getIDNAException()>();

        return $r4;
    }
}
