public final class org.apache.poi.hslf.record.DocumentAtom extends org.apache.poi.hslf.record.RecordAtom
{
    private byte[] _header;
    private static long _type;
    private long slideSizeX;
    private long slideSizeY;
    private long notesSizeX;
    private long notesSizeY;
    private long serverZoomFrom;
    private long serverZoomTo;
    private long notesMasterPersist;
    private long handoutMasterPersist;
    private int firstSlideNum;
    private int slideSizeType;
    private byte saveWithFonts;
    private byte omitTitlePlace;
    private byte rightToLeft;
    private byte showComments;
    private byte[] reserved;

    public long getSlideSizeX()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = r0.<org.apache.poi.hslf.record.DocumentAtom: long slideSizeX>;

        return $l0;
    }

    public long getSlideSizeY()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = r0.<org.apache.poi.hslf.record.DocumentAtom: long slideSizeY>;

        return $l0;
    }

    public long getNotesSizeX()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = r0.<org.apache.poi.hslf.record.DocumentAtom: long notesSizeX>;

        return $l0;
    }

    public long getNotesSizeY()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = r0.<org.apache.poi.hslf.record.DocumentAtom: long notesSizeY>;

        return $l0;
    }

    public void setSlideSizeX(long)
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long slideSizeX> = l0;

        return;
    }

    public void setSlideSizeY(long)
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long slideSizeY> = l0;

        return;
    }

    public void setNotesSizeX(long)
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long notesSizeX> = l0;

        return;
    }

    public void setNotesSizeY(long)
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long notesSizeY> = l0;

        return;
    }

    public long getServerZoomFrom()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = r0.<org.apache.poi.hslf.record.DocumentAtom: long serverZoomFrom>;

        return $l0;
    }

    public long getServerZoomTo()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = r0.<org.apache.poi.hslf.record.DocumentAtom: long serverZoomTo>;

        return $l0;
    }

    public void setServerZoomFrom(long)
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long serverZoomFrom> = l0;

        return;
    }

    public void setServerZoomTo(long)
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long serverZoomTo> = l0;

        return;
    }

    public long getNotesMasterPersist()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = r0.<org.apache.poi.hslf.record.DocumentAtom: long notesMasterPersist>;

        return $l0;
    }

    public long getHandoutMasterPersist()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = r0.<org.apache.poi.hslf.record.DocumentAtom: long handoutMasterPersist>;

        return $l0;
    }

    public int getFirstSlideNum()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        int $i0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $i0 = r0.<org.apache.poi.hslf.record.DocumentAtom: int firstSlideNum>;

        return $i0;
    }

    public int getSlideSizeType()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        int $i0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $i0 = r0.<org.apache.poi.hslf.record.DocumentAtom: int slideSizeType>;

        return $i0;
    }

    public boolean getSaveWithFonts()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        byte $b0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $b0 = r0.<org.apache.poi.hslf.record.DocumentAtom: byte saveWithFonts>;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean getOmitTitlePlace()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        byte $b0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $b0 = r0.<org.apache.poi.hslf.record.DocumentAtom: byte omitTitlePlace>;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean getRightToLeft()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        byte $b0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $b0 = r0.<org.apache.poi.hslf.record.DocumentAtom: byte rightToLeft>;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean getShowComments()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        byte $b0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $b0 = r0.<org.apache.poi.hslf.record.DocumentAtom: byte showComments>;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r5, $r6;
        byte $b41, $b44, $b47, $b50;
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l4, $l8, $l12, $l16, $l20, $l24, $l28, $l32;
        short $s35, $s38;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i27, $i29, $i30, $i31, $i33, $i34, $i36, $i37, $i39, $i40, $i42, $i43, $i45, $i46, $i48, $i49, $i51, $i52, $i53, $i54, i55, $i56, $i57;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i55 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        if i55 >= 48 goto label1;

        i55 = 48;

     label1:
        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.DocumentAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.DocumentAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i1 = i0 + 0;

        $i2 = $i1 + 8;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i2);

        $l4 = (long) $i3;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long slideSizeX> = $l4;

        $i5 = i0 + 4;

        $i6 = $i5 + 8;

        $i7 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i6);

        $l8 = (long) $i7;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long slideSizeY> = $l8;

        $i9 = i0 + 8;

        $i10 = $i9 + 8;

        $i11 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i10);

        $l12 = (long) $i11;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long notesSizeX> = $l12;

        $i13 = i0 + 12;

        $i14 = $i13 + 8;

        $i15 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i14);

        $l16 = (long) $i15;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long notesSizeY> = $l16;

        $i17 = i0 + 16;

        $i18 = $i17 + 8;

        $i19 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i18);

        $l20 = (long) $i19;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long serverZoomFrom> = $l20;

        $i21 = i0 + 20;

        $i22 = $i21 + 8;

        $i23 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i22);

        $l24 = (long) $i23;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long serverZoomTo> = $l24;

        $i25 = i0 + 24;

        $i26 = $i25 + 8;

        $i27 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i26);

        $l28 = (long) $i27;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long notesMasterPersist> = $l28;

        $i29 = i0 + 28;

        $i30 = $i29 + 8;

        $i31 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i30);

        $l32 = (long) $i31;

        r0.<org.apache.poi.hslf.record.DocumentAtom: long handoutMasterPersist> = $l32;

        $i33 = i0 + 32;

        $i34 = $i33 + 8;

        $s35 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r2, $i34);

        $i56 = (int) $s35;

        r0.<org.apache.poi.hslf.record.DocumentAtom: int firstSlideNum> = $i56;

        $i36 = i0 + 34;

        $i37 = $i36 + 8;

        $s38 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r2, $i37);

        $i57 = (int) $s38;

        r0.<org.apache.poi.hslf.record.DocumentAtom: int slideSizeType> = $i57;

        $i39 = i0 + 36;

        $i40 = $i39 + 8;

        $b41 = r2[$i40];

        r0.<org.apache.poi.hslf.record.DocumentAtom: byte saveWithFonts> = $b41;

        $i42 = i0 + 37;

        $i43 = $i42 + 8;

        $b44 = r2[$i43];

        r0.<org.apache.poi.hslf.record.DocumentAtom: byte omitTitlePlace> = $b44;

        $i45 = i0 + 38;

        $i46 = $i45 + 8;

        $b47 = r2[$i46];

        r0.<org.apache.poi.hslf.record.DocumentAtom: byte rightToLeft> = $b47;

        $i48 = i0 + 39;

        $i49 = $i48 + 8;

        $b50 = r2[$i49];

        r0.<org.apache.poi.hslf.record.DocumentAtom: byte showComments> = $b50;

        $i51 = i55 - 40;

        $i52 = $i51 - 8;

        $r4 = newarray (byte)[$i52];

        r0.<org.apache.poi.hslf.record.DocumentAtom: byte[] reserved> = $r4;

        $i54 = i0 + 48;

        $r6 = r0.<org.apache.poi.hslf.record.DocumentAtom: byte[] reserved>;

        $r5 = r0.<org.apache.poi.hslf.record.DocumentAtom: byte[] reserved>;

        $i53 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i54, $r6, 0, $i53);

        return;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.DocumentAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.DocumentAtom;

        $l0 = <org.apache.poi.hslf.record.DocumentAtom: long _type>;

        return $l0;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r2, $r3;
        byte $b20, $b21, $b22, $b23;
        org.apache.poi.hslf.record.DocumentAtom r1;
        long $l0, $l2, $l4, $l6, $l8, $l10, $l12, $l14;
        short $s17, $s19;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i16, $i18, $i24, $i25, $i26, $i27;
        java.io.OutputStream r0;

        r1 := @this: org.apache.poi.hslf.record.DocumentAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.DocumentAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $l0 = r1.<org.apache.poi.hslf.record.DocumentAtom: long slideSizeX>;

        $i1 = (int) $l0;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(int,java.io.OutputStream)>($i1, r0);

        $l2 = r1.<org.apache.poi.hslf.record.DocumentAtom: long slideSizeY>;

        $i3 = (int) $l2;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(int,java.io.OutputStream)>($i3, r0);

        $l4 = r1.<org.apache.poi.hslf.record.DocumentAtom: long notesSizeX>;

        $i5 = (int) $l4;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(int,java.io.OutputStream)>($i5, r0);

        $l6 = r1.<org.apache.poi.hslf.record.DocumentAtom: long notesSizeY>;

        $i7 = (int) $l6;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(int,java.io.OutputStream)>($i7, r0);

        $l8 = r1.<org.apache.poi.hslf.record.DocumentAtom: long serverZoomFrom>;

        $i9 = (int) $l8;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(int,java.io.OutputStream)>($i9, r0);

        $l10 = r1.<org.apache.poi.hslf.record.DocumentAtom: long serverZoomTo>;

        $i11 = (int) $l10;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(int,java.io.OutputStream)>($i11, r0);

        $l12 = r1.<org.apache.poi.hslf.record.DocumentAtom: long notesMasterPersist>;

        $i13 = (int) $l12;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(int,java.io.OutputStream)>($i13, r0);

        $l14 = r1.<org.apache.poi.hslf.record.DocumentAtom: long handoutMasterPersist>;

        $i15 = (int) $l14;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(int,java.io.OutputStream)>($i15, r0);

        $i16 = r1.<org.apache.poi.hslf.record.DocumentAtom: int firstSlideNum>;

        $s17 = (short) $i16;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(short,java.io.OutputStream)>($s17, r0);

        $i18 = r1.<org.apache.poi.hslf.record.DocumentAtom: int slideSizeType>;

        $s19 = (short) $i18;

        staticinvoke <org.apache.poi.hslf.record.DocumentAtom: void writeLittleEndian(short,java.io.OutputStream)>($s19, r0);

        $b20 = r1.<org.apache.poi.hslf.record.DocumentAtom: byte saveWithFonts>;

        $i24 = (int) $b20;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i24);

        $b21 = r1.<org.apache.poi.hslf.record.DocumentAtom: byte omitTitlePlace>;

        $i25 = (int) $b21;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i25);

        $b22 = r1.<org.apache.poi.hslf.record.DocumentAtom: byte rightToLeft>;

        $i26 = (int) $b22;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i26);

        $b23 = r1.<org.apache.poi.hslf.record.DocumentAtom: byte showComments>;

        $i27 = (int) $b23;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i27);

        $r3 = r1.<org.apache.poi.hslf.record.DocumentAtom: byte[] reserved>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.DocumentAtom: long _type> = 1001L;

        return;
    }
}
