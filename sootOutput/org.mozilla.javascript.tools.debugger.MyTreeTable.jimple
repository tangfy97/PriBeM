class org.mozilla.javascript.tools.debugger.MyTreeTable extends org.mozilla.javascript.tools.debugger.downloaded.JTreeTable
{
    private static final long serialVersionUID;
    static java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel;

    public void <init>(org.mozilla.javascript.tools.debugger.VariableModel)
    {
        org.mozilla.javascript.tools.debugger.MyTreeTable r0;
        org.mozilla.javascript.tools.debugger.VariableModel r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTreeTable;

        r1 := @parameter0: org.mozilla.javascript.tools.debugger.VariableModel;

        specialinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void <init>(org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel)>(r1);

        return;
    }

    public javax.swing.JTree resetTree(org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel)
    {
        javax.swing.ListSelectionModel $r7;
        org.mozilla.javascript.tools.debugger.downloaded.TreeTableModelAdapter $r3;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer $r1, $r4, $r6, $r8, $r10, $r14, $r15, $r16, $r18;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper $r5;
        org.mozilla.javascript.tools.debugger.MyTreeTable r0;
        int $i0;
        javax.swing.tree.DefaultTreeCellRenderer $r19;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellEditor $r12;
        org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel r2;
        java.awt.Dimension $r13;
        javax.swing.tree.TreeCellRenderer $r17;
        java.lang.Class $r9, $r11, $r20, $r21;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTreeTable;

        r2 := @parameter0: org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel;

        $r1 = new org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer;

        specialinvoke $r1.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable,javax.swing.tree.TreeModel)>(r0, r2);

        r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree> = $r1;

        $r3 = new org.mozilla.javascript.tools.debugger.downloaded.TreeTableModelAdapter;

        $r4 = r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        specialinvoke $r3.<org.mozilla.javascript.tools.debugger.downloaded.TreeTableModelAdapter: void <init>(org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel,javax.swing.JTree)>(r2, $r4);

        specialinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void setModel(javax.swing.table.TableModel)>($r3);

        $r5 = new org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper;

        specialinvoke $r5.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable)>(r0);

        $r6 = r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        virtualinvoke $r6.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void setSelectionModel(javax.swing.tree.TreeSelectionModel)>($r5);

        $r7 = virtualinvoke $r5.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.ListSelectionModel getListSelectionModel()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: void setSelectionModel(javax.swing.ListSelectionModel)>($r7);

        $r8 = r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        $i0 = virtualinvoke $r8.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: int getRowHeight()>();

        if $i0 >= 1 goto label1;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: void setRowHeight(int)>(18);

     label1:
        $r9 = <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

        if $r9 != null goto label2;

        $r20 = staticinvoke <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel");

        <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel> = $r20;

        goto label3;

     label2:
        $r20 = <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

     label3:
        $r10 = r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: void setDefaultRenderer(java.lang.Class,javax.swing.table.TableCellRenderer)>($r20, $r10);

        $r11 = <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

        if $r11 != null goto label4;

        $r21 = staticinvoke <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel");

        <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel> = $r21;

        goto label5;

     label4:
        $r21 = <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

     label5:
        $r12 = new org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellEditor;

        specialinvoke $r12.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellEditor: void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable)>(r0);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: void setDefaultEditor(java.lang.Class,javax.swing.table.TableCellEditor)>($r21, $r12);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: void setShowGrid(boolean)>(1);

        $r13 = new java.awt.Dimension;

        specialinvoke $r13.<java.awt.Dimension: void <init>(int,int)>(1, 1);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: void setIntercellSpacing(java.awt.Dimension)>($r13);

        $r14 = r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        virtualinvoke $r14.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void setRootVisible(boolean)>(0);

        $r15 = r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        virtualinvoke $r15.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void setShowsRootHandles(boolean)>(1);

        $r16 = r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        $r17 = virtualinvoke $r16.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: javax.swing.tree.TreeCellRenderer getCellRenderer()>();

        $r19 = (javax.swing.tree.DefaultTreeCellRenderer) $r17;

        virtualinvoke $r19.<javax.swing.tree.DefaultTreeCellRenderer: void setOpenIcon(javax.swing.Icon)>(null);

        virtualinvoke $r19.<javax.swing.tree.DefaultTreeCellRenderer: void setClosedIcon(javax.swing.Icon)>(null);

        virtualinvoke $r19.<javax.swing.tree.DefaultTreeCellRenderer: void setLeafIcon(javax.swing.Icon)>(null);

        $r18 = r0.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        return $r18;
    }

    public boolean isCellEditable(java.util.EventObject)
    {
        java.awt.Rectangle $r8;
        java.awt.Point $r3;
        long $l4;
        java.util.EventObject r0;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer $r7, $r9;
        org.mozilla.javascript.tools.debugger.MyTreeTable r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i18;
        boolean $z0, $z1;
        java.awt.event.MouseEvent r1, $r11;
        java.lang.Class $r4, $r5, $r10;

        r2 := @this: org.mozilla.javascript.tools.debugger.MyTreeTable;

        r0 := @parameter0: java.util.EventObject;

        $z0 = r0 instanceof java.awt.event.MouseEvent;

        if $z0 == 0 goto label8;

        r1 = (java.awt.event.MouseEvent) r0;

        $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiers()>();

        if $i0 == 0 goto label1;

        $i11 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiers()>();

        $i12 = $i11 & 1040;

        if $i12 == 0 goto label6;

        $i13 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiers()>();

        $i14 = $i13 & 6863;

        if $i14 != 0 goto label6;

     label1:
        $r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $i1 = virtualinvoke r2.<org.mozilla.javascript.tools.debugger.MyTreeTable: int rowAtPoint(java.awt.Point)>($r3);

        $i2 = virtualinvoke r2.<org.mozilla.javascript.tools.debugger.MyTreeTable: int getColumnCount()>();

        i15 = $i2 - 1;

     label2:
        if i15 < 0 goto label6;

        $r4 = <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

        if $r4 != null goto label3;

        $r10 = staticinvoke <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel");

        <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel> = $r10;

        goto label4;

     label3:
        $r10 = <org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

     label4:
        $r5 = virtualinvoke r2.<org.mozilla.javascript.tools.debugger.MyTreeTable: java.lang.Class getColumnClass(int)>(i15);

        if $r10 != $r5 goto label5;

        $r11 = new java.awt.event.MouseEvent;

        $r7 = r2.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        $i3 = virtualinvoke r1.<java.awt.event.MouseEvent: int getID()>();

        $l4 = virtualinvoke r1.<java.awt.event.MouseEvent: long getWhen()>();

        $i5 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiers()>();

        $i6 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $r8 = virtualinvoke r2.<org.mozilla.javascript.tools.debugger.MyTreeTable: java.awt.Rectangle getCellRect(int,int,boolean)>($i1, i15, 1);

        $i7 = $r8.<java.awt.Rectangle: int x>;

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();

        $i10 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();

        $z1 = virtualinvoke r1.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r11.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r7, $i3, $l4, $i5, $i8, $i9, $i10, $z1);

        $r9 = r2.<org.mozilla.javascript.tools.debugger.MyTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        virtualinvoke $r9.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void dispatchEvent(java.awt.AWTEvent)>($r11);

        goto label6;

     label5:
        $i18 = (int) -1;

        i15 = i15 + $i18;

        goto label2;

     label6:
        $i16 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();

        if $i16 < 3 goto label7;

        return 1;

     label7:
        return 0;

     label8:
        if r0 != null goto label9;

        return 1;

     label9:
        return 0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.tools.debugger.MyTreeTable: long serialVersionUID> = 3457265548184453049L;

        return;
    }
}
