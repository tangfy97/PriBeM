public abstract class org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator extends java.lang.Object implements org.apache.jena.atlas.web.auth.HttpAuthenticator
{

    public void <init>()
    {
        org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator r0;

        r0 := @this: org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(org.apache.http.impl.client.AbstractHttpClient, org.apache.http.protocol.HttpContext, java.net.URI)
    {
        org.apache.http.auth.UsernamePasswordCredentials $r7;
        org.apache.http.impl.client.BasicCredentialsProvider $r4;
        org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator r0;
        org.apache.http.auth.AuthScope $r6;
        org.apache.http.protocol.HttpContext r11;
        int $i0;
        char[] $r9;
        org.apache.http.impl.client.AbstractHttpClient r10;
        java.net.URI r1;
        java.lang.String $r3, $r5, $r8;
        org.apache.http.HttpHost $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator;

        r10 := @parameter0: org.apache.http.impl.client.AbstractHttpClient;

        r11 := @parameter1: org.apache.http.protocol.HttpContext;

        r1 := @parameter2: java.net.URI;

        $z0 = virtualinvoke r0.<org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator: boolean hasUserName(java.net.URI)>(r1);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator: boolean hasPassword(java.net.URI)>(r1);

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = new org.apache.http.HttpHost;

        $r3 = virtualinvoke r1.<java.net.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke r1.<java.net.URI: int getPort()>();

        specialinvoke $r2.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>($r3, $i0);

        $r4 = new org.apache.http.impl.client.BasicCredentialsProvider;

        specialinvoke $r4.<org.apache.http.impl.client.BasicCredentialsProvider: void <init>()>();

        $r5 = virtualinvoke r0.<org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator: java.lang.String getUserName(java.net.URI)>(r1);

        $r6 = new org.apache.http.auth.AuthScope;

        specialinvoke $r6.<org.apache.http.auth.AuthScope: void <init>(org.apache.http.HttpHost)>($r2);

        $r7 = new org.apache.http.auth.UsernamePasswordCredentials;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r0.<org.apache.jena.atlas.web.auth.AbstractCredentialsAuthenticator: char[] getPassword(java.net.URI)>(r1);

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        specialinvoke $r7.<org.apache.http.auth.UsernamePasswordCredentials: void <init>(java.lang.String,java.lang.String)>($r5, $r8);

        interfaceinvoke $r4.<org.apache.http.client.CredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)>($r6, $r7);

        virtualinvoke r10.<org.apache.http.impl.client.AbstractHttpClient: void setCredentialsProvider(org.apache.http.client.CredentialsProvider)>($r4);

        return;
    }

    protected abstract boolean hasUserName(java.net.URI);

    protected abstract java.lang.String getUserName(java.net.URI);

    protected abstract boolean hasPassword(java.net.URI);

    protected abstract char[] getPassword(java.net.URI);
}
