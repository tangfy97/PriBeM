class com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 extends java.lang.Object implements java.util.ListIterator
{
    int index;
    final int val$start;
    final com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList this$0;

    void <init>(com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList, int)
    {
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r0;
        int i0, $i1;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

        r1 := @parameter0: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList;

        i0 := @parameter1: int;

        r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList this$0> = r1;

        r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int val$start> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int val$start>;

        r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index> = $i1;

        return;
    }

    public boolean hasNext()
    {
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r0;
        int $i0, $i1;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r1;
        boolean $z0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index>;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList this$0>;

        $i1 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: int access$400(com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList)>($r1);

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasPrevious()
    {
        int $i0;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r0;
        boolean $z0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int nextIndex()
    {
        int $i0;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index>;

        return $i0;
    }

    public int previousIndex()
    {
        int $i0, $i1;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public java.lang.Object next()
    {
        java.lang.IndexOutOfBoundsException $r3;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r0;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r4;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

     label1:
        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList this$0>;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index>;

        $r2 = virtualinvoke $r1.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: java.lang.Object get(int)>($i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label4:
        $i1 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index>;

        $i2 = $i1 + 1;

        r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index> = $i2;

        return $r2;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public java.lang.Object previous()
    {
        java.lang.IndexOutOfBoundsException $r3;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r0;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r4;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

     label1:
        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList this$0>;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index>;

        $i1 = $i0 - 1;

        $r2 = virtualinvoke $r1.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: java.lang.Object get(int)>($i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label4:
        $i2 = r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index>;

        $i3 = $i2 - 1;

        r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1: int index> = $i3;

        return $r2;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public void set(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r1;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void add(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r1;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1 r1;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
