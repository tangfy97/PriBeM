public abstract class org.springframework.beans.PropertyAccessorUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.beans.PropertyAccessorUtils r0;

        r0 := @this: org.springframework.beans.PropertyAccessorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getPropertyName(java.lang.String)
    {
        int $i0, $i2, $i4;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(91);

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        $i4 = (int) -1;

        if $i0 == $i4 goto label3;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label4;

     label3:
        $r1 = r0;

     label4:
        return $r1;
    }

    public static boolean isNestedOrIndexedProperty(java.lang.String)
    {
        int $i0, i2, $i3, $i4;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        i2 = 0;

        goto label5;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 == 46 goto label3;

        $i4 = (int) $c1;

        if $i4 != 91 goto label4;

     label3:
        return 1;

     label4:
        i2 = i2 + 1;

     label5:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 < $i0 goto label2;

        return 0;
    }

    public static int getFirstNestedPropertySeparatorIndex(java.lang.String)
    {
        int $i0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <org.springframework.beans.PropertyAccessorUtils: int getNestedPropertySeparatorIndex(java.lang.String,boolean)>(r0, 0);

        return $i0;
    }

    public static int getLastNestedPropertySeparatorIndex(java.lang.String)
    {
        int $i0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <org.springframework.beans.PropertyAccessorUtils: int getNestedPropertySeparatorIndex(java.lang.String,boolean)>(r0, 1);

        return $i0;
    }

    private static int getNestedPropertySeparatorIndex(java.lang.String, boolean)
    {
        char $c1;
        int $i0, $i2, i3, $i4, $i6, $i8;
        java.lang.String r0;
        boolean z0, z1, $z2;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if z0 == 0 goto label01;

        $i2 = $i0 - 1;

        goto label02;

     label01:
        $i2 = 0;

     label02:
        i3 = $i2;

        goto label10;

     label03:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        lookupswitch($i4)
        {
            case 46: goto label07;
            case 91: goto label04;
            case 93: goto label04;
            default: goto label08;
        };

     label04:
        if z1 == 0 goto label05;

        $z2 = 0;

        goto label06;

     label05:
        $z2 = 1;

     label06:
        z1 = $z2;

        goto label08;

     label07:
        if z1 != 0 goto label08;

        return i3;

     label08:
        if z0 == 0 goto label09;

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label10;

     label09:
        i3 = i3 + 1;

     label10:
        if z0 == 0 goto label11;

        if i3 >= 0 goto label03;

        goto label12;

     label11:
        if i3 < $i0 goto label03;

     label12:
        $i8 = (int) -1;

        return $i8;
    }

    public static boolean matchesProperty(java.lang.String, java.lang.String)
    {
        char $c3;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i9 = (int) $c3;

        if $i9 == 91 goto label3;

        return 0;

     label3:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = $i4 + 1;

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(93, $i5);

        $i7 = virtualinvoke r0.<java.lang.String: int length()>();

        $i8 = $i7 - 1;

        if $i6 != $i8 goto label4;

        return 1;

     label4:
        return 0;
    }

    public static java.lang.String canonicalPropertyName(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i14, $i16, $i18, $i20, $i22;
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        i10 = 0;

        goto label6;

     label2:
        $i0 = virtualinvoke $r7.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>("[", i10);

        $i14 = (int) -1;

        i10 = $i14;

        $i16 = (int) -1;

        if $i0 == $i16 goto label6;

        $r2 = "[";

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke $r7.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>("]", $i2);

        i11 = $i3;

        $i18 = (int) -1;

        if $i3 == $i18 goto label6;

        $r3 = "[";

        $i4 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i5 = $i0 + $i4;

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String substring(int,int)>($i5, $i3);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label3;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z3 != 0 goto label4;

     label3:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z1 == 0 goto label5;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z2 == 0 goto label5;

     label4:
        $i7 = $i0 + 1;

        $i6 = $i0 + 2;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i7, $i6);

        $i9 = $i3 - 2;

        $i8 = $i3 - 1;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i9, $i8);

        $i20 = (int) -2;

        i11 = $i3 + $i20;

     label5:
        $r6 = "]";

        $i12 = virtualinvoke $r6.<java.lang.String: int length()>();

        i10 = i11 + $i12;

     label6:
        $i22 = (int) -1;

        if i10 != $i22 goto label2;

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String[] canonicalPropertyNames(java.lang.String[])
    {
        int $i0, $i1, i2;
        java.lang.String[] r0, r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (java.lang.String)[$i0];

        i2 = 0;

        goto label3;

     label2:
        $r2 = r0[i2];

        $r3 = staticinvoke <org.springframework.beans.PropertyAccessorUtils: java.lang.String canonicalPropertyName(java.lang.String)>($r2);

        r1[i2] = $r3;

        i2 = i2 + 1;

     label3:
        $i1 = lengthof r0;

        if i2 < $i1 goto label2;

        return r1;
    }
}
