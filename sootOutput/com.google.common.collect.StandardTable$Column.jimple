class com.google.common.collect.StandardTable$Column extends com.google.common.collect.Maps$ImprovedAbstractMap
{
    final java.lang.Object columnKey;
    com.google.common.collect.StandardTable$Column$Values columnValues;
    com.google.common.collect.StandardTable$Column$KeySet keySet;
    final com.google.common.collect.StandardTable this$0;

    void <init>(com.google.common.collect.StandardTable, java.lang.Object)
    {
        com.google.common.collect.StandardTable r1;
        com.google.common.collect.StandardTable$Column r0;
        java.lang.Object r2, $r3;

        r0 := @this: com.google.common.collect.StandardTable$Column;

        r1 := @parameter0: com.google.common.collect.StandardTable;

        r2 := @parameter1: java.lang.Object;

        r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0> = r1;

        specialinvoke r0.<com.google.common.collect.Maps$ImprovedAbstractMap: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r0.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey> = $r3;

        return;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.StandardTable $r4;
        com.google.common.collect.StandardTable$Column r0;
        java.lang.Object r1, r2, $r3, $r5;

        r0 := @this: com.google.common.collect.StandardTable$Column;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r3 = r0.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $r5 = virtualinvoke $r4.<com.google.common.collect.StandardTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r3, r2);

        return $r5;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.StandardTable $r3;
        com.google.common.collect.StandardTable$Column r0;
        java.lang.Object r1, $r2, $r4;

        r0 := @this: com.google.common.collect.StandardTable$Column;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r2 = r0.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.StandardTable: java.lang.Object get(java.lang.Object,java.lang.Object)>(r1, $r2);

        return $r4;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.StandardTable $r3;
        com.google.common.collect.StandardTable$Column r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r2 = r0.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $z0 = virtualinvoke $r3.<com.google.common.collect.StandardTable: boolean contains(java.lang.Object,java.lang.Object)>(r1, $r2);

        return $z0;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.common.collect.StandardTable $r3;
        com.google.common.collect.StandardTable$Column r0;
        java.lang.Object r1, $r2, $r4;

        r0 := @this: com.google.common.collect.StandardTable$Column;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r2 = r0.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.StandardTable: java.lang.Object remove(java.lang.Object,java.lang.Object)>(r1, $r2);

        return $r4;
    }

    public java.util.Set createEntrySet()
    {
        com.google.common.collect.StandardTable$Column r1;
        com.google.common.collect.StandardTable$Column$EntrySet $r0;

        r1 := @this: com.google.common.collect.StandardTable$Column;

        $r0 = new com.google.common.collect.StandardTable$Column$EntrySet;

        specialinvoke $r0.<com.google.common.collect.StandardTable$Column$EntrySet: void <init>(com.google.common.collect.StandardTable$Column)>(r1);

        return $r0;
    }

    public java.util.Collection values()
    {
        com.google.common.collect.StandardTable$Column r0;
        com.google.common.collect.StandardTable$Column$Values r1, $r2;

        r0 := @this: com.google.common.collect.StandardTable$Column;

        r1 = r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable$Column$Values columnValues>;

        if r1 != null goto label1;

        $r2 = new com.google.common.collect.StandardTable$Column$Values;

        specialinvoke $r2.<com.google.common.collect.StandardTable$Column$Values: void <init>(com.google.common.collect.StandardTable$Column)>(r0);

        r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable$Column$Values columnValues> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    boolean removePredicate(com.google.common.base.Predicate)
    {
        com.google.common.collect.ImmutableEntry $r12;
        com.google.common.collect.StandardTable$Column r0;
        java.util.Map $r2, r8;
        boolean $z0, $z1, $z2, z3;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.google.common.base.Predicate r11;
        com.google.common.collect.StandardTable $r1;
        java.lang.Object $r5, $r7, $r9, $r10, $r13, $r14;

        r0 := @this: com.google.common.collect.StandardTable$Column;

        r11 := @parameter0: com.google.common.base.Predicate;

        z3 = 0;

        $r1 = r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r2 = $r1.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.Map) $r7;

        $r9 = r0.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $r10 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        if $r10 == null goto label2;

        $r12 = new com.google.common.collect.ImmutableEntry;

        $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        specialinvoke $r12.<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r13, $r10);

        $z1 = interfaceinvoke r11.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r12);

        if $z1 == 0 goto label2;

        $r14 = r0.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r14);

        z3 = 1;

        $z2 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>();

        if $z2 == 0 goto label2;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return z3;
    }

    public java.util.Set keySet()
    {
        com.google.common.collect.StandardTable$Column r0;
        com.google.common.collect.StandardTable$Column$KeySet r1, $r2;

        r0 := @this: com.google.common.collect.StandardTable$Column;

        r1 = r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable$Column$KeySet keySet>;

        if r1 != null goto label1;

        $r2 = new com.google.common.collect.StandardTable$Column$KeySet;

        specialinvoke $r2.<com.google.common.collect.StandardTable$Column$KeySet: void <init>(com.google.common.collect.StandardTable$Column)>(r0);

        r0.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable$Column$KeySet keySet> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }
}
