public interface  org.eclipse.jetty.server.ssl.SslConnector extends java.lang.Object implements org.eclipse.jetty.server.Connector
{
    public static final java.lang.String DEFAULT_KEYSTORE_ALGORITHM;
    public static final java.lang.String DEFAULT_TRUSTSTORE_ALGORITHM;
    public static final java.lang.String DEFAULT_KEYSTORE;
    public static final java.lang.String KEYPASSWORD_PROPERTY;
    public static final java.lang.String PASSWORD_PROPERTY;

    public abstract org.eclipse.jetty.util.ssl.SslContextFactory getSslContextFactory();

    public abstract java.lang.String[] getExcludeCipherSuites();

    public abstract void setExcludeCipherSuites(java.lang.String[]);

    public abstract java.lang.String[] getIncludeCipherSuites();

    public abstract void setIncludeCipherSuites(java.lang.String[]);

    public abstract void setPassword(java.lang.String);

    public abstract void setTrustPassword(java.lang.String);

    public abstract void setKeyPassword(java.lang.String);

    public abstract java.lang.String getProtocol();

    public abstract void setProtocol(java.lang.String);

    public abstract void setKeystore(java.lang.String);

    public abstract java.lang.String getKeystore();

    public abstract java.lang.String getKeystoreType();

    public abstract boolean getNeedClientAuth();

    public abstract boolean getWantClientAuth();

    public abstract void setNeedClientAuth(boolean);

    public abstract void setWantClientAuth(boolean);

    public abstract void setKeystoreType(java.lang.String);

    public abstract java.lang.String getProvider();

    public abstract java.lang.String getSecureRandomAlgorithm();

    public abstract java.lang.String getSslKeyManagerFactoryAlgorithm();

    public abstract java.lang.String getSslTrustManagerFactoryAlgorithm();

    public abstract java.lang.String getTruststore();

    public abstract java.lang.String getTruststoreType();

    public abstract void setProvider(java.lang.String);

    public abstract void setSecureRandomAlgorithm(java.lang.String);

    public abstract void setSslKeyManagerFactoryAlgorithm(java.lang.String);

    public abstract void setSslTrustManagerFactoryAlgorithm(java.lang.String);

    public abstract void setTruststore(java.lang.String);

    public abstract void setTruststoreType(java.lang.String);

    public abstract void setSslContext(javax.net.ssl.SSLContext);

    public abstract javax.net.ssl.SSLContext getSslContext();

    public abstract boolean isAllowRenegotiate();

    public abstract void setAllowRenegotiate(boolean);

    static void <clinit>()
    {
        java.lang.StringBuilder $r2, $r4, $r6, $r7;
        java.lang.String $r0, $r1, $r3, $r5, $r8, $r9, $r10;

        <org.eclipse.jetty.server.ssl.SslConnector: java.lang.String PASSWORD_PROPERTY> = "org.eclipse.jetty.ssl.password";

        <org.eclipse.jetty.server.ssl.SslConnector: java.lang.String KEYPASSWORD_PROPERTY> = "org.eclipse.jetty.ssl.keypassword";

        $r0 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("ssl.KeyManagerFactory.algorithm");

        if $r0 != null goto label1;

        $r9 = "SunX509";

        goto label2;

     label1:
        $r9 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("ssl.KeyManagerFactory.algorithm");

     label2:
        <org.eclipse.jetty.server.ssl.SslConnector: java.lang.String DEFAULT_KEYSTORE_ALGORITHM> = $r9;

        $r1 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("ssl.TrustManagerFactory.algorithm");

        if $r1 != null goto label3;

        $r10 = "SunX509";

        goto label4;

     label3:
        $r10 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("ssl.TrustManagerFactory.algorithm");

     label4:
        <org.eclipse.jetty.server.ssl.SslConnector: java.lang.String DEFAULT_TRUSTSTORE_ALGORITHM> = $r10;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".keystore");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.eclipse.jetty.server.ssl.SslConnector: java.lang.String DEFAULT_KEYSTORE> = $r8;

        return;
    }
}
