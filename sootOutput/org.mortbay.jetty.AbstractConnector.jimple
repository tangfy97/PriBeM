public abstract class org.mortbay.jetty.AbstractConnector extends org.mortbay.jetty.AbstractBuffers implements org.mortbay.jetty.Connector
{
    private java.lang.String _name;
    private org.mortbay.jetty.Server _server;
    private org.mortbay.thread.ThreadPool _threadPool;
    private java.lang.String _host;
    private int _port;
    private java.lang.String _integralScheme;
    private int _integralPort;
    private java.lang.String _confidentialScheme;
    private int _confidentialPort;
    private int _acceptQueueSize;
    private int _acceptors;
    private int _acceptorPriorityOffset;
    private boolean _useDNS;
    private boolean _forwarded;
    private java.lang.String _hostHeader;
    private java.lang.String _forwardedHostHeader;
    private java.lang.String _forwardedServerHeader;
    private java.lang.String _forwardedForHeader;
    private boolean _reuseAddress;
    protected int _maxIdleTime;
    protected int _lowResourceMaxIdleTime;
    protected int _soLingerTime;
    private transient java.lang.Thread[] _acceptorThread;
    java.lang.Object _statsLock;
    transient long _statsStartedAt;
    transient int _requests;
    transient int _connections;
    transient int _connectionsOpen;
    transient int _connectionsOpenMin;
    transient int _connectionsOpenMax;
    transient long _connectionsDurationMin;
    transient long _connectionsDurationMax;
    transient long _connectionsDurationTotal;
    transient int _connectionsRequestsMin;
    transient int _connectionsRequestsMax;

    public void <init>()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i1, $i3;
        java.lang.Object $r2;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        specialinvoke r0.<org.mortbay.jetty.AbstractBuffers: void <init>()>();

        r0.<org.mortbay.jetty.AbstractConnector: int _port> = 0;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _integralScheme> = "https";

        r0.<org.mortbay.jetty.AbstractConnector: int _integralPort> = 0;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _confidentialScheme> = "https";

        r0.<org.mortbay.jetty.AbstractConnector: int _confidentialPort> = 0;

        r0.<org.mortbay.jetty.AbstractConnector: int _acceptQueueSize> = 0;

        r0.<org.mortbay.jetty.AbstractConnector: int _acceptors> = 1;

        r0.<org.mortbay.jetty.AbstractConnector: int _acceptorPriorityOffset> = 0;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedHostHeader> = "X-Forwarded-Host";

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedServerHeader> = "X-Forwarded-Server";

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedForHeader> = "X-Forwarded-For";

        r0.<org.mortbay.jetty.AbstractConnector: boolean _reuseAddress> = 1;

        r0.<org.mortbay.jetty.AbstractConnector: int _maxIdleTime> = 200000;

        $i1 = (int) -1;

        r0.<org.mortbay.jetty.AbstractConnector: int _lowResourceMaxIdleTime> = $i1;

        $i3 = (int) -1;

        r0.<org.mortbay.jetty.AbstractConnector: int _soLingerTime> = $i3;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.Object _statsLock> = $r2;

        r0.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt> = -1L;

        return;
    }

    public org.mortbay.jetty.Server getServer()
    {
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.jetty.Server $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.jetty.Server _server>;

        return $r1;
    }

    public void setServer(org.mortbay.jetty.Server)
    {
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.jetty.Server r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: org.mortbay.jetty.Server;

        r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.jetty.Server _server> = r1;

        return;
    }

    public org.mortbay.thread.ThreadPool getThreadPool()
    {
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.thread.ThreadPool $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        return $r1;
    }

    public void setThreadPool(org.mortbay.thread.ThreadPool)
    {
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.thread.ThreadPool r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: org.mortbay.thread.ThreadPool;

        r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool> = r1;

        return;
    }

    public void setHost(java.lang.String)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _host> = r1;

        return;
    }

    public java.lang.String getHost()
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _host>;

        return $r1;
    }

    public void setPort(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _port> = i0;

        return;
    }

    public int getPort()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _port>;

        return $i0;
    }

    public int getMaxIdleTime()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _maxIdleTime>;

        return $i0;
    }

    public void setMaxIdleTime(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _maxIdleTime> = i0;

        return;
    }

    public int getLowResourceMaxIdleTime()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _lowResourceMaxIdleTime>;

        return $i0;
    }

    public void setLowResourceMaxIdleTime(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _lowResourceMaxIdleTime> = i0;

        return;
    }

    public int getSoLingerTime()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _soLingerTime>;

        return $i0;
    }

    public int getAcceptQueueSize()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _acceptQueueSize>;

        return $i0;
    }

    public void setAcceptQueueSize(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _acceptQueueSize> = i0;

        return;
    }

    public int getAcceptors()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _acceptors>;

        return $i0;
    }

    public void setAcceptors(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _acceptors> = i0;

        return;
    }

    public void setSoLingerTime(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _soLingerTime> = i0;

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        java.lang.Throwable $r14;
        java.lang.IllegalStateException $r13;
        org.mortbay.jetty.Server $r1, $r3, $r11;
        org.mortbay.jetty.AbstractConnector$Acceptor $r6;
        int $i0, i1, $i2;
        boolean $z0, $z1;
        java.lang.Thread[] $r15, $r16;
        org.mortbay.component.LifeCycle $r10;
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.thread.ThreadPool $r2, $r4, $r5, $r7, $r8, $r9, $r12;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.jetty.Server _server>;

        if $r1 != null goto label01;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No server");

        throw $r13;

     label01:
        virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: void open()>();

        specialinvoke r0.<org.mortbay.jetty.AbstractBuffers: void doStart()>();

        $r2 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        if $r2 != null goto label02;

        $r11 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.jetty.Server _server>;

        $r12 = virtualinvoke $r11.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool getThreadPool()>();

        r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool> = $r12;

     label02:
        $r4 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        $r3 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.jetty.Server _server>;

        $r5 = virtualinvoke $r3.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool getThreadPool()>();

        if $r4 == $r5 goto label03;

        $r8 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        $z1 = $r8 instanceof org.mortbay.component.LifeCycle;

        if $z1 == 0 goto label03;

        $r9 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        $r10 = (org.mortbay.component.LifeCycle) $r9;

        interfaceinvoke $r10.<org.mortbay.component.LifeCycle: void start()>();

     label03:
        entermonitor r0;

     label04:
        $i0 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: int getAcceptors()>();

        $r15 = newarray (java.lang.Thread)[$i0];

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.Thread[] _acceptorThread> = $r15;

        i1 = 0;

     label05:
        $r16 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.Thread[] _acceptorThread>;

        $i2 = lengthof $r16;

        if i1 >= $i2 goto label07;

        $r7 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        $r6 = new org.mortbay.jetty.AbstractConnector$Acceptor;

        specialinvoke $r6.<org.mortbay.jetty.AbstractConnector$Acceptor: void <init>(org.mortbay.jetty.AbstractConnector,int)>(r0, i1);

        $z0 = interfaceinvoke $r7.<org.mortbay.thread.ThreadPool: boolean dispatch(java.lang.Runnable)>($r6);

        if $z0 != 0 goto label06;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String,java.lang.Object)>("insufficient maxThreads configured for {}", r0);

        goto label07;

     label06:
        i1 = i1 + 1;

        goto label05;

     label07:
        exitmonitor r0;

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

        exitmonitor r0;

     label10:
        throw $r14;

     label11:
        staticinvoke <org.mortbay.log.Log: void info(java.lang.String,java.lang.Object)>("Started {}", r0);

        return;

        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected void doStop() throws java.lang.Exception
    {
        java.lang.Throwable $r7;
        java.lang.Thread[] $r9;
        java.io.IOException $r8;
        org.mortbay.jetty.Server $r1;
        org.mortbay.component.LifeCycle $r6;
        java.lang.Thread r10;
        org.mortbay.jetty.AbstractConnector r0;
        int $i0, i1;
        org.mortbay.thread.ThreadPool $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        staticinvoke <org.mortbay.log.Log: void info(java.lang.String,java.lang.Object)>("Stopped {}", r0);

     label01:
        virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: void close()>();

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r8);

     label04:
        $r2 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.jetty.Server _server>;

        $r3 = virtualinvoke $r1.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool getThreadPool()>();

        if $r2 != $r3 goto label05;

        r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool> = null;

        goto label06;

     label05:
        $r4 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        $z0 = $r4 instanceof org.mortbay.component.LifeCycle;

        if $z0 == 0 goto label06;

        $r5 = r0.<org.mortbay.jetty.AbstractConnector: org.mortbay.thread.ThreadPool _threadPool>;

        $r6 = (org.mortbay.component.LifeCycle) $r5;

        interfaceinvoke $r6.<org.mortbay.component.LifeCycle: void stop()>();

     label06:
        specialinvoke r0.<org.mortbay.jetty.AbstractBuffers: void doStop()>();

        entermonitor r0;

     label07:
        $r9 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.Thread[] _acceptorThread>;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.Thread[] _acceptorThread> = null;

        exitmonitor r0;

     label08:
        goto label11;

     label09:
        $r7 := @caughtexception;

        exitmonitor r0;

     label10:
        throw $r7;

     label11:
        if $r9 == null goto label14;

        i1 = 0;

     label12:
        $i0 = lengthof $r9;

        if i1 >= $i0 goto label14;

        r10 = $r9[i1];

        if r10 == null goto label13;

        virtualinvoke r10.<java.lang.Thread: void interrupt()>();

     label13:
        i1 = i1 + 1;

        goto label12;

     label14:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void join() throws java.lang.InterruptedException
    {
        java.lang.Thread $r2, $r3;
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.Thread[] r1;
        int $i0, i1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.Thread[] _acceptorThread>;

        if r1 == null goto label3;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r2 = r1[i1];

        if $r2 == null goto label2;

        $r3 = r1[i1];

        virtualinvoke $r3.<java.lang.Thread: void join()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected void configure(java.net.Socket) throws java.io.IOException
    {
        java.net.Socket r0;
        java.lang.Exception $r2;
        org.mortbay.jetty.AbstractConnector r1;
        int $i0, $i1, $i2, $i3, $i4;

        r1 := @this: org.mortbay.jetty.AbstractConnector;

        r0 := @parameter0: java.net.Socket;

     label1:
        virtualinvoke r0.<java.net.Socket: void setTcpNoDelay(boolean)>(1);

        $i0 = r1.<org.mortbay.jetty.AbstractConnector: int _maxIdleTime>;

        if $i0 < 0 goto label2;

        $i4 = r1.<org.mortbay.jetty.AbstractConnector: int _maxIdleTime>;

        virtualinvoke r0.<java.net.Socket: void setSoTimeout(int)>($i4);

     label2:
        $i1 = r1.<org.mortbay.jetty.AbstractConnector: int _soLingerTime>;

        if $i1 < 0 goto label3;

        $i2 = r1.<org.mortbay.jetty.AbstractConnector: int _soLingerTime>;

        $i3 = $i2 / 1000;

        virtualinvoke r0.<java.net.Socket: void setSoLinger(boolean,int)>(1, $i3);

        goto label4;

     label3:
        virtualinvoke r0.<java.net.Socket: void setSoLinger(boolean,int)>(0, 0);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r2);

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void customize(org.mortbay.io.EndPoint, org.mortbay.jetty.Request) throws java.io.IOException
    {
        org.mortbay.io.EndPoint r1;
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.jetty.Request r2;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: org.mortbay.io.EndPoint;

        r2 := @parameter1: org.mortbay.jetty.Request;

        $z0 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: boolean isForwarded()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: void checkForwardedHeaders(org.mortbay.io.EndPoint,org.mortbay.jetty.Request)>(r1, r2);

     label1:
        return;
    }

    protected void checkForwardedHeaders(org.mortbay.io.EndPoint, org.mortbay.jetty.Request) throws java.io.IOException
    {
        org.mortbay.jetty.HttpFields $r2;
        org.mortbay.jetty.Request r0;
        java.net.InetAddress r19;
        int $i1, $i3;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r20;
        boolean $z0;
        org.mortbay.io.Buffer $r14, $r16;
        org.mortbay.jetty.HttpConnection $r1;
        java.net.UnknownHostException $r17;
        org.mortbay.io.EndPoint r18;
        org.mortbay.jetty.AbstractConnector r3;

        r3 := @this: org.mortbay.jetty.AbstractConnector;

        r18 := @parameter0: org.mortbay.io.EndPoint;

        r0 := @parameter1: org.mortbay.jetty.Request;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Request: org.mortbay.jetty.HttpConnection getConnection()>();

        $r2 = virtualinvoke $r1.<org.mortbay.jetty.HttpConnection: org.mortbay.jetty.HttpFields getRequestFields()>();

        $r4 = virtualinvoke r3.<org.mortbay.jetty.AbstractConnector: java.lang.String getForwardedHostHeader()>();

        $r5 = virtualinvoke $r2.<org.mortbay.jetty.HttpFields: java.lang.String getStringField(java.lang.String)>($r4);

        $r6 = virtualinvoke r3.<org.mortbay.jetty.AbstractConnector: java.lang.String getLeftMostValue(java.lang.String)>($r5);

        $r7 = virtualinvoke r3.<org.mortbay.jetty.AbstractConnector: java.lang.String getForwardedServerHeader()>();

        $r8 = virtualinvoke $r2.<org.mortbay.jetty.HttpFields: java.lang.String getStringField(java.lang.String)>($r7);

        $r9 = virtualinvoke r3.<org.mortbay.jetty.AbstractConnector: java.lang.String getLeftMostValue(java.lang.String)>($r8);

        $r10 = virtualinvoke r3.<org.mortbay.jetty.AbstractConnector: java.lang.String getForwardedForHeader()>();

        $r11 = virtualinvoke $r2.<org.mortbay.jetty.HttpFields: java.lang.String getStringField(java.lang.String)>($r10);

        $r12 = virtualinvoke r3.<org.mortbay.jetty.AbstractConnector: java.lang.String getLeftMostValue(java.lang.String)>($r11);

        $r13 = r3.<org.mortbay.jetty.AbstractConnector: java.lang.String _hostHeader>;

        if $r13 == null goto label01;

        $r16 = <org.mortbay.jetty.HttpHeaders: org.mortbay.io.Buffer HOST_BUFFER>;

        $r15 = r3.<org.mortbay.jetty.AbstractConnector: java.lang.String _hostHeader>;

        virtualinvoke $r2.<org.mortbay.jetty.HttpFields: void put(org.mortbay.io.Buffer,java.lang.String)>($r16, $r15);

        virtualinvoke r0.<org.mortbay.jetty.Request: void setServerName(java.lang.String)>(null);

        $i1 = (int) -1;

        virtualinvoke r0.<org.mortbay.jetty.Request: void setServerPort(int)>($i1);

        virtualinvoke r0.<org.mortbay.jetty.Request: java.lang.String getServerName()>();

        goto label03;

     label01:
        if $r6 == null goto label02;

        $r14 = <org.mortbay.jetty.HttpHeaders: org.mortbay.io.Buffer HOST_BUFFER>;

        virtualinvoke $r2.<org.mortbay.jetty.HttpFields: void put(org.mortbay.io.Buffer,java.lang.String)>($r14, $r6);

        virtualinvoke r0.<org.mortbay.jetty.Request: void setServerName(java.lang.String)>(null);

        $i3 = (int) -1;

        virtualinvoke r0.<org.mortbay.jetty.Request: void setServerPort(int)>($i3);

        virtualinvoke r0.<org.mortbay.jetty.Request: java.lang.String getServerName()>();

        goto label03;

     label02:
        if $r9 == null goto label03;

        virtualinvoke r0.<org.mortbay.jetty.Request: void setServerName(java.lang.String)>($r9);

     label03:
        if $r12 == null goto label10;

        virtualinvoke r0.<org.mortbay.jetty.Request: void setRemoteAddr(java.lang.String)>($r12);

        r19 = null;

        $z0 = r3.<org.mortbay.jetty.AbstractConnector: boolean _useDNS>;

        if $z0 == 0 goto label07;

     label04:
        r19 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r12);

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r17);

     label07:
        if r19 != null goto label08;

        $r20 = $r12;

        goto label09;

     label08:
        $r20 = virtualinvoke r19.<java.net.InetAddress: java.lang.String getHostName()>();

     label09:
        virtualinvoke r0.<org.mortbay.jetty.Request: void setRemoteHost(java.lang.String)>($r20);

     label10:
        return;

        catch java.net.UnknownHostException from label04 to label05 with label06;
    }

    protected java.lang.String getLeftMostValue(java.lang.String)
    {
        int $i0, $i2;
        org.mortbay.jetty.AbstractConnector r2;
        java.lang.String r0, $r1;

        r2 := @this: org.mortbay.jetty.AbstractConnector;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(44);

        $i2 = (int) -1;

        if $i0 != $i2 goto label2;

        return r0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;
    }

    public void persist(org.mortbay.io.EndPoint) throws java.io.IOException
    {
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.io.EndPoint r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: org.mortbay.io.EndPoint;

        return;
    }

    public int getConfidentialPort()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _confidentialPort>;

        return $i0;
    }

    public java.lang.String getConfidentialScheme()
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _confidentialScheme>;

        return $r1;
    }

    public boolean isIntegral(org.mortbay.jetty.Request)
    {
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.jetty.Request r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: org.mortbay.jetty.Request;

        return 0;
    }

    public int getIntegralPort()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _integralPort>;

        return $i0;
    }

    public java.lang.String getIntegralScheme()
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _integralScheme>;

        return $r1;
    }

    public boolean isConfidential(org.mortbay.jetty.Request)
    {
        org.mortbay.jetty.AbstractConnector r0;
        org.mortbay.jetty.Request r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: org.mortbay.jetty.Request;

        return 0;
    }

    public void setConfidentialPort(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _confidentialPort> = i0;

        return;
    }

    public void setConfidentialScheme(java.lang.String)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _confidentialScheme> = r1;

        return;
    }

    public void setIntegralPort(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _integralPort> = i0;

        return;
    }

    public void setIntegralScheme(java.lang.String)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _integralScheme> = r1;

        return;
    }

    public org.mortbay.util.ajax.Continuation newContinuation()
    {
        org.mortbay.jetty.AbstractConnector r1;
        org.mortbay.util.ajax.WaitingContinuation $r0;

        r1 := @this: org.mortbay.jetty.AbstractConnector;

        $r0 = new org.mortbay.util.ajax.WaitingContinuation;

        specialinvoke $r0.<org.mortbay.util.ajax.WaitingContinuation: void <init>()>();

        return $r0;
    }

    protected abstract void accept(int) throws java.io.IOException, java.lang.InterruptedException;

    public void stopAccept(int) throws java.lang.Exception
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        return;
    }

    public boolean getResolveNames()
    {
        org.mortbay.jetty.AbstractConnector r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $z0 = r0.<org.mortbay.jetty.AbstractConnector: boolean _useDNS>;

        return $z0;
    }

    public void setResolveNames(boolean)
    {
        org.mortbay.jetty.AbstractConnector r0;
        boolean z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        z0 := @parameter0: boolean;

        r0.<org.mortbay.jetty.AbstractConnector: boolean _useDNS> = z0;

        return;
    }

    public boolean isForwarded()
    {
        org.mortbay.jetty.AbstractConnector r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $z0 = r0.<org.mortbay.jetty.AbstractConnector: boolean _forwarded>;

        return $z0;
    }

    public void setForwarded(boolean)
    {
        java.lang.StringBuffer $r1, $r2, $r3;
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String $r4;
        boolean z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is forwarded");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r4);

     label1:
        r0.<org.mortbay.jetty.AbstractConnector: boolean _forwarded> = z0;

        return;
    }

    public java.lang.String getHostHeader()
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _hostHeader>;

        return $r1;
    }

    public void setHostHeader(java.lang.String)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _hostHeader> = r1;

        return;
    }

    public java.lang.String getForwardedHostHeader()
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedHostHeader>;

        return $r1;
    }

    public void setForwardedHostHeader(java.lang.String)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedHostHeader> = r1;

        return;
    }

    public java.lang.String getForwardedServerHeader()
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedServerHeader>;

        return $r1;
    }

    public void setForwardedServerHeader(java.lang.String)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedServerHeader> = r1;

        return;
    }

    public java.lang.String getForwardedForHeader()
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedForHeader>;

        return $r1;
    }

    public void setForwardedForHeader(java.lang.String)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _forwardedForHeader> = r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r3, $r4, $r5, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r6, $r10, r11, $r12;
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.Class $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        r11 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 <= 0 goto label1;

        $i2 = $i0 + 1;

        r11 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i2);

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r6 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: java.lang.String getHost()>();

        if $r6 != null goto label2;

        $r12 = "0.0.0.0";

        goto label3;

     label2:
        $r12 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: java.lang.String getHost()>();

     label3:
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i1 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: int getLocalPort()>();

        if $i1 > 0 goto label4;

        $i3 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: int getPort()>();

        goto label5;

     label4:
        $i3 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: int getLocalPort()>();

     label5:
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String getName()
    {
        java.lang.StringBuffer $r2, $r4, $r5, $r6;
        org.mortbay.jetty.AbstractConnector r0;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r7, $r8, $r9;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _name>;

        if $r1 != null goto label5;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: java.lang.String getHost()>();

        if $r3 != null goto label1;

        $r8 = "0.0.0.0";

        goto label2;

     label1:
        $r8 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: java.lang.String getHost()>();

     label2:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i0 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: int getLocalPort()>();

        if $i0 > 0 goto label3;

        $i1 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: int getPort()>();

        goto label4;

     label3:
        $i1 = virtualinvoke r0.<org.mortbay.jetty.AbstractConnector: int getLocalPort()>();

     label4:
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _name> = $r7;

     label5:
        $r9 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _name>;

        return $r9;
    }

    public void setName(java.lang.String)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.String r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.AbstractConnector: java.lang.String _name> = r1;

        return;
    }

    public int getRequests()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _requests>;

        return $i0;
    }

    public long getConnectionsDurationMin()
    {
        org.mortbay.jetty.AbstractConnector r0;
        long $l0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $l0 = r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMin>;

        return $l0;
    }

    public long getConnectionsDurationTotal()
    {
        org.mortbay.jetty.AbstractConnector r0;
        long $l0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $l0 = r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationTotal>;

        return $l0;
    }

    public int getConnectionsOpenMin()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpenMin>;

        return $i0;
    }

    public int getConnectionsRequestsMin()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMin>;

        return $i0;
    }

    public int getConnections()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _connections>;

        return $i0;
    }

    public int getConnectionsOpen()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        return $i0;
    }

    public int getConnectionsOpenMax()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpenMax>;

        return $i0;
    }

    public long getConnectionsDurationAve()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0, $i1;
        long $l2, $l3, $l4;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _connections>;

        if $i0 != 0 goto label1;

        $l4 = 0L;

        goto label2;

     label1:
        $l3 = r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationTotal>;

        $i1 = r0.<org.mortbay.jetty.AbstractConnector: int _connections>;

        $l2 = (long) $i1;

        $l4 = $l3 / $l2;

     label2:
        return $l4;
    }

    public long getConnectionsDurationMax()
    {
        org.mortbay.jetty.AbstractConnector r0;
        long $l0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $l0 = r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMax>;

        return $l0;
    }

    public int getConnectionsRequestsAve()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _connections>;

        if $i0 != 0 goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i2 = r0.<org.mortbay.jetty.AbstractConnector: int _requests>;

        $i1 = r0.<org.mortbay.jetty.AbstractConnector: int _connections>;

        $i3 = $i2 / $i1;

     label2:
        return $i3;
    }

    public int getConnectionsRequestsMax()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMax>;

        return $i0;
    }

    public void statsReset()
    {
        byte $b1;
        org.mortbay.jetty.AbstractConnector r0;
        int $i2, $i3;
        long $l0, $l4;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $l0 = r0.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l4 = -1L;

        goto label2;

     label1:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        r0.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt> = $l4;

        r0.<org.mortbay.jetty.AbstractConnector: int _connections> = 0;

        $i2 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpenMin> = $i2;

        $i3 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpenMax> = $i3;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen> = 0;

        r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMin> = 0L;

        r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMax> = 0L;

        r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationTotal> = 0L;

        r0.<org.mortbay.jetty.AbstractConnector: int _requests> = 0;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMin> = 0;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMax> = 0;

        return;
    }

    public void setStatsOn(boolean)
    {
        long $l0, $l2;
        byte $b1;
        java.lang.StringBuffer $r0, $r1, $r2, $r3, $r5;
        org.mortbay.jetty.AbstractConnector r4;
        java.lang.String $r6;
        boolean z0;

        r4 := @this: org.mortbay.jetty.AbstractConnector;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $l0 = r4.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        return;

     label1:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Statistics on = ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r6);

        virtualinvoke r4.<org.mortbay.jetty.AbstractConnector: void statsReset()>();

        if z0 == 0 goto label2;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        goto label3;

     label2:
        $l2 = -1L;

     label3:
        r4.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt> = $l2;

        return;
    }

    public boolean getStatsOn()
    {
        byte $b1;
        org.mortbay.jetty.AbstractConnector r0;
        long $l0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $l0 = r0.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getStatsOnMs()
    {
        byte $b1;
        org.mortbay.jetty.AbstractConnector r0;
        long $l0, $l2, $l3, $l4;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $l0 = r0.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r0.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt>;

        $l4 = $l2 - $l3;

        goto label2;

     label1:
        $l4 = 0L;

     label2:
        return $l4;
    }

    protected void connectionOpened(org.mortbay.jetty.HttpConnection)
    {
        java.lang.Throwable $r2;
        org.mortbay.jetty.HttpConnection r3;
        long $l0;
        byte $b1;
        org.mortbay.jetty.AbstractConnector r0;
        int $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r1;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r3 := @parameter0: org.mortbay.jetty.HttpConnection;

        $l0 = r0.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.Object _statsLock>;

        entermonitor $r1;

     label2:
        $i2 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        $i3 = $i2 + 1;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen> = $i3;

        $i5 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        $i4 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpenMax>;

        if $i5 <= $i4 goto label3;

        $i6 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpenMax> = $i6;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r2;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void connectionClosed(org.mortbay.jetty.HttpConnection)
    {
        byte $b1, $b18, $b22, $b25;
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.Throwable $r3;
        long $l0, $l2, $l3, l4, $l12, $l13, $l17, $l21, $l24;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i19, $i20, $i23, $i26, $i27, $i28, $i29;
        org.mortbay.jetty.HttpConnection r1;
        java.lang.Object $r2;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        r1 := @parameter0: org.mortbay.jetty.HttpConnection;

        $l0 = r0.<org.mortbay.jetty.AbstractConnector: long _statsStartedAt>;

        $b1 = $l0 cmp 0L;

        $i27 = (int) $b1;

        if $i27 < 0 goto label13;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = virtualinvoke r1.<org.mortbay.jetty.HttpConnection: long getTimeStamp()>();

        l4 = $l2 - $l3;

        $i5 = virtualinvoke r1.<org.mortbay.jetty.HttpConnection: int getRequests()>();

        $r2 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.Object _statsLock>;

        entermonitor $r2;

     label01:
        $i6 = r0.<org.mortbay.jetty.AbstractConnector: int _requests>;

        $i7 = $i6 + $i5;

        r0.<org.mortbay.jetty.AbstractConnector: int _requests> = $i7;

        $i8 = r0.<org.mortbay.jetty.AbstractConnector: int _connections>;

        $i9 = $i8 + 1;

        r0.<org.mortbay.jetty.AbstractConnector: int _connections> = $i9;

        $i10 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        $i11 = $i10 - 1;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen> = $i11;

        $l12 = r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationTotal>;

        $l13 = $l12 + l4;

        r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationTotal> = $l13;

        $i14 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        if $i14 >= 0 goto label02;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen> = 0;

     label02:
        $i16 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        $i15 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpenMin>;

        if $i16 >= $i15 goto label03;

        $i23 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpen>;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsOpenMin> = $i23;

     label03:
        $l17 = r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMin>;

        $b18 = $l17 cmp 0L;

        if $b18 == 0 goto label04;

        $l21 = r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMin>;

        $b22 = l4 cmp $l21;

        $i28 = (int) $b22;

        if $i28 >= 0 goto label05;

     label04:
        r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMin> = l4;

     label05:
        $l24 = r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMax>;

        $b25 = l4 cmp $l24;

        $i29 = (int) $b25;

        if $i29 <= 0 goto label06;

        r0.<org.mortbay.jetty.AbstractConnector: long _connectionsDurationMax> = l4;

     label06:
        $i19 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMin>;

        if $i19 == 0 goto label07;

        $i20 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMin>;

        if $i5 >= $i20 goto label08;

     label07:
        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMin> = $i5;

     label08:
        $i26 = r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMax>;

        if $i5 <= $i26 goto label09;

        r0.<org.mortbay.jetty.AbstractConnector: int _connectionsRequestsMax> = $i5;

     label09:
        exitmonitor $r2;

     label10:
        goto label13;

     label11:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label12:
        throw $r3;

     label13:
        virtualinvoke r1.<org.mortbay.jetty.HttpConnection: void destroy()>();

        return;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public int getAcceptorPriorityOffset()
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _acceptorPriorityOffset>;

        return $i0;
    }

    public void setAcceptorPriorityOffset(int)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int i0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.AbstractConnector: int _acceptorPriorityOffset> = i0;

        return;
    }

    public boolean getReuseAddress()
    {
        org.mortbay.jetty.AbstractConnector r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        $z0 = r0.<org.mortbay.jetty.AbstractConnector: boolean _reuseAddress>;

        return $z0;
    }

    public void setReuseAddress(boolean)
    {
        org.mortbay.jetty.AbstractConnector r0;
        boolean z0;

        r0 := @this: org.mortbay.jetty.AbstractConnector;

        z0 := @parameter0: boolean;

        r0.<org.mortbay.jetty.AbstractConnector: boolean _reuseAddress> = z0;

        return;
    }

    static java.lang.Thread[] access$000(org.mortbay.jetty.AbstractConnector)
    {
        org.mortbay.jetty.AbstractConnector r0;
        java.lang.Thread[] $r1;

        r0 := @parameter0: org.mortbay.jetty.AbstractConnector;

        $r1 = r0.<org.mortbay.jetty.AbstractConnector: java.lang.Thread[] _acceptorThread>;

        return $r1;
    }

    static int access$100(org.mortbay.jetty.AbstractConnector)
    {
        org.mortbay.jetty.AbstractConnector r0;
        int $i0;

        r0 := @parameter0: org.mortbay.jetty.AbstractConnector;

        $i0 = r0.<org.mortbay.jetty.AbstractConnector: int _acceptorPriorityOffset>;

        return $i0;
    }
}
