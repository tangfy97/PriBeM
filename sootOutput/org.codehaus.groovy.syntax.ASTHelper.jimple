public class org.codehaus.groovy.syntax.ASTHelper extends java.lang.Object
{
    private org.codehaus.groovy.control.SourceUnit controller;
    private java.lang.ClassLoader classLoader;
    protected java.util.Map imports;
    protected java.util.Map staticImports;
    protected java.util.List staticDotImports;
    protected org.codehaus.groovy.ast.ModuleNode output;
    private java.lang.String packageName;
    protected static java.util.Map resolutions;
    private final java.util.List newClasses;

    public void <init>(org.codehaus.groovy.control.SourceUnit, java.lang.ClassLoader)
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        java.lang.ClassLoader r2;
        org.codehaus.groovy.control.SourceUnit r1;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r1 := @parameter0: org.codehaus.groovy.control.SourceUnit;

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<org.codehaus.groovy.syntax.ASTHelper: void <init>()>();

        r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.control.SourceUnit controller> = r1;

        r0.<org.codehaus.groovy.syntax.ASTHelper: java.lang.ClassLoader classLoader> = r2;

        return;
    }

    public void <init>()
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        java.util.HashMap $r2, $r3;
        java.util.ArrayList $r1, $r4;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.syntax.ASTHelper: java.util.List newClasses> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.syntax.ASTHelper: java.util.Map imports> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.syntax.ASTHelper: java.util.Map staticImports> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.syntax.ASTHelper: java.util.List staticDotImports> = $r4;

        return;
    }

    public java.lang.String getPackageName()
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        $r1 = r0.<org.codehaus.groovy.syntax.ASTHelper: java.lang.String packageName>;

        return $r1;
    }

    public void setPackageName(java.lang.String)
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        java.lang.StringBuffer $r1, $r2, $r3;
        int $i0;
        java.lang.String r4;
        org.codehaus.groovy.ast.ModuleNode $r5;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r4 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.syntax.ASTHelper: java.lang.String packageName> = r4;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r5 = r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.ast.ModuleNode output>;

        virtualinvoke $r5.<org.codehaus.groovy.ast.ModuleNode: void setPackageName(java.lang.String)>(r4);

        return;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        $r1 = r0.<org.codehaus.groovy.syntax.ASTHelper: java.lang.ClassLoader classLoader>;

        return $r1;
    }

    public void setClassLoader(java.lang.ClassLoader)
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.codehaus.groovy.syntax.ASTHelper: java.lang.ClassLoader classLoader> = r1;

        return;
    }

    public org.codehaus.groovy.control.SourceUnit getController()
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        org.codehaus.groovy.control.SourceUnit $r1;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        $r1 = r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.control.SourceUnit controller>;

        return $r1;
    }

    public void setController(org.codehaus.groovy.control.SourceUnit)
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        org.codehaus.groovy.control.SourceUnit r1;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r1 := @parameter0: org.codehaus.groovy.control.SourceUnit;

        r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.control.SourceUnit controller> = r1;

        return;
    }

    public static java.lang.String dot(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r2, $r3, $r4, $r5;
        int $i0;
        java.lang.String r0, r1, $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

     label1:
        return r1;
    }

    protected void makeModule()
    {
        java.util.List $r1;
        org.codehaus.groovy.syntax.ASTHelper r0;
        org.codehaus.groovy.control.SourceUnit $r3;
        java.util.Map $r4;
        org.codehaus.groovy.ast.ModuleNode $r2;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        $r1 = r0.<org.codehaus.groovy.syntax.ASTHelper: java.util.List newClasses>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = new org.codehaus.groovy.ast.ModuleNode;

        $r3 = r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.control.SourceUnit controller>;

        specialinvoke $r2.<org.codehaus.groovy.ast.ModuleNode: void <init>(org.codehaus.groovy.control.SourceUnit)>($r3);

        r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.ast.ModuleNode output> = $r2;

        $r4 = <org.codehaus.groovy.syntax.ASTHelper: java.util.Map resolutions>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        return;
    }

    protected java.lang.String dot(java.lang.String)
    {
        java.lang.String r0, $r1;
        org.codehaus.groovy.syntax.ASTHelper r2;

        r2 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.codehaus.groovy.syntax.ASTHelper: java.lang.String dot(java.lang.String,java.lang.String)>(r0, "");

        return $r1;
    }

    protected void addNewClassName(java.lang.String)
    {
        java.util.List $r2;
        org.codehaus.groovy.syntax.ASTHelper r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.syntax.ASTHelper: java.util.List newClasses>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    protected void importClass(org.codehaus.groovy.ast.ClassNode, java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        org.codehaus.groovy.ast.ClassNode r1;
        java.util.Map $r3;
        java.lang.String r4, r5;
        org.codehaus.groovy.ast.ModuleNode $r2;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        if r5 != null goto label1;

        r5 = r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.ast.ModuleNode output>;

        virtualinvoke $r2.<org.codehaus.groovy.ast.ModuleNode: void addImport(java.lang.String,org.codehaus.groovy.ast.ClassNode)>(r5, r1);

        $r3 = r0.<org.codehaus.groovy.syntax.ASTHelper: java.util.Map imports>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r1);

        return;
    }

    protected void staticImportMethodOrField(org.codehaus.groovy.ast.ClassNode, java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        org.codehaus.groovy.ast.ClassNode r1;
        java.lang.String r2, r4;
        org.codehaus.groovy.ast.ModuleNode $r3;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        if r4 != null goto label1;

        r4 = r2;

     label1:
        $r3 = r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.ast.ModuleNode output>;

        virtualinvoke $r3.<org.codehaus.groovy.ast.ModuleNode: void addStaticMethodOrField(org.codehaus.groovy.ast.ClassNode,java.lang.String,java.lang.String)>(r1, r2, r4);

        return;
    }

    protected void staticImportClassWithStar(org.codehaus.groovy.ast.ClassNode, java.lang.String)
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        org.codehaus.groovy.ast.ClassNode r2;
        java.lang.String r1;
        org.codehaus.groovy.ast.ModuleNode $r3;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r2 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.ast.ModuleNode output>;

        virtualinvoke $r3.<org.codehaus.groovy.ast.ModuleNode: void addStaticImportClass(java.lang.String,org.codehaus.groovy.ast.ClassNode)>(r1, r2);

        return;
    }

    protected void importPackageWithStar(java.lang.String)
    {
        org.codehaus.groovy.syntax.ASTHelper r0;
        java.lang.String[] $r4;
        org.codehaus.groovy.ast.ModuleNode $r2;
        java.util.Map $r6;
        int $i0, i1;
        java.lang.String r1, $r3, $r5, $r7, $r8;

        r0 := @this: org.codehaus.groovy.syntax.ASTHelper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.syntax.ASTHelper: org.codehaus.groovy.ast.ModuleNode output>;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.syntax.ASTHelper: java.lang.String dot(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<org.codehaus.groovy.ast.ModuleNode: java.lang.String[] addImportPackage(java.lang.String)>($r3);

        i1 = 0;

     label1:
        $i0 = lengthof $r4;

        if i1 >= $i0 goto label2;

        $r6 = r0.<org.codehaus.groovy.syntax.ASTHelper: java.util.Map imports>;

        $r7 = $r4[i1];

        $r5 = $r4[i1];

        $r8 = staticinvoke <org.codehaus.groovy.syntax.ASTHelper: java.lang.String dot(java.lang.String,java.lang.String)>(r1, $r5);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.codehaus.groovy.syntax.ASTHelper: java.util.Map resolutions> = $r0;

        return;
    }
}
