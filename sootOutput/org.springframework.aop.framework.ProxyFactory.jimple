public class org.springframework.aop.framework.ProxyFactory extends org.springframework.aop.framework.ProxyCreatorSupport
{

    public void <init>()
    {
        org.springframework.aop.framework.ProxyFactory r0;

        r0 := @this: org.springframework.aop.framework.ProxyFactory;

        specialinvoke r0.<org.springframework.aop.framework.ProxyCreatorSupport: void <init>()>();

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.springframework.aop.framework.ProxyFactory r0;
        java.lang.Class[] $r2;
        java.lang.Object r1;

        r0 := @this: org.springframework.aop.framework.ProxyFactory;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.springframework.aop.framework.ProxyCreatorSupport: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Target object must not be null");

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class[] getAllInterfaces(java.lang.Object)>(r1);

        virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: void setInterfaces(java.lang.Class[])>($r2);

        virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: void setTarget(java.lang.Object)>(r1);

        return;
    }

    public void <init>(java.lang.Class[])
    {
        org.springframework.aop.framework.ProxyFactory r0;
        java.lang.Class[] r1;

        r0 := @this: org.springframework.aop.framework.ProxyFactory;

        r1 := @parameter0: java.lang.Class[];

        specialinvoke r0.<org.springframework.aop.framework.ProxyCreatorSupport: void <init>()>();

        virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: void setInterfaces(java.lang.Class[])>(r1);

        return;
    }

    public void <init>(java.lang.Class, org.aopalliance.intercept.Interceptor)
    {
        org.springframework.aop.framework.ProxyFactory r0;
        java.lang.Class r1;
        org.aopalliance.intercept.Interceptor r2;

        r0 := @this: org.springframework.aop.framework.ProxyFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.aopalliance.intercept.Interceptor;

        specialinvoke r0.<org.springframework.aop.framework.ProxyCreatorSupport: void <init>()>();

        virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: void addInterface(java.lang.Class)>(r1);

        virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: void addAdvice(org.aopalliance.aop.Advice)>(r2);

        return;
    }

    public void <init>(java.lang.Class, org.springframework.aop.TargetSource)
    {
        org.springframework.aop.framework.ProxyFactory r0;
        org.springframework.aop.TargetSource r2;
        java.lang.Class r1;

        r0 := @this: org.springframework.aop.framework.ProxyFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.springframework.aop.TargetSource;

        specialinvoke r0.<org.springframework.aop.framework.ProxyCreatorSupport: void <init>()>();

        virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: void addInterface(java.lang.Class)>(r1);

        virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: void setTargetSource(org.springframework.aop.TargetSource)>(r2);

        return;
    }

    public java.lang.Object getProxy()
    {
        org.springframework.aop.framework.ProxyFactory r0;
        org.springframework.aop.framework.AopProxy $r1;
        java.lang.Object $r2;

        r0 := @this: org.springframework.aop.framework.ProxyFactory;

        $r1 = virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: org.springframework.aop.framework.AopProxy createAopProxy()>();

        $r2 = interfaceinvoke $r1.<org.springframework.aop.framework.AopProxy: java.lang.Object getProxy()>();

        return $r2;
    }

    public java.lang.Object getProxy(java.lang.ClassLoader)
    {
        org.springframework.aop.framework.AopProxy $r1;
        org.springframework.aop.framework.ProxyFactory r0;
        java.lang.Object $r3;
        java.lang.ClassLoader r2;

        r0 := @this: org.springframework.aop.framework.ProxyFactory;

        r2 := @parameter0: java.lang.ClassLoader;

        $r1 = virtualinvoke r0.<org.springframework.aop.framework.ProxyFactory: org.springframework.aop.framework.AopProxy createAopProxy()>();

        $r3 = interfaceinvoke $r1.<org.springframework.aop.framework.AopProxy: java.lang.Object getProxy(java.lang.ClassLoader)>(r2);

        return $r3;
    }

    public static java.lang.Object getProxy(java.lang.Class, org.aopalliance.intercept.Interceptor)
    {
        org.aopalliance.intercept.Interceptor r2;
        org.springframework.aop.framework.ProxyFactory $r0;
        java.lang.Class r1;
        java.lang.Object $r3;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.aopalliance.intercept.Interceptor;

        $r0 = new org.springframework.aop.framework.ProxyFactory;

        specialinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Class,org.aopalliance.intercept.Interceptor)>(r1, r2);

        $r3 = virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy()>();

        return $r3;
    }

    public static java.lang.Object getProxy(java.lang.Class, org.springframework.aop.TargetSource)
    {
        org.springframework.aop.framework.ProxyFactory $r0;
        org.springframework.aop.TargetSource r2;
        java.lang.Class r1;
        java.lang.Object $r3;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.springframework.aop.TargetSource;

        $r0 = new org.springframework.aop.framework.ProxyFactory;

        specialinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Class,org.springframework.aop.TargetSource)>(r1, r2);

        $r3 = virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy()>();

        return $r3;
    }

    public static java.lang.Object getProxy(org.springframework.aop.TargetSource)
    {
        org.springframework.aop.framework.ProxyFactory $r2;
        org.springframework.aop.TargetSource r0;
        java.lang.Class $r1;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: org.springframework.aop.TargetSource;

        $r1 = interfaceinvoke r0.<org.springframework.aop.TargetSource: java.lang.Class getTargetClass()>();

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create class proxy for TargetSource with null target class");

        throw $r4;

     label1:
        $r2 = new org.springframework.aop.framework.ProxyFactory;

        specialinvoke $r2.<org.springframework.aop.framework.ProxyFactory: void <init>()>();

        virtualinvoke $r2.<org.springframework.aop.framework.ProxyFactory: void setTargetSource(org.springframework.aop.TargetSource)>(r0);

        virtualinvoke $r2.<org.springframework.aop.framework.ProxyFactory: void setProxyTargetClass(boolean)>(1);

        $r3 = virtualinvoke $r2.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy()>();

        return $r3;
    }
}
