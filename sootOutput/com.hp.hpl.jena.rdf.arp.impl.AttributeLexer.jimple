public class com.hp.hpl.jena.rdf.arp.impl.AttributeLexer extends com.hp.hpl.jena.rdf.arp.impl.QNameLexer implements com.hp.hpl.jena.rdf.arp.ARPErrorNumbers
{
    java.lang.String lang;
    java.lang.String base;
    public java.lang.String about;
    public java.lang.String datatype;
    public java.lang.String resource;
    public java.lang.String nodeID;
    public java.lang.String id;
    public java.lang.String type;
    public java.lang.String parseType;
    public java.util.BitSet done;
    public int count;
    int index;
    org.xml.sax.Attributes att;
    com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml;

    public void <init>(com.hp.hpl.jena.rdf.arp.states.Frame, int, int)
    {
        com.hp.hpl.jena.rdf.arp.states.Frame r1;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        int i0, i1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.states.Frame;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: void <init>(com.hp.hpl.jena.rdf.arp.states.Frame,int,int)>(r1, i0, i1);

        return;
    }

    public int processSpecials(com.hp.hpl.jena.rdf.arp.impl.Taint, org.xml.sax.Attributes) throws org.xml.sax.SAXParseException
    {
        java.lang.IllegalStateException $r38;
        boolean $z0, $z1, $z2, z3;
        com.hp.hpl.jena.rdf.arp.states.Frame $r3, $r24, $r31;
        java.lang.StringBuilder $r30, $r32, $r34, $r35;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext $r4, $r5;
        com.hp.hpl.jena.rdf.arp.impl.Taint r6;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        org.xml.sax.Attributes r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r33, $r36, $r37;
        java.util.BitSet $r2, $r7;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r6 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r1 := @parameter1: org.xml.sax.Attributes;

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: org.xml.sax.Attributes att> = r1;

        $i0 = interfaceinvoke r1.<org.xml.sax.Attributes: int getLength()>();

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>(int)>($i0);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.util.BitSet done> = $r2;

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int count> = 0;

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index> = 0;

     label01:
        $i1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index>;

        if $i1 >= $i0 goto label20;

        z3 = 1;

        $i3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int lookup(com.hp.hpl.jena.rdf.arp.impl.Taint)>(r6);

        lookupswitch($i3)
        {
            case 0: goto label13;
            case 1: goto label02;
            case 2: goto label04;
            case 4: goto label05;
            case 8: goto label06;
            case 16: goto label08;
            case 32: goto label07;
            case 64: goto label09;
            case 128: goto label12;
            case 256: goto label10;
            case 512: goto label11;
            case 1024: goto label03;
            case 2048: goto label03;
            case 4096: goto label03;
            case 8192: goto label03;
            case 16384: goto label03;
            case 32768: goto label05;
            default: goto label17;
        };

     label02:
        $r23 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String base> = $r23;

        $r24 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        virtualinvoke $r24.<com.hp.hpl.jena.rdf.arp.states.Frame: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 2, "Use of attribute xml:base is not envisaged in RDF Model&Syntax.");

        goto label18;

     label03:
        goto label18;

     label04:
        $r22 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String lang> = $r22;

        goto label18;

     label05:
        goto label18;

     label06:
        $r20 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String id>;

        $r21 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(r6, $r20);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String id> = $r21;

        goto label18;

     label07:
        $r16 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String nodeID>;

        $r17 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(r6, $r16);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String nodeID> = $r17;

        goto label18;

     label08:
        $r18 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String about>;

        $r19 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(r6, $r18);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String about> = $r19;

        goto label18;

     label09:
        $r14 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String resource>;

        $r15 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(r6, $r14);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String resource> = $r15;

        goto label18;

     label10:
        $r10 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String datatype>;

        $r11 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(r6, $r10);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String datatype> = $r11;

        goto label18;

     label11:
        $r8 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String type>;

        $r9 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(r6, $r8);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String type> = $r9;

        goto label18;

     label12:
        $r12 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String parseType>;

        $r13 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String value(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(r6, $r12);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String parseType> = $r13;

        goto label18;

     label13:
        $i9 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int select>;

        $i10 = $i9 & 4;

        if $i10 != 4 goto label16;

        $r25 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getQName()>();

        $i11 = virtualinvoke $r25.<java.lang.String: int length()>();

        if $i11 < 3 goto label14;

        $r37 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $z2 = virtualinvoke $r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("xml");

        if $z2 != 0 goto label15;

     label14:
        $r26 = <com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String xmlns>;

        $r27 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getUri()>();

        $z0 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z0 == 0 goto label16;

     label15:
        $r28 = "http://www.w3.org/2000/xmlns/";

        $r29 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getUri()>();

        $z1 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z1 != 0 goto label18;

        $r31 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML attribute: ");

        $r33 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getQName()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not known and is being discarded.");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<com.hp.hpl.jena.rdf.arp.states.Frame: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 118, $r36);

        goto label18;

     label16:
        z3 = 0;

        goto label18;

     label17:
        $r38 = new java.lang.IllegalStateException;

        specialinvoke $r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>("impossible");

        throw $r38;

     label18:
        if z3 == 0 goto label19;

        $r7 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.util.BitSet done>;

        $i6 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index>;

        virtualinvoke $r7.<java.util.BitSet: void set(int)>($i6);

        $i7 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int count>;

        $i8 = $i7 + 1;

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int count> = $i8;

     label19:
        $i4 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index>;

        $i5 = $i4 + 1;

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index> = $i5;

        goto label01;

     label20:
        $r3 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.rdf.arp.states.Frame: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext getXMLContext()>();

        $r5 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext computeXml(com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>($r4);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml> = $r5;

        $i2 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int count>;

        return $i2;
    }

    public com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml(com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext $r1, $r2, r3, $r4;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r3 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext computeXml(com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>(r3);

        r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml> = $r4;

     label1:
        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml>;

        return $r2;
    }

    private com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext computeXml(com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.Frame $r3, $r6;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        java.lang.String $r1, $r2, $r4, $r7;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler $r5, $r8;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r9;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r9 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String base>;

        if $r1 == null goto label1;

        $r6 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $r8 = $r6.<com.hp.hpl.jena.rdf.arp.states.Frame: com.hp.hpl.jena.rdf.arp.impl.XMLHandler arp>;

        $r7 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String base>;

        r9 = virtualinvoke r9.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext withBase(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,java.lang.String)>($r8, $r7);

     label1:
        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String lang>;

        if $r2 == null goto label2;

        $r3 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $r5 = $r3.<com.hp.hpl.jena.rdf.arp.states.Frame: com.hp.hpl.jena.rdf.arp.impl.XMLHandler arp>;

        $r4 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String lang>;

        r9 = virtualinvoke r9.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext withLang(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,java.lang.String)>($r5, $r4);

     label2:
        return r9;
    }

    boolean isInRdfns(com.hp.hpl.jena.rdf.arp.impl.Taint) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r3;
        com.hp.hpl.jena.rdf.arp.states.Frame $r5;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        java.lang.StringBuilder $r4, $r6, $r8, $r9;
        java.lang.String $r1, $r2, $r7, $r10;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r3 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getUri()>();

        $r2 = <com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String rdfns>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

        $r5 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unqualified use of rdf:");

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getQName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is deprecated.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.hp.hpl.jena.rdf.arp.states.Frame: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 102, $r10);

        return 1;

     label2:
        return 0;
    }

    void error(com.hp.hpl.jena.rdf.arp.impl.Taint, int) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r1;
        com.hp.hpl.jena.rdf.arp.states.Frame $r3;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        short $s1, s2, s3, s4;
        int i0;
        java.lang.StringBuilder $r2, $r5, $r6, $r7;
        java.lang.String $r4, $r8, $r9;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        i0 := @parameter1: int;

        s2 = 201;

        s4 = 201;

        s3 = 201;

        lookupswitch(i0)
        {
            case 1024: goto label1;
            case 2048: goto label1;
            case 4096: goto label1;
            case 8192: goto label1;
            case 16384: goto label1;
            default: goto label2;
        };

     label1:
        s2 = 206;

        s4 = 206;

        s3 = 206;

     label2:
        $r3 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $s1 = s3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getQName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not allowed as attribute");

        if s4 != 206 goto label3;

        $r9 = ".";

        goto label4;

     label3:
        $r9 = " here.";

     label4:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.hp.hpl.jena.rdf.arp.states.Frame: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r1, $s1, $r8);

        return;
    }

    void deprecatedAttribute(com.hp.hpl.jena.rdf.arp.impl.Taint, int) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r1;
        com.hp.hpl.jena.rdf.arp.states.Frame $r3;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        int i0;
        java.lang.StringBuilder $r2, $r5, $r6;
        java.lang.String $r4, $r7;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        i0 := @parameter1: int;

        $r3 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getQName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been deprecated.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.hp.hpl.jena.rdf.arp.states.Frame: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r1, 206, $r7);

        return;
    }

    java.lang.String getLocalName()
    {
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        int $i0;
        org.xml.sax.Attributes $r1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: org.xml.sax.Attributes att>;

        $i0 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>($i0);

        return $r2;
    }

    java.lang.String getUri()
    {
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        int $i0;
        org.xml.sax.Attributes $r1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: org.xml.sax.Attributes att>;

        $i0 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getURI(int)>($i0);

        return $r2;
    }

    private java.lang.String value()
    {
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        int $i0;
        org.xml.sax.Attributes $r1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: org.xml.sax.Attributes att>;

        $i0 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i0);

        return $r2;
    }

    public java.lang.String getXMLBase()
    {
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String base>;

        return $r1;
    }

    private java.lang.String value(com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r4;
        com.hp.hpl.jena.rdf.arp.states.Frame $r6;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r1;
        int $i0;
        org.xml.sax.Attributes $r2;
        java.lang.StringBuilder $r5, $r7, $r9, $r10;
        java.lang.String r0, $r3, $r8, $r11;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r4 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r6 = r1.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot use ");

        $r8 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String getQName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in both qualified and unqualifed form on same element");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.hp.hpl.jena.rdf.arp.states.Frame: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r4, 201, $r11);

     label1:
        $r2 = r1.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: org.xml.sax.Attributes att>;

        $i0 = r1.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index>;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i0);

        return $r3;
    }

    java.lang.String getQName()
    {
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        int $i0;
        org.xml.sax.Attributes $r1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: org.xml.sax.Attributes att>;

        $i0 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int index>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getQName(int)>($i0);

        return $r2;
    }

    public boolean done(int)
    {
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        int i0;
        java.util.BitSet $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.util.BitSet done>;

        $z0 = virtualinvoke $r1.<java.util.BitSet: boolean get(int)>(i0);

        return $z0;
    }

    void bagIDAttribute(com.hp.hpl.jena.rdf.arp.impl.Taint, int) throws org.xml.sax.SAXParseException
    {
        int i0;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r0;
        com.hp.hpl.jena.rdf.arp.impl.Taint r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: void deprecatedAttribute(com.hp.hpl.jena.rdf.arp.impl.Taint,int)>(null, i0);

        return;
    }
}
