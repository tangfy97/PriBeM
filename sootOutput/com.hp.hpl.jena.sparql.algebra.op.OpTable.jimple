public class com.hp.hpl.jena.sparql.algebra.op.OpTable extends com.hp.hpl.jena.sparql.algebra.op.Op0
{
    private com.hp.hpl.jena.sparql.algebra.Table table;

    public static com.hp.hpl.jena.sparql.algebra.op.OpTable unit()
    {
        com.hp.hpl.jena.sparql.algebra.Table $r1;
        com.hp.hpl.jena.sparql.algebra.op.OpTable $r0;

        $r0 = new com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.algebra.TableFactory: com.hp.hpl.jena.sparql.algebra.Table createUnit()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: void <init>(com.hp.hpl.jena.sparql.algebra.Table)>($r1);

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.algebra.op.OpTable create(com.hp.hpl.jena.sparql.algebra.Table)
    {
        com.hp.hpl.jena.sparql.algebra.Table r1;
        com.hp.hpl.jena.sparql.algebra.op.OpTable $r0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Table;

        $r0 = new com.hp.hpl.jena.sparql.algebra.op.OpTable;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: void <init>(com.hp.hpl.jena.sparql.algebra.Table)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.algebra.op.OpTable empty()
    {
        com.hp.hpl.jena.sparql.algebra.Table $r1;
        com.hp.hpl.jena.sparql.algebra.op.OpTable $r0;

        $r0 = new com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.algebra.TableFactory: com.hp.hpl.jena.sparql.algebra.Table createEmpty()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: void <init>(com.hp.hpl.jena.sparql.algebra.Table)>($r1);

        return $r0;
    }

    private void <init>(com.hp.hpl.jena.sparql.algebra.Table)
    {
        com.hp.hpl.jena.sparql.algebra.Table r1;
        com.hp.hpl.jena.sparql.algebra.op.OpTable r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Table;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.Op0: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table table> = r1;

        return;
    }

    public boolean isJoinIdentity()
    {
        com.hp.hpl.jena.sparql.algebra.Table $r1;
        com.hp.hpl.jena.sparql.algebra.op.OpTable r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r1 = r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table table>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.algebra.table.TableUnit: boolean isTableUnit(com.hp.hpl.jena.sparql.algebra.Table)>($r1);

        return $z0;
    }

    public com.hp.hpl.jena.sparql.algebra.Table getTable()
    {
        com.hp.hpl.jena.sparql.algebra.Table $r1;
        com.hp.hpl.jena.sparql.algebra.op.OpTable r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r1 = r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table table>;

        return $r1;
    }

    public java.lang.String getName()
    {
        com.hp.hpl.jena.sparql.algebra.op.OpTable r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        return "table";
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.OpVisitor)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpTable r1;
        com.hp.hpl.jena.sparql.algebra.OpVisitor r0;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.OpVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.algebra.OpVisitor: void visit(com.hp.hpl.jena.sparql.algebra.op.OpTable)>(r1);

        return;
    }

    public com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform)
    {
        com.hp.hpl.jena.sparql.algebra.Transform r0;
        com.hp.hpl.jena.sparql.algebra.op.OpTable r1;
        com.hp.hpl.jena.sparql.algebra.Op $r2;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Transform;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.algebra.Transform: com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpTable)>(r1);

        return $r2;
    }

    public com.hp.hpl.jena.sparql.algebra.op.Op0 copy()
    {
        com.hp.hpl.jena.sparql.algebra.Table $r2;
        com.hp.hpl.jena.sparql.algebra.op.OpTable $r0, r1;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r0 = new com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r2 = r1.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table table>;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: void <init>(com.hp.hpl.jena.sparql.algebra.Table)>($r2);

        return $r0;
    }

    public int hashCode()
    {
        int $i0;
        com.hp.hpl.jena.sparql.algebra.Table $r1;
        com.hp.hpl.jena.sparql.algebra.op.OpTable r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r1 = r0.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table table>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equalTo(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpTable r1, r2;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r5;
        com.hp.hpl.jena.sparql.algebra.Table $r3, $r4;
        com.hp.hpl.jena.sparql.algebra.Op r0;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r5 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.algebra.op.OpTable;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.sparql.algebra.op.OpTable) r0;

        $r4 = r2.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table table>;

        $r3 = r1.<com.hp.hpl.jena.sparql.algebra.op.OpTable: com.hp.hpl.jena.sparql.algebra.Table table>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }
}
