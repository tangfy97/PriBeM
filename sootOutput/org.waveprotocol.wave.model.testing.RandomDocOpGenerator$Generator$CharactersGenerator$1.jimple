class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1 extends org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent
{
    final java.lang.String val$s;
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator this$1;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator, java.lang.String)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1 r0;
        java.lang.String r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator $r3;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator;

        r2 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator this$1> = r1;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1: java.lang.String val$s> = r2;

        $r3 = r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)>($r3);

        return;
    }

    public org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1 r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r4;
        java.lang.String $r3;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        $r3 = r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1: java.lang.String val$s>;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkCharacters(java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r3, r2);

        return $r4;
    }

    public void apply(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1 r1;
        java.lang.String $r2;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        $r2 = r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1: java.lang.String val$s>;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doCharacters(java.lang.String)>($r2);

        return;
    }

    public void output(org.waveprotocol.wave.model.document.operation.DocOpCursor)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1 r1;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.operation.DocOpCursor r0;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOpCursor;

        $r2 = r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1: java.lang.String val$s>;

        interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void characters(java.lang.String)>($r2);

        return;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1 r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Characters(");

        $r3 = r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$CharactersGenerator$1: java.lang.String val$s>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
