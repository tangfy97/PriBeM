public class org.apache.zookeeper.server.quorum.QuorumPeer extends java.lang.Thread implements org.apache.zookeeper.server.quorum.QuorumStats$Provider
{
    private static final org.slf4j.Logger LOG;
    org.apache.zookeeper.server.quorum.QuorumBean jmxQuorumBean;
    org.apache.zookeeper.server.quorum.LocalPeerBean jmxLocalPeerBean;
    org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean;
    org.apache.zookeeper.server.quorum.QuorumCnxManager qcm;
    private org.apache.zookeeper.server.ZKDatabase zkDb;
    static final long OBSERVER_ID;
    public long start_fle;
    public long end_fle;
    private org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType;
    protected java.util.Map quorumPeers;
    private org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumConfig;
    private long myid;
    private volatile org.apache.zookeeper.server.quorum.Vote currentVote;
    volatile boolean running;
    protected int tickTime;
    protected int minSessionTimeout;
    protected int maxSessionTimeout;
    protected int initLimit;
    protected int syncLimit;
    protected int tick;
    private org.apache.zookeeper.server.quorum.QuorumPeer$ServerState state;
    java.net.DatagramSocket udpSocket;
    private java.net.InetSocketAddress myQuorumAddr;
    private int electionType;
    org.apache.zookeeper.server.quorum.Election electionAlg;
    org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory;
    private org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory;
    private final org.apache.zookeeper.server.quorum.QuorumStats quorumStats;
    org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread responder;
    public org.apache.zookeeper.server.quorum.Follower follower;
    public org.apache.zookeeper.server.quorum.Leader leader;
    public org.apache.zookeeper.server.quorum.Observer observer;
    private long acceptedEpoch;
    private long currentEpoch;
    public static final java.lang.String CURRENT_EPOCH_FILENAME;
    public static final java.lang.String ACCEPTED_EPOCH_FILENAME;
    static final boolean $assertionsDisabled;

    public org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType getLearnerType()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType>;

        return $r1;
    }

    public void setLearnerType(org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        long $l0, $l1, $l2;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType r1;
        java.lang.Long $r3, $r13;
        java.util.Map $r2, $r12;
        java.lang.String $r11;
        boolean $z0;
        org.slf4j.Logger $r5;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer $r15;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r10;
        java.lang.Object $r14;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType> = r1;

        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers>;

        $l0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r12 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers>;

        $l2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r15 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r14;

        $r15.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType type> = r1;

        goto label2;

     label1:
        $r5 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting LearnerType to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but ");

        $l1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in QuorumPeers. ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String)>($r11);

     label2:
        return;
    }

    public int getQuorumSize()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0;
        java.util.Map $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getVotingView()>();

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public long getId()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $l0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        return $l0;
    }

    public synchronized org.apache.zookeeper.server.quorum.Vote getCurrentVote()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.Vote $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Vote currentVote>;

        return $r1;
    }

    public synchronized void setCurrentVote(org.apache.zookeeper.server.quorum.Vote)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.Vote r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.Vote;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Vote currentVote> = r1;

        return;
    }

    public synchronized void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumPeer$ServerState r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState state> = r1;

        return;
    }

    public synchronized org.apache.zookeeper.server.quorum.QuorumPeer$ServerState getPeerState()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumPeer$ServerState $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState state>;

        return $r1;
    }

    public java.net.InetSocketAddress getQuorumAddress()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        java.net.InetSocketAddress $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.InetSocketAddress myQuorumAddr>;

        return $r1;
    }

    public void <init>()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumStats $r4;
        org.apache.zookeeper.server.quorum.QuorumPeer$ServerState $r2;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r1;
        int $i1, $i3;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("QuorumPeer");

        $r1 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType> = $r1;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: boolean running> = 1;

        $i1 = (int) -1;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int minSessionTimeout> = $i1;

        $i3 = (int) -1;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int maxSessionTimeout> = $i3;

        $r2 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState state> = $r2;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory> = null;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch> = -1L;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch> = -1L;

        $r4 = new org.apache.zookeeper.server.quorum.QuorumStats;

        specialinvoke $r4.<org.apache.zookeeper.server.quorum.QuorumStats: void <init>(org.apache.zookeeper.server.quorum.QuorumStats$Provider)>(r0);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumStats quorumStats> = $r4;

        return;
    }

    public void <init>(java.util.Map, java.io.File, java.io.File, int, long, int, int, int, org.apache.zookeeper.server.ServerCnxnFactory) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.flexible.QuorumMaj $r5;
        long l1;
        org.apache.zookeeper.server.ServerCnxnFactory r4;
        java.io.File r2, r3;
        java.util.Map r1;
        int i0, i2, i3, i4, $i5;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.io.File;

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r4 := @parameter8: org.apache.zookeeper.server.ServerCnxnFactory;

        $r5 = new org.apache.zookeeper.server.quorum.flexible.QuorumMaj;

        $i5 = staticinvoke <org.apache.zookeeper.server.quorum.QuorumPeer: int countParticipants(java.util.Map)>(r1);

        specialinvoke $r5.<org.apache.zookeeper.server.quorum.flexible.QuorumMaj: void <init>(int)>($i5);

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void <init>(java.util.Map,java.io.File,java.io.File,int,long,int,int,int,org.apache.zookeeper.server.ServerCnxnFactory,org.apache.zookeeper.server.quorum.flexible.QuorumVerifier)>(r1, r2, r3, i0, l1, i2, i3, i4, r4, $r5);

        return;
    }

    public void <init>(java.util.Map, java.io.File, java.io.File, int, long, int, int, int, org.apache.zookeeper.server.ServerCnxnFactory, org.apache.zookeeper.server.quorum.flexible.QuorumVerifier) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.ZKDatabase $r6;
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier r8;
        org.apache.zookeeper.server.ServerCnxnFactory r1;
        long l1;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog $r3, $r7;
        java.util.Map r2;
        int i0, i2, i3, i4, $i5;
        org.apache.zookeeper.server.quorum.flexible.QuorumMaj $r9;
        java.io.File r4, r5;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r2 := @parameter0: java.util.Map;

        r5 := @parameter1: java.io.File;

        r4 := @parameter2: java.io.File;

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r1 := @parameter8: org.apache.zookeeper.server.ServerCnxnFactory;

        r8 := @parameter9: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory> = r1;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers> = r2;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int electionType> = i0;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid> = l1;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime> = i2;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int initLimit> = i3;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int syncLimit> = i4;

        $r3 = new org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        specialinvoke $r3.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: void <init>(java.io.File,java.io.File)>(r4, r5);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory> = $r3;

        $r6 = new org.apache.zookeeper.server.ZKDatabase;

        $r7 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory>;

        specialinvoke $r6.<org.apache.zookeeper.server.ZKDatabase: void <init>(org.apache.zookeeper.server.persistence.FileTxnSnapLog)>($r7);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb> = $r6;

        if r8 != null goto label1;

        $r9 = new org.apache.zookeeper.server.quorum.flexible.QuorumMaj;

        $i5 = staticinvoke <org.apache.zookeeper.server.quorum.QuorumPeer: int countParticipants(java.util.Map)>(r2);

        specialinvoke $r9.<org.apache.zookeeper.server.quorum.flexible.QuorumMaj: void <init>(int)>($i5);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumConfig> = $r9;

        goto label2;

     label1:
        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumConfig> = r8;

     label2:
        return;
    }

    org.apache.zookeeper.server.quorum.QuorumStats quorumStats()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumStats $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumStats quorumStats>;

        return $r1;
    }

    public synchronized void start()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.ServerCnxnFactory $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void loadDataBase()>();

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        virtualinvoke $r1.<org.apache.zookeeper.server.ServerCnxnFactory: void start()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void startLeaderElection()>();

        specialinvoke r0.<java.lang.Thread: void start()>();

        return;
    }

    private void loadDataBase()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        byte $b3, $b7;
        java.lang.Long $r26, $r29;
        java.io.FileNotFoundException $r24, $r27;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r15, $r17, $r18, $r19, $r30, $r32;
        org.apache.zookeeper.server.ZKDatabase $r1, $r2;
        long $l0, $l1, $l2, $l4, $l5, $l6, $l8, $l9, $l10, $l11, $l12, $l13, $l14, l15;
        int $i16, $i17;
        java.lang.String $r7, $r10, $r12, $r16, $r20;
        org.slf4j.Logger $r22, $r25, $r28;
        java.io.IOException $r21, $r31, $r33;
        java.lang.RuntimeException $r34;
        org.apache.zookeeper.server.DataTree $r3;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

     label01:
        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        virtualinvoke $r1.<org.apache.zookeeper.server.ZKDatabase: long loadDataBase()>();

        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        $r3 = virtualinvoke $r2.<org.apache.zookeeper.server.ZKDatabase: org.apache.zookeeper.server.DataTree getDataTree()>();

        l15 = $r3.<org.apache.zookeeper.server.DataTree: long lastProcessedZxid>;

        $l0 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long getEpochFromZxid(long)>(l15);

     label02:
        $l1 = specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long readLongFromFile(java.lang.String)>("currentEpoch");

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch> = $l1;

     label03:
        goto label05;

     label04:
        $r27 := @caughtexception;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch> = $l0;

        $r28 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        $l13 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch>;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l13);

        interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("currentEpoch not found! Creating with a reasonable default of {}. This should only happen when you are upgrading your installation", $r29);

        $l14 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch>;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void writeLongToFile(java.lang.String,long)>("currentEpoch", $l14);

     label05:
        $l2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch>;

        $b3 = $l0 cmp $l2;

        $i16 = (int) $b3;

        if $i16 <= 0 goto label06;

        $r31 = new java.io.IOException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current epoch, ");

        $l10 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch>;

        $r16 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: java.lang.String zxidToString(long)>($l10);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", is older than the last zxid, ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r31;

     label06:
        $l4 = specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long readLongFromFile(java.lang.String)>("acceptedEpoch");

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch> = $l4;

     label07:
        goto label09;

     label08:
        $r24 := @caughtexception;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch> = $l0;

        $r25 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        $l11 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch>;

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("acceptedEpoch not found! Creating with a reasonable default of {}. This should only happen when you are upgrading your installation", $r26);

        $l12 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch>;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void writeLongToFile(java.lang.String,long)>("currentEpoch", $l12);

     label09:
        $l6 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch>;

        $l5 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch>;

        $b7 = $l6 cmp $l5;

        $i17 = (int) $b7;

        if $i17 >= 0 goto label10;

        $r33 = new java.io.IOException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current epoch, ");

        $l8 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch>;

        $r7 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: java.lang.String zxidToString(long)>($l8);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than the accepted epoch, ");

        $l9 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch>;

        $r10 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: java.lang.String zxidToString(long)>($l9);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r33;

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;

        $r22 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to load database on disk", $r21);

        $r34 = new java.lang.RuntimeException;

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to run quorum server ", $r21);

        throw $r34;

     label12:
        return;

        catch java.io.FileNotFoundException from label02 to label03 with label04;
        catch java.io.FileNotFoundException from label06 to label07 with label08;
        catch java.io.IOException from label01 to label10 with label11;
    }

    public synchronized void stopLeaderElection()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread $r1, $r2;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread responder>;

        $r1.<org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread: boolean running> = 0;

        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread responder>;

        virtualinvoke $r2.<org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread: void interrupt()>();

        return;
    }

    public synchronized void startLeaderElection()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread $r9, $r10;
        byte $b9;
        java.util.Map $r2;
        boolean $z0;
        java.util.Collection $r3;
        java.net.InetSocketAddress $r5, $r8, $r18;
        java.lang.StackTraceElement[] $r24;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer r25;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        org.apache.zookeeper.server.quorum.Election $r6;
        org.apache.zookeeper.server.quorum.Vote $r1;
        long $l0, $l1, $l2, $l6, $l7, $l8;
        java.net.DatagramSocket $r7;
        java.net.SocketException $r19;
        int $i3, $i4, $i5;
        java.lang.String $r16, $r23;
        java.util.Iterator $r4;
        java.io.IOException $r21;
        java.lang.RuntimeException $r11, $r20, $r22;
        java.lang.Object $r17;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

     label01:
        $r1 = new org.apache.zookeeper.server.quorum.Vote;

        $l0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        $l1 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long getLastLoggedZxid()>();

        $l2 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long getCurrentEpoch()>();

        specialinvoke $r1.<org.apache.zookeeper.server.quorum.Vote: void <init>(long,long,long)>($l0, $l1, $l2);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Vote currentVote> = $r1;

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        $r23 = virtualinvoke $r21.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r21.<java.io.IOException: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r22.<java.lang.RuntimeException: void setStackTrace(java.lang.StackTraceElement[])>($r24);

        throw $r22;

     label04:
        $r2 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getView()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r17 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r17;

        $l8 = r25.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: long id>;

        $l7 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        $b9 = $l8 cmp $l7;

        if $b9 != 0 goto label06;

        $r18 = r25.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress addr>;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.InetSocketAddress myQuorumAddr> = $r18;

        goto label07;

     label06:
        goto label05;

     label07:
        $r5 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.InetSocketAddress myQuorumAddr>;

        if $r5 != null goto label08;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("My id ");

        $l6 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in the peer list");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label08:
        $i3 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int electionType>;

        if $i3 != 0 goto label12;

     label09:
        $r7 = new java.net.DatagramSocket;

        $r8 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.InetSocketAddress myQuorumAddr>;

        $i5 = virtualinvoke $r8.<java.net.InetSocketAddress: int getPort()>();

        specialinvoke $r7.<java.net.DatagramSocket: void <init>(int)>($i5);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.DatagramSocket udpSocket> = $r7;

        $r9 = new org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread;

        specialinvoke $r9.<org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)>(r0);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread responder> = $r9;

        $r10 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread responder>;

        virtualinvoke $r10.<org.apache.zookeeper.server.quorum.QuorumPeer$ResponderThread: void start()>();

     label10:
        goto label12;

     label11:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label12:
        $i4 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int electionType>;

        $r6 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election createElectionAlgorithm(int)>($i4);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election electionAlg> = $r6;

        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.net.SocketException from label09 to label10 with label11;
    }

    protected static int countParticipants(java.util.Map)
    {
        java.util.Iterator $r2;
        java.util.Collection $r1;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r5, $r6;
        java.util.Map r0;
        int i0;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        i0 = 0;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r3;

        $r6 = r4.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType type>;

        $r5 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        if $r6 != $r5 goto label2;

        i0 = i0 + 1;

     label2:
        goto label1;

     label3:
        return i0;
    }

    public void <init>(java.util.Map, java.io.File, java.io.File, int, int, long, int, int, int) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.flexible.QuorumMaj $r8;
        long l1;
        org.apache.zookeeper.server.ServerCnxnFactory $r5;
        java.net.InetSocketAddress $r7;
        java.io.File r2, r3;
        java.util.Map r1;
        int i0, i2, i3, i4, i5, $i6, $i8;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.io.File;

        i5 := @parameter3: int;

        i0 := @parameter4: int;

        l1 := @parameter5: long;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        $r7 = new java.net.InetSocketAddress;

        specialinvoke $r7.<java.net.InetSocketAddress: void <init>(int)>(i5);

        $i8 = (int) -1;

        $r5 = staticinvoke <org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.ServerCnxnFactory createFactory(java.net.InetSocketAddress,int)>($r7, $i8);

        $r8 = new org.apache.zookeeper.server.quorum.flexible.QuorumMaj;

        $i6 = staticinvoke <org.apache.zookeeper.server.quorum.QuorumPeer: int countParticipants(java.util.Map)>(r1);

        specialinvoke $r8.<org.apache.zookeeper.server.quorum.flexible.QuorumMaj: void <init>(int)>($i6);

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void <init>(java.util.Map,java.io.File,java.io.File,int,long,int,int,int,org.apache.zookeeper.server.ServerCnxnFactory,org.apache.zookeeper.server.quorum.flexible.QuorumVerifier)>(r1, r2, r3, i0, l1, i2, i3, i4, $r5, $r8);

        return;
    }

    public void <init>(java.util.Map, java.io.File, java.io.File, int, int, long, int, int, int, org.apache.zookeeper.server.quorum.flexible.QuorumVerifier) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier r6;
        long l1;
        org.apache.zookeeper.server.ServerCnxnFactory $r5;
        java.net.InetSocketAddress $r7;
        java.io.File r2, r3;
        java.util.Map r1;
        int i0, i2, i3, i4, i5, $i7;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.io.File;

        i5 := @parameter3: int;

        i0 := @parameter4: int;

        l1 := @parameter5: long;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        r6 := @parameter9: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier;

        $r7 = new java.net.InetSocketAddress;

        specialinvoke $r7.<java.net.InetSocketAddress: void <init>(int)>(i5);

        $i7 = (int) -1;

        $r5 = staticinvoke <org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.ServerCnxnFactory createFactory(java.net.InetSocketAddress,int)>($r7, $i7);

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void <init>(java.util.Map,java.io.File,java.io.File,int,long,int,int,int,org.apache.zookeeper.server.ServerCnxnFactory,org.apache.zookeeper.server.quorum.flexible.QuorumVerifier)>(r1, r2, r3, i0, l1, i2, i3, i4, $r5, r6);

        return;
    }

    public long getLastLoggedZxid()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.ZKDatabase $r1, $r2;
        long $l0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        $z0 = virtualinvoke $r1.<org.apache.zookeeper.server.ZKDatabase: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void loadDataBase()>();

     label1:
        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        $l0 = virtualinvoke $r2.<org.apache.zookeeper.server.ZKDatabase: long getDataTreeLastProcessedZxid()>();

        return $l0;
    }

    protected org.apache.zookeeper.server.quorum.Follower makeFollower(org.apache.zookeeper.server.persistence.FileTxnSnapLog) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder $r4;
        org.apache.zookeeper.server.quorum.Follower $r0;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r3;
        org.apache.zookeeper.server.ZKDatabase $r5;
        org.apache.zookeeper.server.quorum.FollowerZooKeeperServer $r2;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r3 := @parameter0: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r0 = new org.apache.zookeeper.server.quorum.Follower;

        $r2 = new org.apache.zookeeper.server.quorum.FollowerZooKeeperServer;

        $r4 = new org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder;

        specialinvoke $r4.<org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder: void <init>()>();

        $r5 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        specialinvoke $r2.<org.apache.zookeeper.server.quorum.FollowerZooKeeperServer: void <init>(org.apache.zookeeper.server.persistence.FileTxnSnapLog,org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.ZooKeeperServer$DataTreeBuilder,org.apache.zookeeper.server.ZKDatabase)>(r3, r1, $r4, $r5);

        specialinvoke $r0.<org.apache.zookeeper.server.quorum.Follower: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.FollowerZooKeeperServer)>(r1, $r2);

        return $r0;
    }

    protected org.apache.zookeeper.server.quorum.Leader makeLeader(org.apache.zookeeper.server.persistence.FileTxnSnapLog) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder $r4;
        org.apache.zookeeper.server.quorum.LeaderZooKeeperServer $r2;
        org.apache.zookeeper.server.quorum.Leader $r0;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r3;
        org.apache.zookeeper.server.ZKDatabase $r5;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r3 := @parameter0: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r0 = new org.apache.zookeeper.server.quorum.Leader;

        $r2 = new org.apache.zookeeper.server.quorum.LeaderZooKeeperServer;

        $r4 = new org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder;

        specialinvoke $r4.<org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder: void <init>()>();

        $r5 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        specialinvoke $r2.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void <init>(org.apache.zookeeper.server.persistence.FileTxnSnapLog,org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.ZooKeeperServer$DataTreeBuilder,org.apache.zookeeper.server.ZKDatabase)>(r3, r1, $r4, $r5);

        specialinvoke $r0.<org.apache.zookeeper.server.quorum.Leader: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.LeaderZooKeeperServer)>(r1, $r2);

        return $r0;
    }

    protected org.apache.zookeeper.server.quorum.Observer makeObserver(org.apache.zookeeper.server.persistence.FileTxnSnapLog) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder $r4;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r3;
        org.apache.zookeeper.server.ZKDatabase $r5;
        org.apache.zookeeper.server.quorum.Observer $r0;
        org.apache.zookeeper.server.quorum.ObserverZooKeeperServer $r2;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r3 := @parameter0: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r0 = new org.apache.zookeeper.server.quorum.Observer;

        $r2 = new org.apache.zookeeper.server.quorum.ObserverZooKeeperServer;

        $r4 = new org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder;

        specialinvoke $r4.<org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder: void <init>()>();

        $r5 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        specialinvoke $r2.<org.apache.zookeeper.server.quorum.ObserverZooKeeperServer: void <init>(org.apache.zookeeper.server.persistence.FileTxnSnapLog,org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.ZooKeeperServer$DataTreeBuilder,org.apache.zookeeper.server.ZKDatabase)>(r3, r1, $r4, $r5);

        specialinvoke $r0.<org.apache.zookeeper.server.quorum.Observer: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.ObserverZooKeeperServer)>(r1, $r2);

        return $r0;
    }

    protected org.apache.zookeeper.server.quorum.Election createElectionAlgorithm(int)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.slf4j.Logger $r4;
        org.apache.zookeeper.server.quorum.FastLeaderElection $r5;
        java.lang.AssertionError $r10;
        org.apache.zookeeper.server.quorum.QuorumCnxManager $r1, $r2, $r6;
        org.apache.zookeeper.server.quorum.LeaderElection $r9;
        org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener r3;
        int i0;
        org.apache.zookeeper.server.quorum.AuthFastLeaderElection $r7, $r8;
        org.apache.zookeeper.server.quorum.Election r11;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        i0 := @parameter0: int;

        r11 = null;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label6;
        };

     label1:
        $r9 = new org.apache.zookeeper.server.quorum.LeaderElection;

        specialinvoke $r9.<org.apache.zookeeper.server.quorum.LeaderElection: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)>(r0);

        r11 = $r9;

        goto label7;

     label2:
        $r8 = new org.apache.zookeeper.server.quorum.AuthFastLeaderElection;

        specialinvoke $r8.<org.apache.zookeeper.server.quorum.AuthFastLeaderElection: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)>(r0);

        r11 = $r8;

        goto label7;

     label3:
        $r7 = new org.apache.zookeeper.server.quorum.AuthFastLeaderElection;

        specialinvoke $r7.<org.apache.zookeeper.server.quorum.AuthFastLeaderElection: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,boolean)>(r0, 1);

        r11 = $r7;

        goto label7;

     label4:
        $r1 = new org.apache.zookeeper.server.quorum.QuorumCnxManager;

        specialinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumCnxManager: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)>(r0);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumCnxManager qcm> = $r1;

        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumCnxManager qcm>;

        r3 = $r2.<org.apache.zookeeper.server.quorum.QuorumCnxManager: org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener listener>;

        if r3 == null goto label5;

        virtualinvoke r3.<org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener: void start()>();

        $r5 = new org.apache.zookeeper.server.quorum.FastLeaderElection;

        $r6 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumCnxManager qcm>;

        specialinvoke $r5.<org.apache.zookeeper.server.quorum.FastLeaderElection: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.QuorumCnxManager)>(r0, $r6);

        r11 = $r5;

        goto label7;

     label5:
        $r4 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String)>("Null listener when initializing cnx manager");

        goto label7;

     label6:
        $z0 = <org.apache.zookeeper.server.quorum.QuorumPeer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label7;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label7:
        return r11;
    }

    protected org.apache.zookeeper.server.quorum.Election makeLEStrategy()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        org.slf4j.Logger $r0;
        int $i0;
        org.apache.zookeeper.server.quorum.Election $r2;
        org.apache.zookeeper.server.quorum.LeaderElection $r3;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r0 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r0.<org.slf4j.Logger: void debug(java.lang.String)>("Initializing leader election protocol...");

        $i0 = virtualinvoke r1.<org.apache.zookeeper.server.quorum.QuorumPeer: int getElectionType()>();

        if $i0 != 0 goto label1;

        $r3 = new org.apache.zookeeper.server.quorum.LeaderElection;

        specialinvoke $r3.<org.apache.zookeeper.server.quorum.LeaderElection: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)>(r1);

        r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election electionAlg> = $r3;

     label1:
        $r2 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election electionAlg>;

        return $r2;
    }

    protected synchronized void setLeader(org.apache.zookeeper.server.quorum.Leader)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.Leader r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.Leader;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader> = r1;

        return;
    }

    protected synchronized void setFollower(org.apache.zookeeper.server.quorum.Follower)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.Follower r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.Follower;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower> = r1;

        return;
    }

    protected synchronized void setObserver(org.apache.zookeeper.server.quorum.Observer)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.Observer r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.Observer;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Observer observer> = r1;

        return;
    }

    public synchronized org.apache.zookeeper.server.ZooKeeperServer getActiveServer()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.Observer $r3, $r4;
        org.apache.zookeeper.server.quorum.Follower $r2, $r6;
        org.apache.zookeeper.server.quorum.LeaderZooKeeperServer $r9;
        org.apache.zookeeper.server.quorum.Leader $r1, $r8;
        org.apache.zookeeper.server.quorum.LearnerZooKeeperServer $r5, $r7;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        $r9 = $r8.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        return $r9;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        if $r2 == null goto label2;

        $r6 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        $r7 = $r6.<org.apache.zookeeper.server.quorum.Follower: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        return $r7;

     label2:
        $r3 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Observer observer>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Observer observer>;

        $r5 = $r4.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        return $r5;

     label3:
        return null;
    }

    public void run()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.RemotePeerBean $r51;
        org.apache.zookeeper.server.quorum.LocalPeerBean $r54;
        org.apache.zookeeper.server.quorum.QuorumPeer$ServerState $r19, $r25, $r31, $r37, $r66, $r71, $r75, $r79, $r82, $r86, $r89, $r93;
        byte $b5;
        java.util.Map $r13;
        org.apache.zookeeper.server.quorum.Observer $r22, $r23, $r24, $r81, $r85;
        java.lang.Exception $r57, $r59, $r68, $r76, $r83, $r87, $r91, $r94, $r96, $r98;
        org.apache.zookeeper.server.quorum.Follower $r28, $r29, $r30, $r74, $r78;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer r100;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7;
        org.apache.zookeeper.server.quorum.Election $r40, $r48;
        java.lang.Throwable $r61, $r64, $r73, $r80, $r90;
        org.apache.zookeeper.server.quorum.Vote $r41, $r49;
        org.apache.zookeeper.server.ZKDatabase $r46;
        long $l0, $l3, $l4;
        org.apache.zookeeper.server.ServerCnxnFactory $r5;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog $r21, $r27, $r33, $r45;
        java.lang.String $r8;
        org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer $r43;
        int[] $r18;
        boolean $z0, $z1, $z2;
        org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder $r44;
        java.util.Collection $r14;
        java.net.InetSocketAddress $r6;
        org.apache.zookeeper.server.quorum.QuorumBean $r10, $r12, $r53, $r56;
        int $i1, $i2;
        org.slf4j.Logger $r9, $r16, $r20, $r26, $r32, $r39, $r42, $r58, $r60, $r62, $r69, $r77, $r84, $r88, $r92, $r95, $r97, $r99;
        java.util.Iterator $r15;
        org.apache.zookeeper.jmx.MBeanRegistry $r11, $r17, $r52, $r55, $r63;
        org.apache.zookeeper.server.quorum.QuorumPeer$1 $r47;
        org.apache.zookeeper.server.quorum.Leader $r34, $r35, $r36, $r38, $r65, $r67, $r70, $r72;
        java.lang.Object $r50;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("QuorumPeer[myid=");

        $l0 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        $r6 = virtualinvoke $r5.<org.apache.zookeeper.server.ServerCnxnFactory: java.net.InetSocketAddress getLocalAddress()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setName(java.lang.String)>($r8);

        $r9 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>("Starting quorum peer");

     label01:
        $r10 = new org.apache.zookeeper.server.quorum.QuorumBean;

        specialinvoke $r10.<org.apache.zookeeper.server.quorum.QuorumBean: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)>(r0);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumBean jmxQuorumBean> = $r10;

        $r11 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r12 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumBean jmxQuorumBean>;

        virtualinvoke $r11.<org.apache.zookeeper.jmx.MBeanRegistry: void register(org.apache.zookeeper.jmx.ZKMBeanInfo,org.apache.zookeeper.jmx.ZKMBeanInfo)>($r12, null);

        $r13 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getView()>();

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>();

        $r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r50 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r100 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r50;

        $l3 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $l4 = r100.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: long id>;

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label06;

        $r54 = new org.apache.zookeeper.server.quorum.LocalPeerBean;

        specialinvoke $r54.<org.apache.zookeeper.server.quorum.LocalPeerBean: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)>(r0);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LocalPeerBean jmxLocalPeerBean> = $r54;

     label03:
        $r55 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r56 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumBean jmxQuorumBean>;

        virtualinvoke $r55.<org.apache.zookeeper.jmx.MBeanRegistry: void register(org.apache.zookeeper.jmx.ZKMBeanInfo,org.apache.zookeeper.jmx.ZKMBeanInfo)>($r54, $r56);

     label04:
        goto label10;

     label05:
        $r98 := @caughtexception;

        $r99 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r99.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to register with JMX", $r98);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LocalPeerBean jmxLocalPeerBean> = null;

        goto label10;

     label06:
        $r51 = new org.apache.zookeeper.server.quorum.RemotePeerBean;

        specialinvoke $r51.<org.apache.zookeeper.server.quorum.RemotePeerBean: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer)>(r100);

     label07:
        $r52 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r53 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumBean jmxQuorumBean>;

        virtualinvoke $r52.<org.apache.zookeeper.jmx.MBeanRegistry: void register(org.apache.zookeeper.jmx.ZKMBeanInfo,org.apache.zookeeper.jmx.ZKMBeanInfo)>($r51, $r53);

     label08:
        goto label10;

     label09:
        $r96 := @caughtexception;

        $r97 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r97.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to register with JMX", $r96);

     label10:
        goto label02;

     label11:
        goto label13;

     label12:
        $r94 := @caughtexception;

        $r95 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r95.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to register with JMX", $r94);

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumBean jmxQuorumBean> = null;

     label13:
        $z2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: boolean running>;

        if $z2 == 0 goto label51;

        $r18 = <org.apache.zookeeper.server.quorum.QuorumPeer$2: int[] $SwitchMap$org$apache$zookeeper$server$quorum$QuorumPeer$ServerState>;

        $r19 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState getPeerState()>();

        $i1 = virtualinvoke $r19.<org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: int ordinal()>();

        $i2 = $r18[$i1];

        tableswitch($i2)
        {
            case 1: goto label14;
            case 2: goto label42;
            case 3: goto label34;
            case 4: goto label26;
            default: goto label50;
        };

     label14:
        $r39 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String)>("LOOKING");

        $z1 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("readonlymode.enabled");

        if $z1 == 0 goto label23;

        $r42 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String)>("Attempting to start ReadOnlyZooKeeperServer");

        $r43 = new org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer;

        $r45 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory>;

        $r44 = new org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder;

        specialinvoke $r44.<org.apache.zookeeper.server.ZooKeeperServer$BasicDataTreeBuilder: void <init>()>();

        $r46 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        specialinvoke $r43.<org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer: void <init>(org.apache.zookeeper.server.persistence.FileTxnSnapLog,org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.ZooKeeperServer$DataTreeBuilder,org.apache.zookeeper.server.ZKDatabase)>($r45, r0, $r44, $r46);

        $r47 = new org.apache.zookeeper.server.quorum.QuorumPeer$1;

        specialinvoke $r47.<org.apache.zookeeper.server.quorum.QuorumPeer$1: void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer)>(r0, $r43);

     label15:
        virtualinvoke $r47.<java.lang.Thread: void start()>();

        $r48 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election makeLEStrategy()>();

        $r49 = interfaceinvoke $r48.<org.apache.zookeeper.server.quorum.Election: org.apache.zookeeper.server.quorum.Vote lookForLeader()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentVote(org.apache.zookeeper.server.quorum.Vote)>($r49);

     label16:
        goto label56;

     label17:
        goto label22;

     label18:
        $r91 := @caughtexception;

        $r92 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r92.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r91);

        $r93 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r93);

        goto label57;

     label19:
        goto label22;

     label20:
        $r90 := @caughtexception;

        goto label58;

     label21:
        throw $r90;

     label22:
        goto label50;

     label23:
        $r40 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election makeLEStrategy()>();

        $r41 = interfaceinvoke $r40.<org.apache.zookeeper.server.quorum.Election: org.apache.zookeeper.server.quorum.Vote lookForLeader()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentVote(org.apache.zookeeper.server.quorum.Vote)>($r41);

     label24:
        goto label50;

     label25:
        $r87 := @caughtexception;

        $r88 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r88.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r87);

        $r89 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r89);

        goto label50;

     label26:
        $r20 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>("OBSERVING");

        $r21 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory>;

        $r22 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Observer makeObserver(org.apache.zookeeper.server.persistence.FileTxnSnapLog)>($r21);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setObserver(org.apache.zookeeper.server.quorum.Observer)>($r22);

        $r23 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Observer observer>;

        virtualinvoke $r23.<org.apache.zookeeper.server.quorum.Observer: void observeLeader()>();

     label27:
        goto label59;

     label28:
        goto label33;

     label29:
        $r83 := @caughtexception;

        $r84 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r84.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r83);

        goto label60;

     label30:
        goto label33;

     label31:
        $r80 := @caughtexception;

        goto label61;

     label32:
        throw $r80;

     label33:
        goto label50;

     label34:
        $r26 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>("FOLLOWING");

        $r27 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory>;

        $r28 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower makeFollower(org.apache.zookeeper.server.persistence.FileTxnSnapLog)>($r27);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setFollower(org.apache.zookeeper.server.quorum.Follower)>($r28);

        $r29 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        virtualinvoke $r29.<org.apache.zookeeper.server.quorum.Follower: void followLeader()>();

     label35:
        goto label62;

     label36:
        goto label41;

     label37:
        $r76 := @caughtexception;

        $r77 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r77.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r76);

        goto label63;

     label38:
        goto label41;

     label39:
        $r73 := @caughtexception;

        goto label64;

     label40:
        throw $r73;

     label41:
        goto label50;

     label42:
        $r32 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String)>("LEADING");

     label43:
        $r33 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory>;

        $r34 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader makeLeader(org.apache.zookeeper.server.persistence.FileTxnSnapLog)>($r33);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setLeader(org.apache.zookeeper.server.quorum.Leader)>($r34);

        $r35 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        virtualinvoke $r35.<org.apache.zookeeper.server.quorum.Leader: void lead()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setLeader(org.apache.zookeeper.server.quorum.Leader)>(null);

     label44:
        goto label65;

     label45:
        goto label50;

     label46:
        $r68 := @caughtexception;

        $r69 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r69.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r68);

        goto label67;

     label47:
        goto label50;

     label48:
        $r64 := @caughtexception;

        goto label69;

     label49:
        throw $r64;

     label50:
        goto label13;

     label51:
        goto label71;

     label52:
        goto label55;

     label53:
        $r61 := @caughtexception;

        goto label76;

     label54:
        throw $r61;

     label55:
        return;

     label56:
        virtualinvoke $r47.<java.lang.Thread: void interrupt()>();

        virtualinvoke $r43.<org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer: void shutdown()>();

        goto label17;

     label57:
        virtualinvoke $r47.<java.lang.Thread: void interrupt()>();

        virtualinvoke $r43.<org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer: void shutdown()>();

        goto label19;

     label58:
        virtualinvoke $r47.<java.lang.Thread: void interrupt()>();

        virtualinvoke $r43.<org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer: void shutdown()>();

        goto label21;

     label59:
        $r24 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Observer observer>;

        virtualinvoke $r24.<org.apache.zookeeper.server.quorum.Observer: void shutdown()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setObserver(org.apache.zookeeper.server.quorum.Observer)>(null);

        $r25 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r25);

        goto label28;

     label60:
        $r85 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Observer observer>;

        virtualinvoke $r85.<org.apache.zookeeper.server.quorum.Observer: void shutdown()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setObserver(org.apache.zookeeper.server.quorum.Observer)>(null);

        $r86 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r86);

        goto label30;

     label61:
        $r81 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Observer observer>;

        virtualinvoke $r81.<org.apache.zookeeper.server.quorum.Observer: void shutdown()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setObserver(org.apache.zookeeper.server.quorum.Observer)>(null);

        $r82 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r82);

        goto label32;

     label62:
        $r30 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        virtualinvoke $r30.<org.apache.zookeeper.server.quorum.Follower: void shutdown()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setFollower(org.apache.zookeeper.server.quorum.Follower)>(null);

        $r31 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r31);

        goto label36;

     label63:
        $r78 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        virtualinvoke $r78.<org.apache.zookeeper.server.quorum.Follower: void shutdown()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setFollower(org.apache.zookeeper.server.quorum.Follower)>(null);

        $r79 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r79);

        goto label38;

     label64:
        $r74 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        virtualinvoke $r74.<org.apache.zookeeper.server.quorum.Follower: void shutdown()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setFollower(org.apache.zookeeper.server.quorum.Follower)>(null);

        $r75 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r75);

        goto label40;

     label65:
        $r36 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        if $r36 == null goto label66;

        $r38 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        virtualinvoke $r38.<org.apache.zookeeper.server.quorum.Leader: void shutdown(java.lang.String)>("Forcing shutdown");

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setLeader(org.apache.zookeeper.server.quorum.Leader)>(null);

     label66:
        $r37 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r37);

        goto label45;

     label67:
        $r70 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        if $r70 == null goto label68;

        $r72 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        virtualinvoke $r72.<org.apache.zookeeper.server.quorum.Leader: void shutdown(java.lang.String)>("Forcing shutdown");

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setLeader(org.apache.zookeeper.server.quorum.Leader)>(null);

     label68:
        $r71 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r71);

        goto label47;

     label69:
        $r65 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        if $r65 == null goto label70;

        $r67 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        virtualinvoke $r67.<org.apache.zookeeper.server.quorum.Leader: void shutdown(java.lang.String)>("Forcing shutdown");

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setLeader(org.apache.zookeeper.server.quorum.Leader)>(null);

     label70:
        $r66 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r66);

        goto label49;

     label71:
        $r16 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String)>("QuorumPeer main thread exited");

     label72:
        $r17 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        virtualinvoke $r17.<org.apache.zookeeper.jmx.MBeanRegistry: void unregisterAll()>();

     label73:
        goto label75;

     label74:
        $r59 := @caughtexception;

        $r60 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r60.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to unregister with JMX", $r59);

     label75:
        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumBean jmxQuorumBean> = null;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LocalPeerBean jmxLocalPeerBean> = null;

        goto label52;

     label76:
        $r62 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r62.<org.slf4j.Logger: void warn(java.lang.String)>("QuorumPeer main thread exited");

     label77:
        $r63 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        virtualinvoke $r63.<org.apache.zookeeper.jmx.MBeanRegistry: void unregisterAll()>();

     label78:
        goto label80;

     label79:
        $r57 := @caughtexception;

        $r58 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r58.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to unregister with JMX", $r57);

     label80:
        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumBean jmxQuorumBean> = null;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LocalPeerBean jmxLocalPeerBean> = null;

        goto label54;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label01 to label11 with label12;
        catch java.lang.Exception from label15 to label16 with label18;
        catch java.lang.Throwable from label15 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Exception from label26 to label27 with label29;
        catch java.lang.Throwable from label26 to label28 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
        catch java.lang.Exception from label34 to label35 with label37;
        catch java.lang.Throwable from label34 to label36 with label39;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
        catch java.lang.Exception from label43 to label44 with label46;
        catch java.lang.Throwable from label43 to label45 with label48;
        catch java.lang.Throwable from label46 to label47 with label48;
        catch java.lang.Throwable from label48 to label49 with label48;
        catch java.lang.Throwable from label13 to label52 with label53;
        catch java.lang.Throwable from label53 to label54 with label53;
        catch java.lang.Throwable from label56 to label57 with label53;
        catch java.lang.Throwable from label57 to label58 with label53;
        catch java.lang.Throwable from label58 to label59 with label53;
        catch java.lang.Throwable from label59 to label60 with label53;
        catch java.lang.Throwable from label60 to label61 with label53;
        catch java.lang.Throwable from label61 to label62 with label53;
        catch java.lang.Throwable from label62 to label63 with label53;
        catch java.lang.Throwable from label63 to label64 with label53;
        catch java.lang.Throwable from label64 to label65 with label53;
        catch java.lang.Throwable from label65 to label67 with label53;
        catch java.lang.Throwable from label67 to label69 with label53;
        catch java.lang.Throwable from label69 to label71 with label53;
        catch java.lang.Exception from label72 to label73 with label74;
        catch java.lang.Exception from label77 to label78 with label79;
    }

    public void shutdown()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.slf4j.Logger $r12;
        org.apache.zookeeper.server.ZKDatabase $r6;
        org.apache.zookeeper.server.ServerCnxnFactory $r3;
        java.io.IOException $r11;
        java.net.DatagramSocket $r4, $r8;
        org.apache.zookeeper.server.quorum.Follower $r2, $r9;
        org.apache.zookeeper.server.quorum.Leader $r1, $r10;
        org.apache.zookeeper.server.quorum.Election $r5, $r7;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: boolean running> = 0;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        if $r1 == null goto label1;

        $r10 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        virtualinvoke $r10.<org.apache.zookeeper.server.quorum.Leader: void shutdown(java.lang.String)>("quorum Peer shutdown");

     label1:
        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        if $r2 == null goto label2;

        $r9 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        virtualinvoke $r9.<org.apache.zookeeper.server.quorum.Follower: void shutdown()>();

     label2:
        $r3 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        virtualinvoke $r3.<org.apache.zookeeper.server.ServerCnxnFactory: void shutdown()>();

        $r4 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.DatagramSocket udpSocket>;

        if $r4 == null goto label3;

        $r8 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.DatagramSocket udpSocket>;

        virtualinvoke $r8.<java.net.DatagramSocket: void close()>();

     label3:
        $r5 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election getElectionAlg()>();

        if $r5 == null goto label4;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void interrupt()>();

        $r7 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election getElectionAlg()>();

        interfaceinvoke $r7.<org.apache.zookeeper.server.quorum.Election: void shutdown()>();

     label4:
        $r6 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb>;

        virtualinvoke $r6.<org.apache.zookeeper.server.ZKDatabase: void close()>();

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Error closing logs ", $r11);

     label7:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public java.util.Map getView()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.util.Map getVotingView()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.util.HashMap $r0;
        long $l0;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r7, $r8;
        java.lang.Long $r9;
        java.util.Map $r2;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer r6;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getView()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r5;

        $r8 = r6.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType type>;

        $r7 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        if $r8 != $r7 goto label2;

        $l0 = r6.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: long id>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r6);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public java.util.Map getObservingView()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.util.HashMap $r0;
        long $l0;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r7, $r8;
        java.lang.Long $r9;
        java.util.Map $r2;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer r6;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getView()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r5;

        $r8 = r6.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType type>;

        $r7 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType OBSERVER>;

        if $r8 != $r7 goto label2;

        $l0 = r6.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: long id>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r6);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public boolean viewContains(java.lang.Long)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        java.lang.Long r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: java.lang.Long;

        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.String[] getQuorumPeers()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        java.lang.Throwable $r24;
        java.net.Socket $r8, $r16, $r17;
        java.lang.Object[] $r5;
        java.net.SocketAddress $r9, $r18;
        java.lang.String[] $r4, $r6;
        java.util.ArrayList $r0;
        java.lang.String $r10, $r19, r25;
        boolean $z0, $z1;
        java.util.Iterator $r13;
        org.apache.zookeeper.server.quorum.LearnerHandler r15;
        org.apache.zookeeper.server.quorum.Follower $r3, $r7;
        org.apache.zookeeper.server.quorum.Leader $r2, $r11, $r20;
        java.util.List $r12;
        java.lang.Object $r14;
        java.lang.StringBuilder $r21, $r22, $r23;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        entermonitor r1;

     label01:
        $r2 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        if $r2 == null goto label06;

        $r11 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        $r12 = virtualinvoke $r11.<org.apache.zookeeper.server.quorum.Leader: java.util.List getLearners()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.zookeeper.server.quorum.LearnerHandler) $r14;

        $r16 = virtualinvoke r15.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket getSocket()>();

        if $r16 == null goto label04;

        $r17 = virtualinvoke r15.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket getSocket()>();

        $r18 = virtualinvoke $r17.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        r25 = $r19;

        $r20 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Leader leader>;

        $z1 = virtualinvoke $r20.<org.apache.zookeeper.server.quorum.Leader: boolean isLearnerSynced(org.apache.zookeeper.server.quorum.LearnerHandler)>(r15);

        if $z1 == 0 goto label03;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r25);

     label04:
        goto label02;

     label05:
        goto label07;

     label06:
        $r3 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        if $r3 == null goto label07;

        $r7 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Follower follower>;

        $r8 = $r7.<org.apache.zookeeper.server.quorum.Follower: java.net.Socket sock>;

        $r9 = virtualinvoke $r8.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r24 := @caughtexception;

        exitmonitor r1;

     label10:
        throw $r24;

     label11:
        $r4 = newarray (java.lang.String)[0];

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        return $r6;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.String getServerState()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumPeer$ServerState $r2;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = <org.apache.zookeeper.server.quorum.QuorumPeer$2: int[] $SwitchMap$org$apache$zookeeper$server$quorum$QuorumPeer$ServerState>;

        $r2 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState getPeerState()>();

        $i0 = virtualinvoke $r2.<org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        return "leaderelection";

     label2:
        return "leading";

     label3:
        return "following";

     label4:
        return "observing";

     label5:
        return "unknown";
    }

    public long getMyid()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $l0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        return $l0;
    }

    public void setMyid(long)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        long l0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid> = l0;

        return;
    }

    public int getTickTime()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        return $i0;
    }

    public void setTickTime(int)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r5;
        org.slf4j.Logger $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;

        r5 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        i0 := @parameter0: int;

        $r1 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tickTime set to ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r4);

        r5.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime> = i0;

        return;
    }

    public int getMaxClientCnxnsPerHost()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0, $i2;
        org.apache.zookeeper.server.ServerCnxnFactory $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory getCnxnFactory()>();

        if $r1 != null goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        $i0 = virtualinvoke $r1.<org.apache.zookeeper.server.ServerCnxnFactory: int getMaxClientCnxnsPerHost()>();

        return $i0;
    }

    public int getMinSessionTimeout()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int minSessionTimeout>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $i2 = $i1 * 2;

        goto label2;

     label1:
        $i2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int minSessionTimeout>;

     label2:
        return $i2;
    }

    public void setMinSessionTimeout(int)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r5;
        org.slf4j.Logger $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;

        r5 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        i0 := @parameter0: int;

        $r1 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minSessionTimeout set to ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r4);

        r5.<org.apache.zookeeper.server.quorum.QuorumPeer: int minSessionTimeout> = i0;

        return;
    }

    public int getMaxSessionTimeout()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int maxSessionTimeout>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $i2 = $i1 * 20;

        goto label2;

     label1:
        $i2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int maxSessionTimeout>;

     label2:
        return $i2;
    }

    public void setMaxSessionTimeout(int)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r5;
        org.slf4j.Logger $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;

        r5 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        i0 := @parameter0: int;

        $r1 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxSessionTimeout set to ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r4);

        r5.<org.apache.zookeeper.server.quorum.QuorumPeer: int maxSessionTimeout> = i0;

        return;
    }

    public int getInitLimit()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int initLimit>;

        return $i0;
    }

    public void setInitLimit(int)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r5;
        org.slf4j.Logger $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;

        r5 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        i0 := @parameter0: int;

        $r1 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initLimit set to ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r4);

        r5.<org.apache.zookeeper.server.quorum.QuorumPeer: int initLimit> = i0;

        return;
    }

    public int getTick()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick>;

        return $i0;
    }

    public org.apache.zookeeper.server.quorum.flexible.QuorumVerifier getQuorumVerifier()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumConfig>;

        return $r1;
    }

    public void setQuorumVerifier(org.apache.zookeeper.server.quorum.flexible.QuorumVerifier)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumConfig> = r1;

        return;
    }

    public org.apache.zookeeper.server.quorum.Election getElectionAlg()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.Election $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Election electionAlg>;

        return $r1;
    }

    public int getSyncLimit()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int syncLimit>;

        return $i0;
    }

    public void setSyncLimit(int)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int i0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int syncLimit> = i0;

        return;
    }

    public int getElectionType()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int electionType>;

        return $i0;
    }

    public void setElectionType(int)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int i0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: int electionType> = i0;

        return;
    }

    public org.apache.zookeeper.server.ServerCnxnFactory getCnxnFactory()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.ServerCnxnFactory $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        return $r1;
    }

    public void setCnxnFactory(org.apache.zookeeper.server.ServerCnxnFactory)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.ServerCnxnFactory r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.ServerCnxnFactory;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory> = r1;

        return;
    }

    public void setQuorumPeers(java.util.Map)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        java.util.Map r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers> = r1;

        return;
    }

    public int getClientPort()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        int $i0;
        org.apache.zookeeper.server.ServerCnxnFactory $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        $i0 = virtualinvoke $r1.<org.apache.zookeeper.server.ServerCnxnFactory: int getLocalPort()>();

        return $i0;
    }

    public void setClientPortAddress(java.net.InetSocketAddress)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        java.net.InetSocketAddress r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: java.net.InetSocketAddress;

        return;
    }

    public void setTxnFactory(org.apache.zookeeper.server.persistence.FileTxnSnapLog)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory> = r1;

        return;
    }

    public org.apache.zookeeper.server.persistence.FileTxnSnapLog getTxnFactory()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory>;

        return $r1;
    }

    public void setZKDatabase(org.apache.zookeeper.server.ZKDatabase)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.ZKDatabase r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r1 := @parameter0: org.apache.zookeeper.server.ZKDatabase;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ZKDatabase zkDb> = r1;

        return;
    }

    public void setRunning(boolean)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        boolean z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        z0 := @parameter0: boolean;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: boolean running> = z0;

        return;
    }

    public boolean isRunning()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $z0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: boolean running>;

        return $z0;
    }

    public org.apache.zookeeper.server.quorum.QuorumCnxManager getQuorumCnxManager()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        org.apache.zookeeper.server.quorum.QuorumCnxManager $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumCnxManager qcm>;

        return $r1;
    }

    private long readLongFromFile(java.lang.String) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        java.lang.Throwable $r8;
        long $l0;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog $r2;
        java.lang.String r4, $r7, $r16, r17;
        java.lang.NumberFormatException $r9;
        java.io.IOException $r10;
        java.io.File $r0, $r3;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15;
        java.io.BufferedReader $r5;
        java.io.FileReader $r6;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        $r2 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory>;

        $r3 = virtualinvoke $r2.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File getSnapDir()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r4);

        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.FileReader;

        specialinvoke $r6.<java.io.FileReader: void <init>(java.io.File)>($r0);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

        r17 = "";

     label1:
        $r7 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

        r17 = $r7;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

        goto label6;

     label2:
        return $l0;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label4:
        $r8 := @caughtexception;

        goto label7;

     label5:
        throw $r8;

     label6:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        goto label2;

     label7:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        goto label5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    private void writeLongToFile(java.lang.String, long) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        java.lang.Throwable $r9;
        long l0;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog $r2;
        java.io.OutputStreamWriter $r7;
        java.lang.String r4, $r8, $r15;
        boolean z0;
        org.slf4j.Logger $r12;
        java.io.BufferedWriter $r6;
        java.io.IOException $r10;
        java.io.File $r0, $r3;
        org.apache.zookeeper.common.AtomicFileOutputStream $r5;
        java.lang.StringBuilder $r11, $r13, $r14;

        r1 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        r4 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r0 = new java.io.File;

        $r2 = r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.persistence.FileTxnSnapLog logFactory>;

        $r3 = virtualinvoke $r2.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File getSnapDir()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r4);

        $r5 = new org.apache.zookeeper.common.AtomicFileOutputStream;

        specialinvoke $r5.<org.apache.zookeeper.common.AtomicFileOutputStream: void <init>(java.io.File)>($r0);

        $r6 = new java.io.BufferedWriter;

        $r7 = new java.io.OutputStreamWriter;

        specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r5);

        specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r7);

        z0 = 0;

     label01:
        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>($r8);

        virtualinvoke $r6.<java.io.BufferedWriter: void flush()>();

        virtualinvoke $r5.<org.apache.zookeeper.common.AtomicFileOutputStream: void flush()>();

     label02:
        goto label08;

     label03:
        goto label07;

     label04:
        $r10 := @caughtexception;

        $r12 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write new file ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r15, $r10);

        z0 = 1;

        virtualinvoke $r5.<org.apache.zookeeper.common.AtomicFileOutputStream: void abort()>();

        throw $r10;

     label05:
        $r9 := @caughtexception;

        goto label10;

     label06:
        throw $r9;

     label07:
        return;

     label08:
        if 0 != 0 goto label09;

        virtualinvoke $r5.<org.apache.zookeeper.common.AtomicFileOutputStream: void close()>();

     label09:
        goto label03;

     label10:
        if z0 != 0 goto label11;

        virtualinvoke $r5.<org.apache.zookeeper.common.AtomicFileOutputStream: void close()>();

     label11:
        goto label06;

        catch java.io.IOException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label03 with label05;
        catch java.lang.Throwable from label04 to label06 with label05;
    }

    public long getCurrentEpoch() throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        byte $b1;
        long $l0, $l2, $l3;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $l0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l3 = specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long readLongFromFile(java.lang.String)>("currentEpoch");

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch> = $l3;

     label1:
        $l2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch>;

        return $l2;
    }

    public long getAcceptedEpoch() throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        byte $b1;
        long $l0, $l2, $l3;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        $l0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l3 = specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long readLongFromFile(java.lang.String)>("acceptedEpoch");

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch> = $l3;

     label1:
        $l2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch>;

        return $l2;
    }

    public void setCurrentEpoch(long) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        long l0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long currentEpoch> = l0;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void writeLongToFile(java.lang.String,long)>("currentEpoch", l0);

        return;
    }

    public void setAcceptedEpoch(long) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        long l0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long acceptedEpoch> = l0;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPeer: void writeLongToFile(java.lang.String,long)>("acceptedEpoch", l0);

        return;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG>;

        return $r0;
    }

    static long access$100(org.apache.zookeeper.server.quorum.QuorumPeer)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r0;
        long $l0;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPeer;

        $l0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer: long myid>;

        return $l0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.zookeeper.server.quorum.QuorumPeer: java.lang.String ACCEPTED_EPOCH_FILENAME> = "acceptedEpoch";

        <org.apache.zookeeper.server.quorum.QuorumPeer: java.lang.String CURRENT_EPOCH_FILENAME> = "currentEpoch";

        <org.apache.zookeeper.server.quorum.QuorumPeer: long OBSERVER_ID> = 9223372036854775807L;

        $r0 = class "Lorg/apache/zookeeper/server/quorum/QuorumPeer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.zookeeper.server.quorum.QuorumPeer: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/QuorumPeer;");

        <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger LOG> = $r1;

        return;
    }
}
