public class org.bouncycastle.crypto.engines.RC532Engine extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private int _noRounds;
    private int[] _S;
    private static final int P32;
    private static final int Q32;
    private boolean forEncryption;

    public void <init>()
    {
        org.bouncycastle.crypto.engines.RC532Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.engines.RC532Engine: int _noRounds> = 12;

        r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S> = null;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.RC532Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        return "RC5-32";
    }

    public int getBlockSize()
    {
        org.bouncycastle.crypto.engines.RC532Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        return 8;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r9, $r10;
        org.bouncycastle.crypto.engines.RC532Engine r8;
        int $i0;
        java.lang.String $r5, $r7;
        org.bouncycastle.crypto.params.KeyParameter r12;
        org.bouncycastle.crypto.CipherParameters r0;
        boolean $z0, $z1, z2;
        org.bouncycastle.crypto.params.RC5Parameters r11;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;

        r8 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        z2 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.RC5Parameters;

        if $z0 == 0 goto label1;

        r11 = (org.bouncycastle.crypto.params.RC5Parameters) r0;

        $i0 = virtualinvoke r11.<org.bouncycastle.crypto.params.RC5Parameters: int getRounds()>();

        r8.<org.bouncycastle.crypto.engines.RC532Engine: int _noRounds> = $i0;

        $r10 = virtualinvoke r11.<org.bouncycastle.crypto.params.RC5Parameters: byte[] getKey()>();

        specialinvoke r8.<org.bouncycastle.crypto.engines.RC532Engine: void setKey(byte[])>($r10);

        goto label3;

     label1:
        $z1 = r0 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z1 == 0 goto label2;

        r12 = (org.bouncycastle.crypto.params.KeyParameter) r0;

        $r9 = virtualinvoke r12.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        specialinvoke r8.<org.bouncycastle.crypto.engines.RC532Engine: void setKey(byte[])>($r9);

        goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to RC532 init - ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label3:
        r8.<org.bouncycastle.crypto.engines.RC532Engine: boolean forEncryption> = z2;

        return;
    }

    public int processBlock(byte[], int, byte[], int)
    {
        byte[] r1, r2;
        int i0, i1, $i2;
        org.bouncycastle.crypto.engines.RC532Engine r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.RC532Engine: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i2 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int encryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

        goto label2;

     label1:
        $i2 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int decryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

     label2:
        return $i2;
    }

    public void reset()
    {
        org.bouncycastle.crypto.engines.RC532Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        return;
    }

    private void setKey(byte[])
    {
        byte[] r0;
        org.bouncycastle.crypto.engines.RC532Engine r2;
        byte $b29;
        int[] r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        short $s32, $s44;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i33, $i34, $i35, i36, i37, i38, i39, i40, i41, i42, i43, $i45;

        r2 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = $i0 + 3;

        $i2 = $i1 / 4;

        r1 = newarray (int)[$i2];

        i36 = 0;

     label1:
        $i3 = lengthof r0;

        if i36 == $i3 goto label2;

        $i28 = i36 / 4;

        $i34 = r1[$i28];

        $b29 = r0[i36];

        $s44 = (short) $b29;

        $s32 = $s44 & 255;

        $i30 = i36 % 4;

        $i31 = 8 * $i30;

        $i45 = (int) $s32;

        $i33 = $i45 << $i31;

        $i35 = $i34 + $i33;

        r1[$i28] = $i35;

        i36 = i36 + 1;

        goto label1;

     label2:
        $i4 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int _noRounds>;

        $i5 = $i4 + 1;

        $i6 = 2 * $i5;

        $r3 = newarray (int)[$i6];

        r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S> = $r3;

        $r4 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $r4[0] = -1209970333;

        i37 = 1;

     label3:
        $r5 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i7 = lengthof $r5;

        if i37 >= $i7 goto label4;

        $r12 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $r11 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i25 = i37 - 1;

        $i26 = $r11[$i25];

        $i27 = $i26 + -1640531527;

        $r12[i37] = $i27;

        i37 = i37 + 1;

        goto label3;

     label4:
        $i9 = lengthof r1;

        $r6 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i8 = lengthof $r6;

        if $i9 <= $i8 goto label5;

        $i24 = lengthof r1;

        i38 = 3 * $i24;

        goto label6;

     label5:
        $r7 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i10 = lengthof $r7;

        i38 = 3 * $i10;

     label6:
        i39 = 0;

        i40 = 0;

        i41 = 0;

        i42 = 0;

        i43 = 0;

     label7:
        if i43 >= i38 goto label8;

        $r9 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $r8 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i11 = $r8[i41];

        $i12 = $i11 + i39;

        $i13 = $i12 + i40;

        $i14 = specialinvoke r2.<org.bouncycastle.crypto.engines.RC532Engine: int rotateLeft(int,int)>($i13, 3);

        $r9[i41] = $i14;

        i39 = $i14;

        $i15 = r1[i42];

        $i16 = $i15 + $i14;

        $i18 = $i16 + i40;

        $i17 = $i14 + i40;

        $i19 = specialinvoke r2.<org.bouncycastle.crypto.engines.RC532Engine: int rotateLeft(int,int)>($i18, $i17);

        r1[i42] = $i19;

        i40 = $i19;

        $i21 = i41 + 1;

        $r10 = r2.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i20 = lengthof $r10;

        i41 = $i21 % $i20;

        $i23 = i42 + 1;

        $i22 = lengthof r1;

        i42 = $i23 % $i22;

        i43 = i43 + 1;

        goto label7;

     label8:
        return;
    }

    private int encryptBlock(byte[], int, byte[], int)
    {
        byte[] r1, r4;
        org.bouncycastle.crypto.engines.RC532Engine r0;
        int[] $r2, $r3, $r5, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r4 := @parameter2: byte[];

        i7 := @parameter3: int;

        $i1 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int bytesToWord(byte[],int)>(r1, i0);

        $r2 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i2 = $r2[0];

        i18 = $i1 + $i2;

        $i3 = i0 + 4;

        $i4 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int bytesToWord(byte[],int)>(r1, $i3);

        $r3 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i5 = $r3[1];

        i19 = $i4 + $i5;

        i20 = 1;

     label1:
        $i6 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int _noRounds>;

        if i20 > $i6 goto label2;

        $i9 = i18 ^ i19;

        $i10 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int rotateLeft(int,int)>($i9, i19);

        $r5 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i11 = 2 * i20;

        $i12 = $r5[$i11];

        i18 = $i10 + $i12;

        $i13 = i19 ^ i18;

        $i14 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int rotateLeft(int,int)>($i13, i18);

        $r6 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i15 = 2 * i20;

        $i16 = $i15 + 1;

        $i17 = $r6[$i16];

        i19 = $i14 + $i17;

        i20 = i20 + 1;

        goto label1;

     label2:
        specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: void wordToBytes(int,byte[],int)>(i18, r4, i7);

        $i8 = i7 + 4;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: void wordToBytes(int,byte[],int)>(i19, r4, $i8);

        return 8;
    }

    private int decryptBlock(byte[], int, byte[], int)
    {
        byte[] r1, r3;
        org.bouncycastle.crypto.engines.RC532Engine r0;
        int[] $r2, $r4, $r5, $r6;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, $i21;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r3 := @parameter2: byte[];

        i3 := @parameter3: int;

        i17 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int bytesToWord(byte[],int)>(r1, i0);

        $i1 = i0 + 4;

        i18 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int bytesToWord(byte[],int)>(r1, $i1);

        i19 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int _noRounds>;

     label1:
        if i19 < 1 goto label2;

        $r5 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i8 = 2 * i19;

        $i9 = $i8 + 1;

        $i10 = $r5[$i9];

        $i11 = i18 - $i10;

        $i12 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int rotateRight(int,int)>($i11, i17);

        i18 = $i12 ^ i17;

        $r6 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i13 = 2 * i19;

        $i14 = $r6[$i13];

        $i15 = i17 - $i14;

        $i16 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: int rotateRight(int,int)>($i15, i18);

        i17 = $i16 ^ i18;

        $i21 = (int) -1;

        i19 = i19 + $i21;

        goto label1;

     label2:
        $r2 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i2 = $r2[0];

        $i4 = i17 - $i2;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: void wordToBytes(int,byte[],int)>($i4, r3, i3);

        $r4 = r0.<org.bouncycastle.crypto.engines.RC532Engine: int[] _S>;

        $i5 = $r4[1];

        $i7 = i18 - $i5;

        $i6 = i3 + 4;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RC532Engine: void wordToBytes(int,byte[],int)>($i7, r3, $i6);

        return 8;
    }

    private int rotateLeft(int, int)
    {
        org.bouncycastle.crypto.engines.RC532Engine r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 & 31;

        $i6 = i0 << $i2;

        $i3 = i1 & 31;

        $i4 = 32 - $i3;

        $i5 = i0 >>> $i4;

        $i7 = $i6 | $i5;

        return $i7;
    }

    private int rotateRight(int, int)
    {
        org.bouncycastle.crypto.engines.RC532Engine r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 & 31;

        $i6 = i0 >>> $i2;

        $i3 = i1 & 31;

        $i4 = 32 - $i3;

        $i5 = i0 << $i4;

        $i7 = $i6 | $i5;

        return $i7;
    }

    private int bytesToWord(byte[], int)
    {
        byte[] r0;
        org.bouncycastle.crypto.engines.RC532Engine r1;
        short $s4, $s6, $s9, $s14, $s18, $s19, $s22, $s24;
        byte $b1, $b3, $b8, $b13;
        int i0, $i2, $i5, $i7, $i10, $i11, $i12, $i15, $i16, $i17, $i20, $i21, $i23, $i25;

        r1 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s18 = (short) $b1;

        $s6 = $s18 & 255;

        $i2 = i0 + 1;

        $b3 = r0[$i2];

        $s19 = (short) $b3;

        $s4 = $s19 & 255;

        $i20 = (int) $s4;

        $i5 = $i20 << 8;

        $i21 = (int) $s6;

        $i11 = $i21 | $i5;

        $i7 = i0 + 2;

        $b8 = r0[$i7];

        $s22 = (short) $b8;

        $s9 = $s22 & 255;

        $i23 = (int) $s9;

        $i10 = $i23 << 16;

        $i16 = $i11 | $i10;

        $i12 = i0 + 3;

        $b13 = r0[$i12];

        $s24 = (short) $b13;

        $s14 = $s24 & 255;

        $i25 = (int) $s14;

        $i15 = $i25 << 24;

        $i17 = $i16 | $i15;

        return $i17;
    }

    private void wordToBytes(int, byte[], int)
    {
        byte[] r0;
        org.bouncycastle.crypto.engines.RC532Engine r1;
        byte $b2, $b4, $b7, $b10;
        int i0, i1, $i3, $i5, $i6, $i8, $i9, $i11;

        r1 := @this: org.bouncycastle.crypto.engines.RC532Engine;

        i1 := @parameter0: int;

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        $b2 = (byte) i1;

        r0[i0] = $b2;

        $i5 = i0 + 1;

        $i3 = i1 >> 8;

        $b4 = (byte) $i3;

        r0[$i5] = $b4;

        $i8 = i0 + 2;

        $i6 = i1 >> 16;

        $b7 = (byte) $i6;

        r0[$i8] = $b7;

        $i11 = i0 + 3;

        $i9 = i1 >> 24;

        $b10 = (byte) $i9;

        r0[$i11] = $b10;

        return;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.engines.RC532Engine: int Q32> = -1640531527;

        <org.bouncycastle.crypto.engines.RC532Engine: int P32> = -1209970333;

        return;
    }
}
