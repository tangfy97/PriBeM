public class org.eclipse.jetty.util.thread.ShutdownThread extends java.lang.Thread
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private static final org.eclipse.jetty.util.thread.ShutdownThread _thread;
    private boolean _hooked;
    private final java.util.List _lifeCycles;

    private void <init>()
    {
        org.eclipse.jetty.util.thread.ShutdownThread r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: org.eclipse.jetty.util.thread.ShutdownThread;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.eclipse.jetty.util.thread.ShutdownThread: java.util.List _lifeCycles> = $r1;

        return;
    }

    private synchronized void hook()
    {
        java.lang.Object[] $r4;
        java.lang.Runtime $r1;
        org.eclipse.jetty.util.log.Logger $r3, $r5;
        java.lang.Exception $r2;
        org.eclipse.jetty.util.thread.ShutdownThread r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.thread.ShutdownThread;

     label1:
        $z0 = r0.<org.eclipse.jetty.util.thread.ShutdownThread: boolean _hooked>;

        if $z0 != 0 goto label2;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>(r0);

     label2:
        r0.<org.eclipse.jetty.util.thread.ShutdownThread: boolean _hooked> = 1;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        $r3 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r2);

        $r5 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.log.Logger LOG>;

        $r4 = newarray (java.lang.Object)[0];

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>("shutdown already commenced", $r4);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private synchronized void unhook()
    {
        java.lang.Object[] $r4;
        java.lang.Runtime $r1;
        org.eclipse.jetty.util.log.Logger $r3, $r5;
        java.lang.Exception $r2;
        org.eclipse.jetty.util.thread.ShutdownThread r0;

        r0 := @this: org.eclipse.jetty.util.thread.ShutdownThread;

     label1:
        r0.<org.eclipse.jetty.util.thread.ShutdownThread: boolean _hooked> = 0;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: boolean removeShutdownHook(java.lang.Thread)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r2);

        $r5 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.log.Logger LOG>;

        $r4 = newarray (java.lang.Object)[0];

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("shutdown already commenced", $r4);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.eclipse.jetty.util.thread.ShutdownThread getInstance()
    {
        org.eclipse.jetty.util.thread.ShutdownThread $r0;

        $r0 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        return $r0;
    }

    public static synchronized transient void register(org.eclipse.jetty.util.component.LifeCycle[])
    {
        org.eclipse.jetty.util.thread.ShutdownThread $r0, $r4, $r6;
        java.util.List $r2, $r3, $r5;
        org.eclipse.jetty.util.component.LifeCycle[] r1;
        int $i0;

        r1 := @parameter0: org.eclipse.jetty.util.component.LifeCycle[];

        $r0 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        $r2 = $r0.<org.eclipse.jetty.util.thread.ShutdownThread: java.util.List _lifeCycles>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r4 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        $r5 = $r4.<org.eclipse.jetty.util.thread.ShutdownThread: java.util.List _lifeCycles>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r6 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        specialinvoke $r6.<org.eclipse.jetty.util.thread.ShutdownThread: void hook()>();

     label1:
        return;
    }

    public static synchronized transient void register(int, org.eclipse.jetty.util.component.LifeCycle[])
    {
        org.eclipse.jetty.util.thread.ShutdownThread $r0, $r4, $r6;
        java.util.List $r2, $r3, $r5;
        org.eclipse.jetty.util.component.LifeCycle[] r1;
        int i0, $i1;

        i0 := @parameter0: int;

        r1 := @parameter1: org.eclipse.jetty.util.component.LifeCycle[];

        $r0 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        $r2 = $r0.<org.eclipse.jetty.util.thread.ShutdownThread: java.util.List _lifeCycles>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, $r3);

        $r4 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        $r5 = $r4.<org.eclipse.jetty.util.thread.ShutdownThread: java.util.List _lifeCycles>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 <= 0 goto label1;

        $r6 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        specialinvoke $r6.<org.eclipse.jetty.util.thread.ShutdownThread: void hook()>();

     label1:
        return;
    }

    public static synchronized void deregister(org.eclipse.jetty.util.component.LifeCycle)
    {
        java.util.List $r2, $r4;
        org.eclipse.jetty.util.component.LifeCycle r1;
        int $i0;
        org.eclipse.jetty.util.thread.ShutdownThread $r0, $r3, $r5;

        r1 := @parameter0: org.eclipse.jetty.util.component.LifeCycle;

        $r0 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        $r2 = $r0.<org.eclipse.jetty.util.thread.ShutdownThread: java.util.List _lifeCycles>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $r3 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        $r4 = $r3.<org.eclipse.jetty.util.thread.ShutdownThread: java.util.List _lifeCycles>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        specialinvoke $r5.<org.eclipse.jetty.util.thread.ShutdownThread: void unhook()>();

     label1:
        return;
    }

    public void run()
    {
        org.eclipse.jetty.util.component.Destroyable $r5;
        java.lang.Object[] $r6, $r8;
        org.eclipse.jetty.util.component.LifeCycle r4;
        org.eclipse.jetty.util.thread.ShutdownThread $r0, r12;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        java.lang.Exception $r10;
        java.util.List $r1;
        java.lang.Object $r3;
        org.eclipse.jetty.util.log.Logger $r7, $r9, $r11;

        r12 := @this: org.eclipse.jetty.util.thread.ShutdownThread;

        $r0 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread>;

        $r1 = $r0.<org.eclipse.jetty.util.thread.ShutdownThread: java.util.List _lifeCycles>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.util.component.LifeCycle) $r3;

     label2:
        $z1 = interfaceinvoke r4.<org.eclipse.jetty.util.component.LifeCycle: boolean isStarted()>();

        if $z1 == 0 goto label3;

        interfaceinvoke r4.<org.eclipse.jetty.util.component.LifeCycle: void stop()>();

        $r9 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.log.Logger LOG>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r4;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Stopped {}", $r8);

     label3:
        $z2 = r4 instanceof org.eclipse.jetty.util.component.Destroyable;

        if $z2 == 0 goto label4;

        $r5 = (org.eclipse.jetty.util.component.Destroyable) r4;

        interfaceinvoke $r5.<org.eclipse.jetty.util.component.Destroyable: void destroy()>();

        $r7 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.log.Logger LOG>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r4;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Destroyed {}", $r6);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r10);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;
        org.eclipse.jetty.util.thread.ShutdownThread $r1;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/util/thread/ShutdownThread;");

        <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = new org.eclipse.jetty.util.thread.ShutdownThread;

        specialinvoke $r1.<org.eclipse.jetty.util.thread.ShutdownThread: void <init>()>();

        <org.eclipse.jetty.util.thread.ShutdownThread: org.eclipse.jetty.util.thread.ShutdownThread _thread> = $r1;

        return;
    }
}
