public class org.apache.fontbox.cff.Type1FontFormatter extends java.lang.Object
{

    private void <init>()
    {
        org.apache.fontbox.cff.Type1FontFormatter r0;

        r0 := @this: org.apache.fontbox.cff.Type1FontFormatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] format(org.apache.fontbox.cff.CFFFont) throws java.io.IOException
    {
        org.apache.fontbox.cff.CFFFont r1;
        byte[] $r2;
        org.apache.fontbox.cff.DataOutput $r0;

        r1 := @parameter0: org.apache.fontbox.cff.CFFFont;

        $r0 = new org.apache.fontbox.cff.DataOutput;

        specialinvoke $r0.<org.apache.fontbox.cff.DataOutput: void <init>()>();

        staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: void printFont(org.apache.fontbox.cff.CFFFont,org.apache.fontbox.cff.DataOutput)>(r1, $r0);

        $r2 = virtualinvoke $r0.<org.apache.fontbox.cff.DataOutput: byte[] getBytes()>();

        return $r2;
    }

    private static void printFont(org.apache.fontbox.cff.CFFFont, org.apache.fontbox.cff.DataOutput) throws java.io.IOException
    {
        org.apache.fontbox.cff.CFFFont r3;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r10;
        java.lang.Object $r7;
        java.lang.String $r4, $r9, $r11;
        org.apache.fontbox.cff.DataOutput r0;

        r3 := @parameter0: org.apache.fontbox.cff.CFFFont;

        r0 := @parameter1: org.apache.fontbox.cff.DataOutput;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%!FontType1-1.0 ");

        $r4 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("version");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r9);

        staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: void printFontDictionary(org.apache.fontbox.cff.CFFFont,org.apache.fontbox.cff.DataOutput)>(r3, r0);

        i0 = 0;

     label1:
        if i0 >= 8 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label2:
        if i1 >= 64 goto label3;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        i1 = i1 + 1;

        goto label2;

     label3:
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r11);

        i0 = i0 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("cleartomark");

        return;
    }

    private static void printFontDictionary(org.apache.fontbox.cff.CFFFont, org.apache.fontbox.cff.DataOutput) throws java.io.IOException
    {
        byte[] $r94, $r95;
        org.apache.fontbox.cff.CFFFont$Mapping r107;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r44, $r45, $r47, $r48, $r50, $r51, $r53, $r54, $r56, $r57, $r59, $r60, $r62, $r63, $r65, $r66, $r71, $r72, $r75, $r76, $r78, $r79, $r82, $r83, $r85, $r86, $r88, $r89, $r99, $r100, $r101, $r102, $r104, $r105;
        java.lang.String $r7, $r13, $r19, $r25, $r31, $r37, $r43, $r49, $r55, $r58, $r61, $r67, $r74, $r77, $r81, $r84, $r90, $r96, $r97, $r103, $r106;
        java.text.DecimalFormatSymbols $r69;
        org.apache.fontbox.cff.CFFFont r3;
        java.util.Locale $r70;
        boolean $z0;
        java.util.Collection $r91;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.util.Iterator $r92;
        java.text.DecimalFormat $r68;
        java.lang.Object $r4, $r10, $r16, $r22, $r28, $r34, $r40, $r46, $r52, $r64, $r73, $r80, $r87, $r98;
        org.apache.fontbox.cff.DataOutput r0, $r93;

        r3 := @parameter0: org.apache.fontbox.cff.CFFFont;

        r0 := @parameter1: org.apache.fontbox.cff.DataOutput;

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("10 dict begin");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("/FontInfo 10 dict dup begin");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/version (");

        $r4 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("version");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") readonly def");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Notice (");

        $r10 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("Notice");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") readonly def");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/FullName (");

        $r16 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("FullName");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") readonly def");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/FamilyName (");

        $r22 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("FamilyName");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") readonly def");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Weight (");

        $r28 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("Weight");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") readonly def");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ItalicAngle ");

        $r34 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("ItalicAngle");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/isFixedPitch ");

        $r40 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("isFixedPitch");

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r43);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/UnderlinePosition ");

        $r46 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("UnderlinePosition");

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r49);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/UnderlineThickness ");

        $r52 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("UnderlineThickness");

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r55);

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("end readonly def");

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/FontName /");

        $r58 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.String getName()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r61);

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/PaintType ");

        $r64 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("PaintType");

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r67);

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("/FontType 1 def");

        $r68 = new java.text.DecimalFormat;

        $r69 = new java.text.DecimalFormatSymbols;

        $r70 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r69.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r70);

        specialinvoke $r68.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>("0.########", $r69);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/FontMatrix ");

        $r73 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("FontMatrix");

        $r74 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatArray(java.lang.Object,java.text.NumberFormat,boolean)>($r73, $r68, 0);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" readonly def");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r77);

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/FontBBox ");

        $r80 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("FontBBox");

        $r81 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatArray(java.lang.Object,boolean)>($r80, 0);

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" readonly def");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r84);

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/StrokeWidth ");

        $r87 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("StrokeWidth");

        $r88 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r90);

        $r91 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.util.Collection getMappings()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("/Encoding 256 array");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("0 1 255 {1 index exch /.notdef put} for");

        $r92 = interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r92.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r98 = interfaceinvoke $r92.<java.util.Iterator: java.lang.Object next()>();

        r107 = (org.apache.fontbox.cff.CFFFont$Mapping) $r98;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dup ");

        $i5 = virtualinvoke r107.<org.apache.fontbox.cff.CFFFont$Mapping: int getCode()>();

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" /");

        $r103 = virtualinvoke r107.<org.apache.fontbox.cff.CFFFont$Mapping: java.lang.String getName()>();

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" put");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r106);

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("readonly def");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("currentdict end");

        $r93 = new org.apache.fontbox.cff.DataOutput;

        specialinvoke $r93.<org.apache.fontbox.cff.DataOutput: void <init>()>();

        staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: void printEexecFontDictionary(org.apache.fontbox.cff.CFFFont,org.apache.fontbox.cff.DataOutput)>(r3, $r93);

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("currentfile eexec");

        $r94 = virtualinvoke $r93.<org.apache.fontbox.cff.DataOutput: byte[] getBytes()>();

        $r95 = staticinvoke <org.apache.fontbox.cff.Type1FontUtil: byte[] eexecEncrypt(byte[])>($r94);

        $r96 = staticinvoke <org.apache.fontbox.cff.Type1FontUtil: java.lang.String hexEncode(byte[])>($r95);

        i6 = 0;

     label3:
        $i0 = virtualinvoke $r96.<java.lang.String: int length()>();

        if i6 >= $i0 goto label4;

        $i1 = i6 + 72;

        $i2 = virtualinvoke $r96.<java.lang.String: int length()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r97 = virtualinvoke $r96.<java.lang.String: java.lang.String substring(int,int)>(i6, $i3);

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r97);

        $i4 = virtualinvoke $r97.<java.lang.String: int length()>();

        i6 = i6 + $i4;

        goto label3;

     label4:
        return;
    }

    private static void printEexecFontDictionary(org.apache.fontbox.cff.CFFFont, org.apache.fontbox.cff.DataOutput) throws java.io.IOException
    {
        byte[] $r65, $r66;
        org.apache.fontbox.cff.CFFFont$Mapping r63;
        java.lang.StringBuilder $r1, $r2, $r6, $r7, $r9, $r10, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r38, $r39, $r41, $r42, $r45, $r46, $r48, $r49, $r51, $r52, $r55, $r56, $r57, $r58, $r67, $r68, $r70, $r71, $r72, $r73;
        java.lang.String $r5, $r8, $r12, $r15, $r21, $r27, $r33, $r37, $r40, $r44, $r47, $r53, $r59, $r69, $r74;
        org.apache.fontbox.cff.CFFFont r3;
        boolean $z0;
        java.util.Collection $r54;
        org.apache.fontbox.cff.Type1CharStringFormatter $r60;
        java.util.List $r64;
        int $i0, $i1;
        java.util.Iterator $r61;
        java.lang.Object $r4, $r11, $r18, $r24, $r30, $r36, $r43, $r50, $r62;
        org.apache.fontbox.cff.DataOutput r0;

        r3 := @parameter0: org.apache.fontbox.cff.CFFFont;

        r0 := @parameter1: org.apache.fontbox.cff.DataOutput;

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("dup /Private 15 dict dup begin");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("/RD {string currentfile exch readstring pop} executeonly def");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("/ND {noaccess def} executeonly def");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("/NP {noaccess put} executeonly def");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/BlueValues ");

        $r4 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("BlueValues");

        $r5 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatArray(java.lang.Object,boolean)>($r4, 1);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ND");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/OtherBlues ");

        $r11 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("OtherBlues");

        $r12 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatArray(java.lang.Object,boolean)>($r11, 1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ND");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/BlueScale ");

        $r18 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("BlueScale");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/BlueShift ");

        $r24 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("BlueShift");

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/BlueFuzz ");

        $r30 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("BlueFuzz");

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r33);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/StdHW ");

        $r36 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("StdHW");

        $r37 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatArray(java.lang.Object,boolean)>($r36, 1);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ND");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/StdVW ");

        $r43 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("StdVW");

        $r44 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatArray(java.lang.Object,boolean)>($r43, 1);

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ND");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r47);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ForceBold ");

        $r50 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("ForceBold");

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r53);

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("/MinFeature {16 16} def");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("/password 5839 def");

        $r54 = virtualinvoke r3.<org.apache.fontbox.cff.CFFFont: java.util.Collection getMappings()>();

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2 index /CharStrings ");

        $i0 = interfaceinvoke $r54.<java.util.Collection: int size()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dict dup begin");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>($r59);

        $r60 = new org.apache.fontbox.cff.Type1CharStringFormatter;

        specialinvoke $r60.<org.apache.fontbox.cff.Type1CharStringFormatter: void <init>()>();

        $r61 = interfaceinvoke $r54.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r61.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r62 = interfaceinvoke $r61.<java.util.Iterator: java.lang.Object next()>();

        r63 = (org.apache.fontbox.cff.CFFFont$Mapping) $r62;

        $r64 = virtualinvoke r63.<org.apache.fontbox.cff.CFFFont$Mapping: java.util.List toType1Sequence()>();

        $r65 = virtualinvoke $r60.<org.apache.fontbox.cff.Type1CharStringFormatter: byte[] format(java.util.List)>($r64);

        $r66 = staticinvoke <org.apache.fontbox.cff.Type1FontUtil: byte[] charstringEncrypt(byte[],int)>($r65, 4);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r69 = virtualinvoke r63.<org.apache.fontbox.cff.CFFFont$Mapping: java.lang.String getName()>();

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i1 = lengthof $r66;

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RD ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void print(java.lang.String)>($r74);

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void write(byte[])>($r66);

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void print(java.lang.String)>(" ND");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println()>();

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("end");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("end");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("readonly put");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("noaccess put");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("dup /FontName get exch definefont pop");

        virtualinvoke r0.<org.apache.fontbox.cff.DataOutput: void println(java.lang.String)>("mark currentfile closefile");

        return;
    }

    private static java.lang.String formatArray(java.lang.Object, boolean)
    {
        java.lang.Object r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatArray(java.lang.Object,java.text.NumberFormat,boolean)>(r0, null, z0);

        return $r1;
    }

    private static java.lang.String formatArray(java.lang.Object, java.text.NumberFormat, boolean)
    {
        java.text.NumberFormat r3;
        java.lang.StringBuffer $r0, $r8;
        java.lang.String $r2, $r4, $r9, $r10, r11, $r12;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator $r6;
        java.util.Collection r5;
        java.lang.Object r1, $r7;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.text.NumberFormat;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        if z0 == 0 goto label1;

        $r10 = "{";

        goto label2;

     label1:
        $r10 = "[";

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $z1 = r1 instanceof java.util.Collection;

        if $z1 == 0 goto label5;

        r11 = "";

        r5 = (java.util.Collection) r1;

        $r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r9 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatElement(java.lang.Object,java.text.NumberFormat)>($r7, r3);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        r11 = " ";

        goto label3;

     label4:
        goto label6;

     label5:
        $z2 = r1 instanceof java.lang.Number;

        if $z2 == 0 goto label6;

        $r4 = staticinvoke <org.apache.fontbox.cff.Type1FontFormatter: java.lang.String formatElement(java.lang.Object,java.text.NumberFormat)>(r1, r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label6:
        if z0 == 0 goto label7;

        $r12 = "}";

        goto label8;

     label7:
        $r12 = "]";

     label8:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String formatElement(java.lang.Object, java.text.NumberFormat)
    {
        long $l0;
        java.text.NumberFormat r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3, $r4;
        java.lang.Number $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        double $d0;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.text.NumberFormat;

        if r0 == null goto label4;

        $z0 = r1 instanceof java.lang.Double;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof java.lang.Float;

        if $z1 == 0 goto label2;

     label1:
        $r6 = (java.lang.Number) r1;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $r3 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(double)>($d0);

        return $r3;

     label2:
        $z2 = r1 instanceof java.lang.Long;

        if $z2 != 0 goto label3;

        $z3 = r1 instanceof java.lang.Integer;

        if $z3 == 0 goto label4;

     label3:
        $r5 = (java.lang.Number) r1;

        $l0 = virtualinvoke $r5.<java.lang.Number: long longValue()>();

        $r4 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(long)>($l0);

        return $r4;

     label4:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        return $r2;
    }
}
