public class org.apache.solr.client.solrj.beans.DocumentObjectBinder extends java.lang.Object
{
    private final java.util.Map infocache;

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder r0;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.util.Map infocache> = $r1;

        return;
    }

    public java.util.List getBeans(java.lang.Class, org.apache.solr.common.SolrDocumentList)
    {
        org.apache.solr.client.solrj.beans.DocumentObjectBinder r0;
        java.util.Iterator $r5;
        org.apache.solr.common.SolrDocumentList r4;
        java.util.ArrayList $r3;
        org.apache.solr.common.SolrDocument r7;
        java.util.List $r2;
        int $i0;
        java.lang.Class r1;
        java.lang.Object $r6, $r8;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: org.apache.solr.common.SolrDocumentList;

        $r2 = specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.util.List getDocFields(java.lang.Class)>(r1);

        $r3 = new java.util.ArrayList;

        $i0 = virtualinvoke r4.<org.apache.solr.common.SolrDocumentList: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $r5 = virtualinvoke r4.<org.apache.solr.common.SolrDocumentList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.solr.common.SolrDocument) $r6;

        $r8 = specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.lang.Object getBean(java.lang.Class,java.util.List,org.apache.solr.common.SolrDocument)>(r1, $r2, r7);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return $r3;
    }

    public java.lang.Object getBean(java.lang.Class, org.apache.solr.common.SolrDocument)
    {
        org.apache.solr.common.SolrDocument r2;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder r0;
        java.lang.Class r1;
        java.lang.Object $r3;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.solr.common.SolrDocument;

        $r3 = specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.lang.Object getBean(java.lang.Class,java.util.List,org.apache.solr.common.SolrDocument)>(r1, null, r2);

        return $r3;
    }

    private java.lang.Object getBean(java.lang.Class, java.util.List, org.apache.solr.common.SolrDocument)
    {
        org.apache.solr.client.solrj.beans.DocumentObjectBinder r6;
        java.util.Iterator $r2;
        java.lang.Exception $r7;
        org.apache.solr.common.SolrDocument r5;
        java.util.List r13;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r4;
        org.apache.solr.client.solrj.beans.BindingException $r8;
        java.lang.Class r0;
        java.lang.Object $r1, $r3;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;
        boolean $z0;

        r6 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder;

        r0 := @parameter0: java.lang.Class;

        r13 := @parameter1: java.util.List;

        r5 := @parameter2: org.apache.solr.common.SolrDocument;

        if r13 != null goto label1;

        r13 = specialinvoke r6.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.util.List getDocFields(java.lang.Class)>(r0);

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        $r2 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField) $r3;

        virtualinvoke r4.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void inject(java.lang.Object,org.apache.solr.common.SolrDocument)>($r1, r5);

        goto label2;

     label3:
        return $r1;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.apache.solr.client.solrj.beans.BindingException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instantiate object of ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.solr.client.solrj.beans.BindingException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r7);

        throw $r8;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public org.apache.solr.common.SolrInputDocument toSolrInputDocument(java.lang.Object)
    {
        org.apache.solr.client.solrj.beans.DocumentObjectBinder r0;
        org.apache.solr.client.solrj.beans.BindingException $r19;
        java.util.Map r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r12;
        java.util.List $r3;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r7;
        java.lang.StringBuilder $r20, $r21, $r23, $r24;
        java.util.regex.Pattern $r8;
        org.apache.solr.common.SolrInputDocument $r4;
        java.lang.String $r17, $r25, $r26;
        java.util.Map$Entry r15;
        java.util.Iterator $r5, $r13;
        java.lang.Object r1, $r6, $r9, $r10, $r14, $r16, $r18, $r27;
        java.lang.Class $r2, $r22;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.util.List getDocFields(java.lang.Class)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r19 = new org.apache.solr.client.solrj.beans.BindingException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class: ");

        $r22 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not define any fields.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.solr.client.solrj.beans.BindingException: void <init>(java.lang.String)>($r25);

        throw $r19;

     label1:
        $r4 = new org.apache.solr.common.SolrInputDocument;

        specialinvoke $r4.<org.apache.solr.common.SolrInputDocument: void <init>()>();

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField) $r6;

        $r8 = staticinvoke <org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.util.regex.Pattern access$000(org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField)>(r7);

        if $r8 == null goto label5;

        $r9 = virtualinvoke r7.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Object get(java.lang.Object)>(r1);

        if $r9 == null goto label5;

        $z2 = staticinvoke <org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean access$100(org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField)>(r7);

        if $z2 == 0 goto label5;

        $r10 = virtualinvoke r7.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (java.util.Map) $r10;

        $r12 = interfaceinvoke r11.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.util.Map$Entry) $r14;

        $r16 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $r18 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r4.<org.apache.solr.common.SolrInputDocument: void setField(java.lang.String,java.lang.Object,float)>($r17, $r18, 1.0F);

        goto label3;

     label4:
        goto label6;

     label5:
        $r26 = staticinvoke <org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String access$200(org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField)>(r7);

        $r27 = virtualinvoke r7.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Object get(java.lang.Object)>(r1);

        virtualinvoke $r4.<org.apache.solr.common.SolrInputDocument: void setField(java.lang.String,java.lang.Object,float)>($r26, $r27, 1.0F);

     label6:
        goto label2;

     label7:
        return $r4;
    }

    private java.util.List getDocFields(java.lang.Class)
    {
        java.lang.Throwable $r7;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder r0;
        java.util.List $r6, r8;
        java.util.Map $r2, $r4, $r5;
        java.lang.Class r1;
        java.lang.Object $r3;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.util.Map infocache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (java.util.List) $r3;

        if r8 != null goto label5;

        $r4 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.util.Map infocache>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.util.Map infocache>;

        $r6 = specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: java.util.List collectInfo(java.lang.Class)>(r1);

        r8 = $r6;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        exitmonitor $r4;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label4:
        throw $r7;

     label5:
        return r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private java.util.List collectInfo(java.lang.Class)
    {
        java.lang.reflect.AccessibleObject r5;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder r11;
        java.util.Iterator $r3;
        java.lang.reflect.Method[] $r9;
        java.util.ArrayList $r0, $r2;
        java.lang.reflect.Field[] $r7;
        java.util.List $r8, $r10;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField $r6;
        java.lang.Class r1, r12;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r11 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder;

        r1 := @parameter0: java.lang.Class;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r12 = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label1:
        if r12 == null goto label2;

        if r12 == class "Ljava/lang/Object;" goto label2;

        $r7 = virtualinvoke r12.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = virtualinvoke r12.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r10);

        r12 = virtualinvoke r12.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.reflect.AccessibleObject) $r4;

        $z0 = virtualinvoke r5.<java.lang.reflect.AccessibleObject: boolean isAnnotationPresent(java.lang.Class)>(class "Lorg/apache/solr/client/solrj/beans/Field;");

        if $z0 == 0 goto label4;

        virtualinvoke r5.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);

        $r6 = new org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        specialinvoke $r6.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void <init>(java.lang.reflect.AccessibleObject)>(r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label4:
        goto label3;

     label5:
        return $r0;
    }
}
