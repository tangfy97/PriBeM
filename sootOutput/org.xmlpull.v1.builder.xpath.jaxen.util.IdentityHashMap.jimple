public class org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap extends java.util.AbstractMap implements java.util.Map, java.lang.Cloneable, java.io.Serializable
{
    private transient org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table;
    private transient int count;
    private int threshold;
    private float loadFactor;
    private transient int modCount;
    private transient java.util.Set keySet;
    private transient java.util.Set entrySet;
    private transient java.util.Collection values;
    private static final int KEYS;
    private static final int VALUES;
    private static final int ENTRIES;
    private static org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$EmptyHashIterator emptyHashIterator;
    private static final long serialVersionUID;

    public void <init>(int, float)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] $r6;
        byte $b0;
        java.lang.StringBuffer $r3, $r4, $r9, $r10, $r12, $r14;
        int $i1, i2, $i3;
        java.lang.String $r5, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r13, $r15;
        float f0, $f1, $f2;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        i2 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount> = 0;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set keySet> = null;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set entrySet> = null;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Collection values> = null;

        if i2 >= 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal Initial Capacity: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label1:
        $b0 = f0 cmpg 0.0F;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label2;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label3;

     label2:
        $r15 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal Load factor: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r15;

     label3:
        if i2 != 0 goto label4;

        i2 = 1;

     label4:
        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: float loadFactor> = f0;

        $r6 = newarray (org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry)[i2];

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table> = $r6;

        $f1 = (float) i2;

        $f2 = $f1 * f0;

        $i1 = (int) $f2;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int threshold> = $i1;

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: void <init>(int,float)>(i0, 0.75F);

        return;
    }

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: void <init>(int,float)>(11, 0.75F);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        java.util.Map r1;
        int $i0, $i1, $i2;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r1 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        $i1 = 2 * $i0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 11);

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: void <init>(int,float)>($i2, 0.75F);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public int size()
    {
        int $i0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        return $i0;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object r2, $r3, $r4;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry r5, r6;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r2 := @parameter0: java.lang.Object;

        r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        if r2 != null goto label06;

        i4 = lengthof r1;

     label01:
        $i2 = i4;

        $i3 = i4 - 1;

        i4 = $i3;

        if $i2 <= 0 goto label05;

        r5 = r1[$i3];

     label02:
        if r5 == null goto label04;

        $r4 = r5.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        if $r4 != null goto label03;

        return 1;

     label03:
        r5 = r5.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label02;

     label04:
        goto label01;

     label05:
        goto label11;

     label06:
        i5 = lengthof r1;

     label07:
        $i0 = i5;

        $i1 = i5 - 1;

        i5 = $i1;

        if $i0 <= 0 goto label11;

        r6 = r1[$i1];

     label08:
        if r6 == null goto label10;

        $r3 = r6.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label09;

        return 1;

     label09:
        r6 = r6.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label08;

     label10:
        goto label07;

     label11:
        return 0;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] r1;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.Object r2, $r3, $r4;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry r5, r6;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r2 := @parameter0: java.lang.Object;

        r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        if r2 == null goto label4;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $i2 = $i0 & 2147483647;

        $i1 = lengthof r1;

        i3 = $i2 % $i1;

        r5 = r1[i3];

     label1:
        if r5 == null goto label3;

        $i4 = r5.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: int hash>;

        if $i4 != $i0 goto label2;

        $r4 = r5.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        if r2 != $r4 goto label2;

        return 1;

     label2:
        r5 = r5.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label1;

     label3:
        goto label7;

     label4:
        r6 = r1[0];

     label5:
        if r6 == null goto label7;

        $r3 = r6.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        if $r3 != null goto label6;

        return 1;

     label6:
        r6 = r6.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label5;

     label7:
        return 0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] r1;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.Object r2, $r3, $r4, $r5, $r6;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry r7, r8;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r2 := @parameter0: java.lang.Object;

        r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        if r2 == null goto label4;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $i2 = $i0 & 2147483647;

        $i1 = lengthof r1;

        i3 = $i2 % $i1;

        r7 = r1[i3];

     label1:
        if r7 == null goto label3;

        $i4 = r7.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: int hash>;

        if $i4 != $i0 goto label2;

        $r5 = r7.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        if r2 != $r5 goto label2;

        $r6 = r7.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        return $r6;

     label2:
        r7 = r7.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label1;

     label3:
        goto label7;

     label4:
        r8 = r1[0];

     label5:
        if r8 == null goto label7;

        $r3 = r8.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        if $r3 != null goto label6;

        $r4 = r8.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        return $r4;

     label6:
        r8 = r8.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label5;

     label7:
        return null;
    }

    private void rehash()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] $r1, r2, r3;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        float $f0, $f1, $f2;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry r4, $r5, r6;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        i0 = lengthof $r1;

        r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $i1 = i0 * 2;

        i2 = $i1 + 1;

        r3 = newarray (org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry)[i2];

        $i3 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount>;

        $i4 = $i3 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount> = $i4;

        $f1 = (float) i2;

        $f0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: float loadFactor>;

        $f2 = $f1 * $f0;

        $i5 = (int) $f2;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int threshold> = $i5;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table> = r3;

        i11 = i0;

     label1:
        $i6 = i11;

        $i7 = i11 - 1;

        i11 = $i7;

        if $i6 <= 0 goto label4;

        r6 = r2[$i7];

     label2:
        if r6 == null goto label3;

        r4 = r6;

        r6 = r6.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        $i8 = r4.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: int hash>;

        $i9 = $i8 & 2147483647;

        i10 = $i9 % i2;

        $r5 = r3[i10];

        r4.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next> = $r5;

        r3[i10] = r4;

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        java.lang.Object r1, r3, $r5, $r6, r9, r11;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry $r2, $r4, r8, r10;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r7 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        i12 = 0;

        i13 = 0;

        if r1 == null goto label4;

        $i8 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        i12 = $i8;

        $i10 = $i8 & 2147483647;

        $i9 = lengthof r7;

        i13 = $i10 % $i9;

        r8 = r7[i13];

     label1:
        if r8 == null goto label3;

        $i11 = r8.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: int hash>;

        if $i11 != $i8 goto label2;

        $r6 = r8.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        if r1 != $r6 goto label2;

        r9 = r8.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        r8.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value> = r3;

        return r9;

     label2:
        r8 = r8.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label1;

     label3:
        goto label7;

     label4:
        r10 = r7[0];

     label5:
        if r10 == null goto label7;

        $r5 = r10.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        if $r5 != null goto label6;

        r11 = r10.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        r10.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value> = r3;

        return r11;

     label6:
        r10 = r10.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label5;

     label7:
        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount>;

        $i1 = $i0 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount> = $i1;

        $i3 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        $i2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int threshold>;

        if $i3 < $i2 goto label8;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: void rehash()>();

        r7 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $i7 = i12 & 2147483647;

        $i6 = lengthof r7;

        i13 = $i7 % $i6;

     label8:
        $r2 = new org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry;

        $r4 = r7[i13];

        specialinvoke $r2.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: void <init>(int,java.lang.Object,java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry)>(i12, r1, r3, $r4);

        r7[i13] = $r2;

        $i4 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        $i5 = $i4 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count> = $i5;

        return null;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.Object r2, $r3, $r6, $r7, $r10;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry $r4, $r5, $r8, $r9, r11, r12, r13, r14;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r2 := @parameter0: java.lang.Object;

        r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        if r2 == null goto label06;

        $i4 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $i6 = $i4 & 2147483647;

        $i5 = lengthof r1;

        i12 = $i6 % $i5;

        r11 = r1[i12];

        r12 = null;

     label01:
        if r11 == null goto label05;

        $i7 = r11.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: int hash>;

        if $i7 != $i4 goto label04;

        $r7 = r11.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        if r2 != $r7 goto label04;

        $i8 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount>;

        $i9 = $i8 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount> = $i9;

        if r12 == null goto label02;

        $r9 = r11.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        r12.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next> = $r9;

        goto label03;

     label02:
        $r8 = r11.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        r1[i12] = $r8;

     label03:
        $i10 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        $i11 = $i10 - 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count> = $i11;

        $r10 = r11.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        r11.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value> = null;

        return $r10;

     label04:
        r12 = r11;

        r11 = r11.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label01;

     label05:
        goto label11;

     label06:
        r13 = r1[0];

        r14 = null;

     label07:
        if r13 == null goto label11;

        $r3 = r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        if $r3 != null goto label10;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount>;

        $i1 = $i0 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount> = $i1;

        if r14 == null goto label08;

        $r5 = r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        r14.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next> = $r5;

        goto label09;

     label08:
        $r4 = r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        r1[0] = $r4;

     label09:
        $i2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        $i3 = $i2 - 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count> = $i3;

        $r6 = r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value> = null;

        return $r6;

     label10:
        r14 = r13;

        r13 = r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label07;

     label11:
        return null;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r5;
        java.util.Set $r1;
        java.util.Map r0;
        java.lang.Object $r3, $r6, $r7;
        boolean $z0;

        r5 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r5.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public void clear()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] r1;
        int $i0, $i1, i2, $i4;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount>;

        $i1 = $i0 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount> = $i1;

        i2 = lengthof r1;

     label1:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        if i2 < 0 goto label2;

        r1[i2] = null;

        goto label1;

     label2:
        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count> = 0;

        return;
    }

    public java.lang.Object clone()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0, r13;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] $r2, $r3, $r4, $r5, $r7, $r8;
        java.lang.CloneNotSupportedException $r11;
        int $i0, $i1, $i2, i3;
        java.lang.InternalError $r12;
        java.lang.Object $r1, $r10;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry $r6, $r9, $r14;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

     label1:
        $r1 = specialinvoke r0.<java.util.AbstractMap: java.lang.Object clone()>();

        r13 = (org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap) $r1;

        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $i0 = lengthof $r2;

        $r3 = newarray (org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry)[$i0];

        r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table> = $r3;

        $r4 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        i3 = lengthof $r4;

     label2:
        $i1 = i3;

        $i2 = i3 - 1;

        i3 = $i2;

        if $i1 <= 0 goto label5;

        $r7 = r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $r5 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $r6 = $r5[$i2];

        if $r6 == null goto label3;

        $r8 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $r9 = $r8[$i2];

        $r10 = virtualinvoke $r9.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object clone()>();

        $r14 = (org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry) $r10;

        goto label4;

     label3:
        $r14 = null;

     label4:
        $r7[$i2] = $r14;

        goto label2;

     label5:
        r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set keySet> = null;

        r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set entrySet> = null;

        r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Collection values> = null;

        r13.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount> = 0;

     label6:
        return r13;

     label7:
        $r11 := @caughtexception;

        $r12 = new java.lang.InternalError;

        specialinvoke $r12.<java.lang.InternalError: void <init>()>();

        throw $r12;

        catch java.lang.CloneNotSupportedException from label1 to label6 with label7;
    }

    public java.util.Set keySet()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        java.util.Set $r1, $r2;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$1 $r3;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set keySet>;

        if $r1 != null goto label1;

        $r3 = new org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$1;

        specialinvoke $r3.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$1: void <init>(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap)>(r0);

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set keySet> = $r3;

     label1:
        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set keySet>;

        return $r2;
    }

    public java.util.Collection values()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        java.util.Collection $r1, $r2;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$2 $r3;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Collection values>;

        if $r1 != null goto label1;

        $r3 = new org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$2;

        specialinvoke $r3.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$2: void <init>(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap)>(r0);

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Collection values> = $r3;

     label1:
        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Collection values>;

        return $r2;
    }

    public java.util.Set entrySet()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        java.util.Set $r1, $r2;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$3 $r3;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set entrySet>;

        if $r1 != null goto label1;

        $r3 = new org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$3;

        specialinvoke $r3.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$3: void <init>(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap)>(r0);

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set entrySet> = $r3;

     label1:
        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Set entrySet>;

        return $r2;
    }

    private java.util.Iterator getHashIterator(int)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$EmptyHashIterator $r2;
        int $i0, i1;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$HashIterator $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        i1 := @parameter0: int;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        if $i0 != 0 goto label1;

        $r2 = <org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$EmptyHashIterator emptyHashIterator>;

        return $r2;

     label1:
        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$HashIterator;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$HashIterator: void <init>(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap,int)>(r0, i1);

        return $r1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r1;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] $r2, $r3, $r4;
        int $i0, $i1, $i2, i3, $i5;
        java.io.ObjectOutputStream r0;
        java.lang.Object $r5, $r6;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry r7;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $i0 = lengthof $r2;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $i1 = r1.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeInt(int)>($i1);

        $r3 = r1.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $i2 = lengthof $r3;

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label4;

        $r4 = r1.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        r7 = $r4[i3];

     label2:
        if r7 == null goto label3;

        $r5 = r7.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object key>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);

        $r6 = r7.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: java.lang.Object value>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        r7 = r7.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry next>;

        goto label2;

     label3:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label4:
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r1;
        java.io.ObjectInputStream r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] $r2;
        int $i0, $i1, i2;
        java.lang.Object $r3, $r4;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i0 = virtualinvoke r0.<java.io.ObjectInputStream: int readInt()>();

        $r2 = newarray (org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry)[$i0];

        r1.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table> = $r2;

        $i1 = virtualinvoke r0.<java.io.ObjectInputStream: int readInt()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        $r3 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    int capacity()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] $r1;
        int $i0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        $i0 = lengthof $r1;

        return $i0;
    }

    float loadFactor()
    {
        float $f0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $f0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: float loadFactor>;

        return $f0;
    }

    static java.util.Iterator access$000(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap, int)
    {
        int i0;
        java.util.Iterator $r1;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: java.util.Iterator getHashIterator(int)>(i0);

        return $r1;
    }

    static int access$100(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap)
    {
        int $i0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        return $i0;
    }

    static org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] access$200(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] $r1;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$Entry[] table>;

        return $r1;
    }

    static int access$308(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap)
    {
        int $i0, $i1;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount>;

        $i1 = $i0 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount> = $i1;

        return $i0;
    }

    static int access$110(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap)
    {
        int $i0, $i1;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count>;

        $i1 = $i0 - 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int count> = $i1;

        return $i0;
    }

    static int access$300(org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap)
    {
        int $i0;
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap r0;

        r0 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int modCount>;

        return $i0;
    }

    static void <clinit>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$EmptyHashIterator $r0;

        <org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: long serialVersionUID> = 362498820763181265L;

        <org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int ENTRIES> = 2;

        <org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int VALUES> = 1;

        <org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: int KEYS> = 0;

        $r0 = new org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$EmptyHashIterator;

        specialinvoke $r0.<org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$EmptyHashIterator: void <init>()>();

        <org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap: org.xmlpull.v1.builder.xpath.jaxen.util.IdentityHashMap$EmptyHashIterator emptyHashIterator> = $r0;

        return;
    }
}
