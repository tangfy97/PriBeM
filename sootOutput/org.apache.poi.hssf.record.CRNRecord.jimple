public final class org.apache.poi.hssf.record.CRNRecord extends org.apache.poi.hssf.record.StandardRecord
{
    public static final short sid;
    private int field_1_last_column_index;
    private int field_2_first_column_index;
    private int field_3_row_index;
    private java.lang.Object[] field_4_constant_values;

    public void <init>()
    {
        java.lang.RuntimeException $r1;
        org.apache.poi.hssf.record.CRNRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CRNRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("incomplete code");

        throw $r1;
    }

    public int getNumberOfCRNs()
    {
        int $i0;
        org.apache.poi.hssf.record.CRNRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CRNRecord;

        $i0 = r0.<org.apache.poi.hssf.record.CRNRecord: int field_1_last_column_index>;

        return $i0;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        java.lang.Object[] $r2;
        org.apache.poi.hssf.record.CRNRecord r0;
        short $s2;
        org.apache.poi.hssf.record.RecordInputStream r1;
        int $i0, $i1, $i3, $i4, $i5, i6, $i7;

        r0 := @this: org.apache.poi.hssf.record.CRNRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUByte()>();

        r0.<org.apache.poi.hssf.record.CRNRecord: int field_1_last_column_index> = $i0;

        $i1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUByte()>();

        r0.<org.apache.poi.hssf.record.CRNRecord: int field_2_first_column_index> = $i1;

        $s2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i7 = (int) $s2;

        r0.<org.apache.poi.hssf.record.CRNRecord: int field_3_row_index> = $i7;

        $i4 = r0.<org.apache.poi.hssf.record.CRNRecord: int field_1_last_column_index>;

        $i3 = r0.<org.apache.poi.hssf.record.CRNRecord: int field_2_first_column_index>;

        $i5 = $i4 - $i3;

        i6 = $i5 + 1;

        $r2 = staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: java.lang.Object[] parse(org.apache.poi.util.LittleEndianInput,int)>(r1, i6);

        r0.<org.apache.poi.hssf.record.CRNRecord: java.lang.Object[] field_4_constant_values> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hssf.record.CRNRecord r1;
        java.lang.StringBuffer $r0, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;
        java.lang.Class $r2;
        java.lang.String $r3, $r8;

        r1 := @this: org.apache.poi.hssf.record.CRNRecord;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [CRN");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" rowIx=");

        $i0 = r1.<org.apache.poi.hssf.record.CRNRecord: int field_3_row_index>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" firstColIx=");

        $i1 = r1.<org.apache.poi.hssf.record.CRNRecord: int field_2_first_column_index>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" lastColIx=");

        $i2 = r1.<org.apache.poi.hssf.record.CRNRecord: int field_1_last_column_index>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    protected int getDataSize()
    {
        java.lang.Object[] $r1;
        org.apache.poi.hssf.record.CRNRecord r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hssf.record.CRNRecord;

        $r1 = r0.<org.apache.poi.hssf.record.CRNRecord: java.lang.Object[] field_4_constant_values>;

        $i0 = staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: int getEncodedSize(java.lang.Object[])>($r1);

        $i1 = 4 + $i0;

        return $i1;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        java.lang.Object[] $r2;
        org.apache.poi.util.LittleEndianOutput r0;
        org.apache.poi.hssf.record.CRNRecord r1;
        int $i0, $i1, $i2;

        r1 := @this: org.apache.poi.hssf.record.CRNRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.CRNRecord: int field_1_last_column_index>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i0);

        $i1 = r1.<org.apache.poi.hssf.record.CRNRecord: int field_2_first_column_index>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        $i2 = r1.<org.apache.poi.hssf.record.CRNRecord: int field_3_row_index>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i2);

        $r2 = r1.<org.apache.poi.hssf.record.CRNRecord: java.lang.Object[] field_4_constant_values>;

        staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: void encode(org.apache.poi.util.LittleEndianOutput,java.lang.Object[])>(r0, $r2);

        return;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.CRNRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CRNRecord;

        return 90;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.CRNRecord: short sid> = 90;

        return;
    }
}
