public class org.apache.commons.configuration.XMLConfiguration extends org.apache.commons.configuration.AbstractHierarchicalFileConfiguration implements org.xml.sax.EntityResolver
{
    private static final long serialVersionUID;
    private static final java.lang.String DEFAULT_ROOT_NAME;
    private static final java.lang.String ATTR_SPACE;
    private static final java.lang.String VALUE_PRESERVE;
    private static final char ATTR_VALUE_DELIMITER;
    private org.w3c.dom.Document document;
    private java.util.Map registeredEntities;
    private java.lang.String rootElementName;
    private java.lang.String publicID;
    private java.lang.String systemID;
    private javax.xml.parsers.DocumentBuilder documentBuilder;
    private boolean validating;
    private boolean attributeSplittingDisabled;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.XMLConfiguration: java.util.Map registeredEntities> = $r1;

        return;
    }

    public void <init>(org.apache.commons.configuration.HierarchicalConfiguration)
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        java.util.HashMap $r2;
        java.lang.String $r5;
        org.apache.commons.configuration.tree.ConfigurationNode $r3, $r4;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(org.apache.commons.configuration.HierarchicalConfiguration)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.XMLConfiguration: java.util.Map registeredEntities> = $r2;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        staticinvoke <org.apache.commons.configuration.XMLConfiguration: void clearReferences(org.apache.commons.configuration.tree.ConfigurationNode)>($r3);

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void setRootElementName(java.lang.String)>($r5);

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.util.HashMap $r2;
        java.lang.String r1;
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.lang.String)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.XMLConfiguration: java.util.Map registeredEntities> = $r2;

        return;
    }

    public void <init>(java.io.File) throws org.apache.commons.configuration.ConfigurationException
    {
        java.util.HashMap $r2;
        org.apache.commons.configuration.XMLConfiguration r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.io.File)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.XMLConfiguration: java.util.Map registeredEntities> = $r2;

        return;
    }

    public void <init>(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        java.util.HashMap $r2;
        org.apache.commons.configuration.XMLConfiguration r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.net.URL)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.XMLConfiguration: java.util.Map registeredEntities> = $r2;

        return;
    }

    public java.lang.String getRootElementName()
    {
        org.w3c.dom.Element $r3;
        org.apache.commons.configuration.XMLConfiguration r0;
        org.w3c.dom.Document $r1, $r2;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document getDocument()>();

        if $r1 != null goto label3;

        $r5 = r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.String rootElementName>;

        if $r5 != null goto label1;

        $r6 = "configuration";

        goto label2;

     label1:
        $r6 = r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.String rootElementName>;

     label2:
        return $r6;

     label3:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document getDocument()>();

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        return $r4;
    }

    public void setRootElementName(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r4;
        org.apache.commons.configuration.XMLConfiguration r0;
        org.w3c.dom.Document $r1;
        java.lang.String r2;
        org.apache.commons.configuration.tree.ConfigurationNode $r3;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document getDocument()>();

        if $r1 == null goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The name of the root element cannot be changed when loaded from an XML document!");

        throw $r4;

     label1:
        r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.String rootElementName> = r2;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        interfaceinvoke $r3.<org.apache.commons.configuration.tree.ConfigurationNode: void setName(java.lang.String)>(r2);

        return;
    }

    public javax.xml.parsers.DocumentBuilder getDocumentBuilder()
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        javax.xml.parsers.DocumentBuilder $r1;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r1 = r0.<org.apache.commons.configuration.XMLConfiguration: javax.xml.parsers.DocumentBuilder documentBuilder>;

        return $r1;
    }

    public void setDocumentBuilder(javax.xml.parsers.DocumentBuilder)
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        javax.xml.parsers.DocumentBuilder r1;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r1 := @parameter0: javax.xml.parsers.DocumentBuilder;

        r0.<org.apache.commons.configuration.XMLConfiguration: javax.xml.parsers.DocumentBuilder documentBuilder> = r1;

        return;
    }

    public java.lang.String getPublicID()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r1 = r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.String publicID>;

        return $r1;
    }

    public void setPublicID(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.String publicID> = r1;

        return;
    }

    public java.lang.String getSystemID()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r1 = r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.String systemID>;

        return $r1;
    }

    public void setSystemID(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.String systemID> = r1;

        return;
    }

    public boolean isValidating()
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $z0 = r0.<org.apache.commons.configuration.XMLConfiguration: boolean validating>;

        return $z0;
    }

    public void setValidating(boolean)
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.configuration.XMLConfiguration: boolean validating> = z0;

        return;
    }

    public boolean isAttributeSplittingDisabled()
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $z0 = r0.<org.apache.commons.configuration.XMLConfiguration: boolean attributeSplittingDisabled>;

        return $z0;
    }

    public void setAttributeSplittingDisabled(boolean)
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.configuration.XMLConfiguration: boolean attributeSplittingDisabled> = z0;

        return;
    }

    public org.w3c.dom.Document getDocument()
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r1 = r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document>;

        return $r1;
    }

    public void clear()
    {
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void clear()>();

        r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document> = null;

        return;
    }

    public void initProperties(org.w3c.dom.Document, boolean)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r3, $r8;
        org.w3c.dom.DocumentType $r1, $r10, $r12;
        org.apache.commons.configuration.tree.ConfigurationNode $r5;
        org.w3c.dom.Element $r4, $r6, $r9;
        org.apache.commons.configuration.XMLConfiguration r2;
        org.w3c.dom.Document r0;
        java.lang.String $r7, $r11, $r13;
        boolean z0;

        r2 := @this: org.apache.commons.configuration.XMLConfiguration;

        r0 := @parameter0: org.w3c.dom.Document;

        z0 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.DocumentType getDoctype()>();

        if $r1 == null goto label1;

        $r10 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.DocumentType getDoctype()>();

        $r11 = interfaceinvoke $r10.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: void setPublicID(java.lang.String)>($r11);

        $r12 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.DocumentType getDoctype()>();

        $r13 = interfaceinvoke $r12.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: void setSystemID(java.lang.String)>($r13);

     label1:
        $r3 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        $r4 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        specialinvoke r2.<org.apache.commons.configuration.XMLConfiguration: void constructHierarchy(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,boolean,boolean)>($r3, $r4, z0, 1);

        $r5 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r6 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: void setName(java.lang.String)>($r7);

        if z0 == 0 goto label2;

        $r8 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        $r9 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke $r8.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setReference(java.lang.Object)>($r9);

     label2:
        return;
    }

    private void constructHierarchy(org.apache.commons.configuration.HierarchicalConfiguration$Node, org.w3c.dom.Element, boolean, boolean)
    {
        org.w3c.dom.Text r12;
        java.lang.StringBuffer $r3;
        org.w3c.dom.Node $r6;
        int $i0, $i1, i2;
        java.lang.String $r5, $r7, $r9, r13;
        org.apache.commons.configuration.XMLConfiguration$XMLNode $r8;
        boolean z0, $z1, z2, $z3, $z4, $z5;
        org.w3c.dom.NodeList $r4;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r2;
        org.w3c.dom.Element r1, r10, $r11;
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r2 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r1 := @parameter1: org.w3c.dom.Element;

        z2 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        $z1 = specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: boolean shouldTrim(org.w3c.dom.Element,boolean)>(r1, z0);

        specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void processAttributes(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,boolean)>(r2, r1, z2);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r4.<org.w3c.dom.NodeList: int getLength()>();

        if i2 >= $i0 goto label6;

        $r6 = interfaceinvoke $r4.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $z4 = $r6 instanceof org.w3c.dom.Element;

        if $z4 == 0 goto label4;

        r10 = (org.w3c.dom.Element) $r6;

        $r8 = new org.apache.commons.configuration.XMLConfiguration$XMLNode;

        $r9 = interfaceinvoke r10.<org.w3c.dom.Element: java.lang.String getTagName()>();

        if z2 == 0 goto label2;

        $r11 = r10;

        goto label3;

     label2:
        $r11 = null;

     label3:
        specialinvoke $r8.<org.apache.commons.configuration.XMLConfiguration$XMLNode: void <init>(org.apache.commons.configuration.XMLConfiguration,java.lang.String,org.w3c.dom.Element)>(r0, $r9, $r11);

        specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void constructHierarchy(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,boolean,boolean)>($r8, r10, z2, $z1);

        virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addChild(org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r8);

        specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>(r2, $r8, $z1);

        goto label5;

     label4:
        $z5 = $r6 instanceof org.w3c.dom.Text;

        if $z5 == 0 goto label5;

        r12 = (org.w3c.dom.Text) $r6;

        $r7 = interfaceinvoke r12.<org.w3c.dom.Text: java.lang.String getData()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        r13 = $r5;

        if $z1 == 0 goto label7;

        r13 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

     label7:
        $i1 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i1 > 0 goto label8;

        $z3 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: boolean hasChildren()>();

        if $z3 != 0 goto label9;

     label8:
        virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setValue(java.lang.Object)>(r13);

     label9:
        return;
    }

    private void processAttributes(org.apache.commons.configuration.HierarchicalConfiguration$Node, org.w3c.dom.Element, boolean)
    {
        org.w3c.dom.Attr r3;
        org.w3c.dom.Node $r2;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String $r5, $r7, $r10;
        org.apache.commons.configuration.XMLConfiguration$XMLNode $r6;
        boolean $z0, $z1, $z2, z3, $z4;
        java.util.Iterator $r12;
        char $c2;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r9;
        java.util.List r11;
        org.w3c.dom.Element r0, $r13;
        org.apache.commons.configuration.XMLConfiguration r4;
        java.lang.Object $r8;

        r4 := @this: org.apache.commons.configuration.XMLConfiguration;

        r9 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r0 := @parameter1: org.w3c.dom.Element;

        z3 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = 0;

     label01:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i0 goto label10;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        $z0 = $r2 instanceof org.w3c.dom.Attr;

        if $z0 == 0 goto label09;

        r3 = (org.w3c.dom.Attr) $r2;

        $z1 = virtualinvoke r4.<org.apache.commons.configuration.XMLConfiguration: boolean isAttributeSplittingDisabled()>();

        if $z1 == 0 goto label02;

        $r10 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getValue()>();

        r11 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        goto label05;

     label02:
        $r5 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $z2 = virtualinvoke r4.<org.apache.commons.configuration.XMLConfiguration: boolean isDelimiterParsingDisabled()>();

        if $z2 == 0 goto label03;

        $c2 = 124;

        goto label04;

     label03:
        $c2 = virtualinvoke r4.<org.apache.commons.configuration.XMLConfiguration: char getListDelimiter()>();

     label04:
        r11 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.List split(java.lang.String,char)>($r5, $c2);

     label05:
        $r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r6 = new org.apache.commons.configuration.XMLConfiguration$XMLNode;

        $r7 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getName()>();

        if z3 == 0 goto label07;

        $r13 = r0;

        goto label08;

     label07:
        $r13 = null;

     label08:
        specialinvoke $r6.<org.apache.commons.configuration.XMLConfiguration$XMLNode: void <init>(org.apache.commons.configuration.XMLConfiguration,java.lang.String,org.w3c.dom.Element)>(r4, $r7, $r13);

        $r8 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r6.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setValue(java.lang.Object)>($r8);

        virtualinvoke r9.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>($r6);

        goto label06;

     label09:
        i1 = i1 + 1;

        goto label01;

     label10:
        return;
    }

    private void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node, org.apache.commons.configuration.HierarchicalConfiguration$Node, boolean)
    {
        java.util.ArrayList $r18;
        int $i1, $i2;
        java.lang.String $r4, $r7, $r14, $r20;
        org.apache.commons.configuration.XMLConfiguration$XMLNode $r13;
        boolean $z0, z1, $z2, $z3;
        java.util.Iterator $r6, $r11;
        char $c0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0, $r8, r12, r17;
        java.util.List $r10, r21;
        org.apache.commons.configuration.XMLConfiguration r2;
        java.lang.Object $r1, $r3, $r5, $r9, $r15, $r16, $r19;

        r2 := @this: org.apache.commons.configuration.XMLConfiguration;

        r12 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r0 := @parameter1: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        z1 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        if $r1 == null goto label8;

        $z0 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: boolean isDelimiterParsingDisabled()>();

        if $z0 == 0 goto label1;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r21 = $r18;

        $r19 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $c0 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: char getListDelimiter()>();

        r21 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.List split(java.lang.String,char,boolean)>($r4, $c0, z1);

     label2:
        $i1 = interfaceinvoke r21.<java.util.List: int size()>();

        if $i1 <= 1 goto label7;

        $r6 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>();

        $r7 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        $r8 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node createNode(java.lang.String)>($r7);

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r8.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setValue(java.lang.Object)>($r9);

        $r10 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.util.List getAttributes()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r16 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r16;

        virtualinvoke r17.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setReference(java.lang.Object)>(null);

        virtualinvoke $r8.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>(r17);

        goto label3;

     label4:
        virtualinvoke r12.<org.apache.commons.configuration.HierarchicalConfiguration$Node: boolean remove(org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r0);

        virtualinvoke r12.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addChild(org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r8);

     label5:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r13 = new org.apache.commons.configuration.XMLConfiguration$XMLNode;

        $r14 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        specialinvoke $r13.<org.apache.commons.configuration.XMLConfiguration$XMLNode: void <init>(org.apache.commons.configuration.XMLConfiguration,java.lang.String,org.w3c.dom.Element)>(r2, $r14, null);

        $r15 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r13.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setValue(java.lang.Object)>($r15);

        virtualinvoke r12.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addChild(org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r13);

        goto label5;

     label6:
        goto label8;

     label7:
        $i2 = interfaceinvoke r21.<java.util.List: int size()>();

        if $i2 != 1 goto label8;

        $r5 = interfaceinvoke r21.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setValue(java.lang.Object)>($r5);

     label8:
        return;
    }

    private boolean shouldTrim(org.w3c.dom.Element, boolean)
    {
        org.w3c.dom.Attr $r1;
        org.w3c.dom.Element r0;
        org.apache.commons.configuration.XMLConfiguration r4;
        java.lang.String $r2, $r3;
        boolean $z0, z1, $z2;

        r4 := @this: org.apache.commons.configuration.XMLConfiguration;

        r0 := @parameter0: org.w3c.dom.Element;

        z1 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>("xml:space");

        if $r1 != null goto label1;

        return z1;

     label1:
        $r2 = "preserve";

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected javax.xml.parsers.DocumentBuilder createDocumentBuilder() throws javax.xml.parsers.ParserConfigurationException
    {
        org.apache.commons.configuration.XMLConfiguration$1 $r4;
        org.apache.commons.configuration.XMLConfiguration r0;
        javax.xml.parsers.DocumentBuilder $r1, $r3, $r5;
        javax.xml.parsers.DocumentBuilderFactory $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: javax.xml.parsers.DocumentBuilder getDocumentBuilder()>();

        if $r1 == null goto label1;

        $r5 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: javax.xml.parsers.DocumentBuilder getDocumentBuilder()>();

        return $r5;

     label1:
        $r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: boolean isValidating()>();

        virtualinvoke $r2.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>($z0);

        $r3 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        virtualinvoke $r3.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>(r0);

        $z1 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: boolean isValidating()>();

        if $z1 == 0 goto label2;

        $r4 = new org.apache.commons.configuration.XMLConfiguration$1;

        specialinvoke $r4.<org.apache.commons.configuration.XMLConfiguration$1: void <init>(org.apache.commons.configuration.XMLConfiguration)>(r0);

        virtualinvoke $r3.<javax.xml.parsers.DocumentBuilder: void setErrorHandler(org.xml.sax.ErrorHandler)>($r4);

     label2:
        return $r3;
    }

    protected org.w3c.dom.Document createDocument() throws org.apache.commons.configuration.ConfigurationException
    {
        org.w3c.dom.Document $r1, $r3, $r5, $r8, $r11;
        org.w3c.dom.DOMException $r16;
        java.lang.String $r12;
        boolean $z0;
        char $c0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r4;
        org.apache.commons.configuration.tree.ConfigurationNode $r6;
        org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor $r2;
        org.w3c.dom.Element $r13;
        org.apache.commons.configuration.XMLConfiguration r0;
        javax.xml.parsers.ParserConfigurationException $r14;
        javax.xml.parsers.DocumentBuilder $r10;
        java.lang.Object $r7;
        javax.xml.parsers.DocumentBuilderFactory $r9;
        org.apache.commons.configuration.ConfigurationException $r15, $r17;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

     label1:
        $r1 = r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document>;

        if $r1 != null goto label2;

        $r9 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r10 = virtualinvoke $r9.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r11 = virtualinvoke $r10.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        $r12 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.String getRootElementName()>();

        $r13 = interfaceinvoke $r11.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r12);

        interfaceinvoke $r11.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document> = $r11;

     label2:
        $r2 = new org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor;

        $r3 = r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document>;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: boolean isDelimiterParsingDisabled()>();

        if $z0 == 0 goto label3;

        $c0 = 0;

        goto label4;

     label3:
        $c0 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: char getListDelimiter()>();

     label4:
        specialinvoke $r2.<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void <init>(org.w3c.dom.Document,char)>($r3, $c0);

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        virtualinvoke $r2.<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void processDocument(org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r4);

        $r5 = r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document>;

        $r6 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r7 = interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.Object getValue()>();

        specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void initRootElementText(org.w3c.dom.Document,java.lang.Object)>($r5, $r7);

        $r8 = r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document>;

     label5:
        return $r8;

     label6:
        $r16 := @caughtexception;

        $r17 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r17.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label7:
        $r14 := @caughtexception;

        $r15 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r15.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

        catch org.w3c.dom.DOMException from label1 to label5 with label6;
        catch javax.xml.parsers.ParserConfigurationException from label1 to label5 with label7;
    }

    private void initRootElementText(org.w3c.dom.Document, java.lang.Object)
    {
        org.w3c.dom.Text $r5;
        org.w3c.dom.NodeList $r2;
        short $s1;
        org.w3c.dom.Element $r1;
        org.apache.commons.configuration.XMLConfiguration r7;
        org.w3c.dom.Document r0;
        org.w3c.dom.Node $r6;
        int $i0, i2, $i3;
        java.lang.Object r3;
        java.lang.String $r4;

        r7 := @this: org.apache.commons.configuration.XMLConfiguration;

        r0 := @parameter0: org.w3c.dom.Document;

        r3 := @parameter1: java.lang.Object;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if i2 >= $i0 goto label3;

        $r6 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $s1 = interfaceinvoke $r6.<org.w3c.dom.Node: short getNodeType()>();

        $i3 = (int) $s1;

        if $i3 != 3 goto label2;

        interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r6);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if r3 == null goto label4;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $r5 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

     label4:
        return;
    }

    protected org.apache.commons.configuration.HierarchicalConfiguration$Node createNode(java.lang.String)
    {
        java.lang.String r2;
        org.apache.commons.configuration.XMLConfiguration$XMLNode $r0;
        org.apache.commons.configuration.XMLConfiguration r1;

        r1 := @this: org.apache.commons.configuration.XMLConfiguration;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.commons.configuration.XMLConfiguration$XMLNode;

        specialinvoke $r0.<org.apache.commons.configuration.XMLConfiguration$XMLNode: void <init>(org.apache.commons.configuration.XMLConfiguration,java.lang.String,org.w3c.dom.Element)>(r1, r2, null);

        return $r0;
    }

    public void load(java.io.InputStream) throws org.apache.commons.configuration.ConfigurationException
    {
        org.xml.sax.InputSource $r1;
        org.apache.commons.configuration.XMLConfiguration r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void load(org.xml.sax.InputSource)>($r1);

        return;
    }

    public void load(java.io.Reader) throws org.apache.commons.configuration.ConfigurationException
    {
        org.xml.sax.InputSource $r1;
        java.io.Reader r2;
        org.apache.commons.configuration.XMLConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r2 := @parameter0: java.io.Reader;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r2);

        specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void load(org.xml.sax.InputSource)>($r1);

        return;
    }

    private void load(org.xml.sax.InputSource) throws org.apache.commons.configuration.ConfigurationException
    {
        org.xml.sax.InputSource r4;
        java.net.URL $r2;
        org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate $r1;
        java.lang.Exception $r8;
        org.apache.commons.configuration.XMLConfiguration r0;
        org.w3c.dom.Document $r5, $r7, $r10;
        javax.xml.parsers.DocumentBuilder $r3;
        java.lang.String $r6;
        org.apache.commons.configuration.ConfigurationException $r9;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r4 := @parameter0: org.xml.sax.InputSource;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate getDelegate()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate: java.net.URL getURL()>();

        if $r2 == null goto label2;

        $r6 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        virtualinvoke r4.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r6);

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: javax.xml.parsers.DocumentBuilder createDocumentBuilder()>();

        $r5 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>(r4);

        $r7 = r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document>;

        r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document> = null;

        if $r7 != null goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void initProperties(org.w3c.dom.Document,boolean)>($r5, $z0);

        if $r7 != null goto label5;

        $r10 = $r5;

        goto label6;

     label5:
        $r10 = $r7;

     label6:
        r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document> = $r10;

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;

        $r9 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r9.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to load the configuration", $r8);

        throw $r9;

     label9:
        return;

        catch java.lang.Exception from label1 to label7 with label8;
    }

    public void save(java.io.Writer) throws org.apache.commons.configuration.ConfigurationException
    {
        javax.xml.transform.Transformer $r1;
        javax.xml.transform.dom.DOMSource $r2;
        javax.xml.transform.TransformerException $r8;
        javax.xml.transform.stream.StreamResult $r4;
        org.apache.commons.configuration.XMLConfiguration r0;
        org.w3c.dom.Document $r3;
        java.io.Writer r5;
        javax.xml.transform.TransformerFactoryConfigurationError $r6;
        org.apache.commons.configuration.ConfigurationException $r7, $r9;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        r5 := @parameter0: java.io.Writer;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: javax.xml.transform.Transformer createTransformer()>();

        $r2 = new javax.xml.transform.dom.DOMSource;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document createDocument()>();

        specialinvoke $r2.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r3);

        $r4 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r4.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>(r5);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r2, $r4);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r9.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to save the configuration", $r8);

        throw $r9;

     label4:
        $r6 := @caughtexception;

        $r7 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r7.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to save the configuration", $r6);

        throw $r7;

     label5:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
        catch javax.xml.transform.TransformerFactoryConfigurationError from label1 to label2 with label4;
    }

    protected javax.xml.transform.Transformer createTransformer() throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.Transformer $r1;
        org.apache.commons.configuration.XMLConfiguration r2;
        javax.xml.transform.TransformerFactory $r0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;

        r2 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r0 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        $r3 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: java.lang.String getEncoding()>();

        if $r3 == null goto label1;

        $r8 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: java.lang.String getEncoding()>();

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", $r8);

     label1:
        $r4 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: java.lang.String getPublicID()>();

        if $r4 == null goto label2;

        $r7 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: java.lang.String getPublicID()>();

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-public", $r7);

     label2:
        $r5 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: java.lang.String getSystemID()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: java.lang.String getSystemID()>();

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", $r6);

     label3:
        return $r1;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.configuration.XMLConfiguration r0, r2;
        org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate $r3;
        java.lang.Object $r1;
        org.apache.commons.configuration.tree.ConfigurationNode $r4;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: java.lang.Object clone()>();

        r2 = (org.apache.commons.configuration.XMLConfiguration) $r1;

        r2.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document> = null;

        $r3 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate createDelegate()>();

        virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: void setDelegate(org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate)>($r3);

        $r4 = virtualinvoke r2.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        staticinvoke <org.apache.commons.configuration.XMLConfiguration: void clearReferences(org.apache.commons.configuration.tree.ConfigurationNode)>($r4);

        return r2;
    }

    protected org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate createDelegate()
    {
        org.apache.commons.configuration.XMLConfiguration r1;
        org.apache.commons.configuration.XMLConfiguration$XMLFileConfigurationDelegate $r0;

        r1 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r0 = new org.apache.commons.configuration.XMLConfiguration$XMLFileConfigurationDelegate;

        specialinvoke $r0.<org.apache.commons.configuration.XMLConfiguration$XMLFileConfigurationDelegate: void <init>(org.apache.commons.configuration.XMLConfiguration,org.apache.commons.configuration.XMLConfiguration$1)>(r1, null);

        return $r0;
    }

    public void addNodes(java.lang.String, java.util.Collection)
    {
        java.util.Iterator $r4;
        java.util.Collection r0, r8;
        java.util.ArrayList $r3;
        org.apache.commons.configuration.tree.ConfigurationNode $r6;
        org.apache.commons.configuration.XMLConfiguration r1;
        int $i0;
        java.lang.Object $r5;
        java.lang.String r2;
        org.apache.commons.configuration.XMLConfiguration$XMLNode $r7;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.configuration.XMLConfiguration;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Collection;

        if r0 == null goto label3;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r8 = $r3;

        $r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.commons.configuration.tree.ConfigurationNode) $r5;

        $r7 = specialinvoke r1.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.XMLConfiguration$XMLNode convertToXMLNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r6);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        goto label4;

     label3:
        r8 = r0;

     label4:
        specialinvoke r1.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void addNodes(java.lang.String,java.util.Collection)>(r2, r8);

        return;
    }

    private org.apache.commons.configuration.XMLConfiguration$XMLNode convertToXMLNode(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        java.lang.String $r2;
        org.apache.commons.configuration.XMLConfiguration$XMLNode r4, $r12, $r15, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r7, $r9;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r3;
        org.apache.commons.configuration.tree.ConfigurationNode r0, $r11, $r14;
        java.util.List $r6, $r8;
        org.apache.commons.configuration.XMLConfiguration r1;
        java.lang.Object $r5, $r10, $r13;

        r1 := @this: org.apache.commons.configuration.XMLConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $z0 = r0 instanceof org.apache.commons.configuration.XMLConfiguration$XMLNode;

        if $z0 == 0 goto label1;

        $r16 = (org.apache.commons.configuration.XMLConfiguration$XMLNode) r0;

        return $r16;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node createNode(java.lang.String)>($r2);

        r4 = (org.apache.commons.configuration.XMLConfiguration$XMLNode) $r3;

        $r5 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.Object getValue()>();

        virtualinvoke r4.<org.apache.commons.configuration.XMLConfiguration$XMLNode: void setValue(java.lang.Object)>($r5);

        $z1 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: boolean isAttribute()>();

        virtualinvoke r4.<org.apache.commons.configuration.XMLConfiguration$XMLNode: void setAttribute(boolean)>($z1);

        $r6 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r13 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (org.apache.commons.configuration.tree.ConfigurationNode) $r13;

        $r15 = specialinvoke r1.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.XMLConfiguration$XMLNode convertToXMLNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r14);

        virtualinvoke r4.<org.apache.commons.configuration.XMLConfiguration$XMLNode: void addChild(org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r15);

        goto label2;

     label3:
        $r8 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getAttributes()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (org.apache.commons.configuration.tree.ConfigurationNode) $r10;

        $r12 = specialinvoke r1.<org.apache.commons.configuration.XMLConfiguration: org.apache.commons.configuration.XMLConfiguration$XMLNode convertToXMLNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r11);

        virtualinvoke r4.<org.apache.commons.configuration.XMLConfiguration$XMLNode: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>($r12);

        goto label4;

     label5:
        return r4;
    }

    public void registerEntityId(java.lang.String, java.net.URL)
    {
        org.apache.commons.configuration.XMLConfiguration r1;
        java.net.URL r3;
        java.util.Map $r2;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.apache.commons.configuration.XMLConfiguration;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.net.URL;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Public ID must not be null!");

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<org.apache.commons.configuration.XMLConfiguration: java.util.Map getRegisteredEntities()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3);

        return;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r3;
        java.net.URL r11;
        java.io.IOException $r8;
        org.apache.commons.configuration.XMLConfiguration r5;
        java.net.URLConnection $r1;
        java.util.Map $r6;
        org.xml.sax.SAXException $r9;
        java.lang.Object $r7;
        java.lang.String r0, $r4, r10;
        java.io.InputStream $r2;

        r5 := @this: org.apache.commons.configuration.XMLConfiguration;

        r0 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r11 = null;

        if r0 == null goto label1;

        $r6 = virtualinvoke r5.<org.apache.commons.configuration.XMLConfiguration: java.util.Map getRegisteredEntities()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r11 = (java.net.URL) $r7;

     label1:
        if r11 == null goto label5;

     label2:
        $r1 = virtualinvoke r11.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r1.<java.net.URLConnection: void setUseCaches(boolean)>(0);

        $r2 = virtualinvoke $r1.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r2);

        $r4 = virtualinvoke r11.<java.net.URL: java.lang.String toExternalForm()>();

        virtualinvoke $r3.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r4);

     label3:
        return $r3;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label5:
        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }

    java.util.Map getRegisteredEntities()
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.configuration.XMLConfiguration;

        $r1 = r0.<org.apache.commons.configuration.XMLConfiguration: java.util.Map registeredEntities>;

        return $r1;
    }

    static org.w3c.dom.Document access$100(org.apache.commons.configuration.XMLConfiguration)
    {
        org.apache.commons.configuration.XMLConfiguration r0;
        org.w3c.dom.Document $r1;

        r0 := @parameter0: org.apache.commons.configuration.XMLConfiguration;

        $r1 = r0.<org.apache.commons.configuration.XMLConfiguration: org.w3c.dom.Document document>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.XMLConfiguration: char ATTR_VALUE_DELIMITER> = 124;

        <org.apache.commons.configuration.XMLConfiguration: java.lang.String VALUE_PRESERVE> = "preserve";

        <org.apache.commons.configuration.XMLConfiguration: java.lang.String ATTR_SPACE> = "xml:space";

        <org.apache.commons.configuration.XMLConfiguration: java.lang.String DEFAULT_ROOT_NAME> = "configuration";

        <org.apache.commons.configuration.XMLConfiguration: long serialVersionUID> = 2453781111653383552L;

        return;
    }
}
