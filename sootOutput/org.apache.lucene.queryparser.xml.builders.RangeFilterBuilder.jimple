public class org.apache.lucene.queryparser.xml.builders.RangeFilterBuilder extends java.lang.Object implements org.apache.lucene.queryparser.xml.FilterBuilder
{

    public void <init>()
    {
        org.apache.lucene.queryparser.xml.builders.RangeFilterBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.RangeFilterBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.lucene.search.Filter getFilter(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queryparser.xml.builders.RangeFilterBuilder r5;
        org.apache.lucene.search.TermRangeFilter $r4;
        org.w3c.dom.Element r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        r5 := @this: org.apache.lucene.queryparser.xml.builders.RangeFilterBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getAttributeWithInheritance(org.w3c.dom.Element,java.lang.String)>(r0, "fieldName");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("lowerTerm");

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("upperTerm");

        $z0 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: boolean getAttribute(org.w3c.dom.Element,java.lang.String,boolean)>(r0, "includeLower", 1);

        $z1 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: boolean getAttribute(org.w3c.dom.Element,java.lang.String,boolean)>(r0, "includeUpper", 1);

        $r4 = staticinvoke <org.apache.lucene.search.TermRangeFilter: org.apache.lucene.search.TermRangeFilter newStringRange(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>($r1, $r2, $r3, $z0, $z1);

        return $r4;
    }
}
