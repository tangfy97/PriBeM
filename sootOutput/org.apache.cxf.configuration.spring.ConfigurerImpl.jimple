public class org.apache.cxf.configuration.spring.ConfigurerImpl extends org.springframework.beans.factory.wiring.BeanConfigurerSupport implements org.apache.cxf.configuration.Configurer, org.springframework.context.ApplicationContextAware, org.apache.cxf.extension.BusExtension
{
    private static final java.util.logging.Logger LOG;
    private java.util.Set appContexts;
    private final java.util.Map wildCardBeanDefinitions;
    private org.springframework.beans.factory.BeanFactory beanFactory;

    public void <init>()
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        specialinvoke r0.<org.springframework.beans.factory.wiring.BeanConfigurerSupport: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Map wildCardBeanDefinitions> = $r1;

        return;
    }

    public void <init>(org.springframework.context.ApplicationContext)
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        java.util.HashMap $r1;
        org.springframework.context.ApplicationContext r2;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r2 := @parameter0: org.springframework.context.ApplicationContext;

        specialinvoke r0.<org.springframework.beans.factory.wiring.BeanConfigurerSupport: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Map wildCardBeanDefinitions> = $r1;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void setApplicationContext(org.springframework.context.ApplicationContext)>(r2);

        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        org.springframework.beans.factory.BeanFactory r1;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        specialinvoke r0.<org.springframework.beans.factory.wiring.BeanConfigurerSupport: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>(r1);

        return;
    }

    private void initWildcardDefinitionMap()
    {
        org.springframework.beans.factory.support.BeanDefinitionRegistry r8;
        java.util.regex.Matcher $r15;
        java.util.Map $r16, $r20;
        boolean $z0, $z1;
        java.util.regex.PatternSyntaxException $r26;
        java.util.Set $r1, $r2;
        java.util.logging.Logger $r12;
        java.util.List $r25, r28;
        java.lang.StringBuilder $r22, $r24, $r29;
        java.util.regex.Pattern $r14;
        org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder $r31;
        org.springframework.beans.factory.config.AutowireCapableBeanFactory $r7;
        java.lang.String[] $r6;
        java.util.logging.Level $r11;
        java.util.ArrayList $r30;
        int i0, i2, $i3;
        org.springframework.beans.factory.config.BeanDefinition $r9;
        java.lang.String $r10, r13, $r23, r27;
        java.util.Iterator $r3;
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        char $c1;
        org.springframework.context.ApplicationContext r5;
        java.lang.Object $r4, $r17;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        $r1 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        if null == $r1 goto label11;

        $r2 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.springframework.context.ApplicationContext) $r4;

        $r6 = interfaceinvoke r5.<org.springframework.context.ApplicationContext: java.lang.String[] getBeanDefinitionNames()>();

        i0 = lengthof $r6;

        i2 = 0;

     label02:
        if i2 >= i0 goto label10;

        r27 = $r6[i2];

        $z1 = specialinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: boolean isWildcardBeanName(java.lang.String)>(r27);

        if $z1 == 0 goto label09;

        $r7 = interfaceinvoke r5.<org.springframework.context.ApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()>();

        r8 = (org.springframework.beans.factory.support.BeanDefinitionRegistry) $r7;

        $r9 = interfaceinvoke r8.<org.springframework.beans.factory.support.BeanDefinitionRegistry: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>(r27);

        $r10 = interfaceinvoke $r9.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>();

        if null == $r10 goto label08;

        r13 = r27;

        $c1 = virtualinvoke r27.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c1;

        if $i3 != 42 goto label03;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r23 = virtualinvoke r27.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "\\.");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r14 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r27);

        $r15 = virtualinvoke $r14.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

        $r16 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Map wildCardBeanDefinitions>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r25 = (java.util.List) $r17;

        r28 = $r25;

        if $r25 != null goto label04;

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r28 = $r30;

        $r20 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Map wildCardBeanDefinitions>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r30);

     label04:
        $r31 = new org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder;

        specialinvoke $r31.<org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder: void <init>(java.lang.String,java.util.regex.Matcher)>(r13, $r15);

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r31);

     label05:
        goto label07;

     label06:
        $r26 := @caughtexception;

     label07:
        goto label09;

     label08:
        $r12 = <org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r11 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        staticinvoke <org.apache.cxf.common.logging.LogUtils: void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)>($r12, $r11, "WILDCARD_BEAN_ID_WITH_NO_CLASS_MSG", r27);

     label09:
        i2 = i2 + 1;

        goto label02;

     label10:
        goto label01;

     label11:
        return;

        catch java.util.regex.PatternSyntaxException from label03 to label05 with label06;
    }

    public void configureBean(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        java.lang.Object r1;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void configureBean(java.lang.String,java.lang.Object,boolean)>(null, r1, 1);

        return;
    }

    public void configureBean(java.lang.String, java.lang.Object)
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void configureBean(java.lang.String,java.lang.Object,boolean)>(r1, r2, 1);

        return;
    }

    public synchronized void configureBean(java.lang.String, java.lang.Object, boolean)
    {
        java.lang.Throwable $r16;
        org.springframework.beans.factory.config.AutowireCapableBeanFactory $r15;
        java.util.logging.Level $r8, $r17, $r19;
        org.springframework.beans.factory.support.AbstractBeanFactory $r12;
        java.lang.String r2, r21;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r5;
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        org.apache.cxf.configuration.spring.ConfigurerImpl$1 $r22;
        java.util.Set $r1, $r4;
        java.util.logging.Logger $r9, $r10, $r18, $r20;
        org.springframework.context.ApplicationContext r14;
        org.springframework.beans.factory.BeanFactory $r6, $r11, $r23;
        java.lang.Object r7, $r13;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r21 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        $r1 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        if null != $r1 goto label01;

        return;

     label01:
        if null != r21 goto label02;

        r21 = virtualinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.lang.String getBeanName(java.lang.Object)>(r7);

     label02:
        if null != r21 goto label03;

        return;

     label03:
        if z0 == 0 goto label04;

        specialinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void configureWithWildCard(java.lang.String,java.lang.Object)>(r21, r7);

     label04:
        r2 = r21;

        $r22 = new org.apache.cxf.configuration.spring.ConfigurerImpl$1;

        specialinvoke $r22.<org.apache.cxf.configuration.spring.ConfigurerImpl$1: void <init>(org.apache.cxf.configuration.spring.ConfigurerImpl,java.lang.String)>(r0, r21);

        virtualinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void setBeanWiringInfoResolver(org.springframework.beans.factory.wiring.BeanWiringInfoResolver)>($r22);

        $r4 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z5 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label07;

        $r13 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.springframework.context.ApplicationContext) $r13;

        $z3 = interfaceinvoke r14.<org.springframework.context.ApplicationContext: boolean containsBean(java.lang.String)>(r21);

        if $z3 == 0 goto label06;

        $r15 = interfaceinvoke r14.<org.springframework.context.ApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()>();

        $r23 = (org.springframework.beans.factory.BeanFactory) $r15;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>($r23);

     label06:
        goto label05;

     label07:
        $r6 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: org.springframework.beans.factory.BeanFactory beanFactory>;

        $z1 = $r6 instanceof org.springframework.beans.factory.support.AbstractBeanFactory;

        if $z1 == 0 goto label08;

        $r11 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r12 = (org.springframework.beans.factory.support.AbstractBeanFactory) $r11;

        virtualinvoke $r12.<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.config.BeanDefinition getMergedBeanDefinition(java.lang.String)>(r21);

     label08:
        specialinvoke r0.<org.springframework.beans.factory.wiring.BeanConfigurerSupport: void configureBean(java.lang.Object)>(r7);

        $r9 = <org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r8 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r9.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r8);

        if $z2 == 0 goto label09;

        $r10 = <org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r10.<java.util.logging.Logger: void fine(java.lang.String)>("Successfully performed injection.");

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        $r18 = <org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r17 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z4 = virtualinvoke $r18.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r17);

        if $z4 == 0 goto label11;

        $r20 = <org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r19 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r20.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r19, "NO_MATCHING_BEAN_MSG", r2);

     label11:
        return;

        catch org.springframework.beans.factory.NoSuchBeanDefinitionException from label07 to label09 with label10;
    }

    private void configureWithWildCard(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r16;
        org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder r10;
        java.util.regex.Matcher $r11, $r13, $r14;
        java.util.Map $r1, $r5;
        java.lang.String $r4, r12, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r8;
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        java.util.List r7;
        java.lang.Object r2, $r6, $r9;
        java.lang.Class $r3, r17;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r12 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Map wildCardBeanDefinitions>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        r17 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

     label01:
        $r3 = class "Ljava/lang/Object;";

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r17);

        if $z1 != 0 goto label11;

        $r4 = virtualinvoke r17.<java.lang.Class: java.lang.String getName()>();

        $r5 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Map wildCardBeanDefinitions>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r7 = (java.util.List) $r6;

        if r7 == null goto label10;

        $r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder) $r9;

        $r11 = r10.<org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder: java.util.regex.Matcher matcher>;

        entermonitor $r11;

     label03:
        $r13 = r10.<org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder: java.util.regex.Matcher matcher>;

        virtualinvoke $r13.<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>(r12);

        $r14 = r10.<org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder: java.util.regex.Matcher matcher>;

        $z3 = virtualinvoke $r14.<java.util.regex.Matcher: boolean matches()>();

        if $z3 == 0 goto label05;

        $r15 = r10.<org.apache.cxf.configuration.spring.ConfigurerImpl$MatcherHolder: java.lang.String wildCardId>;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void configureBean(java.lang.String,java.lang.Object,boolean)>($r15, r2, 0);

        exitmonitor $r11;

     label04:
        return;

     label05:
        exitmonitor $r11;

     label06:
        goto label09;

     label07:
        $r16 := @caughtexception;

        exitmonitor $r11;

     label08:
        throw $r16;

     label09:
        goto label02;

     label10:
        r17 = virtualinvoke r17.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label01;

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private boolean isWildcardBeanName(java.lang.String)
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r1;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i9, $i11;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(42);

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);

        $i7 = (int) -1;

        if $i1 != $i7 goto label1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(40);

        $i9 = (int) -1;

        if $i2 == $i9 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(41);

        $i11 = (int) -1;

        if $i3 == $i11 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected java.lang.String getBeanName(java.lang.Object)
    {
        java.lang.Object[] $r7;
        java.lang.NoSuchMethodException $r15, $r16;
        java.util.logging.Level $r4, $r13;
        java.lang.String $r6, $r9, $r11, r20;
        java.lang.reflect.Method r21;
        boolean $z0;
        org.apache.cxf.configuration.spring.ConfigurerImpl r19;
        java.lang.Class[] $r2, $r18;
        java.util.logging.Logger $r3, $r14;
        org.apache.cxf.configuration.Configurable $r10;
        java.lang.Exception $r12;
        java.lang.Object r0, $r8;
        java.lang.Class $r1, $r5, $r17;

        r19 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.cxf.configuration.Configurable;

        if $z0 == 0 goto label01;

        $r10 = (org.apache.cxf.configuration.Configurable) r0;

        $r11 = interfaceinvoke $r10.<org.apache.cxf.configuration.Configurable: java.lang.String getBeanName()>();

        return $r11;

     label01:
        r20 = null;

        r21 = null;

     label02:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = (java.lang.Class[]) null;

        r21 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getBeanName", $r2);

     label03:
        goto label08;

     label04:
        $r16 := @caughtexception;

     label05:
        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = (java.lang.Class[]) null;

        r21 = virtualinvoke $r17.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBeanName", $r18);

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

     label08:
        if r21 == null goto label12;

     label09:
        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke r21.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r7);

        $r9 = (java.lang.String) $r8;

        r20 = (java.lang.String) $r9;

     label10:
        goto label12;

     label11:
        $r12 := @caughtexception;

        $r14 = <org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r13 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        staticinvoke <org.apache.cxf.common.logging.LogUtils: void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r14, $r13, "ERROR_DETERMINING_BEAN_NAME_EXC", $r12);

     label12:
        if null != r20 goto label13;

        $r3 = <org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <org.apache.cxf.common.logging.LogUtils: void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)>($r3, $r4, "COULD_NOT_DETERMINE_BEAN_NAME_MSG", $r6);

     label13:
        return r20;

        catch java.lang.NoSuchMethodException from label02 to label03 with label04;
        catch java.lang.NoSuchMethodException from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public final void setApplicationContext(org.springframework.context.ApplicationContext)
    {
        org.springframework.beans.factory.BeanFactory $r4, $r6;
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        org.springframework.beans.factory.config.AutowireCapableBeanFactory $r3;
        java.util.concurrent.CopyOnWriteArraySet $r5;
        org.springframework.context.ApplicationContext r2;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r2 := @parameter0: org.springframework.context.ApplicationContext;

        $r5 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts> = $r5;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void addApplicationContext(org.springframework.context.ApplicationContext)>(r2);

        $r3 = interfaceinvoke r2.<org.springframework.context.ApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()>();

        $r6 = (org.springframework.beans.factory.BeanFactory) $r3;

        r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: org.springframework.beans.factory.BeanFactory beanFactory> = $r6;

        $r4 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: org.springframework.beans.factory.BeanFactory beanFactory>;

        specialinvoke r0.<org.springframework.beans.factory.wiring.BeanConfigurerSupport: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>($r4);

        return;
    }

    public final void addApplicationContext(org.springframework.context.ApplicationContext)
    {
        java.util.ArrayList $r4;
        org.springframework.context.ConfigurableApplicationContext $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r6, $r7;
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        java.util.Set $r2, $r3, $r5, $r10;
        org.springframework.context.ApplicationContext r1, r9, r13;
        java.lang.Object $r8, $r11;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        $r2 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label6;

        $r3 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.springframework.context.ApplicationContext) $r11;

        $z3 = r13 instanceof org.springframework.context.ConfigurableApplicationContext;

        if $z3 == 0 goto label2;

        $r12 = (org.springframework.context.ConfigurableApplicationContext) r13;

        $z4 = interfaceinvoke $r12.<org.springframework.context.ConfigurableApplicationContext: boolean isActive()>();

        if $z4 != 0 goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r13);

     label2:
        goto label1;

     label3:
        $r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.springframework.context.ApplicationContext) $r8;

        $r10 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        interfaceinvoke $r10.<java.util.Set: boolean remove(java.lang.Object)>(r9);

        goto label4;

     label5:
        specialinvoke r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: void initWildcardDefinitionMap()>();

     label6:
        return;
    }

    public void destroy()
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        java.util.Set $r1;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        specialinvoke r0.<org.springframework.beans.factory.wiring.BeanConfigurerSupport: void destroy()>();

        $r1 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

        return;
    }

    public java.lang.Class getRegistrationType()
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        return class "Lorg/apache/cxf/configuration/Configurer;";
    }

    protected java.util.Set getAppContexts()
    {
        org.apache.cxf.configuration.spring.ConfigurerImpl r0;
        java.util.Set $r1;

        r0 := @this: org.apache.cxf.configuration.spring.ConfigurerImpl;

        $r1 = r0.<org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.Set appContexts>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/configuration/spring/ConfigurerImpl;");

        <org.apache.cxf.configuration.spring.ConfigurerImpl: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
