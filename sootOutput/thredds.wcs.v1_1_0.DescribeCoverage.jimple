public class thredds.wcs.v1_1_0.DescribeCoverage extends java.lang.Object
{
    private org.slf4j.Logger logger;
    protected static final org.jdom.Namespace wcsNS;
    protected static final org.jdom.Namespace owcsNS;
    protected static final org.jdom.Namespace owsNS;
    protected static final org.jdom.Namespace xlinkNS;
    private java.net.URI serverURI;
    private java.util.List identifiers;
    private java.lang.String version;
    private ucar.nc2.dt.GridDataset dataset;
    private org.jdom.Document describeCoverageDoc;

    public void <init>(java.net.URI, java.util.List, ucar.nc2.dt.GridDataset)
    {
        int $i0, $i1;
        java.net.URI r2, $r5;
        java.lang.String $r16;
        org.slf4j.Logger $r1;
        java.lang.IllegalArgumentException $r9, $r10, $r17, $r18;
        thredds.wcs.v1_1_0.DescribeCoverage r0;
        ucar.nc2.dt.GridDataset r4, $r8;
        java.util.List r3, $r6, $r7, $r13;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;

        r0 := @this: thredds.wcs.v1_1_0.DescribeCoverage;

        r2 := @parameter0: java.net.URI;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: ucar.nc2.dt.GridDataset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/wcs/v1_1_0/DescribeCoverage;");

        r0.<thredds.wcs.v1_1_0.DescribeCoverage: org.slf4j.Logger logger> = $r1;

        r0.<thredds.wcs.v1_1_0.DescribeCoverage: java.lang.String version> = "1.1.0";

        r0.<thredds.wcs.v1_1_0.DescribeCoverage: java.net.URI serverURI> = r2;

        r0.<thredds.wcs.v1_1_0.DescribeCoverage: java.util.List identifiers> = r3;

        r0.<thredds.wcs.v1_1_0.DescribeCoverage: ucar.nc2.dt.GridDataset dataset> = r4;

        $r5 = r0.<thredds.wcs.v1_1_0.DescribeCoverage: java.net.URI serverURI>;

        if $r5 != null goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null server URI required.");

        throw $r18;

     label1:
        $r6 = r0.<thredds.wcs.v1_1_0.DescribeCoverage: java.util.List identifiers>;

        if $r6 != null goto label2;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null identifier list required.");

        throw $r17;

     label2:
        $r7 = r0.<thredds.wcs.v1_1_0.DescribeCoverage: java.util.List identifiers>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 >= 1 goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Identifier list must contain at least one ID <");

        $r13 = r0.<thredds.wcs.v1_1_0.DescribeCoverage: java.util.List identifiers>;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label3:
        $r8 = r0.<thredds.wcs.v1_1_0.DescribeCoverage: ucar.nc2.dt.GridDataset dataset>;

        if $r8 != null goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null dataset required.");

        throw $r9;

     label4:
        return;
    }

    public org.jdom.Document getDescribeCoverageDoc()
    {
        org.jdom.Document $r1, $r2, $r3;
        thredds.wcs.v1_1_0.DescribeCoverage r0;

        r0 := @this: thredds.wcs.v1_1_0.DescribeCoverage;

        $r1 = r0.<thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Document describeCoverageDoc>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Document generateDescribeCoverageDoc()>();

        r0.<thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Document describeCoverageDoc> = $r3;

     label1:
        $r2 = r0.<thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Document describeCoverageDoc>;

        return $r2;
    }

    public void writeDescribeCoverageDoc(java.io.PrintWriter) throws java.io.IOException
    {
        java.io.PrintWriter r4;
        org.jdom.Document $r3;
        org.jdom.output.Format $r1;
        org.jdom.output.XMLOutputter $r0;
        thredds.wcs.v1_1_0.DescribeCoverage r2;

        r2 := @this: thredds.wcs.v1_1_0.DescribeCoverage;

        r4 := @parameter0: java.io.PrintWriter;

        $r0 = new org.jdom.output.XMLOutputter;

        $r1 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r0.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r1);

        $r3 = virtualinvoke r2.<thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Document getDescribeCoverageDoc()>();

        virtualinvoke $r0.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.Writer)>($r3, r4);

        return;
    }

    public org.jdom.Document generateDescribeCoverageDoc()
    {
        java.util.Iterator $r7;
        thredds.wcs.v1_1_0.DescribeCoverage r5;
        java.util.List $r6;
        org.jdom.Document $r8;
        org.jdom.Namespace $r1, $r2, $r3, $r4;
        java.lang.Object $r9;
        java.lang.String r10;
        org.jdom.Element $r0, $r11;
        boolean $z0;

        r5 := @this: thredds.wcs.v1_1_0.DescribeCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("CoverageDescriptions", $r1);

        $r2 = <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace owcsNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r2);

        $r3 = <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace owsNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r3);

        $r4 = <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace xlinkNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r4);

        $r6 = r5.<thredds.wcs.v1_1_0.DescribeCoverage: java.util.List identifiers>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r5.<thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Element genCovDescrip(java.lang.String)>(r10);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

        goto label1;

     label2:
        $r8 = new org.jdom.Document;

        specialinvoke $r8.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        return $r8;
    }

    public org.jdom.Element genCovDescrip(java.lang.String)
    {
        org.jdom.Namespace $r1, $r3;
        java.lang.String r4;
        org.jdom.Element $r0, $r2, $r5;
        thredds.wcs.v1_1_0.DescribeCoverage r6;

        r6 := @this: thredds.wcs.v1_1_0.DescribeCoverage;

        r4 := @parameter0: java.lang.String;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("CoverageDescription", $r1);

        $r2 = new org.jdom.Element;

        $r3 = <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r2.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Identifier", $r3);

        $r5 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r4);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r5);

        return $r0;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r0, $r1, $r2, $r3;

        $r0 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://www.opengis.net/wcs/1.1");

        <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace wcsNS> = $r0;

        $r1 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>("owcs", "http://www.opengis.net/wcs/1.1/ows");

        <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace owcsNS> = $r1;

        $r2 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>("ows", "http://www.opengis.net/ows");

        <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace owsNS> = $r2;

        $r3 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>("xlink", "http://www.w3.org/1999/xlink");

        <thredds.wcs.v1_1_0.DescribeCoverage: org.jdom.Namespace xlinkNS> = $r3;

        return;
    }
}
