public final enum class org.wiztools.restclient.FileType extends java.lang.Enum
{
    public static final enum org.wiztools.restclient.FileType REQUEST;
    public static final enum org.wiztools.restclient.FileType RESPONSE;
    public static final enum org.wiztools.restclient.FileType ARCHIVE;
    public static final enum org.wiztools.restclient.FileType HISTORY;
    public static final java.lang.String REQUEST_EXT;
    public static final java.lang.String RESPONSE_EXT;
    public static final java.lang.String ARCHIVE_EXT;
    public static final java.lang.String HISTORY_EXT;
    private static final org.wiztools.restclient.FileType[] $VALUES;

    public static org.wiztools.restclient.FileType[] values()
    {
        java.lang.Object $r1;
        org.wiztools.restclient.FileType[] $r0, $r2;

        $r0 = <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.wiztools.restclient.FileType[]) $r1;

        return $r2;
    }

    public static org.wiztools.restclient.FileType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.wiztools.restclient.FileType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/wiztools/restclient/FileType;", r0);

        $r2 = (org.wiztools.restclient.FileType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.wiztools.restclient.FileType r0;

        r0 := @this: org.wiztools.restclient.FileType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public java.lang.String getExtension()
    {
        int[] $r1;
        int $i0, $i1;
        org.wiztools.restclient.FileType r0;

        r0 := @this: org.wiztools.restclient.FileType;

        $r1 = <org.wiztools.restclient.FileType$1: int[] $SwitchMap$org$wiztools$restclient$FileType>;

        $i0 = virtualinvoke r0.<org.wiztools.restclient.FileType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        return ".rcq";

     label2:
        return ".rcs";

     label3:
        return ".rcr";

     label4:
        return ".rch";

     label5:
        return null;
    }

    public static boolean isRequest(java.io.File)
    {
        java.lang.String $r1, $r2;
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcq");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isResponse(java.io.File)
    {
        java.lang.String $r1, $r2;
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcs");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isArchive(java.io.File)
    {
        java.lang.String $r1, $r2;
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcr");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isHistory(java.io.File)
    {
        java.lang.String $r1, $r2;
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rch");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String getType(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1, $r2, r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        r3 = null;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcq");

        if $z0 == 0 goto label1;

        r3 = ".rcq";

        goto label4;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcs");

        if $z1 == 0 goto label2;

        r3 = ".rcs";

        goto label4;

     label2:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcr");

        if $z2 == 0 goto label3;

        r3 = ".rcr";

        goto label4;

     label3:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rch");

        if $z3 == 0 goto label4;

        r3 = ".rch";

     label4:
        return r3;
    }

    public static java.io.File getWithExtension(java.io.File, org.wiztools.restclient.FileType)
    {
        java.io.File r0, $r5;
        org.wiztools.restclient.FileType r3;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.lang.String $r1, $r2, $r4, $r6, $r8, $r10, $r12;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        r3 := @parameter1: org.wiztools.restclient.FileType;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke r3.<org.wiztools.restclient.FileType: java.lang.String getExtension()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r5 = new java.io.File;

        $r6 = virtualinvoke r0.<java.io.File: java.lang.String getParent()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r3.<org.wiztools.restclient.FileType: java.lang.String getExtension()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r6, $r12);

        return $r5;
    }

    static void <clinit>()
    {
        org.wiztools.restclient.FileType $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        org.wiztools.restclient.FileType[] $r4;

        <org.wiztools.restclient.FileType: java.lang.String HISTORY_EXT> = ".rch";

        <org.wiztools.restclient.FileType: java.lang.String ARCHIVE_EXT> = ".rcr";

        <org.wiztools.restclient.FileType: java.lang.String RESPONSE_EXT> = ".rcs";

        <org.wiztools.restclient.FileType: java.lang.String REQUEST_EXT> = ".rcq";

        $r0 = new org.wiztools.restclient.FileType;

        specialinvoke $r0.<org.wiztools.restclient.FileType: void <init>(java.lang.String,int)>("REQUEST", 0);

        <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType REQUEST> = $r0;

        $r1 = new org.wiztools.restclient.FileType;

        specialinvoke $r1.<org.wiztools.restclient.FileType: void <init>(java.lang.String,int)>("RESPONSE", 1);

        <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType RESPONSE> = $r1;

        $r2 = new org.wiztools.restclient.FileType;

        specialinvoke $r2.<org.wiztools.restclient.FileType: void <init>(java.lang.String,int)>("ARCHIVE", 2);

        <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType ARCHIVE> = $r2;

        $r3 = new org.wiztools.restclient.FileType;

        specialinvoke $r3.<org.wiztools.restclient.FileType: void <init>(java.lang.String,int)>("HISTORY", 3);

        <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType HISTORY> = $r3;

        $r4 = newarray (org.wiztools.restclient.FileType)[4];

        $r5 = <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType REQUEST>;

        $r4[0] = $r5;

        $r6 = <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType RESPONSE>;

        $r4[1] = $r6;

        $r7 = <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType ARCHIVE>;

        $r4[2] = $r7;

        $r8 = <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType HISTORY>;

        $r4[3] = $r8;

        <org.wiztools.restclient.FileType: org.wiztools.restclient.FileType[] $VALUES> = $r4;

        return;
    }
}
