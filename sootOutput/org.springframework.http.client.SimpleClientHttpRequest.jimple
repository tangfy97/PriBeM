final class org.springframework.http.client.SimpleClientHttpRequest extends org.springframework.http.client.AbstractClientHttpRequest
{
    private final java.net.HttpURLConnection connection;

    void <init>(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection r1;
        org.springframework.http.client.SimpleClientHttpRequest r0;

        r0 := @this: org.springframework.http.client.SimpleClientHttpRequest;

        r1 := @parameter0: java.net.HttpURLConnection;

        specialinvoke r0.<org.springframework.http.client.AbstractClientHttpRequest: void <init>()>();

        r0.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection> = r1;

        return;
    }

    public org.springframework.http.HttpMethod getMethod()
    {
        java.net.HttpURLConnection $r1;
        org.springframework.http.client.SimpleClientHttpRequest r0;
        org.springframework.http.HttpMethod $r3;
        java.lang.String $r2;

        r0 := @this: org.springframework.http.client.SimpleClientHttpRequest;

        $r1 = r0.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        $r3 = staticinvoke <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod valueOf(java.lang.String)>($r2);

        return $r3;
    }

    public java.net.URI getURI()
    {
        java.net.HttpURLConnection $r1;
        java.lang.IllegalStateException $r5;
        java.net.URL $r2;
        java.net.URISyntaxException $r4;
        org.springframework.http.client.SimpleClientHttpRequest r0;
        java.lang.StringBuilder $r6, $r8;
        java.net.URI $r3;
        java.lang.String $r7, $r9;

        r0 := @this: org.springframework.http.client.SimpleClientHttpRequest;

     label1:
        $r1 = r0.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.net.URI toURI()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not get HttpURLConnection URI: ");

        $r7 = virtualinvoke $r4.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    protected org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders, byte[]) throws java.io.IOException
    {
        java.net.HttpURLConnection $r13, $r14, $r15, $r16, $r18, $r20, $r22;
        byte[] r19;
        org.springframework.http.client.SimpleClientHttpResponse $r17;
        int $i0;
        java.lang.String r6, r11;
        boolean $z0, $z1, $z2, $z3;
        java.io.OutputStream $r21;
        java.util.Map$Entry r4;
        java.util.Iterator $r2, $r9;
        org.springframework.http.HttpHeaders r0;
        java.util.Set $r1;
        java.util.List $r8;
        org.springframework.http.client.SimpleClientHttpRequest r12;
        java.lang.Object $r3, $r5, $r7, $r10;

        r12 := @this: org.springframework.http.client.SimpleClientHttpRequest;

        r0 := @parameter0: org.springframework.http.HttpHeaders;

        r19 := @parameter1: byte[];

        $r1 = virtualinvoke r0.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.util.List) $r7;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        $r13 = r12.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        virtualinvoke $r13.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>(r6, r11);

     label3:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r14 = r12.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        $z2 = virtualinvoke $r14.<java.net.HttpURLConnection: boolean getDoOutput()>();

        if $z2 == 0 goto label5;

        $r22 = r12.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        $i0 = lengthof r19;

        virtualinvoke $r22.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

     label5:
        $r15 = r12.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        virtualinvoke $r15.<java.net.HttpURLConnection: void connect()>();

        $r16 = r12.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        $z3 = virtualinvoke $r16.<java.net.HttpURLConnection: boolean getDoOutput()>();

        if $z3 == 0 goto label6;

        $r20 = r12.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        $r21 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        staticinvoke <org.springframework.util.FileCopyUtils: void copy(byte[],java.io.OutputStream)>(r19, $r21);

     label6:
        $r17 = new org.springframework.http.client.SimpleClientHttpResponse;

        $r18 = r12.<org.springframework.http.client.SimpleClientHttpRequest: java.net.HttpURLConnection connection>;

        specialinvoke $r17.<org.springframework.http.client.SimpleClientHttpResponse: void <init>(java.net.HttpURLConnection)>($r18);

        return $r17;
    }
}
