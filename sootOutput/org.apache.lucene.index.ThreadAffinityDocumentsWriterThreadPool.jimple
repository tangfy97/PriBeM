class org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool extends org.apache.lucene.index.DocumentsWriterPerThreadPool
{
    private java.util.Map threadBindings;
    static final boolean $assertionsDisabled;

    public void <init>(int)
    {
        org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool r0;
        int i0, $i1;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.AssertionError $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool: void <init>(int)>(i0);

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: java.util.Map threadBindings> = $r1;

        $z0 = <org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: int getMaxThreadStates()>();

        if $i1 >= 1 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getAndLock(java.lang.Thread, org.apache.lucene.index.DocumentsWriter)
    {
        org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool r0;
        java.lang.AssertionError $r7, $r9;
        org.apache.lucene.index.DocumentsWriter r10;
        java.lang.Thread r1;
        java.util.Map $r2, $r8;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r4, $r5, $r6, r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r3;

        r0 := @this: org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool;

        r1 := @parameter0: java.lang.Thread;

        r10 := @parameter1: org.apache.lucene.index.DocumentsWriter;

        $r2 = r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: java.util.Map threadBindings>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState) $r3;

        if r4 == null goto label1;

        $z3 = virtualinvoke r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean tryLock()>();

        if $z3 == 0 goto label1;

        return r4;

     label1:
        $r5 = virtualinvoke r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState minContendedThreadState()>();

        r11 = $r5;

        if $r5 == null goto label2;

        $z2 = virtualinvoke $r5.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean hasQueuedThreads()>();

        if $z2 == 0 goto label5;

     label2:
        $r6 = virtualinvoke r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState newThreadState()>();

        if $r6 == null goto label4;

        $z0 = <org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke $r6.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isHeldByCurrentThread()>();

        if $z1 != 0 goto label3;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label3:
        $r8 = r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: java.util.Map threadBindings>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return $r6;

     label4:
        if $r5 != null goto label5;

        r11 = virtualinvoke r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState minContendedThreadState()>();

     label5:
        $z4 = <org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: boolean $assertionsDisabled>;

        if $z4 != 0 goto label6;

        if r11 != null goto label6;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("ThreadState is null");

        throw $r7;

     label6:
        virtualinvoke r11.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void lock()>();

        return r11;
    }

    public org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool clone()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1;
        org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool r0, r2;
        java.util.concurrent.ConcurrentHashMap $r3;

        r0 := @this: org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool;

        $r1 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool clone()>();

        r2 = (org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool) $r1;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r2.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: java.util.Map threadBindings> = $r3;

        return r2;
    }

    public volatile org.apache.lucene.index.DocumentsWriterPerThreadPool clone()
    {
        org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool r0, $r1;

        r0 := @this: org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool r0, $r1;

        r0 := @this: org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/ThreadAffinityDocumentsWriterThreadPool;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: boolean $assertionsDisabled> = $z1;

        return;
    }
}
