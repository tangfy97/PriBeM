public class thredds.catalog.dl.DIFWriter extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private static final org.jdom.Namespace defNS;
    private static java.lang.String schemaLocation;
    private java.lang.String fileDir;
    private java.lang.StringBuffer messBuffer;
    private boolean debug;

    public void <init>()
    {
        thredds.catalog.dl.DIFWriter r0;

        r0 := @this: thredds.catalog.dl.DIFWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.dl.DIFWriter: boolean debug> = 0;

        return;
    }

    public void writeDatasetEntries(thredds.catalog.InvCatalogImpl, java.lang.String, java.lang.StringBuffer)
    {
        java.io.PrintStream $r6;
        java.io.ByteArrayOutputStream $r5;
        thredds.catalog.dl.DIFWriter r0;
        java.io.File $r3;
        thredds.catalog.crawl.CatalogCrawler $r7;
        thredds.catalog.InvCatalogImpl r8;
        java.lang.StringBuffer r2;
        thredds.catalog.dl.DIFWriter$1 $r4;
        java.lang.String r1, $r9;
        boolean $z0;

        r0 := @this: thredds.catalog.dl.DIFWriter;

        r8 := @parameter0: thredds.catalog.InvCatalogImpl;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.StringBuffer;

        r0.<thredds.catalog.dl.DIFWriter: java.lang.String fileDir> = r1;

        r0.<thredds.catalog.dl.DIFWriter: java.lang.StringBuffer messBuffer> = r2;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

     label1:
        $r4 = new thredds.catalog.dl.DIFWriter$1;

        specialinvoke $r4.<thredds.catalog.dl.DIFWriter$1: void <init>(thredds.catalog.dl.DIFWriter)>(r0);

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $r6 = new java.io.PrintStream;

        specialinvoke $r6.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r5);

        $r7 = new thredds.catalog.crawl.CatalogCrawler;

        specialinvoke $r7.<thredds.catalog.crawl.CatalogCrawler: void <init>(int,boolean,thredds.catalog.crawl.CatalogCrawler$Listener)>(0, 1, $r4);

        virtualinvoke $r7.<thredds.catalog.crawl.CatalogCrawler: int crawl(thredds.catalog.InvCatalogImpl,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object)>(r8, null, $r6, null);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n*********************\n");

        $r9 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        return;
    }

    public void doOneDataset(thredds.catalog.InvDataset)
    {
        boolean $z0, $z1;
        thredds.catalog.InvDataset r1;
        thredds.catalog.dl.DIFWriter r0;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r16, $r18, $r20, $r23, $r25, $r27, $r28, $r30, $r32, $r34;
        java.io.BufferedOutputStream $r12;
        java.lang.StringBuffer $r2, $r14, $r15, $r24;
        java.lang.String $r3, $r4, $r6, $r11, $r19, $r21, $r26, $r29, $r33, $r35;
        java.io.PrintStream $r17;
        org.slf4j.Logger $r31;
        java.io.FileOutputStream $r13;
        java.io.IOException $r22;

        r0 := @this: thredds.catalog.dl.DIFWriter;

        r1 := @parameter0: thredds.catalog.InvDataset;

        $z0 = r0.<thredds.catalog.dl.DIFWriter: boolean debug>;

        if $z0 == 0 goto label1;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doDataset ");

        $r19 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label1:
        $r2 = r0.<thredds.catalog.dl.DIFWriter: java.lang.StringBuffer messBuffer>;

        $z1 = virtualinvoke r0.<thredds.catalog.dl.DIFWriter: boolean isDatasetUseable(thredds.catalog.InvDataset,java.lang.StringBuffer)>(r1, $r2);

        if $z1 == 0 goto label5;

        $r3 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r3, "/", "-");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<thredds.catalog.dl.DIFWriter: java.lang.String fileDir>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dif.xml");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r12 = new java.io.BufferedOutputStream;

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.lang.String)>($r11);

        specialinvoke $r12.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r13);

        $r14 = r0.<thredds.catalog.dl.DIFWriter: java.lang.StringBuffer messBuffer>;

        specialinvoke r0.<thredds.catalog.dl.DIFWriter: void writeOneEntry(thredds.catalog.InvDataset,java.io.OutputStream,java.lang.StringBuffer)>(r1, $r12, $r14);

        virtualinvoke $r12.<java.io.OutputStream: void close()>();

        $r15 = r0.<thredds.catalog.dl.DIFWriter: java.lang.StringBuffer messBuffer>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" OK on Write\n");

     label3:
        goto label5;

     label4:
        $r22 := @caughtexception;

        $r24 = r0.<thredds.catalog.dl.DIFWriter: java.lang.StringBuffer messBuffer>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIFWriter failed on write ");

        $r26 = virtualinvoke $r22.<java.io.IOException: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = <thredds.catalog.dl.DIFWriter: org.slf4j.Logger log>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIFWriter failed on write ");

        $r33 = virtualinvoke $r22.<java.io.IOException: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r35, $r22);

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void doOneDataset(thredds.catalog.InvDataset, java.lang.String, java.lang.StringBuffer)
    {
        boolean $z0, $z1;
        thredds.catalog.InvDataset r1;
        thredds.catalog.dl.DIFWriter r0;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r14, $r16, $r18, $r21, $r22, $r24, $r25, $r27, $r29, $r31;
        java.io.BufferedOutputStream $r12;
        java.lang.StringBuffer r2;
        java.lang.String $r3, $r4, r6, $r11, $r17, $r19, $r23, $r26, $r30, $r32;
        java.io.PrintStream $r15;
        org.slf4j.Logger $r28;
        java.io.FileOutputStream $r13;
        java.io.IOException $r20;

        r0 := @this: thredds.catalog.dl.DIFWriter;

        r1 := @parameter0: thredds.catalog.InvDataset;

        r6 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.StringBuffer;

        $z0 = r0.<thredds.catalog.dl.DIFWriter: boolean debug>;

        if $z0 == 0 goto label1;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doDataset ");

        $r17 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label1:
        $z1 = virtualinvoke r0.<thredds.catalog.dl.DIFWriter: boolean isDatasetUseable(thredds.catalog.InvDataset,java.lang.StringBuffer)>(r1, r2);

        if $z1 == 0 goto label5;

        $r3 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r3, "/", "-");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dif.xml");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r12 = new java.io.BufferedOutputStream;

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.lang.String)>($r11);

        specialinvoke $r12.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r13);

        specialinvoke r0.<thredds.catalog.dl.DIFWriter: void writeOneEntry(thredds.catalog.InvDataset,java.io.OutputStream,java.lang.StringBuffer)>(r1, $r12, r2);

        virtualinvoke $r12.<java.io.OutputStream: void close()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" OK on Write\n");

     label3:
        goto label5;

     label4:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIFWriter failed on write ");

        $r23 = virtualinvoke $r20.<java.io.IOException: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = <thredds.catalog.dl.DIFWriter: org.slf4j.Logger log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIFWriter failed on write ");

        $r30 = virtualinvoke $r20.<java.io.IOException: java.lang.String getMessage()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r32, $r20);

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public boolean isDatasetUseable(thredds.catalog.InvDataset, java.lang.StringBuffer)
    {
        thredds.catalog.ThreddsMetadata$Variables $r13, r32;
        thredds.catalog.InvDataset r3;
        boolean $z0, z1, z2, z3;
        thredds.catalog.dl.DIFWriter r31;
        java.util.List $r19, $r20, $r21, $r33;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9, $r14, $r15, $r16, $r17, $r22, $r23, $r25, $r26, $r28, $r29;
        java.lang.StringBuffer r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r7, $r10, $r11, $r12, $r18, $r24, $r27, $r30, $r34;

        r31 := @this: thredds.catalog.dl.DIFWriter;

        r3 := @parameter0: thredds.catalog.InvDataset;

        r0 := @parameter1: java.lang.StringBuffer;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset ");

        $r4 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id = ");

        $r7 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $z0 = virtualinvoke r3.<thredds.catalog.InvDataset: boolean isHarvest()>();

        if $z0 != 0 goto label01;

        z1 = 0;

        z3 = 0;

        z2 = 0;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset ");

        $r24 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id = ");

        $r27 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has harvest = false\n");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

     label01:
        $r11 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getName()>();

        if $r11 != null goto label02;

        z1 = 0;

        z3 = 0;

        z2 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" missing Name field\n");

     label02:
        $r12 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getUniqueID()>();

        if $r12 != null goto label03;

        z1 = 0;

        z3 = 0;

        z2 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" missing ID field\n");

     label03:
        $r13 = virtualinvoke r3.<thredds.catalog.InvDataset: thredds.catalog.ThreddsMetadata$Variables getVariables(java.lang.String)>("DIF");

        r32 = $r13;

        if $r13 == null goto label04;

        $r21 = virtualinvoke $r13.<thredds.catalog.ThreddsMetadata$Variables: java.util.List getVariableList()>();

        $i3 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i3 != 0 goto label05;

     label04:
        r32 = virtualinvoke r3.<thredds.catalog.InvDataset: thredds.catalog.ThreddsMetadata$Variables getVariables(java.lang.String)>("GRIB-1");

     label05:
        if r32 == null goto label06;

        $r20 = virtualinvoke r32.<thredds.catalog.ThreddsMetadata$Variables: java.util.List getVariableList()>();

        $i2 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i2 != 0 goto label07;

     label06:
        r32 = virtualinvoke r3.<thredds.catalog.InvDataset: thredds.catalog.ThreddsMetadata$Variables getVariables(java.lang.String)>("GRIB-2");

     label07:
        if r32 == null goto label08;

        $r19 = virtualinvoke r32.<thredds.catalog.ThreddsMetadata$Variables: java.util.List getVariableList()>();

        $i1 = interfaceinvoke $r19.<java.util.List: int size()>();

        if $i1 != 0 goto label09;

     label08:
        z1 = 0;

        z3 = 0;

        z2 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" missing Variables with DIF or GRIB compatible vocabulary\n");

     label09:
        $r33 = virtualinvoke r3.<thredds.catalog.InvDataset: java.util.List getPublishers()>();

        if $r33 == null goto label10;

        $i0 = interfaceinvoke $r33.<java.util.List: int size()>();

        if $i0 != 0 goto label11;

     label10:
        z1 = 0;

        z3 = 0;

        z2 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" must have publisher element that defines the data center\n");

     label11:
        $r34 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("summary");

        if $r34 != null goto label12;

        z1 = 0;

        z3 = 0;

        z2 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" must have documentation element of type summary\n");

     label12:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" useable= ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        return z3;
    }

    private void writeOneEntry(thredds.catalog.InvDataset, java.io.OutputStream, java.lang.StringBuffer) throws java.io.IOException
    {
        org.jdom.output.Format $r18;
        org.jdom.output.XMLOutputter $r17;
        org.jdom.Document $r2;
        java.lang.StringBuffer r5;
        org.jdom.Namespace $r1, $r6, $r7, $r9, $r16;
        java.lang.String $r10, $r13, $r15;
        thredds.catalog.InvDataset r4;
        java.io.OutputStream r19;
        thredds.catalog.dl.DIFWriter r3;
        java.lang.StringBuilder $r8, $r11, $r12, $r14;
        org.jdom.Element $r0;

        r3 := @this: thredds.catalog.dl.DIFWriter;

        r4 := @parameter0: thredds.catalog.InvDataset;

        r19 := @parameter1: java.io.OutputStream;

        r5 := @parameter2: java.lang.StringBuffer;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("DIF", $r1);

        $r2 = new org.jdom.Document;

        specialinvoke $r2.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        specialinvoke r3.<thredds.catalog.dl.DIFWriter: void writeDataset(thredds.catalog.InvDataset,org.jdom.Element,java.lang.StringBuffer)>(r4, $r0, r5);

        $r6 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r6);

        $r7 = <thredds.catalog.XMLEntityResolver: org.jdom.Namespace xsiNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        $r10 = virtualinvoke $r9.<org.jdom.Namespace: java.lang.String getURI()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = <thredds.catalog.dl.DIFWriter: java.lang.String schemaLocation>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = <thredds.catalog.XMLEntityResolver: org.jdom.Namespace xsiNS>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String,org.jdom.Namespace)>("schemaLocation", $r15, $r16);

        $r17 = new org.jdom.output.XMLOutputter;

        $r18 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r17.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r18);

        virtualinvoke $r17.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>($r2, r19);

        return;
    }

    private java.util.Iterator translateGribVocabulary(thredds.catalog.ThreddsMetadata$Variables, boolean, java.lang.StringBuffer)
    {
        thredds.catalog.ThreddsMetadata$Variables r0;
        boolean z0;
        java.util.Collection $r4;
        thredds.catalog.dl.VocabTranslator r1, $r33;
        thredds.catalog.dl.DIFWriter r32;
        java.util.List $r3;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28;
        java.util.HashMap $r2;
        java.lang.StringBuffer r15;
        int $i0, i1;
        java.lang.String $r8, $r9, $r12, $r13, $r14, $r20, $r23, $r26, $r29;
        org.slf4j.Logger $r31;
        java.util.Iterator $r5;
        thredds.catalog.ThreddsMetadata$Variable r7, $r11;
        java.io.IOException $r30;
        java.lang.Object $r6, $r10;

        r32 := @this: thredds.catalog.dl.DIFWriter;

        r0 := @parameter0: thredds.catalog.ThreddsMetadata$Variables;

        z0 := @parameter1: boolean;

        r15 := @parameter2: java.lang.StringBuffer;

        if r0 != null goto label01;

        return null;

     label01:
        if z0 == 0 goto label02;

        $r33 = staticinvoke <thredds.catalog.dl.Grib1toDIF: thredds.catalog.dl.Grib1toDIF getInstance()>();

        goto label03;

     label02:
        $r33 = staticinvoke <thredds.catalog.dl.Grib2toDIF: thredds.catalog.dl.Grib2toDIF getInstance()>();

     label03:
        r1 = $r33;

     label04:
        goto label06;

     label05:
        $r30 := @caughtexception;

        $r31 = <thredds.catalog.dl.DIFWriter: org.slf4j.Logger log>;

        interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("DIFWriter failed opening GribtoDIF VocabTranslator ", $r30);

        return null;

     label06:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$Variables: java.util.List getVariableList()>();

        i1 = 0;

     label07:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label11;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (thredds.catalog.ThreddsMetadata$Variable) $r6;

        $r8 = virtualinvoke r7.<thredds.catalog.ThreddsMetadata$Variable: java.lang.String getVocabularyId()>();

        if $r8 != null goto label08;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** no id for ");

        $r26 = virtualinvoke r7.<thredds.catalog.ThreddsMetadata$Variable: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        goto label10;

     label08:
        $r9 = interfaceinvoke r1.<thredds.catalog.dl.VocabTranslator: java.lang.String translate(java.lang.String)>($r8);

        if $r9 != null goto label09;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** no translation for ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r20 = virtualinvoke r7.<thredds.catalog.ThreddsMetadata$Variable: java.lang.String getVocabularyName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        goto label10;

     label09:
        $r10 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        if $r10 != null goto label10;

        $r11 = new thredds.catalog.ThreddsMetadata$Variable;

        $r12 = virtualinvoke r7.<thredds.catalog.ThreddsMetadata$Variable: java.lang.String getName()>();

        $r13 = virtualinvoke r7.<thredds.catalog.ThreddsMetadata$Variable: java.lang.String getDescription()>();

        $r14 = virtualinvoke r7.<thredds.catalog.ThreddsMetadata$Variable: java.lang.String getUnits()>();

        specialinvoke $r11.<thredds.catalog.ThreddsMetadata$Variable: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r12, $r13, $r9, $r14, $r8);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

     label10:
        i1 = i1 + 1;

        goto label07;

     label11:
        $r4 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        return $r5;

        catch java.io.IOException from label01 to label04 with label05;
    }

    private void writeDataset(thredds.catalog.InvDataset, org.jdom.Element, java.lang.StringBuffer)
    {
        thredds.catalog.ThreddsMetadata$Variables $r11, $r12, $r13;
        org.jdom.Namespace $r5, $r8, $r28, $r31, $r36, $r54, $r60, $r62, $r65, $r67, $r71, $r75, $r79, $r83, $r85, $r90, $r101, $r105, $r124, $r126;
        thredds.catalog.InvCatalog $r18;
        thredds.catalog.InvCatalogImpl r133;
        java.lang.StringBuilder $r21, $r23, $r24, $r41, $r42, $r43, $r45, $r48, $r50, $r51, $r96, $r97, $r98;
        java.lang.StringBuffer r109;
        org.jdom.Element r3, $r4, $r6, $r7, $r10, $r27, $r29, $r30, $r32, $r35, $r38, $r40, $r53, $r55, $r59, $r61, $r63, $r64, $r66, $r69, $r70, $r73, $r74, $r77, $r78, $r81, $r82, $r84, $r88, $r89, $r93, $r100, $r102, $r104, $r107, $r123, $r125, $r127, $r135, $r136;
        java.util.Date $r34;
        ucar.nc2.units.TimeDuration $r95;
        ucar.nc2.units.DateType $r33, $r86, $r91, $r94;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, i12, i13;
        thredds.catalog.ThreddsMetadata$Variable r118, r119, r120;
        java.lang.Object $r56, $r103, $r111, $r114, $r116;
        thredds.catalog.InvCatalogRef r130;
        thredds.catalog.ThreddsMetadata$Vocab $r57, r122;
        ucar.nc2.units.DateRange $r14;
        java.lang.String $r1, $r2, $r9, $r16, $r20, $r22, $r25, $r37, $r39, $r44, $r47, $r49, $r52, $r58, $r68, $r72, $r76, $r80, $r87, $r92, $r99, $r106, $r129, r132, $r134;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r15;
        thredds.catalog.InvAccess $r138;
        java.net.URI $r19, $r46, r131;
        thredds.catalog.InvDataset r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        thredds.catalog.dl.DIFWriter r26;
        java.util.List $r17, $r108, $r112, $r115, $r117, $r121;
        thredds.catalog.ThreddsMetadata$Source r128;
        thredds.catalog.ServiceType $r137;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9;
        java.util.Iterator $r110, $r113;

        r26 := @this: thredds.catalog.dl.DIFWriter;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r3 := @parameter1: org.jdom.Element;

        r109 := @parameter2: java.lang.StringBuffer;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getUniqueID()>();

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String allow(java.lang.String,java.lang.String,char)>($r1, "_-.", 45);

        $r4 = new org.jdom.Element;

        $r5 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r4.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Entry_ID", $r5);

        $r6 = virtualinvoke $r4.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r2);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r6);

        $r7 = new org.jdom.Element;

        $r8 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r7.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Entry_Title", $r8);

        $r9 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getFullName()>();

        $r10 = virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r9);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

        $r11 = virtualinvoke r0.<thredds.catalog.InvDataset: thredds.catalog.ThreddsMetadata$Variables getVariables(java.lang.String)>("DIF");

        if $r11 == null goto label01;

        $r117 = virtualinvoke $r11.<thredds.catalog.ThreddsMetadata$Variables: java.util.List getVariableList()>();

        $i9 = interfaceinvoke $r117.<java.util.List: int size()>();

        if $i9 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        if $z6 == 0 goto label05;

        $r115 = virtualinvoke $r11.<thredds.catalog.ThreddsMetadata$Variables: java.util.List getVariableList()>();

        i10 = 0;

     label03:
        $i8 = interfaceinvoke $r115.<java.util.List: int size()>();

        if i10 >= $i8 goto label04;

        $r116 = interfaceinvoke $r115.<java.util.List: java.lang.Object get(int)>(i10);

        r118 = (thredds.catalog.ThreddsMetadata$Variable) $r116;

        specialinvoke r26.<thredds.catalog.dl.DIFWriter: void writeVariable(org.jdom.Element,thredds.catalog.ThreddsMetadata$Variable)>(r3, r118);

        i10 = i10 + 1;

        goto label03;

     label04:
        goto label10;

     label05:
        $r12 = virtualinvoke r0.<thredds.catalog.InvDataset: thredds.catalog.ThreddsMetadata$Variables getVariables(java.lang.String)>("GRIB-1");

        if $r12 == null goto label08;

        $r112 = virtualinvoke $r12.<thredds.catalog.ThreddsMetadata$Variables: java.util.List getVariableList()>();

        $i7 = interfaceinvoke $r112.<java.util.List: int size()>();

        if $i7 == 0 goto label08;

        $r113 = specialinvoke r26.<thredds.catalog.dl.DIFWriter: java.util.Iterator translateGribVocabulary(thredds.catalog.ThreddsMetadata$Variables,boolean,java.lang.StringBuffer)>($r12, 1, r109);

     label06:
        $z5 = interfaceinvoke $r113.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label07;

        $r114 = interfaceinvoke $r113.<java.util.Iterator: java.lang.Object next()>();

        r119 = (thredds.catalog.ThreddsMetadata$Variable) $r114;

        specialinvoke r26.<thredds.catalog.dl.DIFWriter: void writeVariable(org.jdom.Element,thredds.catalog.ThreddsMetadata$Variable)>(r3, r119);

        goto label06;

     label07:
        goto label10;

     label08:
        $r13 = virtualinvoke r0.<thredds.catalog.InvDataset: thredds.catalog.ThreddsMetadata$Variables getVariables(java.lang.String)>("GRIB-2");

        if $r13 == null goto label10;

        $r108 = virtualinvoke $r13.<thredds.catalog.ThreddsMetadata$Variables: java.util.List getVariableList()>();

        $i6 = interfaceinvoke $r108.<java.util.List: int size()>();

        if $i6 == 0 goto label10;

        $r110 = specialinvoke r26.<thredds.catalog.dl.DIFWriter: java.util.Iterator translateGribVocabulary(thredds.catalog.ThreddsMetadata$Variables,boolean,java.lang.StringBuffer)>($r13, 0, r109);

     label09:
        if $r110 == null goto label10;

        $z4 = interfaceinvoke $r110.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r111 = interfaceinvoke $r110.<java.util.Iterator: java.lang.Object next()>();

        r120 = (thredds.catalog.ThreddsMetadata$Variable) $r111;

        specialinvoke r26.<thredds.catalog.dl.DIFWriter: void writeVariable(org.jdom.Element,thredds.catalog.ThreddsMetadata$Variable)>(r3, r120);

        goto label09;

     label10:
        $r121 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getKeywords()>();

        $i11 = interfaceinvoke $r121.<java.util.List: int size()>();

        if $i11 <= 0 goto label12;

        i12 = 0;

     label11:
        $i5 = interfaceinvoke $r121.<java.util.List: int size()>();

        if i12 >= $i5 goto label12;

        $r103 = interfaceinvoke $r121.<java.util.List: java.lang.Object get(int)>(i12);

        r122 = (thredds.catalog.ThreddsMetadata$Vocab) $r103;

        $r104 = new org.jdom.Element;

        $r105 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r104.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Keyword", $r105);

        $r106 = virtualinvoke r122.<thredds.catalog.ThreddsMetadata$Vocab: java.lang.String getText()>();

        $r107 = virtualinvoke $r104.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r106);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r107);

        i12 = i12 + 1;

        goto label11;

     label12:
        $r14 = virtualinvoke r0.<thredds.catalog.InvDataset: ucar.nc2.units.DateRange getTimeCoverage()>();

        if $r14 == null goto label13;

        $r94 = virtualinvoke $r14.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $z3 = virtualinvoke $r94.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z3 == 0 goto label13;

        $r95 = virtualinvoke $r14.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration getDuration()>();

        $d6 = virtualinvoke $r95.<ucar.nc2.units.TimeDuration: double getValueInSeconds()>();

        $d7 = neg $d6;

        $d8 = $d7 / 3600.0;

        d9 = $d8 / 24.0;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RELATIVE_START_DATE: ");

        $i4 = (int) d9;

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        $r100 = new org.jdom.Element;

        $r101 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r100.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Keyword", $r101);

        $r102 = virtualinvoke $r100.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r99);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r102);

     label13:
        $r123 = new org.jdom.Element;

        $r124 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r123.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Source_Name", $r124);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r123);

        $r125 = new org.jdom.Element;

        $r126 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r125.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Short_Name", $r126);

        $r127 = virtualinvoke $r125.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("MODELS");

        virtualinvoke $r123.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r127);

        if $r14 == null goto label14;

        $r82 = new org.jdom.Element;

        $r83 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r82.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Temporal_Coverage", $r83);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r82);

        $r84 = new org.jdom.Element;

        $r85 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r84.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Start_Date", $r85);

        $r86 = virtualinvoke $r14.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r87 = virtualinvoke $r86.<ucar.nc2.units.DateType: java.lang.String toDateString()>();

        $r88 = virtualinvoke $r84.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r87);

        virtualinvoke $r82.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r88);

        $r89 = new org.jdom.Element;

        $r90 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r89.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Stop_Date", $r90);

        $r91 = virtualinvoke $r14.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r92 = virtualinvoke $r91.<ucar.nc2.units.DateType: java.lang.String toDateString()>();

        $r93 = virtualinvoke $r89.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r92);

        virtualinvoke $r82.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r93);

     label14:
        $r15 = virtualinvoke r0.<thredds.catalog.InvDataset: thredds.catalog.ThreddsMetadata$GeospatialCoverage getGeospatialCoverage()>();

        if $r15 == null goto label15;

        $r64 = new org.jdom.Element;

        $r65 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r64.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Spatial_Coverage", $r65);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r64);

        $d0 = virtualinvoke $r15.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLonEast()>();

        $d1 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d0);

        $d2 = virtualinvoke $r15.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLonWest()>();

        $d3 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d2);

        $r66 = new org.jdom.Element;

        $r67 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r66.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Southernmost_Latitude", $r67);

        $d4 = virtualinvoke $r15.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLatSouth()>();

        $r68 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d4);

        $r69 = virtualinvoke $r66.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r68);

        virtualinvoke $r64.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r69);

        $r70 = new org.jdom.Element;

        $r71 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r70.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Northernmost_Latitude", $r71);

        $d5 = virtualinvoke $r15.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLatNorth()>();

        $r72 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d5);

        $r73 = virtualinvoke $r70.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r72);

        virtualinvoke $r64.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r73);

        $r74 = new org.jdom.Element;

        $r75 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r74.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Westernmost_Longitude", $r75);

        $r76 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d3);

        $r77 = virtualinvoke $r74.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r76);

        virtualinvoke $r64.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r77);

        $r78 = new org.jdom.Element;

        $r79 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r78.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Easternmost_Longitude", $r79);

        $r80 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d1);

        $r81 = virtualinvoke $r78.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r80);

        virtualinvoke $r64.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r81);

     label15:
        $r16 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("rights");

        if $r16 == null goto label16;

        $r61 = new org.jdom.Element;

        $r62 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r61.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Use_Constraints", $r62);

        $r63 = virtualinvoke $r61.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r16);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r63);

     label16:
        $r17 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getPublishers()>();

        $i0 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i0 <= 0 goto label19;

        i13 = 0;

     label17:
        $i3 = interfaceinvoke $r17.<java.util.List: int size()>();

        if i13 >= $i3 goto label19;

        $r56 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i13);

        r128 = (thredds.catalog.ThreddsMetadata$Source) $r56;

        $r57 = virtualinvoke r128.<thredds.catalog.ThreddsMetadata$Source: thredds.catalog.ThreddsMetadata$Vocab getNameVocab()>();

        $r58 = virtualinvoke $r57.<thredds.catalog.ThreddsMetadata$Vocab: java.lang.String getVocabulary()>();

        $z2 = virtualinvoke $r58.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DIF");

        if $z2 == 0 goto label18;

        $r59 = new org.jdom.Element;

        $r60 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r59.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Data_Center", $r60);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r59);

        specialinvoke r26.<thredds.catalog.dl.DIFWriter: void writeDataCenter(thredds.catalog.ThreddsMetadata$Source,org.jdom.Element)>(r128, $r59);

        goto label19;

     label18:
        i13 = i13 + 1;

        goto label17;

     label19:
        $r129 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("summary");

        if $r129 == null goto label20;

        $r52 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String breakTextAtWords(java.lang.String,java.lang.String,int)>($r129, "\n", 80);

        $r53 = new org.jdom.Element;

        $r54 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r53.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Summary", $r54);

        $r55 = virtualinvoke $r53.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r52);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r55);

     label20:
        $z0 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z0 == 0 goto label21;

        r130 = (thredds.catalog.InvCatalogRef) r0;

        $r46 = virtualinvoke r130.<thredds.catalog.InvCatalogRef: java.net.URI getURI()>();

        r131 = $r46;

        $r47 = virtualinvoke $r46.<java.net.URI: java.lang.String toString()>();

        $i2 = virtualinvoke $r47.<java.lang.String: int lastIndexOf(int)>(46);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".html");

        r132 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label22;

     label21:
        $r18 = virtualinvoke r0.<thredds.catalog.InvDataset: thredds.catalog.InvCatalog getParentCatalog()>();

        r133 = (thredds.catalog.InvCatalogImpl) $r18;

        $r19 = virtualinvoke r133.<thredds.catalog.InvCatalogImpl: java.net.URI getBaseURI()>();

        r131 = $r19;

        $r20 = virtualinvoke $r19.<java.net.URI: java.lang.String toString()>();

        $i1 = virtualinvoke $r20.<java.lang.String: int lastIndexOf(int)>(46);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".html");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r132 = $r25;

        $z1 = virtualinvoke r0.<thredds.catalog.InvDataset: boolean hasAccess()>();

        if $z1 == 0 goto label22;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?dataset=");

        $r44 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        r132 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        $r134 = virtualinvoke r131.<java.net.URI: java.lang.String toString()>();

        $r135 = specialinvoke r26.<thredds.catalog.dl.DIFWriter: org.jdom.Element makeRelatedURL(java.lang.String,java.lang.String,java.lang.String)>("GET DATA", "THREDDS CATALOG", $r134);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r135);

        $r136 = specialinvoke r26.<thredds.catalog.dl.DIFWriter: org.jdom.Element makeRelatedURL(java.lang.String,java.lang.String,java.lang.String)>("GET DATA", "THREDDS DIRECTORY", r132);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r136);

        $r137 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType OPENDAP>;

        $r138 = virtualinvoke r0.<thredds.catalog.InvDataset: thredds.catalog.InvAccess getAccess(thredds.catalog.ServiceType)>($r137);

        if null == $r138 goto label23;

        $r39 = virtualinvoke $r138.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

        $r40 = specialinvoke r26.<thredds.catalog.dl.DIFWriter: org.jdom.Element makeRelatedURL(java.lang.String,java.lang.String,java.lang.String)>("GET DATA", "OPENDAP DATA", $r39);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r40);

     label23:
        $r27 = new org.jdom.Element;

        $r28 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r27.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Metadata_Name", $r28);

        $r29 = virtualinvoke $r27.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("CEOS IDN DIF");

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r29);

        $r30 = new org.jdom.Element;

        $r31 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r30.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Metadata_Version", $r31);

        $r32 = virtualinvoke $r30.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("9.4");

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r32);

        $r33 = new ucar.nc2.units.DateType;

        $r34 = new java.util.Date;

        specialinvoke $r34.<java.util.Date: void <init>()>();

        specialinvoke $r33.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, $r34);

        $r35 = new org.jdom.Element;

        $r36 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r35.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("DIF_Creation_Date", $r36);

        $r37 = virtualinvoke $r33.<ucar.nc2.units.DateType: java.lang.String toDateString()>();

        $r38 = virtualinvoke $r35.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r37);

        virtualinvoke r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r38);

        return;
    }

    private org.jdom.Element makeRelatedURL(java.lang.String, java.lang.String, java.lang.String)
    {
        org.jdom.Namespace $r1, $r3, $r5, $r9, $r13;
        java.lang.String r6, r10, r14;
        thredds.catalog.dl.DIFWriter r16;
        org.jdom.Element $r0, $r2, $r4, $r7, $r8, $r11, $r12, $r15;

        r16 := @this: thredds.catalog.dl.DIFWriter;

        r6 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r14 := @parameter2: java.lang.String;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Related_URL", $r1);

        $r2 = new org.jdom.Element;

        $r3 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r2.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("URL_Content_Type", $r3);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r2);

        $r4 = new org.jdom.Element;

        $r5 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r4.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Type", $r5);

        $r7 = virtualinvoke $r4.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r6);

        virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        $r8 = new org.jdom.Element;

        $r9 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r8.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Subtype", $r9);

        $r11 = virtualinvoke $r8.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r10);

        virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

        $r12 = new org.jdom.Element;

        $r13 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r12.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("URL", $r13);

        $r15 = virtualinvoke $r12.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r14);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

        return $r0;
    }

    private void writeDataCenter(thredds.catalog.ThreddsMetadata$Source, org.jdom.Element)
    {
        org.jdom.Namespace $r1, $r7, $r13, $r17, $r22, $r28, $r30, $r33, $r36;
        thredds.catalog.dl.DIFWriter r26;
        thredds.catalog.ThreddsMetadata$Source r4;
        java.util.StringTokenizer $r3;
        int $i0, $i1;
        java.lang.String $r5, $r8, $r10, $r11, $r14, $r18, $r19, $r23, $r24, $r37;
        org.jdom.Element $r0, r2, $r6, $r9, $r12, $r15, $r16, $r20, $r21, $r25, $r27, $r29, $r31, $r32, $r34, $r35, $r38;

        r26 := @this: thredds.catalog.dl.DIFWriter;

        r4 := @parameter0: thredds.catalog.ThreddsMetadata$Source;

        r2 := @parameter1: org.jdom.Element;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Data_Center_Name", $r1);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r0);

        $r3 = new java.util.StringTokenizer;

        $r5 = virtualinvoke r4.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getName()>();

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ">");

        $i0 = virtualinvoke $r3.<java.util.StringTokenizer: int countTokens()>();

        if $i0 != 2 goto label1;

        $r16 = new org.jdom.Element;

        $r17 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r16.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Short_Name", $r17);

        $r18 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        $r20 = virtualinvoke $r16.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r19);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r20);

        $r21 = new org.jdom.Element;

        $r22 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r21.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Long_Name", $r22);

        $r23 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String trim()>();

        $r25 = virtualinvoke $r21.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r24);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r25);

        goto label2;

     label1:
        $r6 = new org.jdom.Element;

        $r7 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r6.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Short_Name", $r7);

        $r8 = virtualinvoke r4.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r8);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

     label2:
        $r10 = virtualinvoke r4.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getUrl()>();

        if $r10 == null goto label3;

        $r11 = virtualinvoke r4.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getUrl()>();

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $r12 = new org.jdom.Element;

        $r13 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r12.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Data_Center_URL", $r13);

        $r14 = virtualinvoke r4.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getUrl()>();

        $r15 = virtualinvoke $r12.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r14);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

     label3:
        $r27 = new org.jdom.Element;

        $r28 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r27.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Personnel", $r28);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r27);

        $r29 = new org.jdom.Element;

        $r30 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r29.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Role", $r30);

        $r31 = virtualinvoke $r29.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("DATA CENTER CONTACT");

        virtualinvoke $r27.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r31);

        $r32 = new org.jdom.Element;

        $r33 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r32.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Last_Name", $r33);

        $r34 = virtualinvoke $r32.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("Any");

        virtualinvoke $r27.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r34);

        $r35 = new org.jdom.Element;

        $r36 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r35.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Email", $r36);

        $r37 = virtualinvoke r4.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getEmail()>();

        $r38 = virtualinvoke $r35.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r37);

        virtualinvoke $r27.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r38);

        return;
    }

    private void writeVariable(org.jdom.Element, thredds.catalog.ThreddsMetadata$Variable)
    {
        org.jdom.Namespace $r4, $r7, $r12, $r17, $r22, $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        thredds.catalog.dl.DIFWriter r31;
        java.util.StringTokenizer $r2;
        int $i0;
        java.lang.String $r1, $r8, $r9, $r13, $r14, $r18, $r19, $r23, $r24, $r28, $r29;
        thredds.catalog.ThreddsMetadata$Variable r0;
        org.jdom.Element $r3, r5, $r6, $r10, $r11, $r15, $r16, $r20, $r21, $r25, $r26, $r30;

        r31 := @this: thredds.catalog.dl.DIFWriter;

        r5 := @parameter0: org.jdom.Element;

        r0 := @parameter1: thredds.catalog.ThreddsMetadata$Variable;

        $r1 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$Variable: java.lang.String getVocabularyName()>();

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ">");

        $i0 = virtualinvoke $r2.<java.util.StringTokenizer: int countTokens()>();

        if $i0 >= 3 goto label1;

        return;

     label1:
        $r3 = new org.jdom.Element;

        $r4 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r3.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Parameters", $r4);

        virtualinvoke r5.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r3);

        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r26 = new org.jdom.Element;

        $r27 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r26.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Category", $r27);

        $r28 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>();

        $r30 = virtualinvoke $r26.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r29);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r30);

     label2:
        $z1 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label3;

        $r21 = new org.jdom.Element;

        $r22 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r21.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Topic", $r22);

        $r23 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String trim()>();

        $r25 = virtualinvoke $r21.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r24);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r25);

     label3:
        $z2 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label4;

        $r16 = new org.jdom.Element;

        $r17 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r16.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Term", $r17);

        $r18 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        $r20 = virtualinvoke $r16.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r19);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r20);

     label4:
        $z3 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 == 0 goto label5;

        $r11 = new org.jdom.Element;

        $r12 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r11.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Variable", $r12);

        $r13 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $r15 = virtualinvoke $r11.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r14);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

     label5:
        $z4 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label6;

        $r6 = new org.jdom.Element;

        $r7 = <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS>;

        specialinvoke $r6.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Detailed_Variable", $r7);

        $r8 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = virtualinvoke $r6.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r9);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

     label6:
        return;
    }

    private static void doCatalog(thredds.catalog.InvCatalogFactory, java.lang.String)
    {
        thredds.catalog.InvCatalogFactory r6;
        boolean $z0;
        thredds.catalog.dl.DIFWriter $r29;
        java.lang.Exception $r36;
        thredds.catalog.InvCatalogImpl $r7;
        java.lang.StringBuilder $r0, $r2, $r4, $r8, $r9, $r11, $r13, $r14, $r15, $r16, $r18, $r20, $r21, $r23, $r25, $r27, $r31, $r33, $r34;
        java.lang.StringBuffer $r30;
        java.lang.String r3, $r5, $r12, $r17, $r22, $r26, $r28, $r35, $r37;
        java.io.PrintStream $r1, $r10, $r19, $r24, $r32;

        r6 := @parameter0: thredds.catalog.InvCatalogFactory;

        r3 := @parameter1: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***read ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        $r7 = virtualinvoke r6.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.lang.String)>(r3);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r7.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder,boolean)>($r8, 0);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("catalog <");

        $r12 = virtualinvoke $r7.<thredds.catalog.InvCatalogImpl: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        if $z0 == 0 goto label2;

        $r37 = "is";

        goto label3;

     label2:
        $r37 = "is not";

     label3:
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" valid");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" validation output=\n");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" catalog=\n");

        $r26 = virtualinvoke r6.<thredds.catalog.InvCatalogFactory: java.lang.String writeXML(thredds.catalog.InvCatalogImpl)>($r7);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $r29 = new thredds.catalog.dl.DIFWriter;

        specialinvoke $r29.<thredds.catalog.dl.DIFWriter: void <init>()>();

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r29.<thredds.catalog.dl.DIFWriter: void writeDatasetEntries(thredds.catalog.InvCatalogImpl,java.lang.String,java.lang.StringBuffer)>($r7, "C:/temp/dif2", $r30);

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messages=\n");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r35);

     label4:
        goto label6;

     label5:
        $r36 := @caughtexception;

        virtualinvoke $r36.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r1;
        thredds.catalog.InvCatalogFactory $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)>(1);

        staticinvoke <thredds.catalog.dl.DIFWriter: void doCatalog(thredds.catalog.InvCatalogFactory,java.lang.String)>($r0, "http://motherlode.ucar.edu:9080/thredds/idd/models.xml");

        return;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r1;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/catalog/dl/DIFWriter;");

        <thredds.catalog.dl.DIFWriter: org.slf4j.Logger log> = $r0;

        $r1 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://gcmd.gsfc.nasa.gov/Aboutus/xml/dif/");

        <thredds.catalog.dl.DIFWriter: org.jdom.Namespace defNS> = $r1;

        <thredds.catalog.dl.DIFWriter: java.lang.String schemaLocation> = "http://gcmd.nasa.gov/Aboutus/xml/dif/dif.xsd";

        return;
    }
}
