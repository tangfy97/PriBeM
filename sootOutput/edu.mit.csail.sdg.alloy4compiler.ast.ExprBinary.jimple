public final class edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary extends edu.mit.csail.sdg.alloy4compiler.ast.Expr
{
    public final edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op;
    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr left;
    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr right;
    private edu.mit.csail.sdg.alloy4.Pos span;

    private void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Type, edu.mit.csail.sdg.alloy4.JoinableList)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r3, r6;
        long $l3, $l4, $l5;
        edu.mit.csail.sdg.alloy4.JoinableList r7;
        byte $b2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op r5, $r8;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r0;
        edu.mit.csail.sdg.alloy4.Pos r1, r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r5 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op;

        r3 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r6 := @parameter4: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r4 := @parameter5: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r7 := @parameter6: edu.mit.csail.sdg.alloy4.JoinableList;

        $z0 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z0 != 0 goto label1;

        $z2 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        $z1 = r5.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: boolean isArrow>;

        if $z1 == 0 goto label5;

        $i0 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i0 == 2 goto label4;

        $i1 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i1 == 2 goto label4;

        $r8 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        if r5 == $r8 goto label5;

     label4:
        $b2 = 2;

        goto label6;

     label5:
        $b2 = 0;

     label6:
        $l3 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        $l4 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        $l5 = $l3 + $l4;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,boolean,edu.mit.csail.sdg.alloy4compiler.ast.Type,int,long,edu.mit.csail.sdg.alloy4.JoinableList)>(r1, r2, $z3, r4, $b2, $l5, r7);

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos span> = null;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op> = r5;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left> = r3;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right> = r6;

        return;
    }

    public boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r9, $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r4, $r5, $r6, $r7, r12;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary $r8, $r11;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r0, r1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r12 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

     label1:
        $z0 = r12 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z0 == 0 goto label2;

        $r8 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r12;

        $r10 = $r8.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r10 != $r9 goto label2;

        $r11 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r12;

        r12 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        goto label1;

     label2:
        if r12 != r0 goto label3;

        return 1;

     label3:
        $z1 = r12 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z1 != 0 goto label4;

        return 0;

     label4:
        r1 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) r12;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        if $r3 != $r2 goto label5;

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r4 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z2 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r4);

        if $z2 == 0 goto label5;

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r6 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z3 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r6);

        if $z3 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    private static edu.mit.csail.sdg.alloy4.ErrorType error(edu.mit.csail.sdg.alloy4.Pos, java.lang.String, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4.ErrorType $r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r7, $r11;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r6, r10;
        edu.mit.csail.sdg.alloy4.Pos r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r9, $r12;
        java.lang.String r3, $r13;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r10 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r0 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nLeft type = ");

        $r7 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nRight type = ");

        $r11 = r10.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r1, $r13);

        return $r0;
    }

    private edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r8, $r9, $r13, $r14;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r7, $r12;
        edu.mit.csail.sdg.alloy4.ErrorWarning $r0;
        java.lang.String r4, $r16;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r1;
        edu.mit.csail.sdg.alloy4.Pos $r3;
        java.lang.StringBuilder $r2, $r5, $r6, $r10, $r11, $r15;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r4 := @parameter0: java.lang.String;

        $r0 = new edu.mit.csail.sdg.alloy4.ErrorWarning;

        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nLeft type = ");

        $r7 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r8 = $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r9 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nRight type = ");

        $r12 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r13 = $r12.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r14 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.ErrorWarning: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r3, $r16);

        return $r0;
    }

    private edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String, edu.mit.csail.sdg.alloy4compiler.ast.Type)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r7, $r8, $r12, $r13, $r17, $r18;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r11, $r16;
        edu.mit.csail.sdg.alloy4.ErrorWarning $r0;
        java.lang.String r4, $r20;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r1;
        edu.mit.csail.sdg.alloy4.Pos $r3;
        java.lang.StringBuilder $r2, $r5, $r6, $r9, $r10, $r14, $r15, $r19;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r4 := @parameter0: java.lang.String;

        r7 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        $r0 = new edu.mit.csail.sdg.alloy4.ErrorWarning;

        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nParent\'s relevant type = ");

        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nLeft type = ");

        $r11 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r12 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r13 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nRight type = ");

        $r16 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r17 = $r16.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r18 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.ErrorWarning: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r3, $r20);

        return $r0;
    }

    public edu.mit.csail.sdg.alloy4.Pos span()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r4, $r7;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r0;
        edu.mit.csail.sdg.alloy4.Pos $r1, $r2, $r3, $r5, $r6, $r8, $r9, r10;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos span>;

        if r10 != null goto label1;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos closingBracket>;

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r1);

        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r5 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r5);

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r9 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        r10 = $r9;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos span> = $r9;

     label1:
        return r10;
    }

    public void toString(java.lang.StringBuilder, int)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r7, $r8, $r11, $r15;
        int i0, $i1, $i2, i3, $i5, $i7;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r2, $r9, $r10, $r13;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r1;
        java.lang.StringBuilder r0, $r3, $r4, $r6, $r12, $r14;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        if i0 >= 0 goto label3;

        $r10 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ISSEQ_ARROW_LONE>;

        if $r10 != $r9 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seq ");

        goto label2;

     label1:
        $r11 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i5 = (int) -1;

        virtualinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i5);

        $r12 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r13 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label2:
        $r15 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i7 = (int) -1;

        virtualinvoke $r15.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i7);

        goto label6;

     label3:
        i3 = 0;

     label4:
        if i3 >= i0 goto label5;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i3 = i3 + 1;

        goto label4;

     label5:
        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with type=");

        $r5 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r7 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i1 = i0 + 2;

        virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i1);

        $r8 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i2 = i0 + 2;

        virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i2);

     label6:
        return;
    }

    public edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type, java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r3, $r7, $r11, $r26, $r31, $r35, $r41, $r49, $r68, $r70, $r72, $r74, $r75, $r76, $r80, $r82, $r84, $r86, $r87, $r90, $r107, $r108, $r148, $r149, $r151, $r179, $r180, $r181, $r182, $r183;
        int[] $r5;
        edu.mit.csail.sdg.alloy4.Pos $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43;
        java.util.ArrayList $r61;
        java.lang.String $r104, $r114, $r119;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r0;
        java.lang.StringBuilder $r101, $r102, $r103, $r111, $r112, $r113, $r116, $r117, $r118;
        java.util.Collection r6;
        edu.mit.csail.sdg.alloy4.ErrorWarning r143;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r4, $r10, $r96, $r97, $r105, $r106;
        java.lang.Object $r15, $r17, $r22, $r34, $r38, $r40, $r44, $r48, $r52, $r60, $r123, $r125, $r130, $r135, $r137, $r141;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r18, $r45, $r46, $r53, $r54, $r55, $r56, $r64, $r126;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r12, $r13, $r14, $r20, $r23, $r24, $r25, $r27, $r29, $r30, $r32, $r36, $r39, $r42, $r47, $r50, $r58, $r62, $r63, $r65, $r66, $r67, $r69, $r71, $r73, $r77, $r78, $r79, $r81, $r83, $r85, $r88, $r89, $r91, $r92, $r93, $r94, $r95, $r98, $r99, $r100, $r109, $r110, $r115, $r120, $r121, $r122, $r128, $r131, $r132, $r133, $r134, $r139, r142, r144, r145, r146, r147, $r150, $r152, r161, r162, r167, r168, r173, r174;
        edu.mit.csail.sdg.alloy4.JoinableList $r1;
        java.util.Iterator $r16, $r21, $r28, $r33, $r37, $r43, $r51, $r59, $r124, $r129, $r136, $r140, $r153, $r163, $r169, $r175;
        edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType $r19, $r57, $r127, $r138, r154, r155, r156, r157, r158, r159, r160, r164, r165, r166, r170, r171, r172, r176, r177, r178;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r142 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r6 := @parameter1: java.util.Collection;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: int size()>();

        if $i0 <= 0 goto label01;

        return r0;

     label01:
        r143 = null;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        r144 = $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        r145 = $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprBinary$Op>;

        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $i1 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: int ordinal()>();

        $i2 = $r5[$i1];

        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label03;
            case 3: goto label49;
            case 4: goto label02;
            case 5: goto label02;
            case 6: goto label02;
            case 7: goto label02;
            case 8: goto label02;
            case 9: goto label02;
            case 10: goto label02;
            case 11: goto label02;
            case 12: goto label02;
            case 13: goto label02;
            case 14: goto label02;
            case 15: goto label02;
            case 16: goto label02;
            case 17: goto label02;
            case 18: goto label03;
            case 19: goto label03;
            case 20: goto label17;
            case 21: goto label23;
            case 22: goto label04;
            case 23: goto label04;
            case 24: goto label17;
            case 25: goto label10;
            case 26: goto label10;
            case 27: goto label26;
            case 28: goto label60;
            case 29: goto label16;
            default: goto label71;
        };

     label02:
        $r120 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type INT>;

        r146 = $r120;

        r147 = $r120;

        goto label84;

     label03:
        $r132 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type FORMULA>;

        r146 = $r132;

        r147 = $r132;

        goto label84;

     label04:
        $r78 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r145);

        $z22 = virtualinvoke $r78.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z22 == 0 goto label05;

        r147 = $r78;

        r146 = $r78;

        goto label06;

     label05:
        $r79 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type pickCommonArity(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r145);

        r147 = $r79;

        r146 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type pickCommonArity(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r79);

     label06:
        $r80 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r81 = $r80.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z23 = $r81.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z23 == 0 goto label07;

        $r90 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r91 = $r90.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z27 = $r91.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z27 == 0 goto label07;

        r147 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r147);

        r146 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r146);

        goto label84;

     label07:
        if r6 != null goto label08;

        goto label84;

     label08:
        $r82 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r83 = $r82.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z24 = virtualinvoke $r83.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z24 == 0 goto label09;

        $r84 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r85 = $r84.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z25 = virtualinvoke $r85.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z25 == 0 goto label09;

        $r86 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r89 = $r86.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r87 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r88 = $r87.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z26 = virtualinvoke $r89.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean intersects(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r88);

        if $z26 != 0 goto label09;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("== is redundant, because the left and right expressions are always disjoint.");

        goto label84;

     label09:
        $r148 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r149 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z47 = virtualinvoke $r148.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r149);

        if $z47 == 0 goto label84;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("== is redundant, because the left and right expressions always have the same value.");

        goto label84;

     label10:
        $r66 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type pickCommonArity(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r145);

        r147 = $r66;

        $r67 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r66);

        r146 = $r67;

        if r6 != null goto label11;

        goto label84;

     label11:
        $r68 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r69 = $r68.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z16 = virtualinvoke $r69.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z16 == 0 goto label12;

        $r76 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r77 = $r76.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z21 = virtualinvoke $r77.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z21 == 0 goto label12;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("Subset operator is redundant, because both subexpressions are always empty.");

        goto label84;

     label12:
        $r70 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r71 = $r70.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z17 = virtualinvoke $r71.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z17 == 0 goto label13;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("Subset operator is redundant, because the left subexpression is always empty.");

        goto label84;

     label13:
        $r72 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r73 = $r72.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z18 = virtualinvoke $r73.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z18 == 0 goto label14;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("Subset operator is redundant, because the right subexpression is always empty.");

        goto label84;

     label14:
        $z19 = virtualinvoke $r67.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z19 == 0 goto label15;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("Subset operator is redundant, because the left and right subexpressions are always disjoint.");

        goto label84;

     label15:
        $r75 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r74 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z20 = virtualinvoke $r75.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r74);

        if $z20 == 0 goto label84;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("Subset operator is redundant, because the left and right expressions always have the same value.");

        goto label84;

     label16:
        r147 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r142);

        r146 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r142);

        if r6 == null goto label84;

        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z0 = virtualinvoke $r12.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z0 == 0 goto label84;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("& is irrelevant because the two subexpressions are always disjoint.");

        goto label84;

     label17:
        $r94 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r142);

        r147 = $r94;

        $r95 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r142);

        r146 = $r95;

        $r97 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r96 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUS>;

        if $r97 != $r96 goto label18;

        $z32 = r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z32 == 0 goto label18;

        r147 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r94);

        r146 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r95);

     label18:
        if r6 != null goto label19;

        goto label84;

     label19:
        $r98 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r147 != $r98 goto label20;

        $r115 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r146 != $r115 goto label20;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is irrelevant since both subexpressions are redundant.");

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r119, r142);

        goto label84;

     label20:
        $r99 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r147 != $r99 goto label21;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is irrelevant since the left subexpression is redundant.");

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r114, r142);

        goto label84;

     label21:
        $r100 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r146 == $r100 goto label22;

        $r106 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r105 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUSPLUS>;

        if $r106 != $r105 goto label84;

        $r107 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r110 = $r107.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r108 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r109 = $r108.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z31 = virtualinvoke $r110.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean canOverride(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r109);

        if $z31 != 0 goto label84;

     label22:
        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is irrelevant since the right subexpression is redundant.");

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r104, r142);

        goto label84;

     label23:
        r147 = r142;

        $r92 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r145);

        r146 = $r92;

        $z28 = r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z28 == 0 goto label24;

        r147 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r142);

        r146 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r92);

        goto label84;

     label24:
        if r6 == null goto label84;

        $r93 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z29 = virtualinvoke $r93.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z29 != 0 goto label25;

        $z30 = virtualinvoke $r92.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z30 == 0 goto label84;

     label25:
        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>("- is irrelevant since the right expression is redundant.", r142);

        goto label84;

     label26:
        if r6 == null goto label27;

        $r65 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z15 = virtualinvoke $r65.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z15 == 0 goto label27;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("The join operation here always yields an empty set.");

     label27:
        $r150 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        r146 = $r150;

        r147 = $r150;

        $r151 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r152 = $r151.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r153 = virtualinvoke $r152.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label28:
        $z48 = interfaceinvoke $r153.<java.util.Iterator: boolean hasNext()>();

        if $z48 == 0 goto label36;

        $r48 = interfaceinvoke $r153.<java.util.Iterator: java.lang.Object next()>();

        r154 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r48;

        $r49 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r50 = $r49.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r51 = virtualinvoke $r50.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label29:
        $z11 = interfaceinvoke $r51.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label35;

        $r52 = interfaceinvoke $r51.<java.util.Iterator: java.lang.Object next()>();

        r155 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r52;

        $i20 = virtualinvoke r154.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i21 = virtualinvoke r155.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i22 = $i20 + $i21;

        $i23 = $i22 - 2;

        $z12 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>($i23);

        if $z12 == 0 goto label34;

        $i24 = virtualinvoke r154.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i25 = $i24 - 1;

        $r53 = virtualinvoke r154.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>($i25);

        $r54 = virtualinvoke r155.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(0);

        $r55 = virtualinvoke $r53.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig intersect(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r54);

        $r56 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig NONE>;

        if $r55 == $r56 goto label34;

        $r57 = virtualinvoke r154.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType join(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r155);

        $r58 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>($r57);

        $r59 = virtualinvoke $r58.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label30:
        $z13 = interfaceinvoke $r59.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label34;

        $r60 = interfaceinvoke $r59.<java.util.Iterator: java.lang.Object next()>();

        r156 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r60;

        $z14 = virtualinvoke r156.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: boolean isEmpty()>();

        if $z14 != 0 goto label33;

        $r61 = new java.util.ArrayList;

        $i26 = virtualinvoke r156.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i27 = $i26 + 1;

        specialinvoke $r61.<java.util.ArrayList: void <init>(int)>($i27);

        i43 = 0;

     label31:
        $i28 = virtualinvoke r156.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        if i43 >= $i28 goto label32;

        $r64 = virtualinvoke r156.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(i43);

        interfaceinvoke $r61.<java.util.List: boolean add(java.lang.Object)>($r64);

        i43 = i43 + 1;

        goto label31;

     label32:
        $i29 = virtualinvoke r154.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i30 = $i29 - 1;

        interfaceinvoke $r61.<java.util.List: void add(int,java.lang.Object)>($i30, $r55);

        $i31 = virtualinvoke r154.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $r62 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type make(java.util.List,int,int)>($r61, 0, $i31);

        r147 = virtualinvoke r147.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r62);

        $i32 = virtualinvoke r154.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i33 = $i32 - 1;

        $i34 = interfaceinvoke $r61.<java.util.List: int size()>();

        $r63 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type make(java.util.List,int,int)>($r61, $i33, $i34);

        r146 = virtualinvoke r146.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r63);

     label33:
        goto label30;

     label34:
        goto label29;

     label35:
        goto label28;

     label36:
        $r24 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r147 == $r24 goto label37;

        $r47 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r146 != $r47 goto label42;

     label37:
        $r25 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        r146 = $r25;

        r147 = $r25;

        $r26 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r27 = $r26.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r28 = virtualinvoke $r27.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label38:
        $z49 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z49 == 0 goto label42;

        $r40 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r157 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r40;

        $r41 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r42 = $r41.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r43 = virtualinvoke $r42.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label39:
        $z8 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label41;

        $r44 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r158 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r44;

        $i14 = virtualinvoke r157.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i15 = virtualinvoke r158.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i16 = $i14 + $i15;

        $i17 = $i16 - 2;

        $z9 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>($i17);

        if $z9 == 0 goto label40;

        $i18 = virtualinvoke r157.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i19 = $i18 - 1;

        $r45 = virtualinvoke r157.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>($i19);

        $r46 = virtualinvoke r158.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(0);

        $z10 = virtualinvoke $r45.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean intersects(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r46);

        if $z10 == 0 goto label40;

        r147 = virtualinvoke r147.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r157);

        r146 = virtualinvoke r146.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r158);

     label40:
        goto label39;

     label41:
        goto label38;

     label42:
        $r29 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r147 == $r29 goto label43;

        $r39 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r146 != $r39 goto label84;

     label43:
        $r30 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        r146 = $r30;

        r147 = $r30;

        $r31 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r32 = $r31.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r33 = virtualinvoke $r32.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label44:
        $z50 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z50 == 0 goto label48;

        $r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r159 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r34;

        $r35 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r36 = $r35.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r37 = virtualinvoke $r36.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label45:
        $z6 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label47;

        $r38 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r160 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r38;

        $i10 = virtualinvoke r159.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i11 = virtualinvoke r160.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i12 = $i10 + $i11;

        $i13 = $i12 - 2;

        $z7 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>($i13);

        if $z7 == 0 goto label46;

        r147 = virtualinvoke r147.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r159);

        r146 = virtualinvoke r146.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r160);

     label46:
        goto label45;

     label47:
        goto label44;

     label48:
        goto label84;

     label49:
        if r6 == null goto label50;

        $r131 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z37 = virtualinvoke $r131.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z37 == 0 goto label50;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("<: is irrelevant because the result is always empty.");

     label50:
        r161 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        r162 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        $r163 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label51:
        $z51 = interfaceinvoke $r163.<java.util.Iterator: boolean hasNext()>();

        if $z51 == 0 goto label57;

        $r123 = interfaceinvoke $r163.<java.util.Iterator: java.lang.Object next()>();

        r164 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r123;

        $i35 = virtualinvoke r164.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        if $i35 != 1 goto label56;

        $r124 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label52:
        $z33 = interfaceinvoke $r124.<java.util.Iterator: boolean hasNext()>();

        if $z33 == 0 goto label56;

        $r125 = interfaceinvoke $r124.<java.util.Iterator: java.lang.Object next()>();

        r165 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r125;

        $i36 = virtualinvoke r165.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $z34 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>($i36);

        if $z34 == 0 goto label55;

        $r126 = virtualinvoke r164.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(0);

        $r127 = virtualinvoke r165.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType columnRestrict(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig,int)>($r126, 0);

        $r128 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>($r127);

        $r129 = virtualinvoke $r128.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label53:
        $z35 = interfaceinvoke $r129.<java.util.Iterator: boolean hasNext()>();

        if $z35 == 0 goto label55;

        $r130 = interfaceinvoke $r129.<java.util.Iterator: java.lang.Object next()>();

        r166 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r130;

        $z36 = virtualinvoke r166.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: boolean isEmpty()>();

        if $z36 != 0 goto label54;

        r161 = virtualinvoke r161.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType,int,int)>(r166, 0, 1);

        r162 = virtualinvoke r162.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r166);

     label54:
        goto label53;

     label55:
        goto label52;

     label56:
        goto label51;

     label57:
        $r121 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r161 == $r121 goto label58;

        $r122 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r162 != $r122 goto label59;

     label58:
        r161 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type extract(int)>(1);

        r162 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type pickCommonArity(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r142);

     label59:
        r147 = r161;

        r146 = r162;

        goto label84;

     label60:
        if r6 == null goto label61;

        $r23 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z5 = virtualinvoke $r23.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z5 == 0 goto label61;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>(":> is irrelevant because the result is always empty.");

     label61:
        r167 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        r168 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        $r169 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label62:
        $z52 = interfaceinvoke $r169.<java.util.Iterator: boolean hasNext()>();

        if $z52 == 0 goto label68;

        $r15 = interfaceinvoke $r169.<java.util.Iterator: java.lang.Object next()>();

        r170 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r15;

        $i3 = virtualinvoke r170.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        if $i3 != 1 goto label67;

        $r16 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label63:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label67;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r171 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r17;

        $i4 = virtualinvoke r171.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $z2 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>($i4);

        if $z2 == 0 goto label66;

        $r18 = virtualinvoke r170.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(0);

        $i5 = virtualinvoke r171.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i6 = $i5 - 1;

        $r19 = virtualinvoke r171.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType columnRestrict(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig,int)>($r18, $i6);

        $r20 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>($r19);

        $r21 = virtualinvoke $r20.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label64:
        $z3 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label66;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r172 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r22;

        $z4 = virtualinvoke r172.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: boolean isEmpty()>();

        if $z4 != 0 goto label65;

        r167 = virtualinvoke r167.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r172);

        $i7 = virtualinvoke r172.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i8 = $i7 - 1;

        $i9 = virtualinvoke r172.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        r168 = virtualinvoke r168.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType,int,int)>(r172, $i8, $i9);

     label65:
        goto label64;

     label66:
        goto label63;

     label67:
        goto label62;

     label68:
        $r13 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r167 == $r13 goto label69;

        $r14 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r168 != $r14 goto label70;

     label69:
        r167 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type pickCommonArity(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r142);

        r168 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type extract(int)>(1);

     label70:
        r147 = r167;

        r146 = r168;

        goto label84;

     label71:
        if r6 != null goto label72;

        goto label74;

     label72:
        $z38 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z38 == 0 goto label73;

        $z46 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z46 == 0 goto label74;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("The left expression of -> is irrelevant because the right expression is always empty.");

        goto label74;

     label73:
        $z39 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z39 == 0 goto label74;

        r143 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorWarning warn(java.lang.String)>("The right expression of -> is irrelevant because the left expression is always empty.");

     label74:
        r173 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        r174 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        $r175 = virtualinvoke r144.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label75:
        $z53 = interfaceinvoke $r175.<java.util.Iterator: boolean hasNext()>();

        if $z53 == 0 goto label81;

        $r135 = interfaceinvoke $r175.<java.util.Iterator: java.lang.Object next()>();

        r176 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r135;

        $z40 = virtualinvoke r176.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: boolean isEmpty()>();

        if $z40 != 0 goto label80;

        $r136 = virtualinvoke r145.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label76:
        $z41 = interfaceinvoke $r136.<java.util.Iterator: boolean hasNext()>();

        if $z41 == 0 goto label80;

        $r137 = interfaceinvoke $r136.<java.util.Iterator: java.lang.Object next()>();

        r177 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r137;

        $z42 = virtualinvoke r177.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: boolean isEmpty()>();

        if $z42 != 0 goto label79;

        $i37 = virtualinvoke r176.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i38 = virtualinvoke r177.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i39 = $i37 + $i38;

        $z43 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>($i39);

        if $z43 == 0 goto label79;

        $r138 = virtualinvoke r176.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType product(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r177);

        $r139 = virtualinvoke r142.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>($r138);

        $r140 = virtualinvoke $r139.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label77:
        $z44 = interfaceinvoke $r140.<java.util.Iterator: boolean hasNext()>();

        if $z44 == 0 goto label79;

        $r141 = interfaceinvoke $r140.<java.util.Iterator: java.lang.Object next()>();

        r178 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r141;

        $z45 = virtualinvoke r178.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: boolean isEmpty()>();

        if $z45 != 0 goto label78;

        $i40 = virtualinvoke r176.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        r173 = virtualinvoke r173.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType,int,int)>(r178, 0, $i40);

        $i41 = virtualinvoke r176.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        $i42 = virtualinvoke r178.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        r174 = virtualinvoke r174.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType,int,int)>(r178, $i41, $i42);

     label78:
        goto label77;

     label79:
        goto label76;

     label80:
        goto label75;

     label81:
        $r133 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r173 == $r133 goto label82;

        $r134 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r174 != $r134 goto label83;

     label82:
        r173 = r144;

        r174 = r145;

     label83:
        r147 = r173;

        r146 = r174;

     label84:
        $r179 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r180 = virtualinvoke $r179.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>(r147, r6);

        $r181 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r182 = virtualinvoke $r181.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>(r146, r6);

        if r143 == null goto label85;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r143);

     label85:
        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        if $r180 != $r7 goto label86;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        if $r182 != $r11 goto label86;

        $r183 = r0;

        goto label87;

     label86:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r9 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos closingBracket>;

        $r183 = virtualinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r9, $r8, $r180, $r182);

     label87:
        return $r183;
    }

    public int getDepth()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i1 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        if $i0 < $i1 goto label1;

        $i3 = 1 + $i0;

        return $i3;

     label1:
        $i2 = 1 + $i1;

        return $i2;
    }

    final java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r1;
        java.lang.Object $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn r0;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn: java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary)>(r1);

        return $r2;
    }

    public java.lang.String getDescription()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r2;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r9;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: java.lang.String toHTML()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <i>");

        $r6 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</i>");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.util.List getSubnodes()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r1;
        edu.mit.csail.sdg.alloy4.ConstList $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr[] $r0;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        $r0 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Expr)[2];

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r0[0] = $r2;

        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r0[1] = $r3;

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>($r0);

        return $r4;
    }

    static edu.mit.csail.sdg.alloy4.ErrorType access$000(edu.mit.csail.sdg.alloy4.Pos, java.lang.String, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4.ErrorType $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r2, r3;
        edu.mit.csail.sdg.alloy4.Pos r0;
        java.lang.String r1;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.ErrorType error(edu.mit.csail.sdg.alloy4.Pos,java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r0, r1, r2, r3);

        return $r4;
    }

    void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Type, edu.mit.csail.sdg.alloy4.JoinableList, edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$1)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r4, r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$1 r8;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r0;
        edu.mit.csail.sdg.alloy4.JoinableList r7;
        edu.mit.csail.sdg.alloy4.Pos r1, r2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op r3;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r3 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op;

        r4 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 := @parameter4: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r6 := @parameter5: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r7 := @parameter6: edu.mit.csail.sdg.alloy4.JoinableList;

        r8 := @parameter7: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$1;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Type,edu.mit.csail.sdg.alloy4.JoinableList)>(r1, r2, r3, r4, r5, r6, r7);

        return;
    }
}
