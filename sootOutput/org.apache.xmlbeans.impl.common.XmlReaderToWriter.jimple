public final class org.apache.xmlbeans.impl.common.XmlReaderToWriter extends java.lang.Object
{

    private void <init>()
    {
        org.apache.xmlbeans.impl.common.XmlReaderToWriter r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XmlReaderToWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeAll(javax.xml.stream.XMLStreamReader, javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamWriter r1;
        javax.xml.stream.XMLStreamReader r0;
        boolean $z0;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: javax.xml.stream.XMLStreamWriter;

     label1:
        $z0 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: boolean hasNext()>();

        if $z0 == 0 goto label2;

        staticinvoke <org.apache.xmlbeans.impl.common.XmlReaderToWriter: void write(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)>(r0, r1);

        interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int next()>();

        goto label1;

     label2:
        staticinvoke <org.apache.xmlbeans.impl.common.XmlReaderToWriter: void write(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)>(r0, r1);

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void flush()>();

        return;
    }

    public static void write(javax.xml.stream.XMLStreamReader, javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamReader r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7;
        javax.xml.stream.XMLStreamWriter r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        char[] $r9;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: javax.xml.stream.XMLStreamWriter;

        $i0 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label12;
            case 3: goto label14;
            case 4: goto label13;
            case 5: goto label16;
            case 6: goto label13;
            case 7: goto label18;
            case 8: goto label20;
            case 9: goto label17;
            case 10: goto label22;
            case 11: goto label21;
            case 12: goto label15;
            default: goto label22;
        };

     label01:
        $r12 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        $r13 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>();

        if $r13 == null goto label04;

        $i4 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i4 <= 0 goto label04;

        $r21 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>();

        if $r21 == null goto label02;

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r21, $r12, $r13);

        goto label03;

     label02:
        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String)>($r13, $r12);

     label03:
        goto label05;

     label04:
        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String)>($r12);

     label05:
        i5 = 0;

        $i6 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

     label06:
        if i5 >= $i6 goto label07;

        $r19 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i5);

        $r20 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i5);

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r19, $r20);

        i5 = i5 + 1;

        goto label06;

     label07:
        i7 = 0;

        $i3 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getAttributeCount()>();

     label08:
        if i7 >= $i3 goto label11;

        $r14 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeNamespace(int)>(i7);

        if $r14 == null goto label09;

        $r17 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeLocalName(int)>(i7);

        $r18 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i7);

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>($r14, $r17, $r18);

        goto label10;

     label09:
        $r15 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeLocalName(int)>(i7);

        $r16 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i7);

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r15, $r16);

     label10:
        i7 = i7 + 1;

        goto label08;

     label11:
        goto label22;

     label12:
        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        goto label22;

     label13:
        $r9 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: char[] getTextCharacters()>();

        $i1 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getTextStart()>();

        $i2 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getTextLength()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCharacters(char[],int,int)>($r9, $i1, $i2);

        goto label22;

     label14:
        $r10 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>();

        $r11 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeProcessingInstruction(java.lang.String,java.lang.String)>($r10, $r11);

        goto label22;

     label15:
        $r2 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCData(java.lang.String)>($r2);

        goto label22;

     label16:
        $r8 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeComment(java.lang.String)>($r8);

        goto label22;

     label17:
        $r4 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeEntityRef(java.lang.String)>($r4);

        goto label22;

     label18:
        $r5 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getCharacterEncodingScheme()>();

        $r6 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getVersion()>();

        if $r5 == null goto label19;

        if $r6 == null goto label19;

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String,java.lang.String)>($r5, $r6);

        goto label22;

     label19:
        if $r6 == null goto label22;

        $r7 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getVersion()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String)>($r7);

        goto label22;

     label20:
        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        goto label22;

     label21:
        $r3 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeDTD(java.lang.String)>($r3);

     label22:
        return;
    }
}
