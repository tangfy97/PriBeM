public class org.apache.batik.ext.awt.geom.Linear extends java.lang.Object implements org.apache.batik.ext.awt.geom.Segment
{
    public java.awt.geom.Point2D$Double p1;
    public java.awt.geom.Point2D$Double p2;

    public void <init>()
    {
        java.awt.geom.Point2D$Double $r1, $r2;
        org.apache.batik.ext.awt.geom.Linear r0;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1> = $r1;

        $r2 = new java.awt.geom.Point2D$Double;

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2> = $r2;

        return;
    }

    public void <init>(double, double, double, double)
    {
        java.awt.geom.Point2D$Double $r1, $r2;
        org.apache.batik.ext.awt.geom.Linear r0;
        double d0, d1, d2, d3;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, d1);

        r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1> = $r1;

        $r2 = new java.awt.geom.Point2D$Double;

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d2, d3);

        r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2> = $r2;

        return;
    }

    public void <init>(java.awt.geom.Point2D$Double, java.awt.geom.Point2D$Double)
    {
        java.awt.geom.Point2D$Double r1, r2;
        org.apache.batik.ext.awt.geom.Linear r0;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        r1 := @parameter0: java.awt.geom.Point2D$Double;

        r2 := @parameter1: java.awt.geom.Point2D$Double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1> = r1;

        r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2> = r2;

        return;
    }

    public java.lang.Object clone()
    {
        org.apache.batik.ext.awt.geom.Linear $r0, r2;
        java.awt.geom.Point2D$Double $r1, $r3, $r4, $r5, $r6, $r7;
        double $d0, $d1, $d2, $d3;

        r2 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r0 = new org.apache.batik.ext.awt.geom.Linear;

        $r1 = new java.awt.geom.Point2D$Double;

        $r3 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        $r5 = new java.awt.geom.Point2D$Double;

        $r6 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d3 = $r6.<java.awt.geom.Point2D$Double: double x>;

        $r7 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r7.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r5.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, $d2);

        specialinvoke $r0.<org.apache.batik.ext.awt.geom.Linear: void <init>(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>($r1, $r5);

        return $r0;
    }

    public org.apache.batik.ext.awt.geom.Segment reverse()
    {
        org.apache.batik.ext.awt.geom.Linear $r0, r2;
        java.awt.geom.Point2D$Double $r1, $r3, $r4, $r5, $r6, $r7;
        double $d0, $d1, $d2, $d3;

        r2 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r0 = new org.apache.batik.ext.awt.geom.Linear;

        $r1 = new java.awt.geom.Point2D$Double;

        $r3 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        $r5 = new java.awt.geom.Point2D$Double;

        $r6 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d3 = $r6.<java.awt.geom.Point2D$Double: double x>;

        $r7 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d2 = $r7.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r5.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, $d2);

        specialinvoke $r0.<org.apache.batik.ext.awt.geom.Linear: void <init>(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>($r1, $r5);

        return $r0;
    }

    public double minX()
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4;
        byte $b0;
        int $i1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $b0 = $d1 cmpg $d0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double x>;

        return $d3;

     label1:
        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r3.<java.awt.geom.Point2D$Double: double x>;

        return $d2;
    }

    public double maxX()
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4;
        byte $b0;
        int $i1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $b0 = $d1 cmpl $d0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double x>;

        return $d3;

     label1:
        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r3.<java.awt.geom.Point2D$Double: double x>;

        return $d2;
    }

    public double minY()
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4;
        byte $b0;
        int $i1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double y>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $b0 = $d1 cmpg $d0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double y>;

        return $d3;

     label1:
        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r3.<java.awt.geom.Point2D$Double: double y>;

        return $d2;
    }

    public double maxY()
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4;
        byte $b0;
        int $i1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double y>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $b0 = $d1 cmpl $d0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double y>;

        return $d3;

     label1:
        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d2 = $r3.<java.awt.geom.Point2D$Double: double y>;

        return $d2;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        byte $b0, $b1;
        java.awt.geom.Rectangle2D$Double $r18;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17;
        int $i2, $i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13, d14, d15;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $b0 = $d1 cmpg $d0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        $r15 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        d12 = $r15.<java.awt.geom.Point2D$Double: double x>;

        $r16 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d11 = $r16.<java.awt.geom.Point2D$Double: double x>;

        $r17 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d10 = $r17.<java.awt.geom.Point2D$Double: double x>;

        d13 = $d11 - $d10;

        goto label2;

     label1:
        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        d12 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double x>;

        $r5 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r5.<java.awt.geom.Point2D$Double: double x>;

        d13 = $d3 - $d2;

     label2:
        $r6 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d5 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $r7 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d4 = $r7.<java.awt.geom.Point2D$Double: double y>;

        $b1 = $d5 cmpg $d4;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label3;

        $r12 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        d14 = $r12.<java.awt.geom.Point2D$Double: double y>;

        $r13 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d9 = $r13.<java.awt.geom.Point2D$Double: double y>;

        $r14 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d8 = $r14.<java.awt.geom.Point2D$Double: double y>;

        d15 = $d9 - $d8;

        goto label4;

     label3:
        $r8 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        d14 = $r8.<java.awt.geom.Point2D$Double: double y>;

        $r9 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d7 = $r9.<java.awt.geom.Point2D$Double: double y>;

        $r10 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d6 = $r10.<java.awt.geom.Point2D$Double: double y>;

        d15 = $d7 - $d6;

     label4:
        $r18 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $r18.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d12, d14, d13, d15);

        return $r18;
    }

    public java.awt.geom.Point2D$Double evalDt(double)
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4, $r5;
        double $d0, $d1, d2, $d3, $d4, d5, d6;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        d6 := @parameter0: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        d2 = $d1 - $d0;

        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d4 = $r3.<java.awt.geom.Point2D$Double: double y>;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double y>;

        d5 = $d4 - $d3;

        $r5 = new java.awt.geom.Point2D$Double;

        specialinvoke $r5.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d2, d5);

        return $r5;
    }

    public java.awt.geom.Point2D$Double eval(double)
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        double d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, d12;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d5 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $d3 = $d2 - $d1;

        $d4 = d0 * $d3;

        d6 = $d5 + $d4;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d11 = $r4.<java.awt.geom.Point2D$Double: double y>;

        $r5 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d8 = $r5.<java.awt.geom.Point2D$Double: double y>;

        $r6 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d7 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $d9 = $d8 - $d7;

        $d10 = d0 * $d9;

        d12 = $d11 + $d10;

        $r7 = new java.awt.geom.Point2D$Double;

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d6, d12);

        return $r7;
    }

    public org.apache.batik.ext.awt.geom.Segment$SplitResults split(double)
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        org.apache.batik.ext.awt.geom.Segment[] $r8, $r10;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6;
        org.apache.batik.ext.awt.geom.Segment $r9, $r11;
        org.apache.batik.ext.awt.geom.Segment$SplitResults $r17, $r18;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r12, $r15, $r16;
        int $i7, $i8, $i9, $i10, $i11;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double y>;

        $b0 = d0 cmpl $d1;

        if $b0 == 0 goto label1;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $b1 = d0 cmpl $d2;

        if $b1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d3 = $r3.<java.awt.geom.Point2D$Double: double y>;

        $b2 = d0 cmpg $d3;

        $i7 = (int) $b2;

        if $i7 > 0 goto label3;

        $r16 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d13 = $r16.<java.awt.geom.Point2D$Double: double y>;

        $b6 = d0 cmpg $d13;

        $i8 = (int) $b6;

        if $i8 > 0 goto label3;

        return null;

     label3:
        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d4 = $r4.<java.awt.geom.Point2D$Double: double y>;

        $b3 = d0 cmpl $d4;

        $i9 = (int) $b3;

        if $i9 < 0 goto label4;

        $r15 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d11 = $r15.<java.awt.geom.Point2D$Double: double y>;

        $b5 = d0 cmpl $d11;

        $i10 = (int) $b5;

        if $i10 < 0 goto label4;

        return null;

     label4:
        $r5 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d5 = $r5.<java.awt.geom.Point2D$Double: double y>;

        $d9 = d0 - $d5;

        $r6 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d7 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $r7 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d6 = $r7.<java.awt.geom.Point2D$Double: double y>;

        $d8 = $d7 - $d6;

        $d12 = $d9 / $d8;

        $r8 = newarray (org.apache.batik.ext.awt.geom.Segment)[1];

        $r9 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Linear: org.apache.batik.ext.awt.geom.Segment getSegment(double,double)>(0.0, $d12);

        $r8[0] = $r9;

        $r10 = newarray (org.apache.batik.ext.awt.geom.Segment)[1];

        $r11 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Linear: org.apache.batik.ext.awt.geom.Segment getSegment(double,double)>($d12, 1.0);

        $r10[0] = $r11;

        $r12 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d10 = $r12.<java.awt.geom.Point2D$Double: double y>;

        $b4 = $d10 cmpg d0;

        $i11 = (int) $b4;

        if $i11 >= 0 goto label5;

        $r17 = new org.apache.batik.ext.awt.geom.Segment$SplitResults;

        specialinvoke $r17.<org.apache.batik.ext.awt.geom.Segment$SplitResults: void <init>(org.apache.batik.ext.awt.geom.Segment[],org.apache.batik.ext.awt.geom.Segment[])>($r8, $r10);

        return $r17;

     label5:
        $r18 = new org.apache.batik.ext.awt.geom.Segment$SplitResults;

        specialinvoke $r18.<org.apache.batik.ext.awt.geom.Segment$SplitResults: void <init>(org.apache.batik.ext.awt.geom.Segment[],org.apache.batik.ext.awt.geom.Segment[])>($r10, $r8);

        return $r18;
    }

    public org.apache.batik.ext.awt.geom.Segment getSegment(double, double)
    {
        java.awt.geom.Point2D$Double $r1, $r2;
        org.apache.batik.ext.awt.geom.Linear r0, $r3;
        double d0, d1;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double eval(double)>(d0);

        $r2 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double eval(double)>(d1);

        $r3 = new org.apache.batik.ext.awt.geom.Linear;

        specialinvoke $r3.<org.apache.batik.ext.awt.geom.Linear: void <init>(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>($r1, $r2);

        return $r3;
    }

    public org.apache.batik.ext.awt.geom.Segment splitBefore(double)
    {
        java.awt.geom.Point2D$Double $r2, $r3;
        org.apache.batik.ext.awt.geom.Linear $r0, r1;
        double d0;

        r1 := @this: org.apache.batik.ext.awt.geom.Linear;

        d0 := @parameter0: double;

        $r0 = new org.apache.batik.ext.awt.geom.Linear;

        $r2 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r3 = virtualinvoke r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double eval(double)>(d0);

        specialinvoke $r0.<org.apache.batik.ext.awt.geom.Linear: void <init>(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>($r2, $r3);

        return $r0;
    }

    public org.apache.batik.ext.awt.geom.Segment splitAfter(double)
    {
        java.awt.geom.Point2D$Double $r2, $r3;
        org.apache.batik.ext.awt.geom.Linear $r0, r1;
        double d0;

        r1 := @this: org.apache.batik.ext.awt.geom.Linear;

        d0 := @parameter0: double;

        $r0 = new org.apache.batik.ext.awt.geom.Linear;

        $r2 = virtualinvoke r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double eval(double)>(d0);

        $r3 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        specialinvoke $r0.<org.apache.batik.ext.awt.geom.Linear: void <init>(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>($r2, $r3);

        return $r0;
    }

    public void subdivide(org.apache.batik.ext.awt.geom.Segment, org.apache.batik.ext.awt.geom.Segment)
    {
        org.apache.batik.ext.awt.geom.Linear r2, r3, r4;
        org.apache.batik.ext.awt.geom.Segment r0, r1;
        boolean $z0, $z1;

        r2 := @this: org.apache.batik.ext.awt.geom.Linear;

        r0 := @parameter0: org.apache.batik.ext.awt.geom.Segment;

        r1 := @parameter1: org.apache.batik.ext.awt.geom.Segment;

        r3 = null;

        r4 = null;

        $z0 = r0 instanceof org.apache.batik.ext.awt.geom.Linear;

        if $z0 == 0 goto label1;

        r3 = (org.apache.batik.ext.awt.geom.Linear) r0;

     label1:
        $z1 = r1 instanceof org.apache.batik.ext.awt.geom.Linear;

        if $z1 == 0 goto label2;

        r4 = (org.apache.batik.ext.awt.geom.Linear) r1;

     label2:
        virtualinvoke r2.<org.apache.batik.ext.awt.geom.Linear: void subdivide(org.apache.batik.ext.awt.geom.Linear,org.apache.batik.ext.awt.geom.Linear)>(r3, r4);

        return;
    }

    public void subdivide(double, org.apache.batik.ext.awt.geom.Segment, org.apache.batik.ext.awt.geom.Segment)
    {
        org.apache.batik.ext.awt.geom.Linear r2, r3, r4;
        org.apache.batik.ext.awt.geom.Segment r0, r1;
        boolean $z0, $z1;
        double d0;

        r2 := @this: org.apache.batik.ext.awt.geom.Linear;

        d0 := @parameter0: double;

        r0 := @parameter1: org.apache.batik.ext.awt.geom.Segment;

        r1 := @parameter2: org.apache.batik.ext.awt.geom.Segment;

        r3 = null;

        r4 = null;

        $z0 = r0 instanceof org.apache.batik.ext.awt.geom.Linear;

        if $z0 == 0 goto label1;

        r3 = (org.apache.batik.ext.awt.geom.Linear) r0;

     label1:
        $z1 = r1 instanceof org.apache.batik.ext.awt.geom.Linear;

        if $z1 == 0 goto label2;

        r4 = (org.apache.batik.ext.awt.geom.Linear) r1;

     label2:
        virtualinvoke r2.<org.apache.batik.ext.awt.geom.Linear: void subdivide(double,org.apache.batik.ext.awt.geom.Linear,org.apache.batik.ext.awt.geom.Linear)>(d0, r3, r4);

        return;
    }

    public void subdivide(org.apache.batik.ext.awt.geom.Linear, org.apache.batik.ext.awt.geom.Linear)
    {
        org.apache.batik.ext.awt.geom.Linear r0, r1, r6;
        java.awt.geom.Point2D$Double $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r1 := @this: org.apache.batik.ext.awt.geom.Linear;

        r0 := @parameter0: org.apache.batik.ext.awt.geom.Linear;

        r6 := @parameter1: org.apache.batik.ext.awt.geom.Linear;

        if r0 != null goto label1;

        if r6 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d0 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $d2 = $d1 + $d0;

        $d10 = $d2 * 0.5;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d4 = $r4.<java.awt.geom.Point2D$Double: double y>;

        $r5 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d3 = $r5.<java.awt.geom.Point2D$Double: double y>;

        $d5 = $d4 + $d3;

        $d11 = $d5 * 0.5;

        if r0 == null goto label2;

        $r14 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r13 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d8 = $r13.<java.awt.geom.Point2D$Double: double x>;

        $r14.<java.awt.geom.Point2D$Double: double x> = $d8;

        $r16 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r15 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d9 = $r15.<java.awt.geom.Point2D$Double: double y>;

        $r16.<java.awt.geom.Point2D$Double: double y> = $d9;

        $r17 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $r17.<java.awt.geom.Point2D$Double: double x> = $d10;

        $r18 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $r18.<java.awt.geom.Point2D$Double: double y> = $d11;

     label2:
        if r6 == null goto label3;

        $r7 = r6.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r7.<java.awt.geom.Point2D$Double: double x> = $d10;

        $r8 = r6.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r8.<java.awt.geom.Point2D$Double: double y> = $d11;

        $r10 = r6.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $r9 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d6 = $r9.<java.awt.geom.Point2D$Double: double x>;

        $r10.<java.awt.geom.Point2D$Double: double x> = $d6;

        $r12 = r6.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $r11 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d7 = $r11.<java.awt.geom.Point2D$Double: double y>;

        $r12.<java.awt.geom.Point2D$Double: double y> = $d7;

     label3:
        return;
    }

    public void subdivide(double, org.apache.batik.ext.awt.geom.Linear, org.apache.batik.ext.awt.geom.Linear)
    {
        org.apache.batik.ext.awt.geom.Linear r0, r1, r8;
        java.awt.geom.Point2D$Double $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;

        r1 := @this: org.apache.batik.ext.awt.geom.Linear;

        d0 := @parameter0: double;

        r0 := @parameter1: org.apache.batik.ext.awt.geom.Linear;

        r8 := @parameter2: org.apache.batik.ext.awt.geom.Linear;

        if r0 != null goto label1;

        if r8 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d5 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r4.<java.awt.geom.Point2D$Double: double x>;

        $d3 = $d2 - $d1;

        $d4 = d0 * $d3;

        $d15 = $d5 + $d4;

        $r5 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d10 = $r5.<java.awt.geom.Point2D$Double: double y>;

        $r6 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d7 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $r7 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d6 = $r7.<java.awt.geom.Point2D$Double: double y>;

        $d8 = $d7 - $d6;

        $d9 = d0 * $d8;

        $d16 = $d10 + $d9;

        if r0 == null goto label2;

        $r16 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r15 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d13 = $r15.<java.awt.geom.Point2D$Double: double x>;

        $r16.<java.awt.geom.Point2D$Double: double x> = $d13;

        $r18 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r17 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d14 = $r17.<java.awt.geom.Point2D$Double: double y>;

        $r18.<java.awt.geom.Point2D$Double: double y> = $d14;

        $r19 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $r19.<java.awt.geom.Point2D$Double: double x> = $d15;

        $r20 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $r20.<java.awt.geom.Point2D$Double: double y> = $d16;

     label2:
        if r8 == null goto label3;

        $r9 = r8.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r9.<java.awt.geom.Point2D$Double: double x> = $d15;

        $r10 = r8.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $r10.<java.awt.geom.Point2D$Double: double y> = $d16;

        $r12 = r8.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $r11 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d11 = $r11.<java.awt.geom.Point2D$Double: double x>;

        $r12.<java.awt.geom.Point2D$Double: double x> = $d11;

        $r14 = r8.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $r13 = r1.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d12 = $r13.<java.awt.geom.Point2D$Double: double y>;

        $r14.<java.awt.geom.Point2D$Double: double y> = $d12;

     label3:
        return;
    }

    public double getLength()
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        d2 = $d1 - $d0;

        $r3 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d4 = $r3.<java.awt.geom.Point2D$Double: double y>;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double y>;

        d5 = $d4 - $d3;

        $d7 = d2 * d2;

        $d6 = d5 * d5;

        $d8 = $d7 + $d6;

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>($d8);

        return $d9;
    }

    public double getLength(double)
    {
        org.apache.batik.ext.awt.geom.Linear r0;
        double $d0, d1;

        r0 := @this: org.apache.batik.ext.awt.geom.Linear;

        d1 := @parameter0: double;

        $d0 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Linear: double getLength()>();

        return $d0;
    }

    public java.lang.String toString()
    {
        org.apache.batik.ext.awt.geom.Linear r2;
        java.awt.geom.Point2D$Double $r3, $r6, $r9, $r12;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r14;
        double $d0, $d1, $d2, $d3;

        r2 := @this: org.apache.batik.ext.awt.geom.Linear;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("M");

        $r3 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d0 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r6 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p1>;

        $d1 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r9 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d2 = $r9.<java.awt.geom.Point2D$Double: double x>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r12 = r2.<org.apache.batik.ext.awt.geom.Linear: java.awt.geom.Point2D$Double p2>;

        $d3 = $r12.<java.awt.geom.Point2D$Double: double y>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }
}
