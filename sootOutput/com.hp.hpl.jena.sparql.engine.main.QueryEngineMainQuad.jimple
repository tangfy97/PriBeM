public class com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad extends com.hp.hpl.jena.sparql.engine.main.QueryEngineMain
{
    private static com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory;

    public void <init>(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r2;
        com.hp.hpl.jena.sparql.util.Context r4;
        com.hp.hpl.jena.sparql.algebra.Op r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: void <init>(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3, r4);

        return;
    }

    public void <init>(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r2;
        com.hp.hpl.jena.sparql.util.Context r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: void <init>(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3, r4);

        return;
    }

    protected com.hp.hpl.jena.sparql.algebra.Op modifyOp(com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad r0;
        com.hp.hpl.jena.sparql.algebra.Op $r1, $r2, r3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad;

        r3 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: com.hp.hpl.jena.sparql.algebra.Op modifyOp(com.hp.hpl.jena.sparql.algebra.Op)>(r3);

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op toQuadForm(com.hp.hpl.jena.sparql.algebra.Op)>($r1);

        return $r2;
    }

    public static com.hp.hpl.jena.sparql.engine.QueryEngineFactory getFactory()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r0;

        $r0 = <com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad: com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory>;

        return $r0;
    }

    public static void register()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r0;

        $r0 = <com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad: com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void addFactory(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>($r0);

        return;
    }

    public static void unregister()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r0;

        $r0 = <com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad: com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void removeFactory(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>($r0);

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad$1 $r0;

        $r0 = new com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad$1;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad$1: void <init>()>();

        <com.hp.hpl.jena.sparql.engine.main.QueryEngineMainQuad: com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory> = $r0;

        return;
    }
}
