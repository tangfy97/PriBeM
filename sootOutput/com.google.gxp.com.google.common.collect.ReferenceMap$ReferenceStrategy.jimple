abstract enum class com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy extends java.lang.Enum
{
    public static final enum com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy DIRECT;
    public static final enum com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy WRAP_IN_SOFT;
    public static final enum com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy WRAP_IN_WEAK;
    private static final com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy[] $VALUES;

    public static final com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy[] values()
    {
        java.lang.Object $r1;
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy[] $r0, $r2;

        $r0 = <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy[]) $r1;

        return $r2;
    }

    public static com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy valueOf(java.lang.String)
    {
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/gxp/com/google/common/collect/ReferenceMap$ReferenceStrategy;", r0);

        $r2 = (com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy r0;
        java.lang.String r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    abstract java.lang.Object referenceKey(com.google.gxp.com.google.common.collect.ReferenceMap, java.lang.Object);

    abstract java.lang.Object referenceValue(com.google.gxp.com.google.common.collect.ReferenceMap, java.lang.Object, java.lang.Object);

    java.lang.Object dereferenceKey(java.lang.Object)
    {
        java.lang.ref.Reference $r1;
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy r3;
        java.lang.Object r0, $r2;

        r3 := @this: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy;

        r0 := @parameter0: java.lang.Object;

        $r1 = (java.lang.ref.Reference) r0;

        $r2 = virtualinvoke $r1.<java.lang.ref.Reference: java.lang.Object get()>();

        return $r2;
    }

    java.lang.Object dereferenceValue(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy r3;
        com.google.gxp.com.google.common.collect.ReferenceMap$InternalReference r1;
        java.lang.Object r0, $r2;

        r3 := @this: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy;

        r0 := @parameter0: java.lang.Object;

        r1 = (com.google.gxp.com.google.common.collect.ReferenceMap$InternalReference) r0;

        $r2 = interfaceinvoke r1.<com.google.gxp.com.google.common.collect.ReferenceMap$InternalReference: java.lang.Object get()>();

        if $r2 != null goto label1;

        interfaceinvoke r1.<com.google.gxp.com.google.common.collect.ReferenceMap$InternalReference: void finalizeReferent()>();

     label1:
        return $r2;
    }

    java.lang.Object getDummyFor(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy r3;
        java.lang.Object r1, $r2;
        com.google.gxp.com.google.common.collect.ReferenceMap$DummyReference $r0;

        r3 := @this: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.google.gxp.com.google.common.collect.ReferenceMap$DummyReference;

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ReferenceMap$DummyReference: void <init>(java.lang.Object)>($r2);

        return $r0;
    }

    static com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy forType(com.google.gxp.com.google.common.base.ReferenceType)
    {
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy $r4, $r5, $r6;
        java.lang.AssertionError $r7;
        com.google.gxp.com.google.common.base.ReferenceType r0, $r3;
        int[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @parameter0: com.google.gxp.com.google.common.base.ReferenceType;

        $r1 = <com.google.gxp.com.google.common.collect.ReferenceMap$1: int[] $SwitchMap$com$google$common$base$ReferenceType>;

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = (com.google.gxp.com.google.common.base.ReferenceType) $r2;

        $i0 = virtualinvoke $r3.<com.google.gxp.com.google.common.base.ReferenceType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r6 = <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy DIRECT>;

        return $r6;

     label2:
        $r5 = <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy WRAP_IN_SOFT>;

        return $r5;

     label3:
        $r4 = <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy WRAP_IN_WEAK>;

        return $r4;

     label4:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;
    }

    void <init>(java.lang.String, int, com.google.gxp.com.google.common.collect.ReferenceMap$1)
    {
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy r0;
        com.google.gxp.com.google.common.collect.ReferenceMap$1 r2;
        int i0;
        java.lang.String r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.gxp.com.google.common.collect.ReferenceMap$1;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy $r4, $r5, $r6;
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$2 $r1;
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$1 $r0;
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$3 $r2;
        com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy[] $r3;

        $r0 = new com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$1;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$1: void <init>(java.lang.String,int)>("DIRECT", 0);

        <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy DIRECT> = $r0;

        $r1 = new com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$2;

        specialinvoke $r1.<com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$2: void <init>(java.lang.String,int)>("WRAP_IN_SOFT", 1);

        <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy WRAP_IN_SOFT> = $r1;

        $r2 = new com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$3;

        specialinvoke $r2.<com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy$3: void <init>(java.lang.String,int)>("WRAP_IN_WEAK", 2);

        <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy WRAP_IN_WEAK> = $r2;

        $r3 = newarray (com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy)[3];

        $r4 = <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy DIRECT>;

        $r3[0] = $r4;

        $r5 = <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy WRAP_IN_SOFT>;

        $r3[1] = $r5;

        $r6 = <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy WRAP_IN_WEAK>;

        $r3[2] = $r6;

        <com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy: com.google.gxp.com.google.common.collect.ReferenceMap$ReferenceStrategy[] $VALUES> = $r3;

        return;
    }
}
