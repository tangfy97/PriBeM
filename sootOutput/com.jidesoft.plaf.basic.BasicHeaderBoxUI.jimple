public class com.jidesoft.plaf.basic.BasicHeaderBoxUI extends com.jidesoft.plaf.HeaderBoxUI
{
    private static com.jidesoft.plaf.HeaderBoxUI _headerBoxUI;
    protected com.jidesoft.plaf.basic.ThemePainter _painter;

    public void <init>()
    {
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        specialinvoke r0.<com.jidesoft.plaf.HeaderBoxUI: void <init>()>();

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r3;
        com.jidesoft.plaf.HeaderBoxUI $r0, $r1;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI $r2;

        r3 := @parameter0: javax.swing.JComponent;

        $r0 = <com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.HeaderBoxUI _headerBoxUI>;

        if $r0 != null goto label1;

        $r2 = new com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: void <init>()>();

        <com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.HeaderBoxUI _headerBoxUI> = $r2;

     label1:
        $r1 = <com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.HeaderBoxUI _headerBoxUI>;

        return $r1;
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        com.jidesoft.swing.HeaderBox r1;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r2;

        r2 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r0 := @parameter0: javax.swing.JComponent;

        r1 = (com.jidesoft.swing.HeaderBox) r0;

        specialinvoke r2.<com.jidesoft.plaf.HeaderBoxUI: void installUI(javax.swing.JComponent)>(r1);

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: void installDefaults(com.jidesoft.swing.HeaderBox)>(r1);

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: void installListeners(javax.swing.JComponent)>(r1);

        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        com.jidesoft.swing.HeaderBox r1;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r2;

        r2 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r0 := @parameter0: javax.swing.JComponent;

        r1 = (com.jidesoft.swing.HeaderBox) r0;

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: void uninstallDefaults(com.jidesoft.swing.HeaderBox)>(r1);

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: void uninstallListeners(javax.swing.JComponent)>(r1);

        specialinvoke r2.<com.jidesoft.plaf.HeaderBoxUI: void uninstallUI(javax.swing.JComponent)>(r0);

        return;
    }

    protected void installListeners(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r0;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r1 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter createHeaderBoxMouseListener()>();

        virtualinvoke r2.<javax.swing.JComponent: void addMouseListener(java.awt.event.MouseListener)>($r1);

        return;
    }

    private com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter getMouseListener(com.jidesoft.swing.HeaderBox)
    {
        com.jidesoft.swing.HeaderBox r0;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter $r3;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r4;
        java.awt.event.MouseMotionListener r2;
        java.awt.event.MouseMotionListener[] $r1;
        int i0, i1;
        boolean $z0;

        r4 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r0 := @parameter0: com.jidesoft.swing.HeaderBox;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.HeaderBox: java.awt.event.MouseMotionListener[] getMouseMotionListeners()>();

        if $r1 == null goto label3;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        $z0 = r2 instanceof com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter;

        if $z0 == 0 goto label2;

        $r3 = (com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter) r2;

        return $r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter createHeaderBoxMouseListener()
    {
        com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter $r0;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r1;

        r1 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        $r0 = new com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter: void <init>(com.jidesoft.plaf.basic.BasicHeaderBoxUI)>(r1);

        return $r0;
    }

    protected void uninstallListeners(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        com.jidesoft.swing.HeaderBox r1;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r2;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter $r3;

        r2 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r0 := @parameter0: javax.swing.JComponent;

        r1 = (com.jidesoft.swing.HeaderBox) r0;

        $r3 = specialinvoke r2.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.basic.BasicHeaderBoxUI$RolloverMouseInputAdapter getMouseListener(com.jidesoft.swing.HeaderBox)>(r1);

        if $r3 == null goto label1;

        virtualinvoke r1.<com.jidesoft.swing.HeaderBox: void removeMouseListener(java.awt.event.MouseListener)>($r3);

     label1:
        return;
    }

    protected void installDefaults(com.jidesoft.swing.HeaderBox)
    {
        com.jidesoft.swing.HeaderBox r3;
        java.lang.Object $r1;
        com.jidesoft.plaf.basic.ThemePainter $r2;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r3 := @parameter0: com.jidesoft.swing.HeaderBox;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Theme.painter");

        $r2 = (com.jidesoft.plaf.basic.ThemePainter) $r1;

        r0.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.basic.ThemePainter _painter> = $r2;

        staticinvoke <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>(r3, "Panel.background", "Panel.foreground", "Panel.font");

        staticinvoke <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>(r3, "Panel.border");

        return;
    }

    public void paint(java.awt.Graphics, javax.swing.JComponent)
    {
        java.awt.Graphics r1;
        javax.swing.JComponent r2;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.JComponent;

        specialinvoke r0.<com.jidesoft.plaf.HeaderBoxUI: void paint(java.awt.Graphics,javax.swing.JComponent)>(r1, r2);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: void paintBackground(java.awt.Graphics,javax.swing.JComponent)>(r1, r2);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: void paintBorder(java.awt.Graphics,javax.swing.JComponent)>(r1, r2);

        return;
    }

    protected void paintBorder(java.awt.Graphics, javax.swing.JComponent)
    {
        java.awt.Graphics r1;
        javax.swing.JComponent r2;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.JComponent;

        return;
    }

    protected void paintBackground(java.awt.Graphics, javax.swing.JComponent)
    {
        java.awt.Rectangle $r2;
        int $i0, $i1;
        javax.swing.ButtonModel $r3, $r4, $r5;
        com.jidesoft.plaf.basic.ThemePainter $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2;
        javax.swing.JComponent r0;
        com.jidesoft.swing.HeaderBox r1;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r6;
        java.awt.Graphics r7;

        r6 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r7 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JComponent;

        r1 = (com.jidesoft.swing.HeaderBox) r0;

        $r2 = new java.awt.Rectangle;

        $i0 = virtualinvoke r0.<javax.swing.JComponent: int getWidth()>();

        $i1 = virtualinvoke r0.<javax.swing.JComponent: int getHeight()>();

        specialinvoke $r2.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        $r3 = virtualinvoke r1.<com.jidesoft.swing.HeaderBox: javax.swing.ButtonModel getModel()>();

        $z0 = interfaceinvoke $r3.<javax.swing.ButtonModel: boolean isPressed()>();

        if $z0 == 0 goto label1;

        $r11 = r6.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.basic.ThemePainter _painter>;

        interfaceinvoke $r11.<com.jidesoft.plaf.basic.ThemePainter: void paintHeaderBoxBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r7, $r2, 0, 1);

        goto label4;

     label1:
        $r4 = virtualinvoke r1.<com.jidesoft.swing.HeaderBox: javax.swing.ButtonModel getModel()>();

        $z1 = interfaceinvoke $r4.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z1 == 0 goto label2;

        $r10 = r6.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.basic.ThemePainter _painter>;

        interfaceinvoke $r10.<com.jidesoft.plaf.basic.ThemePainter: void paintHeaderBoxBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r7, $r2, 0, 3);

        goto label4;

     label2:
        $r5 = virtualinvoke r1.<com.jidesoft.swing.HeaderBox: javax.swing.ButtonModel getModel()>();

        $z2 = interfaceinvoke $r5.<javax.swing.ButtonModel: boolean isRollover()>();

        if $z2 == 0 goto label3;

        $r9 = r6.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.basic.ThemePainter _painter>;

        interfaceinvoke $r9.<com.jidesoft.plaf.basic.ThemePainter: void paintHeaderBoxBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r7, $r2, 0, 2);

        goto label4;

     label3:
        $r8 = r6.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.basic.ThemePainter _painter>;

        interfaceinvoke $r8.<com.jidesoft.plaf.basic.ThemePainter: void paintHeaderBoxBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r7, $r2, 0, 0);

     label4:
        return;
    }

    protected void uninstallDefaults(com.jidesoft.swing.HeaderBox)
    {
        com.jidesoft.swing.HeaderBox r0;
        com.jidesoft.plaf.basic.BasicHeaderBoxUI r1;

        r1 := @this: com.jidesoft.plaf.basic.BasicHeaderBoxUI;

        r0 := @parameter0: com.jidesoft.swing.HeaderBox;

        staticinvoke <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>(r0);

        r1.<com.jidesoft.plaf.basic.BasicHeaderBoxUI: com.jidesoft.plaf.basic.ThemePainter _painter> = null;

        return;
    }
}
