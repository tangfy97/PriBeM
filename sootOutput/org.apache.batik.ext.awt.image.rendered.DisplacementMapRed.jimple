public class org.apache.batik.ext.awt.image.rendered.DisplacementMapRed extends org.apache.batik.ext.awt.image.rendered.AbstractRed
{
    private static final boolean TIME;
    private static final boolean USE_NN;
    private float scaleX;
    private float scaleY;
    private org.apache.batik.ext.awt.image.ARGBChannel xChannel;
    private org.apache.batik.ext.awt.image.ARGBChannel yChannel;
    org.apache.batik.ext.awt.image.rendered.CachableRed image;
    org.apache.batik.ext.awt.image.rendered.CachableRed offsets;
    int maxOffX;
    int maxOffY;
    java.awt.RenderingHints hints;
    org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] xOffsets;
    org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] yOffsets;

    public void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed, org.apache.batik.ext.awt.image.rendered.CachableRed, org.apache.batik.ext.awt.image.ARGBChannel, org.apache.batik.ext.awt.image.ARGBChannel, float, float, java.awt.RenderingHints)
    {
        java.awt.RenderingHints r4;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] $r13, $r14;
        java.awt.image.SampleModel $r12;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed r0;
        org.apache.batik.ext.awt.image.rendered.CachableRed r3, r17;
        float f0, f1, $f2, $f3;
        org.apache.batik.ext.awt.image.rendered.TileCacheRed $r9;
        java.awt.Rectangle $r5, $r6;
        org.apache.batik.ext.awt.image.rendered.PadRed $r7;
        org.apache.batik.ext.awt.image.PadMode $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        double $d0, $d1, $d2, $d3;
        org.apache.batik.ext.awt.image.ARGBChannel r1, r2;
        java.lang.IllegalArgumentException $r15, $r16;
        java.awt.image.ColorModel $r10, $r11;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed;

        r17 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        r3 := @parameter1: org.apache.batik.ext.awt.image.rendered.CachableRed;

        r1 := @parameter2: org.apache.batik.ext.awt.image.ARGBChannel;

        r2 := @parameter3: org.apache.batik.ext.awt.image.ARGBChannel;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        r4 := @parameter6: java.awt.RenderingHints;

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: void <init>()>();

        if r1 != null goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must provide xChannel");

        throw $r16;

     label1:
        if r2 != null goto label2;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must provide yChannel");

        throw $r15;

     label2:
        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed offsets> = r3;

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: float scaleX> = f0;

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: float scaleY> = f1;

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.ARGBChannel xChannel> = r1;

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.ARGBChannel yChannel> = r2;

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: java.awt.RenderingHints hints> = r4;

        $f2 = f0 / 2.0F;

        $d0 = (double) $f2;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d1;

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffX> = $i0;

        $f3 = f1 / 2.0F;

        $d2 = (double) $f3;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i1 = (int) $d3;

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffY> = $i1;

        $r5 = interfaceinvoke r17.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $r6 = interfaceinvoke r17.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $i3 = $r6.<java.awt.Rectangle: int x>;

        $i2 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffX>;

        $i4 = $i3 - $i2;

        $r6.<java.awt.Rectangle: int x> = $i4;

        $i7 = $r6.<java.awt.Rectangle: int width>;

        $i5 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffX>;

        $i6 = 2 * $i5;

        $i8 = $i7 + $i6;

        $r6.<java.awt.Rectangle: int width> = $i8;

        $i10 = $r6.<java.awt.Rectangle: int y>;

        $i9 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffY>;

        $i11 = $i10 - $i9;

        $r6.<java.awt.Rectangle: int y> = $i11;

        $i14 = $r6.<java.awt.Rectangle: int height>;

        $i12 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffY>;

        $i13 = 2 * $i12;

        $i15 = $i14 + $i13;

        $r6.<java.awt.Rectangle: int height> = $i15;

        $r7 = new org.apache.batik.ext.awt.image.rendered.PadRed;

        $r8 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r7.<org.apache.batik.ext.awt.image.rendered.PadRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,org.apache.batik.ext.awt.image.PadMode,java.awt.RenderingHints)>(r17, $r6, $r8, null);

        $r9 = new org.apache.batik.ext.awt.image.rendered.TileCacheRed;

        specialinvoke $r9.<org.apache.batik.ext.awt.image.rendered.TileCacheRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed)>($r7);

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image> = $r9;

        $r10 = interfaceinvoke $r9.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $r11 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceColorModel(java.awt.image.ColorModel,boolean)>($r10, 1);

        $r12 = interfaceinvoke $r9.<java.awt.image.RenderedImage: java.awt.image.SampleModel getSampleModel()>();

        $i17 = $r5.<java.awt.Rectangle: int x>;

        $i16 = $r5.<java.awt.Rectangle: int y>;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: void init(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,java.awt.image.ColorModel,java.awt.image.SampleModel,int,int,java.util.Map)>($r9, $r5, $r11, $r12, $i17, $i16, null);

        $i18 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getNumXTiles()>();

        $r13 = newarray (org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets)[$i18];

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] xOffsets> = $r13;

        $i19 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getNumYTiles()>();

        $r14 = newarray (org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets)[$i19];

        r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] yOffsets> = $r14;

        return;
    }

    public java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)
    {
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed r0;
        java.awt.image.WritableRaster r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed;

        r1 := @parameter0: java.awt.image.WritableRaster;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: void copyToRaster(java.awt.image.WritableRaster)>(r1);

        return r1;
    }

    public java.awt.image.Raster getTile(int, int)
    {
        java.awt.Rectangle $r2;
        int[] $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        int i0, i1;
        java.awt.image.Raster $r4;
        boolean $z0;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed r0;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r3, $r5, $r10;
        java.awt.image.ColorModel $r6, $r11;
        java.awt.image.WritableRaster $r1, $r7;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets $r8, $r9;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: java.awt.image.WritableRaster makeTile(int,int)>(i0, i1);

        $r2 = virtualinvoke $r1.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();

        $r3 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed offsets>;

        $r4 = interfaceinvoke $r3.<java.awt.image.RenderedImage: java.awt.image.Raster getData(java.awt.Rectangle)>($r2);

        $r5 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed offsets>;

        $r6 = interfaceinvoke $r5.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $r7 = (java.awt.image.WritableRaster) $r4;

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)>($r7, $r6, 0);

        $r8 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets getXOffsets(int)>(i0);

        $r9 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets getYOffsets(int)>(i1);

        $r10 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r11 = interfaceinvoke $r10.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $z0 = virtualinvoke $r11.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        if $z0 == 0 goto label1;

        $r19 = $r8.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: int[] tile>;

        $r18 = $r8.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: int[] off>;

        $r17 = $r9.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: int[] tile>;

        $r16 = $r9.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: int[] off>;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: void filterBL(java.awt.image.Raster,java.awt.image.WritableRaster,int[],int[],int[],int[])>($r4, $r1, $r19, $r18, $r17, $r16);

        goto label2;

     label1:
        $r15 = $r8.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: int[] tile>;

        $r14 = $r8.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: int[] off>;

        $r13 = $r9.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: int[] tile>;

        $r12 = $r9.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: int[] off>;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: void filterBLPre(java.awt.image.Raster,java.awt.image.WritableRaster,int[],int[],int[],int[])>($r4, $r1, $r15, $r14, $r13, $r12);

     label2:
        return $r1;
    }

    public org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets getXOffsets(int)
    {
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] $r1, $r6;
        java.awt.image.SampleModel $r2;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed r0;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r4;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets $r5, r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, i16, i17, i18, $i19, i20, $i21, $i22, $i23, i24, $i25, $i26;
        java.awt.image.SinglePixelPackedSampleModel r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] xOffsets>;

        $i1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getMinTileX()>();

        $i2 = i0 - $i1;

        r7 = $r1[$i2];

        if r7 == null goto label1;

        return r7;

     label1:
        $r2 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: java.awt.image.SampleModel getSampleModel()>();

        r3 = (java.awt.image.SinglePixelPackedSampleModel) $r2;

        $i3 = virtualinvoke r3.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>(0, 0);

        $i4 = virtualinvoke r3.<java.awt.image.SampleModel: int getWidth()>();

        $i5 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffX>;

        $i6 = 2 * $i5;

        i7 = $i4 + $i6;

        $i8 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getTileGridXOffset()>();

        $i9 = i0 * $i4;

        $i11 = $i8 + $i9;

        $i10 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffX>;

        $i12 = $i11 - $i10;

        $r4 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $i13 = interfaceinvoke $r4.<java.awt.image.RenderedImage: int getTileGridXOffset()>();

        i14 = $i12 - $i13;

        $i15 = i14 + i7;

        i16 = $i15 - 1;

        $d1 = (double) i14;

        $d0 = (double) $i4;

        $d2 = $d1 / $d0;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        i17 = (int) $d3;

        $d5 = (double) i16;

        $d4 = (double) $i4;

        $d6 = $d5 / $d4;

        $d7 = staticinvoke <java.lang.Math: double floor(double)>($d6);

        i18 = (int) $d7;

        $i19 = i17 * $i4;

        i20 = i14 - $i19;

        $i21 = i18 + 1;

        $i22 = $i21 * $i4;

        $i23 = $i22 - 1;

        i24 = $i23 - i16;

        $r5 = new org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets;

        specialinvoke $r5.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: void <init>(int,int,int,int,int,int,int,int)>(i7, $i3, 1, i20, $i4, i24, i17, i18);

        $r6 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] xOffsets>;

        $i25 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getMinTileX()>();

        $i26 = i0 - $i25;

        $r6[$i26] = $r5;

        return $r5;
    }

    public org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets getYOffsets(int)
    {
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] $r1, $r6;
        java.awt.image.SampleModel $r2;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed r0;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r4;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets $r5, r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, i16, i17, i18, $i19, i20, $i21, $i22, $i23, i24, $i25, $i26;
        java.awt.image.SinglePixelPackedSampleModel r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] yOffsets>;

        $i1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getMinTileY()>();

        $i2 = i0 - $i1;

        r7 = $r1[$i2];

        if r7 == null goto label1;

        return r7;

     label1:
        $r2 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: java.awt.image.SampleModel getSampleModel()>();

        r3 = (java.awt.image.SinglePixelPackedSampleModel) $r2;

        $i3 = virtualinvoke r3.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $i4 = virtualinvoke r3.<java.awt.image.SampleModel: int getHeight()>();

        $i5 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffY>;

        $i6 = 2 * $i5;

        i7 = $i4 + $i6;

        $i8 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getTileGridYOffset()>();

        $i9 = i0 * $i4;

        $i11 = $i8 + $i9;

        $i10 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffY>;

        $i12 = $i11 - $i10;

        $r4 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $i13 = interfaceinvoke $r4.<java.awt.image.RenderedImage: int getTileGridYOffset()>();

        i14 = $i12 - $i13;

        $i15 = i14 + i7;

        i16 = $i15 - 1;

        $d1 = (double) i14;

        $d0 = (double) $i4;

        $d2 = $d1 / $d0;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        i17 = (int) $d3;

        $d5 = (double) i16;

        $d4 = (double) $i4;

        $d6 = $d5 / $d4;

        $d7 = staticinvoke <java.lang.Math: double floor(double)>($d6);

        i18 = (int) $d7;

        $i19 = i17 * $i4;

        i20 = i14 - $i19;

        $i21 = i18 + 1;

        $i22 = $i21 * $i4;

        $i23 = $i22 - 1;

        i24 = $i23 - i16;

        $r5 = new org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets;

        specialinvoke $r5.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets: void <init>(int,int,int,int,int,int,int,int)>(i7, 0, $i3, i20, $i4, i24, i17, i18);

        $r6 = r0.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed$TileOffsets[] yOffsets>;

        $i25 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getMinTileY()>();

        $i26 = i0 - $i25;

        $r6[$i26] = $r5;

        return $r5;
    }

    public void filterBL(java.awt.image.Raster, java.awt.image.WritableRaster, int[], int[], int[], int[])
    {
        java.awt.image.SampleModel $r7, $r9;
        java.awt.image.DataBufferInt r3, r6, $r22, $r29, $r34, $r39, $r44, $r49;
        org.apache.batik.ext.awt.image.ARGBChannel $r15, $r16;
        int[] r12, r14, r17, r18, r24, r25, r51, r52, r53;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, $i24, $i25, i26, i27, $i28, i29, $i30, i31, i32, i33, i34, i35, $i36, $i37, i38, $i39, $i40, $i41, i42, $i43, $i44, $i45, i46, $i47, i48, $i49, i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, i107, i108, i109, i110, i111, i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, i121, i122, i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i234, $i236, $i238, $i240, $i242, $i244, $i246, $i248, $i250, $i252, $i254, $i256, $i258, $i260, $i262, $i264, $i266, $i268, $i270, $i272, $i274, $i276, $i278, $i280;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed r1;
        java.awt.image.SinglePixelPackedSampleModel r8, r10;
        java.awt.image.DataBuffer $r2, $r5, $r21, $r28, $r33, $r38, $r43, $r48;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.awt.image.Raster r4, $r20, $r27, $r32, $r37, $r42, $r47;
        java.awt.image.WritableRaster r0;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r19, $r26, $r31, $r36, $r41, $r46;
        int[][] $r11, $r13, $r23, $r30, $r35, $r40, $r45, $r50;
        float $f0, $f1;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed;

        r4 := @parameter0: java.awt.image.Raster;

        r0 := @parameter1: java.awt.image.WritableRaster;

        r17 := @parameter2: int[];

        r24 := @parameter3: int[];

        r18 := @parameter4: int[];

        r25 := @parameter5: int[];

        $i0 = virtualinvoke r0.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.Raster: int getHeight()>();

        i2 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffX>;

        i3 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffY>;

        i4 = i2 + $i0;

        i5 = i3 + $i1;

        $r2 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r3 = (java.awt.image.DataBufferInt) $r2;

        $r5 = virtualinvoke r4.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r6 = (java.awt.image.DataBufferInt) $r5;

        $r7 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r8 = (java.awt.image.SinglePixelPackedSampleModel) $r7;

        $i6 = virtualinvoke r3.<java.awt.image.DataBuffer: int getOffset()>();

        $i7 = virtualinvoke r0.<java.awt.image.Raster: int getMinX()>();

        $i8 = virtualinvoke r0.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<java.awt.image.Raster: int getMinY()>();

        $i11 = virtualinvoke r0.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i12 = $i10 - $i11;

        $i13 = virtualinvoke r8.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i9, $i12);

        i14 = $i6 + $i13;

        $r9 = virtualinvoke r4.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r10 = (java.awt.image.SinglePixelPackedSampleModel) $r9;

        $i15 = virtualinvoke r6.<java.awt.image.DataBuffer: int getOffset()>();

        $i16 = virtualinvoke r0.<java.awt.image.Raster: int getMinX()>();

        $i17 = virtualinvoke r4.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i18 = $i16 - $i17;

        $i19 = virtualinvoke r0.<java.awt.image.Raster: int getMinY()>();

        $i20 = virtualinvoke r4.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i21 = $i19 - $i20;

        $i22 = virtualinvoke r10.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i18, $i21);

        i23 = $i15 + $i22;

        $i24 = virtualinvoke r8.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $i25 = virtualinvoke r10.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        i26 = $i24 - $i0;

        i27 = $i25 - $i0;

        $r11 = virtualinvoke r3.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r12 = $r11[0];

        $r13 = virtualinvoke r6.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r14 = $r13[0];

        $r15 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.ARGBChannel xChannel>;

        $i28 = virtualinvoke $r15.<org.apache.batik.ext.awt.image.ARGBChannel: int toInt()>();

        i29 = $i28 * 8;

        $r16 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.ARGBChannel yChannel>;

        $i30 = virtualinvoke $r16.<org.apache.batik.ext.awt.image.ARGBChannel: int toInt()>();

        i31 = $i30 * 8;

        i107 = i14;

        i108 = i23;

        $f0 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: float scaleX>;

        $d0 = (double) $f0;

        $d1 = $d0 / 255.0;

        $d2 = $d1 * 32768.0;

        $d3 = $d2 + 0.5;

        i32 = (int) $d3;

        $d4 = (double) i32;

        $d5 = -127.5 * $d4;

        $d6 = $d5 - 0.5;

        i33 = (int) $d6;

        $f1 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: float scaleY>;

        $d7 = (double) $f1;

        $d8 = $d7 / 255.0;

        $d9 = $d8 * 32768.0;

        $d10 = $d9 + 0.5;

        i34 = (int) $d10;

        $d11 = (double) i34;

        $d12 = -127.5 * $d11;

        $d13 = $d12 - 0.5;

        i35 = (int) $d13;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i36 = r17[0];

        i109 = $i36 - 1;

        $i37 = r18[0];

        i110 = $i37 - 1;

        r51 = null;

        i111 = i3;

        goto label10;

     label01:
        i112 = i2;

        goto label09;

     label02:
        i38 = r14[i108];

        $i39 = i38 >> i29;

        $i40 = $i39 & 255;

        $i41 = i32 * $i40;

        i42 = $i41 + i33;

        $i43 = i38 >> i31;

        $i44 = $i43 & 255;

        $i45 = i34 * $i44;

        i46 = $i45 + i35;

        $i47 = i42 >> 15;

        i48 = i112 + $i47;

        $i49 = i46 >> 15;

        i50 = i111 + $i49;

        $i51 = r17[i48];

        if i109 != $i51 goto label03;

        $i104 = r18[i50];

        if i110 == $i104 goto label04;

     label03:
        $i105 = r17[i48];

        i109 = $i105;

        $i106 = r18[i50];

        i110 = $i106;

        $r19 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r20 = interfaceinvoke $r19.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i105, $i106);

        $r21 = virtualinvoke $r20.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r22 = (java.awt.image.DataBufferInt) $r21;

        $r23 = virtualinvoke $r22.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r51 = $r23[0];

     label04:
        $i113 = r24[i48];

        $i114 = r25[i50];

        $i115 = $i113 + $i114;

        $i116 = r51[$i115];

        $i117 = i48 + 1;

        $i118 = r17[$i117];

        $i119 = i50 + 1;

        $i120 = r18[$i119];

        if i110 != $i120 goto label06;

        if i109 != $i118 goto label05;

        $i91 = i48 + 1;

        $i93 = r24[$i91];

        $i92 = r25[i50];

        $i94 = $i93 + $i92;

        i121 = r51[$i94];

        $i97 = r24[i48];

        $i95 = i50 + 1;

        $i96 = r25[$i95];

        $i98 = $i97 + $i96;

        i122 = r51[$i98];

        $i99 = i48 + 1;

        $i102 = r24[$i99];

        $i100 = i50 + 1;

        $i101 = r25[$i100];

        $i103 = $i102 + $i101;

        i123 = r51[$i103];

        goto label08;

     label05:
        $i80 = r24[i48];

        $i78 = i50 + 1;

        $i79 = r25[$i78];

        $i81 = $i80 + $i79;

        i122 = r51[$i81];

        $r46 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r47 = interfaceinvoke $r46.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i118, i110);

        $r48 = virtualinvoke $r47.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r49 = (java.awt.image.DataBufferInt) $r48;

        $r50 = virtualinvoke $r49.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r51 = $r50[0];

        $i82 = i48 + 1;

        $i84 = r24[$i82];

        $i83 = r25[i50];

        $i85 = $i84 + $i83;

        i121 = r51[$i85];

        $i86 = i48 + 1;

        $i89 = r24[$i86];

        $i87 = i50 + 1;

        $i88 = r25[$i87];

        $i90 = $i89 + $i88;

        i123 = r51[$i90];

        i109 = $i118;

        goto label08;

     label06:
        if i109 != $i118 goto label07;

        $i65 = i48 + 1;

        $i67 = r24[$i65];

        $i66 = r25[i50];

        $i68 = $i67 + $i66;

        i121 = r51[$i68];

        $r41 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r42 = interfaceinvoke $r41.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>(i109, $i120);

        $r43 = virtualinvoke $r42.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r44 = (java.awt.image.DataBufferInt) $r43;

        $r45 = virtualinvoke $r44.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r51 = $r45[0];

        $i71 = r24[i48];

        $i69 = i50 + 1;

        $i70 = r25[$i69];

        $i72 = $i71 + $i70;

        i122 = r51[$i72];

        $i73 = i48 + 1;

        $i76 = r24[$i73];

        $i74 = i50 + 1;

        $i75 = r25[$i74];

        $i77 = $i76 + $i75;

        i123 = r51[$i77];

        i110 = $i120;

        goto label08;

     label07:
        $r26 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r27 = interfaceinvoke $r26.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>(i109, $i120);

        $r28 = virtualinvoke $r27.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r29 = (java.awt.image.DataBufferInt) $r28;

        $r30 = virtualinvoke $r29.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r52 = $r30[0];

        $i54 = r24[i48];

        $i52 = i50 + 1;

        $i53 = r25[$i52];

        $i55 = $i54 + $i53;

        i122 = r52[$i55];

        $r31 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r32 = interfaceinvoke $r31.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i118, $i120);

        $r33 = virtualinvoke $r32.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r34 = (java.awt.image.DataBufferInt) $r33;

        $r35 = virtualinvoke $r34.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r53 = $r35[0];

        $i56 = i48 + 1;

        $i59 = r24[$i56];

        $i57 = i50 + 1;

        $i58 = r25[$i57];

        $i60 = $i59 + $i58;

        i123 = r53[$i60];

        $r36 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r37 = interfaceinvoke $r36.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i118, i110);

        $r38 = virtualinvoke $r37.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r39 = (java.awt.image.DataBufferInt) $r38;

        $r40 = virtualinvoke $r39.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r51 = $r40[0];

        $i61 = i48 + 1;

        $i63 = r24[$i61];

        $i62 = r25[i50];

        $i64 = $i63 + $i62;

        i121 = r51[$i64];

        i109 = $i118;

     label08:
        $i124 = i42 & 32767;

        $i125 = i46 & 32767;

        $i126 = $i116 >>> 16;

        $i234 = (int) 65280;

        $i127 = $i126 & $i234;

        $i128 = i121 >>> 16;

        $i236 = (int) 65280;

        $i129 = $i128 & $i236;

        $i130 = $i129 - $i127;

        $i131 = $i130 * $i124;

        $i132 = $i131 + 16384;

        $i133 = $i132 >> 15;

        $i134 = $i127 + $i133;

        $i238 = (int) 65535;

        $i135 = $i134 & $i238;

        $i136 = i122 >>> 16;

        $i240 = (int) 65280;

        $i137 = $i136 & $i240;

        $i138 = i123 >>> 16;

        $i242 = (int) 65280;

        $i139 = $i138 & $i242;

        $i140 = $i139 - $i137;

        $i141 = $i140 * $i124;

        $i142 = $i141 + 16384;

        $i143 = $i142 >> 15;

        $i144 = $i137 + $i143;

        $i244 = (int) 65535;

        $i145 = $i144 & $i244;

        $i146 = $i135 << 15;

        $i147 = $i145 - $i135;

        $i148 = $i147 * $i125;

        $i149 = $i146 + $i148;

        $i150 = $i149 + 4194304;

        $i151 = $i150 & 2139095040;

        $i152 = $i151 << 1;

        $i153 = $i116 >> 8;

        $i246 = (int) 65280;

        $i154 = $i153 & $i246;

        $i155 = i121 >> 8;

        $i248 = (int) 65280;

        $i156 = $i155 & $i248;

        $i157 = $i156 - $i154;

        $i158 = $i157 * $i124;

        $i159 = $i158 + 16384;

        $i160 = $i159 >> 15;

        $i161 = $i154 + $i160;

        $i250 = (int) 65535;

        $i162 = $i161 & $i250;

        $i163 = i122 >> 8;

        $i252 = (int) 65280;

        $i164 = $i163 & $i252;

        $i165 = i123 >> 8;

        $i254 = (int) 65280;

        $i166 = $i165 & $i254;

        $i167 = $i166 - $i164;

        $i168 = $i167 * $i124;

        $i169 = $i168 + 16384;

        $i170 = $i169 >> 15;

        $i171 = $i164 + $i170;

        $i256 = (int) 65535;

        $i172 = $i171 & $i256;

        $i173 = $i162 << 15;

        $i174 = $i172 - $i162;

        $i175 = $i174 * $i125;

        $i176 = $i173 + $i175;

        $i177 = $i176 + 4194304;

        $i178 = $i177 & 2139095040;

        $i179 = $i178 >>> 7;

        $i180 = $i152 | $i179;

        $i258 = (int) 65280;

        $i181 = $i116 & $i258;

        $i260 = (int) 65280;

        $i182 = i121 & $i260;

        $i183 = $i182 - $i181;

        $i184 = $i183 * $i124;

        $i185 = $i184 + 16384;

        $i186 = $i185 >> 15;

        $i187 = $i181 + $i186;

        $i262 = (int) 65535;

        $i188 = $i187 & $i262;

        $i264 = (int) 65280;

        $i189 = i122 & $i264;

        $i266 = (int) 65280;

        $i190 = i123 & $i266;

        $i191 = $i190 - $i189;

        $i192 = $i191 * $i124;

        $i193 = $i192 + 16384;

        $i194 = $i193 >> 15;

        $i195 = $i189 + $i194;

        $i268 = (int) 65535;

        $i196 = $i195 & $i268;

        $i197 = $i188 << 15;

        $i198 = $i196 - $i188;

        $i199 = $i198 * $i125;

        $i200 = $i197 + $i199;

        $i201 = $i200 + 4194304;

        $i202 = $i201 & 2139095040;

        $i203 = $i202 >>> 15;

        $i204 = $i180 | $i203;

        $i205 = $i116 << 8;

        $i270 = (int) 65280;

        $i206 = $i205 & $i270;

        $i207 = i121 << 8;

        $i272 = (int) 65280;

        $i208 = $i207 & $i272;

        $i209 = $i208 - $i206;

        $i210 = $i209 * $i124;

        $i211 = $i210 + 16384;

        $i212 = $i211 >> 15;

        $i213 = $i206 + $i212;

        $i274 = (int) 65535;

        $i214 = $i213 & $i274;

        $i215 = i122 << 8;

        $i276 = (int) 65280;

        $i216 = $i215 & $i276;

        $i217 = i123 << 8;

        $i278 = (int) 65280;

        $i218 = $i217 & $i278;

        $i219 = $i218 - $i216;

        $i220 = $i219 * $i124;

        $i221 = $i220 + 16384;

        $i222 = $i221 >> 15;

        $i223 = $i216 + $i222;

        $i280 = (int) 65535;

        $i224 = $i223 & $i280;

        $i225 = $i214 << 15;

        $i226 = $i224 - $i214;

        $i227 = $i226 * $i125;

        $i228 = $i225 + $i227;

        $i229 = $i228 + 4194304;

        $i230 = $i229 & 2139095040;

        $i231 = $i230 >>> 23;

        $i232 = $i204 | $i231;

        r12[i107] = $i232;

        i112 = i112 + 1;

        i107 = i107 + 1;

        i108 = i108 + 1;

     label09:
        if i112 < i4 goto label02;

        i107 = i107 + i26;

        i108 = i108 + i27;

        i111 = i111 + 1;

     label10:
        if i111 < i5 goto label01;

        return;
    }

    public void filterBLPre(java.awt.image.Raster, java.awt.image.WritableRaster, int[], int[], int[], int[])
    {
        java.awt.image.SampleModel $r7, $r9;
        java.awt.image.DataBufferInt r3, r6, $r22, $r29, $r34, $r39, $r44, $r49;
        org.apache.batik.ext.awt.image.ARGBChannel $r15, $r16;
        int[] r12, r14, r17, r18, r24, r25, r51, r52, r53;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, $i24, $i25, i26, i27, $i28, i29, $i30, i31, i32, i33, i34, i35, $i36, $i37, i38, $i39, $i40, $i41, i42, $i43, $i44, $i45, i46, $i47, i48, $i49, i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, i107, i108, i109, i110, i111, i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, i121, i122, i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i286, $i288, $i290, $i292, $i294, $i296, $i298, $i300, $i302, $i304, $i306, $i308;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed r1;
        java.awt.image.SinglePixelPackedSampleModel r8, r10;
        java.awt.image.DataBuffer $r2, $r5, $r21, $r28, $r33, $r38, $r43, $r48;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.awt.image.Raster r4, $r20, $r27, $r32, $r37, $r42, $r47;
        java.awt.image.WritableRaster r0;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r19, $r26, $r31, $r36, $r41, $r46;
        int[][] $r11, $r13, $r23, $r30, $r35, $r40, $r45, $r50;
        float $f0, $f1;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed;

        r4 := @parameter0: java.awt.image.Raster;

        r0 := @parameter1: java.awt.image.WritableRaster;

        r17 := @parameter2: int[];

        r24 := @parameter3: int[];

        r18 := @parameter4: int[];

        r25 := @parameter5: int[];

        $i0 = virtualinvoke r0.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.Raster: int getHeight()>();

        i2 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffX>;

        i3 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffY>;

        i4 = i2 + $i0;

        i5 = i3 + $i1;

        $r2 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r3 = (java.awt.image.DataBufferInt) $r2;

        $r5 = virtualinvoke r4.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r6 = (java.awt.image.DataBufferInt) $r5;

        $r7 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r8 = (java.awt.image.SinglePixelPackedSampleModel) $r7;

        $i6 = virtualinvoke r3.<java.awt.image.DataBuffer: int getOffset()>();

        $i7 = virtualinvoke r0.<java.awt.image.Raster: int getMinX()>();

        $i8 = virtualinvoke r0.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<java.awt.image.Raster: int getMinY()>();

        $i11 = virtualinvoke r0.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i12 = $i10 - $i11;

        $i13 = virtualinvoke r8.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i9, $i12);

        i14 = $i6 + $i13;

        $r9 = virtualinvoke r4.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r10 = (java.awt.image.SinglePixelPackedSampleModel) $r9;

        $i15 = virtualinvoke r6.<java.awt.image.DataBuffer: int getOffset()>();

        $i16 = virtualinvoke r0.<java.awt.image.Raster: int getMinX()>();

        $i17 = virtualinvoke r4.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i18 = $i16 - $i17;

        $i19 = virtualinvoke r0.<java.awt.image.Raster: int getMinY()>();

        $i20 = virtualinvoke r4.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i21 = $i19 - $i20;

        $i22 = virtualinvoke r10.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i18, $i21);

        i23 = $i15 + $i22;

        $i24 = virtualinvoke r8.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $i25 = virtualinvoke r10.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        i26 = $i24 - $i0;

        i27 = $i25 - $i0;

        $r11 = virtualinvoke r3.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r12 = $r11[0];

        $r13 = virtualinvoke r6.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r14 = $r13[0];

        $r15 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.ARGBChannel xChannel>;

        $i28 = virtualinvoke $r15.<org.apache.batik.ext.awt.image.ARGBChannel: int toInt()>();

        i29 = $i28 * 8;

        $r16 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.ARGBChannel yChannel>;

        $i30 = virtualinvoke $r16.<org.apache.batik.ext.awt.image.ARGBChannel: int toInt()>();

        i31 = $i30 * 8;

        i107 = i14;

        i108 = i23;

        $f0 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: float scaleX>;

        $d0 = (double) $f0;

        $d1 = $d0 / 255.0;

        $d2 = $d1 * 32768.0;

        $d3 = $d2 + 0.5;

        i32 = (int) $d3;

        $d4 = (double) i32;

        $d5 = -127.5 * $d4;

        $d6 = $d5 - 0.5;

        i33 = (int) $d6;

        $f1 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: float scaleY>;

        $d7 = (double) $f1;

        $d8 = $d7 / 255.0;

        $d9 = $d8 * 32768.0;

        $d10 = $d9 + 0.5;

        i34 = (int) $d10;

        $d11 = (double) i34;

        $d12 = -127.5 * $d11;

        $d13 = $d12 - 0.5;

        i35 = (int) $d13;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i36 = r17[0];

        i109 = $i36 - 1;

        $i37 = r18[0];

        i110 = $i37 - 1;

        r51 = null;

        i111 = i3;

        goto label10;

     label01:
        i112 = i2;

        goto label09;

     label02:
        i38 = r14[i108];

        $i39 = i38 >> i29;

        $i40 = $i39 & 255;

        $i41 = i32 * $i40;

        i42 = $i41 + i33;

        $i43 = i38 >> i31;

        $i44 = $i43 & 255;

        $i45 = i34 * $i44;

        i46 = $i45 + i35;

        $i47 = i42 >> 15;

        i48 = i112 + $i47;

        $i49 = i46 >> 15;

        i50 = i111 + $i49;

        $i51 = r17[i48];

        if i109 != $i51 goto label03;

        $i104 = r18[i50];

        if i110 == $i104 goto label04;

     label03:
        $i105 = r17[i48];

        i109 = $i105;

        $i106 = r18[i50];

        i110 = $i106;

        $r19 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r20 = interfaceinvoke $r19.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i105, $i106);

        $r21 = virtualinvoke $r20.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r22 = (java.awt.image.DataBufferInt) $r21;

        $r23 = virtualinvoke $r22.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r51 = $r23[0];

     label04:
        $i113 = r24[i48];

        $i114 = r25[i50];

        $i115 = $i113 + $i114;

        $i116 = r51[$i115];

        $i117 = i48 + 1;

        $i118 = r17[$i117];

        $i119 = i50 + 1;

        $i120 = r18[$i119];

        if i110 != $i120 goto label06;

        if i109 != $i118 goto label05;

        $i91 = i48 + 1;

        $i93 = r24[$i91];

        $i92 = r25[i50];

        $i94 = $i93 + $i92;

        i121 = r51[$i94];

        $i97 = r24[i48];

        $i95 = i50 + 1;

        $i96 = r25[$i95];

        $i98 = $i97 + $i96;

        i122 = r51[$i98];

        $i99 = i48 + 1;

        $i102 = r24[$i99];

        $i100 = i50 + 1;

        $i101 = r25[$i100];

        $i103 = $i102 + $i101;

        i123 = r51[$i103];

        goto label08;

     label05:
        $i80 = r24[i48];

        $i78 = i50 + 1;

        $i79 = r25[$i78];

        $i81 = $i80 + $i79;

        i122 = r51[$i81];

        $r46 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r47 = interfaceinvoke $r46.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i118, i110);

        $r48 = virtualinvoke $r47.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r49 = (java.awt.image.DataBufferInt) $r48;

        $r50 = virtualinvoke $r49.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r51 = $r50[0];

        $i82 = i48 + 1;

        $i84 = r24[$i82];

        $i83 = r25[i50];

        $i85 = $i84 + $i83;

        i121 = r51[$i85];

        $i86 = i48 + 1;

        $i89 = r24[$i86];

        $i87 = i50 + 1;

        $i88 = r25[$i87];

        $i90 = $i89 + $i88;

        i123 = r51[$i90];

        i109 = $i118;

        goto label08;

     label06:
        if i109 != $i118 goto label07;

        $i65 = i48 + 1;

        $i67 = r24[$i65];

        $i66 = r25[i50];

        $i68 = $i67 + $i66;

        i121 = r51[$i68];

        $r41 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r42 = interfaceinvoke $r41.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>(i109, $i120);

        $r43 = virtualinvoke $r42.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r44 = (java.awt.image.DataBufferInt) $r43;

        $r45 = virtualinvoke $r44.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r51 = $r45[0];

        $i71 = r24[i48];

        $i69 = i50 + 1;

        $i70 = r25[$i69];

        $i72 = $i71 + $i70;

        i122 = r51[$i72];

        $i73 = i48 + 1;

        $i76 = r24[$i73];

        $i74 = i50 + 1;

        $i75 = r25[$i74];

        $i77 = $i76 + $i75;

        i123 = r51[$i77];

        i110 = $i120;

        goto label08;

     label07:
        $r26 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r27 = interfaceinvoke $r26.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>(i109, $i120);

        $r28 = virtualinvoke $r27.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r29 = (java.awt.image.DataBufferInt) $r28;

        $r30 = virtualinvoke $r29.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r52 = $r30[0];

        $i54 = r24[i48];

        $i52 = i50 + 1;

        $i53 = r25[$i52];

        $i55 = $i54 + $i53;

        i122 = r52[$i55];

        $r31 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r32 = interfaceinvoke $r31.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i118, $i120);

        $r33 = virtualinvoke $r32.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r34 = (java.awt.image.DataBufferInt) $r33;

        $r35 = virtualinvoke $r34.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r53 = $r35[0];

        $i56 = i48 + 1;

        $i59 = r24[$i56];

        $i57 = i50 + 1;

        $i58 = r25[$i57];

        $i60 = $i59 + $i58;

        i123 = r53[$i60];

        $r36 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r37 = interfaceinvoke $r36.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i118, i110);

        $r38 = virtualinvoke $r37.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r39 = (java.awt.image.DataBufferInt) $r38;

        $r40 = virtualinvoke $r39.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r51 = $r40[0];

        $i61 = i48 + 1;

        $i63 = r24[$i61];

        $i62 = r25[i50];

        $i64 = $i63 + $i62;

        i121 = r51[$i64];

        i109 = $i118;

     label08:
        $i124 = i42 & 32767;

        $i125 = i46 & 32767;

        $i126 = $i116 >>> 16;

        $i286 = (int) 65280;

        $i127 = $i126 & $i286;

        $i128 = i121 >>> 16;

        $i288 = (int) 65280;

        $i129 = $i128 & $i288;

        $i130 = $i129 - $i127;

        $i131 = $i130 * $i124;

        $i132 = $i131 + 16384;

        $i133 = $i132 >> 15;

        $i134 = $i127 + $i133;

        $i290 = (int) 65535;

        $i135 = $i134 & $i290;

        $i136 = $i127 >> 8;

        $i137 = $i136 * 65793;

        $i138 = $i137 + 128;

        $i139 = $i138 >> 8;

        $i140 = $i129 >> 8;

        $i141 = $i140 * 65793;

        $i142 = $i141 + 128;

        $i143 = $i142 >> 8;

        $i144 = i122 >>> 16;

        $i292 = (int) 65280;

        $i145 = $i144 & $i292;

        $i146 = i123 >>> 16;

        $i294 = (int) 65280;

        $i147 = $i146 & $i294;

        $i148 = $i147 - $i145;

        $i149 = $i148 * $i124;

        $i150 = $i149 + 16384;

        $i151 = $i150 >> 15;

        $i152 = $i145 + $i151;

        $i296 = (int) 65535;

        $i153 = $i152 & $i296;

        $i154 = $i145 >> 8;

        $i155 = $i154 * 65793;

        $i156 = $i155 + 128;

        $i157 = $i156 >> 8;

        $i158 = $i147 >> 8;

        $i159 = $i158 * 65793;

        $i160 = $i159 + 128;

        $i161 = $i160 >> 8;

        $i162 = $i135 << 15;

        $i163 = $i153 - $i135;

        $i164 = $i163 * $i125;

        $i165 = $i162 + $i164;

        $i166 = $i165 + 4194304;

        $i167 = $i166 & 2139095040;

        $i168 = $i167 << 1;

        $i169 = $i116 >> 16;

        $i170 = $i169 & 255;

        $i171 = $i170 * $i139;

        $i172 = $i171 + 128;

        $i173 = $i172 >> 8;

        $i174 = i121 >> 16;

        $i175 = $i174 & 255;

        $i176 = $i175 * $i143;

        $i177 = $i176 + 128;

        $i178 = $i177 >> 8;

        $i179 = $i178 - $i173;

        $i180 = $i179 * $i124;

        $i181 = $i180 + 16384;

        $i182 = $i181 >> 15;

        $i183 = $i173 + $i182;

        $i298 = (int) 65535;

        $i184 = $i183 & $i298;

        $i185 = i122 >> 16;

        $i186 = $i185 & 255;

        $i187 = $i186 * $i157;

        $i188 = $i187 + 128;

        $i189 = $i188 >> 8;

        $i190 = i123 >> 16;

        $i191 = $i190 & 255;

        $i192 = $i191 * $i161;

        $i193 = $i192 + 128;

        $i194 = $i193 >> 8;

        $i195 = $i194 - $i189;

        $i196 = $i195 * $i124;

        $i197 = $i196 + 16384;

        $i198 = $i197 >> 15;

        $i199 = $i189 + $i198;

        $i300 = (int) 65535;

        $i200 = $i199 & $i300;

        $i201 = $i184 << 15;

        $i202 = $i200 - $i184;

        $i203 = $i202 * $i125;

        $i204 = $i201 + $i203;

        $i205 = $i204 + 4194304;

        $i206 = $i205 & 2139095040;

        $i207 = $i206 >>> 7;

        $i208 = $i168 | $i207;

        $i209 = $i116 >> 8;

        $i210 = $i209 & 255;

        $i211 = $i210 * $i139;

        $i212 = $i211 + 128;

        $i213 = $i212 >> 8;

        $i214 = i121 >> 8;

        $i215 = $i214 & 255;

        $i216 = $i215 * $i143;

        $i217 = $i216 + 128;

        $i218 = $i217 >> 8;

        $i219 = $i218 - $i213;

        $i220 = $i219 * $i124;

        $i221 = $i220 + 16384;

        $i222 = $i221 >> 15;

        $i223 = $i213 + $i222;

        $i302 = (int) 65535;

        $i224 = $i223 & $i302;

        $i225 = i122 >> 8;

        $i226 = $i225 & 255;

        $i227 = $i226 * $i157;

        $i228 = $i227 + 128;

        $i229 = $i228 >> 8;

        $i230 = i123 >> 8;

        $i231 = $i230 & 255;

        $i232 = $i231 * $i161;

        $i233 = $i232 + 128;

        $i234 = $i233 >> 8;

        $i235 = $i234 - $i229;

        $i236 = $i235 * $i124;

        $i237 = $i236 + 16384;

        $i238 = $i237 >> 15;

        $i239 = $i229 + $i238;

        $i304 = (int) 65535;

        $i240 = $i239 & $i304;

        $i241 = $i224 << 15;

        $i242 = $i240 - $i224;

        $i243 = $i242 * $i125;

        $i244 = $i241 + $i243;

        $i245 = $i244 + 4194304;

        $i246 = $i245 & 2139095040;

        $i247 = $i246 >>> 15;

        $i248 = $i208 | $i247;

        $i249 = $i116 & 255;

        $i250 = $i249 * $i139;

        $i251 = $i250 + 128;

        $i252 = $i251 >> 8;

        $i253 = i121 & 255;

        $i254 = $i253 * $i143;

        $i255 = $i254 + 128;

        $i256 = $i255 >> 8;

        $i257 = $i256 - $i252;

        $i258 = $i257 * $i124;

        $i259 = $i258 + 16384;

        $i260 = $i259 >> 15;

        $i261 = $i252 + $i260;

        $i306 = (int) 65535;

        $i262 = $i261 & $i306;

        $i263 = i122 & 255;

        $i264 = $i263 * $i157;

        $i265 = $i264 + 128;

        $i266 = $i265 >> 8;

        $i267 = i123 & 255;

        $i268 = $i267 * $i161;

        $i269 = $i268 + 128;

        $i270 = $i269 >> 8;

        $i271 = $i270 - $i266;

        $i272 = $i271 * $i124;

        $i273 = $i272 + 16384;

        $i274 = $i273 >> 15;

        $i275 = $i266 + $i274;

        $i308 = (int) 65535;

        $i276 = $i275 & $i308;

        $i277 = $i262 << 15;

        $i278 = $i276 - $i262;

        $i279 = $i278 * $i125;

        $i280 = $i277 + $i279;

        $i281 = $i280 + 4194304;

        $i282 = $i281 & 2139095040;

        $i283 = $i282 >>> 23;

        $i284 = $i248 | $i283;

        r12[i107] = $i284;

        i112 = i112 + 1;

        i107 = i107 + 1;

        i108 = i108 + 1;

     label09:
        if i112 < i4 goto label02;

        i107 = i107 + i26;

        i108 = i108 + i27;

        i111 = i111 + 1;

     label10:
        if i111 < i5 goto label01;

        return;
    }

    public void filterNN(java.awt.image.Raster, java.awt.image.WritableRaster, int[], int[], int[], int[])
    {
        java.awt.image.SampleModel $r7, $r9;
        org.apache.batik.ext.awt.image.rendered.DisplacementMapRed r1;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r19;
        java.awt.image.DataBufferInt r3, r6, $r22;
        java.awt.image.Raster r4, $r20;
        java.awt.image.SinglePixelPackedSampleModel r8, r10;
        org.apache.batik.ext.awt.image.ARGBChannel $r15, $r16;
        int[][] $r11, $r13, $r23;
        int[] r12, r14, r17, r18, r24, r25, r26;
        float $f0, $f1;
        java.awt.image.DataBuffer $r2, $r5, $r21;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, $i24, $i25, i26, i27, $i28, i29, $i30, i31, i32, i33, $i34, i35, $i36, i37, $i38, $i39, i40, $i41, $i42, $i43, i44, $i45, $i46, $i47, i48, $i49, i50, $i51, i52, $i53, $i54, $i55, $i56, i57, i58, i59, i60, i61, i62, $i63, $i64, $i65, $i66;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.awt.image.WritableRaster r0;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.DisplacementMapRed;

        r4 := @parameter0: java.awt.image.Raster;

        r0 := @parameter1: java.awt.image.WritableRaster;

        r17 := @parameter2: int[];

        r24 := @parameter3: int[];

        r18 := @parameter4: int[];

        r25 := @parameter5: int[];

        $i0 = virtualinvoke r0.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.Raster: int getHeight()>();

        i2 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffX>;

        i3 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: int maxOffY>;

        i4 = i2 + $i0;

        i5 = i3 + $i1;

        $r2 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r3 = (java.awt.image.DataBufferInt) $r2;

        $r5 = virtualinvoke r4.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r6 = (java.awt.image.DataBufferInt) $r5;

        $r7 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r8 = (java.awt.image.SinglePixelPackedSampleModel) $r7;

        $i6 = virtualinvoke r3.<java.awt.image.DataBuffer: int getOffset()>();

        $i7 = virtualinvoke r0.<java.awt.image.Raster: int getMinX()>();

        $i8 = virtualinvoke r0.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<java.awt.image.Raster: int getMinY()>();

        $i11 = virtualinvoke r0.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i12 = $i10 - $i11;

        $i13 = virtualinvoke r8.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i9, $i12);

        i14 = $i6 + $i13;

        $r9 = virtualinvoke r4.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r10 = (java.awt.image.SinglePixelPackedSampleModel) $r9;

        $i15 = virtualinvoke r6.<java.awt.image.DataBuffer: int getOffset()>();

        $i16 = virtualinvoke r4.<java.awt.image.Raster: int getMinX()>();

        $i17 = virtualinvoke r4.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i18 = $i16 - $i17;

        $i19 = virtualinvoke r4.<java.awt.image.Raster: int getMinY()>();

        $i20 = virtualinvoke r4.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i21 = $i19 - $i20;

        $i22 = virtualinvoke r10.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i18, $i21);

        i23 = $i15 + $i22;

        $i24 = virtualinvoke r8.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $i25 = virtualinvoke r10.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        i26 = $i24 - $i0;

        i27 = $i25 - $i0;

        $r11 = virtualinvoke r3.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r12 = $r11[0];

        $r13 = virtualinvoke r6.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r14 = $r13[0];

        $r15 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.ARGBChannel xChannel>;

        $i28 = virtualinvoke $r15.<org.apache.batik.ext.awt.image.ARGBChannel: int toInt()>();

        i29 = $i28 * 8;

        $r16 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.ARGBChannel yChannel>;

        $i30 = virtualinvoke $r16.<org.apache.batik.ext.awt.image.ARGBChannel: int toInt()>();

        i31 = $i30 * 8;

        $f0 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: float scaleX>;

        $d0 = (double) $f0;

        $d1 = $d0 / 255.0;

        $d2 = $d1 * 32768.0;

        $d3 = $d2 + 0.5;

        i32 = (int) $d3;

        $f1 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: float scaleY>;

        $d4 = (double) $f1;

        $d5 = $d4 / 255.0;

        $d6 = $d5 * 32768.0;

        $d7 = $d6 + 0.5;

        i33 = (int) $d7;

        $d8 = (double) i32;

        $d9 = -127.5 * $d8;

        $d10 = $d9 - 0.5;

        $i34 = (int) $d10;

        i35 = $i34 + 16384;

        $d11 = (double) i33;

        $d12 = -127.5 * $d11;

        $d13 = $d12 - 0.5;

        $i36 = (int) $d13;

        i37 = $i36 + 16384;

        i57 = i14;

        i58 = i23;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        i59 = i3;

        $i38 = r17[0];

        i60 = $i38 - 1;

        $i39 = r18[0];

        i61 = $i39 - 1;

        r26 = null;

        goto label6;

     label1:
        i62 = i2;

        goto label5;

     label2:
        i40 = r14[i58];

        $i41 = i40 >> i29;

        $i42 = $i41 & 255;

        $i43 = i32 * $i42;

        i44 = $i43 + i35;

        $i45 = i40 >> i31;

        $i46 = $i45 & 255;

        $i47 = i33 * $i46;

        i48 = $i47 + i37;

        $i49 = i44 >> 15;

        i50 = i62 + $i49;

        $i51 = i48 >> 15;

        i52 = i59 + $i51;

        $i53 = r17[i50];

        if i60 != $i53 goto label3;

        $i54 = r18[i52];

        if i61 == $i54 goto label4;

     label3:
        $i55 = r17[i50];

        i60 = $i55;

        $i56 = r18[i52];

        i61 = $i56;

        $r19 = r1.<org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: org.apache.batik.ext.awt.image.rendered.CachableRed image>;

        $r20 = interfaceinvoke $r19.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>($i55, $i56);

        $r21 = virtualinvoke $r20.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r22 = (java.awt.image.DataBufferInt) $r21;

        $r23 = virtualinvoke $r22.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r26 = $r23[0];

     label4:
        $i63 = r24[i50];

        $i64 = r25[i52];

        $i65 = $i63 + $i64;

        $i66 = r26[$i65];

        r12[i57] = $i66;

        i57 = i57 + 1;

        i58 = i58 + 1;

        i62 = i62 + 1;

     label5:
        if i62 < i4 goto label2;

        i57 = i57 + i26;

        i58 = i58 + i27;

        i59 = i59 + 1;

     label6:
        if i59 < i5 goto label1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: boolean USE_NN> = 0;

        <org.apache.batik.ext.awt.image.rendered.DisplacementMapRed: boolean TIME> = 0;

        return;
    }
}
