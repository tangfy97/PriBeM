public final class com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl extends com.sun.xml.bind.v2.runtime.JaxBeanInfo implements com.sun.xml.bind.v2.runtime.AttributeAccessor
{
    public final com.sun.xml.bind.v2.runtime.property.Property[] properties;
    private com.sun.xml.bind.v2.runtime.property.Property idProperty;
    private com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader;
    private com.sun.xml.bind.v2.runtime.unmarshaller.Loader loaderWithTypeSubst;
    private com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo ci;
    private final com.sun.xml.bind.v2.runtime.reflect.Accessor inheritedAttWildcard;
    private final com.sun.xml.bind.v2.runtime.Transducer xducer;
    public final com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz;
    private final com.sun.xml.bind.v2.runtime.reflect.Accessor xmlLocatorField;
    private final com.sun.xml.bind.v2.runtime.Name tagName;
    private boolean retainPropertyInfo;
    private com.sun.xml.bind.v2.runtime.property.AttributeProperty[] attributeProperties;
    private com.sun.xml.bind.v2.runtime.property.Property[] uriProperties;
    private final java.lang.reflect.Method factoryMethod;
    private static final com.sun.xml.bind.v2.runtime.property.AttributeProperty[] EMPTY_PROPERTIES;
    private static final java.util.logging.Logger logger;

    void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo)
    {
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0, $r11, $r12, $r23, $r25;
        com.sun.xml.bind.v2.runtime.NameBuilder $r14;
        com.sun.xml.bind.v2.runtime.property.Property $r19;
        java.lang.SecurityException $r31;
        java.lang.reflect.Method $r8, $r9, $r27, $r29, $r30, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        java.util.logging.Logger $r33;
        java.util.List $r41;
        java.lang.StringBuilder $r32, $r35, $r37, $r38;
        javax.xml.namespace.QName $r5, $r15;
        com.sun.xml.bind.v2.runtime.Transducer $r7;
        com.sun.xml.bind.v2.model.core.ID $r20, $r21;
        com.sun.xml.bind.v2.runtime.Name $r16;
        java.util.logging.Level $r34;
        com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo r18;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r39;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        com.sun.xml.bind.v2.runtime.property.Property[] $r22, $r42;
        java.util.Iterator $r43;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r6, $r13, $r24, $r26;
        java.lang.Object $r3, $r17;
        java.lang.Class $r4, $r28;
        com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo r2, $r10, $r40;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo;

        $r3 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: java.lang.Object getClazz()>();

        $r4 = (java.lang.Class) $r3;

        $r5 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: javax.xml.namespace.QName getTypeName()>();

        $z0 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: boolean isElement()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo,java.lang.Class,javax.xml.namespace.QName,boolean,boolean,boolean)>(r1, r2, $r4, $r5, $z0, 0, 1);

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean retainPropertyInfo> = 0;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo ci> = r2;

        $r6 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAttributeWildcard()>();

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor inheritedAttWildcard> = $r6;

        $r7 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: com.sun.xml.bind.v2.runtime.Transducer getTransducer()>();

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.Transducer xducer> = $r7;

        $r8 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: java.lang.reflect.Method getFactoryMethod()>();

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.reflect.Method factoryMethod> = $r8;

        $z1 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean retainPropertyInfo>;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean retainPropertyInfo> = $z1;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.reflect.Method factoryMethod>;

        if $r9 == null goto label04;

        $r27 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.reflect.Method factoryMethod>;

        $r28 = virtualinvoke $r27.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $i1 = virtualinvoke $r28.<java.lang.Class: int getModifiers()>();

        $z4 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z4 == 0 goto label01;

        $r30 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.reflect.Method factoryMethod>;

        $i2 = virtualinvoke $r30.<java.lang.reflect.Method: int getModifiers()>();

        $z5 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i2);

        if $z5 != 0 goto label04;

     label01:
        $r29 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.reflect.Method factoryMethod>;

        virtualinvoke $r29.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label02:
        goto label04;

     label03:
        $r31 := @caughtexception;

        $r33 = <com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.util.logging.Logger logger>;

        $r34 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to make the method of ");

        $r36 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.reflect.Method factoryMethod>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" accessible");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r34, $r39, $r31);

        throw $r31;

     label04:
        $r40 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo getBaseClass()>();

        if $r40 != null goto label05;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz> = null;

        goto label06;

     label05:
        $r10 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo getBaseClass()>();

        $r11 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo)>($r10);

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz> = $r11;

     label06:
        $r12 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        if $r12 == null goto label07;

        $r23 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        $r24 = $r23.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor xmlLocatorField>;

        if $r24 == null goto label07;

        $r25 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        $r26 = $r25.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor xmlLocatorField>;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor xmlLocatorField> = $r26;

        goto label08;

     label07:
        $r13 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getLocatorField()>();

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor xmlLocatorField> = $r13;

     label08:
        $r41 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: java.util.List getProperties()>();

        $i3 = interfaceinvoke $r41.<java.util.Collection: int size()>();

        $r42 = newarray (com.sun.xml.bind.v2.runtime.property.Property)[$i3];

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties> = $r42;

        i4 = 0;

        z6 = 1;

        $r43 = interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z7 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label11;

        $r17 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo) $r17;

        $r19 = staticinvoke <com.sun.xml.bind.v2.runtime.property.PropertyFactory: com.sun.xml.bind.v2.runtime.property.Property create(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo)>(r1, r18);

        $r20 = interfaceinvoke r18.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.model.core.ID id()>();

        $r21 = <com.sun.xml.bind.v2.model.core.ID: com.sun.xml.bind.v2.model.core.ID ID>;

        if $r20 != $r21 goto label10;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property idProperty> = $r19;

     label10:
        $r22 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        $i0 = i4;

        i4 = i4 + 1;

        $r22[$i0] = $r19;

        $z3 = interfaceinvoke r18.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: boolean elementOnlyContent()>();

        z6 = z6 & $z3;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: void checkOverrideProperties(com.sun.xml.bind.v2.runtime.property.Property)>($r19);

        goto label09;

     label11:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: void hasElementOnlyContentModel(boolean)>(z6);

        $z2 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: boolean isElement()>();

        if $z2 == 0 goto label12;

        $r14 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r15 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: javax.xml.namespace.QName getElementName()>();

        $r16 = virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)>($r15);

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.Name tagName> = $r16;

        goto label13;

     label12:
        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.Name tagName> = null;

     label13:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: void setLifecycleFlags()>();

        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
    }

    private void checkOverrideProperties(com.sun.xml.bind.v2.runtime.property.Property)
    {
        com.sun.xml.bind.v2.runtime.property.Property[] r2;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0, $r1, r7;
        int i0, i1;
        com.sun.xml.bind.v2.runtime.property.Property r3, r5;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r5 := @parameter0: com.sun.xml.bind.v2.runtime.property.Property;

        r7 = r0;

     label1:
        $r1 = r7.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        r7 = $r1;

        if $r1 == null goto label6;

        r2 = $r1.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        if r2 != null goto label2;

        goto label6;

     label2:
        i0 = lengthof r2;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r3 = r2[i1];

        if r3 == null goto label4;

        $r4 = interfaceinvoke r3.<com.sun.xml.bind.v2.runtime.property.Property: java.lang.String getFieldName()>();

        if $r4 == null goto label4;

        $r6 = interfaceinvoke r5.<com.sun.xml.bind.v2.runtime.property.Property: java.lang.String getFieldName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        interfaceinvoke r3.<com.sun.xml.bind.v2.runtime.property.Property: void setHiddenByOverride(boolean)>(1);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        goto label1;

     label6:
        return;
    }

    protected void link(com.sun.xml.bind.v2.runtime.JAXBContextImpl)
    {
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0, $r3, $r4, $r18, $r19, $r21, r24;
        com.sun.xml.bind.v2.runtime.property.AttributeProperty[] $r5, $r7, $r11, $r12;
        com.sun.istack.FinalArrayList $r22, $r23;
        com.sun.xml.bind.v2.runtime.property.Property r15, $r17, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.sun.xml.bind.v2.runtime.property.AttributeProperty $r16;
        java.lang.Object[] $r6, $r9;
        int $i0, $i1, $i2, i3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r2;
        com.sun.xml.bind.v2.runtime.property.Property[] $r1, $r8, $r10, $r13, $r14;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r2 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] uriProperties>;

        if $r1 == null goto label01;

        return;

     label01:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void link(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r2);

        $r3 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        if $r3 == null goto label02;

        $r21 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        virtualinvoke $r21.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: void link(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r2);

     label02:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>(r2, 1);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        if $r4 == null goto label04;

        $r17 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property idProperty>;

        if $r17 != null goto label03;

        $r19 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        $r20 = $r19.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property idProperty>;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property idProperty> = $r20;

     label03:
        $r18 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        $z5 = virtualinvoke $r18.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean hasElementOnlyContentModel()>();

        if $z5 != 0 goto label04;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: void hasElementOnlyContentModel(boolean)>(0);

     label04:
        $r22 = new com.sun.istack.FinalArrayList;

        specialinvoke $r22.<com.sun.istack.FinalArrayList: void <init>()>();

        $r23 = new com.sun.istack.FinalArrayList;

        specialinvoke $r23.<com.sun.istack.FinalArrayList: void <init>()>();

        r24 = r0;

     label05:
        if r24 == null goto label10;

        i3 = 0;

     label06:
        $r13 = r24.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        $i2 = lengthof $r13;

        if i3 >= $i2 goto label09;

        $r14 = r24.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        r15 = $r14[i3];

        $z3 = r15 instanceof com.sun.xml.bind.v2.runtime.property.AttributeProperty;

        if $z3 == 0 goto label07;

        $r16 = (com.sun.xml.bind.v2.runtime.property.AttributeProperty) r15;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r16);

     label07:
        $z4 = interfaceinvoke r15.<com.sun.xml.bind.v2.runtime.property.Property: boolean hasSerializeURIAction()>();

        if $z4 == 0 goto label08;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r15);

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        r24 = r24.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        goto label05;

     label10:
        $z0 = r2.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean c14nSupport>;

        if $z0 == 0 goto label11;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r22);

     label11:
        $z1 = interfaceinvoke $r22.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label12;

        $r12 = <com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.AttributeProperty[] EMPTY_PROPERTIES>;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.AttributeProperty[] attributeProperties> = $r12;

        goto label13;

     label12:
        $i0 = interfaceinvoke $r22.<java.util.List: int size()>();

        $r5 = newarray (com.sun.xml.bind.v2.runtime.property.AttributeProperty)[$i0];

        $r6 = interfaceinvoke $r22.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (com.sun.xml.bind.v2.runtime.property.AttributeProperty[]) $r6;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.AttributeProperty[] attributeProperties> = $r7;

     label13:
        $z2 = interfaceinvoke $r23.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label14;

        $r11 = <com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.AttributeProperty[] EMPTY_PROPERTIES>;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] uriProperties> = $r11;

        goto label15;

     label14:
        $i1 = interfaceinvoke $r23.<java.util.List: int size()>();

        $r8 = newarray (com.sun.xml.bind.v2.runtime.property.Property)[$i1];

        $r9 = interfaceinvoke $r23.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (com.sun.xml.bind.v2.runtime.property.Property[]) $r9;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] uriProperties> = $r10;

     label15:
        return;
    }

    public void wrapUp()
    {
        com.sun.xml.bind.v2.runtime.property.Property[] r1;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        int i0, i1;
        com.sun.xml.bind.v2.runtime.property.Property r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        interfaceinvoke r2.<com.sun.xml.bind.v2.runtime.property.Property: void wrapUp()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo ci> = null;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void wrapUp()>();

        return;
    }

    public java.lang.String getElementNamespaceURI(java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.Name $r1;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        java.lang.Object r3;
        java.lang.String $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.Name tagName>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.Name: java.lang.String nsUri>;

        return $r2;
    }

    public java.lang.String getElementLocalName(java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.Name $r1;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        java.lang.Object r3;
        java.lang.String $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.Name tagName>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.Name: java.lang.String localName>;

        return $r2;
    }

    public java.lang.Object createInstance(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r10;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r6, $r9;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r8;
        org.xml.sax.helpers.LocatorImpl $r7;
        java.lang.InstantiationException $r5;
        java.lang.Object $r3, r13;
        java.lang.Class $r4, $r11;
        java.lang.reflect.Method $r1, $r2;
        com.sun.xml.bind.api.AccessorException $r12;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r8 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.reflect.Method factoryMethod>;

        if $r1 != null goto label1;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.Class jaxbType>;

        r13 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Object create0(java.lang.Class)>($r11);

        goto label3;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.reflect.Method factoryMethod>;

        $r3 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Object create(java.lang.reflect.Method)>($r2);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.Class jaxbType>;

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isInstance(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        r13 = $r3;

        goto label3;

     label2:
        $r5 = new java.lang.InstantiationException;

        specialinvoke $r5.<java.lang.InstantiationException: void <init>(java.lang.String)>("The factory method didn\'t return a correct object");

        throw $r5;

     label3:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor xmlLocatorField>;

        if $r6 == null goto label7;

     label4:
        $r9 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor xmlLocatorField>;

        $r7 = new org.xml.sax.helpers.LocatorImpl;

        $r10 = virtualinvoke r8.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx getLocator()>();

        specialinvoke $r7.<org.xml.sax.helpers.LocatorImpl: void <init>(org.xml.sax.Locator)>($r10);

        virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.reflect.Accessor: void set(java.lang.Object,java.lang.Object)>(r13, $r7);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        virtualinvoke r8.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleError(java.lang.Exception)>($r12);

     label7:
        return r13;

        catch com.sun.xml.bind.api.AccessorException from label4 to label5 with label6;
    }

    public boolean reset(java.lang.Object, com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.property.Property[] $r6;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0, $r1, $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r4;
        int $i0, i1;
        com.sun.xml.bind.v2.runtime.property.Property r2;
        java.lang.Object r3;
        com.sun.xml.bind.api.AccessorException $r7;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        if $r1 == null goto label2;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean reset(java.lang.Object,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)>(r3, r4);

     label2:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        $i0 = lengthof $r6;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        r2 = $r6[i1];

        interfaceinvoke r2.<com.sun.xml.bind.v2.runtime.property.Property: void reset(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label3;

     label4:
        return 1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleError(java.lang.Exception)>($r7);

        return 0;

        catch com.sun.xml.bind.api.AccessorException from label1 to label4 with label5;
    }

    public java.lang.String getId(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r6;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        com.sun.xml.bind.v2.runtime.property.Property $r1, $r3;
        java.lang.Object r2;
        java.lang.String $r4;
        com.sun.xml.bind.api.AccessorException $r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r2 := @parameter0: java.lang.Object;

        r6 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property idProperty>;

        if $r1 == null goto label4;

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property idProperty>;

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.property.Property: java.lang.String getIdValue(java.lang.Object)>(r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(null, $r5);

     label4:
        return null;

        catch com.sun.xml.bind.api.AccessorException from label1 to label2 with label3;
    }

    public void serializeRoot(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.Name $r1, $r4;
        java.lang.Object[] $r7, $r11;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Messages $r8, $r12;
        java.lang.String $r9, $r13, r14;
        boolean $z0, $z1;
        java.lang.ThreadLocal $r5;
        com.sun.xml.bind.v2.runtime.XMLSerializer r2;
        java.lang.Object r3;
        java.lang.Class $r6;
        javax.xml.bind.helpers.ValidationEventImpl $r10;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r3 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.Name tagName>;

        if $r1 != null goto label3;

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r6.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlRootElement;");

        if $z1 == 0 goto label1;

        $r12 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages UNABLE_TO_MARSHAL_UNBOUND_CLASS>;

        $r11 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r11[0] = $r13;

        r14 = virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r11);

        goto label2;

     label1:
        $r8 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages UNABLE_TO_MARSHAL_NON_ELEMENT>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r7[0] = $r9;

        r14 = virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r7);

     label2:
        $r10 = new javax.xml.bind.helpers.ValidationEventImpl;

        specialinvoke $r10.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator,java.lang.Throwable)>(1, r14, null, null);

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(javax.xml.bind.ValidationEvent)>($r10);

        goto label4;

     label3:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.Name tagName>;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r4, r3);

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsSoleContent(java.lang.Object,java.lang.String)>(r3, null);

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

        $z0 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean retainPropertyInfo>;

        if $z0 == 0 goto label4;

        $r5 = r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void remove()>();

     label4:
        return;
    }

    public void serializeBody(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0, $r1, $r12;
        int $i0, i1;
        com.sun.xml.bind.v2.runtime.property.Property r2;
        java.lang.String $r9;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator $r8;
        com.sun.xml.bind.api.AccessorException $r14;
        boolean $z0, $z1, $z2;
        java.lang.ThreadLocal $r11;
        com.sun.xml.bind.v2.runtime.property.Property[] $r13;
        java.lang.reflect.Field $r10;
        com.sun.xml.bind.v2.runtime.XMLSerializer r4;
        java.lang.Object r3;
        java.lang.Class $r5, $r6, $r7;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        if $r1 == null goto label1;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: void serializeBody(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r3, r4);

     label1:
        $r13 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        $i0 = lengthof $r13;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label7;

        r2 = $r13[i1];

        $z0 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean retainPropertyInfo>;

        if $z0 == 0 goto label3;

        $r11 = r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        virtualinvoke $r11.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

     label3:
        $z1 = interfaceinvoke r2.<com.sun.xml.bind.v2.runtime.property.Property: boolean isHiddenByOverride()>();

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.Class jaxbType>;

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label5;

     label4:
        interfaceinvoke r2.<com.sun.xml.bind.v2.runtime.property.Property: void serializeBody(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer,java.lang.Object)>(r3, r4, null);

        goto label6;

     label5:
        if $z1 == 0 goto label6;

        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = <com.sun.xml.bind.v2.model.nav.Navigator: com.sun.xml.bind.v2.model.nav.ReflectionNavigator REFLECTION>;

        $r9 = interfaceinvoke r2.<com.sun.xml.bind.v2.runtime.property.Property: java.lang.String getFieldName()>();

        $r10 = virtualinvoke $r8.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator: java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String)>($r7, $r9);

        if $r10 != null goto label6;

        interfaceinvoke r2.<com.sun.xml.bind.v2.runtime.property.Property: void serializeBody(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer,java.lang.Object)>(r3, r4, null);

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(null, $r14);

     label9:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label7 with label8;
    }

    public void serializeAttributes(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.Name $r7;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        com.sun.xml.bind.v2.runtime.property.AttributeProperty[] r13;
        java.util.Map r14;
        int i0, i1;
        com.sun.xml.bind.v2.runtime.property.Property $r8;
        com.sun.xml.bind.api.AccessorException $r11, $r12;
        boolean $z0, $z1;
        java.lang.ThreadLocal $r9, $r10;
        com.sun.xml.bind.v2.runtime.property.AttributeProperty r6;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r1, $r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer r5;
        java.lang.Object r2, $r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r2 := @parameter0: java.lang.Object;

        r5 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r13 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.AttributeProperty[] attributeProperties>;

        i0 = lengthof r13;

        i1 = 0;

     label01:
        if i1 >= i0 goto label08;

        r6 = r13[i1];

     label02:
        $z0 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean retainPropertyInfo>;

        if $z0 == 0 goto label03;

        $r8 = virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.property.Property getCurrentProperty()>();

        $r9 = r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>(r6);

        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.property.AttributeProperty: void serializeAttributes(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r2, r5);

        $r10 = r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        virtualinvoke $r10.<java.lang.ThreadLocal: void set(java.lang.Object)>($r8);

        goto label04;

     label03:
        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.property.AttributeProperty: void serializeAttributes(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r2, r5);

     label04:
        $r7 = r6.<com.sun.xml.bind.v2.runtime.property.AttributeProperty: com.sun.xml.bind.v2.runtime.Name attName>;

        $z1 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.Name: boolean equals(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "nil");

        if $z1 == 0 goto label05;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean isNilIncluded> = 1;

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(null, $r12);

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor inheritedAttWildcard>;

        if $r1 == null goto label09;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor inheritedAttWildcard>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Object get(java.lang.Object)>(r2);

        r14 = (java.util.Map) $r4;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void attWildcardAsAttributes(java.util.Map,java.lang.String)>(r14, null);

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(null, $r11);

     label11:
        return;

        catch com.sun.xml.bind.api.AccessorException from label02 to label05 with label06;
        catch com.sun.xml.bind.api.AccessorException from label08 to label09 with label10;
    }

    public void serializeURIs(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        java.util.Map r14;
        int i0, i1, i2, i3;
        com.sun.xml.bind.v2.runtime.property.Property $r6, r8, r13;
        com.sun.xml.bind.api.AccessorException $r10;
        boolean $z0;
        java.lang.ThreadLocal $r7, $r9;
        com.sun.xml.bind.v2.runtime.property.Property[] r11, r12;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r1, $r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer r5;
        java.lang.Object r2, $r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r2 := @parameter0: java.lang.Object;

        r5 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

     label1:
        $z0 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean retainPropertyInfo>;

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.property.Property getCurrentProperty()>();

        r11 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] uriProperties>;

        i0 = lengthof r11;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r8 = r11[i1];

        $r9 = r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>(r8);

        interfaceinvoke r8.<com.sun.xml.bind.v2.runtime.property.Property: void serializeURIs(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r2, r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r7 = r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        virtualinvoke $r7.<java.lang.ThreadLocal: void set(java.lang.Object)>($r6);

        goto label6;

     label4:
        r12 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] uriProperties>;

        i2 = lengthof r12;

        i3 = 0;

     label5:
        if i3 >= i2 goto label6;

        r13 = r12[i3];

        interfaceinvoke r13.<com.sun.xml.bind.v2.runtime.property.Property: void serializeURIs(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r2, r5);

        i3 = i3 + 1;

        goto label5;

     label6:
        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor inheritedAttWildcard>;

        if $r1 == null goto label7;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.reflect.Accessor inheritedAttWildcard>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Object get(java.lang.Object)>(r2);

        r14 = (java.util.Map) $r4;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void attWildcardAsURIs(java.util.Map,java.lang.String)>(r14, null);

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(null, $r10);

     label9:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label7 with label8;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl, boolean)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiTypeLoader $r10;
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader $r4;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r1, $r2, $r3, $r6;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r9;
        com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo $r5, $r8;
        boolean z0, $z1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r7;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r7 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        if $r1 != null goto label3;

        $r4 = new com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: void <init>(com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl)>(r0);

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader> = $r4;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo ci>;

        $z1 = interfaceinvoke $r5.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: boolean hasSubClasses()>();

        if $z1 == 0 goto label1;

        $r10 = new com.sun.xml.bind.v2.runtime.unmarshaller.XsiTypeLoader;

        specialinvoke $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiTypeLoader: void <init>(com.sun.xml.bind.v2.runtime.JaxBeanInfo)>(r0);

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loaderWithTypeSubst> = $r10;

        goto label2;

     label1:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loaderWithTypeSubst> = $r6;

     label2:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo ci>;

        $r9 = interfaceinvoke $r8.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAttributeWildcard()>();

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: void init(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl,com.sun.xml.bind.v2.runtime.reflect.Accessor)>(r7, r0, $r9);

     label3:
        if z0 == 0 goto label4;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loaderWithTypeSubst>;

        return $r3;

     label4:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        return $r2;
    }

    public com.sun.xml.bind.v2.runtime.Transducer getTransducer()
    {
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Transducer $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.Transducer xducer>;

        return $r1;
    }

    static void <clinit>()
    {
        com.sun.xml.bind.v2.runtime.property.AttributeProperty[] $r0;
        java.util.logging.Logger $r1;

        $r0 = newarray (com.sun.xml.bind.v2.runtime.property.AttributeProperty)[0];

        <com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.AttributeProperty[] EMPTY_PROPERTIES> = $r0;

        $r1 = staticinvoke <com.sun.xml.bind.Util: java.util.logging.Logger getClassLogger()>();

        <com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.util.logging.Logger logger> = $r1;

        return;
    }
}
