public class org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator extends java.lang.Object implements org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator
{
    private org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param;

    public void <init>()
    {
        org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator r0;

        r0 := @this: org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(org.bouncycastle.crypto.KeyGenerationParameters)
    {
        org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator r0;
        org.bouncycastle.crypto.KeyGenerationParameters r1;
        org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters $r2;

        r0 := @this: org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator;

        r1 := @parameter0: org.bouncycastle.crypto.KeyGenerationParameters;

        $r2 = (org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters) r1;

        r0.<org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator: org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param> = $r2;

        return;
    }

    public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        org.bouncycastle.crypto.generators.DHKeyGeneratorHelper r0;
        org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator r1;
        org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters $r13;
        org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters $r2, $r7;
        java.security.SecureRandom $r8;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r11;
        org.bouncycastle.crypto.params.ElGamalParameters $r3;
        int $i0;
        java.math.BigInteger $r5, $r6, $r9, $r10;
        org.bouncycastle.crypto.params.DHParameters $r4;
        org.bouncycastle.crypto.params.ElGamalPublicKeyParameters $r12;

        r1 := @this: org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator;

        r0 = <org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: org.bouncycastle.crypto.generators.DHKeyGeneratorHelper INSTANCE>;

        $r2 = r1.<org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator: org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters: org.bouncycastle.crypto.params.ElGamalParameters getParameters()>();

        $r4 = new org.bouncycastle.crypto.params.DHParameters;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.params.ElGamalParameters: java.math.BigInteger getP()>();

        $r6 = virtualinvoke $r3.<org.bouncycastle.crypto.params.ElGamalParameters: java.math.BigInteger getG()>();

        $i0 = virtualinvoke $r3.<org.bouncycastle.crypto.params.ElGamalParameters: int getL()>();

        specialinvoke $r4.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r5, $r6, null, $i0);

        $r7 = r1.<org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator: org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters: java.security.SecureRandom getRandom()>();

        $r9 = virtualinvoke r0.<org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: java.math.BigInteger calculatePrivate(org.bouncycastle.crypto.params.DHParameters,java.security.SecureRandom)>($r4, $r8);

        $r10 = virtualinvoke r0.<org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: java.math.BigInteger calculatePublic(org.bouncycastle.crypto.params.DHParameters,java.math.BigInteger)>($r4, $r9);

        $r11 = new org.bouncycastle.crypto.AsymmetricCipherKeyPair;

        $r12 = new org.bouncycastle.crypto.params.ElGamalPublicKeyParameters;

        specialinvoke $r12.<org.bouncycastle.crypto.params.ElGamalPublicKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ElGamalParameters)>($r10, $r3);

        $r13 = new org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters;

        specialinvoke $r13.<org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ElGamalParameters)>($r9, $r3);

        specialinvoke $r11.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: void <init>(org.bouncycastle.crypto.CipherParameters,org.bouncycastle.crypto.CipherParameters)>($r12, $r13);

        return $r11;
    }
}
