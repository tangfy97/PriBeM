public class org.springframework.jndi.JndiObjectTargetSource extends org.springframework.jndi.JndiObjectLocator implements org.springframework.aop.TargetSource
{
    private boolean lookupOnStartup;
    private boolean cache;
    private java.lang.Object cachedObject;
    private java.lang.Class targetClass;

    public void <init>()
    {
        org.springframework.jndi.JndiObjectTargetSource r0;

        r0 := @this: org.springframework.jndi.JndiObjectTargetSource;

        specialinvoke r0.<org.springframework.jndi.JndiObjectLocator: void <init>()>();

        r0.<org.springframework.jndi.JndiObjectTargetSource: boolean lookupOnStartup> = 1;

        r0.<org.springframework.jndi.JndiObjectTargetSource: boolean cache> = 1;

        return;
    }

    public void setLookupOnStartup(boolean)
    {
        org.springframework.jndi.JndiObjectTargetSource r0;
        boolean z0;

        r0 := @this: org.springframework.jndi.JndiObjectTargetSource;

        z0 := @parameter0: boolean;

        r0.<org.springframework.jndi.JndiObjectTargetSource: boolean lookupOnStartup> = z0;

        return;
    }

    public void setCache(boolean)
    {
        org.springframework.jndi.JndiObjectTargetSource r0;
        boolean z0;

        r0 := @this: org.springframework.jndi.JndiObjectTargetSource;

        z0 := @parameter0: boolean;

        r0.<org.springframework.jndi.JndiObjectTargetSource: boolean cache> = z0;

        return;
    }

    public void afterPropertiesSet() throws javax.naming.NamingException
    {
        org.springframework.jndi.JndiObjectTargetSource r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.jndi.JndiObjectTargetSource;

        specialinvoke r0.<org.springframework.jndi.JndiObjectLocator: void afterPropertiesSet()>();

        $z0 = r0.<org.springframework.jndi.JndiObjectTargetSource: boolean lookupOnStartup>;

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object lookup()>();

        $z1 = r0.<org.springframework.jndi.JndiObjectTargetSource: boolean cache>;

        if $z1 == 0 goto label1;

        r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject> = $r1;

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Class targetClass> = $r2;

     label2:
        return;
    }

    public java.lang.Class getTargetClass()
    {
        org.springframework.jndi.JndiObjectTargetSource r0;
        java.lang.Object $r1, $r5;
        java.lang.Class $r2, $r3, $r4, $r6;

        r0 := @this: org.springframework.jndi.JndiObjectTargetSource;

        $r1 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject>;

        if $r1 == null goto label1;

        $r5 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        return $r6;

     label1:
        $r2 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Class targetClass>;

        if $r2 == null goto label2;

        $r4 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Class targetClass>;

        return $r4;

     label2:
        $r3 = virtualinvoke r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Class getExpectedType()>();

        return $r3;
    }

    public boolean isStatic()
    {
        java.lang.Object $r1;
        org.springframework.jndi.JndiObjectTargetSource r0;

        r0 := @this: org.springframework.jndi.JndiObjectTargetSource;

        $r1 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object getTarget()
    {
        java.lang.Throwable $r7;
        org.springframework.jndi.JndiLookupFailureException $r6;
        org.springframework.jndi.JndiObjectTargetSource r0;
        javax.naming.NamingException $r5;
        java.lang.Object $r1, $r2, $r3, $r4, $r8;
        boolean $z0, $z1;

        r0 := @this: org.springframework.jndi.JndiObjectTargetSource;

     label01:
        $z0 = r0.<org.springframework.jndi.JndiObjectTargetSource: boolean lookupOnStartup>;

        if $z0 != 0 goto label02;

        $z1 = r0.<org.springframework.jndi.JndiObjectTargetSource: boolean cache>;

        if $z1 != 0 goto label05;

     label02:
        $r1 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject>;

        if $r1 == null goto label03;

        $r8 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject>;

        goto label04;

     label03:
        $r8 = virtualinvoke r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object lookup()>();

     label04:
        return $r8;

     label05:
        entermonitor r0;

     label06:
        $r2 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject>;

        if $r2 != null goto label07;

        $r4 = virtualinvoke r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object lookup()>();

        r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject> = $r4;

     label07:
        $r3 = r0.<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object cachedObject>;

        exitmonitor r0;

     label08:
        return $r3;

     label09:
        $r7 := @caughtexception;

        exitmonitor r0;

     label10:
        throw $r7;

     label11:
        $r5 := @caughtexception;

        $r6 = new org.springframework.jndi.JndiLookupFailureException;

        specialinvoke $r6.<org.springframework.jndi.JndiLookupFailureException: void <init>(java.lang.String,javax.naming.NamingException)>("JndiObjectTargetSource failed to obtain new target object", $r5);

        throw $r6;

        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch javax.naming.NamingException from label01 to label04 with label11;
        catch javax.naming.NamingException from label05 to label08 with label11;
        catch javax.naming.NamingException from label09 to label11 with label11;
    }

    public void releaseTarget(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.jndi.JndiObjectTargetSource r0;

        r0 := @this: org.springframework.jndi.JndiObjectTargetSource;

        r1 := @parameter0: java.lang.Object;

        return;
    }
}
