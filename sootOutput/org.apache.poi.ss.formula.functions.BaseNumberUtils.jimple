public class org.apache.poi.ss.formula.functions.BaseNumberUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.ss.formula.functions.BaseNumberUtils r0;

        r0 := @this: org.apache.poi.ss.formula.functions.BaseNumberUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double convertToDecimal(java.lang.String, int, int) throws java.lang.IllegalArgumentException
    {
        byte $b5, $b9, $b12, $b23;
        boolean z0, $z1, z2, z3;
        long l2, $l4, $l8, $l11, l19, l21, $l22;
        int $i0, $i1, i3, i6, i7, $i10, $i14, $i15, $i16, $i17, $i18, i20, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        java.lang.String r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        char c13;
        java.lang.IllegalArgumentException $r4, $r5;
        char[] $r1;

        r0 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        i3 := @parameter2: int;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return 0.0;

     label02:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        l2 = (long) $i1;

        $l4 = (long) i3;

        $b5 = l2 cmp $l4;

        $i24 = (int) $b5;

        if $i24 <= 0 goto label03;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label03:
        d6 = 0.0;

        l19 = 0L;

        z0 = 1;

        z3 = 1;

        z2 = 1;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i6 = lengthof $r1;

        i20 = 0;

     label04:
        if i20 >= i6 goto label12;

        c13 = $r1[i20];

        $i25 = (int) c13;

        if 48 > $i25 goto label05;

        $i26 = (int) c13;

        if $i26 > 57 goto label05;

        $i27 = (int) c13;

        $i18 = $i27 - 48;

        l21 = (long) $i18;

        goto label08;

     label05:
        $i28 = (int) c13;

        if 65 > $i28 goto label06;

        $i29 = (int) c13;

        if $i29 > 90 goto label06;

        $i30 = (int) c13;

        $i16 = $i30 - 65;

        $i17 = 10 + $i16;

        l21 = (long) $i17;

        goto label08;

     label06:
        $i31 = (int) c13;

        if 97 > $i31 goto label07;

        $i32 = (int) c13;

        if $i32 > 122 goto label07;

        $i33 = (int) c13;

        $i14 = $i33 - 97;

        $i15 = 10 + $i14;

        l21 = (long) $i15;

        goto label08;

     label07:
        l21 = (long) i7;

     label08:
        $l22 = (long) i7;

        $b23 = l21 cmp $l22;

        $i34 = (int) $b23;

        if $i34 >= 0 goto label10;

        if z2 == 0 goto label09;

        z0 = 0;

        z3 = 0;

        z2 = 0;

        l19 = l21;

     label09:
        $d3 = (double) i7;

        $d5 = d6 * $d3;

        $d4 = (double) l21;

        d6 = $d5 + $d4;

        goto label11;

     label10:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("character not allowed");

        throw $r5;

     label11:
        i20 = i20 + 1;

        goto label04;

     label12:
        if z3 != 0 goto label13;

        $l8 = (long) i3;

        $b9 = l2 cmp $l8;

        if $b9 != 0 goto label13;

        $i10 = i7 / 2;

        $l11 = (long) $i10;

        $b12 = l19 cmp $l11;

        $i35 = (int) $b12;

        if $i35 < 0 goto label13;

        $z1 = 1;

        goto label14;

     label13:
        $z1 = 0;

     label14:
        if $z1 == 0 goto label15;

        $d1 = (double) i7;

        $d0 = (double) i3;

        $d2 = staticinvoke <org.apache.poi.ss.formula.functions.BaseNumberUtils: double getTwoComplement(double,double,double)>($d1, $d0, d6);

        d6 = $d2 * -1.0;

     label15:
        return d6;
    }

    private static double getTwoComplement(double, double, double)
    {
        double d0, d1, $d2, d3, $d4;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d3 := @parameter2: double;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, d1);

        $d4 = $d2 - d3;

        return $d4;
    }
}
