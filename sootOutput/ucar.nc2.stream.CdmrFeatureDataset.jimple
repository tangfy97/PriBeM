public class ucar.nc2.stream.CdmrFeatureDataset extends java.lang.Object
{
    public static final java.lang.String SCHEME;
    private static boolean debug;
    private static boolean showXML;

    public void <init>()
    {
        ucar.nc2.stream.CdmrFeatureDataset r0;

        r0 := @this: ucar.nc2.stream.CdmrFeatureDataset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static ucar.nc2.ft.FeatureDataset factory(ucar.nc2.constants.FeatureType, java.lang.String) throws java.io.IOException
    {
        java.lang.Object[] $r14;
        org.jdom.Document $r0;
        ucar.nc2.stream.CdmRemote $r19;
        int $i0;
        java.lang.String $r4, $r6, $r16, r18;
        ucar.nc2.constants.FeatureType $r7, $r8, $r9, r17;
        boolean $z0, $z1;
        java.io.PrintStream $r15;
        ucar.nc2.ft.point.remote.PointDatasetRemote $r13;
        ucar.nc2.dt.grid.GridDataset $r21;
        org.jdom.Attribute $r3, $r5;
        ucar.unidata.geoloc.LatLonRect $r11;
        java.util.List $r10;
        ucar.nc2.units.DateRange $r12;
        org.jdom.Element $r1, $r2;
        ucar.nc2.dataset.NetcdfDataset $r20;

        r17 := @parameter0: ucar.nc2.constants.FeatureType;

        r18 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r18.<java.lang.String: boolean startsWith(java.lang.String)>("cdmrFeature:");

        if $z0 == 0 goto label1;

        $r16 = "cdmrFeature:";

        $i0 = virtualinvoke $r16.<java.lang.String: int length()>();

        r18 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int)>($i0);

     label1:
        $r0 = staticinvoke <ucar.nc2.stream.CdmrFeatureDataset: org.jdom.Document getCapabilities(java.lang.String)>(r18);

        $r1 = virtualinvoke $r0.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r2 = virtualinvoke $r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("featureDataset");

        $r3 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Attribute getAttribute(java.lang.String)>("type");

        $r4 = virtualinvoke $r3.<org.jdom.Attribute: java.lang.String getValue()>();

        $r5 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Attribute getAttribute(java.lang.String)>("url");

        $r6 = virtualinvoke $r5.<org.jdom.Attribute: java.lang.String getValue()>();

        $z1 = <ucar.nc2.stream.CdmrFeatureDataset: boolean debug>;

        if $z1 == 0 goto label2;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = r18;

        $r14[1] = $r4;

        $r14[2] = $r6;

        virtualinvoke $r15.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("CdmrFeatureDataset endpoint %s%n ftype= %s uri=%s%n", $r14);

     label2:
        $r7 = staticinvoke <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType getType(java.lang.String)>($r4);

        if $r7 == null goto label3;

        $r8 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType NONE>;

        if $r7 == $r8 goto label3;

        $r9 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        if $r7 != $r9 goto label4;

     label3:
        $r19 = new ucar.nc2.stream.CdmRemote;

        specialinvoke $r19.<ucar.nc2.stream.CdmRemote: void <init>(java.lang.String)>($r6);

        $r20 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r20.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile,java.util.Set)>($r19, null);

        $r21 = new ucar.nc2.dt.grid.GridDataset;

        specialinvoke $r21.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r20);

        return $r21;

     label4:
        $r10 = staticinvoke <ucar.nc2.ft.point.writer.FeatureDatasetPointXML: java.util.List getDataVariables(org.jdom.Document)>($r0);

        $r11 = staticinvoke <ucar.nc2.ft.point.writer.FeatureDatasetPointXML: ucar.unidata.geoloc.LatLonRect getSpatialExtent(org.jdom.Document)>($r0);

        $r12 = staticinvoke <ucar.nc2.ft.point.writer.FeatureDatasetPointXML: ucar.nc2.units.DateRange getTimeSpan(org.jdom.Document)>($r0);

        $r13 = new ucar.nc2.ft.point.remote.PointDatasetRemote;

        specialinvoke $r13.<ucar.nc2.ft.point.remote.PointDatasetRemote: void <init>(ucar.nc2.constants.FeatureType,java.lang.String,java.util.List,ucar.unidata.geoloc.LatLonRect,ucar.nc2.units.DateRange)>($r7, $r6, $r10, $r11, $r12);

        return $r13;
    }

    private static org.jdom.Document getCapabilities(java.lang.String) throws java.io.IOException
    {
        java.io.PrintStream $r5, $r8;
        java.lang.Throwable $r10, $r11;
        org.jdom.input.SAXBuilder $r2;
        java.lang.Object[] $r4, $r7;
        java.io.IOException $r12;
        org.jdom.output.XMLOutputter $r6;
        org.jdom.Document $r3;
        java.lang.String r0, $r9;
        java.io.InputStream $r1, r13;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r13 = null;

     label1:
        $r1 = staticinvoke <ucar.nc2.stream.CdmRemote: java.io.InputStream sendQuery(java.lang.String,java.lang.String)>(r0, "req=capabilities");

        r13 = $r1;

        $r2 = new org.jdom.input.SAXBuilder;

        specialinvoke $r2.<org.jdom.input.SAXBuilder: void <init>(boolean)>(0);

        $r3 = virtualinvoke $r2.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>($r1);

     label2:
        if $r1 == null goto label7;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        goto label7;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label4:
        $r10 := @caughtexception;

     label5:
        if r13 == null goto label6;

        virtualinvoke r13.<java.io.InputStream: void close()>();

     label6:
        throw $r10;

     label7:
        $z0 = <ucar.nc2.stream.CdmrFeatureDataset: boolean showXML>;

        if $z0 == 0 goto label8;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r0;

        virtualinvoke $r5.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("*** endpoint = %s %n", $r4);

        $r6 = new org.jdom.output.XMLOutputter;

        specialinvoke $r6.<org.jdom.output.XMLOutputter: void <init>()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke $r6.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r3);

        $r7[0] = $r9;

        virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("*** CdmrFeatureDataset/showParsedXML = %n %s %n", $r7);

     label8:
        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r7;
        java.lang.Object[] $r6;
        java.lang.String[] r8;
        java.util.List $r3;
        ucar.nc2.ft.FeatureCollection r5;
        ucar.nc2.ft.FeatureDatasetPoint r2;
        java.lang.Object $r4;
        ucar.nc2.constants.FeatureType $r0;
        ucar.nc2.ft.FeatureDataset $r1;

        r8 := @parameter0: java.lang.String[];

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY>;

        $r1 = staticinvoke <ucar.nc2.stream.CdmrFeatureDataset: ucar.nc2.ft.FeatureDataset factory(ucar.nc2.constants.FeatureType,java.lang.String)>($r0, "http://localhost:8080/thredds/cdmrfeature/idd/metar/ncdecodedLocalHome");

        r2 = (ucar.nc2.ft.FeatureDatasetPoint) $r1;

        $r3 = interfaceinvoke r2.<ucar.nc2.ft.FeatureDatasetPoint: java.util.List getPointFeatureCollectionList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (ucar.nc2.ft.FeatureCollection) $r4;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r2;

        $r6[1] = r5;

        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Result= %s %n %s %n", $r6);

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.stream.CdmrFeatureDataset: java.lang.String SCHEME> = "cdmrFeature:";

        <ucar.nc2.stream.CdmrFeatureDataset: boolean debug> = 0;

        <ucar.nc2.stream.CdmrFeatureDataset: boolean showXML> = 0;

        return;
    }
}
