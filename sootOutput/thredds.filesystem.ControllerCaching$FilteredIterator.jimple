class thredds.filesystem.ControllerCaching$FilteredIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator orgIter;
    private final thredds.inventory.MCollection mc;
    private thredds.inventory.MFile next;
    final thredds.filesystem.ControllerCaching this$0;

    void <init>(thredds.filesystem.ControllerCaching, thredds.inventory.MCollection, java.util.Iterator)
    {
        thredds.filesystem.ControllerCaching$FilteredIterator r0;
        thredds.inventory.MCollection r3;
        java.util.Iterator r2;
        thredds.filesystem.ControllerCaching r1;

        r0 := @this: thredds.filesystem.ControllerCaching$FilteredIterator;

        r1 := @parameter0: thredds.filesystem.ControllerCaching;

        r3 := @parameter1: thredds.inventory.MCollection;

        r2 := @parameter2: java.util.Iterator;

        r0.<thredds.filesystem.ControllerCaching$FilteredIterator: thredds.filesystem.ControllerCaching this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.filesystem.ControllerCaching$FilteredIterator: java.util.Iterator orgIter> = r2;

        r0.<thredds.filesystem.ControllerCaching$FilteredIterator: thredds.inventory.MCollection mc> = r3;

        return;
    }

    public boolean hasNext()
    {
        thredds.filesystem.ControllerCaching$FilteredIterator r0;
        thredds.inventory.MFile $r1, $r2;
        boolean $z0;

        r0 := @this: thredds.filesystem.ControllerCaching$FilteredIterator;

        $r1 = specialinvoke r0.<thredds.filesystem.ControllerCaching$FilteredIterator: thredds.inventory.MFile nextFilteredFile()>();

        r0.<thredds.filesystem.ControllerCaching$FilteredIterator: thredds.inventory.MFile next> = $r1;

        $r2 = r0.<thredds.filesystem.ControllerCaching$FilteredIterator: thredds.inventory.MFile next>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public thredds.inventory.MFile next()
    {
        thredds.filesystem.ControllerCaching$FilteredIterator r0;
        thredds.inventory.MFile $r1;

        r0 := @this: thredds.filesystem.ControllerCaching$FilteredIterator;

        $r1 = r0.<thredds.filesystem.ControllerCaching$FilteredIterator: thredds.inventory.MFile next>;

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        thredds.filesystem.ControllerCaching$FilteredIterator r1;

        r1 := @this: thredds.filesystem.ControllerCaching$FilteredIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private thredds.inventory.MFile nextFilteredFile()
    {
        java.util.Iterator $r1, $r2, $r3, $r5, $r6;
        thredds.filesystem.ControllerCaching$FilteredIterator r0;
        thredds.inventory.MCollection $r8;
        thredds.inventory.MFile r9;
        java.lang.Object $r4, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: thredds.filesystem.ControllerCaching$FilteredIterator;

        $r1 = r0.<thredds.filesystem.ControllerCaching$FilteredIterator: java.util.Iterator orgIter>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<thredds.filesystem.ControllerCaching$FilteredIterator: java.util.Iterator orgIter>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r3 = r0.<thredds.filesystem.ControllerCaching$FilteredIterator: java.util.Iterator orgIter>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (thredds.inventory.MFile) $r4;

     label3:
        $z1 = interfaceinvoke r9.<thredds.inventory.MFile: boolean isDirectory()>();

        if $z1 != 0 goto label4;

        $r8 = r0.<thredds.filesystem.ControllerCaching$FilteredIterator: thredds.inventory.MCollection mc>;

        $z3 = virtualinvoke $r8.<thredds.inventory.MCollection: boolean accept(thredds.inventory.MFile)>(r9);

        if $z3 != 0 goto label6;

     label4:
        $r5 = r0.<thredds.filesystem.ControllerCaching$FilteredIterator: java.util.Iterator orgIter>;

        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label5;

        return null;

     label5:
        $r6 = r0.<thredds.filesystem.ControllerCaching$FilteredIterator: java.util.Iterator orgIter>;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (thredds.inventory.MFile) $r7;

        goto label3;

     label6:
        return r9;
    }

    public volatile java.lang.Object next()
    {
        thredds.filesystem.ControllerCaching$FilteredIterator r0;
        thredds.inventory.MFile $r1;

        r0 := @this: thredds.filesystem.ControllerCaching$FilteredIterator;

        $r1 = virtualinvoke r0.<thredds.filesystem.ControllerCaching$FilteredIterator: thredds.inventory.MFile next()>();

        return $r1;
    }
}
