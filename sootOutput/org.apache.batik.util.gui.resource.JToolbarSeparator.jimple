public class org.apache.batik.util.gui.resource.JToolbarSeparator extends javax.swing.JComponent
{

    public void <init>()
    {
        java.awt.Dimension $r1;
        org.apache.batik.util.gui.resource.JToolbarSeparator r0;

        r0 := @this: org.apache.batik.util.gui.resource.JToolbarSeparator;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        $r1 = new java.awt.Dimension;

        specialinvoke $r1.<java.awt.Dimension: void <init>(int,int)>(15, 2147483647);

        virtualinvoke r0.<javax.swing.JComponent: void setMaximumSize(java.awt.Dimension)>($r1);

        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r3, $r4;
        org.apache.batik.util.gui.resource.JToolbarSeparator r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.awt.Dimension $r2;
        java.awt.Graphics r1;

        r0 := @this: org.apache.batik.util.gui.resource.JToolbarSeparator;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JComponent: void paintComponent(java.awt.Graphics)>(r1);

        $r2 = virtualinvoke r0.<java.awt.Component: java.awt.Dimension getSize()>();

        $i0 = $r2.<java.awt.Dimension: int width>;

        i1 = $i0 / 2;

        $r3 = <java.awt.Color: java.awt.Color gray>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i2 = $r2.<java.awt.Dimension: int height>;

        $i3 = $i2 - 5;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i1, 3, i1, $i3);

        $i4 = i1 + 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i1, 2, $i4, 2);

        $r4 = <java.awt.Color: java.awt.Color white>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i8 = i1 + 1;

        $i7 = i1 + 1;

        $i5 = $r2.<java.awt.Dimension: int height>;

        $i6 = $i5 - 5;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i8, 3, $i7, $i6);

        $i9 = $r2.<java.awt.Dimension: int height>;

        $i13 = $i9 - 4;

        $i12 = i1 + 1;

        $i10 = $r2.<java.awt.Dimension: int height>;

        $i11 = $i10 - 4;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i1, $i13, $i12, $i11);

        return;
    }
}
