public class org.apache.batik.bridge.URIResolver extends java.lang.Object
{
    protected org.apache.batik.dom.svg.SVGOMDocument document;
    protected java.lang.String documentURI;
    protected org.apache.batik.bridge.DocumentLoader documentLoader;

    public void <init>(org.w3c.dom.svg.SVGDocument, org.apache.batik.bridge.DocumentLoader)
    {
        org.apache.batik.bridge.DocumentLoader r3;
        org.w3c.dom.svg.SVGDocument r1;
        org.apache.batik.bridge.URIResolver r0;
        org.apache.batik.dom.svg.SVGOMDocument $r2;

        r0 := @this: org.apache.batik.bridge.URIResolver;

        r1 := @parameter0: org.w3c.dom.svg.SVGDocument;

        r3 := @parameter1: org.apache.batik.bridge.DocumentLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = (org.apache.batik.dom.svg.SVGOMDocument) r1;

        r0.<org.apache.batik.bridge.URIResolver: org.apache.batik.dom.svg.SVGOMDocument document> = $r2;

        r0.<org.apache.batik.bridge.URIResolver: org.apache.batik.bridge.DocumentLoader documentLoader> = r3;

        return;
    }

    public org.w3c.dom.Element getElement(java.lang.String, org.w3c.dom.Element) throws java.net.MalformedURLException, java.io.IOException
    {
        java.lang.IllegalArgumentException $r6;
        short $s0;
        org.w3c.dom.Element r2, $r4;
        org.w3c.dom.Node $r3;
        int $i1;
        java.lang.String r1;
        org.apache.batik.bridge.URIResolver r0;

        r0 := @this: org.apache.batik.bridge.URIResolver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Element;

        $r3 = virtualinvoke r0.<org.apache.batik.bridge.URIResolver: org.w3c.dom.Node getNode(java.lang.String,org.w3c.dom.Element)>(r1, r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $s0 = interfaceinvoke $r3.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        if $i1 != 9 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label2:
        $r4 = (org.w3c.dom.Element) $r3;

        return $r4;
    }

    public org.w3c.dom.Node getNode(java.lang.String, org.w3c.dom.Element) throws java.net.MalformedURLException, java.io.IOException, java.lang.SecurityException
    {
        org.apache.batik.bridge.DocumentLoader $r7, $r10;
        org.w3c.dom.Document $r11;
        boolean $z0;
        org.apache.batik.bridge.UserAgent $r8;
        org.apache.batik.util.ParsedURL r24, $r27, $r28, $r29;
        org.w3c.dom.Node $r23;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r2, r4, $r5, $r6, $r9, $r14, $r15, $r17, $r21, $r22, $r25, r26;
        org.apache.batik.bridge.URIResolver r0;
        char $c4;
        org.apache.batik.dom.svg.SVGOMDocument $r18, $r20;
        org.w3c.dom.Element r1, $r12, $r19;

        r0 := @this: org.apache.batik.bridge.URIResolver;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: org.w3c.dom.Element;

        $r2 = virtualinvoke r0.<org.apache.batik.bridge.URIResolver: java.lang.String getRefererBaseURI(org.w3c.dom.Element)>(r1);

        if $r2 != null goto label1;

        $c4 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        $i5 = (int) $c4;

        if $i5 != 35 goto label1;

        $r22 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(1);

        $r23 = virtualinvoke r0.<org.apache.batik.bridge.URIResolver: org.w3c.dom.Node getNodeByFragment(java.lang.String,org.w3c.dom.Element)>($r22, r1);

        return $r23;

     label1:
        $r27 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r27.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String,java.lang.String)>($r2, r4);

        $r5 = r0.<org.apache.batik.bridge.URIResolver: java.lang.String documentURI>;

        if $r5 != null goto label2;

        $r20 = r0.<org.apache.batik.bridge.URIResolver: org.apache.batik.dom.svg.SVGOMDocument document>;

        $r21 = virtualinvoke $r20.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String getURL()>();

        r0.<org.apache.batik.bridge.URIResolver: java.lang.String documentURI> = $r21;

     label2:
        $r6 = virtualinvoke $r27.<org.apache.batik.util.ParsedURL: java.lang.String getRef()>();

        if $r6 == null goto label3;

        $r15 = r0.<org.apache.batik.bridge.URIResolver: java.lang.String documentURI>;

        if $r15 == null goto label3;

        $r28 = new org.apache.batik.util.ParsedURL;

        $r17 = r0.<org.apache.batik.bridge.URIResolver: java.lang.String documentURI>;

        specialinvoke $r28.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>($r17);

        $z0 = virtualinvoke $r28.<org.apache.batik.util.ParsedURL: boolean sameFile(org.apache.batik.util.ParsedURL)>($r27);

        if $z0 == 0 goto label3;

        $r18 = r0.<org.apache.batik.bridge.URIResolver: org.apache.batik.dom.svg.SVGOMDocument document>;

        $r19 = virtualinvoke $r18.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.Element getElementById(java.lang.String)>($r6);

        return $r19;

     label3:
        r24 = null;

        $r25 = r0.<org.apache.batik.bridge.URIResolver: java.lang.String documentURI>;

        if $r25 == null goto label4;

        $r29 = new org.apache.batik.util.ParsedURL;

        $r14 = r0.<org.apache.batik.bridge.URIResolver: java.lang.String documentURI>;

        specialinvoke $r29.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>($r14);

        r24 = $r29;

     label4:
        $r7 = r0.<org.apache.batik.bridge.URIResolver: org.apache.batik.bridge.DocumentLoader documentLoader>;

        $r8 = virtualinvoke $r7.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r8.<org.apache.batik.bridge.UserAgent: void checkLoadExternalResource(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>($r27, r24);

        $r9 = virtualinvoke $r27.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        r26 = $r9;

        if $r6 == null goto label5;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i2 = $i1 + 1;

        $i3 = $i0 - $i2;

        r26 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label5:
        $r10 = r0.<org.apache.batik.bridge.URIResolver: org.apache.batik.bridge.DocumentLoader documentLoader>;

        $r11 = virtualinvoke $r10.<org.apache.batik.bridge.DocumentLoader: org.w3c.dom.Document loadDocument(java.lang.String)>(r26);

        if $r6 == null goto label6;

        $r12 = interfaceinvoke $r11.<org.w3c.dom.Document: org.w3c.dom.Element getElementById(java.lang.String)>($r6);

        return $r12;

     label6:
        return $r11;
    }

    protected java.lang.String getRefererBaseURI(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.apache.batik.dom.AbstractNode $r1;
        java.lang.String $r2;
        org.apache.batik.bridge.URIResolver r3;

        r3 := @this: org.apache.batik.bridge.URIResolver;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = (org.apache.batik.dom.AbstractNode) r0;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI()>();

        return $r2;
    }

    protected org.w3c.dom.Node getNodeByFragment(java.lang.String, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0, $r3;
        org.w3c.dom.Document $r1;
        java.lang.String r2;
        org.apache.batik.bridge.URIResolver r4;

        r4 := @this: org.apache.batik.bridge.URIResolver;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element getElementById(java.lang.String)>(r2);

        return $r3;
    }
}
