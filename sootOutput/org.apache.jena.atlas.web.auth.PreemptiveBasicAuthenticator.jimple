public class org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator extends java.lang.Object implements org.apache.jena.atlas.web.auth.HttpAuthenticator
{
    private org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator;
    private boolean isProxy;

    public void <init>(org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        org.apache.jena.atlas.web.auth.HttpAuthenticator r1;
        org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator r0;

        r0 := @this: org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator;

        r1 := @parameter0: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        specialinvoke r0.<org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator: void <init>(org.apache.jena.atlas.web.auth.HttpAuthenticator,boolean)>(r1, 0);

        return;
    }

    public void <init>(org.apache.jena.atlas.web.auth.HttpAuthenticator, boolean)
    {
        org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator r0;
        org.apache.jena.atlas.web.auth.HttpAuthenticator r1;
        java.lang.IllegalArgumentException $r2;
        boolean z0;

        r0 := @this: org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator;

        r1 := @parameter0: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator: boolean isProxy> = 0;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must provide an authenticator to decorate");

        throw $r2;

     label1:
        r0.<org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator> = r1;

        return;
    }

    public void apply(org.apache.http.impl.client.AbstractHttpClient, org.apache.http.protocol.HttpContext, java.net.URI)
    {
        org.apache.http.impl.auth.BasicScheme $r6;
        org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator r0;
        org.apache.jena.atlas.web.auth.HttpAuthenticator $r4;
        org.apache.http.impl.client.BasicAuthCache $r9;
        org.apache.http.auth.ChallengeState $r11;
        org.apache.http.protocol.HttpContext r2;
        int $i0;
        org.apache.http.impl.client.AbstractHttpClient r1;
        java.lang.Object $r5;
        java.net.URI r3;
        java.lang.String $r8;
        org.apache.http.HttpHost $r7;
        boolean $z0;
        org.apache.http.client.AuthCache r10;

        r0 := @this: org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator;

        r1 := @parameter0: org.apache.http.impl.client.AbstractHttpClient;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        r3 := @parameter2: java.net.URI;

        $r4 = r0.<org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        interfaceinvoke $r4.<org.apache.jena.atlas.web.auth.HttpAuthenticator: void apply(org.apache.http.impl.client.AbstractHttpClient,org.apache.http.protocol.HttpContext,java.net.URI)>(r1, r2, r3);

        $r5 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.auth-cache");

        r10 = (org.apache.http.client.AuthCache) $r5;

        if r10 != null goto label1;

        $r9 = new org.apache.http.impl.client.BasicAuthCache;

        specialinvoke $r9.<org.apache.http.impl.client.BasicAuthCache: void <init>()>();

        r10 = $r9;

     label1:
        $r6 = new org.apache.http.impl.auth.BasicScheme;

        $z0 = r0.<org.apache.jena.atlas.web.auth.PreemptiveBasicAuthenticator: boolean isProxy>;

        if $z0 == 0 goto label2;

        $r11 = <org.apache.http.auth.ChallengeState: org.apache.http.auth.ChallengeState PROXY>;

        goto label3;

     label2:
        $r11 = <org.apache.http.auth.ChallengeState: org.apache.http.auth.ChallengeState TARGET>;

     label3:
        specialinvoke $r6.<org.apache.http.impl.auth.BasicScheme: void <init>(org.apache.http.auth.ChallengeState)>($r11);

        $r7 = new org.apache.http.HttpHost;

        $r8 = virtualinvoke r3.<java.net.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke r3.<java.net.URI: int getPort()>();

        specialinvoke $r7.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>($r8, $i0);

        interfaceinvoke r10.<org.apache.http.client.AuthCache: void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme)>($r7, $r6);

        interfaceinvoke r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.auth-cache", r10);

        return;
    }
}
