public final class org.apache.lucene.queries.TermsFilter extends org.apache.lucene.search.Filter
{
    private final int[] offsets;
    private final byte[] termsBytes;
    private final org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields;
    private final int hashCode;
    private static final int PRIME;

    public void <init>(java.util.List)
    {
        org.apache.lucene.queries.TermsFilter r0;
        java.util.List r2;
        int $i0;
        org.apache.lucene.queries.TermsFilter$1 $r1;

        r0 := @this: org.apache.lucene.queries.TermsFilter;

        r2 := @parameter0: java.util.List;

        $r1 = new org.apache.lucene.queries.TermsFilter$1;

        specialinvoke $r1.<org.apache.lucene.queries.TermsFilter$1: void <init>(java.util.List)>(r2);

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        specialinvoke r0.<org.apache.lucene.queries.TermsFilter: void <init>(org.apache.lucene.queries.TermsFilter$FieldAndTermEnum,int)>($r1, $i0);

        return;
    }

    public void <init>(java.lang.String, java.util.List)
    {
        org.apache.lucene.queries.TermsFilter r0;
        java.util.List r3;
        int $i0;
        org.apache.lucene.queries.TermsFilter$2 $r1;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.queries.TermsFilter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = new org.apache.lucene.queries.TermsFilter$2;

        specialinvoke $r1.<org.apache.lucene.queries.TermsFilter$2: void <init>(java.lang.String,java.util.List)>(r2, r3);

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke r0.<org.apache.lucene.queries.TermsFilter: void <init>(org.apache.lucene.queries.TermsFilter$FieldAndTermEnum,int)>($r1, $i0);

        return;
    }

    public transient void <init>(java.lang.String, org.apache.lucene.util.BytesRef[])
    {
        org.apache.lucene.queries.TermsFilter r0;
        java.util.List $r3;
        org.apache.lucene.util.BytesRef[] r2;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.queries.TermsFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.util.BytesRef[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        specialinvoke r0.<org.apache.lucene.queries.TermsFilter: void <init>(java.lang.String,java.util.List)>(r1, $r3);

        return;
    }

    public transient void <init>(org.apache.lucene.index.Term[])
    {
        org.apache.lucene.queries.TermsFilter r0;
        java.util.List $r2;
        org.apache.lucene.index.Term[] r1;

        r0 := @this: org.apache.lucene.queries.TermsFilter;

        r1 := @parameter0: org.apache.lucene.index.Term[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke r0.<org.apache.lucene.queries.TermsFilter: void <init>(java.util.List)>($r2);

        return;
    }

    private void <init>(org.apache.lucene.queries.TermsFilter$FieldAndTermEnum, int)
    {
        byte[] $r6, $r11, r15;
        int[] $r1, $r4, $r12;
        boolean $z0, $z1;
        org.apache.lucene.util.BytesRef r17, $r19;
        org.apache.lucene.queries.TermsFilter$TermsAndField[] $r7, $r9;
        org.apache.lucene.queries.TermsFilter$TermsAndField $r5, $r13, r16;
        java.lang.Object[] $r8;
        java.util.ArrayList $r2;
        org.apache.lucene.queries.TermsFilter r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String $r10, r18;
        org.apache.lucene.queries.TermsFilter$FieldAndTermEnum r3;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: org.apache.lucene.queries.TermsFilter;

        r3 := @parameter0: org.apache.lucene.queries.TermsFilter$FieldAndTermEnum;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.search.Filter: void <init>()>();

        i8 = 9;

        r15 = newarray (byte)[0];

        $i1 = i0 + 1;

        $r1 = newarray (int)[$i1];

        r0.<org.apache.lucene.queries.TermsFilter: int[] offsets> = $r1;

        i9 = 0;

        i10 = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r16 = null;

        r17 = null;

        r18 = null;

     label01:
        $r19 = virtualinvoke r3.<org.apache.lucene.queries.TermsFilter$FieldAndTermEnum: org.apache.lucene.util.BytesRef next()>();

        if $r19 == null goto label08;

        $r10 = virtualinvoke r3.<org.apache.lucene.queries.TermsFilter$FieldAndTermEnum: java.lang.String field()>();

        if $r10 != null goto label02;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field must not be null");

        throw $r14;

     label02:
        if r18 == null goto label06;

        $z0 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label03;

        $z1 = virtualinvoke r17.<org.apache.lucene.util.BytesRef: boolean bytesEquals(org.apache.lucene.util.BytesRef)>($r19);

        if $z1 == 0 goto label06;

        goto label01;

     label03:
        if r16 != null goto label04;

        $i11 = 0;

        goto label05;

     label04:
        $i11 = r16.<org.apache.lucene.queries.TermsFilter$TermsAndField: int end>;

     label05:
        $r13 = new org.apache.lucene.queries.TermsFilter$TermsAndField;

        specialinvoke $r13.<org.apache.lucene.queries.TermsFilter$TermsAndField: void <init>(int,int,java.lang.String)>($i11, i10, r18);

        r16 = $r13;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label06:
        $i12 = 31 * i8;

        $i13 = virtualinvoke $r10.<java.lang.String: int hashCode()>();

        $i14 = $i12 + $i13;

        $i15 = 31 * $i14;

        $i16 = virtualinvoke $r19.<org.apache.lucene.util.BytesRef: int hashCode()>();

        i8 = $i15 + $i16;

        $i17 = lengthof r15;

        $i18 = $r19.<org.apache.lucene.util.BytesRef: int length>;

        $i19 = i9 + $i18;

        if $i17 >= $i19 goto label07;

        $i6 = $r19.<org.apache.lucene.util.BytesRef: int length>;

        $i7 = i9 + $i6;

        r15 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>(r15, $i7);

     label07:
        $r11 = $r19.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i4 = $r19.<org.apache.lucene.util.BytesRef: int offset>;

        $i3 = $r19.<org.apache.lucene.util.BytesRef: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i4, r15, i9, $i3);

        $r12 = r0.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $r12[i10] = i9;

        $i5 = $r19.<org.apache.lucene.util.BytesRef: int length>;

        i9 = i9 + $i5;

        i10 = i10 + 1;

        r17 = $r19;

        r18 = $r10;

        goto label01;

     label08:
        $r4 = r0.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $r4[i10] = i9;

        if r16 != null goto label09;

        $i20 = 0;

        goto label10;

     label09:
        $i20 = r16.<org.apache.lucene.queries.TermsFilter$TermsAndField: int end>;

     label10:
        $r5 = new org.apache.lucene.queries.TermsFilter$TermsAndField;

        specialinvoke $r5.<org.apache.lucene.queries.TermsFilter$TermsAndField: void <init>(int,int,java.lang.String)>($i20, i10, r18);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] shrink(byte[],int)>(r15, i9);

        r0.<org.apache.lucene.queries.TermsFilter: byte[] termsBytes> = $r6;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r7 = newarray (org.apache.lucene.queries.TermsFilter$TermsAndField)[$i2];

        $r8 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (org.apache.lucene.queries.TermsFilter$TermsAndField[]) $r8;

        r0.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields> = $r9;

        r0.<org.apache.lucene.queries.TermsFilter: int hashCode> = i8;

        return;
    }

    public org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        byte[] $r5;
        org.apache.lucene.index.Fields $r2;
        int[] $r11, $r12, $r13;
        org.apache.lucene.index.TermsEnum $r10, r18;
        boolean $z0;
        org.apache.lucene.index.Terms $r9;
        org.apache.lucene.util.BytesRef $r3;
        org.apache.lucene.queries.TermsFilter$TermsAndField[] r6;
        org.apache.lucene.queries.TermsFilter$TermsAndField r7;
        org.apache.lucene.index.AtomicReader $r1;
        org.apache.lucene.util.FixedBitSet $r16, r17;
        org.apache.lucene.queries.TermsFilter r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13;
        java.lang.String $r8;
        org.apache.lucene.util.Bits r14;
        org.apache.lucene.index.DocsEnum $r15, r19;
        org.apache.lucene.index.AtomicReaderContext r0;

        r4 := @this: org.apache.lucene.queries.TermsFilter;

        r0 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        r14 := @parameter1: org.apache.lucene.util.Bits;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        r17 = null;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        $r3 = new org.apache.lucene.util.BytesRef;

        $r5 = r4.<org.apache.lucene.queries.TermsFilter: byte[] termsBytes>;

        specialinvoke $r3.<org.apache.lucene.util.BytesRef: void <init>(byte[])>($r5);

        if $r2 != null goto label1;

        return null;

     label1:
        r18 = null;

        r19 = null;

        r6 = r4.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        i0 = lengthof r6;

        i11 = 0;

     label2:
        if i11 >= i0 goto label7;

        r7 = r6[i11];

        $r8 = r7.<org.apache.lucene.queries.TermsFilter$TermsAndField: java.lang.String field>;

        $r9 = virtualinvoke $r2.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>($r8);

        if $r9 == null goto label6;

        $r10 = virtualinvoke $r9.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(r18);

        r18 = $r10;

        i12 = r7.<org.apache.lucene.queries.TermsFilter$TermsAndField: int start>;

     label3:
        $i1 = r7.<org.apache.lucene.queries.TermsFilter$TermsAndField: int end>;

        if i12 >= $i1 goto label6;

        $r11 = r4.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $i2 = $r11[i12];

        $r3.<org.apache.lucene.util.BytesRef: int offset> = $i2;

        $r12 = r4.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $i3 = i12 + 1;

        $i5 = $r12[$i3];

        $r13 = r4.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $i4 = $r13[i12];

        $i6 = $i5 - $i4;

        $r3.<org.apache.lucene.util.BytesRef: int length> = $i6;

        $z0 = virtualinvoke $r10.<org.apache.lucene.index.TermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>($r3, 0);

        if $z0 == 0 goto label5;

        $r15 = virtualinvoke $r10.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(r14, r19, 0);

        r19 = $r15;

        if r17 != null goto label4;

        $i8 = virtualinvoke $r15.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i8 == 2147483647 goto label4;

        $r16 = new org.apache.lucene.util.FixedBitSet;

        $i9 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        specialinvoke $r16.<org.apache.lucene.util.FixedBitSet: void <init>(int)>($i9);

        r17 = $r16;

        $i10 = virtualinvoke $r15.<org.apache.lucene.index.DocsEnum: int docID()>();

        virtualinvoke $r16.<org.apache.lucene.util.FixedBitSet: void set(int)>($i10);

     label4:
        $i13 = virtualinvoke $r15.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i13 == 2147483647 goto label5;

        $i7 = virtualinvoke $r15.<org.apache.lucene.index.DocsEnum: int docID()>();

        virtualinvoke r17.<org.apache.lucene.util.FixedBitSet: void set(int)>($i7);

        goto label4;

     label5:
        i12 = i12 + 1;

        goto label3;

     label6:
        i11 = i11 + 1;

        goto label2;

     label7:
        return r17;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] r10, r15;
        org.apache.lucene.queries.TermsFilter r0, r4;
        byte $b6, $b7;
        int[] $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, i8, i9, i10, $i11, $i12;
        boolean $z0;
        org.apache.lucene.queries.TermsFilter$TermsAndField[] $r5, $r6, $r7, $r8, $r11, $r12;
        org.apache.lucene.queries.TermsFilter$TermsAndField $r13, r14;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.lucene.queries.TermsFilter;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 == null goto label02;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

     label02:
        return 0;

     label03:
        r4 = (org.apache.lucene.queries.TermsFilter) r1;

        $i1 = r4.<org.apache.lucene.queries.TermsFilter: int hashCode>;

        $i0 = r0.<org.apache.lucene.queries.TermsFilter: int hashCode>;

        if $i1 != $i0 goto label10;

        $r5 = r0.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        $i3 = lengthof $r5;

        $r6 = r4.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        $i2 = lengthof $r6;

        if $i3 != $i2 goto label10;

        i8 = 0;

     label04:
        $r7 = r0.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        $i4 = lengthof $r7;

        if i8 >= $i4 goto label06;

        $r11 = r0.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        r14 = $r11[i8];

        $r12 = r4.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        $r13 = $r12[i8];

        $z0 = virtualinvoke r14.<org.apache.lucene.queries.TermsFilter$TermsAndField: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label05;

        return 0;

     label05:
        i8 = i8 + 1;

        goto label04;

     label06:
        $r9 = r0.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $r8 = r0.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        $i5 = lengthof $r8;

        i9 = $r9[$i5];

        r15 = r0.<org.apache.lucene.queries.TermsFilter: byte[] termsBytes>;

        r10 = r4.<org.apache.lucene.queries.TermsFilter: byte[] termsBytes>;

        i10 = 0;

     label07:
        if i10 >= i9 goto label09;

        $b7 = r15[i10];

        $b6 = r10[i10];

        $i11 = (int) $b7;

        $i12 = (int) $b6;

        if $i11 == $i12 goto label08;

        return 0;

     label08:
        i10 = i10 + 1;

        goto label07;

     label09:
        return 1;

     label10:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.lucene.queries.TermsFilter r0;

        r0 := @this: org.apache.lucene.queries.TermsFilter;

        $i0 = r0.<org.apache.lucene.queries.TermsFilter: int hashCode>;

        return $i0;
    }

    public java.lang.String toString()
    {
        byte[] $r3;
        org.apache.lucene.queries.TermsFilter r2;
        int[] $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.String $r5, $r11, $r13;
        boolean z0;
        org.apache.lucene.util.BytesRef $r1;
        org.apache.lucene.queries.TermsFilter$TermsAndField[] $r4, $r6;
        org.apache.lucene.queries.TermsFilter$TermsAndField r7;
        java.lang.StringBuilder $r0, $r12;

        r2 := @this: org.apache.lucene.queries.TermsFilter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = new org.apache.lucene.util.BytesRef;

        $r3 = r2.<org.apache.lucene.queries.TermsFilter: byte[] termsBytes>;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>(byte[])>($r3);

        z0 = 1;

        i7 = 0;

     label1:
        $r4 = r2.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        $i0 = lengthof $r4;

        if i7 >= $i0 goto label5;

        $r6 = r2.<org.apache.lucene.queries.TermsFilter: org.apache.lucene.queries.TermsFilter$TermsAndField[] termsAndFields>;

        r7 = $r6[i7];

        i8 = r7.<org.apache.lucene.queries.TermsFilter$TermsAndField: int start>;

     label2:
        $i1 = r7.<org.apache.lucene.queries.TermsFilter$TermsAndField: int end>;

        if i8 >= $i1 goto label4;

        $r8 = r2.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $i2 = $r8[i8];

        $r1.<org.apache.lucene.util.BytesRef: int offset> = $i2;

        $r9 = r2.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $i3 = i8 + 1;

        $i5 = $r9[$i3];

        $r10 = r2.<org.apache.lucene.queries.TermsFilter: int[] offsets>;

        $i4 = $r10[i8];

        $i6 = $i5 - $i4;

        $r1.<org.apache.lucene.util.BytesRef: int length> = $i6;

        if z0 != 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label3:
        z0 = 0;

        $r11 = r7.<org.apache.lucene.queries.TermsFilter$TermsAndField: java.lang.String field>;

        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r13 = virtualinvoke $r1.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        i8 = i8 + 1;

        goto label2;

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.util.List sort(java.util.List)
    {
        java.util.List r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no terms provided");

        throw $r1;

     label1:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r0);

        return r0;
    }

    static java.util.List access$000(java.util.List)
    {
        java.util.List r0, $r1;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <org.apache.lucene.queries.TermsFilter: java.util.List sort(java.util.List)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.queries.TermsFilter: int PRIME> = 31;

        return;
    }
}
