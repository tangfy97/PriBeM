public class org.jdesktop.swingx.event.WeakEventListenerList extends java.lang.Object implements java.io.Serializable
{
    protected transient java.util.List weakReferences;
    protected transient java.util.List classes;

    public void <init>()
    {
        org.jdesktop.swingx.event.WeakEventListenerList r0;

        r0 := @this: org.jdesktop.swingx.event.WeakEventListenerList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object[] getListenerList()
    {
        java.lang.Object[] r2;
        java.util.List $r1, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object $r3, $r5;
        org.jdesktop.swingx.event.WeakEventListenerList r0;

        r0 := @this: org.jdesktop.swingx.event.WeakEventListenerList;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List cleanReferences()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 * 2;

        r2 = newarray (java.lang.Object)[$i1];

        i6 = 0;

     label1:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i6 >= $i2 goto label2;

        $i3 = 2 * i6;

        $i4 = $i3 + 1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i6);

        r2[$i4] = $r3;

        $i5 = 2 * i6;

        $r4 = specialinvoke r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getClasses()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i6);

        r2[$i5] = $r5;

        i6 = i6 + 1;

        goto label1;

     label2:
        return r2;
    }

    private synchronized java.util.List cleanReferences()
    {
        java.util.ArrayList $r10;
        java.util.EventListener $r7;
        java.util.List $r2, $r3, $r8, $r9;
        int $i0, i1, $i3;
        java.lang.Object $r4, $r6;
        org.jdesktop.swingx.event.WeakEventListenerList r1;
        java.lang.ref.WeakReference $r5;

        r1 := @this: org.jdesktop.swingx.event.WeakEventListenerList;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r2 = specialinvoke r1.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getReferences()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r3 = specialinvoke r1.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getReferences()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (java.lang.ref.WeakReference) $r4;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r6 != null goto label2;

        $r8 = specialinvoke r1.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getReferences()>();

        interfaceinvoke $r8.<java.util.List: java.lang.Object remove(int)>(i1);

        $r9 = specialinvoke r1.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getClasses()>();

        interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>(i1);

        goto label3;

     label2:
        $r7 = (java.util.EventListener) $r6;

        interfaceinvoke $r10.<java.util.List: void add(int,java.lang.Object)>(0, $r7);

     label3:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label4:
        return $r10;
    }

    private java.util.List getReferences()
    {
        java.util.List $r1, $r2;
        org.jdesktop.swingx.event.WeakEventListenerList r0;
        java.util.ArrayList $r3;

        r0 := @this: org.jdesktop.swingx.event.WeakEventListenerList;

        $r1 = r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List weakReferences>;

        if $r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List weakReferences> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List weakReferences>;

        return $r2;
    }

    private java.util.List getClasses()
    {
        java.util.List $r1, $r2;
        org.jdesktop.swingx.event.WeakEventListenerList r0;
        java.util.ArrayList $r3;

        r0 := @this: org.jdesktop.swingx.event.WeakEventListenerList;

        $r1 = r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List classes>;

        if $r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List classes> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List classes>;

        return $r2;
    }

    public java.util.EventListener[] getListeners(java.lang.Class)
    {
        java.util.EventListener[] $r5, $r7, r11;
        java.lang.Object[] $r6;
        java.util.ArrayList $r2;
        java.util.List $r1, $r8;
        int $i0, $i1, i2;
        java.lang.Class r3;
        java.lang.Object $r4, $r9, $r10;
        org.jdesktop.swingx.event.WeakEventListenerList r0;

        r0 := @this: org.jdesktop.swingx.event.WeakEventListenerList;

        r3 := @parameter0: java.lang.Class;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List cleanReferences()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r8 = specialinvoke r0.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getClasses()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i2);

        if $r9 != r3 goto label2;

        $r10 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i2);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r3, $i1);

        $r5 = (java.util.EventListener[]) $r4;

        r11 = (java.util.EventListener[]) $r5;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r11);

        $r7 = (java.util.EventListener[]) $r6;

        return $r7;
    }

    public synchronized void add(java.lang.Class, java.util.EventListener)
    {
        java.lang.IllegalArgumentException $r6;
        java.util.EventListener r0;
        java.util.List $r3, $r5;
        java.lang.Class r1;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        org.jdesktop.swingx.event.WeakEventListenerList r2;
        java.lang.String $r12;
        java.lang.ref.WeakReference $r4;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.event.WeakEventListenerList;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.util.EventListener;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listener ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not of type ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label2:
        specialinvoke r2.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List cleanReferences()>();

        $r3 = specialinvoke r2.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getReferences()>();

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = specialinvoke r2.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getClasses()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public synchronized void remove(java.lang.Class, java.util.EventListener)
    {
        int $i0, i1;
        org.jdesktop.swingx.event.WeakEventListenerList r2;
        java.lang.String $r18;
        java.lang.ref.WeakReference $r6;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r12;
        java.util.EventListener r0;
        java.util.List $r3, $r4, $r8, $r10, $r11;
        java.lang.Class r1;
        java.lang.Object $r5, $r7, $r9;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17;

        r2 := @this: org.jdesktop.swingx.event.WeakEventListenerList;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.util.EventListener;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listener ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not of type ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label2:
        i1 = 0;

     label3:
        $r3 = specialinvoke r2.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getReferences()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label5;

        $r4 = specialinvoke r2.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getReferences()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (java.lang.ref.WeakReference) $r5;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $r8 = specialinvoke r2.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getClasses()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        if r1 != $r9 goto label4;

        $r10 = specialinvoke r2.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getReferences()>();

        interfaceinvoke $r10.<java.util.List: java.lang.Object remove(int)>(i1);

        $r11 = specialinvoke r2.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.List getClasses()>();

        interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>(i1);

        goto label5;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return;
    }
}
