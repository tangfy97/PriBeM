class org.waveprotocol.wave.model.document.MutableDocumentImpl$2 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringMap$ProcV
{
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer val$annotOp;
    final org.waveprotocol.wave.model.document.MutableDocumentImpl this$0;

    void <init>(org.waveprotocol.wave.model.document.MutableDocumentImpl, org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer)
    {
        org.waveprotocol.wave.model.document.MutableDocumentImpl$2 r0;
        org.waveprotocol.wave.model.document.MutableDocumentImpl r1;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r2;

        r0 := @this: org.waveprotocol.wave.model.document.MutableDocumentImpl$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.MutableDocumentImpl;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r0.<org.waveprotocol.wave.model.document.MutableDocumentImpl$2: org.waveprotocol.wave.model.document.MutableDocumentImpl this$0> = r1;

        r0.<org.waveprotocol.wave.model.document.MutableDocumentImpl$2: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer val$annotOp> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String, java.lang.Object)
    {
        java.lang.AssertionError $r6;
        java.lang.Object r0;
        org.waveprotocol.wave.model.document.MutableDocumentImpl$2 r1;
        java.lang.String r2, $r4;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer $r3, $r5;

        r1 := @this: org.waveprotocol.wave.model.document.MutableDocumentImpl$2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = <org.waveprotocol.wave.model.document.MutableDocumentImpl$2: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 == null goto label1;

        $z1 = r0 instanceof java.lang.String;

        if $z1 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        if r0 == null goto label2;

        $r5 = r1.<org.waveprotocol.wave.model.document.MutableDocumentImpl$2: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer val$annotOp>;

        $r4 = (java.lang.String) r0;

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void startAnnotation(java.lang.String,java.lang.String,java.lang.String)>(r2, null, $r4);

        goto label3;

     label2:
        $r3 = r1.<org.waveprotocol.wave.model.document.MutableDocumentImpl$2: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer val$annotOp>;

        virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void endAnnotation(java.lang.String)>(r2);

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/MutableDocumentImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.MutableDocumentImpl$2: boolean $assertionsDisabled> = $z1;

        return;
    }
}
