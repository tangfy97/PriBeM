public class org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider extends java.lang.Object implements javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String STRICT_MEDIA_TYPE_CHECK;
    private static final java.util.regex.Pattern COMPLEX_PARAMETERS;

    public void <init>()
    {
        org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.ws.rs.core.MediaType fromString(java.lang.String)
    {
        javax.ws.rs.core.MediaType $r1;
        java.lang.String r0;
        org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider r2;

        r2 := @this: org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: javax.ws.rs.core.MediaType valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static javax.ws.rs.core.MediaType valueOf(java.lang.String)
    {
        javax.ws.rs.core.MediaType $r12, $r23;
        java.util.regex.Matcher $r8;
        java.util.Map r14;
        boolean $z0, $z1, $z2;
        java.util.regex.Pattern $r7;
        java.util.LinkedHashMap $r21;
        java.util.StringTokenizer $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        java.lang.String r0, $r1, $r2, $r4, $r6, $r9, $r10, $r11, $r16, $r17, $r18, $r19;
        java.lang.IllegalArgumentException $r20;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Media type value can not be null");

        throw $r20;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i7 = (int) -1;

        if $i0 != $i7 goto label2;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r12 = staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)>($r11);

        return $r12;

     label2:
        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, $i1);

        $i9 = (int) -1;

        if $i2 != $i9 goto label3;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label4;

     label3:
        $i5 = $i2;

     label4:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i3 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i5);

        r14 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $i11 = (int) -1;

        if $i2 == $i11 goto label9;

        $r21 = new java.util.LinkedHashMap;

        specialinvoke $r21.<java.util.LinkedHashMap: void <init>()>();

        r14 = $r21;

        $i4 = $i2 + 1;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("\"");

        if $z0 == 0 goto label7;

        $r7 = <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.util.regex.Pattern COMPLEX_PARAMETERS>;

        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

     label5:
        $z2 = virtualinvoke $r8.<java.util.regex.Matcher: boolean find()>();

        if $z2 == 0 goto label6;

        $r9 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String group()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: void addParameter(java.util.Map,java.lang.String)>($r21, $r10);

        goto label5;

     label6:
        goto label9;

     label7:
        $r22 = new java.util.StringTokenizer;

        specialinvoke $r22.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r4, ";");

     label8:
        $z1 = virtualinvoke $r22.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label9;

        $r6 = virtualinvoke $r22.<java.util.StringTokenizer: java.lang.String nextToken()>();

        staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: void addParameter(java.util.Map,java.lang.String)>($r21, $r6);

        goto label8;

     label9:
        $r23 = new javax.ws.rs.core.MediaType;

        $r16 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String toLowerCase()>();

        $r18 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String toLowerCase()>();

        specialinvoke $r23.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String,java.util.Map)>($r17, $r19, r14);

        return $r23;
    }

    private static void addParameter(java.util.Map, java.lang.String)
    {
        java.lang.IllegalArgumentException $r8;
        java.util.Map r1;
        int $i0, $i1, $i3;
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6;

        r1 := @parameter0: java.util.Map;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(61);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Wrong media type parameter, separator is missing");

        throw $r8;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = $i0 + 1;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        return;
    }

    public java.lang.String toString(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.String $r1;
        org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider r2;

        r2 := @this: org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.lang.String typeToString(javax.ws.rs.core.MediaType)>(r0);

        return $r1;
    }

    public static java.lang.String typeToString(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.String $r1;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.lang.String typeToString(javax.ws.rs.core.MediaType,java.util.List)>(r0, null);

        return $r1;
    }

    public static java.lang.String typeToString(javax.ws.rs.core.MediaType, java.util.List)
    {
        javax.ws.rs.core.MediaType r1;
        java.util.Map $r6;
        java.lang.String $r2, $r5, $r7, $r15, $r19;
        boolean $z0, $z1;
        java.util.Map$Entry r11;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.util.List r12;
        java.lang.StringBuilder $r0, $r3, $r4, $r13, $r16, $r17;
        java.lang.Object $r10, $r14, $r18, $r20;

        r1 := @parameter0: javax.ws.rs.core.MediaType;

        r12 := @parameter1: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r5 = virtualinvoke r1.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        if $r6 == null goto label3;

        $r8 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        if r12 == null goto label2;

        $r20 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>($r20);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r14 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r14;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r18 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.lang.String) $r18;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        goto label1;

     label3:
        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)
    {
        javax.ws.rs.core.MediaType $r4, $r6, $r9, $r14, r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.logging.Logger $r18;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r24, $r25;
        java.util.LinkedHashMap $r10;
        java.util.StringTokenizer $r11;
        int $i0;
        java.lang.String r0, $r5, $r7, $r8, $r12, $r13, $r15, $r16, $r23, $r26;
        org.apache.cxf.message.Message $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z0 == 0 goto label07;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label01;

        $r16 = "";

        goto label02;

     label01:
        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r16 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

     label02:
        $z4 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r16);

        if $z4 != 0 goto label03;

        $z6 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>(";");

        if $z6 == 0 goto label07;

     label03:
        if $z4 != 0 goto label06;

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        $r11 = new java.util.StringTokenizer;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r13, ";");

     label04:
        $z5 = virtualinvoke $r11.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z5 == 0 goto label05;

        $r15 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: void addParameter(java.util.Map,java.lang.String)>($r10, $r15);

        goto label04;

     label05:
        $r14 = new javax.ws.rs.core.MediaType;

        specialinvoke $r14.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String,java.util.Map)>("*", "*", $r10);

        return $r14;

     label06:
        $r9 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

        return $r9;

     label07:
        $r1 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        if $r1 == null goto label11;

        $r3 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.jaxrs.mediaTypeCheck.strict");

        $z1 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r3);

        if $z1 != 0 goto label11;

        $r4 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType TEXT_PLAIN_TYPE>;

        $r5 = virtualinvoke $r4.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label08;

        r17 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType TEXT_PLAIN_TYPE>;

        goto label10;

     label08:
        $r6 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_XML_TYPE>;

        $r7 = virtualinvoke $r6.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label09;

        r17 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_XML_TYPE>;

        goto label10;

     label09:
        r17 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

     label10:
        $r18 = <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.util.logging.Logger LOG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting a malformed media type \'");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to \'");

        $r23 = staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.lang.String typeToString(javax.ws.rs.core.MediaType)>(r17);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.util.logging.Logger: void fine(java.lang.String)>($r26);

        return r17;

     label11:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Media type separator is missing");

        throw $r2;
    }

    public volatile java.lang.String toString(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.MediaType $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.ws.rs.core.MediaType) r1;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.lang.String toString(javax.ws.rs.core.MediaType)>($r2);

        return $r3;
    }

    public volatile java.lang.Object fromString(java.lang.String) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.MediaType $r2;
        java.lang.String r1;
        org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: javax.ws.rs.core.MediaType fromString(java.lang.String)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r1;
        java.util.logging.Logger $r0;

        <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.lang.String STRICT_MEDIA_TYPE_CHECK> = "org.apache.cxf.jaxrs.mediaTypeCheck.strict";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/impl/MediaTypeHeaderProvider;");

        <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(([\\w-]+=\"[^\"]*\")|([\\w-]+=[\\w-/]+))");

        <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.util.regex.Pattern COMPLEX_PARAMETERS> = $r1;

        return;
    }
}
