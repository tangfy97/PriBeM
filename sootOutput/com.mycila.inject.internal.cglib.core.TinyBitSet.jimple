public class com.mycila.inject.internal.cglib.core.TinyBitSet extends java.lang.Object
{
    private static int[] T;
    private int value;

    public void <init>()
    {
        com.mycila.inject.internal.cglib.core.TinyBitSet r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.TinyBitSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.core.TinyBitSet: int value> = 0;

        return;
    }

    private static int gcount(int)
    {
        int $i0, i1, i2;

        i1 := @parameter0: int;

        i2 = 0;

     label1:
        if i1 == 0 goto label2;

        i2 = i2 + 1;

        $i0 = i1 - 1;

        i1 = i1 & $i0;

        goto label1;

     label2:
        return i2;
    }

    private static int topbit(int)
    {
        int $i0, i1, i2;

        i1 := @parameter0: int;

        i2 = 0;

     label1:
        if i1 == 0 goto label2;

        $i0 = neg i1;

        i2 = i1 & $i0;

        i1 = i1 ^ i2;

        goto label1;

     label2:
        return i2;
    }

    private static int log2(int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i0 == 0 goto label2;

        i1 = i1 + 1;

        i0 = i0 >> 1;

        goto label1;

     label2:
        return i1;
    }

    public int length()
    {
        int $i0, $i1, $i2;
        com.mycila.inject.internal.cglib.core.TinyBitSet r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.TinyBitSet;

        $i0 = r0.<com.mycila.inject.internal.cglib.core.TinyBitSet: int value>;

        $i1 = staticinvoke <com.mycila.inject.internal.cglib.core.TinyBitSet: int topbit(int)>($i0);

        $i2 = staticinvoke <com.mycila.inject.internal.cglib.core.TinyBitSet: int log2(int)>($i1);

        return $i2;
    }

    public int cardinality()
    {
        int[] $r1;
        int $i0, $i1, i2, i3;
        com.mycila.inject.internal.cglib.core.TinyBitSet r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.TinyBitSet;

        i2 = r0.<com.mycila.inject.internal.cglib.core.TinyBitSet: int value>;

        i3 = 0;

     label1:
        if i2 == 0 goto label2;

        $r1 = <com.mycila.inject.internal.cglib.core.TinyBitSet: int[] T>;

        $i0 = i2 & 255;

        $i1 = $r1[$i0];

        i3 = i3 + $i1;

        i2 = i2 >> 8;

        goto label1;

     label2:
        return i3;
    }

    public boolean get(int)
    {
        int i0, $i1, $i2, $i3;
        com.mycila.inject.internal.cglib.core.TinyBitSet r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.core.TinyBitSet;

        i0 := @parameter0: int;

        $i2 = r0.<com.mycila.inject.internal.cglib.core.TinyBitSet: int value>;

        $i1 = 1 << i0;

        $i3 = $i2 & $i1;

        if $i3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void set(int)
    {
        int i0, $i1, $i2, $i3;
        com.mycila.inject.internal.cglib.core.TinyBitSet r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.TinyBitSet;

        i0 := @parameter0: int;

        $i2 = r0.<com.mycila.inject.internal.cglib.core.TinyBitSet: int value>;

        $i1 = 1 << i0;

        $i3 = $i2 | $i1;

        r0.<com.mycila.inject.internal.cglib.core.TinyBitSet: int value> = $i3;

        return;
    }

    public void clear(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i6;
        com.mycila.inject.internal.cglib.core.TinyBitSet r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.TinyBitSet;

        i0 := @parameter0: int;

        $i3 = r0.<com.mycila.inject.internal.cglib.core.TinyBitSet: int value>;

        $i1 = 1 << i0;

        $i6 = (int) -1;

        $i2 = $i1 ^ $i6;

        $i4 = $i3 & $i2;

        r0.<com.mycila.inject.internal.cglib.core.TinyBitSet: int value> = $i4;

        return;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;
        int $i0, i1;

        $r0 = newarray (int)[256];

        <com.mycila.inject.internal.cglib.core.TinyBitSet: int[] T> = $r0;

        i1 = 0;

     label1:
        if i1 >= 256 goto label2;

        $r1 = <com.mycila.inject.internal.cglib.core.TinyBitSet: int[] T>;

        $i0 = staticinvoke <com.mycila.inject.internal.cglib.core.TinyBitSet: int gcount(int)>(i1);

        $r1[i1] = $i0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
