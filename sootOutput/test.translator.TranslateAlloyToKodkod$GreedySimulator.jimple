final class test.translator.TranslateAlloyToKodkod$GreedySimulator extends test.translator.Simplifier
{
    private java.util.List totalOrderPredicates;
    private java.lang.Iterable allSigs;
    private edu.mit.csail.sdg.alloy4.ConstList growableSigs;
    private test.translator.A4Solution partial;

    public void <init>()
    {
        test.translator.TranslateAlloyToKodkod$GreedySimulator r0;

        r0 := @this: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        specialinvoke r0.<test.translator.Simplifier: void <init>()>();

        r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates> = null;

        r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.lang.Iterable allSigs> = null;

        r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: edu.mit.csail.sdg.alloy4.ConstList growableSigs> = null;

        r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: test.translator.A4Solution partial> = null;

        return;
    }

    private kodkod.instance.TupleSet convert(kodkod.instance.TupleFactory, edu.mit.csail.sdg.alloy4compiler.ast.Expr) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Object[] $r11, $r14;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r1;
        test.translator.A4Solution $r2;
        int $i0, i1, $i2;
        test.translator.TranslateAlloyToKodkod$GreedySimulator r0;
        kodkod.instance.TupleFactory r6;
        kodkod.instance.TupleSet $r5, $r7;
        boolean $z0;
        kodkod.instance.Tuple r10, $r13, r16;
        test.translator.A4TupleSet $r4;
        java.util.Iterator $r8;
        java.lang.Object $r3, $r9, $r12, $r15;

        r0 := @this: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        r6 := @parameter0: kodkod.instance.TupleFactory;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r2 = r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: test.translator.A4Solution partial>;

        $r3 = virtualinvoke $r2.<test.translator.A4Solution: java.lang.Object eval(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r1);

        $r4 = (test.translator.A4TupleSet) $r3;

        $r5 = virtualinvoke $r4.<test.translator.A4TupleSet: kodkod.instance.TupleSet debugGetKodkodTupleset()>();

        $i0 = virtualinvoke $r5.<kodkod.instance.TupleSet: int arity()>();

        $r7 = virtualinvoke r6.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>($i0);

        $r8 = virtualinvoke $r5.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

        goto label6;

     label1:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (kodkod.instance.Tuple) $r9;

        r16 = null;

        i1 = 0;

        goto label5;

     label2:
        if r16 != null goto label3;

        $r14 = newarray (java.lang.Object)[1];

        $r15 = virtualinvoke r10.<kodkod.instance.Tuple: java.lang.Object atom(int)>(i1);

        $r14[0] = $r15;

        r16 = virtualinvoke r6.<kodkod.instance.TupleFactory: kodkod.instance.Tuple tuple(java.lang.Object[])>($r14);

        goto label4;

     label3:
        $r11 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r10.<kodkod.instance.Tuple: java.lang.Object atom(int)>(i1);

        $r11[0] = $r12;

        $r13 = virtualinvoke r6.<kodkod.instance.TupleFactory: kodkod.instance.Tuple tuple(java.lang.Object[])>($r11);

        r16 = virtualinvoke r16.<kodkod.instance.Tuple: kodkod.instance.Tuple product(kodkod.instance.Tuple)>($r13);

     label4:
        i1 = i1 + 1;

     label5:
        $i2 = virtualinvoke r10.<kodkod.instance.Tuple: int arity()>();

        if i1 < $i2 goto label2;

        virtualinvoke $r7.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r16);

     label6:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r7;
    }

    public boolean simplify(edu.mit.csail.sdg.alloy4.A4Reporter, test.translator.A4Solution, java.util.List) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.SafeList $r40, $r43, $r50, $r85;
        java.lang.Throwable $r76;
        test.translator.TranslateAlloyToKodkod$GreedySimulator r2;
        kodkod.instance.Tuple $r62, r79, r81, r82, r83, r88, r89, r90, r91;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r28;
        test.translator.A4Solution r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r3;
        edu.mit.csail.sdg.alloy4.A4Reporter r77;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field $r45, $r52, r87;
        kodkod.ast.Expression $r14, $r46, $r53, $r57;
        java.util.List $r41, $r48, $r55, $r63, $r68, $r73, r78, $r84;
        edu.mit.csail.sdg.alloy4.Pos $r12, $r15;
        kodkod.ast.Relation $r26, $r27, $r39, $r47, $r54, $r65, $r70, $r75;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r80;
        java.lang.Iterable $r9;
        java.util.HashSet $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, i14, i15, i16, i17;
        kodkod.instance.TupleFactory $r1;
        kodkod.instance.TupleSet $r4, $r16, $r17, $r18, $r22, $r29, $r30, $r31, $r35, $r58, $r59, $r66, $r67, $r71, $r72;
        java.util.Iterator $r6, $r10, $r19, $r23, $r32, $r36, $r60, $r86;
        java.lang.Object $r7, $r8, $r11, $r13, $r20, $r21, $r24, $r25, $r33, $r34, $r37, $r38, $r42, $r44, $r49, $r51, $r56, $r61, $r64, $r69, $r74;

        r2 := @this: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        r77 := @parameter0: edu.mit.csail.sdg.alloy4.A4Reporter;

        r0 := @parameter1: test.translator.A4Solution;

        r78 := @parameter2: java.util.List;

        $r1 = virtualinvoke r0.<test.translator.A4Solution: kodkod.instance.TupleFactory getFactory()>();

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $r4 = specialinvoke r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: kodkod.instance.TupleSet convert(kodkod.instance.TupleFactory,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r1, $r3);

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = virtualinvoke $r4.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

        goto label02;

     label01:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r79 = (kodkod.instance.Tuple) $r7;

        $r8 = virtualinvoke r79.<kodkod.instance.Tuple: java.lang.Object atom(int)>(0);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r8);

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label01;

        $r9 = r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.lang.Iterable allSigs>;

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label41;

     label03:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r80 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r11;

        $r12 = r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r12 == null goto label15;

        $r40 = virtualinvoke r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $i4 = virtualinvoke $r40.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        if $i4 != 2 goto label15;

        i11 = 0;

        goto label14;

     label04:
        $r41 = r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates>;

        $i5 = i11 + 1;

        $r42 = interfaceinvoke $r41.<java.util.List: java.lang.Object get(int)>($i5);

        $r43 = virtualinvoke r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r44 = virtualinvoke $r43.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(0);

        $r45 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r44;

        $r46 = virtualinvoke r0.<test.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field)>($r45);

        $r47 = staticinvoke <test.translator.TranslateAlloyToKodkod: kodkod.ast.Relation access$0(kodkod.ast.Expression)>($r46);

        if $r42 != $r47 goto label13;

        $r48 = r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates>;

        $i6 = i11 + 3;

        $r49 = interfaceinvoke $r48.<java.util.List: java.lang.Object get(int)>($i6);

        $r50 = virtualinvoke r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r51 = virtualinvoke $r50.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(1);

        $r52 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r51;

        $r53 = virtualinvoke r0.<test.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field)>($r52);

        $r54 = staticinvoke <test.translator.TranslateAlloyToKodkod: kodkod.ast.Relation access$0(kodkod.ast.Expression)>($r53);

        if $r49 != $r54 goto label13;

        $r55 = r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates>;

        $r56 = interfaceinvoke $r55.<java.util.List: java.lang.Object get(int)>(i11);

        $r57 = (kodkod.ast.Expression) $r56;

        $r58 = virtualinvoke r0.<test.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r57, 1);

        $i7 = virtualinvoke $r58.<kodkod.instance.TupleSet: int size()>();

        if $i7 != 0 goto label05;

        goto label13;

     label05:
        r81 = null;

        r82 = null;

        $r59 = virtualinvoke $r1.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(2);

        $r60 = virtualinvoke $r58.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

        goto label09;

     label06:
        $r61 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r83 = (kodkod.instance.Tuple) $r61;

        if r82 != null goto label07;

        r81 = r83;

        goto label08;

     label07:
        $r62 = virtualinvoke r82.<kodkod.instance.Tuple: kodkod.instance.Tuple product(kodkod.instance.Tuple)>(r83);

        virtualinvoke $r59.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>($r62);

     label08:
        r82 = r83;

     label09:
        $z8 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z8 != 0 goto label06;

     label10:
        $r63 = r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates>;

        $i8 = i11 + 1;

        $r64 = interfaceinvoke $r63.<java.util.List: java.lang.Object get(int)>($i8);

        $r65 = (kodkod.ast.Relation) $r64;

        $r66 = virtualinvoke $r1.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet range(kodkod.instance.Tuple,kodkod.instance.Tuple)>(r81, r81);

        $r67 = virtualinvoke $r1.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet range(kodkod.instance.Tuple,kodkod.instance.Tuple)>(r81, r81);

        virtualinvoke r0.<test.translator.A4Solution: void shrink(kodkod.ast.Relation,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r65, $r66, $r67);

        $r68 = r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates>;

        $i9 = i11 + 2;

        $r69 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>($i9);

        $r70 = (kodkod.ast.Relation) $r69;

        $r71 = virtualinvoke $r1.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet range(kodkod.instance.Tuple,kodkod.instance.Tuple)>(r82, r82);

        $r72 = virtualinvoke $r1.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet range(kodkod.instance.Tuple,kodkod.instance.Tuple)>(r82, r82);

        virtualinvoke r0.<test.translator.A4Solution: void shrink(kodkod.ast.Relation,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r70, $r71, $r72);

        $r73 = r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates>;

        $i10 = i11 + 3;

        $r74 = interfaceinvoke $r73.<java.util.List: java.lang.Object get(int)>($i10);

        $r75 = (kodkod.ast.Relation) $r74;

        virtualinvoke r0.<test.translator.A4Solution: void shrink(kodkod.ast.Relation,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r75, $r59, $r59);

     label11:
        goto label13;

     label12:
        $r76 := @caughtexception;

     label13:
        i11 = i11 + 4;

     label14:
        $i12 = i11 + 3;

        $r84 = r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates>;

        $i13 = interfaceinvoke $r84.<java.util.List: int size()>();

        if $i12 < $i13 goto label04;

     label15:
        $r85 = virtualinvoke r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r86 = virtualinvoke $r85.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label40;

     label16:
        $r13 = interfaceinvoke $r86.<java.util.Iterator: java.lang.Object next()>();

        r87 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r13;

        $r14 = virtualinvoke r0.<test.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field)>(r87);

        $r15 = r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r15 == null goto label28;

        $r27 = staticinvoke <test.translator.TranslateAlloyToKodkod: kodkod.ast.Relation access$0(kodkod.ast.Expression)>($r14);

        $z5 = $r27 instanceof kodkod.ast.Relation;

        if $z5 != 0 goto label17;

        goto label40;

     label17:
        $r28 = virtualinvoke r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r87);

        $r29 = specialinvoke r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: kodkod.instance.TupleSet convert(kodkod.instance.TupleFactory,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r1, $r28);

        $r30 = virtualinvoke $r29.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        $r31 = virtualinvoke r0.<test.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(0, $r27, 0);

        $r32 = virtualinvoke $r31.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

        goto label22;

     label18:
        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r88 = (kodkod.instance.Tuple) $r33;

        i14 = 0;

        goto label21;

     label19:
        $r34 = virtualinvoke r88.<kodkod.instance.Tuple: java.lang.Object atom(int)>(i14);

        $z6 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r34);

        if $z6 != 0 goto label20;

        virtualinvoke $r29.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r88);

        goto label22;

     label20:
        i14 = i14 + 1;

     label21:
        $i2 = virtualinvoke r88.<kodkod.instance.Tuple: int arity()>();

        if i14 < $i2 goto label19;

     label22:
        $z9 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z9 != 0 goto label18;

        $r35 = virtualinvoke r0.<test.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r27, 0);

        $r36 = virtualinvoke $r35.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

        goto label27;

     label23:
        $r37 = interfaceinvoke $r36.<java.util.Iterator: java.lang.Object next()>();

        r89 = (kodkod.instance.Tuple) $r37;

        i15 = 0;

        goto label26;

     label24:
        $r38 = virtualinvoke r89.<kodkod.instance.Tuple: java.lang.Object atom(int)>(i15);

        $z7 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r38);

        if $z7 != 0 goto label25;

        virtualinvoke $r30.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r89);

        goto label27;

     label25:
        i15 = i15 + 1;

     label26:
        $i3 = virtualinvoke r89.<kodkod.instance.Tuple: int arity()>();

        if i15 < $i3 goto label24;

     label27:
        $z10 = interfaceinvoke $r36.<java.util.Iterator: boolean hasNext()>();

        if $z10 != 0 goto label23;

        $r39 = (kodkod.ast.Relation) $r27;

        virtualinvoke r0.<test.translator.A4Solution: void shrink(kodkod.ast.Relation,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r39, $r29, $r30);

        goto label40;

     label28:
        $z2 = $r14 instanceof kodkod.ast.Relation;

        if $z2 != 0 goto label29;

        goto label40;

     label29:
        $r16 = specialinvoke r2.<test.translator.TranslateAlloyToKodkod$GreedySimulator: kodkod.instance.TupleSet convert(kodkod.instance.TupleFactory,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r1, r87);

        $r17 = virtualinvoke $r16.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        $r18 = virtualinvoke r0.<test.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(0, $r14, 0);

        $r19 = virtualinvoke $r18.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

        goto label34;

     label30:
        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r90 = (kodkod.instance.Tuple) $r20;

        i16 = 0;

        goto label33;

     label31:
        $r21 = virtualinvoke r90.<kodkod.instance.Tuple: java.lang.Object atom(int)>(i16);

        $z3 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r21);

        if $z3 != 0 goto label32;

        virtualinvoke $r16.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r90);

        goto label34;

     label32:
        i16 = i16 + 1;

     label33:
        $i0 = virtualinvoke r90.<kodkod.instance.Tuple: int arity()>();

        if i16 < $i0 goto label31;

     label34:
        $z11 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z11 != 0 goto label30;

        $r22 = virtualinvoke r0.<test.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r14, 0);

        $r23 = virtualinvoke $r22.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

        goto label39;

     label35:
        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r91 = (kodkod.instance.Tuple) $r24;

        i17 = 0;

        goto label38;

     label36:
        $r25 = virtualinvoke r91.<kodkod.instance.Tuple: java.lang.Object atom(int)>(i17);

        $z4 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r25);

        if $z4 != 0 goto label37;

        virtualinvoke $r17.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r91);

        goto label39;

     label37:
        i17 = i17 + 1;

     label38:
        $i1 = virtualinvoke r91.<kodkod.instance.Tuple: int arity()>();

        if i17 < $i1 goto label36;

     label39:
        $z12 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z12 != 0 goto label35;

        $r26 = (kodkod.ast.Relation) $r14;

        virtualinvoke r0.<test.translator.A4Solution: void shrink(kodkod.ast.Relation,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r26, $r16, $r17);

     label40:
        $z13 = interfaceinvoke $r86.<java.util.Iterator: boolean hasNext()>();

        if $z13 != 0 goto label16;

     label41:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label03;

        return 1;

        catch java.lang.Throwable from label10 to label11 with label12;
    }

    static void access$0(test.translator.TranslateAlloyToKodkod$GreedySimulator, java.lang.Iterable)
    {
        test.translator.TranslateAlloyToKodkod$GreedySimulator r0;
        java.lang.Iterable r1;

        r0 := @parameter0: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        r1 := @parameter1: java.lang.Iterable;

        r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.lang.Iterable allSigs> = r1;

        return;
    }

    static void access$1(test.translator.TranslateAlloyToKodkod$GreedySimulator, test.translator.A4Solution)
    {
        test.translator.A4Solution r1;
        test.translator.TranslateAlloyToKodkod$GreedySimulator r0;

        r0 := @parameter0: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        r1 := @parameter1: test.translator.A4Solution;

        r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: test.translator.A4Solution partial> = r1;

        return;
    }

    static void access$2(test.translator.TranslateAlloyToKodkod$GreedySimulator, edu.mit.csail.sdg.alloy4.ConstList)
    {
        edu.mit.csail.sdg.alloy4.ConstList r1;
        test.translator.TranslateAlloyToKodkod$GreedySimulator r0;

        r0 := @parameter0: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4.ConstList;

        r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: edu.mit.csail.sdg.alloy4.ConstList growableSigs> = r1;

        return;
    }

    static void access$3(test.translator.TranslateAlloyToKodkod$GreedySimulator, java.util.List)
    {
        java.util.List r1;
        test.translator.TranslateAlloyToKodkod$GreedySimulator r0;

        r0 := @parameter0: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        r1 := @parameter1: java.util.List;

        r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: java.util.List totalOrderPredicates> = r1;

        return;
    }

    static test.translator.A4Solution access$4(test.translator.TranslateAlloyToKodkod$GreedySimulator)
    {
        test.translator.A4Solution $r1;
        test.translator.TranslateAlloyToKodkod$GreedySimulator r0;

        r0 := @parameter0: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        $r1 = r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: test.translator.A4Solution partial>;

        return $r1;
    }

    static edu.mit.csail.sdg.alloy4.ConstList access$5(test.translator.TranslateAlloyToKodkod$GreedySimulator)
    {
        edu.mit.csail.sdg.alloy4.ConstList $r1;
        test.translator.TranslateAlloyToKodkod$GreedySimulator r0;

        r0 := @parameter0: test.translator.TranslateAlloyToKodkod$GreedySimulator;

        $r1 = r0.<test.translator.TranslateAlloyToKodkod$GreedySimulator: edu.mit.csail.sdg.alloy4.ConstList growableSigs>;

        return $r1;
    }
}
