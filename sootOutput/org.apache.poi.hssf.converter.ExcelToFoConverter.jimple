public class org.apache.poi.hssf.converter.ExcelToFoConverter extends org.apache.poi.hssf.converter.AbstractExcelConverter
{
    private static final float CM_PER_INCH;
    private static final float DPI;
    private static final org.apache.poi.util.POILogger logger;
    private static final float PAPER_A4_HEIGHT_INCHES;
    private static final float PAPER_A4_WIDTH_INCHES;
    private final org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade;
    private float pageMarginInches;

    public static void main(java.lang.String[])
    {
        javax.xml.transform.dom.DOMSource $r18;
        javax.xml.transform.Transformer $r21;
        javax.xml.transform.stream.StreamResult $r19;
        java.lang.String[] r0;
        org.w3c.dom.Document $r15;
        int $i0;
        java.lang.String $r4, $r6, $r10, $r12, $r14, $r17;
        java.io.PrintStream $r2, $r8, $r22;
        java.io.FileWriter $r16;
        java.io.File $r13;
        java.lang.Exception $r23;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11;
        javax.xml.transform.TransformerFactory $r20;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 2 goto label1;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Usage: ExcelToFoConverter <inputFile.xls> <saveTo.xml>");

        return;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting ");

        $r4 = r0[0];

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saving output to ");

        $r10 = r0[1];

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label2:
        $r13 = new java.io.File;

        $r14 = r0[0];

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);

        $r15 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlConverter: org.w3c.dom.Document process(java.io.File)>($r13);

        $r16 = new java.io.FileWriter;

        $r17 = r0[1];

        specialinvoke $r16.<java.io.FileWriter: void <init>(java.lang.String)>($r17);

        $r18 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r18.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r15);

        $r19 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r19.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r16);

        $r20 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r21 = virtualinvoke $r20.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", "UTF-8");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "no");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("method", "xml");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r18, $r19);

        virtualinvoke $r16.<java.io.FileWriter: void close()>();

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static org.w3c.dom.Document process(java.io.File) throws java.lang.Exception
    {
        org.apache.poi.hssf.converter.ExcelToFoConverter $r2;
        org.w3c.dom.Document $r5, $r6;
        javax.xml.parsers.DocumentBuilder $r4;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        org.apache.poi.hssf.usermodel.HSSFWorkbook $r1;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: org.apache.poi.hssf.usermodel.HSSFWorkbook loadXls(java.io.File)>(r0);

        $r2 = new org.apache.poi.hssf.converter.ExcelToFoConverter;

        $r3 = staticinvoke <org.apache.poi.util.XMLHelper: javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        specialinvoke $r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: void <init>(org.w3c.dom.Document)>($r5);

        virtualinvoke $r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processWorkbook(org.apache.poi.hssf.usermodel.HSSFWorkbook)>($r1);

        $r6 = virtualinvoke $r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.w3c.dom.Document getDocument()>();

        return $r6;
    }

    public void <init>(org.w3c.dom.Document)
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;
        org.w3c.dom.Document r2;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r2 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<org.apache.poi.hssf.converter.AbstractExcelConverter: void <init>()>();

        r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float pageMarginInches> = 0.4F;

        $r1 = new org.apache.poi.hwpf.converter.FoDocumentFacade;

        specialinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: void <init>(org.w3c.dom.Document)>(r2);

        r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade> = $r1;

        return;
    }

    public void <init>(org.apache.poi.hwpf.converter.FoDocumentFacade)
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade r1;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r1 := @parameter0: org.apache.poi.hwpf.converter.FoDocumentFacade;

        specialinvoke r0.<org.apache.poi.hssf.converter.AbstractExcelConverter: void <init>()>();

        r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float pageMarginInches> = 0.4F;

        r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade> = r1;

        return;
    }

    protected java.lang.String createPageMaster(float, java.lang.String)
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r2, $r12;
        byte $b0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8, f9;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26;
        int $i1;
        java.lang.String r1, $r7, $r11, $r23;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;
        org.w3c.dom.Element $r3, $r13;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.String;

        $f1 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float getPageMarginInches()>();

        $f2 = 2.0F * $f1;

        f7 = f0 + $f2;

        $b0 = f7 cmpg 8.267716F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        f8 = 8.267716F;

        f9 = 11.574803F;

        goto label2;

     label1:
        f8 = f7;

        f9 = f7 * 0.7142857F;

     label2:
        $f3 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float getPageMarginInches()>();

        $f4 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float getPageMarginInches()>();

        $f5 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float getPageMarginInches()>();

        $f6 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float getPageMarginInches()>();

        $r2 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element addSimplePageMaster(java.lang.String)>(r1);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("page-height", $r7);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("page-width", $r11);

        $r12 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r13 = virtualinvoke $r12.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element addRegionBody(org.w3c.dom.Element)>($r3);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("margin", $r23);

        return r1;
    }

    protected org.w3c.dom.Document getDocument()
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;
        org.w3c.dom.Document $r2;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        $r1 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Document getDocument()>();

        return $r2;
    }

    public float getPageMarginInches()
    {
        float $f0;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        $f0 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float pageMarginInches>;

        return $f0;
    }

    protected boolean isEmptyStyle(org.apache.poi.ss.usermodel.CellStyle)
    {
        org.apache.poi.hssf.converter.ExcelToFoConverter r1;
        short $s0, $s1, $s2, $s3, $s4;
        org.apache.poi.ss.usermodel.CellStyle r0;
        boolean $z0;

        r1 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r0 := @parameter0: org.apache.poi.ss.usermodel.CellStyle;

        $s0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: short getFillPattern()>();

        if $s0 != 0 goto label1;

        $s1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: short getBorderTop()>();

        if $s1 != 0 goto label1;

        $s2 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: short getBorderRight()>();

        if $s2 != 0 goto label1;

        $s3 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: short getBorderBottom()>();

        if $s3 != 0 goto label1;

        $s4 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: short getBorderLeft()>();

        if $s4 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean processCell(org.apache.poi.hssf.usermodel.HSSFWorkbook, org.apache.poi.hssf.usermodel.HSSFCell, org.w3c.dom.Element, int, int, float)
    {
        org.w3c.dom.Text $r38;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r37, $r39;
        byte $b1, $b10;
        org.apache.poi.hssf.usermodel.HSSFRichTextString $r19, $r28;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r14, $r15, $r24, $r25, $r26, $r32, $r33, $r34, $r42, $r43, $r44, $r45, $r46, $r47;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r3;
        short $s12;
        java.lang.String $r8, $r12, $r16, $r18, $r21, $r27, $r35, r36;
        org.apache.poi.hssf.usermodel.HSSFDataFormatter $r20, $r29;
        org.apache.poi.hssf.usermodel.HSSFCell r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8, $z9, $z10;
        org.apache.poi.util.POILogger $r23, $r31;
        float f0;
        int $i0, i2, i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13, $i14, i15, $i16, $i17, $i18, $i19;
        double $d0, $d1;
        org.apache.poi.hssf.converter.ExcelToFoConverter r2;
        char $c8;
        org.apache.poi.hssf.usermodel.HSSFCellStyle $r1, $r41;
        org.w3c.dom.Element r4, $r40;

        r2 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r3 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        r0 := @parameter1: org.apache.poi.hssf.usermodel.HSSFCell;

        r4 := @parameter2: org.w3c.dom.Element;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f0 := @parameter5: float;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: org.apache.poi.hssf.usermodel.HSSFCellStyle getCellStyle()>();

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 0: goto label12;
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label11;
            case 4: goto label13;
            case 5: goto label14;
            default: goto label15;
        };

     label01:
        $r28 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: org.apache.poi.hssf.usermodel.HSSFRichTextString getRichStringCellValue()>();

        r36 = virtualinvoke $r28.<org.apache.poi.hssf.usermodel.HSSFRichTextString: java.lang.String getString()>();

        goto label16;

     label02:
        $i9 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: int getCachedFormulaResultType()>();

        tableswitch($i9)
        {
            case 0: goto label05;
            case 1: goto label03;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label07;
            case 5: goto label08;
            default: goto label09;
        };

     label03:
        $r19 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: org.apache.poi.hssf.usermodel.HSSFRichTextString getRichStringCellValue()>();

        if $r19 == null goto label04;

        $i11 = virtualinvoke $r19.<org.apache.poi.hssf.usermodel.HSSFRichTextString: int length()>();

        if $i11 <= 0 goto label04;

        r36 = virtualinvoke $r19.<org.apache.poi.hssf.usermodel.HSSFRichTextString: java.lang.String toString()>();

        goto label10;

     label04:
        r36 = "";

        goto label10;

     label05:
        if $r1 != null goto label06;

        $d1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: double getNumericCellValue()>();

        r36 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d1);

        goto label10;

     label06:
        $r20 = r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hssf.usermodel.HSSFDataFormatter _formatter>;

        $d0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: double getNumericCellValue()>();

        $s12 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getDataFormat()>();

        $r21 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: java.lang.String getDataFormatString()>();

        $i16 = (int) $s12;

        r36 = virtualinvoke $r20.<org.apache.poi.hssf.usermodel.HSSFDataFormatter: java.lang.String formatRawCellContents(double,int,java.lang.String)>($d0, $i16, $r21);

        goto label10;

     label07:
        $z3 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: boolean getBooleanCellValue()>();

        r36 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3);

        goto label10;

     label08:
        $b10 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: byte getErrorCellValue()>();

        $i17 = (int) $b10;

        r36 = staticinvoke <org.apache.poi.ss.formula.eval.ErrorEval: java.lang.String getText(int)>($i17);

        goto label10;

     label09:
        $r23 = <org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.util.POILogger logger>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected cell cachedFormulaResultType (");

        $i13 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: int getCachedFormulaResultType()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r27);

        r36 = "";

     label10:
        goto label16;

     label11:
        r36 = "";

        goto label16;

     label12:
        $r29 = r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hssf.usermodel.HSSFDataFormatter _formatter>;

        r36 = virtualinvoke $r29.<org.apache.poi.hssf.usermodel.HSSFDataFormatter: java.lang.String formatCellValue(org.apache.poi.ss.usermodel.Cell)>(r0);

        goto label16;

     label13:
        $z2 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: boolean getBooleanCellValue()>();

        r36 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2);

        goto label16;

     label14:
        $b1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: byte getErrorCellValue()>();

        $i18 = (int) $b1;

        r36 = staticinvoke <org.apache.poi.ss.formula.eval.ErrorEval: java.lang.String getText(int)>($i18);

        goto label16;

     label15:
        $r31 = <org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.util.POILogger logger>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected cell type (");

        $i14 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: int getCellType()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r35);

        return 1;

     label16:
        $z4 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: boolean isEmpty(java.lang.String)>(r36);

        if $z4 != 0 goto label17;

        $z1 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: boolean getWrapText()>();

        if $z1 != 0 goto label17;

        $z5 = 1;

        goto label18;

     label17:
        $z5 = 0;

     label18:
        z6 = $z5;

        $z7 = virtualinvoke r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isEmptyStyle(org.apache.poi.ss.usermodel.CellStyle)>($r1);

        if $z7 != 0 goto label19;

        if $z4 == 0 goto label19;

        r36 = "\u00a0";

     label19:
        $z8 = virtualinvoke r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputLeadingSpacesAsNonBreaking()>();

        if $z8 == 0 goto label24;

        $z0 = virtualinvoke r36.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z0 == 0 goto label24;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        i15 = 0;

     label20:
        $i4 = virtualinvoke r36.<java.lang.String: int length()>();

        if i15 >= $i4 goto label22;

        $c8 = virtualinvoke r36.<java.lang.String: char charAt(int)>(i15);

        $i19 = (int) $c8;

        if $i19 == 32 goto label21;

        goto label22;

     label21:
        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(160);

        i15 = i15 + 1;

        goto label20;

     label22:
        $i5 = virtualinvoke r36.<java.lang.String: int length()>();

        $i6 = virtualinvoke $r44.<java.lang.StringBuilder: int length()>();

        if $i5 == $i6 goto label23;

        $i7 = virtualinvoke $r44.<java.lang.StringBuilder: int length()>();

        $r18 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int)>($i7);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label23:
        r36 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        $r37 = r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r38 = virtualinvoke $r37.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>(r36);

        $r39 = r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r40 = virtualinvoke $r39.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        if z6 == 0 goto label26;

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("absolute-position", "fixed");

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("left", "0px");

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("top", "0px");

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("bottom", "0px");

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("min-width", $r8);

        if i3 == 2147483647 goto label25;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("max-width", $r16);

     label25:
        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("overflow", "hidden");

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("height", $r12);

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("keep-together.within-line", "always");

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("wrap-option", "no-wrap");

     label26:
        $r41 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFCell: org.apache.poi.hssf.usermodel.HSSFCellStyle getCellStyle()>();

        virtualinvoke r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle,org.w3c.dom.Element,org.w3c.dom.Element)>(r3, $r41, r4, $r40);

        interfaceinvoke $r40.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r38);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r40);

        $z9 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: boolean isEmpty(java.lang.String)>(r36);

        if $z9 == 0 goto label27;

        if $z7 == 0 goto label27;

        $z10 = 1;

        goto label28;

     label27:
        $z10 = 0;

     label28:
        return $z10;
    }

    protected void processCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook, org.apache.poi.hssf.usermodel.HSSFCellStyle, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.poi.hssf.util.HSSFColor $r3, $r8;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10;
        java.lang.String $r2, $r7, $r9;
        boolean $z0;
        org.apache.poi.hssf.converter.ExcelToFoConverter r4;
        org.apache.poi.hssf.usermodel.HSSFCellStyle r1;
        org.w3c.dom.Element r0, r6;
        org.apache.poi.hssf.usermodel.HSSFFont $r10;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r5;

        r4 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r5 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        r1 := @parameter1: org.apache.poi.hssf.usermodel.HSSFCellStyle;

        r6 := @parameter2: org.w3c.dom.Element;

        r0 := @parameter3: org.w3c.dom.Element;

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("white-space-collapse", "false");

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getAlignment()>();

        $r2 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: java.lang.String getAlign(short)>($s0);

        $z0 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: boolean isNotEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("text-align", $r2);

     label1:
        $s1 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getFillPattern()>();

        if $s1 != 0 goto label2;

        goto label5;

     label2:
        $s2 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getFillPattern()>();

        if $s2 != 1 goto label4;

        $r8 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: org.apache.poi.hssf.util.HSSFColor getFillForegroundColorColor()>();

        if $r8 == null goto label3;

        $r9 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: java.lang.String getColor(org.apache.poi.hssf.util.HSSFColor)>($r8);

        interfaceinvoke r6.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("background-color", $r9);

     label3:
        goto label5;

     label4:
        $r3 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: org.apache.poi.hssf.util.HSSFColor getFillBackgroundColorColor()>();

        if $r3 == null goto label5;

        $r7 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: java.lang.String getColor(org.apache.poi.hssf.util.HSSFColor)>($r3);

        interfaceinvoke r6.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("background-color", $r7);

     label5:
        $s3 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getBorderTop()>();

        $s4 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getTopBorderColor()>();

        virtualinvoke r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processCellStyleBorder(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.w3c.dom.Element,java.lang.String,short,short)>(r5, r6, "top", $s3, $s4);

        $s5 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getBorderRight()>();

        $s6 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getRightBorderColor()>();

        virtualinvoke r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processCellStyleBorder(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.w3c.dom.Element,java.lang.String,short,short)>(r5, r6, "right", $s5, $s6);

        $s7 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getBorderBottom()>();

        $s8 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getBottomBorderColor()>();

        virtualinvoke r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processCellStyleBorder(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.w3c.dom.Element,java.lang.String,short,short)>(r5, r6, "bottom", $s7, $s8);

        $s9 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getBorderLeft()>();

        $s10 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getLeftBorderColor()>();

        virtualinvoke r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processCellStyleBorder(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.w3c.dom.Element,java.lang.String,short,short)>(r5, r6, "left", $s9, $s10);

        $r10 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFCellStyle: org.apache.poi.hssf.usermodel.HSSFFont getFont(org.apache.poi.ss.usermodel.Workbook)>(r5);

        virtualinvoke r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processCellStyleFont(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.w3c.dom.Element,org.apache.poi.hssf.usermodel.HSSFFont)>(r5, r0, $r10);

        return;
    }

    protected void processCellStyleBorder(org.apache.poi.hssf.usermodel.HSSFWorkbook, org.w3c.dom.Element, java.lang.String, short, short)
    {
        org.apache.poi.hssf.util.HSSFColor $r4;
        short s0, s1;
        java.lang.String $r1, r8, $r10, $r11, $r12, $r13;
        org.apache.poi.hssf.usermodel.HSSFPalette $r3;
        org.apache.poi.hssf.converter.ExcelToFoConverter r14;
        org.w3c.dom.Element r5;
        java.lang.StringBuilder $r0, $r6, $r7, $r9;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r2;

        r14 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r2 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        r5 := @parameter1: org.w3c.dom.Element;

        r8 := @parameter2: java.lang.String;

        s0 := @parameter3: short;

        s1 := @parameter4: short;

        if s0 != 0 goto label1;

        return;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: java.lang.String getBorderWidth(short)>(s0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke r2.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFPalette getCustomPalette()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFPalette: org.apache.poi.hssf.util.HSSFColor getColor(short)>(s1);

        if $r4 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r12 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: java.lang.String getColor(org.apache.poi.hssf.util.HSSFColor)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r13 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: java.lang.String getBorderStyle(short)>(s0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border-");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r5.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r10, $r11);

        return;
    }

    protected void processCellStyleFont(org.apache.poi.hssf.usermodel.HSSFWorkbook, org.w3c.dom.Element, org.apache.poi.hssf.usermodel.HSSFFont)
    {
        org.apache.poi.hssf.util.HSSFColor $r8;
        org.apache.poi.hwpf.converter.FontReplacer$Triplet $r14;
        short $s0, $s1, $s2, $s3;
        int $i4, $i5;
        java.lang.String $r2, $r12, $r13;
        org.apache.poi.hssf.usermodel.HSSFPalette $r7;
        boolean $z0;
        org.apache.poi.hssf.converter.ExcelToFoConverter r3;
        org.w3c.dom.Element r5;
        org.apache.poi.hwpf.converter.FontReplacer $r4;
        java.lang.StringBuilder $r10, $r11, $r15;
        org.apache.poi.hssf.usermodel.HSSFFont r1;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r6;

        r3 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r6 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        r5 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: org.apache.poi.hssf.usermodel.HSSFFont;

        $r14 = new org.apache.poi.hwpf.converter.FontReplacer$Triplet;

        specialinvoke $r14.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFFont: java.lang.String getFontName()>();

        $r14.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName> = $r2;

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFFont: short getBoldweight()>();

        $i4 = (int) $s0;

        lookupswitch($i4)
        {
            case 400: goto label2;
            case 700: goto label1;
            default: goto label3;
        };

     label1:
        $r14.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean bold> = 1;

        goto label3;

     label2:
        $r14.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean bold> = 0;

     label3:
        $z0 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFFont: boolean getItalic()>();

        if $z0 == 0 goto label4;

        $r14.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean italic> = 1;

     label4:
        $r4 = virtualinvoke r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FontReplacer getFontReplacer()>();

        interfaceinvoke $r4.<org.apache.poi.hwpf.converter.FontReplacer: org.apache.poi.hwpf.converter.FontReplacer$Triplet update(org.apache.poi.hwpf.converter.FontReplacer$Triplet)>($r14);

        specialinvoke r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: void setBlockProperties(org.w3c.dom.Element,org.apache.poi.hwpf.converter.FontReplacer$Triplet)>(r5, $r14);

        $r7 = virtualinvoke r6.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFPalette getCustomPalette()>();

        $s1 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFFont: short getColor()>();

        $r8 = virtualinvoke $r7.<org.apache.poi.hssf.usermodel.HSSFPalette: org.apache.poi.hssf.util.HSSFColor getColor(short)>($s1);

        if $r8 == null goto label5;

        $r13 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: java.lang.String getColor(org.apache.poi.hssf.util.HSSFColor)>($r8);

        interfaceinvoke r5.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("color", $r13);

     label5:
        $s2 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFFont: short getFontHeightInPoints()>();

        if $s2 == 0 goto label6;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $s3 = virtualinvoke r1.<org.apache.poi.hssf.usermodel.HSSFFont: short getFontHeightInPoints()>();

        $i5 = (int) $s3;

        $r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r5.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-size", $r12);

     label6:
        return;
    }

    protected void processColumnHeaders(org.apache.poi.hssf.usermodel.HSSFSheet, int, org.w3c.dom.Element)
    {
        org.w3c.dom.Text $r12;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1, $r3, $r6, $r8, $r11, $r14, $r16;
        int i0, i1;
        org.apache.poi.hssf.usermodel.HSSFSheet r13;
        java.lang.String $r10;
        boolean $z0, $z1, $z2;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;
        org.w3c.dom.Element $r2, $r4, r5, $r7, $r9, $r15, $r17;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r13 := @parameter0: org.apache.poi.hssf.usermodel.HSSFSheet;

        i0 := @parameter1: int;

        r5 := @parameter2: org.w3c.dom.Element;

        $r1 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableHeader()>();

        $r3 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableRow()>();

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputRowNumbers()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r15 = virtualinvoke $r14.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableCell()>();

        $r16 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r17 = virtualinvoke $r16.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        interfaceinvoke $r15.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r17);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r15);

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $z1 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputHiddenColumns()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r13.<org.apache.poi.hssf.usermodel.HSSFSheet: boolean isColumnHidden(int)>(i1);

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        $r6 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r7 = virtualinvoke $r6.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableCell()>();

        $r8 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("text-align", "center");

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-weight", "bold");

        $r10 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: java.lang.String getColumnName(int)>(i1);

        $r11 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r12 = virtualinvoke $r11.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r10);

        interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        interfaceinvoke $r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return;
    }

    protected float processColumnWidths(org.apache.poi.hssf.usermodel.HSSFSheet, int, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r7, $r13;
        int i0, $i1, $i2, i3;
        org.apache.poi.hssf.usermodel.HSSFSheet r6;
        java.lang.String $r5, $r12, $r18;
        boolean $z0, $z1, $z2;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;
        org.w3c.dom.Element r1, $r8, $r14;
        float $f0, $f1, $f2, f3, f4;
        java.lang.StringBuilder $r2, $r3, $r4, $r9, $r10, $r11, $r15, $r16, $r17;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r6 := @parameter0: org.apache.poi.hssf.usermodel.HSSFSheet;

        i0 := @parameter1: int;

        r1 := @parameter2: org.w3c.dom.Element;

        f3 = 0.0F;

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputRowNumbers()>();

        if $z0 == 0 goto label1;

        $i2 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoConverter: int getDefaultColumnWidth(org.apache.poi.hssf.usermodel.HSSFSheet)>(r6);

        $f2 = (float) $i2;

        f4 = $f2 / 72.0F;

        $r13 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r14 = virtualinvoke $r13.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableColumn()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("column-width", $r18);

        interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r14);

        f3 = 0.0F + f4;

     label1:
        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        $z1 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputHiddenColumns()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r6.<org.apache.poi.hssf.usermodel.HSSFSheet: boolean isColumnHidden(int)>(i3);

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        $i1 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoConverter: int getColumnWidth(org.apache.poi.hssf.usermodel.HSSFSheet,int)>(r6, i3);

        $f0 = (float) $i1;

        $f1 = $f0 / 72.0F;

        $r7 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r8 = virtualinvoke $r7.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableColumn()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("column-width", $r12);

        interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        f3 = f3 + $f1;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("width", $r5);

        return f3;
    }

    protected void processDocumentInformation(org.apache.poi.hpsf.SummaryInformation)
    {
        org.apache.poi.hpsf.SummaryInformation r0;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r6, $r8, $r10, $r12;
        java.lang.String $r1, $r2, $r3, $r4, $r7, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;
        org.apache.poi.hssf.converter.ExcelToFoConverter r5;

        r5 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r0 := @parameter0: org.apache.poi.hpsf.SummaryInformation;

        $r1 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getTitle()>();

        $z0 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r12 = r5.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r13 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getTitle()>();

        virtualinvoke $r12.<org.apache.poi.hwpf.converter.FoDocumentFacade: void setTitle(java.lang.String)>($r13);

     label1:
        $r2 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getAuthor()>();

        $z1 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: boolean isNotEmpty(java.lang.String)>($r2);

        if $z1 == 0 goto label2;

        $r10 = r5.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r11 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getAuthor()>();

        virtualinvoke $r10.<org.apache.poi.hwpf.converter.FoDocumentFacade: void setCreator(java.lang.String)>($r11);

     label2:
        $r3 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getKeywords()>();

        $z2 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: boolean isNotEmpty(java.lang.String)>($r3);

        if $z2 == 0 goto label3;

        $r8 = r5.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r9 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getKeywords()>();

        virtualinvoke $r8.<org.apache.poi.hwpf.converter.FoDocumentFacade: void setKeywords(java.lang.String)>($r9);

     label3:
        $r4 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getComments()>();

        $z3 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: boolean isNotEmpty(java.lang.String)>($r4);

        if $z3 == 0 goto label4;

        $r6 = r5.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r7 = virtualinvoke r0.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getComments()>();

        virtualinvoke $r6.<org.apache.poi.hwpf.converter.FoDocumentFacade: void setDescription(java.lang.String)>($r7);

     label4:
        return;
    }

    protected int processRow(org.apache.poi.hssf.usermodel.HSSFWorkbook, org.apache.poi.ss.util.CellRangeAddress[][], org.apache.poi.hssf.usermodel.HSSFRow, org.w3c.dom.Element)
    {
        org.apache.poi.hssf.usermodel.HSSFCell $r6, $r18, $r19;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r7, $r9;
        org.apache.poi.hssf.usermodel.HSSFRow r0;
        org.apache.poi.hssf.usermodel.HSSFSheet $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        org.apache.poi.ss.util.CellRangeAddress $r5;
        float $f0, $f1;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r15;
        java.util.ArrayList $r21;
        short $s0, $s4;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, $i25, $i26, $i27, $i28;
        java.lang.String $r16, $r17;
        org.apache.poi.ss.util.CellRangeAddress[][] r4;
        org.apache.poi.hssf.converter.ExcelToFoConverter r3;
        java.util.Iterator $r11;
        org.w3c.dom.Element $r8, $r10, r12, r14, $r20;
        java.lang.Object $r13;

        r3 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r15 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        r4 := @parameter1: org.apache.poi.ss.util.CellRangeAddress[][];

        r0 := @parameter2: org.apache.poi.hssf.usermodel.HSSFRow;

        r12 := @parameter3: org.w3c.dom.Element;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFRow: org.apache.poi.hssf.usermodel.HSSFSheet getSheet()>();

        $s0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFRow: short getLastCellNum()>();

        $i25 = (int) $s0;

        if $i25 > 0 goto label01;

        return 0;

     label01:
        $r21 = new java.util.ArrayList;

        $i26 = (int) $s0;

        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i26);

        $z0 = virtualinvoke r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputRowNumbers()>();

        if $z0 == 0 goto label02;

        $r20 = virtualinvoke r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.w3c.dom.Element processRowNumber(org.apache.poi.hssf.usermodel.HSSFRow)>(r0);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r20);

     label02:
        i21 = 0;

        i22 = 0;

     label03:
        $i27 = (int) $s0;

        if i22 >= $i27 goto label20;

        $z1 = virtualinvoke r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputHiddenColumns()>();

        if $z1 != 0 goto label04;

        $z6 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFSheet: boolean isColumnHidden(int)>(i22);

        if $z6 == 0 goto label04;

        goto label19;

     label04:
        $i2 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFRow: int getRowNum()>();

        $r5 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: org.apache.poi.ss.util.CellRangeAddress getMergedRange(org.apache.poi.ss.util.CellRangeAddress[][],int,int)>(r4, $i2, i22);

        if $r5 == null goto label05;

        $i18 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        if $i18 != i22 goto label19;

        $i19 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        $i20 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFRow: int getRowNum()>();

        if $i19 == $i20 goto label05;

        goto label19;

     label05:
        $r6 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFRow: org.apache.poi.hssf.usermodel.HSSFCell getCell(int)>(i22);

        i23 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoConverter: int getColumnWidth(org.apache.poi.hssf.usermodel.HSSFSheet,int)>($r1, i22);

        z7 = 0;

        i24 = i22 + 1;

     label06:
        $i28 = (int) $s0;

        if i24 >= $i28 goto label10;

        $z3 = virtualinvoke r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputHiddenColumns()>();

        if $z3 != 0 goto label07;

        $z5 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFSheet: boolean isColumnHidden(int)>(i24);

        if $z5 == 0 goto label07;

        goto label09;

     label07:
        $r18 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFRow: org.apache.poi.hssf.usermodel.HSSFCell getCell(int)>(i24);

        if $r18 == null goto label08;

        $r19 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFRow: org.apache.poi.hssf.usermodel.HSSFCell getCell(int)>(i24);

        $z4 = virtualinvoke r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isTextEmpty(org.apache.poi.hssf.usermodel.HSSFCell)>($r19);

        if $z4 != 0 goto label08;

        z7 = 1;

        goto label10;

     label08:
        $i17 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoConverter: int getColumnWidth(org.apache.poi.hssf.usermodel.HSSFSheet,int)>($r1, i24);

        i23 = i23 + $i17;

     label09:
        i24 = i24 + 1;

        goto label06;

     label10:
        if z7 != 0 goto label11;

        i23 = 2147483647;

     label11:
        $r7 = r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r8 = virtualinvoke $r7.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableCell()>();

        if $r5 == null goto label13;

        $i5 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        $i6 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        if $i5 == $i6 goto label12;

        $i13 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        $i14 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        $i15 = $i13 - $i14;

        $i16 = $i15 + 1;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i16);

        interfaceinvoke $r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("number-columns-spanned", $r17);

     label12:
        $i7 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        $i8 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        if $i7 == $i8 goto label13;

        $i9 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        $i10 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        $i11 = $i9 - $i10;

        $i12 = $i11 + 1;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i12);

        interfaceinvoke $r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("number-rows-spanned", $r16);

     label13:
        if $r6 == null goto label14;

        $i3 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoConverter: int getColumnWidth(org.apache.poi.hssf.usermodel.HSSFSheet,int)>($r1, i22);

        $s4 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFRow: short getHeight()>();

        $f0 = (float) $s4;

        $f1 = $f0 / 20.0F;

        z8 = virtualinvoke r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean processCell(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCell,org.w3c.dom.Element,int,int,float)>(r15, $r6, $r8, $i3, i23, $f1);

        goto label15;

     label14:
        $r9 = r3.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r10 = virtualinvoke $r9.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        z8 = 1;

     label15:
        if z8 == 0 goto label16;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label19;

     label16:
        $r11 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r13 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.w3c.dom.Element) $r13;

        interfaceinvoke r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r14);

        goto label17;

     label18:
        interfaceinvoke $r21.<java.util.List: void clear()>();

        interfaceinvoke r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        i21 = i22;

     label19:
        i22 = i22 + 1;

        goto label03;

     label20:
        $i1 = i21 + 1;

        return $i1;
    }

    protected org.w3c.dom.Element processRowNumber(org.apache.poi.hssf.usermodel.HSSFRow)
    {
        org.w3c.dom.Text $r8;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1, $r3, $r6;
        org.apache.poi.hssf.usermodel.HSSFRow r5;
        org.w3c.dom.Element $r2, $r4;
        java.lang.String $r7;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r5 := @parameter0: org.apache.poi.hssf.usermodel.HSSFRow;

        $r1 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableCell()>();

        $r3 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        interfaceinvoke $r4.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("text-align", "right");

        interfaceinvoke $r4.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-weight", "bold");

        $r6 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r7 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: java.lang.String getRowName(org.apache.poi.hssf.usermodel.HSSFRow)>(r5);

        $r8 = virtualinvoke $r6.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r7);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        return $r2;
    }

    protected float processSheet(org.apache.poi.hssf.usermodel.HSSFWorkbook, org.apache.poi.hssf.usermodel.HSSFSheet, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.converter.FoDocumentFacade $r3, $r5, $r10, $r21, $r23;
        org.apache.poi.hssf.usermodel.HSSFRow $r9;
        org.apache.poi.hssf.usermodel.HSSFSheet r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r12, $r13, $r14;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r16;
        java.util.ArrayList $r8;
        short $s2;
        int $i0, $i1, $i3, $i4, i5, i6;
        java.lang.String $r15;
        org.apache.poi.ss.util.CellRangeAddress[][] $r7;
        org.w3c.dom.NodeList $r17;
        org.apache.poi.hssf.converter.ExcelToFoConverter r1;
        java.util.Iterator $r18;
        org.w3c.dom.Element r2, $r4, $r6, $r11, r20, $r22, $r24;
        java.lang.Object $r19;

        r1 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r16 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        r0 := @parameter1: org.apache.poi.hssf.usermodel.HSSFSheet;

        r2 := @parameter2: org.w3c.dom.Element;

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFSheet: int getPhysicalNumberOfRows()>();

        if $i0 > 0 goto label01;

        return 0.0F;

     label01:
        virtualinvoke r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processSheetName(org.apache.poi.hssf.usermodel.HSSFSheet,org.w3c.dom.Element)>(r0, r2);

        $r3 = r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTable()>();

        interfaceinvoke $r4.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("table-layout", "fixed");

        $r5 = r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableBody()>();

        $r7 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: org.apache.poi.ss.util.CellRangeAddress[][] buildMergedRangesMap(org.apache.poi.hssf.usermodel.HSSFSheet)>(r0);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        i5 = 1;

        i6 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFSheet: int getFirstRowNum()>();

     label02:
        $i1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFSheet: int getLastRowNum()>();

        if i6 > $i1 goto label12;

        $r9 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFSheet: org.apache.poi.hssf.usermodel.HSSFRow getRow(int)>(i6);

        if $r9 != null goto label03;

        goto label11;

     label03:
        $z1 = virtualinvoke r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputHiddenRows()>();

        if $z1 != 0 goto label04;

        $z4 = virtualinvoke $r9.<org.apache.poi.hssf.usermodel.HSSFRow: boolean getZeroHeight()>();

        if $z4 == 0 goto label04;

        goto label11;

     label04:
        $r10 = r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r11 = virtualinvoke $r10.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableRow()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $s2 = virtualinvoke $r9.<org.apache.poi.hssf.usermodel.HSSFRow: short getHeight()>();

        $f1 = (float) $s2;

        $f2 = $f1 / 20.0F;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("height", $r15);

        $i3 = virtualinvoke r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: int processRow(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.ss.util.CellRangeAddress[][],org.apache.poi.hssf.usermodel.HSSFRow,org.w3c.dom.Element)>(r16, $r7, $r9, $r11);

        $r17 = interfaceinvoke $r11.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $i4 = interfaceinvoke $r17.<org.w3c.dom.NodeList: int getLength()>();

        if $i4 != 0 goto label05;

        $r21 = r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r22 = virtualinvoke $r21.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createTableCell()>();

        $r23 = r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r24 = virtualinvoke $r23.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        interfaceinvoke $r22.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r24);

        interfaceinvoke $r11.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r22);

     label05:
        if $i3 != 0 goto label06;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label10;

     label06:
        $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label09;

        $r18 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.w3c.dom.Element) $r19;

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r20);

        goto label07;

     label08:
        interfaceinvoke $r8.<java.util.List: void clear()>();

     label09:
        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

     label10:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i3);

     label11:
        i6 = i6 + 1;

        goto label02;

     label12:
        $f0 = virtualinvoke r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: float processColumnWidths(org.apache.poi.hssf.usermodel.HSSFSheet,int,org.w3c.dom.Element)>(r0, i5, $r4);

        $z0 = virtualinvoke r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean isOutputColumnHeaders()>();

        if $z0 == 0 goto label13;

        virtualinvoke r1.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processColumnHeaders(org.apache.poi.hssf.usermodel.HSSFSheet,int,org.w3c.dom.Element)>(r0, i5, $r4);

     label13:
        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        return $f0;
    }

    protected boolean processSheet(org.apache.poi.hssf.usermodel.HSSFWorkbook, int)
    {
        org.apache.poi.hssf.converter.ExcelToFoConverter r4;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r5, $r7, $r11;
        org.w3c.dom.Element $r6, $r8;
        byte $b1;
        int i0;
        org.apache.poi.hssf.usermodel.HSSFSheet $r10;
        float $f0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r9;

        r4 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r9 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sheet-");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createPageSequence(java.lang.String)>($r3);

        $r7 = r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r8 = virtualinvoke $r7.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element addFlowToPageSequence(org.w3c.dom.Element,java.lang.String)>($r6, "xsl-region-body");

        $r10 = virtualinvoke r9.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFSheet getSheetAt(int)>(i0);

        $f0 = virtualinvoke r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: float processSheet(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFSheet,org.w3c.dom.Element)>(r9, $r10, $r8);

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: java.lang.String createPageMaster(float,java.lang.String)>($f0, $r3);

        $r11 = r4.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        virtualinvoke $r11.<org.apache.poi.hwpf.converter.FoDocumentFacade: void addPageSequence(org.w3c.dom.Element)>($r6);

        return 1;
    }

    protected void processSheetName(org.apache.poi.hssf.usermodel.HSSFSheet, org.w3c.dom.Element)
    {
        org.w3c.dom.Text $r10;
        org.apache.poi.hwpf.converter.FoDocumentFacade $r1, $r5, $r8, $r12, $r14;
        org.apache.poi.hwpf.converter.FontReplacer$Triplet $r3;
        org.apache.poi.hssf.usermodel.HSSFSheet r7;
        java.lang.String $r9;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;
        org.w3c.dom.Element $r2, $r6, r11, $r13, $r15;
        org.apache.poi.hwpf.converter.FontReplacer $r4;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r7 := @parameter0: org.apache.poi.hssf.usermodel.HSSFSheet;

        r11 := @parameter1: org.w3c.dom.Element;

        $r1 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r3 = new org.apache.poi.hwpf.converter.FontReplacer$Triplet;

        specialinvoke $r3.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: void <init>()>();

        $r3.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean bold> = 1;

        $r3.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean italic> = 0;

        $r3.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName> = "Arial";

        $r4 = virtualinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FontReplacer getFontReplacer()>();

        interfaceinvoke $r4.<org.apache.poi.hwpf.converter.FontReplacer: org.apache.poi.hwpf.converter.FontReplacer$Triplet update(org.apache.poi.hwpf.converter.FontReplacer$Triplet)>($r3);

        specialinvoke r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: void setBlockProperties(org.w3c.dom.Element,org.apache.poi.hwpf.converter.FontReplacer$Triplet)>($r2, $r3);

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-size", "200%");

        $r5 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createInline()>();

        $r8 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r9 = virtualinvoke r7.<org.apache.poi.hssf.usermodel.HSSFSheet: java.lang.String getSheetName()>();

        $r10 = virtualinvoke $r8.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r9);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        interfaceinvoke r11.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        $r12 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r13 = virtualinvoke $r12.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r14 = r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.hwpf.converter.FoDocumentFacade foDocumentFacade>;

        $r15 = virtualinvoke $r14.<org.apache.poi.hwpf.converter.FoDocumentFacade: org.w3c.dom.Element createInline()>();

        interfaceinvoke $r13.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r15);

        interfaceinvoke r11.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        return;
    }

    public void processWorkbook(org.apache.poi.hssf.usermodel.HSSFWorkbook)
    {
        org.apache.poi.hssf.converter.ExcelToFoConverter r2;
        int i0, $i1;
        org.apache.poi.hpsf.SummaryInformation $r1;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r0;

        r2 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r0 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hpsf.SummaryInformation getSummaryInformation()>();

        if $r1 == null goto label1;

        virtualinvoke r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: void processDocumentInformation(org.apache.poi.hpsf.SummaryInformation)>($r1);

     label1:
        i0 = 0;

     label2:
        $i1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFWorkbook: int getNumberOfSheets()>();

        if i0 >= $i1 goto label3;

        virtualinvoke r2.<org.apache.poi.hssf.converter.ExcelToFoConverter: boolean processSheet(org.apache.poi.hssf.usermodel.HSSFWorkbook,int)>(r0, i0);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    private void setBlockProperties(org.w3c.dom.Element, org.apache.poi.hwpf.converter.FontReplacer$Triplet)
    {
        org.apache.poi.hssf.converter.ExcelToFoConverter r4;
        org.apache.poi.hwpf.converter.FontReplacer$Triplet r0;
        org.w3c.dom.Element r2;
        java.lang.String $r1, $r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        r2 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.apache.poi.hwpf.converter.FontReplacer$Triplet;

        $z0 = r0.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean bold>;

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-weight", "bold");

     label1:
        $z1 = r0.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean italic>;

        if $z1 == 0 goto label2;

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-style", "italic");

     label2:
        $r1 = r0.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName>;

        $z2 = staticinvoke <org.apache.poi.hssf.converter.ExcelToFoUtils: boolean isNotEmpty(java.lang.String)>($r1);

        if $z2 == 0 goto label3;

        $r3 = r0.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName>;

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-family", $r3);

     label3:
        return;
    }

    public void setPageMarginInches(float)
    {
        float f0;
        org.apache.poi.hssf.converter.ExcelToFoConverter r0;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToFoConverter;

        f0 := @parameter0: float;

        r0.<org.apache.poi.hssf.converter.ExcelToFoConverter: float pageMarginInches> = f0;

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.hssf.converter.ExcelToFoConverter: float PAPER_A4_WIDTH_INCHES> = 8.267716F;

        <org.apache.poi.hssf.converter.ExcelToFoConverter: float PAPER_A4_HEIGHT_INCHES> = 11.574803F;

        <org.apache.poi.hssf.converter.ExcelToFoConverter: float DPI> = 72.0F;

        <org.apache.poi.hssf.converter.ExcelToFoConverter: float CM_PER_INCH> = 2.54F;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hssf/converter/ExcelToFoConverter;");

        <org.apache.poi.hssf.converter.ExcelToFoConverter: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
