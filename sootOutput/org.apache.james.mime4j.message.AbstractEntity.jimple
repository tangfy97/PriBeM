public abstract class org.apache.james.mime4j.message.AbstractEntity extends java.lang.Object implements org.apache.james.mime4j.dom.Entity
{
    private org.apache.james.mime4j.dom.Header header;
    private org.apache.james.mime4j.dom.Body body;
    private org.apache.james.mime4j.dom.Entity parent;

    protected void <init>()
    {
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header header> = null;

        r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body> = null;

        r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Entity parent> = null;

        return;
    }

    public org.apache.james.mime4j.dom.Entity getParent()
    {
        org.apache.james.mime4j.dom.Entity $r1;
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Entity parent>;

        return $r1;
    }

    public void setParent(org.apache.james.mime4j.dom.Entity)
    {
        org.apache.james.mime4j.dom.Entity r1;
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r1 := @parameter0: org.apache.james.mime4j.dom.Entity;

        r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Entity parent> = r1;

        return;
    }

    public org.apache.james.mime4j.dom.Header getHeader()
    {
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header header>;

        return $r1;
    }

    public void setHeader(org.apache.james.mime4j.dom.Header)
    {
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r1 := @parameter0: org.apache.james.mime4j.dom.Header;

        r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header header> = r1;

        return;
    }

    public org.apache.james.mime4j.dom.Body getBody()
    {
        org.apache.james.mime4j.dom.Body $r1;
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body>;

        return $r1;
    }

    public void setBody(org.apache.james.mime4j.dom.Body)
    {
        java.lang.IllegalStateException $r3;
        org.apache.james.mime4j.dom.Body $r1, r2;
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: org.apache.james.mime4j.dom.Body;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("body already set");

        throw $r3;

     label1:
        r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body> = r2;

        interfaceinvoke r2.<org.apache.james.mime4j.dom.Body: void setParent(org.apache.james.mime4j.dom.Entity)>(r0);

        return;
    }

    public org.apache.james.mime4j.dom.Body removeBody()
    {
        org.apache.james.mime4j.dom.Body $r1, r2;
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body>;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body>;

        r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body> = null;

        interfaceinvoke r2.<org.apache.james.mime4j.dom.Body: void setParent(org.apache.james.mime4j.dom.Entity)>(null);

        return r2;
    }

    public void setMessage(org.apache.james.mime4j.dom.Message)
    {
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Message r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r1 := @parameter0: org.apache.james.mime4j.dom.Message;

        virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: void setBody(org.apache.james.mime4j.dom.Body,java.lang.String,java.util.Map)>(r1, "message/rfc822", null);

        return;
    }

    public void setMultipart(org.apache.james.mime4j.dom.Multipart)
    {
        org.apache.james.mime4j.dom.Multipart r2;
        java.util.Map $r8;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r5, $r7;
        org.apache.james.mime4j.message.AbstractEntity r6;

        r6 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: org.apache.james.mime4j.dom.Multipart;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/");

        $r3 = interfaceinvoke r2.<org.apache.james.mime4j.dom.Multipart: java.lang.String getSubType()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r6.<org.apache.james.mime4j.message.AbstractEntity: java.lang.String newUniqueBoundary()>();

        $r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("boundary", $r7);

        virtualinvoke r6.<org.apache.james.mime4j.message.AbstractEntity: void setBody(org.apache.james.mime4j.dom.Body,java.lang.String,java.util.Map)>(r2, $r5, $r8);

        return;
    }

    public void setMultipart(org.apache.james.mime4j.dom.Multipart, java.util.Map)
    {
        java.util.HashMap $r7;
        org.apache.james.mime4j.dom.Multipart r2;
        java.util.Map r9;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r5, $r8;
        org.apache.james.mime4j.message.AbstractEntity r6;
        boolean $z0;

        r6 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: org.apache.james.mime4j.dom.Multipart;

        r9 := @parameter1: java.util.Map;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/");

        $r3 = interfaceinvoke r2.<org.apache.james.mime4j.dom.Multipart: java.lang.String getSubType()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = interfaceinvoke r9.<java.util.Map: boolean containsKey(java.lang.Object)>("boundary");

        if $z0 != 0 goto label1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>(r9);

        r9 = $r7;

        $r8 = virtualinvoke r6.<org.apache.james.mime4j.message.AbstractEntity: java.lang.String newUniqueBoundary()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("boundary", $r8);

     label1:
        virtualinvoke r6.<org.apache.james.mime4j.message.AbstractEntity: void setBody(org.apache.james.mime4j.dom.Body,java.lang.String,java.util.Map)>(r2, $r5, r9);

        return;
    }

    public void setText(org.apache.james.mime4j.dom.TextBody)
    {
        org.apache.james.mime4j.dom.TextBody r1;
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r1 := @parameter0: org.apache.james.mime4j.dom.TextBody;

        virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: void setText(org.apache.james.mime4j.dom.TextBody,java.lang.String)>(r1, "plain");

        return;
    }

    public void setText(org.apache.james.mime4j.dom.TextBody, java.lang.String)
    {
        org.apache.james.mime4j.dom.TextBody r5;
        java.util.Map r8;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4, $r6;
        org.apache.james.mime4j.message.AbstractEntity r7;
        boolean $z0;

        r7 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r5 := @parameter0: org.apache.james.mime4j.dom.TextBody;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = null;

        $r6 = virtualinvoke r5.<org.apache.james.mime4j.dom.TextBody: java.lang.String getMimeCharset()>();

        if $r6 == null goto label1;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("us-ascii");

        if $z0 != 0 goto label1;

        r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("charset", $r6);

     label1:
        virtualinvoke r7.<org.apache.james.mime4j.message.AbstractEntity: void setBody(org.apache.james.mime4j.dom.Body,java.lang.String,java.util.Map)>(r5, $r4, r8);

        return;
    }

    public void setBody(org.apache.james.mime4j.dom.Body, java.lang.String)
    {
        org.apache.james.mime4j.dom.Body r1;
        java.lang.String r2;
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r1 := @parameter0: org.apache.james.mime4j.dom.Body;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: void setBody(org.apache.james.mime4j.dom.Body,java.lang.String,java.util.Map)>(r1, r2, null);

        return;
    }

    public void setBody(org.apache.james.mime4j.dom.Body, java.lang.String, java.util.Map)
    {
        java.util.Map r4;
        org.apache.james.mime4j.dom.Body r1;
        java.lang.String r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r2;
        org.apache.james.mime4j.dom.field.ContentTypeField $r5;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r1 := @parameter0: org.apache.james.mime4j.dom.Body;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.util.Map;

        virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: void setBody(org.apache.james.mime4j.dom.Body)>(r1);

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header obtainHeader()>();

        $r5 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentTypeField newContentType(java.lang.String,java.util.Map)>(r3, r4);

        interfaceinvoke $r2.<org.apache.james.mime4j.dom.Header: void setField(org.apache.james.mime4j.stream.Field)>($r5);

        return;
    }

    public java.lang.String getMimeType()
    {
        org.apache.james.mime4j.stream.Field $r6;
        org.apache.james.mime4j.dom.Entity $r2, $r4;
        java.lang.String $r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.field.ContentTypeField $r1, $r7;
        org.apache.james.mime4j.dom.Header $r5;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentTypeField getContentTypeField()>();

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Entity getParent()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Entity getParent()>();

        $r5 = interfaceinvoke $r4.<org.apache.james.mime4j.dom.Entity: org.apache.james.mime4j.dom.Header getHeader()>();

        $r6 = interfaceinvoke $r5.<org.apache.james.mime4j.dom.Header: org.apache.james.mime4j.stream.Field getField(java.lang.String)>("Content-Type");

        $r7 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r6;

        goto label2;

     label1:
        $r7 = null;

     label2:
        $r3 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: java.lang.String calcMimeType(org.apache.james.mime4j.dom.field.ContentTypeField,org.apache.james.mime4j.dom.field.ContentTypeField)>($r1, $r7);

        return $r3;
    }

    private org.apache.james.mime4j.dom.field.ContentTypeField getContentTypeField()
    {
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.stream.Field $r2;
        org.apache.james.mime4j.dom.Header $r1;
        org.apache.james.mime4j.dom.field.ContentTypeField $r3;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header getHeader()>();

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: org.apache.james.mime4j.stream.Field getField(java.lang.String)>("Content-Type");

        $r3 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r2;

        return $r3;
    }

    public java.lang.String getCharset()
    {
        java.lang.String $r4;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.stream.Field $r2;
        org.apache.james.mime4j.dom.Header $r1;
        org.apache.james.mime4j.dom.field.ContentTypeField $r3;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header getHeader()>();

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: org.apache.james.mime4j.stream.Field getField(java.lang.String)>("Content-Type");

        $r3 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r2;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: java.lang.String calcCharset(org.apache.james.mime4j.dom.field.ContentTypeField)>($r3);

        return $r4;
    }

    public java.lang.String getContentTransferEncoding()
    {
        org.apache.james.mime4j.dom.field.ContentTransferEncodingField r3;
        java.lang.String $r4;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.stream.Field $r2;
        org.apache.james.mime4j.dom.Header $r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header getHeader()>();

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: org.apache.james.mime4j.stream.Field getField(java.lang.String)>("Content-Transfer-Encoding");

        r3 = (org.apache.james.mime4j.dom.field.ContentTransferEncodingField) $r2;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: java.lang.String calcTransferEncoding(org.apache.james.mime4j.dom.field.ContentTransferEncodingField)>(r3);

        return $r4;
    }

    public void setContentTransferEncoding(java.lang.String)
    {
        org.apache.james.mime4j.dom.field.ContentTransferEncodingField $r3;
        java.lang.String r2;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header obtainHeader()>();

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentTransferEncodingField newContentTransferEncoding(java.lang.String)>(r2);

        interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: void setField(org.apache.james.mime4j.stream.Field)>($r3);

        return;
    }

    public java.lang.String getDispositionType()
    {
        org.apache.james.mime4j.dom.field.ParsedField $r1;
        java.lang.String $r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.field.ContentDispositionField r2;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ParsedField obtainField(java.lang.String)>("Content-Disposition");

        r2 = (org.apache.james.mime4j.dom.field.ContentDispositionField) $r1;

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke r2.<org.apache.james.mime4j.dom.field.ContentDispositionField: java.lang.String getDispositionType()>();

        return $r3;
    }

    public void setContentDisposition(java.lang.String)
    {
        java.lang.String r2;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r1;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r3;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header obtainHeader()>();

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentDispositionField newContentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>(r2, null, -1L, null, null, null);

        interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: void setField(org.apache.james.mime4j.stream.Field)>($r3);

        return;
    }

    public void setContentDisposition(java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r1;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r4;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header obtainHeader()>();

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentDispositionField newContentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>(r2, r3, -1L, null, null, null);

        interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: void setField(org.apache.james.mime4j.stream.Field)>($r4);

        return;
    }

    public void setContentDisposition(java.lang.String, java.lang.String, long)
    {
        long l0;
        java.lang.String r2, r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r1;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r4;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header obtainHeader()>();

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentDispositionField newContentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>(r2, r3, l0, null, null, null);

        interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: void setField(org.apache.james.mime4j.stream.Field)>($r4);

        return;
    }

    public void setContentDisposition(java.lang.String, java.lang.String, long, java.util.Date, java.util.Date, java.util.Date)
    {
        java.util.Date r4, r5, r6;
        long l0;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r7;
        java.lang.String r2, r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r4 := @parameter3: java.util.Date;

        r5 := @parameter4: java.util.Date;

        r6 := @parameter5: java.util.Date;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header obtainHeader()>();

        $r7 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentDispositionField newContentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>(r2, r3, l0, r4, r5, r6);

        interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: void setField(org.apache.james.mime4j.stream.Field)>($r7);

        return;
    }

    public java.lang.String getFilename()
    {
        org.apache.james.mime4j.dom.field.ParsedField $r1;
        java.lang.String $r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.field.ContentDispositionField r2;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ParsedField obtainField(java.lang.String)>("Content-Disposition");

        r2 = (org.apache.james.mime4j.dom.field.ContentDispositionField) $r1;

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke r2.<org.apache.james.mime4j.dom.field.ContentDispositionField: java.lang.String getFilename()>();

        return $r3;
    }

    public void setFilename(java.lang.String)
    {
        java.util.HashMap $r5;
        org.apache.james.mime4j.stream.Field $r2;
        org.apache.james.mime4j.dom.field.ContentDispositionField r3, $r8, $r9;
        java.util.Map $r6;
        java.lang.String $r4, r7;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r7 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header obtainHeader()>();

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: org.apache.james.mime4j.stream.Field getField(java.lang.String)>("Content-Disposition");

        r3 = (org.apache.james.mime4j.dom.field.ContentDispositionField) $r2;

        if r3 != null goto label1;

        if r7 == null goto label4;

        $r9 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentDispositionField newContentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>("attachment", r7, -1L, null, null, null);

        interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: void setField(org.apache.james.mime4j.stream.Field)>($r9);

        goto label4;

     label1:
        $r4 = interfaceinvoke r3.<org.apache.james.mime4j.dom.field.ContentDispositionField: java.lang.String getDispositionType()>();

        $r5 = new java.util.HashMap;

        $r6 = interfaceinvoke r3.<org.apache.james.mime4j.dom.field.ContentDispositionField: java.util.Map getParameters()>();

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>($r6);

        if r7 != null goto label2;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>("filename");

        goto label3;

     label2:
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("filename", r7);

     label3:
        $r8 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentDispositionField newContentDisposition(java.lang.String,java.util.Map)>($r4, $r5);

        interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: void setField(org.apache.james.mime4j.stream.Field)>($r8);

     label4:
        return;
    }

    public boolean isMimeType(java.lang.String)
    {
        java.lang.String $r1, r2;
        org.apache.james.mime4j.message.AbstractEntity r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: java.lang.String getMimeType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        return $z0;
    }

    public boolean isMultipart()
    {
        java.lang.String $r2, $r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.field.ContentTypeField $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.field.ContentTypeField getContentTypeField()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getBoundary()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: java.lang.String getMimeType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void dispose()
    {
        org.apache.james.mime4j.dom.Body $r1, $r2;
        org.apache.james.mime4j.message.AbstractEntity r0;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Body body>;

        interfaceinvoke $r2.<org.apache.james.mime4j.dom.Body: void dispose()>();

     label1:
        return;
    }

    org.apache.james.mime4j.dom.Header obtainHeader()
    {
        org.apache.james.mime4j.message.HeaderImpl $r3;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.dom.Header $r1, $r2;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header header>;

        if $r1 != null goto label1;

        $r3 = new org.apache.james.mime4j.message.HeaderImpl;

        specialinvoke $r3.<org.apache.james.mime4j.message.HeaderImpl: void <init>()>();

        r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header header> = $r3;

     label1:
        $r2 = r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header header>;

        return $r2;
    }

    org.apache.james.mime4j.dom.field.ParsedField obtainField(java.lang.String)
    {
        org.apache.james.mime4j.dom.field.ParsedField r4;
        java.lang.String r2;
        org.apache.james.mime4j.message.AbstractEntity r0;
        org.apache.james.mime4j.stream.Field $r3;
        org.apache.james.mime4j.dom.Header $r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractEntity;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.AbstractEntity: org.apache.james.mime4j.dom.Header getHeader()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: org.apache.james.mime4j.stream.Field getField(java.lang.String)>(r2);

        r4 = (org.apache.james.mime4j.dom.field.ParsedField) $r3;

        return r4;
    }

    protected abstract java.lang.String newUniqueBoundary();

    protected abstract org.apache.james.mime4j.dom.field.ContentDispositionField newContentDisposition(java.lang.String, java.lang.String, long, java.util.Date, java.util.Date, java.util.Date);

    protected abstract org.apache.james.mime4j.dom.field.ContentDispositionField newContentDisposition(java.lang.String, java.util.Map);

    protected abstract org.apache.james.mime4j.dom.field.ContentTypeField newContentType(java.lang.String, java.util.Map);

    protected abstract org.apache.james.mime4j.dom.field.ContentTransferEncodingField newContentTransferEncoding(java.lang.String);

    protected abstract java.lang.String calcMimeType(org.apache.james.mime4j.dom.field.ContentTypeField, org.apache.james.mime4j.dom.field.ContentTypeField);

    protected abstract java.lang.String calcTransferEncoding(org.apache.james.mime4j.dom.field.ContentTransferEncodingField);

    protected abstract java.lang.String calcCharset(org.apache.james.mime4j.dom.field.ContentTypeField);
}
