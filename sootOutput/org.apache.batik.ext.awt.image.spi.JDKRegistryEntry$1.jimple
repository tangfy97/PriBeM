class org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1 extends java.lang.Thread
{
    private final java.net.URL val$url;
    private final org.apache.batik.ext.awt.image.renderable.DeferRable val$dr;
    private final java.lang.String val$errCode;
    private final java.lang.Object[] val$errParam;
    private final org.apache.batik.ext.awt.image.spi.JDKRegistryEntry this$0;

    void <init>(org.apache.batik.ext.awt.image.spi.JDKRegistryEntry, java.net.URL, org.apache.batik.ext.awt.image.renderable.DeferRable, java.lang.String, java.lang.Object[])
    {
        org.apache.batik.ext.awt.image.spi.JDKRegistryEntry r1;
        org.apache.batik.ext.awt.image.renderable.DeferRable r3;
        java.lang.Object[] r5;
        org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1 r0;
        java.net.URL r2;
        java.lang.String r4;

        r0 := @this: org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1;

        r1 := @parameter0: org.apache.batik.ext.awt.image.spi.JDKRegistryEntry;

        r2 := @parameter1: java.net.URL;

        r3 := @parameter2: org.apache.batik.ext.awt.image.renderable.DeferRable;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object[];

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: org.apache.batik.ext.awt.image.spi.JDKRegistryEntry this$0> = r1;

        r0.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: java.net.URL val$url> = r2;

        r0.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: org.apache.batik.ext.awt.image.renderable.DeferRable val$dr> = r3;

        r0.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: java.lang.String val$errCode> = r4;

        r0.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: java.lang.Object[] val$errParam> = r5;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r13;
        java.lang.Object[] $r5, $r15;
        java.net.URL $r2;
        java.lang.String $r6, $r16;
        org.apache.batik.ext.awt.image.spi.JDKRegistryEntry $r7, $r9, $r17;
        org.apache.batik.ext.awt.image.renderable.DeferRable $r4, $r8, $r19;
        org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1 r1;
        java.awt.Image $r3;
        org.apache.batik.ext.awt.image.renderable.RedRable $r11;
        java.awt.image.RenderedImage $r10;
        org.apache.batik.ext.awt.image.renderable.Filter $r18, r20;
        java.lang.ThreadDeath $r14;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r12;
        java.awt.Toolkit $r0;

        r1 := @this: org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1;

        r20 = null;

     label1:
        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r2 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: java.net.URL val$url>;

        $r3 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Image createImage(java.net.URL)>($r2);

        if $r3 == null goto label2;

        $r9 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: org.apache.batik.ext.awt.image.spi.JDKRegistryEntry this$0>;

        $r8 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: org.apache.batik.ext.awt.image.renderable.DeferRable val$dr>;

        $r10 = virtualinvoke $r9.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry: java.awt.image.RenderedImage loadImage(java.awt.Image,org.apache.batik.ext.awt.image.renderable.DeferRable)>($r3, $r8);

        if $r10 == null goto label2;

        $r11 = new org.apache.batik.ext.awt.image.renderable.RedRable;

        $r12 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed wrap(java.awt.image.RenderedImage)>($r10);

        specialinvoke $r11.<org.apache.batik.ext.awt.image.renderable.RedRable: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed)>($r12);

        r20 = $r11;

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        $r17 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: org.apache.batik.ext.awt.image.spi.JDKRegistryEntry this$0>;

        $r16 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: java.lang.String val$errCode>;

        $r15 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: java.lang.Object[] val$errParam>;

        $r18 = staticinvoke <org.apache.batik.ext.awt.image.spi.ImageTagRegistry: org.apache.batik.ext.awt.image.renderable.Filter getBrokenLinkImage(java.lang.Object,java.lang.String,java.lang.Object[])>($r17, $r16, $r15);

        $r19 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: org.apache.batik.ext.awt.image.renderable.DeferRable val$dr>;

        virtualinvoke $r19.<org.apache.batik.ext.awt.image.renderable.DeferRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>($r18);

        throw $r14;

     label4:
        $r13 := @caughtexception;

     label5:
        if r20 != null goto label6;

        $r7 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: org.apache.batik.ext.awt.image.spi.JDKRegistryEntry this$0>;

        $r6 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: java.lang.String val$errCode>;

        $r5 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: java.lang.Object[] val$errParam>;

        r20 = staticinvoke <org.apache.batik.ext.awt.image.spi.ImageTagRegistry: org.apache.batik.ext.awt.image.renderable.Filter getBrokenLinkImage(java.lang.Object,java.lang.String,java.lang.Object[])>($r7, $r6, $r5);

     label6:
        $r4 = r1.<org.apache.batik.ext.awt.image.spi.JDKRegistryEntry$1: org.apache.batik.ext.awt.image.renderable.DeferRable val$dr>;

        virtualinvoke $r4.<org.apache.batik.ext.awt.image.renderable.DeferRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>(r20);

        return;

        catch java.lang.ThreadDeath from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
