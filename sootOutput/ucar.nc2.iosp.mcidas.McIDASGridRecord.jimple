public class ucar.nc2.iosp.mcidas.McIDASGridRecord extends edu.wisc.ssec.mcidas.GridDirectory implements ucar.grid.GridRecord
{
    private int offsetToHeader;
    private ucar.nc2.iosp.mcidas.McGridDefRecord gridDefRecord;
    private int decimalScale;

    public void <init>(int, int[]) throws edu.wisc.ssec.mcidas.McIDASException
    {
        ucar.nc2.iosp.mcidas.McGridDefRecord $r2;
        int[] r1;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;
        int i0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        specialinvoke r0.<edu.wisc.ssec.mcidas.GridDirectory: void <init>(int[])>(r1);

        r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int decimalScale> = 0;

        $r2 = new ucar.nc2.iosp.mcidas.McGridDefRecord;

        specialinvoke $r2.<ucar.nc2.iosp.mcidas.McGridDefRecord: void <init>(int[])>(r1);

        r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: ucar.nc2.iosp.mcidas.McGridDefRecord gridDefRecord> = $r2;

        r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int offsetToHeader> = i0;

        return;
    }

    public double getLevel1()
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;
        double $d0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $d0 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: double getLevelValue()>();

        return $d0;
    }

    public double getLevel2()
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;
        double $d0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $d0 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: double getSecondLevelValue()>();

        return $d0;
    }

    public int getLevelType1()
    {
        int[] $r1;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;
        int i0, i1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int[] getDirBlock()>();

        i0 = $r1[51];

        if i0 == -2139062144 goto label1;

        if i0 == 0 goto label1;

        i1 = i0;

        goto label2;

     label1:
        i1 = 1;

     label2:
        return i1;
    }

    public int getLevelType2()
    {
        int $i0;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int getLevelType1()>();

        return $i0;
    }

    public int getValidTimeOffset()
    {
        int $i0;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int getForecastHour()>();

        return $i0;
    }

    public java.lang.String getParameterName()
    {
        java.lang.String $r1;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getParamName()>();

        return $r1;
    }

    public java.lang.String getParameterDescription()
    {
        java.lang.String $r1;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getParamName()>();

        return $r1;
    }

    public int getDecimalScale()
    {
        int $i0;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $i0 = r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int decimalScale>;

        return $i0;
    }

    public java.lang.String getGridDefRecordId()
    {
        ucar.nc2.iosp.mcidas.McGridDefRecord $r1;
        java.lang.String $r2;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: ucar.nc2.iosp.mcidas.McGridDefRecord gridDefRecord>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.mcidas.McGridDefRecord: java.lang.String toString()>();

        return $r2;
    }

    public ucar.nc2.iosp.mcidas.McGridDefRecord getGridDefRecord()
    {
        ucar.nc2.iosp.mcidas.McGridDefRecord $r1;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: ucar.nc2.iosp.mcidas.McGridDefRecord gridDefRecord>;

        return $r1;
    }

    public int getOffsetToHeader()
    {
        int $i0;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $i0 = r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int offsetToHeader>;

        return $i0;
    }

    public boolean hasGribInfo()
    {
        int[] $r1;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;
        int i0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int[] getDirBlock()>();

        i0 = $r1[48];

        if i0 == -2139062144 goto label1;

        if i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getTimeUnit()
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        return 0;
    }

    public java.lang.String getTimeUdunitName()
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        return "minutes";
    }

    public int cdmVariableHash()
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getParamName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int getLevelType1()>();

        $i2 = 37 * $i1;

        $i3 = $i0 + $i2;

        return $i3;
    }

    public java.lang.String cdmVariableName(ucar.grid.GridTableLookup, boolean, boolean)
    {
        ucar.grid.GridTableLookup r4;
        java.lang.Object[] $r1, $r6, $r8;
        java.util.Formatter $r0;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r2;
        int $i0;
        java.lang.String $r3, $r5, $r7, $r9, $r10;
        boolean z0, $z1, z2;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        r4 := @parameter0: ucar.grid.GridTableLookup;

        z0 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r1 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke r2.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getParameterName()>();

        $r1[0] = $r3;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r1);

        if z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<ucar.grid.GridTableLookup: java.lang.String getLevelName(ucar.grid.GridRecord)>(r2);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $z1 = interfaceinvoke r4.<ucar.grid.GridTableLookup: boolean isLayer(ucar.grid.GridRecord)>(r2);

        if $z1 == 0 goto label1;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = interfaceinvoke r4.<ucar.grid.GridTableLookup: java.lang.String getLevelName(ucar.grid.GridRecord)>(r2);

        $r8[0] = $r9;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("_%s_layer", $r8);

        goto label2;

     label1:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = interfaceinvoke r4.<ucar.grid.GridTableLookup: java.lang.String getLevelName(ucar.grid.GridRecord)>(r2);

        $r6[0] = $r7;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("_%s", $r6);

     label2:
        $r10 = virtualinvoke $r0.<java.util.Formatter: java.lang.String toString()>();

        return $r10;
    }
}
