public class org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener extends java.lang.Object implements org.w3c.dom.events.EventListener
{
    protected org.w3c.dom.Element importElement;
    private final org.apache.batik.bridge.svg12.DefaultXBLManager this$0;

    public void <init>(org.apache.batik.bridge.svg12.DefaultXBLManager, org.w3c.dom.Element)
    {
        org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener r0;
        org.apache.batik.bridge.svg12.DefaultXBLManager r1;
        org.w3c.dom.Element r2;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener;

        r1 := @parameter0: org.apache.batik.bridge.svg12.DefaultXBLManager;

        r2 := @parameter1: org.w3c.dom.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener: org.apache.batik.bridge.svg12.DefaultXBLManager this$0> = r1;

        r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener: org.w3c.dom.Element importElement> = r2;

        return;
    }

    public void handleEvent(org.w3c.dom.events.Event)
    {
        org.apache.batik.bridge.svg12.DefaultXBLManager $r3, $r7, $r9;
        org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener r2;
        org.w3c.dom.events.EventTarget $r1;
        org.w3c.dom.Document $r8;
        org.w3c.dom.Node r14;
        java.lang.String $r10, $r11;
        boolean $z0;
        org.apache.batik.util.DoublyIndexedTable $r5;
        org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord $r13;
        org.w3c.dom.Element $r4, $r12;
        org.w3c.dom.events.Event r0;
        java.lang.Object $r6;

        r2 := @this: org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener;

        r0 := @parameter0: org.w3c.dom.events.Event;

        $r1 = interfaceinvoke r0.<org.w3c.dom.events.Event: org.w3c.dom.events.EventTarget getTarget()>();

        r14 = (org.w3c.dom.Node) $r1;

        goto label2;

     label1:
        r14 = interfaceinvoke r14.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label2:
        if r14 == null goto label3;

        $z0 = r14 instanceof org.apache.batik.dom.svg12.XBLOMDefinitionElement;

        if $z0 == 0 goto label1;

     label3:
        $r3 = r2.<org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener: org.apache.batik.bridge.svg12.DefaultXBLManager this$0>;

        $r5 = $r3.<org.apache.batik.bridge.svg12.DefaultXBLManager: org.apache.batik.util.DoublyIndexedTable definitions>;

        $r4 = r2.<org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener: org.w3c.dom.Element importElement>;

        $r6 = virtualinvoke $r5.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object get(java.lang.Object,java.lang.Object)>(r14, $r4);

        $r13 = (org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord) $r6;

        if $r13 != null goto label4;

        return;

     label4:
        $r9 = r2.<org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener: org.apache.batik.bridge.svg12.DefaultXBLManager this$0>;

        $r10 = $r13.<org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord: java.lang.String namespaceURI>;

        $r11 = $r13.<org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord: java.lang.String localName>;

        $r7 = r2.<org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener: org.apache.batik.bridge.svg12.DefaultXBLManager this$0>;

        $r8 = $r7.<org.apache.batik.bridge.svg12.DefaultXBLManager: org.w3c.dom.Document document>;

        $r12 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke $r9.<org.apache.batik.bridge.svg12.DefaultXBLManager: void rebind(java.lang.String,java.lang.String,org.w3c.dom.Element)>($r10, $r11, $r12);

        return;
    }
}
