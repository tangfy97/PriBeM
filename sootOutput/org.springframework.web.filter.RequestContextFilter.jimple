public class org.springframework.web.filter.RequestContextFilter extends org.springframework.web.filter.OncePerRequestFilter
{
    private boolean threadContextInheritable;

    public void <init>()
    {
        org.springframework.web.filter.RequestContextFilter r0;

        r0 := @this: org.springframework.web.filter.RequestContextFilter;

        specialinvoke r0.<org.springframework.web.filter.OncePerRequestFilter: void <init>()>();

        r0.<org.springframework.web.filter.RequestContextFilter: boolean threadContextInheritable> = 0;

        return;
    }

    public void setThreadContextInheritable(boolean)
    {
        org.springframework.web.filter.RequestContextFilter r0;
        boolean z0;

        r0 := @this: org.springframework.web.filter.RequestContextFilter;

        z0 := @parameter0: boolean;

        r0.<org.springframework.web.filter.RequestContextFilter: boolean threadContextInheritable> = z0;

        return;
    }

    protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException
    {
        java.lang.Throwable $r16;
        javax.servlet.FilterChain r5;
        javax.servlet.http.HttpServletRequest r1;
        java.util.Locale $r2;
        java.lang.String $r11, $r15, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.web.filter.RequestContextFilter r3;
        javax.servlet.http.HttpServletResponse r6;
        org.springframework.web.context.request.ServletRequestAttributes $r0;
        org.apache.commons.logging.Log $r4, $r7, $r9, $r13, $r17, $r19;
        java.lang.StringBuilder $r8, $r10, $r12, $r14, $r18, $r20;

        r3 := @this: org.springframework.web.filter.RequestContextFilter;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r6 := @parameter1: javax.servlet.http.HttpServletResponse;

        r5 := @parameter2: javax.servlet.FilterChain;

        $r0 = new org.springframework.web.context.request.ServletRequestAttributes;

        specialinvoke $r0.<org.springframework.web.context.request.ServletRequestAttributes: void <init>(javax.servlet.http.HttpServletRequest)>(r1);

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>();

        $z0 = r3.<org.springframework.web.filter.RequestContextFilter: boolean threadContextInheritable>;

        staticinvoke <org.springframework.context.i18n.LocaleContextHolder: void setLocale(java.util.Locale,boolean)>($r2, $z0);

        $z1 = r3.<org.springframework.web.filter.RequestContextFilter: boolean threadContextInheritable>;

        staticinvoke <org.springframework.web.context.request.RequestContextHolder: void setRequestAttributes(org.springframework.web.context.request.RequestAttributes,boolean)>($r0, $z1);

        $r4 = r3.<org.springframework.web.filter.RequestContextFilter: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label1;

        $r13 = r3.<org.springframework.web.filter.RequestContextFilter: org.apache.commons.logging.Log logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bound request context to thread: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label1:
        interfaceinvoke r5.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r6);

        goto label4;

     label2:
        $r16 := @caughtexception;

        staticinvoke <org.springframework.context.i18n.LocaleContextHolder: void resetLocaleContext()>();

        staticinvoke <org.springframework.web.context.request.RequestContextHolder: void resetRequestAttributes()>();

        virtualinvoke $r0.<org.springframework.web.context.request.ServletRequestAttributes: void requestCompleted()>();

        $r17 = r3.<org.springframework.web.filter.RequestContextFilter: org.apache.commons.logging.Log logger>;

        $z4 = interfaceinvoke $r17.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label3;

        $r19 = r3.<org.springframework.web.filter.RequestContextFilter: org.apache.commons.logging.Log logger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cleared thread-bound request context: ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label3:
        throw $r16;

     label4:
        staticinvoke <org.springframework.context.i18n.LocaleContextHolder: void resetLocaleContext()>();

        staticinvoke <org.springframework.web.context.request.RequestContextHolder: void resetRequestAttributes()>();

        virtualinvoke $r0.<org.springframework.web.context.request.ServletRequestAttributes: void requestCompleted()>();

        $r7 = r3.<org.springframework.web.filter.RequestContextFilter: org.apache.commons.logging.Log logger>;

        $z3 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label5;

        $r9 = r3.<org.springframework.web.filter.RequestContextFilter: org.apache.commons.logging.Log logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cleared thread-bound request context: ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r11);

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }
}
