public class org.apache.poi.ss.format.CellTextFormatter extends org.apache.poi.ss.format.CellFormatter
{
    private final int[] textPos;
    private final java.lang.String desc;
    static final org.apache.poi.ss.format.CellFormatter SIMPLE_TEXT;

    public void <init>(java.lang.String)
    {
        org.apache.poi.ss.format.CellTextFormatter r0;
        int[] r2, $r7, $r9, $r11, $r12;
        java.lang.StringBuffer $r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String r1, $r6, $r8, $r10;
        org.apache.poi.ss.format.CellTextFormatter$1 $r3;
        org.apache.poi.ss.format.CellFormatType $r4;

        r0 := @this: org.apache.poi.ss.format.CellTextFormatter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.poi.ss.format.CellFormatter: void <init>(java.lang.String)>(r1);

        r2 = newarray (int)[1];

        $r4 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType TEXT>;

        $r3 = new org.apache.poi.ss.format.CellTextFormatter$1;

        specialinvoke $r3.<org.apache.poi.ss.format.CellTextFormatter$1: void <init>(org.apache.poi.ss.format.CellTextFormatter,int[])>(r0, r2);

        $r5 = staticinvoke <org.apache.poi.ss.format.CellFormatPart: java.lang.StringBuffer parseFormat(java.lang.String,org.apache.poi.ss.format.CellFormatType,org.apache.poi.ss.format.CellFormatPart$PartHandler)>(r1, $r4, $r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.poi.ss.format.CellTextFormatter: java.lang.String desc> = $r6;

        $i0 = r2[0];

        $r7 = newarray (int)[$i0];

        r0.<org.apache.poi.ss.format.CellTextFormatter: int[] textPos> = $r7;

        $r8 = r0.<org.apache.poi.ss.format.CellTextFormatter: java.lang.String desc>;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        i5 = $i1 - 1;

        i6 = 0;

     label1:
        $r9 = r0.<org.apache.poi.ss.format.CellTextFormatter: int[] textPos>;

        $i2 = lengthof $r9;

        if i6 >= $i2 goto label2;

        $r11 = r0.<org.apache.poi.ss.format.CellTextFormatter: int[] textPos>;

        $r10 = r0.<org.apache.poi.ss.format.CellTextFormatter: java.lang.String desc>;

        $i3 = virtualinvoke $r10.<java.lang.String: int lastIndexOf(java.lang.String,int)>("\u0000", i5);

        $r11[i6] = $i3;

        $r12 = r0.<org.apache.poi.ss.format.CellTextFormatter: int[] textPos>;

        $i4 = $r12[i6];

        i5 = $i4 - 1;

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    public void formatValue(java.lang.StringBuffer, java.lang.Object)
    {
        org.apache.poi.ss.format.CellTextFormatter r3;
        int[] $r5, $r7;
        java.lang.StringBuffer r0;
        int $i0, $i1, i2, $i3, i4, $i5;
        java.lang.Object r1;
        java.lang.String $r2, $r4, r6;
        boolean $z0;

        r3 := @this: org.apache.poi.ss.format.CellTextFormatter;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        r6 = $r2;

        $z0 = r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        r6 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

     label1:
        $r4 = r3.<org.apache.poi.ss.format.CellTextFormatter: java.lang.String desc>;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i4 = 0;

     label2:
        $r7 = r3.<org.apache.poi.ss.format.CellTextFormatter: int[] textPos>;

        $i5 = lengthof $r7;

        if i4 >= $i5 goto label3;

        $r5 = r3.<org.apache.poi.ss.format.CellTextFormatter: int[] textPos>;

        $i1 = $r5[i4];

        i2 = $i0 + $i1;

        $i3 = i2 + 1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i2, $i3, r6);

        i4 = i4 + 1;

        goto label2;

     label3:
        return;
    }

    public void simpleValue(java.lang.StringBuffer, java.lang.Object)
    {
        org.apache.poi.ss.format.CellTextFormatter r3;
        java.lang.StringBuffer r0;
        java.lang.Object r1;
        org.apache.poi.ss.format.CellFormatter $r2;

        r3 := @this: org.apache.poi.ss.format.CellTextFormatter;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.Object;

        $r2 = <org.apache.poi.ss.format.CellTextFormatter: org.apache.poi.ss.format.CellFormatter SIMPLE_TEXT>;

        virtualinvoke $r2.<org.apache.poi.ss.format.CellFormatter: void formatValue(java.lang.StringBuffer,java.lang.Object)>(r0, r1);

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.format.CellTextFormatter $r0;

        $r0 = new org.apache.poi.ss.format.CellTextFormatter;

        specialinvoke $r0.<org.apache.poi.ss.format.CellTextFormatter: void <init>(java.lang.String)>("@");

        <org.apache.poi.ss.format.CellTextFormatter: org.apache.poi.ss.format.CellFormatter SIMPLE_TEXT> = $r0;

        return;
    }
}
