public class org.apache.poi.xwpf.usermodel.XWPFRun extends java.lang.Object implements org.apache.poi.xwpf.usermodel.ISDTContents, org.apache.poi.xwpf.usermodel.IRunElement
{
    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run;
    private java.lang.String pictureText;
    private org.apache.poi.xwpf.usermodel.IRunBody parent;
    private java.util.List pictures;

    public void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR, org.apache.poi.xwpf.usermodel.IRunBody)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument $r33, $r38;
        org.apache.poi.xwpf.usermodel.IRunBody r2;
        org.apache.poi.xwpf.usermodel.XWPFPicture $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTAnchor r42;
        java.util.List $r3, $r7, $r13, $r17, $r27, $r29;
        org.apache.xmlbeans.XmlObject[] $r19;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR r1;
        org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline r43;
        long $l3, $l4;
        java.util.ArrayList $r6, $r10;
        java.lang.StringBuffer $r5;
        org.w3c.dom.Node $r21, $r23, $r24;
        int $i0, $i1, $i2, i5, i6;
        org.apache.poi.util.IdentifierManager $r34, $r39;
        java.lang.String $r9, $r25;
        org.apache.xmlbeans.XmlObject $r20, r44, r45;
        org.w3c.dom.NodeList $r22;
        java.util.Iterator $r4, $r8, $r11, $r14, $r28, $r30;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDrawing r41;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r32, $r35, $r37, $r40;
        java.lang.Object $r12, $r15, $r18, $r26, $r31, $r36;
        org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture r46;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r1 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR;

        r2 := @parameter1: org.apache.poi.xwpf.usermodel.IRunBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run> = r1;

        r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.IRunBody parent> = r2;

        $r3 = interfaceinvoke r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: java.util.List getDrawingList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r26 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r41 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDrawing) $r26;

        $r27 = interfaceinvoke r41.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDrawing: java.util.List getAnchorList()>();

        $r28 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label04;

        $r36 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r42 = (org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTAnchor) $r36;

        $r37 = interfaceinvoke r42.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps getDocPr()>();

        if $r37 == null goto label03;

        $r38 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.XWPFDocument getDocument()>();

        $r39 = virtualinvoke $r38.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.util.IdentifierManager getDrawingIdManager()>();

        $r40 = interfaceinvoke r42.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps getDocPr()>();

        $l4 = interfaceinvoke $r40.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: long getId()>();

        virtualinvoke $r39.<org.apache.poi.util.IdentifierManager: long reserve(long)>($l4);

     label03:
        goto label02;

     label04:
        $r29 = interfaceinvoke r41.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDrawing: java.util.List getInlineList()>();

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z6 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label07;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r43 = (org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline) $r31;

        $r32 = interfaceinvoke r43.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps getDocPr()>();

        if $r32 == null goto label06;

        $r33 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.XWPFDocument getDocument()>();

        $r34 = virtualinvoke $r33.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.util.IdentifierManager getDrawingIdManager()>();

        $r35 = interfaceinvoke r43.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps getDocPr()>();

        $l3 = interfaceinvoke $r35.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: long getId()>();

        virtualinvoke $r34.<org.apache.poi.util.IdentifierManager: long reserve(long)>($l3);

     label06:
        goto label05;

     label07:
        goto label01;

     label08:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = interfaceinvoke r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: java.util.List getPictList()>();

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r18 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r44 = (org.apache.xmlbeans.XmlObject) $r18;

        $r19 = interfaceinvoke r44.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace w=\'http://schemas.openxmlformats.org/wordprocessingml/2006/main\' .//w:t");

        i5 = 0;

     label10:
        $i0 = lengthof $r19;

        if i5 >= $i0 goto label15;

        $r20 = $r19[i5];

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.XmlObject: org.w3c.dom.Node getDomNode()>();

        $r22 = interfaceinvoke $r21.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i6 = 0;

     label11:
        $i1 = interfaceinvoke $r22.<org.w3c.dom.NodeList: int getLength()>();

        if i6 >= $i1 goto label14;

        $r23 = interfaceinvoke $r22.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i6);

        $z4 = $r23 instanceof org.w3c.dom.Text;

        if $z4 == 0 goto label13;

        $i2 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        if $i2 <= 0 goto label12;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label12:
        $r24 = interfaceinvoke $r22.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i6);

        $r25 = interfaceinvoke $r24.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

     label13:
        i6 = i6 + 1;

        goto label11;

     label14:
        i5 = i5 + 1;

        goto label10;

     label15:
        goto label09;

     label16:
        $r9 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.lang.String pictureText> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.util.List pictures> = $r10;

        $r11 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r45 = (org.apache.xmlbeans.XmlObject) $r12;

        $r13 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.util.List getCTPictures(org.apache.xmlbeans.XmlObject)>(r45);

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z3 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label19;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r46 = (org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture) $r15;

        $r16 = new org.apache.poi.xwpf.usermodel.XWPFPicture;

        specialinvoke $r16.<org.apache.poi.xwpf.usermodel.XWPFPicture: void <init>(org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture,org.apache.poi.xwpf.usermodel.XWPFRun)>(r46, r0);

        $r17 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.util.List pictures>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label18;

     label19:
        goto label17;

     label20:
        return;
    }

    public void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR, org.apache.poi.xwpf.usermodel.XWPFParagraph)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r1 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR;

        r2 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR,org.apache.poi.xwpf.usermodel.IRunBody)>(r1, r2);

        return;
    }

    private java.util.List getCTPictures(org.apache.xmlbeans.XmlObject)
    {
        java.util.ArrayList $r0;
        int i0, i1;
        org.apache.xmlbeans.XmlObject r1, r16;
        java.lang.String $r6, $r9, $r12;
        org.apache.xmlbeans.SchemaType $r4;
        org.apache.poi.POIXMLException $r14;
        boolean $z0, $z1;
        org.apache.poi.xwpf.usermodel.XWPFRun r15;
        org.apache.xmlbeans.XmlException $r13;
        org.apache.xmlbeans.XmlObject[] $r10;
        java.lang.StringBuilder $r2, $r3, $r7, $r8;
        javax.xml.namespace.QName $r5;
        org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture $r11;

        r15 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("declare namespace pic=\'");

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture: org.apache.xmlbeans.SchemaType type>;

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r6 = virtualinvoke $r5.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' .//pic:pic");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = interfaceinvoke r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>($r9);

        i0 = lengthof $r10;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        r16 = $r10[i1];

        $z0 = r16 instanceof org.apache.xmlbeans.impl.values.XmlAnyTypeImpl;

        if $z0 == 0 goto label5;

     label2:
        $r12 = virtualinvoke r16.<java.lang.Object: java.lang.String toString()>();

        r16 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture$Factory: org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture parse(java.lang.String)>($r12);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = new org.apache.poi.POIXMLException;

        specialinvoke $r14.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label5:
        $z1 = r16 instanceof org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture;

        if $z1 == 0 goto label6;

        $r11 = (org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture) r16;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return $r0;

        catch org.apache.xmlbeans.XmlException from label2 to label3 with label4;
    }

    public org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR getCTR()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        return $r1;
    }

    public org.apache.poi.xwpf.usermodel.IRunBody getParent()
    {
        org.apache.poi.xwpf.usermodel.IRunBody $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.IRunBody parent>;

        return $r1;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph getParagraph()
    {
        org.apache.poi.xwpf.usermodel.IRunBody $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        boolean $z0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.IRunBody parent>;

        $z0 = $r1 instanceof org.apache.poi.xwpf.usermodel.XWPFParagraph;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.IRunBody parent>;

        $r3 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r2;

        return $r3;

     label1:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.XWPFDocument getDocument()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument $r3;
        org.apache.poi.xwpf.usermodel.IRunBody $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.IRunBody parent>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.IRunBody parent>;

        $r3 = interfaceinvoke $r2.<org.apache.poi.xwpf.usermodel.IRunBody: org.apache.poi.xwpf.usermodel.XWPFDocument getDocument()>();

        return $r3;

     label1:
        return null;
    }

    private boolean isCTOnOff(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r1, $r2, $r3, $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff r0;
        boolean $z0;

        r5 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r0 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff;

        $z0 = interfaceinvoke r0.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: boolean isSetVal()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $r2 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum ON>;

        if $r1 != $r2 goto label2;

        return 1;

     label2:
        $r3 = interfaceinvoke r0.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $r4 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        if $r3 != $r4 goto label3;

        return 1;

     label3:
        return 0;
    }

    public boolean isBold()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetB()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getB()>();

        $z1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: boolean isCTOnOff(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff)>($r3);

        return $z1;
    }

    public void setBold(boolean)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2, $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r3, $r6;
        boolean $z0, $z1, z2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        z2 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label2:
        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetB()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getB()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff addNewB()>();

     label4:
        $r3 = $r6;

        if z2 == 0 goto label5;

        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        goto label6;

     label5:
        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum FALSE>;

     label6:
        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r7);

        return;
    }

    public java.lang.String getColor()
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTColor $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor $r5;
        java.lang.String r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r6 = null;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        $z1 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetColor()>();

        if $z1 == 0 goto label1;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTColor getColor()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTColor: org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor xgetVal()>();

        r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor: java.lang.String getStringValue()>();

     label1:
        return r6;
    }

    public void setColor(java.lang.String)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTColor $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2, $r4;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label2:
        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetColor()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTColor getColor()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTColor addNewColor()>();

     label4:
        interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTColor: void setVal(java.lang.Object)>(r3);

        return;
    }

    public java.lang.String getText(int)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        int $i0, i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: int sizeOfTArray()>();

        if $i0 != 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText getTArray(int)>(i1);

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText: java.lang.String getStringValue()>();

     label2:
        return $r4;
    }

    public java.lang.String getPictureText()
    {
        java.lang.String $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.lang.String pictureText>;

        return $r1;
    }

    public void setText(java.lang.String)
    {
        java.util.List $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r2;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: java.util.List getTList()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: void setText(java.lang.String,int)>(r1, $i0);

        return;
    }

    public void setText(java.lang.String, int)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText $r7;
        java.lang.ArrayIndexOutOfBoundsException $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2, $r3, $r5;
        int i0, $i1, $i2;
        java.lang.String r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $i1 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: int sizeOfTArray()>();

        if i0 <= $i1 goto label1;

        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("Value too large for the parameter position in XWPFRun.setText(String value,int pos)");

        throw $r6;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $i2 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: int sizeOfTArray()>();

        if i0 >= $i2 goto label2;

        if i0 < 0 goto label2;

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r7 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText getTArray(int)>(i0);

        goto label3;

     label2:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r7 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText addNewT()>();

     label3:
        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText: void setStringValue(java.lang.String)>(r4);

        staticinvoke <org.apache.poi.xwpf.usermodel.XWPFRun: void preserveSpaces(org.apache.xmlbeans.XmlString)>($r7);

        return;
    }

    public boolean isItalic()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetI()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getI()>();

        $z1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: boolean isCTOnOff(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff)>($r3);

        return $z1;
    }

    public void setItalic(boolean)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2, $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r3, $r6;
        boolean $z0, $z1, z2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        z2 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label2:
        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetI()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getI()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff addNewI()>();

     label4:
        $r3 = $r6;

        if z2 == 0 goto label5;

        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        goto label6;

     label5:
        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum FALSE>;

     label6:
        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r7);

        return;
    }

    public org.apache.poi.xwpf.usermodel.UnderlinePatterns getUnderline()
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STUnderline$Enum $r4;
        org.apache.poi.xwpf.usermodel.UnderlinePatterns $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTUnderline $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetU()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTUnderline getU()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTUnderline: org.openxmlformats.schemas.wordprocessingml.x2006.main.STUnderline$Enum getVal()>();

        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STUnderline$Enum: int intValue()>();

        $r5 = staticinvoke <org.apache.poi.xwpf.usermodel.UnderlinePatterns: org.apache.poi.xwpf.usermodel.UnderlinePatterns valueOf(int)>($i0);

        goto label2;

     label1:
        $r5 = <org.apache.poi.xwpf.usermodel.UnderlinePatterns: org.apache.poi.xwpf.usermodel.UnderlinePatterns NONE>;

     label2:
        return $r5;
    }

    public void setUnderline(org.apache.poi.xwpf.usermodel.UnderlinePatterns)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STUnderline$Enum $r5;
        org.apache.poi.xwpf.usermodel.UnderlinePatterns r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTUnderline $r3, $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2, $r6;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r4 := @parameter0: org.apache.poi.xwpf.usermodel.UnderlinePatterns;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r7 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label2:
        $r3 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTUnderline getU()>();

        if $r3 != null goto label3;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTUnderline addNewU()>();

        goto label4;

     label3:
        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTUnderline getU()>();

     label4:
        $i0 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.UnderlinePatterns: int getValue()>();

        $r5 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STUnderline$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STUnderline$Enum forInt(int)>($i0);

        interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTUnderline: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STUnderline$Enum)>($r5);

        return;
    }

    public boolean isStrike()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetStrike()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getStrike()>();

        $z1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: boolean isCTOnOff(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff)>($r3);

        return $z1;
    }

    public void setStrike(boolean)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2, $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r3, $r6;
        boolean $z0, $z1, z2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        z2 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label2:
        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetStrike()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getStrike()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff addNewStrike()>();

     label4:
        $r3 = $r6;

        if z2 == 0 goto label5;

        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        goto label6;

     label5:
        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum FALSE>;

     label6:
        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r7);

        return;
    }

    public org.apache.poi.xwpf.usermodel.VerticalAlign getSubscript()
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalAlignRun$Enum $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        int $i0;
        org.apache.poi.xwpf.usermodel.VerticalAlign $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalAlignRun $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetVertAlign()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalAlignRun getVertAlign()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalAlignRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalAlignRun$Enum getVal()>();

        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalAlignRun$Enum: int intValue()>();

        $r5 = staticinvoke <org.apache.poi.xwpf.usermodel.VerticalAlign: org.apache.poi.xwpf.usermodel.VerticalAlign valueOf(int)>($i0);

        goto label2;

     label1:
        $r5 = <org.apache.poi.xwpf.usermodel.VerticalAlign: org.apache.poi.xwpf.usermodel.VerticalAlign BASELINE>;

     label2:
        return $r5;
    }

    public void setSubscript(org.apache.poi.xwpf.usermodel.VerticalAlign)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalAlignRun$Enum $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2, $r5;
        int $i0;
        org.apache.poi.xwpf.usermodel.VerticalAlign r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalAlignRun $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r3 := @parameter0: org.apache.poi.xwpf.usermodel.VerticalAlign;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label2:
        $z1 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetVertAlign()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalAlignRun getVertAlign()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalAlignRun addNewVertAlign()>();

     label4:
        $i0 = virtualinvoke r3.<org.apache.poi.xwpf.usermodel.VerticalAlign: int getValue()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalAlignRun$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalAlignRun$Enum forInt(int)>($i0);

        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalAlignRun: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalAlignRun$Enum)>($r4);

        return;
    }

    public java.lang.String getFontFamily()
    {
        java.lang.String $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.lang.String getFontFamily(org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange)>(null);

        return $r1;
    }

    public java.lang.String getFontFamily(org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange r4, $r10;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        int[] $r5;
        int $i0, $i1;
        java.lang.String $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r4 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetRFonts()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts getRFonts()>();

        $r5 = <org.apache.poi.xwpf.usermodel.XWPFRun$1: int[] $SwitchMap$org$apache$poi$xwpf$usermodel$XWPFRun$FontCharRange>;

        if r4 != null goto label3;

        $r10 = <org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange: org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange ascii>;

        goto label4;

     label3:
        $r10 = r4;

     label4:
        $i0 = virtualinvoke $r10.<org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label8;
            default: goto label5;
        };

     label5:
        $r9 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: java.lang.String getAscii()>();

        return $r9;

     label6:
        $r8 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: java.lang.String getCs()>();

        return $r8;

     label7:
        $r7 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: java.lang.String getEastAsia()>();

        return $r7;

     label8:
        $r6 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: java.lang.String getHAnsi()>();

        return $r6;
    }

    public void setFontFamily(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: void setFontFamily(java.lang.String,org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange)>(r1, null);

        return;
    }

    public void setFontFamily(java.lang.String, org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts r3, $r9;
        int[] $r5;
        int $i0, $i1;
        java.lang.String r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1, $r2, $r7;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r6 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label01;

        $r7 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label02;

     label01:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r8 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label02:
        $z1 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetRFonts()>();

        if $z1 == 0 goto label03;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts getRFonts()>();

        goto label04;

     label03:
        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts addNewRFonts()>();

     label04:
        r3 = $r9;

        if r4 != null goto label07;

        interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: void setAscii(java.lang.String)>(r6);

        $z2 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: boolean isSetHAnsi()>();

        if $z2 != 0 goto label05;

        interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: void setHAnsi(java.lang.String)>(r6);

     label05:
        $z3 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: boolean isSetCs()>();

        if $z3 != 0 goto label06;

        interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: void setCs(java.lang.String)>(r6);

     label06:
        $z4 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: boolean isSetEastAsia()>();

        if $z4 != 0 goto label12;

        interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: void setEastAsia(java.lang.String)>(r6);

        goto label12;

     label07:
        $r5 = <org.apache.poi.xwpf.usermodel.XWPFRun$1: int[] $SwitchMap$org$apache$poi$xwpf$usermodel$XWPFRun$FontCharRange>;

        $i0 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFRun$FontCharRange: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            default: goto label12;
        };

     label08:
        interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: void setAscii(java.lang.String)>(r6);

        goto label12;

     label09:
        interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: void setCs(java.lang.String)>(r6);

        goto label12;

     label10:
        interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: void setEastAsia(java.lang.String)>(r6);

        goto label12;

     label11:
        interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFonts: void setHAnsi(java.lang.String)>(r6);

     label12:
        return;
    }

    public int getFontSize()
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHpsMeasure $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        int $i0, $i2;
        java.math.BigInteger $r4, $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetSz()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHpsMeasure getSz()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHpsMeasure: java.math.BigInteger getVal()>();

        $r7 = new java.math.BigInteger;

        specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String)>("2");

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r7);

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setFontSize(int)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r11;
        int i0;
        java.math.BigInteger $r0, $r8, $r9;
        java.lang.String $r4;
        boolean $z0, $z1;
        org.apache.poi.xwpf.usermodel.XWPFRun r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHpsMeasure $r12;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r6, $r7, $r10;
        java.lang.StringBuilder $r1, $r2, $r3;

        r5 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        i0 := @parameter0: int;

        $r0 = new java.math.BigInteger;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.math.BigInteger: void <init>(java.lang.String)>($r4);

        $r6 = r5.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r10 = r5.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label2;

     label1:
        $r7 = r5.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r11 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label2:
        $z1 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetSz()>();

        if $z1 == 0 goto label3;

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHpsMeasure getSz()>();

        goto label4;

     label3:
        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHpsMeasure addNewSz()>();

     label4:
        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String)>("2");

        $r9 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r8);

        interfaceinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHpsMeasure: void setVal(java.math.BigInteger)>($r9);

        return;
    }

    public int getTextPosition()
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSignedHpsMeasure $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        int $i0, $i2;
        java.math.BigInteger $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetPosition()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSignedHpsMeasure getPosition()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSignedHpsMeasure: java.math.BigInteger getVal()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setTextPosition(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSignedHpsMeasure $r10;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr $r9;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r6, $r7, $r8;
        int i0;
        java.math.BigInteger $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0, $z1;

        r5 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        i0 := @parameter0: int;

        $r0 = new java.math.BigInteger;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.math.BigInteger: void <init>(java.lang.String)>($r4);

        $r6 = r5.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $z0 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r8 = r5.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr getRPr()>();

        goto label2;

     label1:
        $r7 = r5.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r9 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr addNewRPr()>();

     label2:
        $z1 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: boolean isSetPosition()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSignedHpsMeasure getPosition()>();

        goto label4;

     label3:
        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSignedHpsMeasure addNewPosition()>();

     label4:
        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSignedHpsMeasure: void setVal(java.math.BigInteger)>($r0);

        return;
    }

    public void removeBreak()
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        return;
    }

    public void addBreak()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr addNewBr()>();

        return;
    }

    public void addBreak(org.apache.poi.xwpf.usermodel.BreakType)
    {
        org.apache.poi.xwpf.usermodel.BreakType r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrType$Enum $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r3 := @parameter0: org.apache.poi.xwpf.usermodel.BreakType;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr addNewBr()>();

        $i0 = virtualinvoke r3.<org.apache.poi.xwpf.usermodel.BreakType: int getValue()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrType$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrType$Enum forInt(int)>($i0);

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr: void setType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrType$Enum)>($r4);

        return;
    }

    public void addBreak(org.apache.poi.xwpf.usermodel.BreakClear)
    {
        org.apache.poi.xwpf.usermodel.BreakType $r3;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrType$Enum $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrClear$Enum $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        int $i0, $i1;
        org.apache.poi.xwpf.usermodel.BreakClear r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r5 := @parameter0: org.apache.poi.xwpf.usermodel.BreakClear;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr addNewBr()>();

        $r3 = <org.apache.poi.xwpf.usermodel.BreakType: org.apache.poi.xwpf.usermodel.BreakType TEXT_WRAPPING>;

        $i0 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.BreakType: int getValue()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrType$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrType$Enum forInt(int)>($i0);

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr: void setType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrType$Enum)>($r4);

        $i1 = virtualinvoke r5.<org.apache.poi.xwpf.usermodel.BreakClear: int getValue()>();

        $r6 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrClear$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrClear$Enum forInt(int)>($i1);

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr: void setClear(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBrClear$Enum)>($r6);

        return;
    }

    public void addTab()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTEmpty addNewTab()>();

        return;
    }

    public void removeTab()
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        return;
    }

    public void addCarriageReturn()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTEmpty addNewCr()>();

        return;
    }

    public void removeCarriageReturn()
    {
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFPicture addPicture(java.io.InputStream, int, java.lang.String, int, int) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException, java.io.IOException
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument $r2, $r35;
        org.apache.poi.xwpf.usermodel.IRunBody $r1, $r34;
        org.apache.poi.xwpf.usermodel.XWPFPicture $r67;
        org.apache.xmlbeans.SchemaType $r12, $r18, $r24;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData $r44;
        org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties $r60;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties $r54;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r7;
        java.lang.StringBuilder $r10, $r11, $r15, $r16, $r17, $r21, $r22, $r23, $r27, $r28, $r29, $r30, $r37, $r38, $r39, $r50, $r51, $r52;
        javax.xml.namespace.QName $r13, $r19, $r25;
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r61;
        long $l1, $l3, $l5, $l6, $l7;
        org.apache.poi.util.IdentifierManager $r36;
        java.lang.String $r4, $r14, $r20, $r26, $r31, $r40, r41, $r53, $r59;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r42, $r64;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r56;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking $r55;
        org.apache.xmlbeans.XmlException $r69;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r62;
        org.apache.xmlbeans.XmlToken $r32;
        java.lang.IllegalStateException $r70;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;
        java.util.List $r45, $r68;
        org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r63;
        org.apache.poi.openxml4j.opc.PackageRelationship $r58;
        org.apache.poi.POIXMLDocumentPart $r5;
        org.openxmlformats.schemas.drawingml.x2006.picture.CTPictureNonVisual $r48;
        org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum $r66;
        int i0, i2, i4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject $r43;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D $r65;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDrawing $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r57;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r33, $r49;
        java.lang.Object $r46;
        org.apache.poi.xwpf.usermodel.XWPFPictureData r6;
        org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture r47;
        java.io.InputStream r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        r3 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r41 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.IRunBody parent>;

        $r2 = interfaceinvoke $r1.<org.apache.poi.xwpf.usermodel.IRunBody: org.apache.poi.xwpf.usermodel.XWPFDocument getDocument()>();

        $r4 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.lang.String addPictureData(java.io.InputStream,int)>(r3, i0);

        $r5 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.POIXMLDocumentPart getRelationById(java.lang.String)>($r4);

        r6 = (org.apache.poi.xwpf.usermodel.XWPFPictureData) $r5;

     label1:
        $r7 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDrawing addNewDrawing()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDrawing: org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline addNewInline()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:graphic xmlns:a=\"");

        $r12 = <org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject: org.apache.xmlbeans.SchemaType type>;

        $r13 = interfaceinvoke $r12.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r14 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:graphicData uri=\"");

        $r18 = <org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture: org.apache.xmlbeans.SchemaType type>;

        $r19 = interfaceinvoke $r18.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r20 = virtualinvoke $r19.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<pic:pic xmlns:pic=\"");

        $r24 = <org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture: org.apache.xmlbeans.SchemaType type>;

        $r25 = interfaceinvoke $r24.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r26 = virtualinvoke $r25.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" />");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:graphicData>");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:graphic>");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = staticinvoke <org.apache.xmlbeans.XmlToken$Factory: org.apache.xmlbeans.XmlToken parse(java.lang.String)>($r31);

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r32);

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: void setDistT(long)>(0L);

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: void setDistR(long)>(0L);

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: void setDistB(long)>(0L);

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: void setDistL(long)>(0L);

        $r33 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps addNewDocPr()>();

        $r34 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: org.apache.poi.xwpf.usermodel.IRunBody getParent()>();

        $r35 = interfaceinvoke $r34.<org.apache.poi.xwpf.usermodel.IRunBody: org.apache.poi.xwpf.usermodel.XWPFDocument getDocument()>();

        $r36 = virtualinvoke $r35.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.util.IdentifierManager getDrawingIdManager()>();

        $l1 = virtualinvoke $r36.<org.apache.poi.util.IdentifierManager: long reserveNew()>();

        interfaceinvoke $r33.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setId(long)>($l1);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Drawing ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setName(java.lang.String)>($r40);

        interfaceinvoke $r33.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setDescr(java.lang.String)>(r41);

        $r42 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewExtent()>();

        $l3 = (long) i2;

        interfaceinvoke $r42.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>($l3);

        $l5 = (long) i4;

        interfaceinvoke $r42.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>($l5);

        $r43 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject getGraphic()>();

        $r44 = interfaceinvoke $r43.<org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData getGraphicData()>();

        $r45 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.util.List getCTPictures(org.apache.xmlbeans.XmlObject)>($r44);

        $r46 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>(0);

        r47 = (org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture) $r46;

        $r48 = interfaceinvoke r47.<org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture: org.openxmlformats.schemas.drawingml.x2006.picture.CTPictureNonVisual addNewNvPicPr()>();

        $r49 = interfaceinvoke $r48.<org.openxmlformats.schemas.drawingml.x2006.picture.CTPictureNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps addNewCNvPr()>();

        interfaceinvoke $r49.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setId(long)>(0L);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Picture ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setName(java.lang.String)>($r53);

        interfaceinvoke $r49.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setDescr(java.lang.String)>(r41);

        $r54 = interfaceinvoke $r48.<org.openxmlformats.schemas.drawingml.x2006.picture.CTPictureNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties addNewCNvPicPr()>();

        $r55 = interfaceinvoke $r54.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking addNewPicLocks()>();

        interfaceinvoke $r55.<org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking: void setNoChangeAspect(boolean)>(1);

        $r56 = interfaceinvoke r47.<org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties addNewBlipFill()>();

        $r57 = interfaceinvoke $r56.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip addNewBlip()>();

        $r58 = virtualinvoke r6.<org.apache.poi.xwpf.usermodel.XWPFPictureData: org.apache.poi.openxml4j.opc.PackageRelationship getPackageRelationship()>();

        $r59 = virtualinvoke $r58.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        interfaceinvoke $r57.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: void setEmbed(java.lang.String)>($r59);

        $r60 = interfaceinvoke $r56.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties addNewStretch()>();

        interfaceinvoke $r60.<org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTRelativeRect addNewFillRect()>();

        $r61 = interfaceinvoke r47.<org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties addNewSpPr()>();

        $r62 = interfaceinvoke $r61.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D addNewXfrm()>();

        $r63 = interfaceinvoke $r62.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D addNewOff()>();

        interfaceinvoke $r63.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setX(long)>(0L);

        interfaceinvoke $r63.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setY(long)>(0L);

        $r64 = interfaceinvoke $r62.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewExt()>();

        $l6 = (long) i2;

        interfaceinvoke $r64.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>($l6);

        $l7 = (long) i4;

        interfaceinvoke $r64.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>($l7);

        $r65 = interfaceinvoke $r61.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D addNewPrstGeom()>();

        $r66 = <org.openxmlformats.schemas.drawingml.x2006.main.STShapeType: org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum RECT>;

        interfaceinvoke $r65.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: void setPrst(org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum)>($r66);

        interfaceinvoke $r65.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList addNewAvLst()>();

        $r67 = new org.apache.poi.xwpf.usermodel.XWPFPicture;

        specialinvoke $r67.<org.apache.poi.xwpf.usermodel.XWPFPicture: void <init>(org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture,org.apache.poi.xwpf.usermodel.XWPFRun)>(r47, r0);

        $r68 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.util.List pictures>;

        interfaceinvoke $r68.<java.util.List: boolean add(java.lang.Object)>($r67);

     label2:
        return $r67;

     label3:
        $r69 := @caughtexception;

        $r70 = new java.lang.IllegalStateException;

        specialinvoke $r70.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r69);

        throw $r70;

        catch org.apache.xmlbeans.XmlException from label1 to label2 with label3;
    }

    public java.util.List getEmbeddedPictures()
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFRun r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFRun: java.util.List pictures>;

        return $r1;
    }

    static void preserveSpaces(org.apache.xmlbeans.XmlString)
    {
        org.apache.xmlbeans.XmlCursor $r2;
        org.apache.xmlbeans.XmlString r0;
        java.lang.String $r1;
        javax.xml.namespace.QName $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.xmlbeans.XmlString;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlString: java.lang.String getStringValue()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(" ");

        if $z1 == 0 goto label2;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlString: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "space");

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void insertAttributeWithValue(javax.xml.namespace.QName,java.lang.String)>($r3, "preserve");

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void dispose()>();

     label2:
        return;
    }

    public java.lang.String toString()
    {
        java.math.BigInteger $r13, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.poi.xwpf.usermodel.XWPFRun r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r2;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r16, $r17, $r19, $r20;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef r34;
        org.apache.xmlbeans.XmlCursor $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText $r30;
        java.lang.StringBuffer $r0, $r6;
        org.w3c.dom.Node $r9, $r21, $r27;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r5, $r7, $r10, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r31, $r32, $r33, $r35, $r36;
        org.apache.xmlbeans.XmlObject $r8;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR run>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void selectPath(java.lang.String)>("./*");

     label01:
        $z0 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean toNextSelection()>();

        if $z0 == 0 goto label14;

        $r8 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z1 = $r8 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText;

        if $z1 == 0 goto label02;

        $r27 = interfaceinvoke $r8.<org.apache.xmlbeans.XmlObject: org.w3c.dom.Node getDomNode()>();

        $r28 = interfaceinvoke $r27.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r29 = "w:instrText";

        $z9 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z9 != 0 goto label02;

        $r30 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText) $r8;

        $r31 = interfaceinvoke $r30.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText: java.lang.String getStringValue()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

     label02:
        $z10 = $r8 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPTab;

        if $z10 == 0 goto label03;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

     label03:
        $z2 = $r8 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBr;

        if $z2 == 0 goto label04;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label04:
        $z3 = $r8 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTEmpty;

        if $z3 == 0 goto label10;

        $r21 = interfaceinvoke $r8.<org.apache.xmlbeans.XmlObject: org.w3c.dom.Node getDomNode()>();

        $r22 = interfaceinvoke $r21.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r23 = "w:tab";

        $z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z5 != 0 goto label05;

        $r26 = "tab";

        $z8 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z8 == 0 goto label06;

     label05:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

     label06:
        $r32 = "w:br";

        $z11 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z11 != 0 goto label07;

        $r25 = "br";

        $z7 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z7 == 0 goto label08;

     label07:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label08:
        $r33 = "w:cr";

        $z12 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z12 != 0 goto label09;

        $r24 = "cr";

        $z6 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z6 == 0 goto label10;

     label09:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label10:
        $z13 = $r8 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef;

        if $z13 == 0 goto label13;

        r34 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef) $r8;

        $r9 = interfaceinvoke r34.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef: org.w3c.dom.Node getDomNode()>();

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("footnoteReference");

        if $z4 == 0 goto label11;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[footnoteRef:");

        $r18 = interfaceinvoke r34.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef: java.math.BigInteger getId()>();

        $i2 = virtualinvoke $r18.<java.math.BigInteger: int intValue()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r35 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[endnoteRef:");

        $r13 = interfaceinvoke r34.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef: java.math.BigInteger getId()>();

        $i1 = virtualinvoke $r13.<java.math.BigInteger: int intValue()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r35 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

     label13:
        goto label01;

     label14:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r4 = r1.<org.apache.poi.xwpf.usermodel.XWPFRun: java.lang.String pictureText>;

        if $r4 == null goto label15;

        $r5 = r1.<org.apache.poi.xwpf.usermodel.XWPFRun: java.lang.String pictureText>;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label15;

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r7 = r1.<org.apache.poi.xwpf.usermodel.XWPFRun: java.lang.String pictureText>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label15:
        $r36 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r36;
    }
}
