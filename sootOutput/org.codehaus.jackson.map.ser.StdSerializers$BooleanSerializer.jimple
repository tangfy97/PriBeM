public final class org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer extends org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase
{
    final boolean _forPrimitive;

    public void <init>(boolean)
    {
        org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase: void <init>(java.lang.Class)>(class "Ljava/lang/Boolean;");

        r0.<org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer: boolean _forPrimitive> = z0;

        return;
    }

    public void serialize(java.lang.Boolean, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer r2;
        java.lang.Boolean r1;
        org.codehaus.jackson.map.SerializerProvider r3;
        boolean $z0;

        r2 := @this: org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer;

        r1 := @parameter0: java.lang.Boolean;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeBoolean(boolean)>($z0);

        return;
    }

    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider, java.lang.reflect.Type)
    {
        java.lang.reflect.Type r3;
        org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer r0;
        org.codehaus.jackson.map.SerializerProvider r2;
        boolean $z0, $z1;
        org.codehaus.jackson.node.ObjectNode $r1;

        r0 := @this: org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer;

        r2 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        r3 := @parameter1: java.lang.reflect.Type;

        $z0 = r0.<org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer: boolean _forPrimitive>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("boolean", $z1);

        return $r1;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer r0;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Boolean $r4;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.lang.Boolean) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer: void serialize(java.lang.Boolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }
}
