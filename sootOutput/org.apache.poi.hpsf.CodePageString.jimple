class org.apache.poi.hpsf.CodePageString extends java.lang.Object
{
    private static final org.apache.poi.util.POILogger logger;
    private byte[] _value;

    void <init>(byte[], int)
    {
        byte[] r1, $r2, $r3;
        org.apache.poi.util.POILogger $r5;
        org.apache.poi.hpsf.CodePageString r0;
        byte $b3;
        int i0, $i1, $i2, i4;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: org.apache.poi.hpsf.CodePageString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i0);

        i4 = i0 + 4;

        $r2 = staticinvoke <org.apache.poi.util.LittleEndian: byte[] getByteArray(byte[],int,int)>(r1, i4, $i1);

        r0.<org.apache.poi.hpsf.CodePageString: byte[] _value> = $r2;

        if $i1 == 0 goto label1;

        $r3 = r0.<org.apache.poi.hpsf.CodePageString: byte[] _value>;

        $i2 = $i1 - 1;

        $b3 = $r3[$i2];

        if $b3 == 0 goto label1;

        $r5 = <org.apache.poi.hpsf.CodePageString: org.apache.poi.util.POILogger logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CodePageString started at offset #");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not NULL-terminated");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r9);

     label1:
        return;
    }

    void <init>(java.lang.String, int) throws java.io.UnsupportedEncodingException
    {
        int i0;
        org.apache.poi.hpsf.CodePageString r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hpsf.CodePageString;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.poi.hpsf.CodePageString: void setJavaValue(java.lang.String,int)>(r1, i0);

        return;
    }

    java.lang.String getJavaValue(int) throws java.io.UnsupportedEncodingException
    {
        byte[] $r1, $r6;
        org.apache.poi.util.POILogger $r3, $r4;
        org.apache.poi.hpsf.CodePageString r0;
        int i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String $r2, r7, $r8;

        r0 := @this: org.apache.poi.hpsf.CodePageString;

        i0 := @parameter0: int;

        $i5 = (int) -1;

        if i0 != $i5 goto label1;

        $r8 = new java.lang.String;

        $r6 = r0.<org.apache.poi.hpsf.CodePageString: byte[] _value>;

        specialinvoke $r8.<java.lang.String: void <init>(byte[])>($r6);

        r7 = $r8;

        goto label2;

     label1:
        $r1 = r0.<org.apache.poi.hpsf.CodePageString: byte[] _value>;

        r7 = staticinvoke <org.apache.poi.util.CodePageUtil: java.lang.String getStringFromCodePage(byte[],int)>($r1, i0);

     label2:
        $i1 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(0);

        $i7 = (int) -1;

        if $i1 != $i7 goto label3;

        $r4 = <org.apache.poi.hpsf.CodePageString: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "String terminator (\\0) for CodePageString property value not found.Continue without trimming and hope for the best.");

        return r7;

     label3:
        $i2 = virtualinvoke r7.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if $i1 == $i3 goto label4;

        $r3 = <org.apache.poi.hpsf.CodePageString: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r3.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "String terminator (\\0) for CodePageString property value occured before the end of string. Trimming and hope for the best.");

     label4:
        $r2 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r2;
    }

    int getSize()
    {
        byte[] $r1;
        int $i0, $i1;
        org.apache.poi.hpsf.CodePageString r0;

        r0 := @this: org.apache.poi.hpsf.CodePageString;

        $r1 = r0.<org.apache.poi.hpsf.CodePageString: byte[] _value>;

        $i0 = lengthof $r1;

        $i1 = 4 + $i0;

        return $i1;
    }

    void setJavaValue(java.lang.String, int) throws java.io.UnsupportedEncodingException
    {
        byte[] $r6, $r7;
        org.apache.poi.hpsf.CodePageString r5;
        int i0, $i2;
        java.lang.StringBuilder $r2, $r3, $r8;
        java.lang.String r1, $r4;

        r5 := @this: org.apache.poi.hpsf.CodePageString;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = (int) -1;

        if i0 != $i2 goto label1;

        $r7 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        r5.<org.apache.poi.hpsf.CodePageString: byte[] _value> = $r7;

        goto label2;

     label1:
        $r6 = staticinvoke <org.apache.poi.util.CodePageUtil: byte[] getBytesInCodePage(java.lang.String,int)>($r4, i0);

        r5.<org.apache.poi.hpsf.CodePageString: byte[] _value> = $r6;

     label2:
        return;
    }

    int write(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r1, $r3, $r4;
        org.apache.poi.hpsf.CodePageString r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.poi.hpsf.CodePageString;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.apache.poi.hpsf.CodePageString: byte[] _value>;

        $i0 = lengthof $r1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(int,java.io.OutputStream)>($i0, r2);

        $r3 = r0.<org.apache.poi.hpsf.CodePageString: byte[] _value>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r3);

        $r4 = r0.<org.apache.poi.hpsf.CodePageString: byte[] _value>;

        $i1 = lengthof $r4;

        $i2 = 4 + $i1;

        return $i2;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hpsf/CodePageString;");

        <org.apache.poi.hpsf.CodePageString: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
