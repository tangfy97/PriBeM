public class org.apache.batik.gvt.GVTTreeWalker extends java.lang.Object
{
    protected org.apache.batik.gvt.GraphicsNode gvtRoot;
    protected org.apache.batik.gvt.GraphicsNode treeRoot;
    protected org.apache.batik.gvt.GraphicsNode currentNode;

    public void <init>(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.RootGraphicsNode $r2;
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode r1;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode gvtRoot> = $r2;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode treeRoot> = r1;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = r1;

        return;
    }

    public org.apache.batik.gvt.GraphicsNode getRoot()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode treeRoot>;

        return $r1;
    }

    public org.apache.batik.gvt.GraphicsNode getGVTRoot()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode gvtRoot>;

        return $r1;
    }

    public void setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.GraphicsNode r0, $r3, $r9;
        java.lang.IllegalArgumentException $r4;
        org.apache.batik.gvt.RootGraphicsNode $r1;
        org.apache.batik.gvt.GVTTreeWalker r2;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r11;

        r2 := @this: org.apache.batik.gvt.GVTTreeWalker;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        $r1 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        $r3 = r2.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode gvtRoot>;

        if $r1 == $r3 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The node ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not part of the document ");

        $r9 = r2.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode gvtRoot>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r4;

     label1:
        r2.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = r0;

        return;
    }

    public org.apache.batik.gvt.GraphicsNode getCurrentGraphicsNode()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        return $r1;
    }

    public org.apache.batik.gvt.GraphicsNode previousGraphicsNode()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        $r2 = virtualinvoke r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getPreviousGraphicsNode(org.apache.batik.gvt.GraphicsNode)>($r1);

        if $r2 == null goto label1;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = $r2;

     label1:
        return $r2;
    }

    public org.apache.batik.gvt.GraphicsNode nextGraphicsNode()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        $r2 = virtualinvoke r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getNextGraphicsNode(org.apache.batik.gvt.GraphicsNode)>($r1);

        if $r2 == null goto label1;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = $r2;

     label1:
        return $r2;
    }

    public org.apache.batik.gvt.GraphicsNode parentGraphicsNode()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2, $r3;
        org.apache.batik.gvt.CompositeGraphicsNode $r4;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r2 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode treeRoot>;

        if $r2 != $r1 goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r4 == null goto label2;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = $r4;

     label2:
        return $r4;
    }

    public org.apache.batik.gvt.GraphicsNode getNextSibling()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        $r2 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getNextSibling(org.apache.batik.gvt.GraphicsNode)>($r1);

        if $r2 == null goto label1;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = $r2;

     label1:
        return $r2;
    }

    public org.apache.batik.gvt.GraphicsNode getPreviousSibling()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        $r2 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getPreviousSibling(org.apache.batik.gvt.GraphicsNode)>($r1);

        if $r2 == null goto label1;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = $r2;

     label1:
        return $r2;
    }

    public org.apache.batik.gvt.GraphicsNode firstChild()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        $r2 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getFirstChild(org.apache.batik.gvt.GraphicsNode)>($r1);

        if $r2 == null goto label1;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = $r2;

     label1:
        return $r2;
    }

    public org.apache.batik.gvt.GraphicsNode lastChild()
    {
        org.apache.batik.gvt.GVTTreeWalker r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;

        r0 := @this: org.apache.batik.gvt.GVTTreeWalker;

        $r1 = r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode>;

        $r2 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getLastChild(org.apache.batik.gvt.GraphicsNode)>($r1);

        if $r2 == null goto label1;

        r0.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode currentNode> = $r2;

     label1:
        return $r2;
    }

    protected org.apache.batik.gvt.GraphicsNode getNextGraphicsNode(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.GraphicsNode r0, $r1, $r2, $r5, $r6, r7;
        org.apache.batik.gvt.CompositeGraphicsNode $r3;
        org.apache.batik.gvt.GVTTreeWalker r4;

        r4 := @this: org.apache.batik.gvt.GVTTreeWalker;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getFirstChild(org.apache.batik.gvt.GraphicsNode)>(r0);

        if $r1 == null goto label2;

        return $r1;

     label2:
        $r2 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getNextSibling(org.apache.batik.gvt.GraphicsNode)>(r0);

        if $r2 == null goto label3;

        return $r2;

     label3:
        r7 = r0;

        goto label5;

     label4:
        $r6 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getNextSibling(org.apache.batik.gvt.GraphicsNode)>($r3);

        if $r6 == null goto label5;

        return $r6;

     label5:
        $r3 = interfaceinvoke r7.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        r7 = $r3;

        if $r3 == null goto label6;

        $r5 = r4.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode treeRoot>;

        if $r3 != $r5 goto label4;

     label6:
        return null;
    }

    protected org.apache.batik.gvt.GraphicsNode getPreviousGraphicsNode(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.GVTTreeWalker r1;
        org.apache.batik.gvt.GraphicsNode r0, $r2, $r3, $r4, r6;
        org.apache.batik.gvt.CompositeGraphicsNode $r5;

        r1 := @this: org.apache.batik.gvt.GVTTreeWalker;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode treeRoot>;

        if r0 != $r2 goto label2;

        return null;

     label2:
        $r3 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getPreviousSibling(org.apache.batik.gvt.GraphicsNode)>(r0);

        r6 = $r3;

        if $r3 != null goto label4;

        $r5 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        return $r5;

     label3:
        r6 = $r4;

     label4:
        $r4 = staticinvoke <org.apache.batik.gvt.GVTTreeWalker: org.apache.batik.gvt.GraphicsNode getLastChild(org.apache.batik.gvt.GraphicsNode)>(r6);

        if $r4 != null goto label3;

        return r6;
    }

    protected static org.apache.batik.gvt.GraphicsNode getLastChild(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.GraphicsNode r0, $r4;
        org.apache.batik.gvt.CompositeGraphicsNode r1;
        java.util.List $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        $z0 = r0 instanceof org.apache.batik.gvt.CompositeGraphicsNode;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = (org.apache.batik.gvt.CompositeGraphicsNode) r0;

        $r2 = virtualinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        if $r2 != null goto label2;

        return null;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < 1 goto label3;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (org.apache.batik.gvt.GraphicsNode) $r3;

        return $r4;

     label3:
        return null;
    }

    protected static org.apache.batik.gvt.GraphicsNode getPreviousSibling(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.GraphicsNode r0, $r4;
        org.apache.batik.gvt.CompositeGraphicsNode $r1;
        java.util.List $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        $r1 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        if $r2 != null goto label2;

        return null;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r0);

        $i1 = $i0 - 1;

        if $i1 < 0 goto label3;

        $i2 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (org.apache.batik.gvt.GraphicsNode) $r3;

        return $r4;

     label3:
        return null;
    }

    protected static org.apache.batik.gvt.GraphicsNode getFirstChild(org.apache.batik.gvt.GraphicsNode)
    {
        java.util.List $r2;
        org.apache.batik.gvt.GraphicsNode r0, $r4;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        $z0 = r0 instanceof org.apache.batik.gvt.CompositeGraphicsNode;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = (org.apache.batik.gvt.CompositeGraphicsNode) r0;

        $r2 = virtualinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        if $r2 != null goto label2;

        return null;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < 1 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.apache.batik.gvt.GraphicsNode) $r3;

        return $r4;

     label3:
        return null;
    }

    protected static org.apache.batik.gvt.GraphicsNode getNextSibling(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.GraphicsNode r0, $r4;
        org.apache.batik.gvt.CompositeGraphicsNode $r1;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        $r1 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        if $r2 != null goto label2;

        return null;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r0);

        $i1 = $i0 + 1;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 >= $i2 goto label3;

        $i3 = $i0 + 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i3);

        $r4 = (org.apache.batik.gvt.GraphicsNode) $r3;

        return $r4;

     label3:
        return null;
    }
}
