public class org.mozilla.javascript.tools.debugger.SwingGui extends javax.swing.JFrame implements org.mozilla.javascript.tools.debugger.GuiCallback
{
    private static final long serialVersionUID;
    org.mozilla.javascript.tools.debugger.Dim dim;
    private java.lang.Runnable exitAction;
    private javax.swing.JDesktopPane desk;
    private org.mozilla.javascript.tools.debugger.ContextWindow context;
    private org.mozilla.javascript.tools.debugger.Menubar menubar;
    private javax.swing.JToolBar toolBar;
    private org.mozilla.javascript.tools.debugger.JSInternalConsole console;
    private org.mozilla.javascript.tools.debugger.EvalWindow evalWindow;
    private javax.swing.JSplitPane split1;
    private javax.swing.JLabel statusBar;
    private java.util.Hashtable toplevels;
    private java.util.Hashtable fileWindows;
    private org.mozilla.javascript.tools.debugger.FileWindow currentWindow;
    javax.swing.JFileChooser dlg;
    private java.awt.EventQueue awtEventQueue;
    static java.lang.Class class$javax$swing$JSplitPane;

    public void <init>(org.mozilla.javascript.tools.debugger.Dim, java.lang.String)
    {
        java.lang.String r1;
        java.util.Hashtable $r2, $r3;
        org.mozilla.javascript.tools.debugger.Dim r4;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r4 := @parameter0: org.mozilla.javascript.tools.debugger.Dim;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<javax.swing.JFrame: void <init>(java.lang.String)>(r1);

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.util.Hashtable toplevels> = $r2;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.util.Hashtable fileWindows> = $r3;

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Dim dim> = r4;

        specialinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: void init()>();

        virtualinvoke r4.<org.mozilla.javascript.tools.debugger.Dim: void setGuiCallback(org.mozilla.javascript.tools.debugger.GuiCallback)>(r0);

        return;
    }

    public org.mozilla.javascript.tools.debugger.Menubar getMenubar()
    {
        org.mozilla.javascript.tools.debugger.Menubar $r1;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        return $r1;
    }

    public void setExitAction(java.lang.Runnable)
    {
        java.lang.Runnable r1;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r1 := @parameter0: java.lang.Runnable;

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.lang.Runnable exitAction> = r1;

        return;
    }

    public org.mozilla.javascript.tools.debugger.JSInternalConsole getConsole()
    {
        org.mozilla.javascript.tools.debugger.JSInternalConsole $r1;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        return $r1;
    }

    public void setVisible(boolean)
    {
        javax.swing.JSplitPane $r4;
        org.mozilla.javascript.tools.debugger.ContextWindow $r3;
        org.mozilla.javascript.tools.shell.ConsoleTextArea $r2, $r9;
        java.lang.Exception $r10;
        org.mozilla.javascript.tools.debugger.JSInternalConsole $r1, $r5, $r6, $r7, $r8;
        org.mozilla.javascript.tools.debugger.SwingGui r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        z0 := @parameter0: boolean;

        specialinvoke r0.<javax.swing.JFrame: void setVisible(boolean)>(z0);

        if z0 == 0 goto label4;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        $r2 = $r1.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        virtualinvoke $r2.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void requestFocus()>();

        $r3 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        $r4 = $r3.<org.mozilla.javascript.tools.debugger.ContextWindow: javax.swing.JSplitPane split>;

        virtualinvoke $r4.<javax.swing.JSplitPane: void setDividerLocation(double)>(0.5);

     label1:
        $r5 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void setMaximum(boolean)>(1);

        $r6 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        virtualinvoke $r6.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void setSelected(boolean)>(1);

        $r7 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        virtualinvoke $r7.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void show()>();

        $r8 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        $r9 = $r8.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        virtualinvoke $r9.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void requestFocus()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void addTopLevel(java.lang.String, javax.swing.JFrame)
    {
        java.lang.String r2;
        javax.swing.JFrame r0;
        java.util.Hashtable $r3;
        org.mozilla.javascript.tools.debugger.SwingGui r1;

        r1 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: javax.swing.JFrame;

        if r0 == r1 goto label1;

        $r3 = r1.<org.mozilla.javascript.tools.debugger.SwingGui: java.util.Hashtable toplevels>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label1:
        return;
    }

    private void init()
    {
        java.lang.SecurityException $r56;
        javax.swing.JFileChooser $r52, $r54, $r57;
        java.awt.BorderLayout $r27;
        javax.swing.JToolBar $r3, $r21, $r22, $r23, $r24, $r25, $r29;
        javax.swing.JDesktopPane $r31, $r33, $r35, $r37, $r45;
        org.mozilla.javascript.tools.debugger.ContextWindow $r38, $r40, $r42, $r44;
        org.mozilla.javascript.tools.debugger.SwingGui$1 $r53;
        org.mozilla.javascript.tools.debugger.SwingGui$2 $r55;
        java.awt.Dimension $r20, $r32, $r34, $r39, $r41;
        org.mozilla.javascript.tools.debugger.JSInternalConsole $r36;
        javax.swing.JPanel $r26;
        org.mozilla.javascript.tools.debugger.SwingGui r0;
        javax.swing.JSplitPane $r43, $r46, $r47, $r48;
        java.lang.String[] $r4;
        org.mozilla.javascript.tools.debugger.Menubar $r1, $r2, $r6, $r9, $r12, $r15, $r18;
        java.lang.String $r7, $r10, $r13, $r16, $r19;
        java.awt.Container $r28, $r30;
        javax.swing.JButton $r5, $r8, $r11, $r14, $r17;
        org.mozilla.javascript.tools.debugger.FileWrapper $r58;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper $r59;
        javax.swing.JLabel $r49, $r50, $r51;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        $r1 = new org.mozilla.javascript.tools.debugger.Menubar;

        specialinvoke $r1.<org.mozilla.javascript.tools.debugger.Menubar: void <init>(org.mozilla.javascript.tools.debugger.SwingGui)>(r0);

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar> = $r1;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: void setJMenuBar(javax.swing.JMenuBar)>($r2);

        $r3 = new javax.swing.JToolBar;

        specialinvoke $r3.<javax.swing.JToolBar: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar> = $r3;

        $r4 = newarray (java.lang.String)[5];

        $r4[0] = "Break (Pause)";

        $r4[1] = "Go (F5)";

        $r4[2] = "Step Into (F11)";

        $r4[3] = "Step Over (F7)";

        $r4[4] = "Step Out (F8)";

        $r5 = new javax.swing.JButton;

        specialinvoke $r5.<javax.swing.JButton: void <init>(java.lang.String)>("Break");

        virtualinvoke $r5.<javax.swing.JButton: void setToolTipText(java.lang.String)>("Break");

        virtualinvoke $r5.<javax.swing.JButton: void setActionCommand(java.lang.String)>("Break");

        $r6 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        virtualinvoke $r5.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r6);

        virtualinvoke $r5.<javax.swing.JButton: void setEnabled(boolean)>(1);

        $r7 = $r4[0];

        virtualinvoke $r5.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r7);

        $r8 = new javax.swing.JButton;

        specialinvoke $r8.<javax.swing.JButton: void <init>(java.lang.String)>("Go");

        virtualinvoke $r8.<javax.swing.JButton: void setToolTipText(java.lang.String)>("Go");

        virtualinvoke $r8.<javax.swing.JButton: void setActionCommand(java.lang.String)>("Go");

        $r9 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        virtualinvoke $r8.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r9);

        virtualinvoke $r8.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r10 = $r4[1];

        virtualinvoke $r8.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r10);

        $r11 = new javax.swing.JButton;

        specialinvoke $r11.<javax.swing.JButton: void <init>(java.lang.String)>("Step Into");

        virtualinvoke $r11.<javax.swing.JButton: void setToolTipText(java.lang.String)>("Step Into");

        virtualinvoke $r11.<javax.swing.JButton: void setActionCommand(java.lang.String)>("Step Into");

        $r12 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        virtualinvoke $r11.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r12);

        virtualinvoke $r11.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r13 = $r4[2];

        virtualinvoke $r11.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r13);

        $r14 = new javax.swing.JButton;

        specialinvoke $r14.<javax.swing.JButton: void <init>(java.lang.String)>("Step Over");

        virtualinvoke $r14.<javax.swing.JButton: void setToolTipText(java.lang.String)>("Step Over");

        virtualinvoke $r14.<javax.swing.JButton: void setActionCommand(java.lang.String)>("Step Over");

        virtualinvoke $r14.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r15 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        virtualinvoke $r14.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r15);

        $r16 = $r4[3];

        virtualinvoke $r14.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r16);

        $r17 = new javax.swing.JButton;

        specialinvoke $r17.<javax.swing.JButton: void <init>(java.lang.String)>("Step Out");

        virtualinvoke $r17.<javax.swing.JButton: void setToolTipText(java.lang.String)>("Step Out");

        virtualinvoke $r17.<javax.swing.JButton: void setActionCommand(java.lang.String)>("Step Out");

        virtualinvoke $r17.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r18 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        virtualinvoke $r17.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r18);

        $r19 = $r4[4];

        virtualinvoke $r17.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r19);

        $r20 = virtualinvoke $r14.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        virtualinvoke $r5.<javax.swing.JButton: void setPreferredSize(java.awt.Dimension)>($r20);

        virtualinvoke $r5.<javax.swing.JButton: void setMinimumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r5.<javax.swing.JButton: void setMaximumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r5.<javax.swing.JButton: void setSize(java.awt.Dimension)>($r20);

        virtualinvoke $r8.<javax.swing.JButton: void setPreferredSize(java.awt.Dimension)>($r20);

        virtualinvoke $r8.<javax.swing.JButton: void setMinimumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r8.<javax.swing.JButton: void setMaximumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r11.<javax.swing.JButton: void setPreferredSize(java.awt.Dimension)>($r20);

        virtualinvoke $r11.<javax.swing.JButton: void setMinimumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r11.<javax.swing.JButton: void setMaximumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r14.<javax.swing.JButton: void setPreferredSize(java.awt.Dimension)>($r20);

        virtualinvoke $r14.<javax.swing.JButton: void setMinimumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r14.<javax.swing.JButton: void setMaximumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r17.<javax.swing.JButton: void setPreferredSize(java.awt.Dimension)>($r20);

        virtualinvoke $r17.<javax.swing.JButton: void setMinimumSize(java.awt.Dimension)>($r20);

        virtualinvoke $r17.<javax.swing.JButton: void setMaximumSize(java.awt.Dimension)>($r20);

        $r21 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        virtualinvoke $r21.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>($r5);

        $r22 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        virtualinvoke $r22.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>($r8);

        $r23 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        virtualinvoke $r23.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>($r11);

        $r24 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        virtualinvoke $r24.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>($r14);

        $r25 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        virtualinvoke $r25.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>($r17);

        $r26 = new javax.swing.JPanel;

        specialinvoke $r26.<javax.swing.JPanel: void <init>()>();

        $r27 = new java.awt.BorderLayout;

        specialinvoke $r27.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r26.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r27);

        $r28 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.awt.Container getContentPane()>();

        $r29 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        virtualinvoke $r28.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r29, "North");

        $r30 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.awt.Container getContentPane()>();

        virtualinvoke $r30.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r26, "Center");

        $r31 = new javax.swing.JDesktopPane;

        specialinvoke $r31.<javax.swing.JDesktopPane: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk> = $r31;

        $r33 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r32 = new java.awt.Dimension;

        specialinvoke $r32.<java.awt.Dimension: void <init>(int,int)>(600, 300);

        virtualinvoke $r33.<javax.swing.JDesktopPane: void setPreferredSize(java.awt.Dimension)>($r32);

        $r35 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r34 = new java.awt.Dimension;

        specialinvoke $r34.<java.awt.Dimension: void <init>(int,int)>(150, 50);

        virtualinvoke $r35.<javax.swing.JDesktopPane: void setMinimumSize(java.awt.Dimension)>($r34);

        $r37 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r36 = new org.mozilla.javascript.tools.debugger.JSInternalConsole;

        specialinvoke $r36.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void <init>(java.lang.String)>("JavaScript Console");

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console> = $r36;

        virtualinvoke $r37.<javax.swing.JDesktopPane: java.awt.Component add(java.awt.Component)>($r36);

        $r38 = new org.mozilla.javascript.tools.debugger.ContextWindow;

        specialinvoke $r38.<org.mozilla.javascript.tools.debugger.ContextWindow: void <init>(org.mozilla.javascript.tools.debugger.SwingGui)>(r0);

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context> = $r38;

        $r40 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        $r39 = new java.awt.Dimension;

        specialinvoke $r39.<java.awt.Dimension: void <init>(int,int)>(600, 120);

        virtualinvoke $r40.<org.mozilla.javascript.tools.debugger.ContextWindow: void setPreferredSize(java.awt.Dimension)>($r39);

        $r42 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        $r41 = new java.awt.Dimension;

        specialinvoke $r41.<java.awt.Dimension: void <init>(int,int)>(50, 50);

        virtualinvoke $r42.<org.mozilla.javascript.tools.debugger.ContextWindow: void setMinimumSize(java.awt.Dimension)>($r41);

        $r43 = new javax.swing.JSplitPane;

        $r45 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r44 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        specialinvoke $r43.<javax.swing.JSplitPane: void <init>(int,java.awt.Component,java.awt.Component)>(0, $r45, $r44);

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JSplitPane split1> = $r43;

        $r46 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JSplitPane split1>;

        virtualinvoke $r46.<javax.swing.JSplitPane: void setOneTouchExpandable(boolean)>(1);

        $r47 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JSplitPane split1>;

        staticinvoke <org.mozilla.javascript.tools.debugger.SwingGui: void setResizeWeight(javax.swing.JSplitPane,double)>($r47, 0.66);

        $r48 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JSplitPane split1>;

        virtualinvoke $r26.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r48, "Center");

        $r49 = new javax.swing.JLabel;

        specialinvoke $r49.<javax.swing.JLabel: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JLabel statusBar> = $r49;

        $r50 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JLabel statusBar>;

        virtualinvoke $r50.<javax.swing.JLabel: void setText(java.lang.String)>("Thread: ");

        $r51 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JLabel statusBar>;

        virtualinvoke $r26.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r51, "South");

     label1:
        $r52 = new javax.swing.JFileChooser;

        specialinvoke $r52.<javax.swing.JFileChooser: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JFileChooser dlg> = $r52;

     label2:
        goto label4;

     label3:
        $r56 := @caughtexception;

        $r57 = new javax.swing.JFileChooser;

        $r58 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        specialinvoke $r58.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.lang.String)>(".");

        $r59 = new org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        specialinvoke $r59.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: void <init>()>();

        specialinvoke $r57.<javax.swing.JFileChooser: void <init>(java.io.File,javax.swing.filechooser.FileSystemView)>($r58, $r59);

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JFileChooser dlg> = $r57;

     label4:
        $r53 = new org.mozilla.javascript.tools.debugger.SwingGui$1;

        specialinvoke $r53.<org.mozilla.javascript.tools.debugger.SwingGui$1: void <init>(org.mozilla.javascript.tools.debugger.SwingGui)>(r0);

        $r54 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JFileChooser dlg>;

        virtualinvoke $r54.<javax.swing.JFileChooser: void addChoosableFileFilter(javax.swing.filechooser.FileFilter)>($r53);

        $r55 = new org.mozilla.javascript.tools.debugger.SwingGui$2;

        specialinvoke $r55.<org.mozilla.javascript.tools.debugger.SwingGui$2: void <init>(org.mozilla.javascript.tools.debugger.SwingGui)>(r0);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: void addWindowListener(java.awt.event.WindowListener)>($r55);

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private void exit()
    {
        java.lang.Runnable $r1, $r3;
        org.mozilla.javascript.tools.debugger.Dim $r2;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.lang.Runnable exitAction>;

        if $r1 == null goto label1;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.lang.Runnable exitAction>;

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r3);

     label1:
        $r2 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Dim dim>;

        virtualinvoke $r2.<org.mozilla.javascript.tools.debugger.Dim: void setReturnValue(int)>(5);

        return;
    }

    org.mozilla.javascript.tools.debugger.FileWindow getFileWindow(java.lang.String)
    {
        java.lang.Object $r3;
        java.lang.String r0;
        java.util.Hashtable $r2;
        org.mozilla.javascript.tools.debugger.FileWindow $r4;
        boolean $z0;
        org.mozilla.javascript.tools.debugger.SwingGui r1;

        r1 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("<stdin>");

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = r1.<org.mozilla.javascript.tools.debugger.SwingGui: java.util.Hashtable fileWindows>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (org.mozilla.javascript.tools.debugger.FileWindow) $r3;

        return $r4;
    }

    static java.lang.String getShortName(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        i4 = $i0;

        if $i0 >= 0 goto label1;

        i4 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(92);

     label1:
        r1 = r0;

        if i4 < 0 goto label2;

        $i1 = i4 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label2;

        $i3 = i4 + 1;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

     label2:
        return r1;
    }

    void removeWindow(org.mozilla.javascript.tools.debugger.FileWindow)
    {
        boolean $z0, $z1, $z2;
        javax.swing.JMenu $r4;
        org.mozilla.javascript.tools.debugger.FileWindow r1;
        org.mozilla.javascript.tools.debugger.SwingGui r0;
        javax.swing.JMenuItem $r5, $r8, $r12;
        java.lang.StringBuffer $r14, $r15, $r16, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i11, i12;
        java.lang.String $r3, $r6, $r7, $r9, $r10, $r11, $r13, $r17, $r19;
        java.util.Hashtable $r2;
        char $c8;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r1 := @parameter0: org.mozilla.javascript.tools.debugger.FileWindow;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.util.Hashtable fileWindows>;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.tools.debugger.FileWindow: java.lang.String getUrl()>();

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r3);

        $r4 = specialinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JMenu getWindowMenu()>();

        $i0 = virtualinvoke $r4.<javax.swing.JMenu: int getItemCount()>();

        $i1 = $i0 - 1;

        $r5 = virtualinvoke $r4.<javax.swing.JMenu: javax.swing.JMenuItem getItem(int)>($i1);

        $r6 = virtualinvoke r1.<org.mozilla.javascript.tools.debugger.FileWindow: java.lang.String getUrl()>();

        $r7 = staticinvoke <org.mozilla.javascript.tools.debugger.SwingGui: java.lang.String getShortName(java.lang.String)>($r6);

        i11 = 5;

     label1:
        if i11 >= $i0 goto label9;

        $r8 = virtualinvoke $r4.<javax.swing.JMenu: javax.swing.JMenuItem getItem(int)>(i11);

        if $r8 != null goto label2;

        goto label8;

     label2:
        $r9 = virtualinvoke $r8.<javax.swing.JMenuItem: java.lang.String getText()>();

        $i2 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>(32);

        $i3 = $i2 + 1;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i3);

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label8;

        virtualinvoke $r4.<javax.swing.JMenu: void remove(javax.swing.JMenuItem)>($r8);

        if $i0 != 6 goto label3;

        virtualinvoke $r4.<javax.swing.JMenu: void remove(int)>(4);

        goto label9;

     label3:
        i12 = i11 - 4;

     label4:
        $i4 = $i0 - 1;

        if i11 >= $i4 goto label7;

        $r12 = virtualinvoke $r4.<javax.swing.JMenu: javax.swing.JMenuItem getItem(int)>(i11);

        if $r12 == null goto label6;

        $r13 = virtualinvoke $r12.<javax.swing.JMenuItem: java.lang.String getText()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("More Windows...");

        if $z2 == 0 goto label5;

        goto label7;

     label5:
        $i6 = virtualinvoke $r13.<java.lang.String: int indexOf(int)>(32);

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $i7 = 48 + i12;

        $c8 = (char) $i7;

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i9 = $i6 + 1;

        $r17 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>($i9);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r12.<javax.swing.JMenuItem: void setText(java.lang.String)>($r19);

        $i10 = 48 + i12;

        virtualinvoke $r12.<javax.swing.JMenuItem: void setMnemonic(int)>($i10);

        i12 = i12 + 1;

     label6:
        i11 = i11 + 1;

        goto label4;

     label7:
        $i5 = $i0 - 6;

        if $i5 != 0 goto label9;

        if $r5 == $r8 goto label9;

        $r11 = virtualinvoke $r5.<javax.swing.JMenuItem: java.lang.String getText()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("More Windows...");

        if $z1 == 0 goto label9;

        virtualinvoke $r4.<javax.swing.JMenu: void remove(javax.swing.JMenuItem)>($r5);

        goto label9;

     label8:
        i11 = i11 + 1;

        goto label1;

     label9:
        virtualinvoke $r4.<javax.swing.JMenu: void revalidate()>();

        return;
    }

    void showStopLine(org.mozilla.javascript.tools.debugger.Dim$StackFrame)
    {
        org.mozilla.javascript.tools.debugger.FileWindow $r5;
        org.mozilla.javascript.tools.debugger.Dim$SourceInfo $r6;
        org.mozilla.javascript.tools.debugger.JSInternalConsole $r3, $r4;
        int $i0;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        java.lang.String $r1;
        org.mozilla.javascript.tools.debugger.SwingGui r2;
        boolean $z0, $z1;

        r2 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r0 := @parameter0: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: java.lang.String getUrl()>();

        if $r1 == null goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("<stdin>");

        if $z1 == 0 goto label2;

     label1:
        $r3 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        $z0 = virtualinvoke $r3.<org.mozilla.javascript.tools.debugger.JSInternalConsole: boolean isVisible()>();

        if $z0 == 0 goto label4;

        $r4 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        virtualinvoke $r4.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void show()>();

        goto label4;

     label2:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: int getLineNumber()>();

        $r5 = virtualinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow getFileWindow(java.lang.String)>($r1);

        if $r5 == null goto label3;

        specialinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: void setFilePosition(org.mozilla.javascript.tools.debugger.FileWindow,int)>($r5, $i0);

        goto label4;

     label3:
        $r6 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo()>();

        virtualinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: void createFileWindow(org.mozilla.javascript.tools.debugger.Dim$SourceInfo,int)>($r6, $i0);

     label4:
        return;
    }

    void createFileWindow(org.mozilla.javascript.tools.debugger.Dim$SourceInfo, int)
    {
        org.mozilla.javascript.tools.debugger.Menubar $r5;
        org.mozilla.javascript.tools.debugger.FileTextArea $r7, $r12;
        int i0, $i1, $i2, $i3, $i5, $i7, $i9, $i11;
        java.lang.String $r1;
        java.util.Hashtable $r4;
        javax.swing.JDesktopPane $r13;
        javax.swing.text.BadLocationException $r10, $r11;
        org.mozilla.javascript.tools.debugger.FileWindow $r6, $r8, $r14;
        java.lang.Exception $r9;
        org.mozilla.javascript.tools.debugger.Dim$SourceInfo r0;
        org.mozilla.javascript.tools.debugger.SwingGui r3;

        r3 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r0 := @parameter0: org.mozilla.javascript.tools.debugger.Dim$SourceInfo;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.Dim$SourceInfo: java.lang.String url()>();

        $r14 = new org.mozilla.javascript.tools.debugger.FileWindow;

        specialinvoke $r14.<org.mozilla.javascript.tools.debugger.FileWindow: void <init>(org.mozilla.javascript.tools.debugger.SwingGui,org.mozilla.javascript.tools.debugger.Dim$SourceInfo)>(r3, r0);

        $r4 = r3.<org.mozilla.javascript.tools.debugger.SwingGui: java.util.Hashtable fileWindows>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r14);

        $i5 = (int) -1;

        if i0 == $i5 goto label07;

        $r6 = r3.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow>;

        if $r6 == null goto label01;

        $r8 = r3.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow>;

        $i7 = (int) -1;

        virtualinvoke $r8.<org.mozilla.javascript.tools.debugger.FileWindow: void setPosition(int)>($i7);

     label01:
        $r7 = $r14.<org.mozilla.javascript.tools.debugger.FileWindow: org.mozilla.javascript.tools.debugger.FileTextArea textArea>;

        $i1 = i0 - 1;

        $i2 = virtualinvoke $r7.<org.mozilla.javascript.tools.debugger.FileTextArea: int getLineStartOffset(int)>($i1);

        virtualinvoke $r14.<org.mozilla.javascript.tools.debugger.FileWindow: void setPosition(int)>($i2);

     label02:
        goto label07;

     label03:
        $r11 := @caughtexception;

     label04:
        $r12 = $r14.<org.mozilla.javascript.tools.debugger.FileWindow: org.mozilla.javascript.tools.debugger.FileTextArea textArea>;

        $i3 = virtualinvoke $r12.<org.mozilla.javascript.tools.debugger.FileTextArea: int getLineStartOffset(int)>(0);

        virtualinvoke $r14.<org.mozilla.javascript.tools.debugger.FileWindow: void setPosition(int)>($i3);

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

        $i9 = (int) -1;

        virtualinvoke $r14.<org.mozilla.javascript.tools.debugger.FileWindow: void setPosition(int)>($i9);

     label07:
        $r13 = r3.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        virtualinvoke $r13.<javax.swing.JDesktopPane: java.awt.Component add(java.awt.Component)>($r14);

        $i11 = (int) -1;

        if i0 == $i11 goto label08;

        r3.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow> = $r14;

     label08:
        $r5 = r3.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.debugger.Menubar: void addFile(java.lang.String)>($r1);

        virtualinvoke $r14.<org.mozilla.javascript.tools.debugger.FileWindow: void setVisible(boolean)>(1);

        if 1 == 0 goto label12;

     label09:
        virtualinvoke $r14.<org.mozilla.javascript.tools.debugger.FileWindow: void setMaximum(boolean)>(1);

        virtualinvoke $r14.<org.mozilla.javascript.tools.debugger.FileWindow: void setSelected(boolean)>(1);

        virtualinvoke $r14.<org.mozilla.javascript.tools.debugger.FileWindow: void moveToFront()>();

     label10:
        goto label12;

     label11:
        $r9 := @caughtexception;

     label12:
        return;

        catch javax.swing.text.BadLocationException from label01 to label02 with label03;
        catch javax.swing.text.BadLocationException from label04 to label05 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    private void setFilePosition(org.mozilla.javascript.tools.debugger.FileWindow, int)
    {
        org.mozilla.javascript.tools.debugger.FileTextArea r1;
        int i0, $i1, $i2, $i4, $i6, $i8;
        javax.swing.DesktopManager $r5, $r7;
        boolean $z0;
        javax.swing.JDesktopPane $r4, $r6;
        javax.swing.text.BadLocationException $r12;
        org.mozilla.javascript.tools.debugger.FileWindow r0, $r3, $r8, $r9, $r10;
        java.lang.Exception $r11;
        org.mozilla.javascript.tools.debugger.SwingGui r2;

        r2 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r0 := @parameter0: org.mozilla.javascript.tools.debugger.FileWindow;

        i0 := @parameter1: int;

        r1 = r0.<org.mozilla.javascript.tools.debugger.FileWindow: org.mozilla.javascript.tools.debugger.FileTextArea textArea>;

     label01:
        $i4 = (int) -1;

        if i0 != $i4 goto label02;

        $i6 = (int) -1;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.FileWindow: void setPosition(int)>($i6);

        $r10 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow>;

        if $r10 != r0 goto label04;

        r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow> = null;

        goto label04;

     label02:
        $i1 = i0 - 1;

        $i2 = virtualinvoke r1.<javax.swing.JTextArea: int getLineStartOffset(int)>($i1);

        $r3 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow>;

        if $r3 == null goto label03;

        $r8 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow>;

        if $r8 == r0 goto label03;

        $r9 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow>;

        $i8 = (int) -1;

        virtualinvoke $r9.<org.mozilla.javascript.tools.debugger.FileWindow: void setPosition(int)>($i8);

     label03:
        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.FileWindow: void setPosition(int)>($i2);

        r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow> = r0;

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

     label06:
        if 1 == 0 goto label11;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.FileWindow: boolean isIcon()>();

        if $z0 == 0 goto label07;

        $r6 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r7 = virtualinvoke $r6.<javax.swing.JDesktopPane: javax.swing.DesktopManager getDesktopManager()>();

        interfaceinvoke $r7.<javax.swing.DesktopManager: void deiconifyFrame(javax.swing.JInternalFrame)>(r0);

     label07:
        $r4 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r5 = virtualinvoke $r4.<javax.swing.JDesktopPane: javax.swing.DesktopManager getDesktopManager()>();

        interfaceinvoke $r5.<javax.swing.DesktopManager: void activateFrame(javax.swing.JInternalFrame)>(r0);

     label08:
        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.FileWindow: void show()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.FileWindow: void toFront()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.FileWindow: void setSelected(boolean)>(1);

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

     label11:
        return;

        catch javax.swing.text.BadLocationException from label01 to label04 with label05;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    void enterInterruptImpl(org.mozilla.javascript.tools.debugger.Dim$StackFrame, java.lang.String, java.lang.String)
    {
        org.mozilla.javascript.tools.debugger.Dim$ContextData $r9;
        java.util.Vector $r35;
        javax.swing.JComboBox $r34;
        org.mozilla.javascript.tools.debugger.ContextWindow $r10, $r11, $r12, $r13;
        java.awt.Dimension $r14, $r15;
        org.mozilla.javascript.tools.debugger.SwingGui r0;
        java.lang.StringBuffer $r1, $r3, $r5, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r7, $r16;
        java.lang.String r4, $r6, r8, $r17, $r23, $r29, $r32, r36;
        javax.swing.JLabel $r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r7 := @parameter0: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        r4 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JLabel statusBar>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Thread: ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<javax.swing.JLabel: void setText(java.lang.String)>($r6);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: void showStopLine(org.mozilla.javascript.tools.debugger.Dim$StackFrame)>(r7);

        if r8 == null goto label1;

        staticinvoke <org.mozilla.javascript.tools.debugger.MessageDialogWrapper: void showMessageDialog(java.awt.Component,java.lang.String,java.lang.String,int)>(r0, r8, "Exception in Script", 0);

     label1:
        specialinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: void updateEnabled(boolean)>(1);

        $r9 = virtualinvoke r7.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData()>();

        $r10 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        $r34 = $r10.<org.mozilla.javascript.tools.debugger.ContextWindow: javax.swing.JComboBox context>;

        $r11 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        $r35 = $r11.<org.mozilla.javascript.tools.debugger.ContextWindow: java.util.Vector toolTips>;

        $r12 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        virtualinvoke $r12.<org.mozilla.javascript.tools.debugger.ContextWindow: void disableUpdate()>();

        $i0 = virtualinvoke $r9.<org.mozilla.javascript.tools.debugger.Dim$ContextData: int frameCount()>();

        virtualinvoke $r34.<javax.swing.JComboBox: void removeAllItems()>();

        virtualinvoke $r34.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>(null);

        virtualinvoke $r35.<java.util.Vector: void removeAllElements()>();

        i6 = 0;

     label2:
        if i6 >= $i0 goto label4;

        $r16 = virtualinvoke $r9.<org.mozilla.javascript.tools.debugger.Dim$ContextData: org.mozilla.javascript.tools.debugger.Dim$StackFrame getFrame(int)>(i6);

        $r17 = virtualinvoke $r16.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: java.lang.String getUrl()>();

        $i2 = virtualinvoke $r16.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: int getLineNumber()>();

        r36 = $r17;

        $i3 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i3 <= 20 goto label3;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        $i4 = virtualinvoke $r17.<java.lang.String: int length()>();

        $i5 = $i4 - 17;

        $r32 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int)>($i5);

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        r36 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r36);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", line ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r34.<javax.swing.JComboBox: void insertItemAt(java.lang.Object,int)>($r23, i6);

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", line ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r35.<java.util.Vector: void addElement(java.lang.Object)>($r29);

        i6 = i6 + 1;

        goto label2;

     label4:
        $r13 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        virtualinvoke $r13.<org.mozilla.javascript.tools.debugger.ContextWindow: void enableUpdate()>();

        virtualinvoke $r34.<javax.swing.JComboBox: void setSelectedIndex(int)>(0);

        $r14 = new java.awt.Dimension;

        $r15 = virtualinvoke $r34.<javax.swing.JComboBox: java.awt.Dimension getMinimumSize()>();

        $i1 = $r15.<java.awt.Dimension: int height>;

        specialinvoke $r14.<java.awt.Dimension: void <init>(int,int)>(50, $i1);

        virtualinvoke $r34.<javax.swing.JComboBox: void setMinimumSize(java.awt.Dimension)>($r14);

        return;
    }

    private javax.swing.JMenu getWindowMenu()
    {
        javax.swing.JMenu $r2;
        org.mozilla.javascript.tools.debugger.Menubar $r1;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Menubar menubar>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.tools.debugger.Menubar: javax.swing.JMenu getMenu(int)>(3);

        return $r2;
    }

    private java.lang.String chooseFile(java.lang.String)
    {
        int $i0;
        java.lang.SecurityException $r15;
        java.lang.String r1, $r3, $r7, $r12;
        javax.swing.JFileChooser $r2, $r4, $r5, $r8, $r13;
        java.util.Properties $r11;
        java.io.IOException $r16;
        java.io.File $r6, $r9, $r10, $r14, r17;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JFileChooser dlg>;

        virtualinvoke $r2.<javax.swing.JFileChooser: void setDialogTitle(java.lang.String)>(r1);

        r17 = null;

        $r3 = staticinvoke <org.mozilla.javascript.SecurityUtilities: java.lang.String getSystemProperty(java.lang.String)>("user.dir");

        if $r3 == null goto label1;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r3);

        r17 = $r14;

     label1:
        if r17 == null goto label2;

        $r13 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JFileChooser dlg>;

        virtualinvoke $r13.<javax.swing.JFileChooser: void setCurrentDirectory(java.io.File)>(r17);

     label2:
        $r4 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JFileChooser dlg>;

        $i0 = virtualinvoke $r4.<javax.swing.JFileChooser: int showOpenDialog(java.awt.Component)>(r0);

        if $i0 != 0 goto label7;

     label3:
        $r5 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JFileChooser dlg>;

        $r6 = virtualinvoke $r5.<javax.swing.JFileChooser: java.io.File getSelectedFile()>();

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getCanonicalPath()>();

        $r8 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JFileChooser dlg>;

        $r9 = virtualinvoke $r8.<javax.swing.JFileChooser: java.io.File getSelectedFile()>();

        $r10 = virtualinvoke $r9.<java.io.File: java.io.File getParentFile()>();

        $r11 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        $r12 = virtualinvoke $r10.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r11.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("user.dir", $r12);

        staticinvoke <java.lang.System: void setProperties(java.util.Properties)>($r11);

     label4:
        return $r7;

     label5:
        $r16 := @caughtexception;

        goto label7;

     label6:
        $r15 := @caughtexception;

     label7:
        return null;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.SecurityException from label3 to label4 with label6;
    }

    private javax.swing.JInternalFrame getSelectedFrame()
    {
        javax.swing.JDesktopPane $r1;
        javax.swing.JInternalFrame $r3, $r4, $r5;
        javax.swing.JInternalFrame[] $r2;
        int $i0, $i1, $i2, i3;
        org.mozilla.javascript.tools.debugger.SwingGui r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r2 = virtualinvoke $r1.<javax.swing.JDesktopPane: javax.swing.JInternalFrame[] getAllFrames()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label3;

        $r4 = $r2[i3];

        $z0 = virtualinvoke $r4.<javax.swing.JInternalFrame: boolean isShowing()>();

        if $z0 == 0 goto label2;

        $r5 = $r2[i3];

        return $r5;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i1 = lengthof $r2;

        $i2 = $i1 - 1;

        $r3 = $r2[$i2];

        return $r3;
    }

    private void updateEnabled(boolean)
    {
        org.mozilla.javascript.tools.debugger.Menubar $r2;
        int $i0, $i1, i2, $i4;
        boolean z0, $z1, z2;
        javax.swing.JMenuBar $r1;
        javax.swing.JToolBar $r3, $r7, $r9;
        org.mozilla.javascript.tools.debugger.ContextWindow $r5, $r8;
        java.awt.Component $r10;
        org.mozilla.javascript.tools.debugger.FileWindow $r4, $r6;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JMenuBar getJMenuBar()>();

        $r2 = (org.mozilla.javascript.tools.debugger.Menubar) $r1;

        virtualinvoke $r2.<org.mozilla.javascript.tools.debugger.Menubar: void updateEnabled(boolean)>(z0);

        i2 = 0;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        $i0 = virtualinvoke $r3.<javax.swing.JToolBar: int getComponentCount()>();

     label01:
        if i2 >= $i0 goto label06;

        if i2 != 0 goto label04;

        if z0 != 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z2 = $z1;

        goto label05;

     label04:
        z2 = z0;

     label05:
        $r9 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        $r10 = virtualinvoke $r9.<javax.swing.JToolBar: java.awt.Component getComponent(int)>(i2);

        virtualinvoke $r10.<java.awt.Component: void setEnabled(boolean)>(z2);

        i2 = i2 + 1;

        goto label01;

     label06:
        if z0 == 0 goto label08;

        $r7 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JToolBar toolBar>;

        virtualinvoke $r7.<javax.swing.JToolBar: void setEnabled(boolean)>(1);

        $i1 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: int getExtendedState()>();

        if $i1 != 1 goto label07;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: void setExtendedState(int)>(0);

     label07:
        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: void toFront()>();

        $r8 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        virtualinvoke $r8.<org.mozilla.javascript.tools.debugger.ContextWindow: void enable()>();

        goto label10;

     label08:
        $r4 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow>;

        if $r4 == null goto label09;

        $r6 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow currentWindow>;

        $i4 = (int) -1;

        virtualinvoke $r6.<org.mozilla.javascript.tools.debugger.FileWindow: void setPosition(int)>($i4);

     label09:
        $r5 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.ContextWindow context>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.debugger.ContextWindow: void disable()>();

     label10:
        return;
    }

    static void setResizeWeight(javax.swing.JSplitPane, double)
    {
        java.lang.IllegalAccessException $r8;
        javax.swing.JSplitPane r4;
        java.lang.Object[] $r5;
        java.lang.Double $r6;
        java.lang.NoSuchMethodException $r9;
        java.lang.Class[] $r1;
        java.lang.reflect.InvocationTargetException $r7;
        java.lang.Class $r0, $r2, $r10;
        java.lang.reflect.Method $r3;
        double d0;

        r4 := @parameter0: javax.swing.JSplitPane;

        d0 := @parameter1: double;

     label1:
        $r0 = <org.mozilla.javascript.tools.debugger.SwingGui: java.lang.Class class$javax$swing$JSplitPane>;

        if $r0 != null goto label2;

        $r10 = staticinvoke <org.mozilla.javascript.tools.debugger.SwingGui: java.lang.Class class$(java.lang.String)>("javax.swing.JSplitPane");

        <org.mozilla.javascript.tools.debugger.SwingGui: java.lang.Class class$javax$swing$JSplitPane> = $r10;

        goto label3;

     label2:
        $r10 = <org.mozilla.javascript.tools.debugger.SwingGui: java.lang.Class class$javax$swing$JSplitPane>;

     label3:
        $r1 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        $r1[0] = $r2;

        $r3 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setResizeWeight", $r1);

        $r5 = newarray (java.lang.Object)[1];

        $r6 = new java.lang.Double;

        specialinvoke $r6.<java.lang.Double: void <init>(double)>(d0);

        $r5[0] = $r6;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r5);

     label4:
        goto label8;

     label5:
        $r9 := @caughtexception;

        goto label8;

     label6:
        $r8 := @caughtexception;

        goto label8;

     label7:
        $r7 := @caughtexception;

     label8:
        return;

        catch java.lang.NoSuchMethodException from label1 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label4 with label7;
    }

    private java.lang.String readFile(java.lang.String)
    {
        java.lang.Throwable $r9;
        java.io.IOException $r2;
        java.lang.StringBuffer $r5, $r6, $r7;
        java.io.FileReader $r0;
        java.lang.String r1, $r4, $r8, r10;
        org.mozilla.javascript.tools.debugger.SwingGui r3;

        r3 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.io.FileReader;

        specialinvoke $r0.<java.io.FileReader: void <init>(java.lang.String)>(r1);

     label2:
        r10 = staticinvoke <org.mozilla.javascript.Kit: java.lang.String readReader(java.io.Reader)>($r0);

     label3:
        virtualinvoke $r0.<java.io.Reader: void close()>();

        goto label6;

     label4:
        $r9 := @caughtexception;

     label5:
        virtualinvoke $r0.<java.io.Reader: void close()>();

        throw $r9;

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mozilla.javascript.tools.debugger.MessageDialogWrapper: void showMessageDialog(java.awt.Component,java.lang.String,java.lang.String,int)>(r3, $r4, $r8, 0);

        r10 = null;

     label8:
        return r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.io.IOException from label1 to label6 with label7;
    }

    public void updateSourceText(org.mozilla.javascript.tools.debugger.Dim$SourceInfo)
    {
        org.mozilla.javascript.tools.debugger.Dim$SourceInfo r2;
        org.mozilla.javascript.tools.debugger.RunProxy $r0;
        org.mozilla.javascript.tools.debugger.SwingGui r1;

        r1 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r2 := @parameter0: org.mozilla.javascript.tools.debugger.Dim$SourceInfo;

        $r0 = new org.mozilla.javascript.tools.debugger.RunProxy;

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.RunProxy: void <init>(org.mozilla.javascript.tools.debugger.SwingGui,int)>(r1, 3);

        $r0.<org.mozilla.javascript.tools.debugger.RunProxy: org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo> = r2;

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

        return;
    }

    public void enterInterrupt(org.mozilla.javascript.tools.debugger.Dim$StackFrame, java.lang.String, java.lang.String)
    {
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r2;
        java.lang.String r3, r4;
        org.mozilla.javascript.tools.debugger.RunProxy $r0;
        boolean $z0;
        org.mozilla.javascript.tools.debugger.SwingGui r1;

        r1 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r2 := @parameter0: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $z0 = staticinvoke <javax.swing.SwingUtilities: boolean isEventDispatchThread()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.mozilla.javascript.tools.debugger.SwingGui: void enterInterruptImpl(org.mozilla.javascript.tools.debugger.Dim$StackFrame,java.lang.String,java.lang.String)>(r2, r3, r4);

        goto label2;

     label1:
        $r0 = new org.mozilla.javascript.tools.debugger.RunProxy;

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.RunProxy: void <init>(org.mozilla.javascript.tools.debugger.SwingGui,int)>(r1, 4);

        $r0.<org.mozilla.javascript.tools.debugger.RunProxy: org.mozilla.javascript.tools.debugger.Dim$StackFrame lastFrame> = r2;

        $r0.<org.mozilla.javascript.tools.debugger.RunProxy: java.lang.String threadTitle> = r3;

        $r0.<org.mozilla.javascript.tools.debugger.RunProxy: java.lang.String alertMessage> = r4;

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

     label2:
        return;
    }

    public boolean isGuiEventThread()
    {
        boolean $z0;
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        $z0 = staticinvoke <javax.swing.SwingUtilities: boolean isEventDispatchThread()>();

        return $z0;
    }

    public void dispatchNextGuiEvent() throws java.lang.InterruptedException
    {
        java.awt.EventQueue $r7, r8;
        java.awt.ActiveEvent $r5;
        java.awt.Component r4;
        java.awt.AWTEvent $r1;
        java.awt.MenuComponent $r3;
        java.lang.Object $r2;
        org.mozilla.javascript.tools.debugger.SwingGui r0;
        boolean $z0, $z1, $z2;
        java.awt.Toolkit $r6;

        r0 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r8 = r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.awt.EventQueue awtEventQueue>;

        if r8 != null goto label1;

        $r6 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r7 = virtualinvoke $r6.<java.awt.Toolkit: java.awt.EventQueue getSystemEventQueue()>();

        r8 = $r7;

        r0.<org.mozilla.javascript.tools.debugger.SwingGui: java.awt.EventQueue awtEventQueue> = $r7;

     label1:
        $r1 = virtualinvoke r8.<java.awt.EventQueue: java.awt.AWTEvent getNextEvent()>();

        $z0 = $r1 instanceof java.awt.ActiveEvent;

        if $z0 == 0 goto label2;

        $r5 = (java.awt.ActiveEvent) $r1;

        interfaceinvoke $r5.<java.awt.ActiveEvent: void dispatch()>();

        goto label4;

     label2:
        $r2 = virtualinvoke $r1.<java.awt.AWTEvent: java.lang.Object getSource()>();

        $z1 = $r2 instanceof java.awt.Component;

        if $z1 == 0 goto label3;

        r4 = (java.awt.Component) $r2;

        virtualinvoke r4.<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)>($r1);

        goto label4;

     label3:
        $z2 = $r2 instanceof java.awt.MenuComponent;

        if $z2 == 0 goto label4;

        $r3 = (java.awt.MenuComponent) $r2;

        virtualinvoke $r3.<java.awt.MenuComponent: void dispatchEvent(java.awt.AWTEvent)>($r1);

     label4:
        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        byte b9, b26, b27;
        java.lang.Thread $r48, $r50;
        javax.swing.DesktopManager $r11, $r16, $r21, $r26;
        org.mozilla.javascript.tools.shell.ConsoleTextArea $r24;
        org.mozilla.javascript.tools.debugger.FileWindow $r5, r46;
        java.lang.Exception $r39, $r40, $r41;
        org.mozilla.javascript.tools.debugger.JSInternalConsole $r18, $r19, $r22, $r23, $r27;
        javax.swing.JInternalFrame[] $r7, $r13;
        java.awt.event.ActionListener $r4;
        org.mozilla.javascript.tools.debugger.MoreWindows $r51;
        java.lang.String $r1, $r30, $r31, $r34, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        javax.swing.JDesktopPane $r6, $r8, $r10, $r12, $r15, $r20, $r25, $r43;
        java.awt.Dimension $r9, $r44;
        org.mozilla.javascript.tools.debugger.RunProxy $r47, $r49;
        org.mozilla.javascript.tools.debugger.SwingGui r2;
        javax.swing.JInternalFrame r14, $r42, r45;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i10, i11, i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, $i29, $i31;
        java.util.Hashtable $r29;
        double $d0, $d1;
        org.mozilla.javascript.tools.debugger.FindFunction $r52;
        java.awt.event.ActionEvent r0;
        org.mozilla.javascript.tools.debugger.Dim $r3, $r38;

        r2 := @this: org.mozilla.javascript.tools.debugger.SwingGui;

        r0 := @parameter0: java.awt.event.ActionEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        b9 = -1;

        b27 = -1;

        b26 = -1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Cut");

        if $z0 != 0 goto label01;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Copy");

        if $z2 != 0 goto label01;

        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Paste");

        if $z3 == 0 goto label02;

     label01:
        $r42 = specialinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JInternalFrame getSelectedFrame()>();

        if $r42 == null goto label39;

        $z1 = $r42 instanceof java.awt.event.ActionListener;

        if $z1 == 0 goto label39;

        $r4 = (java.awt.event.ActionListener) $r42;

        interfaceinvoke $r4.<java.awt.event.ActionListener: void actionPerformed(java.awt.event.ActionEvent)>(r0);

        goto label39;

     label02:
        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Step Over");

        if $z4 == 0 goto label03;

        b9 = 0;

        b27 = 0;

        b26 = 0;

        goto label39;

     label03:
        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Step Into");

        if $z5 == 0 goto label04;

        b9 = 1;

        b27 = 1;

        b26 = 1;

        goto label39;

     label04:
        $z6 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Step Out");

        if $z6 == 0 goto label05;

        b9 = 2;

        b27 = 2;

        b26 = 2;

        goto label39;

     label05:
        $z7 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Go");

        if $z7 == 0 goto label06;

        b9 = 3;

        b27 = 3;

        b26 = 3;

        goto label39;

     label06:
        $z8 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Break");

        if $z8 == 0 goto label07;

        $r38 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Dim dim>;

        virtualinvoke $r38.<org.mozilla.javascript.tools.debugger.Dim: void setBreak()>();

        goto label39;

     label07:
        $z9 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Exit");

        if $z9 == 0 goto label08;

        specialinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: void exit()>();

        goto label39;

     label08:
        $z10 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Open");

        if $z10 == 0 goto label09;

        $r34 = specialinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: java.lang.String chooseFile(java.lang.String)>("Select a file to compile");

        if $r34 == null goto label39;

        $r35 = specialinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: java.lang.String readFile(java.lang.String)>($r34);

        if $r35 == null goto label39;

        $r47 = new org.mozilla.javascript.tools.debugger.RunProxy;

        specialinvoke $r47.<org.mozilla.javascript.tools.debugger.RunProxy: void <init>(org.mozilla.javascript.tools.debugger.SwingGui,int)>(r2, 1);

        $r47.<org.mozilla.javascript.tools.debugger.RunProxy: java.lang.String fileName> = $r34;

        $r47.<org.mozilla.javascript.tools.debugger.RunProxy: java.lang.String text> = $r35;

        $r48 = new java.lang.Thread;

        specialinvoke $r48.<java.lang.Thread: void <init>(java.lang.Runnable)>($r47);

        virtualinvoke $r48.<java.lang.Thread: void start()>();

        goto label39;

     label09:
        $z11 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Load");

        if $z11 == 0 goto label10;

        $r30 = specialinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: java.lang.String chooseFile(java.lang.String)>("Select a file to execute");

        if $r30 == null goto label39;

        $r31 = specialinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: java.lang.String readFile(java.lang.String)>($r30);

        if $r31 == null goto label39;

        $r49 = new org.mozilla.javascript.tools.debugger.RunProxy;

        specialinvoke $r49.<org.mozilla.javascript.tools.debugger.RunProxy: void <init>(org.mozilla.javascript.tools.debugger.SwingGui,int)>(r2, 2);

        $r49.<org.mozilla.javascript.tools.debugger.RunProxy: java.lang.String fileName> = $r30;

        $r49.<org.mozilla.javascript.tools.debugger.RunProxy: java.lang.String text> = $r31;

        $r50 = new java.lang.Thread;

        specialinvoke $r50.<java.lang.Thread: void <init>(java.lang.Runnable)>($r49);

        virtualinvoke $r50.<java.lang.Thread: void start()>();

        goto label39;

     label10:
        $z12 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("More Windows...");

        if $z12 == 0 goto label11;

        $r51 = new org.mozilla.javascript.tools.debugger.MoreWindows;

        $r29 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: java.util.Hashtable fileWindows>;

        specialinvoke $r51.<org.mozilla.javascript.tools.debugger.MoreWindows: void <init>(javax.swing.JFrame,java.util.Hashtable,java.lang.String,java.lang.String)>(r2, $r29, "Window", "Files");

        virtualinvoke $r51.<org.mozilla.javascript.tools.debugger.MoreWindows: java.lang.String showDialog(java.awt.Component)>(r2);

        goto label39;

     label11:
        $z13 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Console");

        if $z13 == 0 goto label13;

        $r18 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        $z21 = virtualinvoke $r18.<org.mozilla.javascript.tools.debugger.JSInternalConsole: boolean isIcon()>();

        if $z21 == 0 goto label12;

        $r25 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r26 = virtualinvoke $r25.<javax.swing.JDesktopPane: javax.swing.DesktopManager getDesktopManager()>();

        $r27 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        interfaceinvoke $r26.<javax.swing.DesktopManager: void deiconifyFrame(javax.swing.JInternalFrame)>($r27);

     label12:
        $r19 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        virtualinvoke $r19.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void show()>();

        $r20 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r21 = virtualinvoke $r20.<javax.swing.JDesktopPane: javax.swing.DesktopManager getDesktopManager()>();

        $r22 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        interfaceinvoke $r21.<javax.swing.DesktopManager: void activateFrame(javax.swing.JInternalFrame)>($r22);

        $r23 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.JSInternalConsole console>;

        $r24 = $r23.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        virtualinvoke $r24.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void requestFocus()>();

        goto label39;

     label13:
        $z14 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Cut");

        if $z14 == 0 goto label14;

        goto label39;

     label14:
        $z15 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Copy");

        if $z15 == 0 goto label15;

        goto label39;

     label15:
        $z16 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Paste");

        if $z16 == 0 goto label16;

        goto label39;

     label16:
        $z17 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Go to function...");

        if $z17 == 0 goto label17;

        $r52 = new org.mozilla.javascript.tools.debugger.FindFunction;

        specialinvoke $r52.<org.mozilla.javascript.tools.debugger.FindFunction: void <init>(org.mozilla.javascript.tools.debugger.SwingGui,java.lang.String,java.lang.String)>(r2, "Go to function", "Function");

        virtualinvoke $r52.<org.mozilla.javascript.tools.debugger.FindFunction: java.lang.String showDialog(java.awt.Component)>(r2);

        goto label39;

     label17:
        $z18 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Tile");

        if $z18 == 0 goto label27;

        $r12 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r13 = virtualinvoke $r12.<javax.swing.JDesktopPane: javax.swing.JInternalFrame[] getAllFrames()>();

        i10 = lengthof $r13;

        $d0 = (double) i10;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $i1 = (int) $d1;

        i11 = $i1;

        i12 = $i1;

        $i2 = $i1 * $i1;

        if $i2 >= i10 goto label18;

        i11 = $i1 + 1;

        $i6 = $i1 * i11;

        if $i6 >= i10 goto label18;

        i12 = $i1 + 1;

     label18:
        $r43 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r44 = virtualinvoke $r43.<javax.swing.JDesktopPane: java.awt.Dimension getSize()>();

        $i13 = $r44.<java.awt.Dimension: int width>;

        $i14 = $i13 / i11;

        $i15 = $r44.<java.awt.Dimension: int height>;

        $i16 = $i15 / i12;

        i17 = 0;

        i18 = 0;

        i19 = 0;

     label19:
        if i19 >= i12 goto label39;

        i20 = 0;

     label20:
        if i20 >= i11 goto label26;

        $i3 = i19 * i11;

        i4 = $i3 + i20;

        $i5 = lengthof $r13;

        if i4 < $i5 goto label21;

        goto label26;

     label21:
        r14 = $r13[i4];

     label22:
        virtualinvoke r14.<javax.swing.JInternalFrame: void setIcon(boolean)>(0);

        virtualinvoke r14.<javax.swing.JInternalFrame: void setMaximum(boolean)>(0);

     label23:
        goto label25;

     label24:
        $r41 := @caughtexception;

     label25:
        $r15 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r16 = virtualinvoke $r15.<javax.swing.JDesktopPane: javax.swing.DesktopManager getDesktopManager()>();

        interfaceinvoke $r16.<javax.swing.DesktopManager: void setBoundsForFrame(javax.swing.JComponent,int,int,int,int)>(r14, i17, i18, $i14, $i16);

        i17 = i17 + $i14;

        i20 = i20 + 1;

        goto label20;

     label26:
        i18 = i18 + $i16;

        i17 = 0;

        i19 = i19 + 1;

        goto label19;

     label27:
        $z19 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Cascade");

        if $z19 == 0 goto label34;

        $r6 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r7 = virtualinvoke $r6.<javax.swing.JDesktopPane: javax.swing.JInternalFrame[] getAllFrames()>();

        i21 = lengthof $r7;

        i22 = 0;

        i23 = 0;

        $r8 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $i0 = virtualinvoke $r8.<javax.swing.JDesktopPane: int getHeight()>();

        i24 = $i0 / i21;

        if i24 <= 30 goto label28;

        i24 = 30;

     label28:
        i25 = i21 - 1;

     label29:
        if i25 < 0 goto label39;

        r45 = $r7[i25];

     label30:
        virtualinvoke r45.<javax.swing.JInternalFrame: void setIcon(boolean)>(0);

        virtualinvoke r45.<javax.swing.JInternalFrame: void setMaximum(boolean)>(0);

     label31:
        goto label33;

     label32:
        $r40 := @caughtexception;

     label33:
        $r9 = virtualinvoke r45.<javax.swing.JInternalFrame: java.awt.Dimension getPreferredSize()>();

        $i7 = $r9.<java.awt.Dimension: int width>;

        $i8 = $r9.<java.awt.Dimension: int height>;

        $r10 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: javax.swing.JDesktopPane desk>;

        $r11 = virtualinvoke $r10.<javax.swing.JDesktopPane: javax.swing.DesktopManager getDesktopManager()>();

        interfaceinvoke $r11.<javax.swing.DesktopManager: void setBoundsForFrame(javax.swing.JComponent,int,int,int,int)>(r45, i23, i22, $i7, $i8);

        $i29 = (int) -1;

        i25 = i25 + $i29;

        i23 = i23 + i24;

        i22 = i22 + i24;

        goto label29;

     label34:
        $r5 = virtualinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.FileWindow getFileWindow(java.lang.String)>($r1);

        if $r5 == null goto label39;

        r46 = (org.mozilla.javascript.tools.debugger.FileWindow) $r5;

     label35:
        $z20 = virtualinvoke r46.<org.mozilla.javascript.tools.debugger.FileWindow: boolean isIcon()>();

        if $z20 == 0 goto label36;

        virtualinvoke r46.<org.mozilla.javascript.tools.debugger.FileWindow: void setIcon(boolean)>(0);

     label36:
        virtualinvoke r46.<org.mozilla.javascript.tools.debugger.FileWindow: void setVisible(boolean)>(1);

        virtualinvoke r46.<org.mozilla.javascript.tools.debugger.FileWindow: void moveToFront()>();

        virtualinvoke r46.<org.mozilla.javascript.tools.debugger.FileWindow: void setSelected(boolean)>(1);

     label37:
        goto label39;

     label38:
        $r39 := @caughtexception;

     label39:
        $i31 = (int) -1;

        if b26 == $i31 goto label40;

        specialinvoke r2.<org.mozilla.javascript.tools.debugger.SwingGui: void updateEnabled(boolean)>(0);

        $r3 = r2.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Dim dim>;

        virtualinvoke $r3.<org.mozilla.javascript.tools.debugger.Dim: void setReturnValue(int)>(b27);

     label40:
        return;

        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Exception from label35 to label37 with label38;
    }

    static void access$000(org.mozilla.javascript.tools.debugger.SwingGui)
    {
        org.mozilla.javascript.tools.debugger.SwingGui r0;

        r0 := @parameter0: org.mozilla.javascript.tools.debugger.SwingGui;

        specialinvoke r0.<org.mozilla.javascript.tools.debugger.SwingGui: void exit()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.tools.debugger.SwingGui: long serialVersionUID> = -8217029773456711621L;

        return;
    }
}
