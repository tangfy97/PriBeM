public abstract class org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio extends java.lang.Object implements org.w3c.dom.svg.SVGPreserveAspectRatio, org.apache.batik.util.SVGConstants
{
    protected static final java.lang.String[] ALIGN_VALUES;
    protected static final java.lang.String[] MEET_OR_SLICE_VALUES;
    protected short align;
    protected short meetOrSlice;

    public static java.lang.String getValueAsString(short, short)
    {
        java.lang.String[] $r0, $r5;
        short s0, s1;
        java.lang.StringBuffer $r3, $r4, $r7, $r9;
        int $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, $r6, $r8;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $i2 = (int) s0;

        if $i2 < 1 goto label1;

        $i3 = (int) s0;

        if $i3 <= 10 goto label2;

     label1:
        return null;

     label2:
        $r0 = <org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: java.lang.String[] ALIGN_VALUES>;

        $i4 = (int) s0;

        r1 = $r0[$i4];

        if s0 != 1 goto label3;

        return r1;

     label3:
        $i5 = (int) s1;

        if $i5 < 1 goto label4;

        $i6 = (int) s1;

        if $i6 <= 2 goto label5;

     label4:
        return null;

     label5:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r5 = <org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: java.lang.String[] MEET_OR_SLICE_VALUES>;

        $i7 = (int) s1;

        $r6 = $r5[$i7];

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public void <init>()
    {
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align> = 6;

        r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice> = 1;

        return;
    }

    public short getAlign()
    {
        short $s0;
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio;

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align>;

        return $s0;
    }

    public short getMeetOrSlice()
    {
        short $s0;
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio;

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice>;

        return $s0;
    }

    public void setAlign(short)
    {
        short s0;
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio;

        s0 := @parameter0: short;

        r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align> = s0;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: java.lang.String getValueAsString()>();

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: void setAttributeValue(java.lang.String)>($r1);

        return;
    }

    public void setMeetOrSlice(short)
    {
        short s0;
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio;

        s0 := @parameter0: short;

        r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice> = s0;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: java.lang.String getValueAsString()>();

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: void setAttributeValue(java.lang.String)>($r1);

        return;
    }

    public void reset()
    {
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio;

        r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align> = 6;

        r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice> = 1;

        return;
    }

    protected abstract void setAttributeValue(java.lang.String) throws org.w3c.dom.DOMException;

    protected abstract org.w3c.dom.DOMException createDOMException(short, java.lang.String, java.lang.Object[]);

    protected void setValueAsString(java.lang.String) throws org.w3c.dom.DOMException
    {
        java.lang.Object[] $r5;
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio r1;
        org.apache.batik.parser.PreserveAspectRatioParser $r2;
        short $s0, $s1;
        org.w3c.dom.DOMException $r6;
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio$PreserveAspectRatioParserHandler $r0;
        java.lang.String r3;
        org.apache.batik.parser.ParseException $r4;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio;

        r3 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio$PreserveAspectRatioParserHandler;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio$PreserveAspectRatioParserHandler: void <init>(org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio)>(r1);

     label1:
        $r2 = new org.apache.batik.parser.PreserveAspectRatioParser;

        specialinvoke $r2.<org.apache.batik.parser.PreserveAspectRatioParser: void <init>()>();

        virtualinvoke $r2.<org.apache.batik.parser.PreserveAspectRatioParser: void setPreserveAspectRatioHandler(org.apache.batik.parser.PreserveAspectRatioHandler)>($r0);

        virtualinvoke $r2.<org.apache.batik.parser.AbstractParser: void parse(java.lang.String)>(r3);

        $s0 = virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio$PreserveAspectRatioParserHandler: short getAlign()>();

        r1.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align> = $s0;

        $s1 = virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio$PreserveAspectRatioParserHandler: short getMeetOrSlice()>();

        r1.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice> = $s1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r3;

        $r6 = virtualinvoke r1.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(13, "preserve.aspect.ratio", $r5);

        throw $r6;

     label4:
        return;

        catch org.apache.batik.parser.ParseException from label1 to label2 with label3;
    }

    protected java.lang.String getValueAsString()
    {
        java.lang.Integer $r16, $r17;
        org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio r0;
        java.lang.Object[] $r1, $r6;
        java.lang.String[] $r4, $r12;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8;
        java.lang.StringBuffer $r10, $r11, $r14, $r18;
        org.w3c.dom.DOMException $r3, $r8;
        int $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r5, $r13, $r15;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio;

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align>;

        $i9 = (int) $s0;

        if $i9 < 1 goto label1;

        $s2 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align>;

        $i10 = (int) $s2;

        if $i10 <= 10 goto label2;

     label1:
        $r1 = newarray (java.lang.Object)[1];

        $r16 = new java.lang.Integer;

        $s1 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align>;

        $i11 = (int) $s1;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>($i11);

        $r1[0] = $r16;

        $r3 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(13, "preserve.aspect.ratio.align", $r1);

        throw $r3;

     label2:
        $r4 = <org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: java.lang.String[] ALIGN_VALUES>;

        $s3 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align>;

        $i12 = (int) $s3;

        r5 = $r4[$i12];

        $s4 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short align>;

        if $s4 != 1 goto label3;

        return r5;

     label3:
        $s5 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice>;

        $i13 = (int) $s5;

        if $i13 < 1 goto label4;

        $s7 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice>;

        $i14 = (int) $s7;

        if $i14 <= 2 goto label5;

     label4:
        $r6 = newarray (java.lang.Object)[1];

        $r17 = new java.lang.Integer;

        $s6 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice>;

        $i15 = (int) $s6;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>($i15);

        $r6[0] = $r17;

        $r8 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(13, "preserve.aspect.ratio.meet.or.slice", $r6);

        throw $r8;

     label5:
        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r12 = <org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: java.lang.String[] MEET_OR_SLICE_VALUES>;

        $s8 = r0.<org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: short meetOrSlice>;

        $i16 = (int) $s8;

        $r13 = $r12[$i16];

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = null;

        $r0[1] = "none";

        $r0[2] = "xMinYMin";

        $r0[3] = "xMidYMin";

        $r0[4] = "xMaxYMin";

        $r0[5] = "xMinYMid";

        $r0[6] = "xMidYMid";

        $r0[7] = "xMaxYMid";

        $r0[8] = "xMinYMax";

        $r0[9] = "xMidYMax";

        $r0[10] = "xMaxYMax";

        <org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: java.lang.String[] ALIGN_VALUES> = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = null;

        $r1[1] = "meet";

        $r1[2] = "slice";

        <org.apache.batik.dom.svg.AbstractSVGPreserveAspectRatio: java.lang.String[] MEET_OR_SLICE_VALUES> = $r1;

        return;
    }
}
