public final class org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter extends org.apache.lucene.codecs.TermVectorsWriter
{
    private final org.apache.lucene.store.Directory directory;
    private final java.lang.String segment;
    private org.apache.lucene.store.IndexOutput tvx;
    private org.apache.lucene.store.IndexOutput tvd;
    private org.apache.lucene.store.IndexOutput tvf;
    private long[] fps;
    private int fieldCount;
    private int numVectorFields;
    private java.lang.String lastFieldName;
    private final org.apache.lucene.util.BytesRef lastTerm;
    private int[] offsetStartBuffer;
    private int[] offsetEndBuffer;
    private org.apache.lucene.util.BytesRef payloadData;
    private int bufferedIndex;
    private int bufferedFreq;
    private boolean positions;
    private boolean offsets;
    private boolean payloads;
    int lastPosition;
    int lastOffset;
    int lastPayloadLength;
    org.apache.lucene.util.BytesRef scratch;
    private static final int MAX_RAW_MERGE_DOCS;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory, java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        byte $b2, $b5, $b8;
        int[] $r3, $r4;
        org.apache.lucene.store.Directory r7;
        org.apache.lucene.store.IOContext r10;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.BytesRef $r26, $r27, $r28;
        java.lang.Throwable $r25;
        long $l0, $l1, $l3, $l4, $l6, $l7;
        java.lang.AssertionError $r29, $r30, $r31;
        long[] $r1;
        int $i10;
        java.lang.String r8, $r9, $r13, $r16;
        org.apache.lucene.store.IndexOutput $r11, $r12, $r14, $r15, $r17, $r18, $r19, $r21, $r23;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        r7 := @parameter0: org.apache.lucene.store.Directory;

        r8 := @parameter1: java.lang.String;

        r10 := @parameter2: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.codecs.TermVectorsWriter: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx> = null;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd> = null;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf> = null;

        $r1 = newarray (long)[10];

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: long[] fps> = $r1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int fieldCount> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int numVectorFields> = 0;

        $r26 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r26.<org.apache.lucene.util.BytesRef: void <init>(int)>(10);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef lastTerm> = $r26;

        $r3 = newarray (int)[10];

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetStartBuffer> = $r3;

        $r4 = newarray (int)[10];

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetEndBuffer> = $r4;

        $r27 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r27.<org.apache.lucene.util.BytesRef: void <init>(int)>(10);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData> = $r27;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedFreq> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean positions> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean offsets> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean payloads> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPosition> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastOffset> = 0;

        $i10 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPayloadLength> = $i10;

        $r28 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r28.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef scratch> = $r28;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.Directory directory> = r7;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String segment> = r8;

     label1:
        $r9 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r8, "", "tvx");

        $r11 = virtualinvoke r7.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r9, r10);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx> = $r11;

        $r12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r12, "Lucene40TermVectorsIndex", 1);

        $r13 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r8, "", "tvd");

        $r14 = virtualinvoke r7.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r13, r10);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd> = $r14;

        $r15 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r15, "Lucene40TermVectorsDocs", 1);

        $r16 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r8, "", "tvf");

        $r17 = virtualinvoke r7.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r16, r10);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf> = $r17;

        $r18 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r18, "Lucene40TermVectorsFields", 1);

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $l6 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_INDEX>;

        $r23 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $l7 = virtualinvoke $r23.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label2;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label2:
        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $l3 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_DOCS>;

        $r21 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l4 = virtualinvoke $r21.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label3;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label3:
        $z2 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $l0 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_FIELDS>;

        $r19 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l1 = virtualinvoke $r19.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label4:
        if 1 != 0 goto label8;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void abort()>();

        goto label8;

     label5:
        $r25 := @caughtexception;

     label6:
        if 0 != 0 goto label7;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void abort()>();

     label7:
        throw $r25;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void startDocument(int) throws java.io.IOException
    {
        long $l1, $l2;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;
        long[] $r6, $r7;
        int i0;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String lastFieldName> = null;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int numVectorFields> = i0;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l1 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l1);

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l2 = virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l2);

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        virtualinvoke $r5.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i0);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int fieldCount> = 0;

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: long[] fps>;

        $r7 = staticinvoke <org.apache.lucene.util.ArrayUtil: long[] grow(long[],int)>($r6, i0);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: long[] fps> = $r7;

        return;
    }

    public void startField(org.apache.lucene.index.FieldInfo, int, boolean, boolean, boolean) throws java.io.IOException
    {
        byte $b1, $b2, b8;
        boolean $z0, z1, z2, z3;
        org.apache.lucene.util.BytesRef $r16;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r21;
        long $l6;
        java.lang.AssertionError $r22;
        long[] $r17;
        int i0, $i3, $i4, $i5, $i7, $i10;
        java.lang.String $r3, $r4, $r5, $r9, $r12, $r14, $r15;
        org.apache.lucene.store.IndexOutput $r2, $r18, $r19, $r20;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;
        org.apache.lucene.index.FieldInfo r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String lastFieldName>;

        if $r3 == null goto label1;

        $r5 = r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String lastFieldName>;

        $i3 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        if $i3 > 0 goto label1;

        $r22 = new java.lang.AssertionError;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fieldName=");

        $r9 = r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastFieldName=");

        $r12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String lastFieldName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r22;

     label1:
        $r15 = r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String lastFieldName> = $r15;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean positions> = z1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean offsets> = z2;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean payloads> = z3;

        $r16 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef lastTerm>;

        $r16.<org.apache.lucene.util.BytesRef: int length> = 0;

        $i10 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPayloadLength> = $i10;

        $r17 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: long[] fps>;

        $i4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int fieldCount>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int fieldCount> = $i5;

        $r18 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l6 = virtualinvoke $r18.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $r17[$i4] = $l6;

        $r19 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $i7 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        virtualinvoke $r19.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i7);

        $r20 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r20.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i0);

        b8 = 0;

        if z1 == 0 goto label2;

        b8 = (byte) 1;

     label2:
        if z2 == 0 goto label3;

        $b2 = b8 | 2;

        b8 = (byte) $b2;

     label3:
        if z3 == 0 goto label4;

        $b1 = b8 | 4;

        b8 = (byte) $b1;

     label4:
        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeByte(byte)>(b8);

        return;
    }

    public void finishDocument() throws java.io.IOException
    {
        long $l1, $l2, $l3;
        java.lang.AssertionError $r4;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;
        long[] $r1, $r2;
        int $i0, $i4, $i5, i6, $i7;
        org.apache.lucene.store.IndexOutput $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int fieldCount>;

        $i4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int numVectorFields>;

        if $i5 == $i4 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        i6 = 1;

     label2:
        $i7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int fieldCount>;

        if i6 >= $i7 goto label3;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: long[] fps>;

        $l2 = $r1[i6];

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: long[] fps>;

        $i0 = i6 - 1;

        $l1 = $r2[$i0];

        $l3 = $l2 - $l1;

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void writeVLong(long)>($l3);

        i6 = i6 + 1;

        goto label2;

     label3:
        return;
    }

    public void startTerm(org.apache.lucene.util.BytesRef, int) throws java.io.IOException
    {
        byte[] $r5;
        int[] $r9, $r10, $r11, $r12;
        int $i0, $i1, i2, $i3, $i4, i5;
        org.apache.lucene.store.IndexOutput $r3, $r4, $r6, $r7;
        boolean $z0, $z1;
        org.apache.lucene.util.BytesRef r1, $r2, $r8, $r13;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        i5 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef lastTerm>;

        $i0 = staticinvoke <org.apache.lucene.util.StringHelper: int bytesDifference(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r2, r1);

        $i1 = r1.<org.apache.lucene.util.BytesRef: int length>;

        i2 = $i1 - $i0;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i0);

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i2);

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r5 = r1.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i3 = r1.<org.apache.lucene.util.BytesRef: int offset>;

        $i4 = $i3 + $i0;

        virtualinvoke $r6.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>($r5, $i4, i2);

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r7.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i5);

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef lastTerm>;

        virtualinvoke $r8.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>(r1);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastOffset> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPosition> = 0;

        $z0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean offsets>;

        if $z0 == 0 goto label1;

        $z1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean positions>;

        if $z1 == 0 goto label1;

        $r9 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetStartBuffer>;

        $r10 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[],int)>($r9, i5);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetStartBuffer> = $r10;

        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetEndBuffer>;

        $r12 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[],int)>($r11, i5);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetEndBuffer> = $r12;

     label1:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedFreq> = i5;

        $r13 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        $r13.<org.apache.lucene.util.BytesRef: int length> = 0;

        return;
    }

    public void addProx(int, org.apache.lucene.store.DataInput, org.apache.lucene.store.DataInput) throws java.io.IOException
    {
        byte[] $r9, $r16;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r17;
        org.apache.lucene.store.DataInput r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        org.apache.lucene.store.IndexOutput $r3, $r4, $r5, $r10;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.store.DataInput;

        r2 := @parameter2: org.apache.lucene.store.DataInput;

        $z0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean payloads>;

        if $z0 == 0 goto label5;

        i14 = 0;

     label1:
        if i14 >= i0 goto label4;

        $i7 = virtualinvoke r1.<org.apache.lucene.store.DataInput: int readVInt()>();

        $i8 = $i7 & 1;

        if $i8 != 1 goto label2;

        $i10 = virtualinvoke r1.<org.apache.lucene.store.DataInput: int readVInt()>();

        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef scratch>;

        virtualinvoke $r11.<org.apache.lucene.util.BytesRef: void grow(int)>($i10);

        $r12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef scratch>;

        $r12.<org.apache.lucene.util.BytesRef: int length> = $i10;

        $r13 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef scratch>;

        $r16 = $r13.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r14 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef scratch>;

        $i12 = $r14.<org.apache.lucene.util.BytesRef: int offset>;

        $r15 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef scratch>;

        $i11 = $r15.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke r1.<org.apache.lucene.store.DataInput: void readBytes(byte[],int,int)>($r16, $i12, $i11);

        $i13 = $i7 >>> 1;

        $r17 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef scratch>;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void writePosition(int,org.apache.lucene.util.BytesRef)>($i13, $r17);

        goto label3;

     label2:
        $i9 = $i7 >>> 1;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void writePosition(int,org.apache.lucene.util.BytesRef)>($i9, null);

     label3:
        i14 = i14 + 1;

        goto label1;

     label4:
        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        $r9 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        $i6 = $r7.<org.apache.lucene.util.BytesRef: int offset>;

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        $i5 = $r8.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r10.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>($r9, $i6, $i5);

        goto label7;

     label5:
        if r1 == null goto label7;

        i15 = 0;

     label6:
        if i15 >= i0 goto label7;

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i3 = virtualinvoke r1.<org.apache.lucene.store.DataInput: int readVInt()>();

        $i4 = $i3 >>> 1;

        virtualinvoke $r5.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i4);

        i15 = i15 + 1;

        goto label6;

     label7:
        if r2 == null goto label9;

        i16 = 0;

     label8:
        if i16 >= i0 goto label9;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i1 = virtualinvoke r2.<org.apache.lucene.store.DataInput: int readVInt()>();

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i1);

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i2 = virtualinvoke r2.<org.apache.lucene.store.DataInput: int readVInt()>();

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i2);

        i16 = i16 + 1;

        goto label8;

     label9:
        return;
    }

    public void addPosition(int, int, int, org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        int[] $r4, $r5;
        int i0, $i1, $i2, i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.lucene.store.IndexOutput $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.util.BytesRef r3;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        r3 := @parameter3: org.apache.lucene.util.BytesRef;

        $z0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean positions>;

        if $z0 == 0 goto label3;

        $z3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean offsets>;

        if $z3 != 0 goto label1;

        $z5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean payloads>;

        if $z5 == 0 goto label3;

     label1:
        $i8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPosition>;

        $i9 = i5 - $i8;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void writePosition(int,org.apache.lucene.util.BytesRef)>($i9, r3);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPosition> = i5;

        $z4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean offsets>;

        if $z4 == 0 goto label2;

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetStartBuffer>;

        $i12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex>;

        $r4[$i12] = i0;

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetEndBuffer>;

        $i13 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex>;

        $r5[$i13] = i3;

     label2:
        $i10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex>;

        $i11 = $i10 + 1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex> = $i11;

        goto label5;

     label3:
        $z1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean positions>;

        if $z1 == 0 goto label4;

        $i6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPosition>;

        $i7 = i5 - $i6;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void writePosition(int,org.apache.lucene.util.BytesRef)>($i7, r3);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPosition> = i5;

        goto label5;

     label4:
        $z2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean offsets>;

        if $z2 == 0 goto label5;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastOffset>;

        $i2 = i0 - $i1;

        virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i2);

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i4 = i3 - i0;

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i4);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastOffset> = i3;

     label5:
        return;
    }

    public void finishTerm() throws java.io.IOException
    {
        byte[] $r10;
        int[] $r1, $r3, $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.util.BytesRef $r7, $r8, $r9;
        java.lang.AssertionError $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13;
        org.apache.lucene.store.IndexOutput $r2, $r5, $r11;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex>;

        if $i0 <= 0 goto label7;

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean positions>;

        if $z3 == 0 goto label1;

        $z4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean offsets>;

        if $z4 != 0 goto label2;

        $z5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean payloads>;

        if $z5 != 0 goto label2;

     label1:
        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label2:
        $z6 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z6 != 0 goto label3;

        $i11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex>;

        $i10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedFreq>;

        if $i11 == $i10 goto label3;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label3:
        $z1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean payloads>;

        if $z1 == 0 goto label4;

        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        $r10 = $r7.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        $i9 = $r8.<org.apache.lucene.util.BytesRef: int offset>;

        $r9 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        $i8 = $r9.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r11.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>($r10, $i9, $i8);

     label4:
        i12 = 0;

     label5:
        $i13 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int bufferedIndex>;

        if i12 >= $i13 goto label7;

        $z2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean offsets>;

        if $z2 == 0 goto label6;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetStartBuffer>;

        $i2 = $r1[i12];

        $i1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastOffset>;

        $i3 = $i2 - $i1;

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i3);

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetEndBuffer>;

        $i5 = $r3[i12];

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetStartBuffer>;

        $i4 = $r4[i12];

        $i6 = $i5 - $i4;

        virtualinvoke $r5.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i6);

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int[] offsetEndBuffer>;

        $i7 = $r6[i12];

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastOffset> = $i7;

     label6:
        i12 = i12 + 1;

        goto label5;

     label7:
        return;
    }

    private void writePosition(int, org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.lucene.store.IndexOutput $r1, $r3, $r7, $r8;
        boolean $z0;
        java.lang.UnsupportedOperationException $r6;
        org.apache.lucene.util.BytesRef r2, $r4, $r5;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        $z0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean payloads>;

        if $z0 == 0 goto label7;

        if r2 != null goto label1;

        $i8 = 0;

        goto label2;

     label1:
        $i8 = r2.<org.apache.lucene.util.BytesRef: int length>;

     label2:
        i1 = $i8;

        $i2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPayloadLength>;

        if $i8 == $i2 goto label3;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int lastPayloadLength> = $i8;

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i6 = i0 << 1;

        $i7 = $i6 | 1;

        virtualinvoke $r7.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i7);

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r8.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i8);

        goto label4;

     label3:
        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i3 = i0 << 1;

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i3);

     label4:
        if i1 <= 0 goto label6;

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        $i4 = $r4.<org.apache.lucene.util.BytesRef: int length>;

        $i5 = i1 + $i4;

        if $i5 >= 0 goto label5;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("A term cannot have more than Integer.MAX_VALUE bytes of payload data in a single document");

        throw $r6;

     label5:
        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.util.BytesRef payloadData>;

        virtualinvoke $r5.<org.apache.lucene.util.BytesRef: void append(org.apache.lucene.util.BytesRef)>(r2);

     label6:
        goto label8;

     label7:
        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i0);

     label8:
        return;
    }

    public void abort()
    {
        java.lang.Throwable $r9;
        java.lang.String[] $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;
        org.apache.lucene.store.Directory $r3;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

     label1:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void close()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.Directory directory>;

        $r1 = newarray (java.lang.String)[3];

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String segment>;

        $r4 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "tvx");

        $r1[0] = $r4;

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String segment>;

        $r6 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r5, "", "tvd");

        $r1[1] = $r6;

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: java.lang.String segment>;

        $r8 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r7, "", "tvf");

        $r1[2] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void deleteFilesIgnoringExceptions(org.apache.lucene.store.Directory,java.lang.String[])>($r3, $r1);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void addRawDocuments(org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader, int[], int[], int) throws java.io.IOException
    {
        byte $b6, $b8;
        int[] r13, r15;
        boolean $z0, $z1;
        long $l0, $l1, $l3, $l4, $l5, $l7, $l10, $l12, l13, l14;
        java.lang.AssertionError $r9, $r11;
        int i2, $i9, $i11, i15;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        org.apache.lucene.store.IndexInput $r5, $r7;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r3;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        r3 := @parameter0: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        r13 := @parameter1: int[];

        r15 := @parameter2: int[];

        i2 := @parameter3: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        l13 = $l0;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l1 = virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        l14 = $l1;

        i15 = 0;

     label1:
        if i15 >= i2 goto label2;

        $r12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        virtualinvoke $r12.<org.apache.lucene.store.IndexOutput: void writeLong(long)>(l13);

        $i9 = r13[i15];

        $l10 = (long) $i9;

        l13 = l13 + $l10;

        $r14 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        virtualinvoke $r14.<org.apache.lucene.store.IndexOutput: void writeLong(long)>(l14);

        $i11 = r15[i15];

        $l12 = (long) $i11;

        l14 = l14 + $l12;

        i15 = i15 + 1;

        goto label1;

     label2:
        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r5 = virtualinvoke r3.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput getTvdStream()>();

        $l3 = l13 - $l0;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void copyBytes(org.apache.lucene.store.DataInput,long)>($r5, $l3);

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r7 = virtualinvoke r3.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput getTvfStream()>();

        $l4 = l14 - $l1;

        virtualinvoke $r6.<org.apache.lucene.store.IndexOutput: void copyBytes(org.apache.lucene.store.DataInput,long)>($r7, $l4);

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l7 = virtualinvoke $r10.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b8 = $l7 cmp l13;

        if $b8 == 0 goto label3;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label3:
        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l5 = virtualinvoke $r8.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b6 = $l5 cmp l14;

        if $b6 == 0 goto label4;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label4:
        return;
    }

    public final int merge(org.apache.lucene.index.MergeState) throws java.io.IOException
    {
        org.apache.lucene.codecs.TermVectorsReader $r11;
        org.apache.lucene.index.SegmentReader[] $r9;
        org.apache.lucene.index.MergeState r2;
        int[] r0, r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        org.apache.lucene.index.SegmentReader r10;
        org.apache.lucene.index.FieldInfos $r5;
        org.apache.lucene.util.Bits $r13;
        boolean $z0;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r12;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r4;
        java.util.List $r3, $r6;
        java.lang.Object $r7;
        org.apache.lucene.index.AtomicReader r8;

        r4 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        r2 := @parameter0: org.apache.lucene.index.MergeState;

        r0 = newarray (int)[4192];

        r1 = newarray (int)[4192];

        i4 = 0;

        i5 = 0;

        i6 = 0;

     label1:
        $r3 = r2.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i6 >= $i0 goto label5;

        $r6 = r2.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i6);

        r8 = (org.apache.lucene.index.AtomicReader) $r7;

        $r9 = r2.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentReader[] matchingSegmentReaders>;

        $i1 = i4;

        i4 = i4 + 1;

        r10 = $r9[$i1];

        r12 = null;

        if r10 == null goto label2;

        $r11 = virtualinvoke r10.<org.apache.lucene.index.SegmentReader: org.apache.lucene.codecs.TermVectorsReader getTermVectorsReader()>();

        if $r11 == null goto label2;

        $z0 = $r11 instanceof org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        if $z0 == 0 goto label2;

        r12 = (org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader) $r11;

     label2:
        $r13 = virtualinvoke r8.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        if $r13 == null goto label3;

        $i3 = specialinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int copyVectorsWithDeletions(org.apache.lucene.index.MergeState,org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader,org.apache.lucene.index.AtomicReader,int[],int[])>(r2, r12, r8, r0, r1);

        i5 = i5 + $i3;

        goto label4;

     label3:
        $i2 = specialinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int copyVectorsNoDeletions(org.apache.lucene.index.MergeState,org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader,org.apache.lucene.index.AtomicReader,int[],int[])>(r2, r12, r8, r0, r1);

        i5 = i5 + $i2;

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        $r5 = r2.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        virtualinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void finish(org.apache.lucene.index.FieldInfos,int)>($r5, i5);

        return i5;
    }

    private int copyVectorsWithDeletions(org.apache.lucene.index.MergeState, org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader, org.apache.lucene.index.AtomicReader, int[], int[]) throws java.io.IOException
    {
        org.apache.lucene.index.Fields $r3;
        org.apache.lucene.index.MergeState r5;
        int[] r7, r8;
        int $i0, i1, i2, i3, i4, $i5, i6;
        org.apache.lucene.util.Bits $r1;
        boolean $z0, $z1, $z2;
        double $d0;
        org.apache.lucene.index.MergeState$CheckAbort $r6, $r9;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r2;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r4;
        org.apache.lucene.index.AtomicReader r0;

        r4 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        r5 := @parameter0: org.apache.lucene.index.MergeState;

        r2 := @parameter1: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        r0 := @parameter2: org.apache.lucene.index.AtomicReader;

        r7 := @parameter3: int[];

        r8 := @parameter4: int[];

        $i0 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        i1 = 0;

        if r2 == null goto label08;

        i2 = 0;

     label01:
        if i2 >= $i0 goto label07;

        $z1 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i2);

        if $z1 != 0 goto label02;

        i2 = i2 + 1;

        goto label01;

     label02:
        i3 = i2;

        i4 = 0;

     label03:
        i2 = i2 + 1;

        i4 = i4 + 1;

        if i2 < $i0 goto label04;

        goto label06;

     label04:
        $z2 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i2);

        if $z2 != 0 goto label05;

        i2 = i2 + 1;

        goto label06;

     label05:
        if i4 < 4192 goto label03;

     label06:
        virtualinvoke r2.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: void rawDocs(int[],int[],int,int)>(r7, r8, i3, i4);

        specialinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void addRawDocuments(org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader,int[],int[],int)>(r2, r7, r8, i4);

        i1 = i1 + i4;

        $r9 = r5.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        $i5 = 300 * i4;

        $d0 = (double) $i5;

        virtualinvoke $r9.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>($d0);

        goto label01;

     label07:
        goto label12;

     label08:
        i6 = 0;

     label09:
        if i6 >= $i0 goto label12;

        $z0 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i6);

        if $z0 != 0 goto label10;

        goto label11;

     label10:
        $r3 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields getTermVectors(int)>(i6);

        virtualinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void addAllDocVectors(org.apache.lucene.index.Fields,org.apache.lucene.index.MergeState)>($r3, r5);

        i1 = i1 + 1;

        $r6 = r5.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        virtualinvoke $r6.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>(300.0);

     label11:
        i6 = i6 + 1;

        goto label09;

     label12:
        return i1;
    }

    private int copyVectorsNoDeletions(org.apache.lucene.index.MergeState, org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader, org.apache.lucene.index.AtomicReader, int[], int[]) throws java.io.IOException
    {
        org.apache.lucene.index.Fields $r2;
        org.apache.lucene.index.MergeState r4;
        int[] r6, r7;
        int $i0, $i1, $i2, $i3, i4, i5;
        double $d0;
        org.apache.lucene.index.MergeState$CheckAbort $r5, $r8;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r3;
        org.apache.lucene.index.AtomicReader r0;

        r3 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        r4 := @parameter0: org.apache.lucene.index.MergeState;

        r1 := @parameter1: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        r0 := @parameter2: org.apache.lucene.index.AtomicReader;

        r6 := @parameter3: int[];

        r7 := @parameter4: int[];

        $i0 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if r1 == null goto label3;

        i4 = 0;

     label1:
        if i4 >= $i0 goto label2;

        $i1 = $i0 - i4;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(4192, $i1);

        virtualinvoke r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: void rawDocs(int[],int[],int,int)>(r6, r7, i4, $i2);

        specialinvoke r3.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void addRawDocuments(org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader,int[],int[],int)>(r1, r6, r7, $i2);

        i4 = i4 + $i2;

        $r8 = r4.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        $i3 = 300 * $i2;

        $d0 = (double) $i3;

        virtualinvoke $r8.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>($d0);

        goto label1;

     label2:
        goto label5;

     label3:
        i5 = 0;

     label4:
        if i5 >= $i0 goto label5;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields getTermVectors(int)>(i5);

        virtualinvoke r3.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: void addAllDocVectors(org.apache.lucene.index.Fields,org.apache.lucene.index.MergeState)>($r2, r4);

        $r5 = r4.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        virtualinvoke $r5.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>(300.0);

        i5 = i5 + 1;

        goto label4;

     label5:
        return $i0;
    }

    public void finish(org.apache.lucene.index.FieldInfos, int)
    {
        long $l1, $l2, $l3, $l4, $l5, $l7;
        byte $b6;
        int i0;
        java.lang.String $r11, $r14;
        org.apache.lucene.index.FieldInfos r15;
        org.apache.lucene.store.IndexOutput $r1, $r7, $r10;
        java.lang.RuntimeException $r2;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8, $r9, $r12, $r13;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        r15 := @parameter0: org.apache.lucene.index.FieldInfos;

        i0 := @parameter1: int;

        $l3 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_INDEX>;

        $l1 = (long) i0;

        $l2 = $l1 * 16L;

        $l4 = $l3 + $l2;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $l5 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b6 = $l4 cmp $l5;

        if $b6 == 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tvx size mismatch: mergedDocs is ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but tvx size is ");

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $l7 = virtualinvoke $r7.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; now aborting this merge to prevent index corruption");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r1;
        java.io.Closeable[] $r0;
        org.apache.lucene.store.IndexOutput $r2, $r3, $r4;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        $r0 = newarray (java.io.Closeable)[3];

        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r0[1] = $r3;

        $r4 = r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r0[2] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

        r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf> = null;

        r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd> = null;

        r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx> = null;

        return;
    }

    public java.util.Comparator getComparator()
    {
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter r1;
        java.util.Comparator $r0;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter;

        $r0 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: int MAX_RAW_MERGE_DOCS> = 4192;

        $r0 = class "Lorg/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
