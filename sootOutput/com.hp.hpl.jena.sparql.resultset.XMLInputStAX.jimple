class com.hp.hpl.jena.sparql.resultset.XMLInputStAX extends com.hp.hpl.jena.sparql.resultset.SPARQLResult
{
    private static final java.lang.String XML_NS;

    public static com.hp.hpl.jena.query.ResultSet fromXML(java.io.InputStream)
    {
        com.hp.hpl.jena.query.ResultSet $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.resultset.XMLInputStAX: com.hp.hpl.jena.query.ResultSet fromXML(java.io.InputStream,com.hp.hpl.jena.rdf.model.Model)>(r0, null);

        return $r1;
    }

    public static com.hp.hpl.jena.query.ResultSet fromXML(java.io.InputStream, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r4;
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX $r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.query.ResultSet $r3;
        java.io.InputStream r1;
        boolean $z0;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r0 = new com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void <init>(java.io.InputStream,com.hp.hpl.jena.rdf.model.Model)>(r1, r2);

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: boolean isResultSet()>();

        if $z0 != 0 goto label1;

        $r4 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not a result set");

        throw $r4;

     label1:
        $r3 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: com.hp.hpl.jena.query.ResultSet getResultSet()>();

        return $r3;
    }

    public static com.hp.hpl.jena.query.ResultSet fromXML(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.ResultSet $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.resultset.XMLInputStAX: com.hp.hpl.jena.query.ResultSet fromXML(java.lang.String,com.hp.hpl.jena.rdf.model.Model)>(r0, null);

        return $r1;
    }

    public static com.hp.hpl.jena.query.ResultSet fromXML(java.lang.String, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r4;
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX $r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        java.lang.String r1;
        com.hp.hpl.jena.query.ResultSet $r3;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r0 = new com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void <init>(java.lang.String,com.hp.hpl.jena.rdf.model.Model)>(r1, r2);

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: boolean isResultSet()>();

        if $z0 != 0 goto label1;

        $r4 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not a result set");

        throw $r4;

     label1:
        $r3 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: com.hp.hpl.jena.query.ResultSet getResultSet()>();

        return $r3;
    }

    public static boolean booleanFromXML(java.io.InputStream)
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX $r0;
        java.io.InputStream r1;
        boolean $z0;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void <init>(java.io.InputStream)>(r1);

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: boolean getBooleanResult()>();

        return $z0;
    }

    public static boolean booleanFromXML(java.lang.String)
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX $r0;
        java.lang.String r1;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: boolean getBooleanResult()>();

        return $z0;
    }

    public void <init>(java.io.InputStream)
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX r0;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void <init>(java.io.InputStream,com.hp.hpl.jena.rdf.model.Model)>(r1, null);

        return;
    }

    public void <init>(java.io.InputStream, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r6, $r8;
        javax.xml.stream.XMLInputFactory $r1;
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX r0;
        java.lang.Exception $r5;
        javax.xml.stream.XMLStreamReader $r3;
        javax.xml.stream.XMLStreamException $r7;
        com.hp.hpl.jena.rdf.model.Model r4;
        java.io.InputStream r2;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        r2 := @parameter0: java.io.InputStream;

        r4 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void <init>()>();

        $r1 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();

     label1:
        $r3 = virtualinvoke $r1.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r2);

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void worker(javax.xml.stream.XMLStreamReader,com.hp.hpl.jena.rdf.model.Model)>($r3, r4);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        $r8 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t initialize StAX parsing engine", $r7);

        throw $r8;

     label4:
        $r5 := @caughtexception;

        $r6 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String,java.lang.Throwable)>("Failed when initializing the StAX parsing engine", $r5);

        throw $r6;

     label5:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void <init>(java.lang.String,com.hp.hpl.jena.rdf.model.Model)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r7, $r9;
        javax.xml.stream.XMLInputFactory $r1;
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX r0;
        java.lang.Exception $r6;
        java.io.StringReader $r2;
        javax.xml.stream.XMLStreamReader $r4;
        javax.xml.stream.XMLStreamException $r8;
        com.hp.hpl.jena.rdf.model.Model r5;
        java.lang.String r3;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void <init>()>();

        $r1 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();

     label1:
        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        $r4 = virtualinvoke $r1.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>($r2);

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void worker(javax.xml.stream.XMLStreamReader,com.hp.hpl.jena.rdf.model.Model)>($r4, r5);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t initialize StAX parsing engine", $r8);

        throw $r9;

     label4:
        $r6 := @caughtexception;

        $r7 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String,java.lang.Throwable)>("Failed when initializing the StAX parsing engine", $r6);

        throw $r7;

     label5:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void worker(javax.xml.stream.XMLStreamReader, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX$ResultSetStAX $r0;
        javax.xml.stream.XMLStreamReader r2;
        com.hp.hpl.jena.sparql.resultset.XMLInputStAX r1;
        com.hp.hpl.jena.rdf.model.Model r3;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputStAX;

        r2 := @parameter0: javax.xml.stream.XMLStreamReader;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        if r3 != null goto label1;

        r3 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeJenaDefaultModel()>();

     label1:
        $r0 = new com.hp.hpl.jena.sparql.resultset.XMLInputStAX$ResultSetStAX;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX$ResultSetStAX: void <init>(com.hp.hpl.jena.sparql.resultset.XMLInputStAX,javax.xml.stream.XMLStreamReader,com.hp.hpl.jena.rdf.model.Model)>(r1, r2, r3);

        $z0 = $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX$ResultSetStAX: boolean isResultSet>;

        if $z0 == 0 goto label2;

        virtualinvoke r1.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void set(com.hp.hpl.jena.query.ResultSet)>($r0);

        goto label3;

     label2:
        $z1 = $r0.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX$ResultSetStAX: boolean askResult>;

        virtualinvoke r1.<com.hp.hpl.jena.sparql.resultset.XMLInputStAX: void set(boolean)>($z1);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.resultset.XMLInputStAX: java.lang.String XML_NS> = "http://www.w3.org/XML/1998/namespace";

        return;
    }
}
