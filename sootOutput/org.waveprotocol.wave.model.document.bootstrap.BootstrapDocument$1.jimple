class org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOpCursor
{
    org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item current;
    org.waveprotocol.wave.model.document.operation.impl.AnnotationMap inherited;
    final java.util.ListIterator val$iterator;
    final org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0;

    void <init>(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument, java.util.ListIterator)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMapImpl $r3;
        java.util.ListIterator r2;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument r1;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument;

        r2 := @parameter1: java.util.ListIterator;

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0> = r1;

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item current> = null;

        $r3 = <org.waveprotocol.wave.model.document.operation.impl.AnnotationMapImpl: org.waveprotocol.wave.model.document.operation.impl.AnnotationMapImpl EMPTY_MAP>;

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap inherited> = $r3;

        return;
    }

    private org.waveprotocol.wave.model.document.operation.impl.AnnotationMap insertionAnnotations()
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate $r2;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument $r1;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        $r3 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap inherited>;

        $r1 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r2 = $r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument: org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate annotationUpdates>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.impl.AnnotationMap: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap updateWith(org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate)>($r2);

        return $r4;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate $r3, $r5;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument $r1, $r4, $r6;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r2;
        java.util.TreeSet $r7;
        int $i0, i1;
        java.lang.String $r8;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $r4 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r1 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r3 = $r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument: org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate annotationUpdates>;

        $r5 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate: org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate composeWith(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>(r2);

        $r4.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument: org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate annotationUpdates> = $r5;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        if i1 >= $i0 goto label2;

        $r6 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r7 = staticinvoke <org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument: java.util.TreeSet access$000(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument)>($r6);

        $r8 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getChangeKey(int)>(i1);

        virtualinvoke $r7.<java.util.TreeSet: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r1;
        java.util.ListIterator $r3;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument $r4;
        char $c1;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r5;
        int $i0, i2;
        java.lang.String r0;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem $r2;

        r1 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label2;

        $r3 = r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator>;

        $r2 = new org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem;

        $r4 = r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $r5 = specialinvoke r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap insertionAnnotations()>();

        specialinvoke $r2.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem: void <init>(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument,char,org.waveprotocol.wave.model.document.operation.impl.AnnotationMap)>($r4, $c1, $r5);

        interfaceinvoke $r3.<java.util.ListIterator: void add(java.lang.Object)>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem $r1;
        java.util.ListIterator $r4;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument $r5;
        java.lang.String r2;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r6;
        org.waveprotocol.wave.model.document.operation.Attributes r3;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r4 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator>;

        $r1 = new org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem;

        $r5 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r6 = specialinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap insertionAnnotations()>();

        specialinvoke $r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem: void <init>(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument,java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.impl.AnnotationMap)>($r5, r2, r3, $r6);

        interfaceinvoke $r4.<java.util.ListIterator: void add(java.lang.Object)>($r1);

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        java.util.ListIterator $r2;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem $r1;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument $r3;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r4;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        $r2 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator>;

        $r1 = new org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem;

        $r3 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r4 = specialinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap insertionAnnotations()>();

        specialinvoke $r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem: void <init>(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument,org.waveprotocol.wave.model.document.operation.impl.AnnotationMap)>($r3, $r4);

        interfaceinvoke $r2.<java.util.ListIterator: void add(java.lang.Object)>($r1);

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r1;
        java.util.ListIterator $r4;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r3;
        int $i0, i5, $i6, $i7;
        java.lang.String r0, $r11;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem $r2;
        org.waveprotocol.wave.model.operation.OpCursorException $r13;
        char $c1, $c2, $c3, $c4;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12;

        r1 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r0 := @parameter0: java.lang.String;

        i5 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i0 goto label3;

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem nextCharacter()>();

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $c2 = $r2.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem: char character>;

        $i6 = (int) $c1;

        $i7 = (int) $c2;

        if $i6 == $i7 goto label2;

        $r13 = new org.waveprotocol.wave.model.operation.OpCursorException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mismatched deleted characters: ");

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $c4 = $r2.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem: char character>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.waveprotocol.wave.model.operation.OpCursorException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label2:
        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap getAnnotations()>();

        r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap inherited> = $r3;

        $r4 = r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator>;

        interfaceinvoke $r4.<java.util.ListIterator: void remove()>();

        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        java.util.ListIterator $r3;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem $r1;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r2;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem nextElementEnd()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap getAnnotations()>();

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap inherited> = $r2;

        $r3 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator>;

        interfaceinvoke $r3.<java.util.ListIterator: void remove()>();

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem $r1;
        java.util.ListIterator $r3;
        java.lang.String r4;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r2;
        org.waveprotocol.wave.model.document.operation.Attributes r5;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem nextElementStart()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap getAnnotations()>();

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap inherited> = $r2;

        $r3 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator>;

        interfaceinvoke $r3.<java.util.ListIterator: void remove()>();

        return;
    }

    public void retain(int)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item $r1;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        int i0, i1;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item next()>();

        specialinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: void inheritAndAnnotate(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem $r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem nextElementStart()>();

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem: void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes)>(r2);

        specialinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: void inheritAndAnnotate(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item)>($r1);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem $r1;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r2;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem nextElementStart()>();

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem: void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r2);

        specialinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: void inheritAndAnnotate(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item)>($r1);

        return;
    }

    private void inheritAndAnnotate(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item r1;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate $r4;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument $r3;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r2;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item;

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap getAnnotations()>();

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap inherited> = $r2;

        $r3 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r4 = $r3.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument: org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate annotationUpdates>;

        virtualinvoke r1.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: void updateAnnotations(org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate)>($r4);

        return;
    }

    org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item next()
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item $r4, $r5;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        java.util.ListIterator $r1, $r2;
        org.waveprotocol.wave.model.operation.OpCursorException $r6;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument $r9;
        int $i0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r11;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r6 = new org.waveprotocol.wave.model.operation.OpCursorException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Action past end of document, of size: ");

        $r9 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $i0 = virtualinvoke $r9.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument: int length()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.waveprotocol.wave.model.operation.OpCursorException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: java.util.ListIterator val$iterator>;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        $r4 = (org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item) $r3;

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item current> = $r4;

        $r5 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item current>;

        return $r5;
    }

    org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem nextElementStart()
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item $r1, $r7;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem $r2;
        org.waveprotocol.wave.model.operation.OpCursorException $r4;
        java.lang.ClassCastException $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

     label1:
        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item next()>();

        $r2 = (org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementStartItem) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.waveprotocol.wave.model.operation.OpCursorException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not at an element start, at: ");

        $r7 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item current>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.waveprotocol.wave.model.operation.OpCursorException: void <init>(java.lang.String)>($r9);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem nextElementEnd()
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item $r1, $r7;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem $r2;
        org.waveprotocol.wave.model.operation.OpCursorException $r4;
        java.lang.ClassCastException $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

     label1:
        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item next()>();

        $r2 = (org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$ElementEndItem) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.waveprotocol.wave.model.operation.OpCursorException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not at an element end, at: ");

        $r7 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item current>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.waveprotocol.wave.model.operation.OpCursorException: void <init>(java.lang.String)>($r9);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem nextCharacter()
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item $r1, $r7;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1 r0;
        org.waveprotocol.wave.model.operation.OpCursorException $r4;
        java.lang.ClassCastException $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem $r2;
        java.lang.String $r9;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1;

     label1:
        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item next()>();

        $r2 = (org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$CharacterItem) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.waveprotocol.wave.model.operation.OpCursorException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not at a character, at: ");

        $r7 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$1: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item current>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.waveprotocol.wave.model.operation.OpCursorException: void <init>(java.lang.String)>($r9);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }
}
