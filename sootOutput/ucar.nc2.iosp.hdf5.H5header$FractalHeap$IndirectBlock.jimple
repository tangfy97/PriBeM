class ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock extends java.lang.Object
{
    long size;
    int nrows;
    int directRows;
    int indirectRows;
    java.util.List directBlocks;
    java.util.List indirectBlocks;
    final ucar.nc2.iosp.hdf5.H5header$FractalHeap this$1;

    void <init>(ucar.nc2.iosp.hdf5.H5header$FractalHeap, int, long)
    {
        boolean $z0;
        ucar.nc2.iosp.hdf5.H5header $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap r1;
        long l0, $l1, $l2, $l8, $l9, $l10;
        short $s7;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock r0;
        int $i3, $i4, $i5, $i6, $i11, i12;
        java.lang.String $r9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10;
        java.io.PrintStream $r3;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header$FractalHeap;

        i12 := @parameter1: int;

        l0 := @parameter2: long;

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: ucar.nc2.iosp.hdf5.H5header$FractalHeap this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int nrows> = i12;

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: long size> = l0;

        if i12 >= 0 goto label1;

        $d5 = (double) l0;

        $d6 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double log2(double)>($d5);

        $l9 = r1.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long startingBlockSize>;

        $s7 = r1.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short tableWidth>;

        $l8 = (long) $s7;

        $l10 = $l9 * $l8;

        $d7 = (double) $l10;

        $d8 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double log2(double)>($d7);

        $d9 = $d6 - $d8;

        d10 = $d9 + 1.0;

        i12 = (int) d10;

     label1:
        $l1 = r1.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long maxDirectBlockSize>;

        $d0 = (double) $l1;

        $d1 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double log2(double)>($d0);

        $l2 = r1.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long startingBlockSize>;

        $d2 = (double) $l2;

        $d3 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double log2(double)>($d2);

        $d4 = $d1 - $d3;

        $i3 = (int) $d4;

        $i11 = $i3 + 2;

        if i12 >= $i11 goto label2;

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int directRows> = i12;

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int indirectRows> = 0;

        goto label3;

     label2:
        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int directRows> = $i11;

        $i4 = i12 - $i11;

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int indirectRows> = $i4;

     label3:
        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$7000()>();

        if $z0 == 0 goto label4;

        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  readIndirectBlock directChildren");

        $i5 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int directRows>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" indirectChildren= ");

        $i6 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int indirectRows>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label4:
        return;
    }

    void add(ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock)
    {
        java.util.List $r1, $r3;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock r0;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock r2;
        java.util.ArrayList $r4;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock;

        r2 := @parameter0: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List directBlocks>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List directBlocks> = $r4;

     label1:
        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List directBlocks>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    void add(ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock)
    {
        java.util.List $r1, $r3;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock r0, r2;
        java.util.ArrayList $r4;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock;

        r2 := @parameter0: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List indirectBlocks>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List indirectBlocks> = $r4;

     label1:
        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List indirectBlocks>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    void showDetails(java.util.Formatter)
    {
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock r23;
        java.lang.Integer $r3, $r4, $r5;
        java.util.Formatter r0;
        java.lang.Long $r6, $r18, $r19, $r20, $r21, $r22;
        boolean $z0, $z1;
        java.util.List $r9, $r10, $r11, $r14;
        java.lang.Object[] $r1, $r7, $r8, $r17;
        long $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock r2, r24;
        int $i0, $i1, $i2;
        java.util.Iterator $r12, $r15;
        java.lang.Object $r13, $r16;

        r2 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock;

        r0 := @parameter0: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[4];

        $i0 = r2.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int nrows>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r3;

        $i1 = r2.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int directRows>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r4;

        $i2 = r2.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int indirectRows>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r5;

        $l3 = r2.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: long size>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1[3] = $r6;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n IndirectBlock: nrows= %d directRows = %d indirectRows=%d startingSize=%d%n", $r1);

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" DataBlocks:\n", $r7);

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  address            dataPos            offset size end\n", $r8);

        $r9 = r2.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List directBlocks>;

        if $r9 == null goto label2;

        $r14 = r2.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List directBlocks>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r23 = (ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock) $r16;

        $r17 = newarray (java.lang.Object)[5];

        $l4 = r23.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long address>;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r17[0] = $r18;

        $l5 = r23.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long dataPos>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r17[1] = $r19;

        $l6 = r23.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long offset>;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r17[2] = $r20;

        $l7 = r23.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long size>;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $r17[3] = $r21;

        $l9 = r23.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long offset>;

        $l8 = r23.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long size>;

        $l10 = $l9 + $l8;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        $r17[4] = $r22;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  %#-18x %#-18x %5d  %4d %5d %n", $r17);

        goto label1;

     label2:
        $r10 = r2.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List indirectBlocks>;

        if $r10 == null goto label4;

        $r11 = r2.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: java.util.List indirectBlocks>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r24 = (ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock) $r13;

        virtualinvoke r24.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: void showDetails(java.util.Formatter)>(r0);

        goto label3;

     label4:
        return;
    }
}
