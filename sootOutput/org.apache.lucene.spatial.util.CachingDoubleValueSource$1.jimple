class org.apache.lucene.spatial.util.CachingDoubleValueSource$1 extends org.apache.lucene.queries.function.FunctionValues
{
    final int val$base;
    final org.apache.lucene.queries.function.FunctionValues val$vals;
    final org.apache.lucene.spatial.util.CachingDoubleValueSource this$0;

    void <init>(org.apache.lucene.spatial.util.CachingDoubleValueSource, int, org.apache.lucene.queries.function.FunctionValues)
    {
        org.apache.lucene.spatial.util.CachingDoubleValueSource$1 r0;
        org.apache.lucene.spatial.util.CachingDoubleValueSource r1;
        int i0;
        org.apache.lucene.queries.function.FunctionValues r2;

        r0 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource$1;

        r1 := @parameter0: org.apache.lucene.spatial.util.CachingDoubleValueSource;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.lucene.queries.function.FunctionValues;

        r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: org.apache.lucene.spatial.util.CachingDoubleValueSource this$0> = r1;

        r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: int val$base> = i0;

        r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: org.apache.lucene.queries.function.FunctionValues val$vals> = r2;

        specialinvoke r0.<org.apache.lucene.queries.function.FunctionValues: void <init>()>();

        return;
    }

    public double doubleVal(int)
    {
        org.apache.lucene.spatial.util.CachingDoubleValueSource $r2, $r7;
        java.lang.Double $r6, r9;
        java.lang.Integer $r1;
        org.apache.lucene.spatial.util.CachingDoubleValueSource$1 r0;
        java.util.Map $r3, $r8;
        int i0, $i1, $i2;
        java.lang.Object $r4;
        org.apache.lucene.queries.function.FunctionValues $r5;
        double $d0, $d1;

        r0 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource$1;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: int val$base>;

        $i2 = $i1 + i0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r2 = r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: org.apache.lucene.spatial.util.CachingDoubleValueSource this$0>;

        $r3 = $r2.<org.apache.lucene.spatial.util.CachingDoubleValueSource: java.util.Map cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r9 = (java.lang.Double) $r4;

        if r9 != null goto label1;

        $r5 = r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: org.apache.lucene.queries.function.FunctionValues val$vals>;

        $d1 = virtualinvoke $r5.<org.apache.lucene.queries.function.FunctionValues: double doubleVal(int)>(i0);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        r9 = $r6;

        $r7 = r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: org.apache.lucene.spatial.util.CachingDoubleValueSource this$0>;

        $r8 = $r7.<org.apache.lucene.spatial.util.CachingDoubleValueSource: java.util.Map cache>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

     label1:
        $d0 = virtualinvoke r9.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public float floatVal(int)
    {
        org.apache.lucene.spatial.util.CachingDoubleValueSource$1 r0;
        int i0;
        float $f0;
        double $d0;

        r0 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource$1;

        i0 := @parameter0: int;

        $d0 = virtualinvoke r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: double doubleVal(int)>(i0);

        $f0 = (float) $d0;

        return $f0;
    }

    public java.lang.String toString(int)
    {
        org.apache.lucene.spatial.util.CachingDoubleValueSource$1 r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;
        double $d0;

        r1 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource$1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke r1.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: double doubleVal(int)>(i0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
