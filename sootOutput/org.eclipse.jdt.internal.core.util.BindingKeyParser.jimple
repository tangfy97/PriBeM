public class org.eclipse.jdt.internal.core.util.BindingKeyParser extends java.lang.Object
{
    int keyStart;
    static final char C_THROWN;
    private boolean parsingPaused;
    private org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner;
    private boolean hasTypeName;

    public void <init>(org.eclipse.jdt.internal.core.util.BindingKeyParser)
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void <init>(java.lang.String)>("");

        $r2 = r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner> = $r2;

        return;
    }

    public void <init>(java.lang.String)
    {
        char[] $r3;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1;
        java.lang.String r2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean hasTypeName> = 1;

        $r1 = new org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner;

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void <init>(char[])>($r3);

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner> = $r1;

        return;
    }

    public void consumeAnnotation()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeArrayDimension(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeBaseType(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeCapture(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        i0 := @parameter0: int;

        return;
    }

    public void consumeException()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeField(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeParameterizedGenericMethod()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeLocalType(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeLocalVar(char[], int)
    {
        int i0;
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        return;
    }

    public void consumeMethod(char[], char[])
    {
        char[] r1, r2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        r2 := @parameter1: char[];

        return;
    }

    public void consumeModifiers(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeNonGenericType()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeMemberType(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumePackage(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeParameterizedType(char[], boolean)
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        z0 := @parameter1: boolean;

        return;
    }

    public void consumeParser(org.eclipse.jdt.internal.core.util.BindingKeyParser)
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeRawType()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeScope(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        i0 := @parameter0: int;

        return;
    }

    public void consumeSecondaryType(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeFullyQualifiedName(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeKey()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeTopLevelType()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeType()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeTypeParameter(char[])
    {
        char[] r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        return;
    }

    public void consumeTypeVariable(char[], char[])
    {
        char[] r1, r2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r1 := @parameter0: char[];

        r2 := @parameter1: char[];

        return;
    }

    public void consumeTypeWithCapture()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public void consumeWildCard(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        i0 := @parameter0: int;

        return;
    }

    public java.lang.String getKey()
    {
        char[] $r3;
        java.lang.String $r0;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r1;

        r1 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r0 = new java.lang.String;

        $r2 = r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r3 = $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] source>;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r3);

        return $r0;
    }

    public boolean hasTypeName()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $z0 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean hasTypeName>;

        return $z0;
    }

    public void malformedKey()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        return;
    }

    public org.eclipse.jdt.internal.core.util.BindingKeyParser newParser()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser $r0, r1;

        r1 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r0 = new org.eclipse.jdt.internal.core.util.BindingKeyParser;

        specialinvoke $r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void <init>(org.eclipse.jdt.internal.core.util.BindingKeyParser)>(r1);

        return $r0;
    }

    public void parse()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parse(boolean)>(0);

        return;
    }

    public void parse(boolean)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        z14 := @parameter0: boolean;

        $z0 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean parsingPaused>;

        if $z0 != 0 goto label01;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseFullyQualifiedName()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseSecondaryType()>();

        if z14 == 0 goto label01;

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean parsingPaused> = 1;

        return;

     label01:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean hasTypeName()>();

        if $z1 != 0 goto label02;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeKey()>();

        return;

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeTopLevelType()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseInnerType()>();

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z2 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtParametersStart()>();

        if $z2 == 0 goto label05;

        $r11 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipParametersStart()>();

        $r12 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z11 = virtualinvoke $r12.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtTypeParameterStart()>();

        if $z11 == 0 goto label03;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseGenericType()>();

        $r15 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipParametersEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseInnerType()>();

        goto label06;

     label03:
        $r13 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z12 = virtualinvoke $r13.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtTypeArgumentStart()>();

        if $z12 == 0 goto label04;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseParameterizedType(char[],boolean)>(null, 0);

        goto label06;

     label04:
        $r14 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z13 = virtualinvoke $r14.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtRawTypeEnd()>();

        if $z13 == 0 goto label06;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseRawType()>();

        goto label06;

     label05:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeNonGenericType()>();

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeType()>();

        $r16 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipTypeEnd()>();

        $r17 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z15 = virtualinvoke $r17.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtFieldOrMethodStart()>();

        if $z15 == 0 goto label13;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r6.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        tableswitch($i0)
        {
            case 2: goto label07;
            case 3: goto label09;
            default: goto label12;
        };

     label07:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseField()>();

        $r10 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z10 = virtualinvoke $r10.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtAnnotationStart()>();

        if $z10 == 0 goto label08;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseAnnotation()>();

     label08:
        return;

     label09:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseMethod()>();

        $r7 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z7 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtLocalVariableStart()>();

        if $z7 == 0 goto label10;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseLocalVariable()>();

        goto label17;

     label10:
        $r8 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z8 = virtualinvoke $r8.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtTypeVariableStart()>();

        if $z8 == 0 goto label11;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseTypeVariable()>();

        goto label17;

     label11:
        $r9 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z9 = virtualinvoke $r9.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtAnnotationStart()>();

        if $z9 == 0 goto label17;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseAnnotation()>();

        goto label17;

     label12:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label13:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z3 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtTypeVariableStart()>();

        if $z3 == 0 goto label14;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseTypeVariable()>();

        goto label17;

     label14:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z4 = virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtWildcardStart()>();

        if $z4 == 0 goto label15;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseWildcard()>();

        goto label17;

     label15:
        $r4 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z5 = virtualinvoke $r4.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtTypeWithCaptureStart()>();

        if $z5 == 0 goto label16;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseTypeWithCapture()>();

        goto label17;

     label16:
        $r5 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z6 = virtualinvoke $r5.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtAnnotationStart()>();

        if $z6 == 0 goto label17;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseAnnotation()>();

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeKey()>();

        return;
    }

    private void parseFullyQualifiedName()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        char[] $r5, $r8, $r11, $r13, $r16, $r18;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r17;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtCaptureStart()>();

        if $z0 == 0 goto label01;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseCapture()>();

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean hasTypeName> = 0;

        return;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        tableswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label05;
            case 5: goto label09;
            case 6: goto label09;
            case 7: goto label09;
            case 8: goto label09;
            case 9: goto label04;
            default: goto label09;
        };

     label02:
        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: int keyStart> = 0;

        $r17 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumePackage(char[])>($r18);

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean hasTypeName> = 0;

        return;

     label03:
        $r14 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i5 = $r14.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int start>;

        $i6 = $i5 - 1;

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: int keyStart> = $i6;

        $r15 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeFullyQualifiedName(char[])>($r16);

        goto label10;

     label04:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i1 = $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int start>;

        $i2 = $i1 - 1;

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: int keyStart> = $i2;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeBaseType(char[])>($r5);

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean hasTypeName> = 0;

        goto label10;

     label05:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i3 = $r6.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int start>;

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: int keyStart> = $i3;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeArrayDimension(char[])>($r8);

        $r9 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i4 = virtualinvoke $r9.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        lookupswitch($i4)
        {
            case 1: goto label06;
            case 9: goto label07;
            default: goto label08;
        };

     label06:
        $r12 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeFullyQualifiedName(char[])>($r13);

        goto label10;

     label07:
        $r10 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeBaseType(char[])>($r11);

        r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: boolean hasTypeName> = 0;

        goto label10;

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label09:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label10:
        return;
    }

    private void parseParameterizedMethod()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipParametersStart()>();

        goto label2;

     label1:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseTypeArgument()>();

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtParametersEnd()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParameterizedGenericMethod()>();

        return;
    }

    private void parseGenericType()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0;
        char[] $r4;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 == 1 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeTypeParameter(char[])>($r4);

        $r5 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipTypeEnd()>();

     label3:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtParametersEnd()>();

        if $z0 == 0 goto label1;

        return;
    }

    private void parseInnerType()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0, $i2, $i3, $i4, i5;
        boolean $z0, $z1, $z2;
        char $c1;
        char[] $r4, $r9, $r11;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r10;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtMemberTypeStart()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 == 1 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        $c1 = $r4[0];

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z1 == 0 goto label7;

        i5 = 1;

        goto label4;

     label3:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        i5 = virtualinvoke $r6.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

     label4:
        $r5 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z2 = virtualinvoke $r5.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtMemberTypeStart()>();

        if $z2 != 0 goto label3;

        if i5 != 10 goto label5;

        $r10 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r11 = $r10.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] source>;

        goto label6;

     label5:
        $r7 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r9 = $r7.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] source>;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: int keyStart>;

        $r8 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i2 = $r8.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int index>;

        $i3 = $i2 + 1;

        $r11 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>($r9, $i4, $i3);

     label6:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeLocalType(char[])>($r11);

        goto label8;

     label7:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeMemberType(char[])>($r4);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseInnerType()>();

     label8:
        return;
    }

    private void parseLocalVariable()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0, $i2, $i3, i4;
        java.lang.String $r8, $r9;
        boolean $z0, $z1, $z2;
        char $c1;
        char[] $r3, $r7;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r4, $r5, $r6, $r10;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 == 5 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        $c1 = $r3[0];

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 == 0 goto label3;

        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r3);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeScope(int)>($i3);

        $r10 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z2 = virtualinvoke $r10.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtLocalVariableStart()>();

        if $z2 != 0 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label2:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseLocalVariable()>();

        goto label6;

     label3:
        i4 = 0;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z1 = virtualinvoke $r4.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtLocalVariableStart()>();

        if $z1 == 0 goto label5;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i2 = virtualinvoke $r5.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i2 == 5 goto label4;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label4:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r7);

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label5:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeLocalVar(char[],int)>($r3, i4);

     label6:
        return;
    }

    private void parseMethod()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        char[] $r2, $r5;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r3, $r4, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipMethodSignature()>();

        $r4 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeMethod(char[],char[])>($r2, $r5);

        $r6 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z0 = virtualinvoke $r6.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtThrownStart()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseThrownExceptions()>();

     label1:
        $r7 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z1 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtParametersStart()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseParameterizedMethod()>();

     label2:
        return;
    }

    private void parseAnnotation()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser newParser()>();

        virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parse()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParser(org.eclipse.jdt.internal.core.util.BindingKeyParser)>($r1);

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeAnnotation()>();

        return;
    }

    private void parseCapture()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0, $i1, $i2;
        char[] $r4;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r3, $r6;
        java.lang.String $r5;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 == 8 goto label1;

        return;

     label1:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseCaptureWildcard()>();

        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i1 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i1 == 1 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r4);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeCapture(int)>($i2);

        $r6 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipTypeEnd()>();

        return;
    }

    private void parseCaptureWildcard()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser newParser()>();

        virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parse()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParser(org.eclipse.jdt.internal.core.util.BindingKeyParser)>($r1);

        return;
    }

    private void parseField()
    {
        char[] $r2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseReturnType()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeField(char[])>($r2);

        return;
    }

    private void parseThrownExceptions()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipThrownStart()>();

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser newParser()>();

        virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parse()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParser(org.eclipse.jdt.internal.core.util.BindingKeyParser)>($r3);

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeException()>();

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtThrownStart()>();

        if $z0 != 0 goto label1;

        return;
    }

    private void parseParameterizedType(char[], boolean)
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0;
        boolean z0, $z1, $z2, $z3, $z4;
        char[] $r6, r11;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        r11 := @parameter0: char[];

        z0 := @parameter1: boolean;

        if z0 != 0 goto label3;

        goto label2;

     label1:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseTypeArgument()>();

     label2:
        $r10 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z4 = virtualinvoke $r10.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtParametersEnd()>();

        if $z4 == 0 goto label1;

     label3:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipParametersEnd()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParameterizedType(char[],boolean)>(r11, z0);

        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipTypeEnd()>();

        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtMemberTypeStart()>();

        if $z1 == 0 goto label5;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r4.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 != 1 goto label5;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        $r7 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z2 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtParametersStart()>();

        if $z2 == 0 goto label4;

        $r8 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipParametersStart()>();

        $r9 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z3 = virtualinvoke $r9.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtRawTypeEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseParameterizedType(char[],boolean)>($r6, $z3);

        goto label5;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParameterizedType(char[],boolean)>($r6, 1);

     label5:
        return;
    }

    private void parseRawType()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0;
        char[] $r6;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipParametersEnd()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeRawType()>();

        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipTypeEnd()>();

        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z0 = virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtMemberTypeStart()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r4.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 != 1 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        $r7 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z1 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtParametersStart()>();

        if $z1 == 0 goto label1;

        $r8 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipParametersStart()>();

        $r9 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z2 = virtualinvoke $r9.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtRawTypeEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseParameterizedType(char[],boolean)>($r6, $z2);

        goto label2;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParameterizedType(char[],boolean)>($r6, 1);

     label2:
        return;
    }

    private void parseReturnType()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int index>;

        $i1 = $i0 + 1;

        $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int index> = $i1;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser newParser()>();

        virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parse()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParser(org.eclipse.jdt.internal.core.util.BindingKeyParser)>($r2);

        return;
    }

    private void parseSecondaryType()
    {
        int $i0;
        char[] $r4;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r3;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: boolean isAtSecondaryTypeStart()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 == 1 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeSecondaryType(char[])>($r4);

        return;
    }

    private void parseTypeArgument()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser newParser()>();

        virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parse()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParser(org.eclipse.jdt.internal.core.util.BindingKeyParser)>($r1);

        return;
    }

    private void parseTypeWithCapture()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 == 8 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser newParser()>();

        virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parse()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParser(org.eclipse.jdt.internal.core.util.BindingKeyParser)>($r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeTypeWithCapture()>();

        return;
    }

    private void parseTypeVariable()
    {
        char $c2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        int $i0, i1, $i3, $i4, $i5;
        char[] $r3, r4, r5;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2, $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 == 1 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        r4 = $r3;

        i1 = lengthof $r3;

        if i1 <= 0 goto label2;

        $c2 = $r3[0];

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z0 == 0 goto label2;

        $i3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[])>(84, $r3);

        r5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>($r3, 0, $i3);

        $i5 = $i3 + 1;

        $i4 = lengthof $r3;

        r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>($r3, $i5, $i4);

        goto label3;

     label2:
        r5 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeTypeVariable(char[],char[])>(r5, r4);

        $r6 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: void skipTypeEnd()>();

        return;
    }

    private void parseWildcard()
    {
        char $c2;
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0;
        byte b3, b4, b5, b6;
        int $i0, $i1, $i7, $i9;
        char[] $r3;
        org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: int nextToken()>();

        if $i0 == 7 goto label1;

        return;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner scanner>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.core.util.BindingKeyParser$Scanner: char[] getTokenSource()>();

        $i1 = lengthof $r3;

        if $i1 != 0 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label2:
        b3 = -1;

        b6 = -1;

        b5 = -1;

        b4 = -1;

        $c2 = $r3[0];

        $i7 = (int) $c2;

        tableswitch($i7)
        {
            case 42: goto label3;
            case 43: goto label4;
            case 44: goto label6;
            case 45: goto label5;
            default: goto label6;
        };

     label3:
        b3 = 0;

        b6 = 0;

        b5 = 0;

        b4 = 0;

        goto label6;

     label4:
        b3 = 1;

        b6 = 1;

        b5 = 1;

        b4 = 1;

        goto label6;

     label5:
        b3 = 2;

        b6 = 2;

        b5 = 2;

        b4 = 2;

     label6:
        $i9 = (int) -1;

        if b5 != $i9 goto label7;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void malformedKey()>();

        return;

     label7:
        if b4 == 0 goto label8;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parseWildcardBound()>();

     label8:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeWildCard(int)>(b6);

        return;
    }

    private void parseWildcardBound()
    {
        org.eclipse.jdt.internal.core.util.BindingKeyParser r0, $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.BindingKeyParser;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: org.eclipse.jdt.internal.core.util.BindingKeyParser newParser()>();

        virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void parse()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.BindingKeyParser: void consumeParser(org.eclipse.jdt.internal.core.util.BindingKeyParser)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.core.util.BindingKeyParser: char C_THROWN> = 124;

        return;
    }
}
