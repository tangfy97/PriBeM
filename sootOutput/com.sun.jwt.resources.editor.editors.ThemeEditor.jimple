public class com.sun.jwt.resources.editor.editors.ThemeEditor extends com.sun.jwt.resources.editor.editors.BaseForm
{
    private static com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable copyInstance;
    private static int ramSize;
    private static final int[] BPP_TYPES;
    private static int bytesPerPixel;
    private com.sun.lwuit.util.EditableResources resources;
    private static java.awt.Component previewInstance;
    private static com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler oldHandler;
    private com.sun.jwt.resources.editor.ResourceEditorView view;
    private java.lang.String flashingProperty;
    private java.lang.Object originalFlashingPropertyValue;
    private javax.swing.Timer flashingTimer;
    private java.util.Hashtable themeHash;
    private static final com.sun.lwuit.geom.Dimension[] DIMENSIONS;
    private java.lang.String themeName;
    private javax.swing.JButton addThemeEntry;
    private javax.swing.JComboBox bitDepth;
    private javax.swing.JButton customizerButton;
    private javax.swing.JButton editEntry;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JCheckBox liveHighlighting;
    private javax.swing.JButton manageStyles;
    private javax.swing.JTable pressedStyles;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JScrollPane previewScroll;
    private javax.swing.JLabel ramEstimate;
    private javax.swing.JButton removeThemeEntry;
    private javax.swing.JComboBox resolutions;
    private javax.swing.JTextField searchField;
    private javax.swing.JTable selectedStyles;
    private javax.swing.JTabbedPane stylesTabbedPane;
    private javax.swing.JTable theme;

    public void <init>(com.sun.lwuit.util.EditableResources, java.lang.String, java.util.Hashtable, com.sun.jwt.resources.editor.ResourceEditorView)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler $r24, $r25, $r39, $r41, $r49;
        com.sun.jwt.resources.editor.editors.ThemeEditor$1 $r8;
        com.sun.jwt.resources.editor.editors.ThemeEditor$2 $r13;
        com.sun.jwt.resources.editor.editors.ThemeEditor$3 $r28;
        int[] $r36, $r52;
        javax.swing.DefaultComboBoxModel $r5;
        javax.swing.JComboBox $r7, $r9, $r10, $r14, $r29, $r30, $r37;
        boolean $z0;
        com.sun.lwuit.geom.Dimension[] $r6;
        com.sun.jwt.resources.editor.ResourceEditorView r2;
        com.sun.lwuit.util.EditableResources r1;
        java.awt.Component $r21, $r22, $r26, $r27, $r33, $r40, $r42, $r43, $r45, $r50, $r51;
        javax.swing.JCheckBox $r15;
        javax.swing.JTable $r18, $r19, $r20;
        com.sun.lwuit.impl.swing.SwingImplementation $r32, $r35, $r46, $r48;
        javax.swing.JPanel $r34;
        com.sun.lwuit.geom.Dimension $r38;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        java.lang.String r4;
        java.awt.Container $r23, $r44;
        java.util.Hashtable r3;
        javax.swing.JComponent $r47;
        java.util.prefs.Preferences $r12, $r17;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.Class $r11, $r16;
        java.lang.Object $r31;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter0: com.sun.lwuit.util.EditableResources;

        r4 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Hashtable;

        r2 := @parameter3: com.sun.jwt.resources.editor.ResourceEditorView;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources resources> = r1;

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.ResourceEditorView view> = r2;

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash> = r3;

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String themeName> = r4;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void initComponents()>();

        $r7 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $r5 = new javax.swing.DefaultComboBoxModel;

        $r6 = <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.geom.Dimension[] DIMENSIONS>;

        specialinvoke $r5.<javax.swing.DefaultComboBoxModel: void <init>(java.lang.Object[])>($r6);

        virtualinvoke $r7.<javax.swing.JComboBox: void setModel(javax.swing.ComboBoxModel)>($r5);

        $r9 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $r8 = new com.sun.jwt.resources.editor.editors.ThemeEditor$1;

        specialinvoke $r8.<com.sun.jwt.resources.editor.editors.ThemeEditor$1: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r0);

        virtualinvoke $r9.<javax.swing.JComboBox: void setRenderer(javax.swing.ListCellRenderer)>($r8);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userNodeForPackage(java.lang.Class)>($r11);

        $i0 = virtualinvoke $r12.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>("selectedSize", 0);

        virtualinvoke $r10.<javax.swing.JComboBox: void setSelectedIndex(int)>($i0);

        $r14 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $r13 = new com.sun.jwt.resources.editor.editors.ThemeEditor$2;

        specialinvoke $r13.<com.sun.jwt.resources.editor.editors.ThemeEditor$2: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r0);

        virtualinvoke $r14.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r13);

        $r15 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userNodeForPackage(java.lang.Class)>($r16);

        $z0 = virtualinvoke $r17.<java.util.prefs.Preferences: boolean getBoolean(java.lang.String,boolean)>("liveHighlighting", 0);

        virtualinvoke $r15.<javax.swing.JCheckBox: void setSelected(boolean)>($z0);

        $r18 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable theme>;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void initializeTable(javax.swing.JTable,java.lang.String)>($r18, null);

        $r19 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable selectedStyles>;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void initializeTable(javax.swing.JTable,java.lang.String)>($r19, "sel#");

        $r20 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable pressedStyles>;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void initializeTable(javax.swing.JTable,java.lang.String)>($r20, "press#");

        $r21 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        if $r21 != null goto label1;

        $r46 = staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: com.sun.lwuit.impl.swing.SwingImplementation getInstance()>();

        $r47 = virtualinvoke $r46.<com.sun.lwuit.impl.swing.SwingImplementation: javax.swing.JComponent getJComponent()>();

        <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance> = $r47;

        $r48 = staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: com.sun.lwuit.impl.swing.SwingImplementation getInstance()>();

        virtualinvoke $r48.<com.sun.lwuit.impl.swing.SwingImplementation: void setBufferedImageType(int)>(9);

        $r49 = new com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler;

        specialinvoke $r49.<com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r0);

        $r50 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        virtualinvoke $r50.<java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r49);

        $r51 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        virtualinvoke $r51.<java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>($r49);

        <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler oldHandler> = $r49;

        goto label4;

     label1:
        $r22 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        $r23 = virtualinvoke $r22.<java.awt.Component: java.awt.Container getParent()>();

        if $r23 == null goto label2;

        $r43 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        $r44 = virtualinvoke $r43.<java.awt.Component: java.awt.Container getParent()>();

        $r45 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        virtualinvoke $r44.<java.awt.Container: void remove(java.awt.Component)>($r45);

     label2:
        $r24 = <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler oldHandler>;

        if $r24 == null goto label3;

        $r40 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        $r39 = <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler oldHandler>;

        virtualinvoke $r40.<java.awt.Component: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r39);

        $r42 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        $r41 = <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler oldHandler>;

        virtualinvoke $r42.<java.awt.Component: void removeMouseListener(java.awt.event.MouseListener)>($r41);

     label3:
        $r25 = new com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler;

        specialinvoke $r25.<com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r0);

        $r26 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        virtualinvoke $r26.<java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r25);

        $r27 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        virtualinvoke $r27.<java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>($r25);

        <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$MouseHandler oldHandler> = $r25;

     label4:
        i5 = 0;

     label5:
        $r52 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int[] BPP_TYPES>;

        $i6 = lengthof $r52;

        if i5 >= $i6 goto label7;

        $r35 = staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: com.sun.lwuit.impl.swing.SwingImplementation getInstance()>();

        $i3 = virtualinvoke $r35.<com.sun.lwuit.impl.swing.SwingImplementation: int getBufferedImageType()>();

        $r36 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int[] BPP_TYPES>;

        $i4 = $r36[i5];

        if $i3 != $i4 goto label6;

        $r37 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        virtualinvoke $r37.<javax.swing.JComboBox: void setSelectedIndex(int)>(i5);

        goto label7;

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        $r29 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        $r28 = new com.sun.jwt.resources.editor.editors.ThemeEditor$3;

        specialinvoke $r28.<com.sun.jwt.resources.editor.editors.ThemeEditor$3: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r0);

        virtualinvoke $r29.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r28);

        $r30 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $r31 = virtualinvoke $r30.<javax.swing.JComboBox: java.lang.Object getSelectedItem()>();

        $r38 = (com.sun.lwuit.geom.Dimension) $r31;

        $r32 = staticinvoke <com.sun.lwuit.impl.swing.SwingImplementation: com.sun.lwuit.impl.swing.SwingImplementation getInstance()>();

        $i1 = virtualinvoke $r38.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i2 = virtualinvoke $r38.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        virtualinvoke $r32.<com.sun.lwuit.impl.swing.SwingImplementation: void setImplementationSize(int,int)>($i1, $i2);

        $r34 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel previewPanel>;

        $r33 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        virtualinvoke $r34.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r33);

        staticinvoke <com.sun.jwt.resources.editor.PickMIDlet: void startMIDlet(java.util.Hashtable)>(r3);

        staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: void refreshTheme(java.util.Hashtable)>(r3);

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void refreshRam()>();

        return;
    }

    private void refreshRam()
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r12;
        javax.swing.JLabel $r2, $r8;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r7, $r9, $r10, $r11;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $i0 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize>;

        if $i0 >= 1024 goto label1;

        $r8 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel ramEstimate>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ram Estimate: ");

        $i3 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<javax.swing.JLabel: void setText(java.lang.String)>($r12);

        return;

     label1:
        $r2 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel ramEstimate>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ram Estimate: ");

        $i1 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize>;

        $i2 = $i1 / 1024;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" kb");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<javax.swing.JLabel: void setText(java.lang.String)>($r6);

        return;
    }

    private void initializeTable(javax.swing.JTable, java.lang.String)
    {
        javax.swing.JTextField $r3;
        com.sun.jwt.resources.editor.editors.ThemeEditor$4 $r17;
        com.sun.jwt.resources.editor.editors.ThemeEditor$5 $r19;
        com.sun.jwt.resources.editor.editors.ThemeEditor$6 $r21;
        java.lang.String r14;
        com.sun.jwt.resources.editor.editors.ThemeEditor$1Paste $r7;
        javax.swing.ActionMap $r11, $r12, $r13, $r18, $r20;
        javax.swing.KeyStroke $r8, $r9, $r10, $r15, $r16;
        com.sun.jwt.resources.editor.editors.ThemeEditor$1Copy $r5;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer $r4;
        com.sun.jwt.resources.editor.editors.ThemeEditor$1Cut $r6;
        javax.swing.JTable r0;
        com.sun.jwt.resources.editor.editors.ThemeEditor r2;
        javax.swing.InputMap $r1;

        r2 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r0 := @parameter0: javax.swing.JTable;

        r14 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<javax.swing.JTable: javax.swing.InputMap getInputMap(int)>(0);

        $r3 = r2.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField>;

        virtualinvoke r2.<com.sun.jwt.resources.editor.editors.ThemeEditor: void bindSearch(javax.swing.JTextField,javax.swing.JTable)>($r3, r0);

        $r4 = new com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer;

        specialinvoke $r4.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r2);

        virtualinvoke r0.<javax.swing.JTable: void setDefaultRenderer(java.lang.Class,javax.swing.table.TableCellRenderer)>(class "Ljava/lang/Object;", $r4);

        $r5 = new com.sun.jwt.resources.editor.editors.ThemeEditor$1Copy;

        specialinvoke $r5.<com.sun.jwt.resources.editor.editors.ThemeEditor$1Copy: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor,javax.swing.JTable)>(r2, r0);

        $r6 = new com.sun.jwt.resources.editor.editors.ThemeEditor$1Cut;

        specialinvoke $r6.<com.sun.jwt.resources.editor.editors.ThemeEditor$1Cut: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor,javax.swing.JTable)>(r2, r0);

        $r7 = new com.sun.jwt.resources.editor.editors.ThemeEditor$1Paste;

        specialinvoke $r7.<com.sun.jwt.resources.editor.editors.ThemeEditor$1Paste: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r2);

        $r8 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(67, 128);

        virtualinvoke $r1.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r8, "copy");

        $r9 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(88, 128);

        virtualinvoke $r1.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r9, "cut");

        $r10 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(86, 128);

        virtualinvoke $r1.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r10, "paste");

        $r11 = virtualinvoke r0.<javax.swing.JTable: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r11.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("copy", $r5);

        $r12 = virtualinvoke r0.<javax.swing.JTable: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r12.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("cut", $r6);

        $r13 = virtualinvoke r0.<javax.swing.JTable: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r13.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("paste", $r7);

        specialinvoke r2.<com.sun.jwt.resources.editor.editors.ThemeEditor: void initTableModel(javax.swing.JTable,java.lang.String)>(r0, r14);

        $r15 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(127, 0);

        virtualinvoke $r1.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r15, "delete");

        $r16 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(10, 0);

        virtualinvoke $r1.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r16, "edit");

        $r17 = new com.sun.jwt.resources.editor.editors.ThemeEditor$4;

        specialinvoke $r17.<com.sun.jwt.resources.editor.editors.ThemeEditor$4: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor,java.lang.String,javax.swing.JTable)>(r2, "Delete", r0);

        $r18 = virtualinvoke r0.<javax.swing.JTable: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r18.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("delete", $r17);

        $r19 = new com.sun.jwt.resources.editor.editors.ThemeEditor$5;

        specialinvoke $r19.<com.sun.jwt.resources.editor.editors.ThemeEditor$5: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor,java.lang.String,javax.swing.JTable)>(r2, "Edit", r0);

        $r20 = virtualinvoke r0.<javax.swing.JTable: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r20.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("edit", $r19);

        $r21 = new com.sun.jwt.resources.editor.editors.ThemeEditor$6;

        specialinvoke $r21.<com.sun.jwt.resources.editor.editors.ThemeEditor$6: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor,com.sun.jwt.resources.editor.editors.ThemeEditor$1Copy,com.sun.jwt.resources.editor.editors.ThemeEditor$1Cut,com.sun.jwt.resources.editor.editors.ThemeEditor$1Paste,javax.swing.AbstractAction,javax.swing.AbstractAction)>(r2, $r5, $r6, $r7, $r19, $r17);

        virtualinvoke r0.<javax.swing.JTable: void addMouseListener(java.awt.event.MouseListener)>($r21);

        return;
    }

    private void initTableModel(javax.swing.JTable, java.lang.String)
    {
        javax.swing.ListSelectionModel $r5, $r6;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel $r0;
        com.sun.jwt.resources.editor.editors.ThemeEditor$7 $r7;
        com.sun.jwt.resources.editor.editors.ThemeEditor r1;
        javax.swing.JTable r4;
        java.lang.String r2;
        java.util.Hashtable $r3;

        r1 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r4 := @parameter0: javax.swing.JTable;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        $r3 = r1.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash>;

        specialinvoke $r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor,java.util.Hashtable,java.lang.String)>(r1, $r3, r2);

        virtualinvoke r4.<javax.swing.JTable: void setModel(javax.swing.table.TableModel)>($r0);

        $r5 = virtualinvoke r4.<javax.swing.JTable: javax.swing.ListSelectionModel getSelectionModel()>();

        interfaceinvoke $r5.<javax.swing.ListSelectionModel: void setSelectionMode(int)>(0);

        $r6 = virtualinvoke r4.<javax.swing.JTable: javax.swing.ListSelectionModel getSelectionModel()>();

        $r7 = new com.sun.jwt.resources.editor.editors.ThemeEditor$7;

        specialinvoke $r7.<com.sun.jwt.resources.editor.editors.ThemeEditor$7: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor,com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel)>(r1, $r0);

        interfaceinvoke $r6.<javax.swing.ListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r7);

        return;
    }

    private java.lang.Object findFlushingPropertyContrust()
    {
        java.lang.Integer $r53;
        byte $b10;
        java.lang.StringBuilder $r13, $r15, $r49, $r51, $r56, $r57;
        java.lang.Object[] $r19, $r20, $r23, $r24, r55;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r16, $r41, $r52;
        java.lang.Number $r27;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.Byte $r28, $r29, $r30, $r31, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i33, $i35;
        com.sun.lwuit.Image $r43, r54;
        java.lang.IllegalArgumentException $r58;
        com.sun.lwuit.plaf.Border $r36, $r38, $r39;
        java.lang.Object $r17, $r18, $r21, $r22, $r25, $r26, $r33, $r34, $r35, $r37, $r40, $r42, $r44, $r50;
        com.sun.lwuit.Font $r45, $r46, $r47;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("Color");

        $i16 = (int) -1;

        if $i0 <= $i16 goto label02;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r50 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r52);

        $i14 = virtualinvoke $r53.<java.lang.Integer: int intValue()>();

        if $i14 <= 15790320 goto label01;

        return "000000";

     label01:
        return "ffffff";

     label02:
        $r2 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("font");

        $i18 = (int) -1;

        if $i1 <= $i18 goto label04;

        $r44 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        $r45 = (com.sun.lwuit.Font) $r44;

        $i12 = virtualinvoke $r45.<com.sun.lwuit.Font: int getStyle()>();

        $i13 = $i12 | 1;

        if $i13 == 0 goto label03;

        $r47 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>(0, 1, 16);

        return $r47;

     label03:
        $r46 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>(0, 0, 16);

        return $r46;

     label04:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("bgImage");

        $i20 = (int) -1;

        if $i2 <= $i20 goto label05;

        $r42 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        r54 = (com.sun.lwuit.Image) $r42;

        $r43 = virtualinvoke r54.<com.sun.lwuit.Image: com.sun.lwuit.Image modifyAlpha(byte)>(-128);

        return $r43;

     label05:
        $r4 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i3 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("transparency");

        $i22 = (int) -1;

        if $i3 <= $i22 goto label07;

        $r40 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        $r41 = (java.lang.String) $r40;

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r41);

        if $i11 >= 128 goto label06;

        return "255";

     label06:
        return "100";

     label07:
        $r5 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i4 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>("padding");

        $i24 = (int) -1;

        if $i4 > $i24 goto label08;

        $r6 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i5 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("margin");

        $i26 = (int) -1;

        if $i5 <= $i26 goto label09;

     label08:
        return "10,10,10,10";

     label09:
        $r7 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i6 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>("border");

        $i28 = (int) -1;

        if $i6 <= $i28 goto label11;

        $r35 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        if $r35 == null goto label10;

        $r37 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        $r38 = (com.sun.lwuit.plaf.Border) $r37;

        $r39 = virtualinvoke $r38.<com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createPressedVersion()>();

        if $r39 == null goto label10;

        return $r39;

     label10:
        $r36 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelRaised()>();

        return $r36;

     label11:
        $r8 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i7 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("bgType");

        $i30 = (int) -1;

        if $i7 <= $i30 goto label12;

        $r34 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        return $r34;

     label12:
        $r9 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i8 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("bgAlign");

        $i32 = (int) -1;

        if $i8 <= $i32 goto label19;

        $r26 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        $r27 = (java.lang.Number) $r26;

        $b10 = virtualinvoke $r27.<java.lang.Number: byte byteValue()>();

        $i33 = (int) $b10;

        tableswitch($i33)
        {
            case -95: goto label13;
            case -94: goto label14;
            case -93: goto label15;
            case -92: goto label16;
            case -91: goto label17;
            default: goto label18;
        };

     label13:
        $r32 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(-94);

        return $r32;

     label14:
        $r31 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(-95);

        return $r31;

     label15:
        $r30 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(-92);

        return $r30;

     label16:
        $r29 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(-93);

        return $r29;

     label17:
        $r28 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(-95);

        return $r28;

     label18:
        $r33 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        return $r33;

     label19:
        $r10 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $i9 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String)>("bgGradient");

        $i35 = (int) -1;

        if $i9 <= $i35 goto label20;

        r55 = newarray (java.lang.Object)[4];

        $r17 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, r55, 0, 4);

        $r18 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        $r19 = (java.lang.Object[]) $r18;

        $r20 = (java.lang.Object[]) $r19;

        $r21 = $r20[1];

        r55[0] = $r21;

        $r22 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue>;

        $r23 = (java.lang.Object[]) $r22;

        $r24 = (java.lang.Object[]) $r23;

        $r25 = $r24[0];

        r55[1] = $r25;

        return r55;

     label20:
        $r58 = new java.lang.IllegalArgumentException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported property type: ");

        $r14 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r58;
    }

    private void flashSelectedProperty(com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel, java.lang.String)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r2;
        com.sun.jwt.resources.editor.editors.ThemeEditor$8 $r6;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.Object $r3, $r4;
        java.lang.String r1;
        javax.swing.Timer $r5, $r7, $r8;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r2 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void refreshRam()>();

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void clearFlashingTimer()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty> = r1;

        $r3 = virtualinvoke r2.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.lang.Object getPropertyValue(java.lang.String)>(r1);

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue> = $r3;

        $r4 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object findFlushingPropertyContrust()>();

        $r5 = new javax.swing.Timer;

        $r6 = new com.sun.jwt.resources.editor.editors.ThemeEditor$8;

        specialinvoke $r6.<com.sun.jwt.resources.editor.editors.ThemeEditor$8: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor,java.lang.Object)>(r0, $r4);

        specialinvoke $r5.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>(250, $r6);

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.Timer flashingTimer> = $r5;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.Timer flashingTimer>;

        virtualinvoke $r7.<javax.swing.Timer: void setRepeats(boolean)>(1);

        $r8 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.Timer flashingTimer>;

        virtualinvoke $r8.<javax.swing.Timer: void start()>();

        return;
    }

    private void clearFlashingTimer()
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.util.Hashtable $r3;
        javax.swing.Timer $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.Timer flashingTimer>;

        if $r1 == null goto label2;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.Timer flashingTimer>;

        $z0 = virtualinvoke $r2.<javax.swing.Timer: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.Timer flashingTimer>;

        virtualinvoke $r4.<javax.swing.Timer: void stop()>();

     label1:
        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.Timer flashingTimer> = null;

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty> = null;

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.Object originalFlashingPropertyValue> = null;

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash>;

        staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: void refreshTheme(java.util.Hashtable)>($r3);

     label2:
        return;
    }

    private void initComponents()
    {
        javax.swing.JComboBox $r41, $r42, $r53, $r66, $r69, $r81, $r83, $r90, $r92, $r96, $r98, $r250, $r254;
        javax.swing.JScrollPane $r47, $r52, $r61, $r87, $r111, $r112, $r116, $r117, $r119, $r121, $r123, $r127, $r128, $r130, $r134, $r135, $r252, $r259, $r260, $r261;
        javax.swing.DefaultComboBoxModel $r265;
        javax.swing.JTextField $r100, $r104, $r153, $r201, $r234, $r236, $r256;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45;
        org.jdesktop.layout.GroupLayout$ParallelGroup $r57, $r60, $r62, $r64, $r71, $r74, $r75, $r80, $r82, $r84, $r89, $r145, $r148, $r155, $r157, $r173, $r176, $r178, $r183, $r186, $r193, $r196, $r198, $r200, $r202, $r207, $r209, $r212, $r214, $r216, $r218, $r220, $r222, $r224, $r227;
        javax.swing.JPanel $r37, $r38, $r48, $r50, $r51, $r55, $r56, $r177, $r208, $r249, $r253;
        javax.swing.JTabbedPane $r110, $r118, $r129, $r136, $r156, $r205, $r240, $r242, $r258;
        java.awt.Component[] $r187;
        org.jdesktop.layout.GroupLayout $r267, $r268;
        javax.swing.JLabel $r101, $r102, $r103, $r142, $r143, $r150, $r181, $r199, $r223, $r255, $r263;
        org.jdesktop.layout.GroupLayout$SequentialGroup $r58, $r59, $r65, $r67, $r68, $r70, $r72, $r73, $r76, $r78, $r79, $r85, $r86, $r88, $r146, $r147, $r149, $r151, $r152, $r154, $r158, $r160, $r161, $r163, $r164, $r166, $r167, $r169, $r170, $r172, $r174, $r175, $r179, $r180, $r182, $r184, $r185, $r194, $r195, $r197, $r203, $r204, $r206, $r210, $r211, $r225, $r226;
        javax.accessibility.AccessibleContext $r91, $r93, $r95, $r97, $r99, $r120, $r122, $r229, $r231, $r233, $r235, $r237, $r239, $r241, $r243, $r245;
        javax.swing.JCheckBox $r43, $r44, $r45, $r46, $r63, $r77, $r94, $r251;
        javax.swing.JTable $r15, $r17, $r19, $r113, $r114, $r115, $r124, $r125, $r126, $r131, $r132, $r133;
        com.sun.jwt.resources.editor.editors.ThemeEditor$FormListener $r264;
        java.awt.FlowLayout $r266;
        javax.swing.JButton $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r105, $r106, $r107, $r108, $r109, $r137, $r138, $r139, $r140, $r141, $r159, $r162, $r165, $r168, $r171, $r188, $r189, $r190, $r191, $r192, $r213, $r215, $r217, $r219, $r221, $r228, $r230, $r232, $r238, $r244, $r246, $r247, $r248, $r257, $r262;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.String[] $r40;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r246 = new javax.swing.JButton;

        specialinvoke $r246.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry> = $r246;

        $r247 = new javax.swing.JButton;

        specialinvoke $r247.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry> = $r247;

        $r248 = new javax.swing.JButton;

        specialinvoke $r248.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry> = $r248;

        $r249 = new javax.swing.JPanel;

        specialinvoke $r249.<javax.swing.JPanel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel jPanel1> = $r249;

        $r250 = new javax.swing.JComboBox;

        specialinvoke $r250.<javax.swing.JComboBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth> = $r250;

        $r251 = new javax.swing.JCheckBox;

        specialinvoke $r251.<javax.swing.JCheckBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting> = $r251;

        $r252 = new javax.swing.JScrollPane;

        specialinvoke $r252.<javax.swing.JScrollPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane previewScroll> = $r252;

        $r253 = new javax.swing.JPanel;

        specialinvoke $r253.<javax.swing.JPanel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel previewPanel> = $r253;

        $r254 = new javax.swing.JComboBox;

        specialinvoke $r254.<javax.swing.JComboBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions> = $r254;

        $r255 = new javax.swing.JLabel;

        specialinvoke $r255.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel jLabel2> = $r255;

        $r256 = new javax.swing.JTextField;

        specialinvoke $r256.<javax.swing.JTextField: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField> = $r256;

        $r257 = new javax.swing.JButton;

        specialinvoke $r257.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton> = $r257;

        $r258 = new javax.swing.JTabbedPane;

        specialinvoke $r258.<javax.swing.JTabbedPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane> = $r258;

        $r259 = new javax.swing.JScrollPane;

        specialinvoke $r259.<javax.swing.JScrollPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane1> = $r259;

        $r15 = virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable createTable()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable theme> = $r15;

        $r260 = new javax.swing.JScrollPane;

        specialinvoke $r260.<javax.swing.JScrollPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane2> = $r260;

        $r17 = virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable createTable()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable selectedStyles> = $r17;

        $r261 = new javax.swing.JScrollPane;

        specialinvoke $r261.<javax.swing.JScrollPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane3> = $r261;

        $r19 = virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable createTable()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable pressedStyles> = $r19;

        $r262 = new javax.swing.JButton;

        specialinvoke $r262.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles> = $r262;

        $r263 = new javax.swing.JLabel;

        specialinvoke $r263.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel ramEstimate> = $r263;

        $r264 = new com.sun.jwt.resources.editor.editors.ThemeEditor$FormListener;

        specialinvoke $r264.<com.sun.jwt.resources.editor.editors.ThemeEditor$FormListener: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void setName(java.lang.String)>("Form");

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void setOpaque(boolean)>(0);

        $r23 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        virtualinvoke $r23.<javax.swing.JButton: void setMnemonic(char)>(65);

        $r24 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        virtualinvoke $r24.<javax.swing.JButton: void setText(java.lang.String)>("Add");

        $r25 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        virtualinvoke $r25.<javax.swing.JButton: void setName(java.lang.String)>("addThemeEntry");

        $r26 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        virtualinvoke $r26.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r264);

        $r27 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        virtualinvoke $r27.<javax.swing.JButton: void setMnemonic(char)>(100);

        $r28 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        virtualinvoke $r28.<javax.swing.JButton: void setText(java.lang.String)>("Edit");

        $r29 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        virtualinvoke $r29.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r30 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        virtualinvoke $r30.<javax.swing.JButton: void setName(java.lang.String)>("editEntry");

        $r31 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        virtualinvoke $r31.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r264);

        $r32 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        virtualinvoke $r32.<javax.swing.JButton: void setMnemonic(char)>(82);

        $r33 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        virtualinvoke $r33.<javax.swing.JButton: void setText(java.lang.String)>("Remove");

        $r34 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        virtualinvoke $r34.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r35 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        virtualinvoke $r35.<javax.swing.JButton: void setName(java.lang.String)>("removeThemeEntry");

        $r36 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        virtualinvoke $r36.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r264);

        $r37 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel jPanel1>;

        virtualinvoke $r37.<javax.swing.JPanel: void setName(java.lang.String)>("jPanel1");

        $r38 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel jPanel1>;

        virtualinvoke $r38.<javax.swing.JPanel: void setOpaque(boolean)>(0);

        $r41 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        $r265 = new javax.swing.DefaultComboBoxModel;

        $r40 = newarray (java.lang.String)[3];

        $r40[0] = "16bpp (65536 colors)";

        $r40[1] = "24bpp (1.6m colors)";

        $r40[2] = "8bpp (256 colors)";

        specialinvoke $r265.<javax.swing.DefaultComboBoxModel: void <init>(java.lang.Object[])>($r40);

        virtualinvoke $r41.<javax.swing.JComboBox: void setModel(javax.swing.ComboBoxModel)>($r265);

        $r42 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        virtualinvoke $r42.<javax.swing.JComboBox: void setName(java.lang.String)>("bitDepth");

        $r43 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        virtualinvoke $r43.<javax.swing.JCheckBox: void setMnemonic(char)>(76);

        $r44 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        virtualinvoke $r44.<javax.swing.JCheckBox: void setText(java.lang.String)>("Live Highlighting");

        $r45 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        virtualinvoke $r45.<javax.swing.JCheckBox: void setName(java.lang.String)>("liveHighlighting");

        $r46 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        virtualinvoke $r46.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r264);

        $r47 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane previewScroll>;

        virtualinvoke $r47.<javax.swing.JScrollPane: void setName(java.lang.String)>("previewScroll");

        $r48 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel previewPanel>;

        virtualinvoke $r48.<javax.swing.JPanel: void setName(java.lang.String)>("previewPanel");

        $r50 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel previewPanel>;

        $r266 = new java.awt.FlowLayout;

        specialinvoke $r266.<java.awt.FlowLayout: void <init>(int,int,int)>(1, 0, 0);

        virtualinvoke $r50.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r266);

        $r52 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane previewScroll>;

        $r51 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel previewPanel>;

        virtualinvoke $r52.<javax.swing.JScrollPane: void setViewportView(java.awt.Component)>($r51);

        $r53 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        virtualinvoke $r53.<javax.swing.JComboBox: void setName(java.lang.String)>("resolution");

        $r267 = new org.jdesktop.layout.GroupLayout;

        $r55 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel jPanel1>;

        specialinvoke $r267.<org.jdesktop.layout.GroupLayout: void <init>(java.awt.Container)>($r55);

        $r56 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel jPanel1>;

        virtualinvoke $r56.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r267);

        $r57 = virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r58 = virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r59 = virtualinvoke $r58.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r60 = virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r61 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane previewScroll>;

        $i1 = (int) -1;

        $r62 = virtualinvoke $r60.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(int,java.awt.Component,int,int,int)>(2, $r61, $i1, 252, 32767);

        $r63 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        $r64 = virtualinvoke $r62.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r63);

        $r65 = virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r66 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $i3 = (int) -2;

        $i5 = (int) -1;

        $i7 = (int) -2;

        $r67 = virtualinvoke $r65.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r66, $i3, $i5, $i7);

        $r68 = virtualinvoke $r67.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r69 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        $r70 = virtualinvoke $r68.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r69, 0, 218, 32767);

        $r71 = virtualinvoke $r64.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r70);

        $r72 = virtualinvoke $r59.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r71);

        $r73 = virtualinvoke $r72.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r74 = virtualinvoke $r57.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r73);

        virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: void setHorizontalGroup(org.jdesktop.layout.GroupLayout$Group)>($r74);

        $r75 = virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r76 = virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r77 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        $r78 = virtualinvoke $r76.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r77);

        $r79 = virtualinvoke $r78.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r80 = virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r81 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        $i9 = (int) -2;

        $i11 = (int) -1;

        $i13 = (int) -2;

        $r82 = virtualinvoke $r80.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r81, $i9, $i11, $i13);

        $r83 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $i15 = (int) -2;

        $i17 = (int) -1;

        $i19 = (int) -2;

        $r84 = virtualinvoke $r82.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r83, $i15, $i17, $i19);

        $r85 = virtualinvoke $r79.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r84);

        $r86 = virtualinvoke $r85.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(13, 13, 13);

        $r87 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane previewScroll>;

        $i21 = (int) -1;

        $r88 = virtualinvoke $r86.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r87, $i21, 262, 32767);

        $r89 = virtualinvoke $r75.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r88);

        virtualinvoke $r267.<org.jdesktop.layout.GroupLayout: void setVerticalGroup(org.jdesktop.layout.GroupLayout$Group)>($r89);

        $r90 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        $r91 = virtualinvoke $r90.<javax.swing.JComboBox: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r91.<javax.accessibility.AccessibleContext: void setAccessibleName(java.lang.String)>("BPP");

        $r92 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        $r93 = virtualinvoke $r92.<javax.swing.JComboBox: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r93.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("BPP");

        $r94 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        $r95 = virtualinvoke $r94.<javax.swing.JCheckBox: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r95.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Live Highlighting");

        $r96 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $r97 = virtualinvoke $r96.<javax.swing.JComboBox: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r97.<javax.accessibility.AccessibleContext: void setAccessibleName(java.lang.String)>("Resolutions");

        $r98 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        $r99 = virtualinvoke $r98.<javax.swing.JComboBox: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r99.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Resolutions");

        $r101 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel jLabel2>;

        $r100 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField>;

        virtualinvoke $r101.<javax.swing.JLabel: void setLabelFor(java.awt.Component)>($r100);

        $r102 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel jLabel2>;

        virtualinvoke $r102.<javax.swing.JLabel: void setText(java.lang.String)>("Filter");

        $r103 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel jLabel2>;

        virtualinvoke $r103.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel2");

        $r104 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField>;

        virtualinvoke $r104.<javax.swing.JTextField: void setName(java.lang.String)>("searchField");

        $r105 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        virtualinvoke $r105.<javax.swing.JButton: void setMnemonic(char)>(67);

        $r106 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        virtualinvoke $r106.<javax.swing.JButton: void setText(java.lang.String)>("Customize");

        $r107 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        virtualinvoke $r107.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r108 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        virtualinvoke $r108.<javax.swing.JButton: void setName(java.lang.String)>("customizerButton");

        $r109 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        virtualinvoke $r109.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r264);

        $r110 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        virtualinvoke $r110.<javax.swing.JTabbedPane: void setName(java.lang.String)>("stylesTabbedPane");

        $r111 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane1>;

        virtualinvoke $r111.<javax.swing.JScrollPane: void setName(java.lang.String)>("jScrollPane1");

        $r112 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane1>;

        virtualinvoke $r112.<javax.swing.JScrollPane: void setOpaque(boolean)>(0);

        $r113 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable theme>;

        virtualinvoke $r113.<javax.swing.JTable: void setName(java.lang.String)>("theme");

        $r114 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable theme>;

        virtualinvoke $r114.<javax.swing.JTable: void addMouseListener(java.awt.event.MouseListener)>($r264);

        $r116 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane1>;

        $r115 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable theme>;

        virtualinvoke $r116.<javax.swing.JScrollPane: void setViewportView(java.awt.Component)>($r115);

        $r118 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        $r117 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane1>;

        virtualinvoke $r118.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Unselected", $r117);

        $r119 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane1>;

        $r120 = virtualinvoke $r119.<javax.swing.JScrollPane: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r120.<javax.accessibility.AccessibleContext: void setAccessibleName(java.lang.String)>("Unselected");

        $r121 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane1>;

        $r122 = virtualinvoke $r121.<javax.swing.JScrollPane: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r122.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Unselected");

        $r123 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane2>;

        virtualinvoke $r123.<javax.swing.JScrollPane: void setName(java.lang.String)>("jScrollPane2");

        $r124 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable selectedStyles>;

        virtualinvoke $r124.<javax.swing.JTable: void setName(java.lang.String)>("selectedStyles");

        $r125 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable selectedStyles>;

        virtualinvoke $r125.<javax.swing.JTable: void addMouseListener(java.awt.event.MouseListener)>($r264);

        $r127 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane2>;

        $r126 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable selectedStyles>;

        virtualinvoke $r127.<javax.swing.JScrollPane: void setViewportView(java.awt.Component)>($r126);

        $r129 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        $r128 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane2>;

        virtualinvoke $r129.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Selected", $r128);

        $r130 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane3>;

        virtualinvoke $r130.<javax.swing.JScrollPane: void setName(java.lang.String)>("jScrollPane3");

        $r131 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable pressedStyles>;

        virtualinvoke $r131.<javax.swing.JTable: void setName(java.lang.String)>("pressedStyles");

        $r132 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable pressedStyles>;

        virtualinvoke $r132.<javax.swing.JTable: void addMouseListener(java.awt.event.MouseListener)>($r264);

        $r134 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane3>;

        $r133 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable pressedStyles>;

        virtualinvoke $r134.<javax.swing.JScrollPane: void setViewportView(java.awt.Component)>($r133);

        $r136 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        $r135 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane jScrollPane3>;

        virtualinvoke $r136.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Pressed", $r135);

        $r137 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        virtualinvoke $r137.<javax.swing.JButton: void setMnemonic(char)>(83);

        $r138 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        virtualinvoke $r138.<javax.swing.JButton: void setText(java.lang.String)>("Styles");

        $r139 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        virtualinvoke $r139.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r140 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        virtualinvoke $r140.<javax.swing.JButton: void setName(java.lang.String)>("manageStyles");

        $r141 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        virtualinvoke $r141.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r264);

        $r142 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel ramEstimate>;

        virtualinvoke $r142.<javax.swing.JLabel: void setText(java.lang.String)>("Ram Estimate: ?");

        $r143 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel ramEstimate>;

        virtualinvoke $r143.<javax.swing.JLabel: void setName(java.lang.String)>("ramEstimate");

        $r268 = new org.jdesktop.layout.GroupLayout;

        specialinvoke $r268.<org.jdesktop.layout.GroupLayout: void <init>(java.awt.Container)>(r0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void setLayout(java.awt.LayoutManager)>($r268);

        $r145 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r146 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r147 = virtualinvoke $r146.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r148 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r149 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r150 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel jLabel2>;

        $r151 = virtualinvoke $r149.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r150);

        $r152 = virtualinvoke $r151.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r153 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField>;

        $i23 = (int) -2;

        $i25 = (int) -2;

        $r154 = virtualinvoke $r152.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r153, $i23, 344, $i25);

        $r155 = virtualinvoke $r148.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r154);

        $r156 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        $i27 = (int) -2;

        $i29 = (int) -2;

        $r157 = virtualinvoke $r155.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r156, $i27, 485, $i29);

        $r158 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r159 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        $r160 = virtualinvoke $r158.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r159);

        $r161 = virtualinvoke $r160.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(1);

        $r162 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        $r163 = virtualinvoke $r161.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r162);

        $r164 = virtualinvoke $r163.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(1);

        $r165 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        $r166 = virtualinvoke $r164.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r165);

        $r167 = virtualinvoke $r166.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(1);

        $r168 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        $r169 = virtualinvoke $r167.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r168);

        $r170 = virtualinvoke $r169.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r171 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        $r172 = virtualinvoke $r170.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r171);

        $r173 = virtualinvoke $r157.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r172);

        $r174 = virtualinvoke $r147.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r173);

        $r175 = virtualinvoke $r174.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r176 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r177 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel jPanel1>;

        $i31 = (int) -1;

        $i33 = (int) -1;

        $r178 = virtualinvoke $r176.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r177, $i31, $i33, 32767);

        $r179 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r180 = virtualinvoke $r179.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(10, 10, 10);

        $r181 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel ramEstimate>;

        $r182 = virtualinvoke $r180.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r181);

        $r183 = virtualinvoke $r178.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r182);

        $r184 = virtualinvoke $r175.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r183);

        $r185 = virtualinvoke $r184.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r186 = virtualinvoke $r145.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r185);

        virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: void setHorizontalGroup(org.jdesktop.layout.GroupLayout$Group)>($r186);

        $r187 = newarray (java.awt.Component)[5];

        $r188 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        $r187[0] = $r188;

        $r189 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        $r187[1] = $r189;

        $r190 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        $r187[2] = $r190;

        $r191 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        $r187[3] = $r191;

        $r192 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        $r187[4] = $r192;

        virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: void linkSize(java.awt.Component[],int)>($r187, 1);

        $r193 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r194 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r195 = virtualinvoke $r194.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r196 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(2);

        $r197 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r198 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r199 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel jLabel2>;

        $r200 = virtualinvoke $r198.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r199);

        $r201 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField>;

        $i35 = (int) -2;

        $i37 = (int) -1;

        $i39 = (int) -2;

        $r202 = virtualinvoke $r200.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r201, $i35, $i37, $i39);

        $r203 = virtualinvoke $r197.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r202);

        $r204 = virtualinvoke $r203.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r205 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        $i41 = (int) -1;

        $r206 = virtualinvoke $r204.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r205, $i41, 294, 32767);

        $r207 = virtualinvoke $r196.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(int,org.jdesktop.layout.GroupLayout$Group)>(1, $r206);

        $r208 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel jPanel1>;

        $i43 = (int) -1;

        $i45 = (int) -1;

        $r209 = virtualinvoke $r207.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r208, $i43, $i45, 32767);

        $r210 = virtualinvoke $r195.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r209);

        $r211 = virtualinvoke $r210.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r212 = virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r213 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        $r214 = virtualinvoke $r212.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r213);

        $r215 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        $r216 = virtualinvoke $r214.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r215);

        $r217 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        $r218 = virtualinvoke $r216.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r217);

        $r219 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        $r220 = virtualinvoke $r218.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r219);

        $r221 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        $r222 = virtualinvoke $r220.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r221);

        $r223 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JLabel ramEstimate>;

        $r224 = virtualinvoke $r222.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r223);

        $r225 = virtualinvoke $r211.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r224);

        $r226 = virtualinvoke $r225.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r227 = virtualinvoke $r193.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(int,org.jdesktop.layout.GroupLayout$Group)>(2, $r226);

        virtualinvoke $r268.<org.jdesktop.layout.GroupLayout: void setVerticalGroup(org.jdesktop.layout.GroupLayout$Group)>($r227);

        $r228 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        $r229 = virtualinvoke $r228.<javax.swing.JButton: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r229.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Add");

        $r230 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        $r231 = virtualinvoke $r230.<javax.swing.JButton: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r231.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Edit");

        $r232 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        $r233 = virtualinvoke $r232.<javax.swing.JButton: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r233.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Remove");

        $r234 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField>;

        $r235 = virtualinvoke $r234.<javax.swing.JTextField: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r235.<javax.accessibility.AccessibleContext: void setAccessibleName(java.lang.String)>("Filter");

        $r236 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField>;

        $r237 = virtualinvoke $r236.<javax.swing.JTextField: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r237.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Filter");

        $r238 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        $r239 = virtualinvoke $r238.<javax.swing.JButton: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r239.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Customize");

        $r240 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        $r241 = virtualinvoke $r240.<javax.swing.JTabbedPane: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r241.<javax.accessibility.AccessibleContext: void setAccessibleName(java.lang.String)>("Selectors");

        $r242 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        $r243 = virtualinvoke $r242.<javax.swing.JTabbedPane: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r243.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Selectors");

        $r244 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        $r245 = virtualinvoke $r244.<javax.swing.JButton: javax.accessibility.AccessibleContext getAccessibleContext()>();

        virtualinvoke $r245.<javax.accessibility.AccessibleContext: void setAccessibleDescription(java.lang.String)>("Styles");

        return;
    }

    private void themeMouseClicked(java.awt.event.MouseEvent)
    {
        javax.swing.JButton $r2;
        int $i0;
        com.sun.jwt.resources.editor.editors.ThemeEditor r1;
        java.awt.event.MouseEvent r0;
        boolean $z0;

        r1 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getClickCount()>();

        if $i0 != 2 goto label1;

        $r2 = r1.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        $z0 = virtualinvoke $r2.<javax.swing.JButton: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r1.<com.sun.jwt.resources.editor.editors.ThemeEditor: void editEntryActionPerformed(java.awt.event.ActionEvent)>(null);

     label1:
        return;
    }

    private com.sun.jwt.resources.editor.editors.BaseForm$EditorTable getCurrentStyleTable()
    {
        javax.swing.JScrollPane r3;
        javax.swing.JTabbedPane $r1;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.Component $r2, $r5;
        javax.swing.JViewport $r4;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r6;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTabbedPane stylesTabbedPane>;

        $r2 = virtualinvoke $r1.<javax.swing.JTabbedPane: java.awt.Component getSelectedComponent()>();

        r3 = (javax.swing.JScrollPane) $r2;

        $r4 = virtualinvoke r3.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r5 = virtualinvoke $r4.<javax.swing.JViewport: java.awt.Component getView()>();

        $r6 = (com.sun.jwt.resources.editor.editors.BaseForm$EditorTable) $r5;

        return $r6;
    }

    private com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel $r3;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1;
        javax.swing.table.TableModel $r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable getCurrentStyleTable()>();

        $r2 = virtualinvoke $r1.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel getInternalModel()>();

        $r3 = (com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel) $r2;

        return $r3;
    }

    private void addThemeEntryActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.ResourceEditorView $r5;
        com.sun.jwt.resources.editor.editors.AddThemeEntry $r1;
        com.sun.lwuit.util.EditableResources $r4;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel $r6;
        java.awt.event.ActionEvent r8;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.String $r7;
        java.util.Hashtable $r2, $r3;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r8 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void clearFlashingTimer()>();

        $r1 = new com.sun.jwt.resources.editor.editors.AddThemeEntry;

        $r4 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources resources>;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.ResourceEditorView view>;

        $r2 = new java.util.Hashtable;

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash>;

        specialinvoke $r2.<java.util.Hashtable: void <init>(java.util.Map)>($r3);

        $r6 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r7 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.lang.String access$1300(com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel)>($r6);

        specialinvoke $r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: void <init>(boolean,com.sun.lwuit.util.EditableResources,com.sun.jwt.resources.editor.ResourceEditorView,java.util.Hashtable,java.lang.String)>(1, $r4, $r5, $r2, $r7);

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void showAddThemeEntry(com.sun.jwt.resources.editor.editors.AddThemeEntry)>($r1);

        return;
    }

    private void showAddThemeEntry(com.sun.jwt.resources.editor.editors.AddThemeEntry)
    {
        com.sun.jwt.resources.editor.editors.AddThemeEntry r1;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel $r13, $r17;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r4, $r5, $r6, $r9, $r12, $r14, $r18;
        java.util.Hashtable $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        com.sun.lwuit.Image r16;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.Object $r7, $r15, $r19;
        java.lang.StringBuilder $r10, $r11, $r20;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter0: com.sun.jwt.resources.editor.editors.AddThemeEntry;

        $i4 = (int) -1;

        $i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int)>(r0, r1, "Add", 2, $i4);

        if $i0 != 0 goto label6;

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash>;

        $r4 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String getKey()>();

        $z0 = virtualinvoke $r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String getKey()>();

        $r10 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already defined would you like to modify it?");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int)>(r0, $r12, "Selector Exists", 1, 3);

        if $i2 != 0 goto label1;

        $r13 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r14 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String getKey()>();

        $r15 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.Object getValue()>();

        virtualinvoke $r13.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void setKeyValue(java.lang.String,java.lang.Object)>($r14, $r15);

        return;

     label1:
        if $i2 == 1 goto label2;

        return;

     label2:
        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void showAddThemeEntry(com.sun.jwt.resources.editor.editors.AddThemeEntry)>(r1);

        return;

     label3:
        $r5 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String getKey()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>("bgImage");

        $i6 = (int) -1;

        if $i1 <= $i6 goto label5;

        $z1 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: boolean isBrokenImage()>();

        if $z1 == 0 goto label4;

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r0, "You must select an Image", "Select Image", 0);

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void showAddThemeEntry(com.sun.jwt.resources.editor.editors.AddThemeEntry)>(r1);

        return;

     label4:
        $r6 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String getKey()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Form.bgImage");

        if $z2 == 0 goto label5;

        $r7 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.Object getValue()>();

        r16 = (com.sun.lwuit.Image) $r7;

        $z3 = virtualinvoke r16.<com.sun.lwuit.Image: boolean isOpaque()>();

        if $z3 != 0 goto label5;

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r0, "The selected image is translucent, we recommend using opaque images only for forms", "Translucent Image Selected", 0);

     label5:
        $r17 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r18 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String getKey()>();

        $r19 = virtualinvoke r1.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.Object getValue()>();

        virtualinvoke $r17.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void addKeyValue(java.lang.String,java.lang.Object)>($r18, $r19);

        goto label7;

     label6:
        $r2 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash>;

        staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: void refreshTheme(java.util.Hashtable)>($r2);

     label7:
        return;
    }

    private void editEntryActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.AddThemeEntry $r26;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel $r6, $r9, $r12, $r16, $r17, $r22;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r8;
        int $i0, $i1, $i3;
        java.lang.String $r7, r11, $r15;
        java.util.Hashtable $r3, $r14, $r25;
        boolean $z0, $z1, $z2;
        com.sun.jwt.resources.editor.ResourceEditorView $r5;
        com.sun.lwuit.util.EditableResources $r4, $r19;
        com.sun.lwuit.Image r21;
        java.awt.event.ActionEvent r24;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.Object $r10, $r13, $r18, $r20, $r23;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r24 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void clearFlashingTimer()>();

        $r26 = new com.sun.jwt.resources.editor.editors.AddThemeEntry;

        $r4 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources resources>;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.ResourceEditorView view>;

        $r25 = new java.util.Hashtable;

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash>;

        specialinvoke $r25.<java.util.Hashtable: void <init>(java.util.Map)>($r3);

        $r6 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r7 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.lang.String access$1300(com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel)>($r6);

        specialinvoke $r26.<com.sun.jwt.resources.editor.editors.AddThemeEntry: void <init>(boolean,com.sun.lwuit.util.EditableResources,com.sun.jwt.resources.editor.ResourceEditorView,java.util.Hashtable,java.lang.String)>(0, $r4, $r5, $r25, $r7);

        $r8 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable getCurrentStyleTable()>();

        $i0 = virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: int getModelSelection(javax.swing.JTable)>($r8);

        $r9 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r10 = virtualinvoke $r9.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.lang.Object getValueAt(int,int)>($i0, 0);

        r11 = (java.lang.String) $r10;

        $r12 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r13 = virtualinvoke $r12.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.lang.Object getValueAt(int,int)>($i0, 1);

        virtualinvoke $r26.<com.sun.jwt.resources.editor.editors.AddThemeEntry: void setKeyValue(java.lang.String,java.lang.Object)>(r11, $r13);

        $i3 = (int) -1;

        $i1 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int)>(r0, $r26, "Edit", 2, $i3);

        if $i1 != 0 goto label4;

        $r15 = virtualinvoke $r26.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String getKey()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z0 == 0 goto label1;

        $r22 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r23 = virtualinvoke $r26.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.Object getValue()>();

        virtualinvoke $r22.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void setKeyValue(java.lang.String,java.lang.Object)>(r11, $r23);

        goto label2;

     label1:
        $r16 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        virtualinvoke $r16.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void remove(int)>($i0);

        $r17 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r18 = virtualinvoke $r26.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.Object getValue()>();

        virtualinvoke $r17.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void addKeyValue(java.lang.String,java.lang.Object)>($r15, $r18);

     label2:
        $r19 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources resources>;

        virtualinvoke $r19.<com.sun.lwuit.util.EditableResources: void setModified()>();

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("Form.bgImage");

        if $z1 == 0 goto label3;

        $r20 = virtualinvoke $r26.<com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.Object getValue()>();

        r21 = (com.sun.lwuit.Image) $r20;

        $z2 = virtualinvoke r21.<com.sun.lwuit.Image: boolean isOpaque()>();

        if $z2 != 0 goto label3;

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r0, "The selected image is translucent, we recommend using opaque images only for forms", "Translucent Image Selected", 0);

     label3:
        goto label5;

     label4:
        $r14 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash>;

        staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: void refreshTheme(java.util.Hashtable)>($r14);

     label5:
        return;
    }

    private void removeThemeEntryActionPerformed(java.awt.event.ActionEvent)
    {
        javax.swing.JTextField $r3;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel $r1;
        java.awt.event.ActionEvent r4;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r2;
        int $i0, $i1, $i3;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r4 := @parameter0: java.awt.event.ActionEvent;

        $i3 = (int) -1;

        $i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int)>(r0, "Are You Sure?", "Remove", 0, $i3);

        if $i0 != 0 goto label1;

        $r1 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        $r2 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable getCurrentStyleTable()>();

        $i1 = virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: int getModelSelection(javax.swing.JTable)>($r2);

        virtualinvoke $r1.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void remove(int)>($i1);

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTextField searchField>;

        virtualinvoke $r3.<javax.swing.JTextField: void setText(java.lang.String)>("");

     label1:
        return;
    }

    private void liveHighlightingActionPerformed(java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r5;
        java.util.prefs.Preferences $r2;
        javax.swing.JCheckBox $r3, $r4;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.Class $r1;
        boolean $z0, $z1;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r5 := @parameter0: java.awt.event.ActionEvent;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userNodeForPackage(java.lang.Class)>($r1);

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        $z0 = virtualinvoke $r3.<javax.swing.JCheckBox: boolean isSelected()>();

        virtualinvoke $r2.<java.util.prefs.Preferences: void putBoolean(java.lang.String,boolean)>("liveHighlighting", $z0);

        $r4 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        $z1 = virtualinvoke $r4.<javax.swing.JCheckBox: boolean isSelected()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void clearFlashingTimer()>();

     label1:
        return;
    }

    private void customizerButtonActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        return;
    }

    private void manageStylesActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        return;
    }

    private void selectedStylesMouseClicked(java.awt.event.MouseEvent)
    {
        javax.swing.JButton $r2;
        int $i0;
        com.sun.jwt.resources.editor.editors.ThemeEditor r1;
        java.awt.event.MouseEvent r0;
        boolean $z0;

        r1 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getClickCount()>();

        if $i0 != 2 goto label1;

        $r2 = r1.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        $z0 = virtualinvoke $r2.<javax.swing.JButton: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r1.<com.sun.jwt.resources.editor.editors.ThemeEditor: void editEntryActionPerformed(java.awt.event.ActionEvent)>(null);

     label1:
        return;
    }

    private void pressedStylesMouseClicked(java.awt.event.MouseEvent)
    {
        javax.swing.JButton $r2;
        int $i0;
        com.sun.jwt.resources.editor.editors.ThemeEditor r1;
        java.awt.event.MouseEvent r0;
        boolean $z0;

        r1 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getClickCount()>();

        if $i0 != 2 goto label1;

        $r2 = r1.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        $z0 = virtualinvoke $r2.<javax.swing.JButton: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r1.<com.sun.jwt.resources.editor.editors.ThemeEditor: void editEntryActionPerformed(java.awt.event.ActionEvent)>(null);

     label1:
        return;
    }

    private static void refreshTheme(java.util.Hashtable)
    {
        java.util.ArrayList $r5;
        com.sun.lwuit.EditorFont r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.util.Hashtable r0;
        com.sun.lwuit.Display $r1, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r6;
        com.sun.lwuit.Form $r4;
        com.sun.lwuit.Image r8;
        com.sun.jwt.resources.editor.editors.ThemeEditor$9 $r2;
        java.lang.Object $r7;

        r0 := @parameter0: java.util.Hashtable;

        staticinvoke <com.sun.lwuit.plaf.Accessor: void setTheme(java.util.Hashtable)>(r0);

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = new com.sun.jwt.resources.editor.editors.ThemeEditor$9;

        specialinvoke $r2.<com.sun.jwt.resources.editor.editors.ThemeEditor$9: void <init>()>();

        virtualinvoke $r1.<com.sun.lwuit.Display: void callSerially(java.lang.Runnable)>($r2);

        $r3 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.Display: com.sun.lwuit.Form getCurrent()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize> = 0;

        staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: void findSizeableObjects(com.sun.lwuit.Component,java.util.List)>($r4, $r5);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r7 instanceof com.sun.lwuit.Image;

        if $z0 == 0 goto label4;

        r8 = (com.sun.lwuit.Image) $r7;

        $z4 = $r7 instanceof com.sun.lwuit.IndexedImage;

        if $z4 == 0 goto label2;

        i9 = 1;

        goto label3;

     label2:
        i9 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int bytesPerPixel>;

     label3:
        $i3 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize>;

        $i4 = virtualinvoke r8.<com.sun.lwuit.Image: int getWidth()>();

        $i5 = virtualinvoke r8.<com.sun.lwuit.Image: int getHeight()>();

        $i6 = $i4 * $i5;

        $i7 = $i6 * i9;

        $i8 = $i3 + $i7;

        <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize> = $i8;

        goto label1;

     label4:
        $z1 = $r7 instanceof com.sun.lwuit.Font;

        if $z1 == 0 goto label6;

        $z2 = $r7 instanceof com.sun.lwuit.EditorFont;

        if $z2 == 0 goto label1;

        r9 = (com.sun.lwuit.EditorFont) $r7;

        $z3 = virtualinvoke r9.<com.sun.lwuit.EditorFont: boolean isIncludesBitmap()>();

        if $z3 == 0 goto label5;

        $i0 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize>;

        $i1 = virtualinvoke r9.<com.sun.lwuit.EditorFont: int getBitmapFontRAMUsage()>();

        $i2 = $i0 + $i1;

        <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize> = $i2;

     label5:
        goto label1;

     label6:
        goto label1;

     label7:
        return;
    }

    private static void findSizeableObjects(com.sun.lwuit.Component, java.util.List)
    {
        com.sun.lwuit.Component r0, $r4;
        com.sun.lwuit.plaf.Style $r1, $r6, $r8, $r10;
        int $i0, i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.lwuit.Image $r2, $r9;
        com.sun.lwuit.Container r3;
        java.util.List r5;
        com.sun.lwuit.Font $r7, $r11;

        r0 := @parameter0: com.sun.lwuit.Component;

        r5 := @parameter1: java.util.List;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Image getBgImage()>();

        if $r2 == null goto label2;

        $z3 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z3 != 0 goto label2;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        $r6 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        $r7 = virtualinvoke $r6.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        if $r7 == null goto label3;

        $z2 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>($r7);

        if $z2 != 0 goto label3;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        $r8 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Image getBgImage()>();

        if $r9 == null goto label4;

        $z1 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z1 != 0 goto label4;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r9);

     label4:
        $r10 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        $r11 = virtualinvoke $r10.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        if $r11 == null goto label5;

        $z0 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>($r11);

        if $z0 != 0 goto label5;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11);

     label5:
        $z4 = r0 instanceof com.sun.lwuit.Container;

        if $z4 == 0 goto label7;

        r3 = (com.sun.lwuit.Container) r0;

        i1 = 0;

     label6:
        $i0 = virtualinvoke r3.<com.sun.lwuit.Container: int getComponentCount()>();

        if i1 >= $i0 goto label7;

        $r4 = virtualinvoke r3.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i1);

        staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: void findSizeableObjects(com.sun.lwuit.Component,java.util.List)>($r4, r5);

        i1 = i1 + 1;

        goto label6;

     label7:
        return;
    }

    static javax.swing.JComboBox access$000(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JComboBox $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox resolutions>;

        return $r1;
    }

    static javax.swing.JScrollPane access$100(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        javax.swing.JScrollPane $r1;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JScrollPane previewScroll>;

        return $r1;
    }

    static int[] access$200()
    {
        int[] $r0;

        $r0 = <com.sun.jwt.resources.editor.editors.ThemeEditor: int[] BPP_TYPES>;

        return $r0;
    }

    static javax.swing.JComboBox access$300(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JComboBox $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JComboBox bitDepth>;

        return $r1;
    }

    static javax.swing.JPanel access$400(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JPanel $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JPanel previewPanel>;

        return $r1;
    }

    static int access$502(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.sun.jwt.resources.editor.editors.ThemeEditor: int bytesPerPixel> = i0;

        return i0;
    }

    static com.sun.jwt.resources.editor.editors.BaseForm$EditorTable access$600(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable getCurrentStyleTable()>();

        return $r1;
    }

    static com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel access$700(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel getCurrentStyleModel()>();

        return $r1;
    }

    static com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable access$802(com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable;

        <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable copyInstance> = r0;

        return r0;
    }

    static void access$900(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void removeThemeEntryActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable access$800()
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable $r0;

        $r0 = <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.editors.ThemeEditor$TableTranferable copyInstance>;

        return $r0;
    }

    static com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        com.sun.lwuit.util.EditableResources $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources resources>;

        return $r1;
    }

    static com.sun.jwt.resources.editor.ResourceEditorView access$1100(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        com.sun.jwt.resources.editor.ResourceEditorView $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.jwt.resources.editor.ResourceEditorView view>;

        return $r1;
    }

    static java.util.Hashtable access$1200(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable themeHash>;

        return $r1;
    }

    static void access$1400(com.sun.jwt.resources.editor.editors.ThemeEditor, com.sun.jwt.resources.editor.editors.AddThemeEntry)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        com.sun.jwt.resources.editor.editors.AddThemeEntry r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: com.sun.jwt.resources.editor.editors.AddThemeEntry;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void showAddThemeEntry(com.sun.jwt.resources.editor.editors.AddThemeEntry)>(r1);

        return;
    }

    static void access$1500(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void editEntryActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JButton access$1600(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JButton $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton editEntry>;

        return $r1;
    }

    static javax.swing.JButton access$1700(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JButton $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton removeThemeEntry>;

        return $r1;
    }

    static javax.swing.JCheckBox access$1800(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        javax.swing.JCheckBox $r1;
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JCheckBox liveHighlighting>;

        return $r1;
    }

    static void access$1900(com.sun.jwt.resources.editor.editors.ThemeEditor, com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel, java.lang.String)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r1;
        java.lang.String r2;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void flashSelectedProperty(com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel,java.lang.String)>(r1, r2);

        return;
    }

    static void access$2000(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void clearFlashingTimer()>();

        return;
    }

    static java.lang.String access$2100(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.String $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String flashingProperty>;

        return $r1;
    }

    static void access$2200(java.util.Hashtable)
    {
        java.util.Hashtable r0;

        r0 := @parameter0: java.util.Hashtable;

        staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: void refreshTheme(java.util.Hashtable)>(r0);

        return;
    }

    static javax.swing.JButton access$2300(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JButton $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton addThemeEntry>;

        return $r1;
    }

    static void access$2400(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void addThemeEntryActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static void access$2500(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void liveHighlightingActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JButton access$2600(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JButton $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton customizerButton>;

        return $r1;
    }

    static void access$2700(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void customizerButtonActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JButton access$2800(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JButton $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JButton manageStyles>;

        return $r1;
    }

    static void access$2900(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void manageStylesActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JTable access$3000(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JTable $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable theme>;

        return $r1;
    }

    static void access$3100(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.MouseEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.MouseEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.MouseEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void themeMouseClicked(java.awt.event.MouseEvent)>(r1);

        return;
    }

    static javax.swing.JTable access$3200(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JTable $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable selectedStyles>;

        return $r1;
    }

    static void access$3300(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.MouseEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.MouseEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.MouseEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void selectedStylesMouseClicked(java.awt.event.MouseEvent)>(r1);

        return;
    }

    static javax.swing.JTable access$3400(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        javax.swing.JTable $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: javax.swing.JTable pressedStyles>;

        return $r1;
    }

    static void access$3500(com.sun.jwt.resources.editor.editors.ThemeEditor, java.awt.event.MouseEvent)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.awt.event.MouseEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r1 := @parameter1: java.awt.event.MouseEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void pressedStylesMouseClicked(java.awt.event.MouseEvent)>(r1);

        return;
    }

    static void access$3600(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: void refreshRam()>();

        return;
    }

    static java.lang.String access$3700(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor r0;
        java.lang.String $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String themeName>;

        return $r1;
    }

    static java.awt.Component access$3800()
    {
        java.awt.Component $r0;

        $r0 = <com.sun.jwt.resources.editor.editors.ThemeEditor: java.awt.Component previewInstance>;

        return $r0;
    }

    static void <clinit>()
    {
        com.sun.lwuit.geom.Dimension[] $r1;
        com.sun.lwuit.geom.Dimension $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        int[] $r0;

        <com.sun.jwt.resources.editor.editors.ThemeEditor: int ramSize> = 0;

        $r0 = newarray (int)[3];

        $r0[0] = 9;

        $r0[1] = 1;

        $r0[2] = 13;

        <com.sun.jwt.resources.editor.editors.ThemeEditor: int[] BPP_TYPES> = $r0;

        <com.sun.jwt.resources.editor.editors.ThemeEditor: int bytesPerPixel> = 2;

        $r1 = newarray (com.sun.lwuit.geom.Dimension)[13];

        $r2 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r2.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(240, 320);

        $r1[0] = $r2;

        $r3 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r3.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(320, 240);

        $r1[1] = $r3;

        $r4 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r4.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(320, 320);

        $r1[2] = $r4;

        $r5 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r5.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(128, 128);

        $r1[3] = $r5;

        $r6 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r6.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(128, 160);

        $r1[4] = $r6;

        $r7 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r7.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(240, 260);

        $r1[5] = $r7;

        $r8 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r8.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(176, 220);

        $r1[6] = $r8;

        $r9 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r9.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(208, 320);

        $r1[7] = $r9;

        $r10 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r10.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(640, 320);

        $r1[8] = $r10;

        $r11 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r11.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(640, 200);

        $r1[9] = $r11;

        $r12 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r12.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(220, 176);

        $r1[10] = $r12;

        $r13 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r13.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(480, 800);

        $r1[11] = $r13;

        $r14 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r14.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(360, 640);

        $r1[12] = $r14;

        <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.geom.Dimension[] DIMENSIONS> = $r1;

        return;
    }
}
