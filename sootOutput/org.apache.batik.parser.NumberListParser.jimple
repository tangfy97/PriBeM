public class org.apache.batik.parser.NumberListParser extends org.apache.batik.parser.NumberParser
{
    protected org.apache.batik.parser.NumberListHandler numberListHandler;

    public void <init>()
    {
        org.apache.batik.parser.NumberListParser r0;
        org.apache.batik.parser.NumberListHandler $r1;

        r0 := @this: org.apache.batik.parser.NumberListParser;

        specialinvoke r0.<org.apache.batik.parser.NumberParser: void <init>()>();

        $r1 = <org.apache.batik.parser.DefaultNumberListHandler: org.apache.batik.parser.NumberListHandler INSTANCE>;

        r0.<org.apache.batik.parser.NumberListParser: org.apache.batik.parser.NumberListHandler numberListHandler> = $r1;

        return;
    }

    public void setNumberListHandler(org.apache.batik.parser.NumberListHandler)
    {
        org.apache.batik.parser.NumberListParser r0;
        org.apache.batik.parser.NumberListHandler r1;

        r0 := @this: org.apache.batik.parser.NumberListParser;

        r1 := @parameter0: org.apache.batik.parser.NumberListHandler;

        r0.<org.apache.batik.parser.NumberListParser: org.apache.batik.parser.NumberListHandler numberListHandler> = r1;

        return;
    }

    public org.apache.batik.parser.NumberListHandler getNumberListHandler()
    {
        org.apache.batik.parser.NumberListParser r0;
        org.apache.batik.parser.NumberListHandler $r1;

        r0 := @this: org.apache.batik.parser.NumberListParser;

        $r1 = r0.<org.apache.batik.parser.NumberListParser: org.apache.batik.parser.NumberListHandler numberListHandler>;

        return $r1;
    }

    protected void doParse() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.util.io.NormalizingReader $r2;
        java.lang.NumberFormatException $r7;
        org.apache.batik.parser.NumberListHandler $r1, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i4;
        org.apache.batik.parser.NumberListParser r0;
        float $f0;

        r0 := @this: org.apache.batik.parser.NumberListParser;

        $r1 = r0.<org.apache.batik.parser.NumberListParser: org.apache.batik.parser.NumberListHandler numberListHandler>;

        interfaceinvoke $r1.<org.apache.batik.parser.NumberListHandler: void startNumberList()>();

        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

     label1:
        goto label2;

     label2:
        $r3 = r0.<org.apache.batik.parser.NumberListParser: org.apache.batik.parser.NumberListHandler numberListHandler>;

        interfaceinvoke $r3.<org.apache.batik.parser.NumberListHandler: void startNumber()>();

        $f0 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        $r4 = r0.<org.apache.batik.parser.NumberListParser: org.apache.batik.parser.NumberListHandler numberListHandler>;

        interfaceinvoke $r4.<org.apache.batik.parser.NumberListHandler: void numberValue(float)>($f0);

        $r5 = r0.<org.apache.batik.parser.NumberListParser: org.apache.batik.parser.NumberListHandler numberListHandler>;

        interfaceinvoke $r5.<org.apache.batik.parser.NumberListHandler: void endNumber()>();

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipCommaSpaces()>();

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i4 = (int) -1;

        if $i1 != $i4 goto label3;

        goto label4;

     label3:
        goto label2;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i2);

     label6:
        $r6 = r0.<org.apache.batik.parser.NumberListParser: org.apache.batik.parser.NumberListHandler numberListHandler>;

        interfaceinvoke $r6.<org.apache.batik.parser.NumberListHandler: void endNumberList()>();

        return;

        catch java.lang.NumberFormatException from label1 to label4 with label5;
    }
}
