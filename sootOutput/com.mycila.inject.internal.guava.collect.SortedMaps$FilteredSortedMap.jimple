class com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap extends com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap implements java.util.SortedMap
{

    void <init>(java.util.SortedMap, com.mycila.inject.internal.guava.base.Predicate)
    {
        com.mycila.inject.internal.guava.base.Predicate r2;
        com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap r0;
        java.util.SortedMap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        r1 := @parameter0: java.util.SortedMap;

        r2 := @parameter1: com.mycila.inject.internal.guava.base.Predicate;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: void <init>(java.util.Map,com.mycila.inject.internal.guava.base.Predicate)>(r1, r2);

        return;
    }

    java.util.SortedMap sortedMap()
    {
        com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap r0;
        java.util.SortedMap $r2;
        java.util.Map $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.Map unfiltered>;

        $r2 = (java.util.SortedMap) $r1;

        return $r2;
    }

    public java.util.Comparator comparator()
    {
        com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap r0;
        java.util.Comparator $r2;
        java.util.SortedMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.SortedMap sortedMap()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Comparator comparator()>();

        return $r2;
    }

    public java.lang.Object firstKey()
    {
        com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap r0;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Object $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        return $r3;
    }

    public java.lang.Object lastKey()
    {
        com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap r0;
        java.util.Map $r2;
        java.lang.Object $r1, $r3;
        java.util.SortedMap $r4, r5;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        r5 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.SortedMap sortedMap()>();

     label1:
        $r1 = interfaceinvoke r5.<java.util.SortedMap: java.lang.Object lastKey()>();

        $r2 = r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.Map unfiltered>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: boolean apply(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $z0 == 0 goto label2;

        return $r1;

     label2:
        $r4 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.SortedMap sortedMap()>();

        r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>($r1);

        goto label1;
    }

    public java.util.SortedMap headMap(java.lang.Object)
    {
        com.mycila.inject.internal.guava.base.Predicate $r5;
        com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap $r0, r1;
        java.lang.Object r3;
        java.util.SortedMap $r2, $r4;

        r1 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        r3 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.SortedMap sortedMap()>();

        $r4 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(r3);

        $r5 = r1.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: com.mycila.inject.internal.guava.base.Predicate predicate>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: void <init>(java.util.SortedMap,com.mycila.inject.internal.guava.base.Predicate)>($r4, $r5);

        return $r0;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.base.Predicate $r6;
        com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap $r0, r1;
        java.lang.Object r3, r4;
        java.util.SortedMap $r2, $r5;

        r1 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.SortedMap sortedMap()>();

        $r5 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = r1.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: com.mycila.inject.internal.guava.base.Predicate predicate>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: void <init>(java.util.SortedMap,com.mycila.inject.internal.guava.base.Predicate)>($r5, $r6);

        return $r0;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        com.mycila.inject.internal.guava.base.Predicate $r5;
        com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap $r0, r1;
        java.lang.Object r3;
        java.util.SortedMap $r2, $r4;

        r1 := @this: com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        r3 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap;

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: java.util.SortedMap sortedMap()>();

        $r4 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(r3);

        $r5 = r1.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: com.mycila.inject.internal.guava.base.Predicate predicate>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.SortedMaps$FilteredSortedMap: void <init>(java.util.SortedMap,com.mycila.inject.internal.guava.base.Predicate)>($r4, $r5);

        return $r0;
    }
}
