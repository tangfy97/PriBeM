public class groovy.util.slurpersupport.NoChildren extends groovy.util.slurpersupport.GPathResult
{

    public void <init>(groovy.util.slurpersupport.GPathResult, java.lang.String, java.util.Map)
    {
        groovy.util.slurpersupport.NoChildren r0;
        java.util.Map r3;
        java.lang.String r2;
        groovy.util.slurpersupport.GPathResult r1;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        r1 := @parameter0: groovy.util.slurpersupport.GPathResult;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<groovy.util.slurpersupport.GPathResult: void <init>(groovy.util.slurpersupport.GPathResult,java.lang.String,java.lang.String,java.util.Map)>(r1, r2, "*", r3);

        return;
    }

    public int size()
    {
        groovy.util.slurpersupport.NoChildren r0;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        return 0;
    }

    public java.lang.String text()
    {
        groovy.util.slurpersupport.NoChildren r0;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        return "";
    }

    public groovy.util.slurpersupport.GPathResult parents()
    {
        groovy.util.slurpersupport.NoChildren r1;
        groovy.lang.GroovyRuntimeException $r0;

        r1 := @this: groovy.util.slurpersupport.NoChildren;

        $r0 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r0.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("parents() not implemented yet");

        throw $r0;
    }

    public java.util.Iterator childNodes()
    {
        groovy.util.slurpersupport.NoChildren r0;
        java.util.Iterator $r1;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        $r1 = virtualinvoke r0.<groovy.util.slurpersupport.NoChildren: java.util.Iterator iterator()>();

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        groovy.util.slurpersupport.NoChildren$1 $r0;
        groovy.util.slurpersupport.NoChildren r1;

        r1 := @this: groovy.util.slurpersupport.NoChildren;

        $r0 = new groovy.util.slurpersupport.NoChildren$1;

        specialinvoke $r0.<groovy.util.slurpersupport.NoChildren$1: void <init>(groovy.util.slurpersupport.NoChildren)>(r1);

        return $r0;
    }

    public groovy.util.slurpersupport.GPathResult find(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.util.slurpersupport.NoChildren r0;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        r1 := @parameter0: groovy.lang.Closure;

        return r0;
    }

    public groovy.util.slurpersupport.GPathResult findAll(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.util.slurpersupport.NoChildren r0;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        r1 := @parameter0: groovy.lang.Closure;

        return r0;
    }

    public java.util.Iterator nodeIterator()
    {
        groovy.util.slurpersupport.NoChildren r0;
        java.util.Iterator $r1;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        $r1 = virtualinvoke r0.<groovy.util.slurpersupport.NoChildren: java.util.Iterator iterator()>();

        return $r1;
    }

    public java.io.Writer writeTo(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r0;
        groovy.util.slurpersupport.NoChildren r1;

        r1 := @this: groovy.util.slurpersupport.NoChildren;

        r0 := @parameter0: java.io.Writer;

        return r0;
    }

    public void build(groovy.lang.GroovyObject)
    {
        groovy.lang.GroovyObject r1;
        groovy.util.slurpersupport.NoChildren r0;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        r1 := @parameter0: groovy.lang.GroovyObject;

        return;
    }

    protected void replaceNode(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.util.slurpersupport.NoChildren r0;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        r1 := @parameter0: groovy.lang.Closure;

        return;
    }

    protected void replaceBody(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.util.slurpersupport.NoChildren r0;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    protected void appendNode(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.util.slurpersupport.NoChildren r0;

        r0 := @this: groovy.util.slurpersupport.NoChildren;

        r1 := @parameter0: java.lang.Object;

        return;
    }
}
