class com.google.gson.TypeInfo extends java.lang.Object
{
    protected final java.lang.reflect.Type actualType;
    protected final java.lang.Class rawClass;

    void <init>(java.lang.reflect.Type)
    {
        com.google.gson.TypeInfo r0;
        java.lang.Class $r2;
        java.lang.reflect.Type r1;

        r0 := @this: com.google.gson.TypeInfo;

        r1 := @parameter0: java.lang.reflect.Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gson.TypeInfo: java.lang.reflect.Type actualType> = r1;

        $r2 = staticinvoke <com.google.gson.TypeUtils: java.lang.Class toRawClass(java.lang.reflect.Type)>(r1);

        r0.<com.google.gson.TypeInfo: java.lang.Class rawClass> = $r2;

        return;
    }

    public final java.lang.reflect.Type getActualType()
    {
        com.google.gson.TypeInfo r0;
        java.lang.reflect.Type $r1;

        r0 := @this: com.google.gson.TypeInfo;

        $r1 = r0.<com.google.gson.TypeInfo: java.lang.reflect.Type actualType>;

        return $r1;
    }

    public final java.lang.Class getWrappedClass()
    {
        com.google.gson.TypeInfo r0;
        java.lang.Class $r1, $r2;

        r0 := @this: com.google.gson.TypeInfo;

        $r1 = r0.<com.google.gson.TypeInfo: java.lang.Class rawClass>;

        $r2 = staticinvoke <com.google.gson.Primitives: java.lang.Class wrap(java.lang.Class)>($r1);

        return $r2;
    }

    public final java.lang.Class getRawClass()
    {
        com.google.gson.TypeInfo r0;
        java.lang.Class $r1;

        r0 := @this: com.google.gson.TypeInfo;

        $r1 = r0.<com.google.gson.TypeInfo: java.lang.Class rawClass>;

        return $r1;
    }

    public final boolean isCollectionOrArray()
    {
        com.google.gson.TypeInfo r0;
        java.lang.Class $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gson.TypeInfo;

        $r2 = class "Ljava/util/Collection;";

        $r1 = r0.<com.google.gson.TypeInfo: java.lang.Class rawClass>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.google.gson.TypeInfo: boolean isArray()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public final boolean isArray()
    {
        com.google.gson.TypeInfo r0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: com.google.gson.TypeInfo;

        $r1 = r0.<com.google.gson.TypeInfo: java.lang.Class rawClass>;

        $z0 = staticinvoke <com.google.gson.TypeUtils: boolean isArray(java.lang.reflect.Type)>($r1);

        return $z0;
    }

    public final boolean isEnum()
    {
        com.google.gson.TypeInfo r0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: com.google.gson.TypeInfo;

        $r1 = r0.<com.google.gson.TypeInfo: java.lang.Class rawClass>;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isEnum()>();

        return $z0;
    }

    public final boolean isPrimitive()
    {
        com.google.gson.TypeInfo r0;
        java.lang.Class $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.gson.TypeInfo;

        $r1 = r0.<com.google.gson.TypeInfo: java.lang.Class rawClass>;

        $r2 = staticinvoke <com.google.gson.Primitives: java.lang.Class wrap(java.lang.Class)>($r1);

        $z0 = staticinvoke <com.google.gson.Primitives: boolean isWrapperType(java.lang.Class)>($r2);

        return $z0;
    }
}
