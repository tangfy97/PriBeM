public class org.eclipse.jdt.internal.compiler.ast.IfStatement extends org.eclipse.jdt.internal.compiler.ast.Statement
{
    public org.eclipse.jdt.internal.compiler.ast.Expression condition;
    public org.eclipse.jdt.internal.compiler.ast.Statement thenStatement;
    public org.eclipse.jdt.internal.compiler.ast.Statement elseStatement;
    int thenInitStateIndex;
    int elseInitStateIndex;
    int mergedInitStateIndex;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Statement, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        int i0, i1, $i2, $i3, $i5, $i7, $i9;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Statement;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        $i5 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int thenInitStateIndex> = $i5;

        $i7 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex> = $i7;

        $i9 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int mergedInitStateIndex> = $i9;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition> = r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement> = r2;

        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        if $z0 == 0 goto label1;

        $i2 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits>;

        $i3 = $i2 | 1;

        r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits> = $i3;

     label1:
        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int sourceStart> = i0;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int sourceEnd> = i1;

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Statement, org.eclipse.jdt.internal.compiler.ast.Statement, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement r2, r3;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Statement;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Statement;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        $i9 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int thenInitStateIndex> = $i9;

        $i11 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex> = $i11;

        $i13 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int mergedInitStateIndex> = $i13;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition> = r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement> = r2;

        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        if $z0 == 0 goto label1;

        $i6 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits>;

        $i7 = $i6 | 1;

        r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits> = $i7;

     label1:
        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement> = r3;

        $z1 = r3 instanceof org.eclipse.jdt.internal.compiler.ast.IfStatement;

        if $z1 == 0 goto label2;

        $i4 = r3.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits>;

        $i5 = $i4 | 536870912;

        r3.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits> = $i5;

     label2:
        $z2 = r3 instanceof org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        if $z2 == 0 goto label3;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits>;

        $i3 = $i2 | 1;

        r3.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits> = $i3;

     label3:
        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int sourceStart> = i0;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int sourceEnd> = i1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r15;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r17, $r24, $r27;
        org.eclipse.jdt.internal.compiler.ast.Statement $r10, $r11, $r13, $r14, $r16, $r18, $r19, $r25;
        org.eclipse.jdt.internal.compiler.ast.Expression $r4, $r6;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10;
        org.eclipse.jdt.internal.compiler.impl.Constant $r7, $r8, $r20;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3, $r5, $r9, $r21, r22, r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r0;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r12, $r26;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1, r2, r3);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        $r8 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r7 == $r8 goto label01;

        $z5 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z5 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $r20 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r7 == $r20 goto label03;

        $z4 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z4 != 0 goto label03;

        $z10 = 1;

        $z9 = 1;

        goto label04;

     label03:
        $z10 = 0;

        $z9 = 0;

     label04:
        z1 = $z10;

        $r21 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo safeInitsWhenTrue()>();

        r22 = $r21;

        if $z9 == 0 goto label05;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(1);

     label05:
        $r9 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse()>();

        r23 = $r9;

        if z0 == 0 goto label06;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(1);

     label06:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        if $r10 == null goto label07;

        $r17 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i4 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r21);

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int thenInitStateIndex> = $i4;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        $z3 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean complainIfUnreachable(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>($r21, r1, 0);

        if $z3 != 0 goto label07;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        r22 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.Statement: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1, r2, $r21);

     label07:
        $i5 = r22.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label08;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int bits>;

        $i3 = $i2 | 1073741824;

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int bits> = $i3;

     label08:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        if $r11 == null goto label10;

        $r12 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        if r22 != $r12 goto label09;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int bits>;

        $i1 = $i0 & 536870912;

        if $i1 != 0 goto label09;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        $z2 = $r14 instanceof org.eclipse.jdt.internal.compiler.ast.IfStatement;

        if $z2 != 0 goto label09;

        $r15 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryElse(org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r16);

     label09:
        $r24 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i7 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r9);

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex> = $i7;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        $z8 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean complainIfUnreachable(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>($r9, r1, 0);

        if $z8 != 0 goto label10;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        r23 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.Statement: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1, r2, $r9);

     label10:
        $r26 = staticinvoke <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedOptimizedBranches(org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean,org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean,boolean)>(r22, z0, r23, z1, 1);

        $r27 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i8 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r26);

        r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int mergedInitStateIndex> = $i8;

        return $r26;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r19;
        org.eclipse.jdt.internal.compiler.ast.Statement $r6, $r8, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r21;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r10, $r11, $r13;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11;
        org.eclipse.jdt.internal.compiler.impl.Constant $r4, $r5, $r7;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r9, $r24;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r22, $r23, $r25, $r26;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i21, $i23, $i25, $i27;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int bits>;

        $i1 = $i0 & -2147483648;

        if $i1 != 0 goto label01;

        return;

     label01:
        i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r25 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r25.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        $r5 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r4 == $r5 goto label02;

        $z6 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z6 == 0 goto label03;

     label02:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        if $r6 == null goto label03;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        $z5 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean isEmptyBlock()>();

        if $z5 == 0 goto label04;

     label03:
        $z7 = 0;

        goto label05;

     label04:
        $z7 = 1;

     label05:
        z0 = $z7;

        $r7 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r4 == $r7 goto label06;

        $z4 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z4 != 0 goto label07;

     label06:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        if $r8 == null goto label07;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        $z3 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean isEmptyBlock()>();

        if $z3 == 0 goto label08;

     label07:
        $z11 = 0;

        $z10 = 0;

        $z9 = 0;

        goto label09;

     label08:
        $z11 = 1;

        $z10 = 1;

        $z9 = 1;

     label09:
        z1 = $z9;

        if z0 == 0 goto label18;

        r22 = null;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $z10 == 0 goto label10;

        $r26 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        $r23 = $r26;

        specialinvoke $r26.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        r22 = $r26;

        goto label11;

     label10:
        $r23 = $r25;

     label11:
        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r9, r1, null, $r23, 1);

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int thenInitStateIndex>;

        $i21 = (int) -1;

        if $i10 == $i21 goto label12;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int thenInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i16);

        $i17 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int thenInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i17);

     label12:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.Statement: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r9, r1);

        if z1 == 0 goto label21;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int bits>;

        $i12 = $i11 & 1073741824;

        if $i12 != 0 goto label15;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.ast.Statement: void branchChainTo(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r25);

        i15 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r25);

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        $z2 = $r17 instanceof org.eclipse.jdt.internal.compiler.ast.Block;

        if $z2 == 0 goto label13;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        $r19 = (org.eclipse.jdt.internal.compiler.ast.Block) $r18;

        $r24 = $r19.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        goto label14;

     label13:
        $r24 = r9;

     label14:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void updateLastRecordedEndPC(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>($r24, i15);

     label15:
        $i18 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex>;

        $i23 = (int) -1;

        if $i18 == $i23 goto label16;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i13);

        $i14 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i14);

     label16:
        if r22 == null goto label17;

        virtualinvoke r22.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label17:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.Statement: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r9, r1);

        goto label21;

     label18:
        if $z11 == 0 goto label20;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r9, r1, $r25, null, 1);

        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex>;

        $i25 = (int) -1;

        if $i7 == $i25 goto label19;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i8);

        $i9 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int elseInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i9);

     label19:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.Statement: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r9, r1);

        goto label21;

     label20:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r9, r1, 0);

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i3);

     label21:
        $i19 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int mergedInitStateIndex>;

        $i27 = (int) -1;

        if $i19 == $i27 goto label22;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i5);

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i6);

     label22:
        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i4);

        return;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement $r5, $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3;
        java.lang.StringBuffer r0, $r1, $r4;
        int i0, $i1, $i2;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r2;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.IfStatement: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (");

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")\n");

        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        $i1 = i0 + 2;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Statement: java.lang.StringBuffer printStatement(int,java.lang.StringBuffer)>($i1, r0);

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        if $r6 == null goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.IfStatement: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("else\n");

        $r7 = r2.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        $i2 = i0 + 2;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Statement: java.lang.StringBuffer printStatement(int,java.lang.StringBuffer)>($i2, r0);

     label1:
        return r0;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r2;
        org.eclipse.jdt.internal.compiler.ast.Statement $r6, $r7, $r8, $r9;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r2 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeExpecting(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1, $r2);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1, $r4, $r4);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        if $r6 == null goto label1;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Statement: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1);

     label1:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        if $r7 == null goto label2;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Statement: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1);

     label2:
        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Statement $r4, $r5, $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r1;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.IfStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label2;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        if $r4 == null goto label1;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement thenStatement>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label1:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        if $r5 == null goto label2;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.IfStatement: org.eclipse.jdt.internal.compiler.ast.Statement elseStatement>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.IfStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
