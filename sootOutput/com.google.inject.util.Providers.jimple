public final class com.google.inject.util.Providers extends java.lang.Object
{

    private void <init>()
    {
        com.google.inject.util.Providers r0;

        r0 := @this: com.google.inject.util.Providers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.inject.Provider of(java.lang.Object)
    {
        com.google.inject.util.Providers$1 $r0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.google.inject.util.Providers$1;

        specialinvoke $r0.<com.google.inject.util.Providers$1: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public static com.google.inject.Provider guicify(javax.inject.Provider)
    {
        javax.inject.Provider r0, r2;
        java.util.HashSet $r5;
        com.google.inject.internal.util.$ImmutableSet $r7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r6;
        com.google.inject.util.Providers$2 $r12;
        java.util.Set $r4;
        com.google.inject.util.Providers$3 $r8;
        java.util.List $r11;
        com.google.inject.Provider $r13;
        com.google.inject.spi.InjectionPoint r10;
        java.lang.Object $r1, $r9;
        java.lang.Class $r3;

        r0 := @parameter0: javax.inject.Provider;

        $z0 = r0 instanceof com.google.inject.Provider;

        if $z0 == 0 goto label1;

        $r13 = (com.google.inject.Provider) r0;

        return $r13;

     label1:
        $r1 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "provider");

        r2 = (javax.inject.Provider) $r1;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <com.google.inject.spi.InjectionPoint: java.util.Set forInstanceMethodsAndFields(java.lang.Class)>($r3);

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r12 = new com.google.inject.util.Providers$2;

        specialinvoke $r12.<com.google.inject.util.Providers$2: void <init>(javax.inject.Provider)>(r2);

        return $r12;

     label2:
        $r5 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.HashSet newHashSet()>();

        $r6 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.google.inject.spi.InjectionPoint) $r9;

        $r11 = virtualinvoke r10.<com.google.inject.spi.InjectionPoint: java.util.List getDependencies()>();

        interfaceinvoke $r5.<java.util.Set: boolean addAll(java.util.Collection)>($r11);

        goto label3;

     label4:
        $r7 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet copyOf(java.lang.Iterable)>($r5);

        $r8 = new com.google.inject.util.Providers$3;

        specialinvoke $r8.<com.google.inject.util.Providers$3: void <init>(javax.inject.Provider,java.util.Set)>(r2, $r7);

        return $r8;
    }
}
