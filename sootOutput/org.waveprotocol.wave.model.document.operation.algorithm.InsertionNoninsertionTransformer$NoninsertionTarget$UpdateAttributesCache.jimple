final class org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache extends org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$RangeCache
{
    private final org.waveprotocol.wave.model.document.operation.AttributesUpdate update;
    final org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget this$0;

    void <init>(org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget, org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget r1;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r2;
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$RangeCache: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$1)>(null);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache: org.waveprotocol.wave.model.document.operation.AttributesUpdate update> = r2;

        return;
    }

    void resolve(int)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$InsertionTarget $r5;
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget $r1, $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3, $r6;
        int i0;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget this$0>;

        $r3 = $r1.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor targetDocument>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache: org.waveprotocol.wave.model.document.operation.AttributesUpdate update>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r2);

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$UpdateAttributesCache: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$InsertionTarget access$300(org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget)>($r4);

        $r6 = $r5.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$InsertionTarget: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor targetDocument>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void retain(int)>(1);

        return;
    }
}
