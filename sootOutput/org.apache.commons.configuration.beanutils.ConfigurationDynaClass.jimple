public class org.apache.commons.configuration.beanutils.ConfigurationDynaClass extends java.lang.Object implements org.apache.commons.beanutils.DynaClass
{
    private static org.apache.commons.logging.Log log;
    private org.apache.commons.configuration.Configuration configuration;
    static java.lang.Class class$org$apache$commons$configuration$beanutils$ConfigurationDynaClass;
    static java.lang.Class class$java$lang$Byte;
    static java.lang.Class class$java$lang$Character;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Double;
    static java.lang.Class class$java$lang$Float;
    static java.lang.Class class$java$lang$Integer;
    static java.lang.Class class$java$lang$Long;
    static java.lang.Class class$java$lang$Short;
    static java.lang.Class class$org$apache$commons$configuration$beanutils$ConfigurationDynaBean;

    public void <init>(org.apache.commons.configuration.Configuration)
    {
        org.apache.commons.configuration.Configuration r2;
        org.apache.commons.configuration.beanutils.ConfigurationDynaClass r0;
        java.lang.StringBuffer $r3, $r5, $r6, $r7;
        org.apache.commons.logging.Log $r1, $r4;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.beanutils.ConfigurationDynaClass;

        r2 := @parameter0: org.apache.commons.configuration.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ConfigurationDynaClass(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r8);

     label1:
        r0.<org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.configuration.Configuration configuration> = r2;

        return;
    }

    public org.apache.commons.beanutils.DynaProperty getDynaProperty(java.lang.String)
    {
        org.apache.commons.configuration.beanutils.ConfigurationDynaClass r2;
        boolean $z0;
        org.apache.commons.beanutils.DynaProperty $r37;
        org.apache.commons.configuration.Configuration $r3;
        java.lang.StringBuffer $r22, $r24, $r25, $r26;
        java.lang.String r1, $r27;
        java.lang.IllegalArgumentException $r21;
        org.apache.commons.logging.Log $r0, $r23;
        java.lang.Object $r4;
        java.lang.Class $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;

        r2 := @this: org.apache.commons.configuration.beanutils.ConfigurationDynaClass;

        r1 := @parameter0: java.lang.String;

        $r0 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z0 == 0 goto label01;

        $r23 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log>;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("getDynaProperty(");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r23.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r27);

     label01:
        if r1 != null goto label02;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property name must not be null!");

        throw $r21;

     label02:
        $r3 = r2.<org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.configuration.Configuration configuration>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.configuration.Configuration: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r4 != null goto label03;

        return null;

     label03:
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        r28 = $r5;

        $r6 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Byte>;

        if $r6 != null goto label04;

        $r29 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Byte> = $r29;

        goto label05;

     label04:
        $r29 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Byte>;

     label05:
        if $r5 != $r29 goto label06;

        r28 = <java.lang.Byte: java.lang.Class TYPE>;

     label06:
        $r20 = r28;

        $r7 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Character>;

        if $r7 != null goto label07;

        $r30 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Character> = $r30;

        goto label08;

     label07:
        $r30 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Character>;

     label08:
        if $r20 != $r30 goto label09;

        r28 = <java.lang.Character: java.lang.Class TYPE>;

        goto label27;

     label09:
        $r19 = r28;

        $r8 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Boolean>;

        if $r8 != null goto label10;

        $r31 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Boolean> = $r31;

        goto label11;

     label10:
        $r31 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Boolean>;

     label11:
        if $r19 != $r31 goto label12;

        r28 = <java.lang.Boolean: java.lang.Class TYPE>;

        goto label27;

     label12:
        $r18 = r28;

        $r9 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Double>;

        if $r9 != null goto label13;

        $r32 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Double> = $r32;

        goto label14;

     label13:
        $r32 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Double>;

     label14:
        if $r18 != $r32 goto label15;

        r28 = <java.lang.Double: java.lang.Class TYPE>;

        goto label27;

     label15:
        $r17 = r28;

        $r10 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Float>;

        if $r10 != null goto label16;

        $r33 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Float> = $r33;

        goto label17;

     label16:
        $r33 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Float>;

     label17:
        if $r17 != $r33 goto label18;

        r28 = <java.lang.Float: java.lang.Class TYPE>;

        goto label27;

     label18:
        $r16 = r28;

        $r11 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Integer>;

        if $r11 != null goto label19;

        $r34 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Integer> = $r34;

        goto label20;

     label19:
        $r34 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Integer>;

     label20:
        if $r16 != $r34 goto label21;

        r28 = <java.lang.Integer: java.lang.Class TYPE>;

        goto label27;

     label21:
        $r15 = r28;

        $r12 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Long>;

        if $r12 != null goto label22;

        $r35 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Long> = $r35;

        goto label23;

     label22:
        $r35 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Long>;

     label23:
        if $r15 != $r35 goto label24;

        r28 = <java.lang.Long: java.lang.Class TYPE>;

        goto label27;

     label24:
        $r14 = r28;

        $r13 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Short>;

        if $r13 != null goto label25;

        $r36 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Short> = $r36;

        goto label26;

     label25:
        $r36 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$java$lang$Short>;

     label26:
        if $r14 != $r36 goto label27;

        r28 = <java.lang.Short: java.lang.Class TYPE>;

     label27:
        $r37 = new org.apache.commons.beanutils.DynaProperty;

        specialinvoke $r37.<org.apache.commons.beanutils.DynaProperty: void <init>(java.lang.String,java.lang.Class)>(r1, r28);

        return $r37;
    }

    public org.apache.commons.beanutils.DynaProperty[] getDynaProperties()
    {
        org.apache.commons.configuration.Configuration $r2;
        java.util.ArrayList $r4;
        org.apache.commons.configuration.beanutils.ConfigurationDynaClass r1;
        java.lang.StringBuffer $r6, $r8, $r9, $r10;
        int $i0, $i1;
        java.lang.String $r11, r15;
        org.apache.commons.beanutils.DynaProperty[] r16;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3;
        org.apache.commons.beanutils.DynaProperty $r13;
        org.apache.commons.logging.Log $r0, $r5, $r7, $r14;
        java.lang.Object $r12;

        r1 := @this: org.apache.commons.configuration.beanutils.ConfigurationDynaClass;

        $r0 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r14 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log>;

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("getDynaProperties()");

     label1:
        $r2 = r1.<org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.configuration.Configuration configuration>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.configuration.Configuration: java.util.Iterator getKeys()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label2:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r12 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r12;

        $r13 = virtualinvoke r1.<org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.beanutils.DynaProperty getDynaProperty(java.lang.String)>(r15);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label2;

     label3:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r16 = newarray (org.apache.commons.beanutils.DynaProperty)[$i0];

        interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r16);

        $r5 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label4;

        $r7 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Found ");

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" properties.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r11);

     label4:
        return r16;
    }

    public java.lang.String getName()
    {
        org.apache.commons.configuration.beanutils.ConfigurationDynaClass r2;
        java.lang.Class $r0, $r3;
        java.lang.String $r1;

        r2 := @this: org.apache.commons.configuration.beanutils.ConfigurationDynaClass;

        $r0 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$org$apache$commons$configuration$beanutils$ConfigurationDynaBean>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.beanutils.ConfigurationDynaBean");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$org$apache$commons$configuration$beanutils$ConfigurationDynaBean> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$org$apache$commons$configuration$beanutils$ConfigurationDynaBean>;

     label2:
        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        return $r1;
    }

    public org.apache.commons.beanutils.DynaBean newInstance() throws java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        org.apache.commons.configuration.Configuration $r2;
        org.apache.commons.configuration.beanutils.ConfigurationDynaBean $r0;
        org.apache.commons.configuration.beanutils.ConfigurationDynaClass r1;

        r1 := @this: org.apache.commons.configuration.beanutils.ConfigurationDynaClass;

        $r0 = new org.apache.commons.configuration.beanutils.ConfigurationDynaBean;

        $r2 = r1.<org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.configuration.Configuration configuration>;

        specialinvoke $r0.<org.apache.commons.configuration.beanutils.ConfigurationDynaBean: void <init>(org.apache.commons.configuration.Configuration)>($r2);

        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$org$apache$commons$configuration$beanutils$ConfigurationDynaClass>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.beanutils.ConfigurationDynaClass");

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$org$apache$commons$configuration$beanutils$ConfigurationDynaClass> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: java.lang.Class class$org$apache$commons$configuration$beanutils$ConfigurationDynaClass>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        <org.apache.commons.configuration.beanutils.ConfigurationDynaClass: org.apache.commons.logging.Log log> = $r1;

        return;
    }
}
