public abstract class org.springframework.aop.aspectj.AspectJProxyUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.aop.aspectj.AspectJProxyUtils r0;

        r0 := @this: org.springframework.aop.aspectj.AspectJProxyUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean makeAdvisorChainAspectJCapableIfNecessary(java.util.List)
    {
        java.util.Iterator $r1;
        java.util.List r0;
        java.lang.Object $r2;
        org.springframework.aop.Advisor r3, $r4, $r5;
        boolean $z0, $z1, $z2, z3, $z4;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        z3 = 0;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.springframework.aop.Advisor) $r2;

        $z1 = staticinvoke <org.springframework.aop.aspectj.AspectJProxyUtils: boolean isAspectJAdvice(org.springframework.aop.Advisor)>(r3);

        if $z1 == 0 goto label2;

        z3 = 1;

     label2:
        $z4 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label1;

        if z3 == 0 goto label3;

        $r4 = <org.springframework.aop.interceptor.ExposeInvocationInterceptor: org.springframework.aop.Advisor ADVISOR>;

        $z2 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z2 != 0 goto label3;

        $r5 = <org.springframework.aop.interceptor.ExposeInvocationInterceptor: org.springframework.aop.Advisor ADVISOR>;

        interfaceinvoke r0.<java.util.List: void add(int,java.lang.Object)>(0, $r5);

        return 1;

     label3:
        return 0;
    }

    private static boolean isAspectJAdvice(org.springframework.aop.Advisor)
    {
        org.springframework.aop.PointcutAdvisor $r2;
        org.springframework.aop.Pointcut $r3;
        org.aopalliance.aop.Advice $r1;
        org.springframework.aop.Advisor r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.springframework.aop.Advisor;

        $z0 = r0 instanceof org.springframework.aop.aspectj.InstantiationModelAwarePointcutAdvisor;

        if $z0 != 0 goto label2;

        $r1 = interfaceinvoke r0.<org.springframework.aop.Advisor: org.aopalliance.aop.Advice getAdvice()>();

        $z1 = $r1 instanceof org.springframework.aop.aspectj.AbstractAspectJAdvice;

        if $z1 != 0 goto label2;

        $z2 = r0 instanceof org.springframework.aop.PointcutAdvisor;

        if $z2 == 0 goto label1;

        $r2 = (org.springframework.aop.PointcutAdvisor) r0;

        $r3 = interfaceinvoke $r2.<org.springframework.aop.PointcutAdvisor: org.springframework.aop.Pointcut getPointcut()>();

        $z3 = $r3 instanceof org.springframework.aop.aspectj.AspectJExpressionPointcut;

        if $z3 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
