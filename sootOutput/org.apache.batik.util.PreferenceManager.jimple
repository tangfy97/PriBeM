public class org.apache.batik.util.PreferenceManager extends java.lang.Object
{
    protected java.util.Properties internal;
    protected java.util.Map defaults;
    protected java.lang.String prefFileName;
    protected java.lang.String fullName;
    protected static final java.lang.String USER_HOME;
    protected static final java.lang.String USER_DIR;
    protected static final java.lang.String FILE_SEP;
    private static java.lang.String PREF_DIR;

    protected static java.lang.String getSystemProperty(java.lang.String)
    {
        java.security.AccessControlException $r2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        return "";

        catch java.security.AccessControlException from label1 to label2 with label2;
    }

    public void <init>(java.lang.String)
    {
        org.apache.batik.util.PreferenceManager r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.util.PreferenceManager: void <init>(java.lang.String,java.util.Map)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        java.util.Properties $r3;
        java.util.Map r2;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal> = null;

        r0.<org.apache.batik.util.PreferenceManager: java.util.Map defaults> = null;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String prefFileName> = null;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = null;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String prefFileName> = r1;

        r0.<org.apache.batik.util.PreferenceManager: java.util.Map defaults> = r2;

        $r3 = new java.util.Properties;

        specialinvoke $r3.<java.util.Properties: void <init>()>();

        r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal> = $r3;

        return;
    }

    public static void setPreferenceDirectory(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <org.apache.batik.util.PreferenceManager: java.lang.String PREF_DIR> = r0;

        return;
    }

    public static java.lang.String getPreferenceDirectory()
    {
        java.lang.String $r0;

        $r0 = <org.apache.batik.util.PreferenceManager: java.lang.String PREF_DIR>;

        return $r0;
    }

    public void load() throws java.io.IOException
    {
        java.lang.Throwable $r24;
        java.lang.StringBuffer $r5, $r7, $r9, $r11, $r14, $r16, $r18, $r20, $r28, $r30, $r32, $r34;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.String $r1, $r3, $r6, $r8, $r10, $r12, $r15, $r17, $r19, $r21, $r23, $r29, $r31, $r33, $r35, $r39, $r40, $r41;
        java.util.Properties $r2;
        java.io.IOException $r25, $r26, $r36, $r37;
        java.io.FileInputStream $r4, $r13, $r22, $r27, r38;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r38 = null;

        $r1 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        if $r1 == null goto label04;

     label01:
        $r22 = new java.io.FileInputStream;

        $r23 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        specialinvoke $r22.<java.io.FileInputStream: void <init>(java.lang.String)>($r23);

        r38 = $r22;

     label02:
        goto label04;

     label03:
        $r37 := @caughtexception;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = null;

     label04:
        $r39 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        if $r39 != null goto label15;

        $r3 = <org.apache.batik.util.PreferenceManager: java.lang.String PREF_DIR>;

        if $r3 == null goto label08;

     label05:
        $r13 = new java.io.FileInputStream;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = <org.apache.batik.util.PreferenceManager: java.lang.String PREF_DIR>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = <org.apache.batik.util.PreferenceManager: java.lang.String FILE_SEP>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String prefFileName>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = $r21;

        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.lang.String)>($r21);

        r38 = $r13;

     label06:
        goto label08;

     label07:
        $r36 := @caughtexception;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = null;

     label08:
        $r40 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        if $r40 != null goto label15;

     label09:
        $r4 = new java.io.FileInputStream;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = <org.apache.batik.util.PreferenceManager: java.lang.String USER_HOME>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = <org.apache.batik.util.PreferenceManager: java.lang.String FILE_SEP>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String prefFileName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = $r12;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r12);

        r38 = $r4;

     label10:
        goto label15;

     label11:
        $r26 := @caughtexception;

     label12:
        $r27 = new java.io.FileInputStream;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = <org.apache.batik.util.PreferenceManager: java.lang.String USER_DIR>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = <org.apache.batik.util.PreferenceManager: java.lang.String FILE_SEP>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String prefFileName>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = $r35;

        specialinvoke $r27.<java.io.FileInputStream: void <init>(java.lang.String)>($r35);

        r38 = $r27;

     label13:
        goto label15;

     label14:
        $r25 := @caughtexception;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = null;

     label15:
        $r41 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        if $r41 == null goto label20;

     label16:
        $r2 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>(r38);

        goto label21;

     label17:
        goto label20;

     label18:
        $r24 := @caughtexception;

        goto label22;

     label19:
        throw $r24;

     label20:
        return;

     label21:
        virtualinvoke r38.<java.io.FileInputStream: void close()>();

        goto label17;

     label22:
        virtualinvoke r38.<java.io.FileInputStream: void close()>();

        goto label19;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label18 with label18;
    }

    public void save() throws java.io.IOException
    {
        java.lang.Throwable $r23;
        java.lang.StringBuffer $r4, $r6, $r8, $r10, $r13, $r15, $r17, $r19;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.String $r1, $r2, $r5, $r7, $r9, $r11, $r14, $r16, $r18, $r20, $r22, $r28, $r29, $r31;
        java.util.Properties $r30;
        java.io.FileOutputStream $r3, $r12, $r21, r27;
        java.io.IOException $r24, $r25, $r26;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r27 = null;

        $r1 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        if $r1 == null goto label04;

     label01:
        $r21 = new java.io.FileOutputStream;

        $r22 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        specialinvoke $r21.<java.io.FileOutputStream: void <init>(java.lang.String)>($r22);

        r27 = $r21;

     label02:
        goto label04;

     label03:
        $r26 := @caughtexception;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = null;

     label04:
        $r28 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        if $r28 != null goto label12;

        $r2 = <org.apache.batik.util.PreferenceManager: java.lang.String PREF_DIR>;

        if $r2 == null goto label08;

     label05:
        $r12 = new java.io.FileOutputStream;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = <org.apache.batik.util.PreferenceManager: java.lang.String PREF_DIR>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = <org.apache.batik.util.PreferenceManager: java.lang.String FILE_SEP>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String prefFileName>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = $r20;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.lang.String)>($r20);

        r27 = $r12;

     label06:
        goto label08;

     label07:
        $r25 := @caughtexception;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = null;

     label08:
        $r29 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName>;

        if $r29 != null goto label12;

     label09:
        $r3 = new java.io.FileOutputStream;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = <org.apache.batik.util.PreferenceManager: java.lang.String USER_HOME>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = <org.apache.batik.util.PreferenceManager: java.lang.String FILE_SEP>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String prefFileName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = $r11;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r11);

        r27 = $r3;

     label10:
        goto label12;

     label11:
        $r24 := @caughtexception;

        r0.<org.apache.batik.util.PreferenceManager: java.lang.String fullName> = null;

        throw $r24;

     label12:
        $r30 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r31 = r0.<org.apache.batik.util.PreferenceManager: java.lang.String prefFileName>;

        virtualinvoke $r30.<java.util.Properties: void store(java.io.OutputStream,java.lang.String)>(r27, $r31);

        goto label17;

     label13:
        goto label16;

     label14:
        $r23 := @caughtexception;

        goto label18;

     label15:
        throw $r23;

     label16:
        return;

     label17:
        virtualinvoke r27.<java.io.FileOutputStream: void close()>();

        goto label13;

     label18:
        virtualinvoke r27.<java.io.FileOutputStream: void close()>();

        goto label15;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label14 with label14;
    }

    private java.lang.Object getDefault(java.lang.String)
    {
        java.util.Map $r1, $r3;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.util.PreferenceManager: java.util.Map defaults>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.util.PreferenceManager: java.util.Map defaults>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        return $r4;

     label1:
        return null;
    }

    public java.awt.Rectangle getRectangle(java.lang.String)
    {
        java.awt.Rectangle r3, $r6;
        java.util.StringTokenizer $r7;
        org.apache.batik.util.PreferenceManager r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, $r5, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.Properties $r4, $r12, $r13, $r14, $r15, $r17;
        java.lang.NumberFormatException $r16;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        r3 = (java.awt.Rectangle) $r2;

        $r4 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r5 != null goto label1;

        return r3;

     label1:
        $r6 = new java.awt.Rectangle;

        specialinvoke $r6.<java.awt.Rectangle: void <init>()>();

     label2:
        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, " ", 0);

        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label3;

        $r15 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r15.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label3:
        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $z1 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label4;

        $r14 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label4:
        $r9 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $z2 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 != 0 goto label5;

        $r13 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label5:
        $r10 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $z3 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 != 0 goto label6;

        $r12 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label6:
        $r11 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        virtualinvoke $r6.<java.awt.Rectangle: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r6;

     label7:
        $r16 := @caughtexception;

        $r17 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

        catch java.lang.NumberFormatException from label2 to label7 with label7;
    }

    public java.awt.Dimension getDimension(java.lang.String)
    {
        java.util.StringTokenizer $r7;
        org.apache.batik.util.PreferenceManager r0;
        int $i0, $i1;
        java.lang.String r1, $r5, $r8, $r9;
        boolean $z0, $z1;
        java.util.Properties $r4, $r10, $r11, $r13;
        java.lang.NumberFormatException $r12;
        java.awt.Dimension r3, $r6;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        r3 = (java.awt.Dimension) $r2;

        $r4 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r5 != null goto label1;

        return r3;

     label1:
        $r6 = new java.awt.Dimension;

        specialinvoke $r6.<java.awt.Dimension: void <init>()>();

     label2:
        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, " ", 0);

        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label3;

        $r11 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label3:
        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $z1 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label4;

        $r10 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label4:
        $r9 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        virtualinvoke $r6.<java.awt.Dimension: void setSize(int,int)>($i0, $i1);

        return $r6;

     label5:
        $r12 := @caughtexception;

        $r13 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

        catch java.lang.NumberFormatException from label2 to label5 with label5;
    }

    public java.awt.Point getPoint(java.lang.String)
    {
        java.awt.Point r3, $r6;
        java.util.StringTokenizer $r7;
        org.apache.batik.util.PreferenceManager r0;
        int $i0, $i1;
        java.lang.String r1, $r5, $r8, $r9;
        boolean $z0, $z1, $z2;
        java.util.Properties $r4, $r10, $r11, $r12, $r14;
        java.lang.NumberFormatException $r13;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        r3 = (java.awt.Point) $r2;

        $r4 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r5 != null goto label1;

        return r3;

     label1:
        $r6 = new java.awt.Point;

        specialinvoke $r6.<java.awt.Point: void <init>()>();

     label2:
        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, " ", 0);

        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label3;

        $r12 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label3:
        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $z1 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label4;

        $r11 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label4:
        $r9 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $z2 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 != 0 goto label5;

        $r10 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label5:
        virtualinvoke $r6.<java.awt.Point: void setLocation(int,int)>($i0, $i1);

        return $r6;

     label6:
        $r13 := @caughtexception;

        $r14 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

        catch java.lang.NumberFormatException from label2 to label6 with label6;
    }

    public java.awt.Color getColor(java.lang.String)
    {
        java.awt.Color r3, $r11;
        java.util.StringTokenizer $r6;
        org.apache.batik.util.PreferenceManager r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, $r5, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.util.Properties $r4, $r12, $r13, $r14, $r15, $r17;
        java.lang.NumberFormatException $r16;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        r3 = (java.awt.Color) $r2;

        $r4 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r5 != null goto label1;

        return r3;

     label1:
        $r6 = new java.util.StringTokenizer;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, " ", 0);

        $z0 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label2;

        $r15 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r15.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label2:
        $r7 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $z1 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label3;

        $r14 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label3:
        $r8 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $z2 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 != 0 goto label4;

        $r13 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label4:
        $r9 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $z3 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 != 0 goto label5;

        $r12 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label5:
        $r10 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r11 = new java.awt.Color;

        specialinvoke $r11.<java.awt.Color: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r11;

     label6:
        $r16 := @caughtexception;

        $r17 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

        catch java.lang.NumberFormatException from label1 to label6 with label6;
    }

    public java.awt.Font getFont(java.lang.String)
    {
        java.util.StringTokenizer $r6;
        org.apache.batik.util.PreferenceManager r0;
        int $i0, $i1;
        java.lang.String r1, $r5, $r7, $r8, $r9;
        boolean $z0, $z1, $z2;
        java.util.Properties $r4, $r11, $r12, $r13, $r15;
        java.awt.Font r3, $r10;
        java.lang.NumberFormatException $r14;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        r3 = (java.awt.Font) $r2;

        $r4 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r5 != null goto label1;

        return r3;

     label1:
        $r6 = new java.util.StringTokenizer;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, " ", 0);

        $z0 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label2;

        $r13 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label2:
        $r7 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label3;

        $r12 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label3:
        $r8 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $z2 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 != 0 goto label4;

        $r11 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label4:
        $r9 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = new java.awt.Font;

        specialinvoke $r10.<java.awt.Font: void <init>(java.lang.String,int,int)>($r7, $i1, $i0);

        return $r10;

     label5:
        $r14 := @caughtexception;

        $r15 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r15.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

        catch java.lang.NumberFormatException from label1 to label5 with label5;
    }

    public java.lang.String getString(java.lang.String)
    {
        java.util.Properties $r2;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.Object $r4;
        java.lang.String r1, $r3, r5;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        r5 = $r3;

        if $r3 != null goto label1;

        $r4 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        r5 = (java.lang.String) $r4;

     label1:
        return r5;
    }

    public java.lang.String[] getStrings(java.lang.String)
    {
        java.lang.Object[] $r11;
        java.lang.String[] $r9, r10, $r12;
        java.util.ArrayList $r0;
        java.lang.StringBuffer $r2, $r4, $r5;
        org.apache.batik.util.PreferenceManager r1;
        int $i0, $i1, i2;
        java.lang.String r3, $r6, $r7;
        java.lang.Object $r8;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r3 := @parameter0: java.lang.String;

        i2 = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        goto label1;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.String getString(java.lang.String)>($r6);

        i2 = i2 + 1;

        if $r7 != null goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label3:
        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label4;

        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        r10 = newarray (java.lang.String)[$i1];

        $r11 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r10);

        $r12 = (java.lang.String[]) $r11;

        return $r12;

     label4:
        $r8 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r3);

        $r9 = (java.lang.String[]) $r8;

        return $r9;
    }

    public java.net.URL getURL(java.lang.String)
    {
        java.util.Properties $r4, $r8;
        java.net.MalformedURLException $r7;
        java.net.URL r3, $r6;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.Object $r2;
        java.lang.String r1, $r5;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        r3 = (java.net.URL) $r2;

        $r4 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r5 != null goto label1;

        return r3;

     label1:
        $r6 = new java.net.URL;

        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;

     label4:
        return $r6;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public java.net.URL[] getURLs(java.lang.String)
    {
        java.lang.Object[] $r11;
        java.net.URL $r7;
        java.util.ArrayList $r0;
        java.net.URL[] $r9, r10, $r12;
        java.lang.StringBuffer $r2, $r4, $r5;
        org.apache.batik.util.PreferenceManager r1;
        int $i0, $i1, i2;
        java.lang.String r3, $r6;
        java.lang.Object $r8;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r3 := @parameter0: java.lang.String;

        i2 = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        goto label1;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<org.apache.batik.util.PreferenceManager: java.net.URL getURL(java.lang.String)>($r6);

        i2 = i2 + 1;

        if $r7 != null goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label3:
        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label4;

        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        r10 = newarray (java.net.URL)[$i1];

        $r11 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r10);

        $r12 = (java.net.URL[]) $r11;

        return $r12;

     label4:
        $r8 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r3);

        $r9 = (java.net.URL[]) $r8;

        return $r9;
    }

    public java.io.File getFile(java.lang.String)
    {
        java.util.Properties $r4, $r7;
        java.io.File r3, $r6;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.Object $r2;
        java.lang.String r1, $r5;
        boolean $z0;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        r3 = (java.io.File) $r2;

        $r4 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r5 != null goto label1;

        return r3;

     label1:
        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        return $r6;

     label2:
        $r7 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;
    }

    public java.io.File[] getFiles(java.lang.String)
    {
        java.lang.Object[] $r11;
        java.util.ArrayList $r0;
        java.lang.StringBuffer $r2, $r4, $r5;
        org.apache.batik.util.PreferenceManager r1;
        int $i0, $i1, i2;
        java.lang.String r3, $r6;
        java.io.File $r7;
        java.lang.Object $r8;
        java.io.File[] $r9, r10, $r12;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r3 := @parameter0: java.lang.String;

        i2 = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        goto label1;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<org.apache.batik.util.PreferenceManager: java.io.File getFile(java.lang.String)>($r6);

        i2 = i2 + 1;

        if $r7 != null goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label3:
        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label4;

        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        r10 = newarray (java.io.File)[$i1];

        $r11 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r10);

        $r12 = (java.io.File[]) $r11;

        return $r12;

     label4:
        $r8 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r3);

        $r9 = (java.io.File[]) $r8;

        return $r9;
    }

    public int getInteger(java.lang.String)
    {
        java.util.Properties $r3, $r8;
        java.lang.NumberFormatException $r7;
        java.lang.Integer $r6;
        org.apache.batik.util.PreferenceManager r0;
        int $i0, i1;
        java.lang.Object $r2, $r5;
        java.lang.String r1, $r4;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        i1 = 0;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r5 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        $r6 = (java.lang.Integer) $r5;

        i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label1:
        $r3 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r4 != null goto label2;

        return i1;

     label2:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return i1;

     label5:
        return $i0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public float getFloat(java.lang.String)
    {
        java.lang.Float $r6;
        java.util.Properties $r3;
        java.lang.NumberFormatException $r7;
        org.apache.batik.util.PreferenceManager r0;
        float $f0, f1;
        java.lang.Object $r2, $r5;
        java.lang.String r1, $r4;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        f1 = 0.0F;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r5 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        $r6 = (java.lang.Float) $r5;

        f1 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

     label1:
        $r3 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r4 != null goto label2;

        return f1;

     label2:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        virtualinvoke r0.<org.apache.batik.util.PreferenceManager: void setFloat(java.lang.String,float)>(r1, f1);

        return f1;

     label5:
        return $f0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public boolean getBoolean(java.lang.String)
    {
        java.util.Properties $r2, $r7;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.Boolean $r6;
        java.lang.Object $r4, $r5;
        java.lang.String r1, $r3, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r3 == null goto label1;

        $r7 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r8 = virtualinvoke $r7.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("true");

        return $z1;

     label1:
        $r4 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        if $r4 == null goto label2;

        $r5 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        return 0;
    }

    public void setRectangle(java.lang.String, java.awt.Rectangle)
    {
        java.awt.Rectangle r0;
        java.lang.StringBuffer $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.apache.batik.util.PreferenceManager r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String r2, $r14;
        boolean $z0;
        java.util.Properties $r3, $r6;
        java.lang.Object $r4;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Rectangle;

        if r0 == null goto label1;

        $r4 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.awt.Rectangle: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r6 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i0 = r0.<java.awt.Rectangle: int x>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i1 = r0.<java.awt.Rectangle: int y>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i2 = r0.<java.awt.Rectangle: int width>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i3 = r0.<java.awt.Rectangle: int height>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r2, $r14);

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void setDimension(java.lang.String, java.awt.Dimension)
    {
        java.util.Properties $r3, $r6;
        java.awt.Dimension r0;
        java.lang.StringBuffer $r5, $r7, $r8, $r9;
        org.apache.batik.util.PreferenceManager r1;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String r2, $r10;
        boolean $z0;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Dimension;

        if r0 == null goto label1;

        $r4 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.awt.Dimension: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r6 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i0 = r0.<java.awt.Dimension: int width>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i1 = r0.<java.awt.Dimension: int height>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r2, $r10);

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void setPoint(java.lang.String, java.awt.Point)
    {
        java.util.Properties $r3, $r6;
        java.awt.Point r0;
        java.lang.StringBuffer $r5, $r7, $r8, $r9;
        org.apache.batik.util.PreferenceManager r1;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String r2, $r10;
        boolean $z0;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Point;

        if r0 == null goto label1;

        $r4 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.awt.Point: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r6 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i0 = r0.<java.awt.Point: int x>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i1 = r0.<java.awt.Point: int y>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r2, $r10);

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void setColor(java.lang.String, java.awt.Color)
    {
        java.awt.Color r0;
        java.lang.StringBuffer $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.apache.batik.util.PreferenceManager r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String r2, $r14;
        boolean $z0;
        java.util.Properties $r3, $r6;
        java.lang.Object $r4;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Color;

        if r0 == null goto label1;

        $r4 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.awt.Color: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r6 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i3 = virtualinvoke r0.<java.awt.Color: int getAlpha()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r2, $r14);

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void setFont(java.lang.String, java.awt.Font)
    {
        java.lang.StringBuffer $r5, $r8, $r9, $r10, $r11, $r12;
        org.apache.batik.util.PreferenceManager r1;
        int $i0, $i1;
        java.lang.String r2, $r7, $r13;
        boolean $z0;
        java.util.Properties $r3, $r6;
        java.awt.Font r0;
        java.lang.Object $r4;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Font;

        if r0 == null goto label1;

        $r4 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.awt.Font: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r6 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke r0.<java.awt.Font: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i0 = virtualinvoke r0.<java.awt.Font: int getSize()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i1 = virtualinvoke r0.<java.awt.Font: int getStyle()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r2, $r13);

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void setString(java.lang.String, java.lang.String)
    {
        java.util.Properties $r3, $r5;
        org.apache.batik.util.PreferenceManager r1;
        java.lang.Object $r4;
        java.lang.String r0, r2;
        boolean $z0;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r4 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r5.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r2, r0);

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void setStrings(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuffer $r3, $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r15;
        org.apache.batik.util.PreferenceManager r1;
        int i0, i1, $i2;
        java.lang.String r2, $r6, $r7, $r11, $r12, $r16, $r17;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        i0 = 0;

        if r0 == null goto label4;

        i1 = 0;

        goto label3;

     label1:
        $r7 = r0[i1];

        if $r7 == null goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = r0[i1];

        virtualinvoke r1.<org.apache.batik.util.PreferenceManager: void setString(java.lang.String,java.lang.String)>($r11, $r12);

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

     label3:
        $i2 = lengthof r0;

        if i1 < $i2 goto label1;

        goto label4;

     label4:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r17 = virtualinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.String getString(java.lang.String)>($r16);

        if $r17 != null goto label5;

        goto label6;

     label5:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.util.PreferenceManager: void setString(java.lang.String,java.lang.String)>($r6, null);

        i0 = i0 + 1;

        goto label4;

     label6:
        return;
    }

    public void setURL(java.lang.String, java.net.URL)
    {
        java.util.Properties $r3, $r5;
        java.net.URL r0;
        org.apache.batik.util.PreferenceManager r1;
        java.lang.Object $r4;
        java.lang.String r2, $r6;
        boolean $z0;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.net.URL;

        if r0 == null goto label1;

        $r4 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.net.URL: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r6 = virtualinvoke r0.<java.net.URL: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r2, $r6);

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void setURLs(java.lang.String, java.net.URL[])
    {
        java.net.URL $r7, $r12;
        java.net.URL[] r0;
        java.lang.StringBuffer $r3, $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r15;
        org.apache.batik.util.PreferenceManager r1;
        int i0, i1, $i2;
        java.lang.String r2, $r6, $r11, $r16, $r17;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.net.URL[];

        i0 = 0;

        if r0 == null goto label4;

        i1 = 0;

        goto label3;

     label1:
        $r7 = r0[i1];

        if $r7 == null goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = r0[i1];

        virtualinvoke r1.<org.apache.batik.util.PreferenceManager: void setURL(java.lang.String,java.net.URL)>($r11, $r12);

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

     label3:
        $i2 = lengthof r0;

        if i1 < $i2 goto label1;

        goto label4;

     label4:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r17 = virtualinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.String getString(java.lang.String)>($r16);

        if $r17 != null goto label5;

        goto label6;

     label5:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.util.PreferenceManager: void setString(java.lang.String,java.lang.String)>($r6, null);

        i0 = i0 + 1;

        goto label4;

     label6:
        return;
    }

    public void setFile(java.lang.String, java.io.File)
    {
        java.util.Properties $r3, $r5;
        java.io.File r0;
        org.apache.batik.util.PreferenceManager r1;
        java.lang.Object $r4;
        java.lang.String r2, $r6;
        boolean $z0;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.io.File;

        if r0 == null goto label1;

        $r4 = specialinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.io.File: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r6 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r5.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r2, $r6);

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void setFiles(java.lang.String, java.io.File[])
    {
        java.lang.StringBuffer $r3, $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r15;
        org.apache.batik.util.PreferenceManager r1;
        int i0, i1, $i2;
        java.lang.String r2, $r6, $r11, $r16, $r17;
        java.io.File $r7, $r12;
        java.io.File[] r0;

        r1 := @this: org.apache.batik.util.PreferenceManager;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.io.File[];

        i0 = 0;

        if r0 == null goto label4;

        i1 = 0;

        goto label3;

     label1:
        $r7 = r0[i1];

        if $r7 == null goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = r0[i1];

        virtualinvoke r1.<org.apache.batik.util.PreferenceManager: void setFile(java.lang.String,java.io.File)>($r11, $r12);

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

     label3:
        $i2 = lengthof r0;

        if i1 < $i2 goto label1;

        goto label4;

     label4:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r17 = virtualinvoke r1.<org.apache.batik.util.PreferenceManager: java.lang.String getString(java.lang.String)>($r16);

        if $r17 != null goto label5;

        goto label6;

     label5:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.util.PreferenceManager: void setString(java.lang.String,java.lang.String)>($r6, null);

        i0 = i0 + 1;

        goto label4;

     label6:
        return;
    }

    public void setInteger(java.lang.String, int)
    {
        java.util.Properties $r3, $r6;
        java.lang.Integer $r5;
        org.apache.batik.util.PreferenceManager r0;
        int $i0, i1;
        java.lang.Object $r2, $r4;
        java.lang.String r1, $r7;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r4 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 == i1 goto label1;

        $r6 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke $r6.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r1, $r7);

        goto label2;

     label1:
        $r3 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void setFloat(java.lang.String, float)
    {
        java.lang.Float $r5;
        java.util.Properties $r3, $r6;
        byte $b0;
        org.apache.batik.util.PreferenceManager r0;
        float $f0, f1;
        java.lang.Object $r2, $r4;
        java.lang.String r1, $r7;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        f1 := @parameter1: float;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r4 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        $r5 = (java.lang.Float) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        $b0 = $f0 cmpl f1;

        if $b0 == 0 goto label1;

        $r6 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        $r7 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f1);

        virtualinvoke $r6.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r1, $r7);

        goto label2;

     label1:
        $r3 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void setBoolean(java.lang.String, boolean)
    {
        java.util.Properties $r3, $r6;
        org.apache.batik.util.PreferenceManager r0;
        java.lang.Boolean $r5;
        java.lang.Object $r2, $r4;
        java.lang.String r1, $r7;
        boolean $z0, z1;

        r0 := @this: org.apache.batik.util.PreferenceManager;

        r1 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        $r2 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        if $r2 == null goto label3;

        $r4 = specialinvoke r0.<org.apache.batik.util.PreferenceManager: java.lang.Object getDefault(java.lang.String)>(r1);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == z1 goto label3;

        $r6 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        if z1 == 0 goto label1;

        $r7 = "true";

        goto label2;

     label1:
        $r7 = "false";

     label2:
        virtualinvoke $r6.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r1, $r7);

        goto label4;

     label3:
        $r3 = r0.<org.apache.batik.util.PreferenceManager: java.util.Properties internal>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2;

        $r0 = staticinvoke <org.apache.batik.util.PreferenceManager: java.lang.String getSystemProperty(java.lang.String)>("user.home");

        <org.apache.batik.util.PreferenceManager: java.lang.String USER_HOME> = $r0;

        $r1 = staticinvoke <org.apache.batik.util.PreferenceManager: java.lang.String getSystemProperty(java.lang.String)>("user.dir");

        <org.apache.batik.util.PreferenceManager: java.lang.String USER_DIR> = $r1;

        $r2 = staticinvoke <org.apache.batik.util.PreferenceManager: java.lang.String getSystemProperty(java.lang.String)>("file.separator");

        <org.apache.batik.util.PreferenceManager: java.lang.String FILE_SEP> = $r2;

        <org.apache.batik.util.PreferenceManager: java.lang.String PREF_DIR> = null;

        return;
    }
}
