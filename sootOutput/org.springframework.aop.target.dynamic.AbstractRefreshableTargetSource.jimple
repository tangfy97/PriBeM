public abstract class org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource extends java.lang.Object implements org.springframework.aop.TargetSource, org.springframework.aop.target.dynamic.Refreshable
{
    protected org.apache.commons.logging.Log logger;
    protected java.lang.Object targetObject;
    private long refreshCheckDelay;
    private long lastRefreshCheck;
    private long lastRefreshTime;
    private long refreshCount;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: org.apache.commons.logging.Log logger> = $r2;

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long refreshCheckDelay> = -1L;

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long lastRefreshCheck> = -1L;

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long lastRefreshTime> = -1L;

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long refreshCount> = 0L;

        return;
    }

    public void setRefreshCheckDelay(long)
    {
        long l0;
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        l0 := @parameter0: long;

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long refreshCheckDelay> = l0;

        return;
    }

    public synchronized java.lang.Class getTargetClass()
    {
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;
        java.lang.Object $r1, $r2;
        java.lang.Class $r3;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        $r1 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: java.lang.Object targetObject>;

        if $r1 != null goto label1;

        virtualinvoke r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: void refresh()>();

     label1:
        $r2 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: java.lang.Object targetObject>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        return $r3;
    }

    public boolean isStatic()
    {
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        return 0;
    }

    public final synchronized java.lang.Object getTarget()
    {
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;
        java.lang.Object $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        $z0 = specialinvoke r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: boolean refreshCheckDelayElapsed()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: boolean requiresRefresh()>();

        if $z1 != 0 goto label2;

     label1:
        $r1 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: java.lang.Object targetObject>;

        if $r1 != null goto label3;

     label2:
        virtualinvoke r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: void refresh()>();

     label3:
        $r2 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: java.lang.Object targetObject>;

        return $r2;
    }

    public void releaseTarget(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public final synchronized void refresh()
    {
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;
        org.apache.commons.logging.Log $r1, $r3;
        java.lang.Object $r2;
        long $l0, $l1, $l2;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        $r1 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Attempting to refresh target");

        $r2 = virtualinvoke r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: java.lang.Object freshTarget()>();

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: java.lang.Object targetObject> = $r2;

        $l0 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long refreshCount>;

        $l1 = $l0 + 1L;

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long refreshCount> = $l1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long lastRefreshTime> = $l2;

        $r3 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Target refreshed successfully");

        return;
    }

    public synchronized long getRefreshCount()
    {
        long $l0;
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        $l0 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long refreshCount>;

        return $l0;
    }

    public synchronized long getLastRefreshTime()
    {
        long $l0;
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        $l0 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long lastRefreshTime>;

        return $l0;
    }

    private boolean refreshCheckDelayElapsed()
    {
        long $l0, $l2, $l3, $l5, $l6, $l7;
        byte $b1, $b4, $b8;
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;
        int $i9, $i10, $i11;
        org.apache.commons.logging.Log $r1;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        $l0 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long refreshCheckDelay>;

        $b1 = $l0 cmp 0L;

        $i9 = (int) $b1;

        if $i9 >= 0 goto label1;

        return 0;

     label1:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long lastRefreshCheck>;

        $b4 = $l3 cmp 0L;

        $i10 = (int) $b4;

        if $i10 < 0 goto label2;

        $l5 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long lastRefreshCheck>;

        $l7 = $l2 - $l5;

        $l6 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long refreshCheckDelay>;

        $b8 = $l7 cmp $l6;

        $i11 = (int) $b8;

        if $i11 <= 0 goto label3;

     label2:
        r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long lastRefreshCheck> = $l2;

        $r1 = r0.<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Refresh check delay elapsed - checking whether refresh is required");

        return 1;

     label3:
        return 0;
    }

    protected boolean requiresRefresh()
    {
        org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource r0;

        r0 := @this: org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource;

        return 1;
    }

    protected abstract java.lang.Object freshTarget();
}
