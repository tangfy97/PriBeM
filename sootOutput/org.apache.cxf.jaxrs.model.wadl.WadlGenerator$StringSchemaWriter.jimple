class org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter extends java.lang.Object implements org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter
{
    private java.util.List theSchemas;
    final org.apache.cxf.jaxrs.model.wadl.WadlGenerator this$0;

    public void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator, java.util.List, java.util.List, javax.ws.rs.core.UriInfo)
    {
        byte[] $r9;
        java.io.ByteArrayInputStream $r8;
        java.util.Map $r12, $r13;
        java.lang.String r6, $r15;
        org.apache.cxf.jaxrs.model.wadl.WadlGenerator r1;
        java.util.LinkedList $r2;
        org.apache.cxf.jaxrs.ext.xml.XMLSource $r7;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter r0;
        java.util.List r3, r10, $r14;
        java.lang.Object $r5;
        javax.ws.rs.core.UriInfo r11;

        r0 := @this: org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter;

        r1 := @parameter0: org.apache.cxf.jaxrs.model.wadl.WadlGenerator;

        r3 := @parameter1: java.util.List;

        r10 := @parameter2: java.util.List;

        r11 := @parameter3: javax.ws.rs.core.UriInfo;

        r0.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter: org.apache.cxf.jaxrs.model.wadl.WadlGenerator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter: java.util.List theSchemas> = $r2;

        $r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = new org.apache.cxf.jaxrs.ext.xml.XMLSource;

        $r8 = new java.io.ByteArrayInputStream;

        $r9 = virtualinvoke r6.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        specialinvoke $r7.<org.apache.cxf.jaxrs.ext.xml.XMLSource: void <init>(java.io.InputStream)>($r8);

        virtualinvoke $r7.<org.apache.cxf.jaxrs.ext.xml.XMLSource: void setBuffering()>();

        $r12 = specialinvoke r0.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter: java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)>($r7, "import", r10, r11);

        $r13 = specialinvoke r0.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter: java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)>($r7, "include", r10, r11);

        interfaceinvoke $r12.<java.util.Map: void putAll(java.util.Map)>($r13);

        $z1 = interfaceinvoke $r12.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r15 = specialinvoke r0.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter: java.lang.String transformSchema(java.lang.String,java.util.Map)>(r6, $r12);

        goto label3;

     label2:
        $r15 = r6;

     label3:
        $r14 = r0.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter: java.util.List theSchemas>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label1;

     label4:
        return;
    }

    private java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource, java.lang.String, java.util.List, javax.ws.rs.core.UriInfo)
    {
        java.util.Map $r0;
        javax.ws.rs.core.UriBuilder $r14, $r15, $r23, $r25;
        java.net.URI $r11, $r17, r21, $r27;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r30;
        org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter r31;
        java.util.List r12;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        javax.ws.rs.core.UriInfo r13;
        java.lang.Object[] $r16, $r26;
        java.lang.String[] $r8;
        java.util.HashMap $r9;
        int i0, i1;
        java.lang.String r4, $r7, r10, $r18, $r22, $r24, $r28, $r29;
        java.util.Iterator $r19;
        java.lang.Object $r20;

        r31 := @this: org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r4 := @parameter1: java.lang.String;

        r12 := @parameter2: java.util.List;

        r13 := @parameter3: javax.ws.rs.core.UriInfo;

        $r0 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("xs", "http://www.w3.org/2001/XMLSchema");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/*/xs:");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/@schemaLocation");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r1.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.String[] getValues(java.lang.String,java.util.Map)>($r7, $r0);

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        if $r8 != null goto label01;

        return $r9;

     label01:
        i0 = lengthof $r8;

        i1 = 0;

     label02:
        if i1 >= i0 goto label11;

        r10 = $r8[i1];

     label03:
        $r11 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r10);

        $z0 = virtualinvoke $r11.<java.net.URI: boolean isAbsolute()>();

        if $z0 != 0 goto label08;

        if r12 == null goto label07;

        $r19 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.net.URI) $r20;

        $r22 = virtualinvoke r21.<java.net.URI: java.lang.String toString()>();

        $z2 = virtualinvoke $r22.<java.lang.String: boolean endsWith(java.lang.String)>(r10);

        if $z2 == 0 goto label06;

        $z3 = virtualinvoke r21.<java.net.URI: boolean isAbsolute()>();

        if $z3 == 0 goto label05;

        $r29 = virtualinvoke r21.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r29);

        goto label07;

     label05:
        $r23 = interfaceinvoke r13.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.UriBuilder getBaseUriBuilder()>();

        $r24 = virtualinvoke r21.<java.net.URI: java.lang.String toString()>();

        $r25 = virtualinvoke $r23.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r24);

        $r26 = newarray (java.lang.Object)[0];

        $r27 = virtualinvoke $r25.<javax.ws.rs.core.UriBuilder: java.net.URI build(java.lang.Object[])>($r26);

        $r28 = virtualinvoke $r27.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r28);

        goto label07;

     label06:
        goto label04;

     label07:
        $z4 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r10);

        if $z4 != 0 goto label08;

        $r14 = interfaceinvoke r13.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.UriBuilder getBaseUriBuilder()>();

        $r15 = virtualinvoke $r14.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>(r10);

        $r16 = newarray (java.lang.Object)[0];

        $r17 = virtualinvoke $r15.<javax.ws.rs.core.UriBuilder: java.net.URI build(java.lang.Object[])>($r16);

        $r18 = virtualinvoke $r17.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r18);

     label08:
        goto label10;

     label09:
        $r30 := @caughtexception;

     label10:
        i1 = i1 + 1;

        goto label02;

     label11:
        return $r9;

        catch java.lang.Exception from label03 to label08 with label09;
    }

    private java.lang.String transformSchema(java.lang.String, java.util.Map)
    {
        java.io.ByteArrayOutputStream $r0;
        javax.xml.transform.stream.StreamSource $r4;
        org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter $r1;
        java.lang.Exception $r8;
        org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter r9;
        java.io.StringReader $r5;
        java.util.Map r3;
        javax.xml.stream.XMLStreamWriter $r2;
        java.lang.String r6, $r7;

        r9 := @this: org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter;

        r6 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Map;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter;

        $r2 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>($r0);

        specialinvoke $r1.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter: void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map)>($r2, r3);

     label1:
        $r4 = new javax.xml.transform.stream.StreamSource;

        $r5 = new java.io.StringReader;

        specialinvoke $r5.<java.io.StringReader: void <init>(java.lang.String)>(r6);

        specialinvoke $r4.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r5);

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)>($r4, $r1);

        virtualinvoke $r1.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter: void flush()>();

        virtualinvoke $r1.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter: void close()>();

        $r7 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        return r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void write(java.lang.StringBuilder)
    {
        org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder r5;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter;

        r5 := @parameter0: java.lang.StringBuilder;

        $r1 = r0.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter: java.util.List theSchemas>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        goto label1;

     label2:
        return;
    }
}
