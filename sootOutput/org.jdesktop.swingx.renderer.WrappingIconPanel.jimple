public class org.jdesktop.swingx.renderer.WrappingIconPanel extends org.jdesktop.swingx.JXPanel implements org.jdesktop.swingx.renderer.PainterAware
{
    protected javax.swing.JComponent delegate;
    javax.swing.JLabel iconLabel;
    java.lang.String labelPosition;
    int iconLabelGap;
    private javax.swing.border.Border ltorBorder;
    private javax.swing.border.Border rtolBorder;
    private boolean dropHackEnabled;

    public void <init>()
    {
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        specialinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void <init>(boolean)>(1);

        return;
    }

    public void <init>(boolean)
    {
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        org.jdesktop.swingx.renderer.JRendererLabel $r1;
        javax.swing.JLabel $r2, $r3, $r5;
        int $i0;
        java.awt.BorderLayout $r4;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void <init>()>();

        r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: java.lang.String labelPosition> = "Center";

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void setOpaque(boolean)>(0);

        $r1 = new org.jdesktop.swingx.renderer.JRendererLabel;

        specialinvoke $r1.<org.jdesktop.swingx.renderer.JRendererLabel: void <init>()>();

        r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel> = $r1;

        $r2 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        $i0 = virtualinvoke $r2.<javax.swing.JLabel: int getIconTextGap()>();

        r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: int iconLabelGap> = $i0;

        $r3 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        virtualinvoke $r3.<javax.swing.JLabel: void setOpaque(boolean)>(0);

        specialinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void updateIconBorder()>();

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void setBorder(javax.swing.border.Border)>(null);

        $r4 = new java.awt.BorderLayout;

        specialinvoke $r4.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void setLayout(java.awt.LayoutManager)>($r4);

        $r5 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void add(java.awt.Component,java.lang.Object)>($r5, "Before");

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void setDropHackEnabled(boolean)>(z0);

        return;
    }

    public void setComponentOrientation(java.awt.ComponentOrientation)
    {
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        java.awt.ComponentOrientation r1;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        r1 := @parameter0: java.awt.ComponentOrientation;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void setComponentOrientation(java.awt.ComponentOrientation)>(r1);

        specialinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void updateIconBorder()>();

        return;
    }

    private void updateIconBorder()
    {
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        javax.swing.border.Border $r1, $r3, $r5, $r7, $r8;
        java.awt.ComponentOrientation $r2;
        javax.swing.JLabel $r4, $r6;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        $r1 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.border.Border ltorBorder>;

        if $r1 != null goto label1;

        $i0 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: int iconLabelGap>;

        $r7 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, $i0);

        r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.border.Border ltorBorder> = $r7;

        $i1 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: int iconLabelGap>;

        $r8 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, $i1, 0, 0);

        r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.border.Border rtolBorder> = $r8;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        $r5 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.border.Border ltorBorder>;

        virtualinvoke $r6.<javax.swing.JLabel: void setBorder(javax.swing.border.Border)>($r5);

        goto label3;

     label2:
        $r4 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        $r3 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.border.Border rtolBorder>;

        virtualinvoke $r4.<javax.swing.JLabel: void setBorder(javax.swing.border.Border)>($r3);

     label3:
        return;
    }

    public void setIcon(javax.swing.Icon)
    {
        javax.swing.JLabel $r2, $r3;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        javax.swing.Icon r1;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        r1 := @parameter0: javax.swing.Icon;

        $r2 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        virtualinvoke $r2.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>(r1);

        $r3 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        virtualinvoke $r3.<javax.swing.JLabel: void setText(java.lang.String)>(null);

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void validate()>();

        return;
    }

    public javax.swing.Icon getIcon()
    {
        javax.swing.Icon $r2;
        javax.swing.JLabel $r1;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        $r1 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        $r2 = virtualinvoke $r1.<javax.swing.JLabel: javax.swing.Icon getIcon()>();

        return $r2;
    }

    public void setComponent(javax.swing.JComponent)
    {
        javax.swing.JComponent $r1, $r2, r3, $r5, $r6, $r7;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        java.lang.String $r4;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        r3 := @parameter0: javax.swing.JComponent;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent getComponent()>();

        $r2 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        if $r2 == null goto label1;

        $r7 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void remove(java.awt.Component)>($r7);

     label1:
        r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate> = r3;

        $r5 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        $r4 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: java.lang.String labelPosition>;

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void add(java.awt.Component,java.lang.Object)>($r5, $r4);

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void validate()>();

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent getComponent()>();

        virtualinvoke r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("component", $r1, $r6);

        return;
    }

    public javax.swing.JComponent getComponent()
    {
        javax.swing.JComponent $r1;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        $r1 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        return $r1;
    }

    public void setBackground(java.awt.Color)
    {
        java.awt.Color r1;
        javax.swing.JComponent $r3, $r4;
        javax.swing.JLabel $r2, $r5;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        r1 := @parameter0: java.awt.Color;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void setBackground(java.awt.Color)>(r1);

        $r2 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        if $r2 == null goto label1;

        $r5 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        virtualinvoke $r5.<javax.swing.JLabel: void setBackground(java.awt.Color)>(r1);

     label1:
        $r3 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        if $r3 == null goto label2;

        $r4 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        virtualinvoke $r4.<javax.swing.JComponent: void setBackground(java.awt.Color)>(r1);

     label2:
        return;
    }

    public void setForeground(java.awt.Color)
    {
        java.awt.Color r1;
        javax.swing.JComponent $r3, $r4;
        javax.swing.JLabel $r2, $r5;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        r1 := @parameter0: java.awt.Color;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void setForeground(java.awt.Color)>(r1);

        $r2 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        if $r2 == null goto label1;

        $r5 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JLabel iconLabel>;

        virtualinvoke $r5.<javax.swing.JLabel: void setForeground(java.awt.Color)>(r1);

     label1:
        $r3 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        if $r3 == null goto label2;

        $r4 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        virtualinvoke $r4.<javax.swing.JComponent: void setForeground(java.awt.Color)>(r1);

     label2:
        return;
    }

    public void setFont(java.awt.Font)
    {
        javax.swing.JComponent $r1, $r3;
        java.awt.Font r2;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        r2 := @parameter0: java.awt.Font;

        $r1 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        if $r1 == null goto label1;

        $r3 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        virtualinvoke $r3.<javax.swing.JComponent: void setFont(java.awt.Font)>(r2);

     label1:
        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void setFont(java.awt.Font)>(r2);

        return;
    }

    public boolean isVisible()
    {
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        $z0 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: boolean dropHackEnabled>;

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = specialinvoke r0.<org.jdesktop.swingx.JXPanel: boolean isVisible()>();

     label2:
        return $z1;
    }

    public org.jdesktop.swingx.painter.Painter getPainter()
    {
        javax.swing.JComponent $r1, $r2;
        org.jdesktop.swingx.painter.Painter $r4;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        org.jdesktop.swingx.renderer.PainterAware $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        $r1 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        $z0 = $r1 instanceof org.jdesktop.swingx.renderer.PainterAware;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        $r3 = (org.jdesktop.swingx.renderer.PainterAware) $r2;

        $r4 = interfaceinvoke $r3.<org.jdesktop.swingx.renderer.PainterAware: org.jdesktop.swingx.painter.Painter getPainter()>();

        return $r4;

     label1:
        return null;
    }

    public void setPainter(org.jdesktop.swingx.painter.Painter)
    {
        javax.swing.JComponent $r1, $r2;
        org.jdesktop.swingx.painter.Painter r3;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        org.jdesktop.swingx.renderer.PainterAware $r4;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        r3 := @parameter0: org.jdesktop.swingx.painter.Painter;

        $r1 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        $z0 = $r1 instanceof org.jdesktop.swingx.renderer.PainterAware;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        $r4 = (org.jdesktop.swingx.renderer.PainterAware) $r2;

        interfaceinvoke $r4.<org.jdesktop.swingx.renderer.PainterAware: void setPainter(org.jdesktop.swingx.painter.Painter)>(r3);

     label1:
        return;
    }

    public java.awt.Rectangle getDelegateBounds()
    {
        javax.swing.JComponent $r1, $r2;
        java.awt.Rectangle $r3;
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        $r1 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: javax.swing.JComponent delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.JComponent: java.awt.Rectangle getBounds()>();

        return $r3;
    }

    public void setDropHackEnabled(boolean)
    {
        org.jdesktop.swingx.renderer.WrappingIconPanel r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.renderer.WrappingIconPanel;

        z0 := @parameter0: boolean;

        r0.<org.jdesktop.swingx.renderer.WrappingIconPanel: boolean dropHackEnabled> = z0;

        return;
    }
}
