final class com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph extends java.lang.Object implements com.hp.hpl.jena.tdb.store.bulkloader.BulkStreamRDF
{
    private final com.hp.hpl.jena.tdb.store.DatasetGraphTDB dsg;
    private final com.hp.hpl.jena.graph.Node graphName;
    private final com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor monitor;
    private final com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples;
    private final boolean startedEmpty;
    private long count;
    private com.hp.hpl.jena.tdb.solver.stats.StatsCollector stats;

    void <init>(com.hp.hpl.jena.tdb.store.DatasetGraphTDB, com.hp.hpl.jena.graph.Node, boolean)
    {
        com.hp.hpl.jena.tdb.store.QuadTable $r7;
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r0;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r1;
        com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor $r4, $r6;
        com.hp.hpl.jena.graph.Node r2, $r10;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView $r9;
        com.hp.hpl.jena.tdb.store.TripleTable $r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r8, r11;
        com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable $r5;
        boolean $z0, z1, $z2;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: long count> = 0L;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.DatasetGraphTDB dsg> = r1;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.graph.Node graphName> = r2;

        if r2 == null goto label1;

        $z2 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r2);

        if $z2 == 0 goto label2;

     label1:
        $r3 = virtualinvoke r1.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.TripleTable getTripleTable()>();

        r11 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.store.TripleTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable getNodeTupleTable()>();

        goto label3;

     label2:
        $r7 = virtualinvoke r1.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.QuadTable getQuadTable()>();

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.tdb.store.QuadTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable getNodeTupleTable()>();

        $r9 = new com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        $r10 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.graph.Node graphName>;

        specialinvoke $r9.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTupleTable,com.hp.hpl.jena.graph.Node)>($r8, $r10);

        r11 = $r9;

     label3:
        $z0 = virtualinvoke r1.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: boolean isEmpty()>();

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: boolean startedEmpty> = $z0;

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader: com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor createLoadMonitor(com.hp.hpl.jena.tdb.store.DatasetGraphTDB,java.lang.String,boolean)>(r1, "triples", z1);

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor monitor> = $r4;

        $r5 = new com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable;

        $r6 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor monitor>;

        specialinvoke $r5.<com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTupleTable,java.lang.String,com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor)>(r11, "triples", $r6);

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples> = $r5;

        return;
    }

    public final void startBulk()
    {
        com.hp.hpl.jena.tdb.solver.stats.StatsCollector $r3;
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r0;
        com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable $r1, $r2;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void loadStart()>();

        $r2 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples>;

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void loadDataStart()>();

        $r3 = new com.hp.hpl.jena.tdb.solver.stats.StatsCollector;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.solver.stats.StatsCollector: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.solver.stats.StatsCollector stats> = $r3;

        return;
    }

    public final void triple(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.Node[] $r5;
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r4;
        long $l0, $l1;
        com.hp.hpl.jena.graph.Node $r1, $r2, $r3;
        com.hp.hpl.jena.graph.Triple r0;
        com.hp.hpl.jena.tdb.solver.stats.StatsCollector $r7;
        com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable $r6;

        r4 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        r0 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        $r6 = r4.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples>;

        $r5 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r5[0] = $r1;

        $r5[1] = $r2;

        $r5[2] = $r3;

        virtualinvoke $r6.<com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void load(com.hp.hpl.jena.graph.Node[])>($r5);

        $r7 = r4.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.solver.stats.StatsCollector stats>;

        virtualinvoke $r7.<com.hp.hpl.jena.tdb.solver.stats.StatsCollector: void record(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, $r1, $r2, $r3);

        $l0 = r4.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: long count>;

        $l1 = $l0 + 1L;

        r4.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: long count> = $l1;

        return;
    }

    public final void finishBulk()
    {
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r0;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r5, $r7, $r12;
        com.hp.hpl.jena.tdb.base.file.Location $r6, $r8;
        com.hp.hpl.jena.tdb.solver.stats.StatsResults $r11;
        com.hp.hpl.jena.tdb.solver.stats.StatsCollector $r10;
        java.lang.String $r9;
        com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void loadDataFinish()>();

        $r2 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples>;

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void loadIndexStart()>();

        $r3 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples>;

        virtualinvoke $r3.<com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void loadIndexFinish()>();

        $r4 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable loaderTriples>;

        virtualinvoke $r4.<com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void loadFinish()>();

        $r5 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.DatasetGraphTDB dsg>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $z0 = virtualinvoke $r6.<com.hp.hpl.jena.tdb.base.file.Location: boolean isMem()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: boolean startedEmpty>;

        if $z1 == 0 goto label1;

        $r7 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.DatasetGraphTDB dsg>;

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.tdb.base.file.Location: java.lang.String getPath(java.lang.String)>("stats.opt");

        $r10 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.solver.stats.StatsCollector stats>;

        $r11 = virtualinvoke $r10.<com.hp.hpl.jena.tdb.solver.stats.StatsCollector: com.hp.hpl.jena.tdb.solver.stats.StatsResults results()>();

        staticinvoke <com.hp.hpl.jena.tdb.solver.stats.Stats: void write(java.lang.String,com.hp.hpl.jena.tdb.solver.stats.StatsResults)>($r9, $r11);

     label1:
        $r12 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.DatasetGraphTDB dsg>;

        staticinvoke <com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader: void forceSync(com.hp.hpl.jena.tdb.store.DatasetGraphTDB)>($r12);

        return;
    }

    public void start()
    {
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        return;
    }

    public void quad(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.tdb.TDBException $r0;
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r1;
        com.hp.hpl.jena.sparql.core.Quad r2;

        r1 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r0 = new com.hp.hpl.jena.tdb.TDBException;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>("Quad encountered while loading a single graph");

        throw $r0;
    }

    public void tuple(org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.TDBException $r0;
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r1;
        org.apache.jena.atlas.lib.Tuple r2;

        r1 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        r2 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r0 = new com.hp.hpl.jena.tdb.TDBException;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>("Tuple encountered while loading a single graph");

        throw $r0;
    }

    public void base(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void prefix(java.lang.String, java.lang.String)
    {
        org.slf4j.Logger $r12;
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r0;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB $r4, $r10;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r3, $r9;
        com.hp.hpl.jena.graph.Node $r1, $r2, $r5, $r11;
        java.lang.String $r6, r7, r8;
        com.hp.hpl.jena.shared.PrefixMapping $r13;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.graph.Node graphName>;

        if $r1 == null goto label1;

        $r11 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.graph.Node graphName>;

        $z0 = virtualinvoke $r11.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z0 == 0 goto label1;

        $r12 = staticinvoke <com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader: org.slf4j.Logger access$000()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>("Prefixes for blank node graphs not stored");

        return;

     label1:
        $r2 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.graph.Node graphName>;

        if $r2 != null goto label2;

        $r9 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.DatasetGraphTDB dsg>;

        $r10 = virtualinvoke $r9.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB getPrefixes()>();

        $r13 = virtualinvoke $r10.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        goto label3;

     label2:
        $r3 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.tdb.store.DatasetGraphTDB dsg>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB getPrefixes()>();

        $r5 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph: com.hp.hpl.jena.graph.Node graphName>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r13 = virtualinvoke $r4.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping(java.lang.String)>($r6);

     label3:
        interfaceinvoke $r13.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>(r7, r8);

        return;
    }

    public void finish()
    {
        com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BulkLoader$DestinationGraph;

        return;
    }
}
