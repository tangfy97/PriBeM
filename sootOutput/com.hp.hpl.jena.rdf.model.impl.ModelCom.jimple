public class com.hp.hpl.jena.rdf.model.impl.ModelCom extends com.hp.hpl.jena.enhanced.EnhGraph implements com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.shared.PrefixMapping, com.hp.hpl.jena.shared.Lock
{
    private static final com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory;
    private static final com.hp.hpl.jena.rdf.model.RDFWriterF writerFactory;
    private com.hp.hpl.jena.shared.Lock modelLock;
    private static com.hp.hpl.jena.shared.PrefixMapping defaultPrefixMapping;
    protected com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier;
    private com.hp.hpl.jena.util.iterator.Map1 mapAsTriple;
    protected com.hp.hpl.jena.util.iterator.Map1 mapAsStatement;

    public void <init>(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.enhanced.Personality $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r2 = <com.hp.hpl.jena.enhanced.BuiltinPersonalities: com.hp.hpl.jena.enhanced.Personality model>;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.enhanced.Personality)>(r1, $r2);

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.enhanced.Personality)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom$1 $r4;
        com.hp.hpl.jena.enhanced.Personality r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom$3 $r5;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r3;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.shared.PrefixMapping $r6;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.Personality;

        specialinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.enhanced.Personality)>(r1, r2);

        r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.Lock modelLock> = null;

        $r3 = new com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        specialinvoke $r3.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r0);

        r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier> = $r3;

        $r4 = new com.hp.hpl.jena.rdf.model.impl.ModelCom$1;

        specialinvoke $r4.<com.hp.hpl.jena.rdf.model.impl.ModelCom$1: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r0);

        r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.util.iterator.Map1 mapAsTriple> = $r4;

        $r5 = new com.hp.hpl.jena.rdf.model.impl.ModelCom$3;

        specialinvoke $r5.<com.hp.hpl.jena.rdf.model.impl.ModelCom$3: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r0);

        r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.util.iterator.Map1 mapAsStatement> = $r5;

        $r6 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping defaultPrefixMapping>;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping withDefaultMappings(com.hp.hpl.jena.shared.PrefixMapping)>($r6);

        return;
    }

    public static com.hp.hpl.jena.shared.PrefixMapping getDefaultModelPrefixes()
    {
        com.hp.hpl.jena.shared.PrefixMapping $r0;

        $r0 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping defaultPrefixMapping>;

        return $r0;
    }

    public static com.hp.hpl.jena.shared.PrefixMapping setDefaultModelPrefixes(com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.shared.PrefixMapping r0, r1;

        r1 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        r0 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping defaultPrefixMapping>;

        <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping defaultPrefixMapping> = r1;

        return r0;
    }

    public com.hp.hpl.jena.graph.Graph getGraph()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        return $r1;
    }

    protected static com.hp.hpl.jena.rdf.model.Model createWorkModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode asRDFNode(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.graph.Node r0;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFNode getNodeAs(com.hp.hpl.jena.graph.Node,java.lang.Class)>(r0, class "Lcom/hp/hpl/jena/rdf/model/Literal;");

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFNode getNodeAs(com.hp.hpl.jena.graph.Node,java.lang.Class)>(r0, class "Lcom/hp/hpl/jena/rdf/model/Resource;");

     label2:
        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Resource wrapAsResource(com.hp.hpl.jena.graph.Node)
    {
        java.lang.UnsupportedOperationException $r4;
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.graph.Node r0;
        com.hp.hpl.jena.rdf.model.Resource $r3;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("literal cannot be converted to Resource");

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFNode getNodeAs(com.hp.hpl.jena.graph.Node,java.lang.Class)>(r0, class "Lcom/hp/hpl/jena/rdf/model/Resource;");

        $r3 = (com.hp.hpl.jena.rdf.model.Resource) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String, com.hp.hpl.jena.rdf.model.ResourceF)
    {
        com.hp.hpl.jena.shared.JenaException $r6;
        com.hp.hpl.jena.rdf.model.ResourceF r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        java.lang.String r2;
        com.hp.hpl.jena.rdf.model.Resource $r3, $r4;
        java.lang.Exception $r5;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.ResourceF;

     label1:
        $r3 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>(r2);

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.ResourceF: com.hp.hpl.jena.rdf.model.Resource createResource(com.hp.hpl.jena.rdf.model.Resource)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.hp.hpl.jena.shared.JenaException;

        specialinvoke $r6.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, long)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        long l0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        l0 := @parameter2: long;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)>(l0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, int)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        int i0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, char)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        char c0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        c0 := @parameter2: char;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)>(c0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, float)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        float f0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        f0 := @parameter2: float;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)>(f0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, double)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        d0 := @parameter2: double;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)>(d0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, "", 0);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.model.Literal $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)>(r3, "", z0);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r3, r4;
        com.hp.hpl.jena.rdf.model.Literal $r5;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $r5 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)>(r3, r4, z0);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r5);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.datatypes.RDFDatatype r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.model.Literal $r5;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.hp.hpl.jena.datatypes.RDFDatatype;

        $r5 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r3, r4);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r5);

        return r0;
    }

    private com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String, java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r4;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r0;
        java.lang.String r1, r2;
        com.hp.hpl.jena.graph.Node $r3;
        boolean z0;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r3, r4);

        return $r0;
    }

    private com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.datatypes.RDFDatatype r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r4;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r0;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r3;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.datatypes.RDFDatatype;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r1, "", r2);

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r3, r4);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r5;
        java.lang.String r3, r4;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, r4, 0);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r5;
        java.lang.Object r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.Object;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFNode asObject(java.lang.Object)>(r3);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r4);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.Literal)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.rdf.model.Literal r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.Literal;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, r3);

        return $r4;
    }

    private com.hp.hpl.jena.rdf.model.RDFNode asObject(java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        java.lang.Object r0;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.rdf.model.RDFNode;

        if $z0 == 0 goto label1;

        $r2 = (com.hp.hpl.jena.rdf.model.RDFNode) r0;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>(r0);

     label2:
        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.StmtIterator)
    {
        java.lang.Throwable $r4;
        java.util.Iterator $r3;
        com.hp.hpl.jena.rdf.model.StmtIterator r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.StmtIterator;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: java.util.Iterator asTriples(com.hp.hpl.jena.rdf.model.StmtIterator)>(r2);

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void add(com.hp.hpl.jena.graph.Graph,java.util.Iterator)>($r1, $r3);

     label2:
        interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        throw $r4;

     label5:
        return r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model r1, $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Model,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Model, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.graph.Graph $r1, $r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void addInto(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>($r1, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.RDFReader getReader()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.RDFReader $r1;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r0;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r0 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r1 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.RDFReaderF: com.hp.hpl.jena.rdf.model.RDFReader getReader()>();

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.RDFReader getReader(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFReader $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        java.lang.String r0;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r1;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFReaderF: com.hp.hpl.jena.rdf.model.RDFReader getReader(java.lang.String)>(r0);

        return $r2;
    }

    public java.lang.String setReaderClassName(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r4;
        java.lang.String r0, r1, $r3;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r2;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFReaderF: java.lang.String setReaderClassName(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFReader $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r0;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.lang.String;

        $r0 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r1 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.RDFReaderF: com.hp.hpl.jena.rdf.model.RDFReader getReader()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFReader: void read(com.hp.hpl.jena.rdf.model.Model,java.lang.String)>(r2, r3);

        return r2;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.io.Reader, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFReader $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.io.Reader r3;
        java.lang.String r4;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r0;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.io.Reader;

        r4 := @parameter1: java.lang.String;

        $r0 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r1 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.RDFReaderF: com.hp.hpl.jena.rdf.model.RDFReader getReader()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFReader: void read(com.hp.hpl.jena.rdf.model.Model,java.io.Reader,java.lang.String)>(r2, r3, r4);

        return r2;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFReader $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.String r4;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r0;
        java.io.InputStream r3;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.io.InputStream;

        r4 := @parameter1: java.lang.String;

        $r0 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r1 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.RDFReaderF: com.hp.hpl.jena.rdf.model.RDFReader getReader()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFReader: void read(com.hp.hpl.jena.rdf.model.Model,java.io.InputStream,java.lang.String)>(r2, r3, r4);

        return r2;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFReader $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        java.lang.String r0, r4;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r1;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFReaderF: com.hp.hpl.jena.rdf.model.RDFReader getReader(java.lang.String)>(r0);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFReader: void read(com.hp.hpl.jena.rdf.model.Model,java.lang.String)>(r3, r4);

        return r3;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r8;
        java.net.URL $r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        java.io.IOException $r6;
        com.hp.hpl.jena.shared.WrappedIOException $r7;
        java.lang.String r1, r4, r5;
        java.io.InputStream $r2;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

     label2:
        virtualinvoke r3.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)>($r2, r4, r5);

     label3:
        if null == $r2 goto label7;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        goto label7;

     label4:
        $r8 := @caughtexception;

     label5:
        if null == $r2 goto label6;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label6:
        throw $r8;

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;

        $r7 = new com.hp.hpl.jena.shared.WrappedIOException;

        specialinvoke $r7.<com.hp.hpl.jena.shared.WrappedIOException: void <init>(java.io.IOException)>($r6);

        throw $r7;

     label9:
        return r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.io.IOException from label1 to label7 with label8;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.io.Reader, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFReader $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        java.lang.String r0, r5;
        java.io.Reader r4;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r1;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r4 := @parameter0: java.io.Reader;

        r5 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFReaderF: com.hp.hpl.jena.rdf.model.RDFReader getReader(java.lang.String)>(r0);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFReader: void read(com.hp.hpl.jena.rdf.model.Model,java.io.Reader,java.lang.String)>(r3, r4, r5);

        return r3;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFReader $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        java.lang.String r0, r5;
        com.hp.hpl.jena.rdf.model.RDFReaderF $r1;
        java.io.InputStream r4;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r4 := @parameter0: java.io.InputStream;

        r5 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFReaderF: com.hp.hpl.jena.rdf.model.RDFReader getReader(java.lang.String)>(r0);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFReader: void read(com.hp.hpl.jena.rdf.model.Model,java.io.InputStream,java.lang.String)>(r3, r4, r5);

        return r3;
    }

    public com.hp.hpl.jena.rdf.model.RDFWriter getWriter()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.RDFWriterF $r0;
        com.hp.hpl.jena.rdf.model.RDFWriter $r1;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r0 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriterF writerFactory>;

        $r1 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.RDFWriterF: com.hp.hpl.jena.rdf.model.RDFWriter getWriter()>();

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.RDFWriter getWriter(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFWriterF $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        com.hp.hpl.jena.rdf.model.RDFWriter $r2;
        java.lang.String r0;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriterF writerFactory>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFWriterF: com.hp.hpl.jena.rdf.model.RDFWriter getWriter(java.lang.String)>(r0);

        return $r2;
    }

    public java.lang.String setWriterClassName(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFWriterF $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r4;
        java.lang.String r0, r1, $r3;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriterF writerFactory>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFWriterF: java.lang.String setWriterClassName(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.Writer)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.io.Writer r2;
        com.hp.hpl.jena.rdf.model.RDFWriter $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.io.Writer;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriter getWriter()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFWriter: void write(com.hp.hpl.jena.rdf.model.Model,java.io.Writer,java.lang.String)>(r0, r2, "");

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.Writer, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.io.Writer r3;
        com.hp.hpl.jena.rdf.model.RDFWriter $r2;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriter getWriter(java.lang.String)>(r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFWriter: void write(com.hp.hpl.jena.rdf.model.Model,java.io.Writer,java.lang.String)>(r0, r3, "");

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.Writer, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.io.Writer r3;
        com.hp.hpl.jena.rdf.model.RDFWriter $r2;
        java.lang.String r1, r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriter getWriter(java.lang.String)>(r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFWriter: void write(com.hp.hpl.jena.rdf.model.Model,java.io.Writer,java.lang.String)>(r0, r3, r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.io.OutputStream r2;
        com.hp.hpl.jena.rdf.model.RDFWriter $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriter getWriter()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFWriter: void write(com.hp.hpl.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)>(r0, r2, "");

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream, java.lang.String)
    {
        java.io.OutputStream r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.RDFWriter $r2;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriter getWriter(java.lang.String)>(r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFWriter: void write(com.hp.hpl.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)>(r0, r3, "");

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream, java.lang.String, java.lang.String)
    {
        java.io.OutputStream r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.RDFWriter $r2;
        java.lang.String r1, r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriter getWriter(java.lang.String)>(r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFWriter: void write(com.hp.hpl.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)>(r0, r3, r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Statement r1;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.Triple $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.graph.Triple asTriple()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: void delete(com.hp.hpl.jena.graph.Triple)>($r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r6;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r3, $r5, $r7;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.graph.Triple $r8;
        com.hp.hpl.jena.rdf.model.Property r4;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r6 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = interfaceinvoke r4.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r7 = interfaceinvoke r6.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r8 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r5, $r7);

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: void delete(com.hp.hpl.jena.graph.Triple)>($r8);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.StmtIterator)
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.rdf.model.StmtIterator r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.StmtIterator;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: java.util.Iterator asTriples(com.hp.hpl.jena.rdf.model.StmtIterator)>(r2);

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void delete(com.hp.hpl.jena.graph.Graph,java.util.Iterator)>($r1, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model r1, $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Model,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Model, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.graph.Graph $r1, $r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void deleteFrom(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>($r1, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model removeAll()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: void clear()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model removeAll(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r6;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r3, $r5, $r7;
        com.hp.hpl.jena.rdf.model.Resource r2;
        com.hp.hpl.jena.rdf.model.Property r4;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r6 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r2);

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r4);

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r6);

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: void remove(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r5, $r7);

        return r0;
    }

    public boolean containsLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean z0, $z1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $z1;
    }

    public boolean containsLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, long)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        long l0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        l0 := @parameter2: long;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)>(l0);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $z0;
    }

    public boolean containsLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, int)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        int i0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $z0;
    }

    public boolean containsLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, char)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        char c0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        c0 := @parameter2: char;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)>(c0);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $z0;
    }

    public boolean containsLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, float)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        float f0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        f0 := @parameter2: float;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)>(f0);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $z0;
    }

    public boolean containsLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, double)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        double d0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        d0 := @parameter2: double;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)>(d0);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $z0;
    }

    public boolean contains(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.String)>(r1, r2, r3, "");

        return $z0;
    }

    public boolean contains(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r3, r4;
        com.hp.hpl.jena.rdf.model.Literal $r5;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)>(r3, r4, 0);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r5);

        return $z0;
    }

    public boolean containsLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.Object r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.Object;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFNode asObject(java.lang.Object)>(r3);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r4);

        return $z0;
    }

    public boolean containsAny(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean containsAnyThenClose(com.hp.hpl.jena.rdf.model.StmtIterator)>($r2);

        return $z0;
    }

    public boolean containsAll(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean containsAllThenClose(com.hp.hpl.jena.rdf.model.StmtIterator)>($r2);

        return $z0;
    }

    protected boolean containsAnyThenClose(com.hp.hpl.jena.rdf.model.StmtIterator)
    {
        java.lang.Throwable $r2;
        com.hp.hpl.jena.rdf.model.StmtIterator r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.StmtIterator;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean containsAny(com.hp.hpl.jena.rdf.model.StmtIterator)>(r1);

     label2:
        interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return $z0;

     label3:
        $r2 := @caughtexception;

     label4:
        interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected boolean containsAllThenClose(com.hp.hpl.jena.rdf.model.StmtIterator)
    {
        java.lang.Throwable $r2;
        com.hp.hpl.jena.rdf.model.StmtIterator r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.StmtIterator;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean containsAll(com.hp.hpl.jena.rdf.model.StmtIterator)>(r1);

     label2:
        interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return $z0;

     label3:
        $r2 := @caughtexception;

     label4:
        interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsAny(com.hp.hpl.jena.rdf.model.StmtIterator)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.StmtIterator;

     label1:
        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $z1 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Statement)>($r2);

        if $z1 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public boolean containsAll(com.hp.hpl.jena.rdf.model.StmtIterator)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.StmtIterator;

     label1:
        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $z1 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Statement)>($r2);

        if $z1 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    protected com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r3, $r5, r6;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r7;
        com.hp.hpl.jena.rdf.model.StmtIterator $r8;
        com.hp.hpl.jena.rdf.model.Property r4;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r6 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r1);

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r4);

        $r7 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r5, r6);

        $r8 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.StmtIterator asStmtIterator(java.util.Iterator,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r7, r0);

        return $r8;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r5;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        $r4 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r3);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.graph.Node)>(r1, r2, $r4);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r6;
        com.hp.hpl.jena.rdf.model.Property r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r4, $r5;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r0 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r5 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.graph.Node)>(r2, r3, $r5);

        goto label2;

     label1:
        $r4 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String)>(r0);

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.graph.Node)>(r2, r3, $r4);

     label2:
        return $r6;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator $r8;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator $r1;
        com.hp.hpl.jena.graph.Node $r6, $r9, $r11;
        com.hp.hpl.jena.rdf.model.Resource r4;
        com.hp.hpl.jena.rdf.model.StmtIterator $r7, $r10, $r12;
        com.hp.hpl.jena.rdf.model.Property r5;
        java.lang.String r0, r3;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r4 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r0 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        if r0 == null goto label2;

        if r3 == null goto label1;

        $r11 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,boolean)>(r0, r3, 0);

        $r12 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.graph.Node)>(r4, r5, $r11);

        return $r12;

     label1:
        $r8 = new com.hp.hpl.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator;

        $r9 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r10 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.graph.Node)>(r4, r5, $r9);

        specialinvoke $r8.<com.hp.hpl.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom,java.lang.String,java.util.Iterator)>(r2, r0, $r10);

        return $r8;

     label2:
        $r1 = new com.hp.hpl.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator;

        $r6 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r7 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.graph.Node)>(r4, r5, $r6);

        specialinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom,java.lang.String,java.util.Iterator)>(r2, r3, $r7);

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listLiteralStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listLiteralStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, long)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        long l0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        l0 := @parameter2: long;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)>(l0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listLiteralStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, char)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        char c0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        c0 := @parameter2: char;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)>(c0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listLiteralStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, float)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        float f0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        f0 := @parameter2: float;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)>(f0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listLiteralStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, double)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        d0 := @parameter2: double;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)>(d0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.ResIterator $r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, $r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property, char)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        char c0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.ResIterator $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        c0 := @parameter1: char;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)>(c0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, $r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property, long)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        long l0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.ResIterator $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        l0 := @parameter1: long;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)>(l0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, $r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property, float)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        float f0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.ResIterator $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        f0 := @parameter1: float;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)>(f0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, $r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property, double)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.ResIterator $r3;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)>(d0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, $r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.Object r2;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.ResIterator $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>(r2);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listSubjectsWithProperty(com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ResIterator $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listSubjectsWithProperty(com.hp.hpl.jena.rdf.model.Property, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2;
        com.hp.hpl.jena.rdf.model.ResIterator $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listSubjectsWithProperty(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.String)>(r1, r2, "");

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listSubjectsWithProperty(com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2, r3;
        com.hp.hpl.jena.rdf.model.Literal $r4;
        com.hp.hpl.jena.rdf.model.ResIterator $r5;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)>(r2, r3, 0);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, $r4);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Resource createResource(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Resource $r1, r2, $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r3, r2);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2, r3, $r5;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>(r1);

        $r4 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r4, r3);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Resource createResource(com.hp.hpl.jena.rdf.model.ResourceF)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ResourceF r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.ResourceF;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String,com.hp.hpl.jena.rdf.model.ResourceF)>(null, r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Resource createResource(com.hp.hpl.jena.rdf.model.AnonId)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl $r0;
        com.hp.hpl.jena.rdf.model.AnonId r1;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.AnonId;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.rdf.model.AnonId,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1, r2);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String, com.hp.hpl.jena.rdf.model.ResourceF)
    {
        com.hp.hpl.jena.rdf.model.ResourceF r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        java.lang.String r2;
        com.hp.hpl.jena.rdf.model.Resource $r3, $r4;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.ResourceF;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>(r2);

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.ResourceF: com.hp.hpl.jena.rdf.model.Resource createResource(com.hp.hpl.jena.rdf.model.Resource)>($r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.Boolean $r1;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.Boolean;

        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>(z0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        int i0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        java.lang.Integer $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        i0 := @parameter0: int;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)
    {
        java.lang.Long $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        long l0;
        com.hp.hpl.jena.rdf.model.Literal $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        l0 := @parameter0: long;

        $r1 = new java.lang.Long;

        specialinvoke $r1.<java.lang.Long: void <init>(long)>(l0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)
    {
        java.lang.Character $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        char c0;
        com.hp.hpl.jena.rdf.model.Literal $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        c0 := @parameter0: char;

        $r1 = new java.lang.Character;

        specialinvoke $r1.<java.lang.Character: void <init>(char)>(c0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)
    {
        java.lang.Float $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        float f0;
        com.hp.hpl.jena.rdf.model.Literal $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        f0 := @parameter0: float;

        $r1 = new java.lang.Float;

        specialinvoke $r1.<java.lang.Float: void <init>(float)>(f0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)
    {
        java.lang.Double $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        d0 := @parameter0: double;

        $r1 = new java.lang.Double;

        specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r4;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r2;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r3;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.impl.LiteralLabelFactory: com.hp.hpl.jena.graph.impl.LiteralLabel create(java.lang.Object)>(r0);

        $r2 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r1);

        specialinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r3, r4);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.util.Calendar)
    {
        java.util.Calendar r1;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r2;
        com.hp.hpl.jena.datatypes.xsd.XSDDateTime $r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r6;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r3;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r4;
        com.hp.hpl.jena.graph.Node $r5;

        r6 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.util.Calendar;

        $r0 = new com.hp.hpl.jena.datatypes.xsd.XSDDateTime;

        specialinvoke $r0.<com.hp.hpl.jena.datatypes.xsd.XSDDateTime: void <init>(java.util.Calendar)>(r1);

        $r2 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdateTime>;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.impl.LiteralLabelFactory: com.hp.hpl.jena.graph.impl.LiteralLabel create(java.lang.Object,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r0, "", $r2);

        $r4 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r5 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r3);

        specialinvoke $r4.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r5, r6);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype) throws com.hp.hpl.jena.datatypes.DatatypeFormatException
    {
        com.hp.hpl.jena.datatypes.RDFDatatype r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r4;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r0;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r3;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.datatypes.RDFDatatype;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r1, "", r2);

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r3, r4);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.datatypes.RDFDatatype r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r5;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r2;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r3;
        java.lang.Object r0;
        com.hp.hpl.jena.graph.Node $r4;

        r5 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: com.hp.hpl.jena.datatypes.RDFDatatype;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.impl.LiteralLabelFactory: com.hp.hpl.jena.graph.impl.LiteralLabel create(java.lang.Object,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r0, "", r1);

        $r3 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r4 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r2);

        specialinvoke $r3.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r4, r5);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.datatypes.TypeMapper $r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r7;
        com.hp.hpl.jena.graph.Node $r6;
        com.hp.hpl.jena.datatypes.RDFDatatype $r2;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r4;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r5;
        java.lang.String r1, r3;

        r7 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper getInstance()>();

        $r2 = virtualinvoke $r0.<com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.RDFDatatype getSafeTypeByName(java.lang.String)>(r1);

        $r4 = staticinvoke <com.hp.hpl.jena.graph.impl.LiteralLabelFactory: com.hp.hpl.jena.graph.impl.LiteralLabel createLiteralLabel(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r3, "", $r2);

        $r5 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r6 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r4);

        specialinvoke $r5.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r6, r7);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object, java.lang.String)
    {
        com.hp.hpl.jena.datatypes.TypeMapper $r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r7;
        com.hp.hpl.jena.graph.Node $r6;
        com.hp.hpl.jena.datatypes.RDFDatatype $r2;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r4;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r5;
        java.lang.Object r3;
        java.lang.String r1;

        r7 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper getInstance()>();

        $r2 = virtualinvoke $r0.<com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.RDFDatatype getSafeTypeByName(java.lang.String)>(r1);

        $r4 = staticinvoke <com.hp.hpl.jena.graph.impl.LiteralLabelFactory: com.hp.hpl.jena.graph.impl.LiteralLabel create(java.lang.Object,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r3, "", $r2);

        $r5 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r6 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r4);

        specialinvoke $r5.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r6, r7);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r4;
        com.hp.hpl.jena.graph.Node $r3;
        java.util.Calendar $r5;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r2;
        java.lang.Object r0;
        com.hp.hpl.jena.rdf.model.Literal $r6;
        boolean $z0;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Calendar;

        if $z0 == 0 goto label1;

        $r5 = (java.util.Calendar) r0;

        $r6 = virtualinvoke r4.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.util.Calendar)>($r5);

        return $r6;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.graph.impl.LiteralLabelFactory: com.hp.hpl.jena.graph.impl.LiteralLabel create(java.lang.Object)>(r0);

        $r2 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r1);

        specialinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r3, r4);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createLiteral(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Literal $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createLiteral(java.lang.String,java.lang.String)>(r1, "");

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createLiteral(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1, r2;
        com.hp.hpl.jena.rdf.model.Literal $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Literal createLiteral(java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)>(r1, "", z0);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Literal createLiteral(java.lang.String, java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1, r2;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement createLiteralStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement createLiteralStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, long)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        long l0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        l0 := @parameter2: long;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)>(l0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement createLiteralStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, int)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        int i0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement createLiteralStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, char)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        char c0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        c0 := @parameter2: char;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)>(c0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement createLiteralStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, float)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        float f0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        f0 := @parameter2: float;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)>(f0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement createLiteralStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, double)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        d0 := @parameter2: double;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)>(d0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.model.Literal $r4;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createLiteral(java.lang.String)>(r3);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r4);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Statement createLiteralStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.Object r3;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.Object;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFNode asObject(java.lang.Object)>(r3);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r4);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, "", z0);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r3, r4;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, r4, 0);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Statement $r6;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.rdf.model.Property r2;
        java.lang.String r3, r4;
        com.hp.hpl.jena.rdf.model.Literal $r5;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $r5 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)>(r3, r4, z0);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, $r5);

        return $r6;
    }

    public com.hp.hpl.jena.rdf.model.Bag createBag()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Bag $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Bag createBag(java.lang.String)>(null);

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.Alt createAlt()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Alt $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Alt createAlt(java.lang.String)>(null);

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.Seq createSeq()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Seq $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Seq createSeq(java.lang.String)>(null);

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.RDFList createList()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.model.RDFList $r5;
        com.hp.hpl.jena.rdf.model.Resource $r1, $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource nil>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>($r2);

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/RDFList;");

        $r5 = (com.hp.hpl.jena.rdf.model.RDFList) $r4;

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.RDFList createList(java.util.Iterator)
    {
        java.util.Iterator r1;
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.Object $r2;
        com.hp.hpl.jena.rdf.model.RDFList r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.util.Iterator;

        r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFList createList()>();

     label1:
        if r1 == null goto label2;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.hp.hpl.jena.rdf.model.RDFNode) $r2;

        r4 = interfaceinvoke r4.<com.hp.hpl.jena.rdf.model.RDFList: com.hp.hpl.jena.rdf.model.RDFList 'with'(com.hp.hpl.jena.rdf.model.RDFNode)>($r3);

        goto label1;

     label2:
        return r4;
    }

    public com.hp.hpl.jena.rdf.model.RDFList createList(com.hp.hpl.jena.rdf.model.RDFNode[])
    {
        java.util.List $r2;
        java.util.Iterator $r3;
        com.hp.hpl.jena.rdf.model.RDFNode[] r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.RDFList $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFList createList(java.util.Iterator)>($r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode getRDFNode(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.rdf.model.RDFNode $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFNode asRDFNode(com.hp.hpl.jena.graph.Node)>(r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.rdf.model.Resource $r3;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node makeURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.Resource asResource(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Property getProperty(java.lang.String)
    {
        com.hp.hpl.jena.shared.InvalidPropertyURIException $r4;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new com.hp.hpl.jena.shared.InvalidPropertyURIException;

        specialinvoke $r4.<com.hp.hpl.jena.shared.InvalidPropertyURIException: void <init>(java.lang.String)>(null);

        throw $r4;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node makeURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.Property asProperty(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Property getProperty(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Property $r7;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r2, r4, $r6;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Property getProperty(java.lang.String)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.rdf.model.Seq getSeq(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.rdf.model.Seq $r4;
        com.hp.hpl.jena.rdf.model.Resource $r3;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node makeURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.Resource asResource(com.hp.hpl.jena.graph.Node,java.lang.Class,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r1, class "Lcom/hp/hpl/jena/rdf/model/Seq;", r2);

        $r4 = (com.hp.hpl.jena.rdf.model.Seq) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Seq getSeq(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        com.hp.hpl.jena.rdf.model.Seq $r2;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/Seq;");

        $r2 = (com.hp.hpl.jena.rdf.model.Seq) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Bag getBag(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Bag $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.rdf.model.Resource $r3;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node makeURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.Resource asResource(com.hp.hpl.jena.graph.Node,java.lang.Class,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r1, class "Lcom/hp/hpl/jena/rdf/model/Bag;", r2);

        $r4 = (com.hp.hpl.jena.rdf.model.Bag) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Bag getBag(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Bag $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/Bag;");

        $r2 = (com.hp.hpl.jena.rdf.model.Bag) $r1;

        return $r2;
    }

    private static com.hp.hpl.jena.graph.Node makeURI(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon()>();

        goto label2;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

     label2:
        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.Alt getAlt(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Alt $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.rdf.model.Resource $r3;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node makeURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.Resource asResource(com.hp.hpl.jena.graph.Node,java.lang.Class,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r1, class "Lcom/hp/hpl/jena/rdf/model/Alt;", r2);

        $r4 = (com.hp.hpl.jena.rdf.model.Alt) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Alt getAlt(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Alt $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/Alt;");

        $r2 = (com.hp.hpl.jena.rdf.model.Alt) $r1;

        return $r2;
    }

    public long size()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        int $i0;
        long $l1;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $i0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: int size()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean isEmpty()>();

        return $z0;
    }

    private void updateNamespace(java.util.Set, java.util.Iterator)
    {
        java.util.Iterator r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r6;
        java.util.Set r5;
        com.hp.hpl.jena.graph.Node r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r6 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r5 := @parameter0: java.util.Set;

        r0 := @parameter1: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.hp.hpl.jena.graph.Node) $r1;

        $z1 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $i0 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.Util: int splitNamespace(java.lang.String)>($r3);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label2:
        goto label1;

     label3:
        return;
    }

    private com.hp.hpl.jena.util.iterator.ExtendedIterator listPredicates()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r1, $r2;
        com.hp.hpl.jena.graph.Graph $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r3 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r2 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r1 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r4 = staticinvoke <com.hp.hpl.jena.graph.GraphUtil: com.hp.hpl.jena.util.iterator.ExtendedIterator listPredicates(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r2, $r1);

        return $r4;
    }

    private java.util.Iterator listTypes()
    {
        java.util.Iterator $r6;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        java.util.Set $r0;
        com.hp.hpl.jena.graph.Node $r4, $r9;
        com.hp.hpl.jena.graph.Triple $r8;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5;
        com.hp.hpl.jena.rdf.model.Property $r2;
        java.lang.Object $r7;
        com.hp.hpl.jena.graph.Graph $r3;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r0 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Set createHashedSet()>();

        $r3 = r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r2 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(null, $r4, null);

     label1:
        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ClosableIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ClosableIterator: java.lang.Object next()>();

        $r8 = (com.hp.hpl.jena.graph.Triple) $r7;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $r6 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

        return $r6;
    }

    public com.hp.hpl.jena.rdf.model.NsIterator listNameSpaces()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2;
        java.util.Iterator $r3, $r5;
        com.hp.hpl.jena.rdf.model.impl.NsIteratorImpl $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        java.util.Set $r0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r0 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Set createHashedSet()>();

        $r2 = specialinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.util.iterator.ExtendedIterator listPredicates()>();

        specialinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: void updateNamespace(java.util.Set,java.util.Iterator)>($r0, $r2);

        $r3 = specialinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: java.util.Iterator listTypes()>();

        specialinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: void updateNamespace(java.util.Set,java.util.Iterator)>($r0, $r3);

        $r4 = new com.hp.hpl.jena.rdf.model.impl.NsIteratorImpl;

        $r5 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

        specialinvoke $r4.<com.hp.hpl.jena.rdf.model.impl.NsIteratorImpl: void <init>(java.util.Iterator,java.lang.Object)>($r5, $r0);

        return $r4;
    }

    private com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.shared.PrefixMapping $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        return $r2;
    }

    public boolean samePrefixMappingAs(com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.PrefixMapping $r1, r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: boolean samePrefixMappingAs(com.hp.hpl.jena.shared.PrefixMapping)>(r2);

        return $z0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping lock()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.PrefixMapping $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping lock()>();

        return r0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2, r3;
        com.hp.hpl.jena.shared.PrefixMapping $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>(r2, r3);

        return r0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2;
        com.hp.hpl.jena.shared.PrefixMapping $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)>(r2);

        return r0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.PrefixMapping $r1, r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(com.hp.hpl.jena.shared.PrefixMapping)>(r2);

        return r0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.PrefixMapping $r1;
        java.util.Map r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.util.Map;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)>(r2);

        return r0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping withDefaultMappings(com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.PrefixMapping $r1, r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping withDefaultMappings(com.hp.hpl.jena.shared.PrefixMapping)>(r2);

        return r0;
    }

    public java.lang.String getNsPrefixURI(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2, $r3;
        com.hp.hpl.jena.shared.PrefixMapping $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: java.lang.String getNsPrefixURI(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.String getNsURIPrefix(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2, $r3;
        com.hp.hpl.jena.shared.PrefixMapping $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: java.lang.String getNsURIPrefix(java.lang.String)>(r2);

        return $r3;
    }

    public java.util.Map getNsPrefixMap()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.PrefixMapping $r1;
        java.util.Map $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: java.util.Map getNsPrefixMap()>();

        return $r2;
    }

    public java.lang.String expandPrefix(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2, $r3;
        com.hp.hpl.jena.shared.PrefixMapping $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: java.lang.String expandPrefix(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.String qnameFor(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2, $r3;
        com.hp.hpl.jena.shared.PrefixMapping $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: java.lang.String qnameFor(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.String shortForm(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r2, $r3;
        com.hp.hpl.jena.shared.PrefixMapping $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping: java.lang.String shortForm(java.lang.String)>(r2);

        return $r3;
    }

    public static void addNamespaces(com.hp.hpl.jena.rdf.model.Model, java.util.Map)
    {
        java.util.Map r1;
        int $i0;
        java.lang.String r7, $r14, r16;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r5;
        java.util.Iterator $r3, $r11, $r12;
        java.util.Set $r2, r9, $r10;
        com.hp.hpl.jena.rdf.model.Model r0;
        java.lang.Object $r4, $r6, $r8, $r13, $r15;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r1 := @parameter1: java.util.Map;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.util.Set) $r8;

        $r10 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Set createHashedSet()>();

        $r11 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r15 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r15;

        $z2 = staticinvoke <com.hp.hpl.jena.shared.impl.PrefixMappingImpl: boolean isNiceURI(java.lang.String)>(r16);

        if $z2 == 0 goto label3;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r16);

     label3:
        goto label2;

     label4:
        $i0 = interfaceinvoke $r10.<java.util.Set: int size()>();

        if $i0 != 1 goto label5;

        $r12 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (java.lang.String) $r13;

        interfaceinvoke r0.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>(r7, $r14);

     label5:
        goto label1;

     label6:
        return;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listStatements()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.GraphUtil: com.hp.hpl.jena.util.iterator.ExtendedIterator findAll(com.hp.hpl.jena.graph.Graph)>($r1);

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.StmtIterator asStmtIterator(java.util.Iterator,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r2, r0);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Statement r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, $r3, $r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Statement[])
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Statement[] r2;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.graph.Triple[] $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Statement[];

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.StatementImpl: com.hp.hpl.jena.graph.Triple[] asTriples(com.hp.hpl.jena.rdf.model.Statement[])>(r2);

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void add(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple[])>($r1, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model add(java.util.List)
    {
        java.util.List r2, $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.util.List;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: java.util.List asTriples(java.util.List)>(r2);

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void add(com.hp.hpl.jena.graph.Graph,java.util.List)>($r1, $r3);

        return r0;
    }

    private java.util.List asTriples(java.util.List)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r5;
        com.hp.hpl.jena.rdf.model.Statement $r3;
        java.util.ArrayList $r0;
        com.hp.hpl.jena.graph.Triple $r4;
        java.util.List r1;
        int $i0, $i1, i2;
        java.lang.Object $r2;

        r5 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (com.hp.hpl.jena.rdf.model.Statement) $r2;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.graph.Triple asTriple()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private java.util.Iterator asTriples(com.hp.hpl.jena.rdf.model.StmtIterator)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.StmtIterator r0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.util.iterator.Map1 $r2;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.StmtIterator;

        $r2 = r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.util.iterator.Map1 mapAsTriple>;

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Statement[])
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Statement[] r2;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.graph.Triple[] $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Statement[];

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.StatementImpl: com.hp.hpl.jena.graph.Triple[] asTriples(com.hp.hpl.jena.rdf.model.Statement[])>(r2);

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void delete(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple[])>($r1, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model remove(java.util.List)
    {
        java.util.List r2, $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: java.util.List;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: java.util.List asTriples(java.util.List)>(r2);

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void delete(com.hp.hpl.jena.graph.Graph,java.util.List)>($r1, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r6, $r7, $r8;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r4;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.graph.Triple $r9;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.graph.Graph $r5;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        $r4 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        virtualinvoke $r4.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: void noteIfReified(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, r3);

        $r5 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r6 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $r7 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r8 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r9 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r6, $r7, $r8);

        interfaceinvoke $r5.<com.hp.hpl.jena.graph.Graph: void add(com.hp.hpl.jena.graph.Triple)>($r9);

        return r0;
    }

    public com.hp.hpl.jena.shared.ReificationStyle getReificationStyle()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.ReificationStyle $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.shared.ReificationStyle getReificationStyle()>();

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r1;
        com.hp.hpl.jena.rdf.model.RSIterator $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements()>();

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.RSIterator $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r2;
        com.hp.hpl.jena.rdf.model.Statement r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements(com.hp.hpl.jena.graph.FrontsTriple)>(r1);

        return $r3;
    }

    public boolean isReified(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r2;
        com.hp.hpl.jena.rdf.model.Statement r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: boolean isReified(com.hp.hpl.jena.graph.FrontsTriple)>(r1);

        return $z0;
    }

    public com.hp.hpl.jena.rdf.model.Resource getAnyReifiedStatement(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r2;
        com.hp.hpl.jena.rdf.model.Statement r1;
        com.hp.hpl.jena.rdf.model.Resource $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.Resource getAnyReifiedStatement(com.hp.hpl.jena.rdf.model.Statement)>(r1);

        return $r3;
    }

    public void removeAllReifications(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r2;
        com.hp.hpl.jena.rdf.model.Statement r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        virtualinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: void removeAllReifications(com.hp.hpl.jena.graph.FrontsTriple)>(r1);

        return;
    }

    public void removeReification(com.hp.hpl.jena.rdf.model.ReifiedStatement)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ReifiedStatement r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.ReifiedStatement;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        virtualinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: void removeReification(com.hp.hpl.jena.rdf.model.ReifiedStatement)>(r1);

        return;
    }

    public com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.ReifiedStatement $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r2;
        com.hp.hpl.jena.rdf.model.Statement r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(com.hp.hpl.jena.rdf.model.Statement)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String, com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.ReifiedStatement $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier $r3;
        com.hp.hpl.jena.rdf.model.Statement r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Statement;

        $r3 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.impl.ModelReifier modelReifier>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String,com.hp.hpl.jena.rdf.model.Statement)>(r1, r2);

        return $r4;
    }

    public boolean contains(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Statement r1;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.Triple $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.graph.Triple asTriple()>();

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Triple)>($r3);

        return $z0;
    }

    public boolean containsResource(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.graph.Graph $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $z0 = staticinvoke <com.hp.hpl.jena.graph.GraphUtil: boolean containsNode(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node)>($r2, $r3);

        return $z0;
    }

    public boolean contains(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, null);

        return $z0;
    }

    public boolean contains(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r6;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r3, $r5, $r7;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.rdf.model.Property r4;
        com.hp.hpl.jena.graph.Graph $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r6 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r1);

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r4);

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r6);

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r5, $r7);

        return $z0;
    }

    public com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.shared.PropertyNotFoundException $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Statement $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement getProperty(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r1, r2);

        if $r3 != null goto label1;

        $r4 = new com.hp.hpl.jena.shared.PropertyNotFoundException;

        specialinvoke $r4.<com.hp.hpl.jena.shared.PropertyNotFoundException: void <init>(com.hp.hpl.jena.rdf.model.Property)>(r2);

        throw $r4;

     label1:
        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement getProperty(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        java.lang.Throwable $r4;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2, null);

     label1:
        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return $r5;

     label4:
        $r4 := @caughtexception;

     label5:
        interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.rdf.model.RDFNode r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        if r0 != null goto label1;

        $r1 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        goto label2;

     label1:
        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

     label2:
        return $r1;
    }

    private com.hp.hpl.jena.rdf.model.NodeIterator listObjectsFor(com.hp.hpl.jena.rdf.model.RDFNode, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r1, r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r3, $r5;
        com.hp.hpl.jena.rdf.model.NodeIterator $r7;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        r4 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r1);

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r4);

        $r6 = staticinvoke <com.hp.hpl.jena.graph.GraphUtil: com.hp.hpl.jena.util.iterator.ExtendedIterator listObjects(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r3, $r5);

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.NodeIterator asRDFNodeIterator(java.util.Iterator,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r6, r0);

        return $r7;
    }

    private com.hp.hpl.jena.rdf.model.ResIterator listSubjectsFor(com.hp.hpl.jena.rdf.model.RDFNode, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r1, r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r3, $r5;
        com.hp.hpl.jena.rdf.model.ResIterator $r7;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        r4 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r1);

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r4);

        $r6 = staticinvoke <com.hp.hpl.jena.graph.GraphUtil: com.hp.hpl.jena.util.iterator.ExtendedIterator listSubjects(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r3, $r5);

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.ResIterator asResIterator(java.util.Iterator,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r6, r0);

        return $r7;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listSubjects()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ResIterator $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listSubjectsFor(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.RDFNode)>(null, null);

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ResIterator $r2;
        com.hp.hpl.jena.rdf.model.Property r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listSubjectsFor(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, null);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listSubjectsWithProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ResIterator $r2;
        com.hp.hpl.jena.rdf.model.Property r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property)>(r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ResIterator $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.ResIterator listSubjectsFor(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.NodeIterator listObjects()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.NodeIterator $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.NodeIterator listObjectsFor(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.RDFNode)>(null, null);

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.NodeIterator listObjectsOfProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.NodeIterator $r2;
        com.hp.hpl.jena.rdf.model.Property r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.NodeIterator listObjectsFor(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.RDFNode)>(null, r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.NodeIterator listObjectsOfProperty(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.NodeIterator $r3;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.NodeIterator listObjectsFor(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Selector)
    {
        com.hp.hpl.jena.rdf.model.Selector r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.util.iterator.Filter $r4;
        com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl $r7;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r5;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3, $r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Selector;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.util.iterator.ExtendedIterator findTriplesFrom(com.hp.hpl.jena.rdf.model.Selector)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.StmtIterator asStmtIterator(java.util.Iterator,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r2, r0);

        $z0 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Selector: boolean isSimple()>();

        if $z0 == 0 goto label1;

        $r6 = $r3;

        goto label2;

     label1:
        $r7 = new com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl;

        $r6 = $r7;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.util.iterator.Filter asFilter(com.hp.hpl.jena.rdf.model.Selector)>(r1);

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r4);

        specialinvoke $r7.<com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl: void <init>(java.util.Iterator)>($r5);

     label2:
        return $r6;
    }

    public com.hp.hpl.jena.util.iterator.Filter asFilter(com.hp.hpl.jena.rdf.model.Selector)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom$2 $r0;
        com.hp.hpl.jena.rdf.model.Selector r2;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Selector;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.ModelCom$2;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom$2: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom,com.hp.hpl.jena.rdf.model.Selector)>(r1, r2);

        return $r0;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator findTriplesFrom(com.hp.hpl.jena.rdf.model.Selector)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r7;
        com.hp.hpl.jena.rdf.model.Selector r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Node $r4, $r6, $r8;
        com.hp.hpl.jena.rdf.model.Resource $r3;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r9;
        com.hp.hpl.jena.rdf.model.Property $r5;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Selector;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Selector: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r4 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>($r3);

        $r5 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Selector: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r6 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>($r5);

        $r7 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Selector: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r8 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>($r7);

        $r9 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r4, $r6, $r8);

        return $r9;
    }

    public boolean supportsTransactions()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: boolean transactionsSupported()>();

        return $z0;
    }

    public com.hp.hpl.jena.rdf.model.Model begin()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: void begin()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model abort()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: void abort()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model commit()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: void commit()>();

        return r0;
    }

    public java.lang.Object executeInTransaction(com.hp.hpl.jena.shared.Command)
    {
        com.hp.hpl.jena.shared.Command r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.TransactionHandler $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.shared.Command;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: java.lang.Object executeInTransaction(com.hp.hpl.jena.shared.Command)>(r2);

        return $r3;
    }

    private com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.TransactionHandler $r2;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

        return $r2;
    }

    public boolean independent()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        return 1;
    }

    public com.hp.hpl.jena.rdf.model.Resource createResource()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.graph.Node $r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r0 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon()>();

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.Resource asResource(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r0, r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>(r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Property $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Property getProperty(java.lang.String)>(r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Property getProperty(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.impl.StatementImpl $r0;
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r4;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.StatementImpl;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.StatementImpl: void <init>(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1, r2, r3, r4);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Bag createBag(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Bag $r2, $r6;
        com.hp.hpl.jena.rdf.model.Property $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r3, $r5;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Bag getBag(java.lang.String)>(r1);

        $r4 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource Bag>;

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Bag: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r4, $r3);

        $r6 = (com.hp.hpl.jena.rdf.model.Bag) $r5;

        return $r6;
    }

    public com.hp.hpl.jena.rdf.model.Alt createAlt(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Alt $r2, $r6;
        com.hp.hpl.jena.rdf.model.Property $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r3, $r5;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Alt getAlt(java.lang.String)>(r1);

        $r4 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource Alt>;

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Alt: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r4, $r3);

        $r6 = (com.hp.hpl.jena.rdf.model.Alt) $r5;

        return $r6;
    }

    public com.hp.hpl.jena.rdf.model.Seq createSeq(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Seq $r2, $r6;
        com.hp.hpl.jena.rdf.model.Resource $r3, $r5;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Seq getSeq(java.lang.String)>(r1);

        $r4 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource Seq>;

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Seq: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r4, $r3);

        $r6 = (com.hp.hpl.jena.rdf.model.Seq) $r5;

        return $r6;
    }

    public com.hp.hpl.jena.rdf.model.Statement asStatement(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        com.hp.hpl.jena.graph.Triple r0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.StatementImpl: com.hp.hpl.jena.rdf.model.Statement toStatement(com.hp.hpl.jena.graph.Triple,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r0, r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Statement[] asStatements(com.hp.hpl.jena.graph.Triple[])
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.graph.Triple $r3;
        int $i0, $i1, i2;
        com.hp.hpl.jena.rdf.model.Statement[] r1;
        com.hp.hpl.jena.graph.Triple[] r0;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r0 := @parameter0: com.hp.hpl.jena.graph.Triple[];

        $i0 = lengthof r0;

        r1 = newarray (com.hp.hpl.jena.rdf.model.Statement)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r3 = r0[i2];

        $r4 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement asStatement(com.hp.hpl.jena.graph.Triple)>($r3);

        r1[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public java.util.List asStatements(java.util.List)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        java.util.ArrayList $r0;
        com.hp.hpl.jena.graph.Triple $r4;
        java.util.List r1;
        int $i0, $i1, i2;
        java.lang.Object $r3;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r4 = (com.hp.hpl.jena.graph.Triple) $r3;

        $r5 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement asStatement(com.hp.hpl.jena.graph.Triple)>($r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Model asModel(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r0, r2;
        com.hp.hpl.jena.graph.Graph r1;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: void <init>(com.hp.hpl.jena.graph.Graph)>(r1);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator asStatements(java.util.Iterator)
    {
        com.hp.hpl.jena.util.iterator.Map1Iterator $r1;
        java.util.Iterator r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.util.iterator.Map1 $r4;
        com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl $r0;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: java.util.Iterator;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl;

        $r1 = new com.hp.hpl.jena.util.iterator.Map1Iterator;

        $r4 = r2.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.util.iterator.Map1 mapAsStatement>;

        specialinvoke $r1.<com.hp.hpl.jena.util.iterator.Map1Iterator: void <init>(com.hp.hpl.jena.util.iterator.Map1,java.util.Iterator)>($r4, r3);

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl: void <init>(java.util.Iterator)>($r1);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listBySubject(com.hp.hpl.jena.rdf.model.Container)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Container r1;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Container;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, null, null);

        return $r2;
    }

    public void close()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: void close()>();

        return;
    }

    public boolean isClosed()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.graph.Graph $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph graph>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean isClosed()>();

        return $z0;
    }

    public boolean supportsSetOperations()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        return 1;
    }

    public com.hp.hpl.jena.rdf.model.Model query(com.hp.hpl.jena.rdf.model.Selector)
    {
        com.hp.hpl.jena.rdf.model.Selector r2;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.Model $r0, $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Selector;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model createWorkModel()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Selector)>(r2);

        $r4 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.StmtIterator)>($r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model union(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model $r0, $r2, r3, $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model createWorkModel()>();

        $r2 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Model)>(r1);

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Model)>(r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model intersection(com.hp.hpl.jena.rdf.model.Model)
    {
        byte $b2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model r1, $r2;
        int $i3;
        long $l0, $l1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: long size()>();

        $l1 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: long size()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model intersect(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Model)>(r0, r1);

        goto label2;

     label1:
        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model intersect(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Model)>(r1, r0);

     label2:
        return $r2;
    }

    public static com.hp.hpl.jena.rdf.model.Model intersect(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.Model)
    {
        java.lang.Throwable $r5;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Model $r0, r1, r3, $r4;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model createWorkModel()>();

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements()>();

     label1:
        $r4 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model addCommon(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.StmtIterator,com.hp.hpl.jena.rdf.model.Model)>($r0, $r2, r3);

     label2:
        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected static com.hp.hpl.jena.rdf.model.Model addCommon(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.StmtIterator, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator r0;
        com.hp.hpl.jena.rdf.model.Model r1, r3;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        boolean $z0, $z1;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.StmtIterator;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.Model;

     label1:
        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $z1 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.Model: boolean contains(com.hp.hpl.jena.rdf.model.Statement)>($r2);

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Statement)>($r2);

     label2:
        goto label1;

     label3:
        return r1;
    }

    public com.hp.hpl.jena.rdf.model.Model difference(com.hp.hpl.jena.rdf.model.Model)
    {
        java.lang.Throwable $r5;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.rdf.model.Statement $r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2, r6;
        com.hp.hpl.jena.rdf.model.Model $r0, r4;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r4 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model createWorkModel()>();

        r6 = null;

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements()>();

        r6 = $r2;

     label2:
        $z1 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $z0 = interfaceinvoke r4.<com.hp.hpl.jena.rdf.model.Model: boolean contains(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        if $z0 != 0 goto label2;

        interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        goto label2;

     label3:
        if null == $r2 goto label4;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

     label4:
        return $r0;

     label5:
        $r5 := @caughtexception;

     label6:
        if null == r6 goto label7;

        interfaceinvoke r6.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r6, $r9;
        com.hp.hpl.jena.graph.Graph $r3;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<ModelCom  ");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.ModelCom: java.lang.String reifiedToString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String reifiedToString()
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model $r1;
        java.lang.String $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model getHiddenStatements()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: java.lang.String statementsToString(com.hp.hpl.jena.rdf.model.StmtIterator)>($r2);

        return $r3;
    }

    protected java.lang.String statementsToString(com.hp.hpl.jena.rdf.model.StmtIterator)
    {
        java.lang.StringBuffer $r0, $r3;
        com.hp.hpl.jena.rdf.model.StmtIterator r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r5;
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        boolean $z0;

        r5 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.StmtIterator;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model getHiddenStatements()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        return r0;
    }

    public boolean isIsomorphicWith(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.graph.Graph $r1, $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean isIsomorphicWith(com.hp.hpl.jena.graph.Graph)>($r3);

        return $z0;
    }

    public synchronized com.hp.hpl.jena.shared.Lock getModelLock()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.LockMRSW $r3;
        com.hp.hpl.jena.shared.Lock $r1, $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.Lock modelLock>;

        if $r1 != null goto label1;

        $r3 = new com.hp.hpl.jena.shared.LockMRSW;

        specialinvoke $r3.<com.hp.hpl.jena.shared.LockMRSW: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.Lock modelLock> = $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.Lock modelLock>;

        return $r2;
    }

    public synchronized com.hp.hpl.jena.shared.Lock getLock()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.Lock $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.Lock getModelLock()>();

        return $r1;
    }

    public void enterCriticalSection(boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.Lock $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.Lock getModelLock()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.shared.Lock: void enterCriticalSection(boolean)>(z0);

        return;
    }

    public void leaveCriticalSection()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.shared.Lock $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.Lock getModelLock()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.shared.Lock: void leaveCriticalSection()>();

        return;
    }

    public com.hp.hpl.jena.rdf.model.Model register(com.hp.hpl.jena.rdf.model.ModelChangedListener)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ModelChangedListener r3;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.graph.GraphListener $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.ModelChangedListener;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.GraphListener adapt(com.hp.hpl.jena.rdf.model.ModelChangedListener)>(r3);

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.GraphEventManager: com.hp.hpl.jena.graph.GraphEventManager register(com.hp.hpl.jena.graph.GraphListener)>($r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model unregister(com.hp.hpl.jena.rdf.model.ModelChangedListener)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        com.hp.hpl.jena.rdf.model.ModelChangedListener r3;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.graph.GraphListener $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.ModelChangedListener;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.GraphListener adapt(com.hp.hpl.jena.rdf.model.ModelChangedListener)>(r3);

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.GraphEventManager: com.hp.hpl.jena.graph.GraphEventManager unregister(com.hp.hpl.jena.graph.GraphListener)>($r4);

        return r0;
    }

    public com.hp.hpl.jena.graph.GraphListener adapt(com.hp.hpl.jena.rdf.model.ModelChangedListener)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.rdf.model.ModelChangedListener r2;
        com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter $r0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.ModelChangedListener;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom,com.hp.hpl.jena.rdf.model.ModelChangedListener)>(r1, r2);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Model notifyEvent(java.lang.Object)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r0;
        java.lang.Object r4;
        com.hp.hpl.jena.graph.Graph $r1, $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        r4 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.GraphEventManager: void notifyEvent(com.hp.hpl.jena.graph.Graph,java.lang.Object)>($r3, r4);

        return r0;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.rdf.model.impl.RDFReaderFImpl $r0;
        com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl $r1;
        com.hp.hpl.jena.shared.PrefixMapping $r2;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.RDFReaderFImpl;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.RDFReaderFImpl: void <init>()>();

        <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFReaderF readerFactory> = $r0;

        $r1 = new com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: void <init>()>();

        <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.RDFWriterF writerFactory> = $r1;

        $r2 = staticinvoke <com.hp.hpl.jena.shared.PrefixMapping$Factory: com.hp.hpl.jena.shared.PrefixMapping create()>();

        <com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.shared.PrefixMapping defaultPrefixMapping> = $r2;

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.IO_Ctl: void init()>();

        return;
    }
}
