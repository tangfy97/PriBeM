public abstract class org.jdesktop.layout.GroupLayout$Group extends org.jdesktop.layout.GroupLayout$Spring
{
    java.util.List springs;
    static final boolean $assertionsDisabled;
    private final org.jdesktop.layout.GroupLayout this$0;

    void <init>(org.jdesktop.layout.GroupLayout)
    {
        org.jdesktop.layout.GroupLayout r1;
        org.jdesktop.layout.GroupLayout$Group r0;
        java.util.ArrayList $r2;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        r1 := @parameter0: org.jdesktop.layout.GroupLayout;

        r0.<org.jdesktop.layout.GroupLayout$Group: org.jdesktop.layout.GroupLayout this$0> = r1;

        specialinvoke r0.<org.jdesktop.layout.GroupLayout$Spring: void <init>(org.jdesktop.layout.GroupLayout)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs> = $r2;

        return;
    }

    int indexOf(org.jdesktop.layout.GroupLayout$Spring)
    {
        java.util.List $r2;
        org.jdesktop.layout.GroupLayout$Group r0;
        org.jdesktop.layout.GroupLayout$Spring r1;
        int $i0;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        r1 := @parameter0: org.jdesktop.layout.GroupLayout$Spring;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    org.jdesktop.layout.GroupLayout$Group addSpring(org.jdesktop.layout.GroupLayout$Spring)
    {
        org.jdesktop.layout.GroupLayout $r3;
        java.util.List $r2;
        org.jdesktop.layout.GroupLayout$Group r0;
        org.jdesktop.layout.GroupLayout$Spring r1;
        org.jdesktop.layout.GroupLayout$AutopaddingSpring $r4;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        r1 := @parameter0: org.jdesktop.layout.GroupLayout$Spring;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<org.jdesktop.layout.GroupLayout$Spring: void setParent(org.jdesktop.layout.GroupLayout$Spring)>(r0);

        $z0 = r1 instanceof org.jdesktop.layout.GroupLayout$AutopaddingSpring;

        if $z0 == 0 goto label1;

        $r4 = (org.jdesktop.layout.GroupLayout$AutopaddingSpring) r1;

        $z1 = virtualinvoke $r4.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: boolean getUserCreated()>();

        if $z1 != 0 goto label2;

     label1:
        $r3 = r0.<org.jdesktop.layout.GroupLayout$Group: org.jdesktop.layout.GroupLayout this$0>;

        staticinvoke <org.jdesktop.layout.GroupLayout: boolean access$102(org.jdesktop.layout.GroupLayout,boolean)>($r3, 1);

     label2:
        return r0;
    }

    void setSize(int, int, int)
    {
        org.jdesktop.layout.GroupLayout$Spring $r2;
        java.util.List $r1;
        org.jdesktop.layout.GroupLayout$Group r0;
        int i0, i1, i2, $i3, i4, $i6;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<org.jdesktop.layout.GroupLayout$Spring: void setSize(int,int,int)>(i0, i1, i2);

        if i2 != -2147483648 goto label3;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        i4 = $i3 - 1;

     label1:
        if i4 < 0 goto label2;

        $r2 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i4);

        virtualinvoke $r2.<org.jdesktop.layout.GroupLayout$Spring: void setSize(int,int,int)>(i0, i1, i2);

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: void setValidSize(int,int,int)>(i0, i1, i2);

     label4:
        return;
    }

    abstract void setValidSize(int, int, int);

    int calculateMinimumSize(int)
    {
        int i0, $i1;
        org.jdesktop.layout.GroupLayout$Group r0;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int calculateSize(int,int)>(i0, 0);

        return $i1;
    }

    int calculatePreferredSize(int)
    {
        int i0, $i1;
        org.jdesktop.layout.GroupLayout$Group r0;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int calculateSize(int,int)>(i0, 1);

        return $i1;
    }

    int calculateMaximumSize(int)
    {
        int i0, $i1;
        org.jdesktop.layout.GroupLayout$Group r0;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int calculateSize(int,int)>(i0, 2);

        return $i1;
    }

    abstract int operator(int, int);

    int calculateSize(int, int)
    {
        org.jdesktop.layout.GroupLayout$Group r0;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        org.jdesktop.layout.GroupLayout$Spring $r2, $r3, $r4, $r5;
        java.util.List $r1;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        if $i0 != 1 goto label2;

        $r5 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(0);

        $i8 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int getSpringSize(org.jdesktop.layout.GroupLayout$Spring,int,int)>($r5, i1, i2);

        return $i8;

     label2:
        $r2 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(0);

        $i3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int getSpringSize(org.jdesktop.layout.GroupLayout$Spring,int,int)>($r2, i1, i2);

        $r3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(1);

        $i4 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int getSpringSize(org.jdesktop.layout.GroupLayout$Spring,int,int)>($r3, i1, i2);

        $i5 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int operator(int,int)>($i3, $i4);

        i9 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int constrain(int)>($i5);

        i10 = 2;

     label3:
        if i10 >= $i0 goto label4;

        $r4 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i10);

        $i6 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int getSpringSize(org.jdesktop.layout.GroupLayout$Spring,int,int)>($r4, i1, i2);

        $i7 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int operator(int,int)>(i9, $i6);

        i9 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: int constrain(int)>($i7);

        i10 = i10 + 1;

        goto label3;

     label4:
        return i9;
    }

    org.jdesktop.layout.GroupLayout$Spring getSpring(int)
    {
        java.util.List $r1;
        org.jdesktop.layout.GroupLayout$Group r0;
        org.jdesktop.layout.GroupLayout$Spring $r3;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.jdesktop.layout.GroupLayout$Spring) $r2;

        return $r3;
    }

    int getSpringSize(org.jdesktop.layout.GroupLayout$Spring, int, int)
    {
        org.jdesktop.layout.GroupLayout$Spring r0;
        java.lang.AssertionError $r1;
        org.jdesktop.layout.GroupLayout$Group r2;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r2 := @this: org.jdesktop.layout.GroupLayout$Group;

        r0 := @parameter0: org.jdesktop.layout.GroupLayout$Spring;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $i4 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Spring: int getMinimumSize(int)>(i1);

        return $i4;

     label2:
        $i3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Spring: int getPreferredSize(int)>(i1);

        return $i3;

     label3:
        $i2 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Spring: int getMaximumSize(int)>(i1);

        return $i2;

     label4:
        $z0 = <org.jdesktop.layout.GroupLayout$Group: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label5:
        return 0;
    }

    abstract void insertAutopadding(int, java.util.List, java.util.List, java.util.List, java.util.List, boolean);

    void removeAutopadding()
    {
        org.jdesktop.layout.GroupLayout$Spring r4;
        org.jdesktop.layout.GroupLayout$AutopaddingSpring $r6, $r8;
        java.util.List $r1, $r2, $r7;
        org.jdesktop.layout.GroupLayout$Group r0, $r5;
        int $i0, i1, $i3;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: void unset()>();

        $r1 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label5;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.jdesktop.layout.GroupLayout$Spring) $r3;

        $z0 = r4 instanceof org.jdesktop.layout.GroupLayout$AutopaddingSpring;

        if $z0 == 0 goto label3;

        $r6 = (org.jdesktop.layout.GroupLayout$AutopaddingSpring) r4;

        $z2 = virtualinvoke $r6.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: boolean getUserCreated()>();

        if $z2 == 0 goto label2;

        $r8 = (org.jdesktop.layout.GroupLayout$AutopaddingSpring) r4;

        virtualinvoke $r8.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: void reset()>();

        goto label4;

     label2:
        $r7 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i1);

        goto label4;

     label3:
        $z1 = r4 instanceof org.jdesktop.layout.GroupLayout$Group;

        if $z1 == 0 goto label4;

        $r5 = (org.jdesktop.layout.GroupLayout$Group) r4;

        virtualinvoke $r5.<org.jdesktop.layout.GroupLayout$Group: void removeAutopadding()>();

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label5:
        return;
    }

    void unsetAutopadding()
    {
        org.jdesktop.layout.GroupLayout$Spring r4;
        org.jdesktop.layout.GroupLayout$AutopaddingSpring $r6;
        java.util.List $r1, $r2;
        org.jdesktop.layout.GroupLayout$Group r0, $r5;
        int $i0, i1, $i3;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: void unset()>();

        $r1 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.jdesktop.layout.GroupLayout$Spring) $r3;

        $z0 = r4 instanceof org.jdesktop.layout.GroupLayout$AutopaddingSpring;

        if $z0 == 0 goto label2;

        $r6 = (org.jdesktop.layout.GroupLayout$AutopaddingSpring) r4;

        virtualinvoke $r6.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: void unset()>();

        goto label3;

     label2:
        $z1 = r4 instanceof org.jdesktop.layout.GroupLayout$Group;

        if $z1 == 0 goto label3;

        $r5 = (org.jdesktop.layout.GroupLayout$Group) r4;

        virtualinvoke $r5.<org.jdesktop.layout.GroupLayout$Group: void unsetAutopadding()>();

     label3:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label4:
        return;
    }

    void calculateAutopadding(int)
    {
        org.jdesktop.layout.GroupLayout$Spring r4;
        org.jdesktop.layout.GroupLayout$AutopaddingSpring $r6;
        java.util.List $r1, $r2;
        org.jdesktop.layout.GroupLayout$Group r0, $r5;
        int $i0, i1, i2, $i4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        i1 := @parameter0: int;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label4;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (org.jdesktop.layout.GroupLayout$Spring) $r3;

        $z0 = r4 instanceof org.jdesktop.layout.GroupLayout$AutopaddingSpring;

        if $z0 == 0 goto label2;

        virtualinvoke r4.<org.jdesktop.layout.GroupLayout$Spring: void unset()>();

        $r6 = (org.jdesktop.layout.GroupLayout$AutopaddingSpring) r4;

        virtualinvoke $r6.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: void calculatePadding(int)>(i1);

        goto label3;

     label2:
        $z1 = r4 instanceof org.jdesktop.layout.GroupLayout$Group;

        if $z1 == 0 goto label3;

        $r5 = (org.jdesktop.layout.GroupLayout$Group) r4;

        virtualinvoke $r5.<org.jdesktop.layout.GroupLayout$Group: void calculateAutopadding(int)>(i1);

     label3:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label4:
        virtualinvoke r0.<org.jdesktop.layout.GroupLayout$Group: void unset()>();

        return;
    }

    boolean willHaveZeroSize(boolean)
    {
        org.jdesktop.layout.GroupLayout$Spring r4;
        java.util.List $r1, $r2;
        org.jdesktop.layout.GroupLayout$Group r0;
        int $i0, i1, $i3;
        java.lang.Object $r3;
        boolean z0, $z1;

        r0 := @this: org.jdesktop.layout.GroupLayout$Group;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$Group: java.util.List springs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.jdesktop.layout.GroupLayout$Spring) $r3;

        $z1 = virtualinvoke r4.<org.jdesktop.layout.GroupLayout$Spring: boolean willHaveZeroSize(boolean)>(z0);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.jdesktop.layout.GroupLayout: java.lang.Class class$org$jdesktop$layout$GroupLayout>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.jdesktop.layout.GroupLayout: java.lang.Class class$(java.lang.String)>("org.jdesktop.layout.GroupLayout");

        <org.jdesktop.layout.GroupLayout: java.lang.Class class$org$jdesktop$layout$GroupLayout> = $r1;

        goto label2;

     label1:
        $r1 = <org.jdesktop.layout.GroupLayout: java.lang.Class class$org$jdesktop$layout$GroupLayout>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.jdesktop.layout.GroupLayout$Group: boolean $assertionsDisabled> = $z1;

        return;
    }
}
