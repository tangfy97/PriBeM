public class groovy.swing.LookAndFeelHelper extends java.lang.Object implements groovy.lang.GroovyObject
{
    protected static groovy.swing.LookAndFeelHelper instance;
    private java.util.Map lafCodeNames;
    private java.util.Map extendedAttributes;
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696558;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Class;
    static java.lang.Class class$javax$swing$UIManager;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$javax$swing$LookAndFeel;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$groovy$util$FactoryBuilderSupport;
    static java.lang.Class class$java$util$Map;
    static java.lang.Class class$groovy$lang$Closure;

    public void <init>()
    {
        java.util.Map $r11, $r14, $r20, $r25, $r26, $r29;
        groovy.swing.LookAndFeelHelper$_closure3 $r19;
        groovy.swing.LookAndFeelHelper$_closure2 $r18;
        groovy.swing.LookAndFeelHelper$_closure1 $r17;
        groovy.swing.LookAndFeelHelper$_closure6 $r24;
        groovy.swing.LookAndFeelHelper$_closure5 $r23;
        groovy.swing.LookAndFeelHelper$_closure4 $r22;
        java.lang.Object[] $r5, $r15, $r16, $r21, $r31;
        groovy.lang.MetaClass $r34, $r36;
        groovy.swing.LookAndFeelHelper r0;
        java.lang.Class $r1, r2, $r3, r4, $r7, $r9, $r12, $r27, $r30, $r37, $r38, $r39, $r40, $r41, $r42, $r43;
        java.lang.Object $r6, $r8, $r10, $r13, $r28, $r32, $r33, $r35;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r1 != null goto label01;

        $r37 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r37;

        goto label02;

     label01:
        $r37 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label02:
        r2 = $r37;

        $r3 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r38 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r38;

        goto label04;

     label03:
        $r38 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        r4 = $r38;

        $r5 = newarray (java.lang.Object)[30];

        $r5[0] = "metal";

        $r5[1] = "javax.swing.plaf.metal.MetalLookAndFeel";

        $r5[2] = "nimbus";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethod0(java.lang.Class,java.lang.Class,java.lang.String)>(r2, r2, "getNimbusLAFName");

        $r5[3] = $r6;

        $r5[4] = "mac";

        $r5[5] = "apple.laf.AquaLookAndFeel";

        $r5[6] = "motif";

        $r5[7] = "com.sun.java.swing.plaf.motif.MotifLookAndFeel";

        $r5[8] = "windows";

        $r5[9] = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";

        $r5[10] = "win2k";

        $r5[11] = "com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel";

        $r5[12] = "gtk";

        $r5[13] = "com.sun.java.swing.plaf.gtk.GTKLookAndFeel";

        $r5[14] = "synth";

        $r5[15] = "javax.swing.plaf.synth.SynthLookAndFeel";

        $r5[16] = "system";

        $r7 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager>;

        if $r7 != null goto label05;

        $r39 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("javax.swing.UIManager");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager> = $r39;

        goto label06;

     label05:
        $r39 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager>;

     label06:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r2, $r39, "getSystemLookAndFeelClassName");

        $r5[17] = $r8;

        $r5[18] = "crossPlatform";

        $r9 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager>;

        if $r9 != null goto label07;

        $r40 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("javax.swing.UIManager");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager> = $r40;

        goto label08;

     label07:
        $r40 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager>;

     label08:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r2, $r40, "getCrossPlatformLookAndFeelClassName");

        $r5[19] = $r10;

        $r5[20] = "plastic";

        $r5[21] = "com.jgoodies.looks.plastic.PlasticLookAndFeel";

        $r5[22] = "plastic3D";

        $r5[23] = "com.jgoodies.looks.plastic.Plastic3DLookAndFeel";

        $r5[24] = "plasticXP";

        $r5[25] = "com.jgoodies.looks.plastic.PlasticXPLookAndFeel";

        $r5[26] = "substance";

        $r5[27] = "org.jvnet.substance.SubstanceLookAndFeel";

        $r5[28] = "napkin";

        $r5[29] = "net.sourceforge.napkinlaf.NapkinLookAndFeel";

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r5);

        $r12 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map>;

        if $r12 != null goto label09;

        $r41 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map> = $r41;

        goto label10;

     label09:
        $r41 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map>;

     label10:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, $r41);

        $r14 = (java.util.Map) $r13;

        r0.<groovy.swing.LookAndFeelHelper: java.util.Map lafCodeNames> = $r14;

        $r15 = newarray (java.lang.Object)[4];

        $r15[0] = "javax.swing.plaf.metal.MetalLookAndFeel";

        $r16 = newarray (java.lang.Object)[6];

        $r16[0] = "theme";

        $r17 = new groovy.swing.LookAndFeelHelper$_closure1;

        specialinvoke $r17.<groovy.swing.LookAndFeelHelper$_closure1: void <init>(java.lang.Object,java.lang.Object)>(r0, r0);

        $r16[1] = $r17;

        $r16[2] = "boldFonts";

        $r18 = new groovy.swing.LookAndFeelHelper$_closure2;

        specialinvoke $r18.<groovy.swing.LookAndFeelHelper$_closure2: void <init>(java.lang.Object,java.lang.Object)>(r0, r0);

        $r16[3] = $r18;

        $r16[4] = "noxp";

        $r19 = new groovy.swing.LookAndFeelHelper$_closure3;

        specialinvoke $r19.<groovy.swing.LookAndFeelHelper$_closure3: void <init>(java.lang.Object,java.lang.Object)>(r0, r0);

        $r16[5] = $r19;

        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r16);

        $r15[1] = $r20;

        $r15[2] = "org.jvnet.substance.SubstanceLookAndFeel";

        $r21 = newarray (java.lang.Object)[6];

        $r21[0] = "theme";

        $r22 = new groovy.swing.LookAndFeelHelper$_closure4;

        specialinvoke $r22.<groovy.swing.LookAndFeelHelper$_closure4: void <init>(java.lang.Object,java.lang.Object)>(r0, r0);

        $r21[1] = $r22;

        $r21[2] = "skin";

        $r23 = new groovy.swing.LookAndFeelHelper$_closure5;

        specialinvoke $r23.<groovy.swing.LookAndFeelHelper$_closure5: void <init>(java.lang.Object,java.lang.Object)>(r0, r0);

        $r21[3] = $r23;

        $r21[4] = "watermark";

        $r24 = new groovy.swing.LookAndFeelHelper$_closure6;

        specialinvoke $r24.<groovy.swing.LookAndFeelHelper$_closure6: void <init>(java.lang.Object,java.lang.Object)>(r0, r0);

        $r21[5] = $r24;

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r21);

        $r15[3] = $r25;

        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r15);

        $r27 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map>;

        if $r27 != null goto label11;

        $r42 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map> = $r42;

        goto label12;

     label11:
        $r42 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map>;

     label12:
        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r26, $r42);

        $r29 = (java.util.Map) $r28;

        r0.<groovy.swing.LookAndFeelHelper: java.util.Map extendedAttributes> = $r29;

        $r30 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r30 != null goto label13;

        $r43 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r43;

        goto label14;

     label13:
        $r43 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label14:
        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = r0;

        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r43, "initMetaClass", $r31);

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r32, r4);

        $r34 = (groovy.lang.MetaClass) $r33;

        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r34, r4);

        $r36 = (groovy.lang.MetaClass) $r35;

        r0.<groovy.swing.LookAndFeelHelper: groovy.lang.MetaClass metaClass> = $r36;

        return;
    }

    public static groovy.swing.LookAndFeelHelper getInstance()
    {
        groovy.swing.LookAndFeelHelper $r3, $r5;
        java.lang.Class $r0, r1, $r2, $r6, $r7;
        java.lang.Object $r4, $r8;
        boolean $z0;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        r1 = $r6;

        $r2 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r7 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r8 = <groovy.swing.LookAndFeelHelper: groovy.swing.LookAndFeelHelper instance>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r8);

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, r1);

        $r3 = (groovy.swing.LookAndFeelHelper) $r8;

        <groovy.swing.LookAndFeelHelper: groovy.swing.LookAndFeelHelper instance> = $r3;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, r1);

        $r5 = (groovy.swing.LookAndFeelHelper) $r4;

        return $r5;
    }

    public java.lang.String addLookAndFeelAlias(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r5;
        groovy.swing.LookAndFeelHelper r4;
        java.util.Map $r7;
        java.lang.Class $r0, r1, $r2, $r8, $r11, $r12, $r13;
        java.lang.Object $r9;
        java.lang.String r3, r6, $r10;

        r4 := @this: groovy.swing.LookAndFeelHelper;

        r6 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r7 = r4.<groovy.swing.LookAndFeelHelper: java.util.Map lafCodeNames>;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r6;

        $r5[1] = r3;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r7, "putAt", $r5);

        $r8 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

        if $r8 != null goto label5;

        $r13 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String> = $r13;

        goto label6;

     label5:
        $r13 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

     label6:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r3, $r13);

        $r10 = (java.lang.String) $r9;

        return $r10;
    }

    public java.lang.String addLookAndFeelAttributeHandler(java.lang.String, java.lang.String, groovy.lang.Closure)
    {
        java.lang.Object[] $r4, $r11, $r16, $r18;
        groovy.lang.Closure r10;
        java.util.Map $r6, $r17, $r19, $r20, r24;
        java.lang.String r5, r12, $r15;
        boolean $z0;
        groovy.swing.LookAndFeelHelper r3;
        java.lang.Class $r0, r1, $r2, $r8, $r13, $r21, $r22, $r23, $r25;
        java.lang.Object $r7, $r9, $r14;

        r3 := @this: groovy.swing.LookAndFeelHelper;

        r5 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r10 := @parameter2: groovy.lang.Closure;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r21 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r21;

        goto label2;

     label1:
        $r21 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        r1 = $r21;

        $r2 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r22 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r22;

        goto label4;

     label3:
        $r22 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r6 = r3.<groovy.swing.LookAndFeelHelper: java.util.Map extendedAttributes>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "getAt", $r4);

        $r8 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map>;

        if $r8 != null goto label5;

        $r23 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map> = $r23;

        goto label6;

     label5:
        $r23 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map>;

     label6:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r23);

        $r20 = (java.util.Map) $r9;

        r24 = $r20;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r20, null);

        if $z0 == 0 goto label7;

        $r16 = newarray (java.lang.Object)[0];

        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r16);

        r24 = $r17;

        $r19 = r3.<groovy.swing.LookAndFeelHelper: java.util.Map extendedAttributes>;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r5;

        $r18[1] = $r17;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r19, "putAt", $r18);

        goto label7;

     label7:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r12;

        $r11[1] = r10;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r24, "putAt", $r11);

        $r13 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

        if $r13 != null goto label8;

        $r25 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String> = $r25;

        goto label9;

     label8:
        $r25 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

     label9:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r10, $r25);

        $r15 = (java.lang.String) $r14;

        return $r15;
    }

    public boolean isLeaf()
    {
        groovy.swing.LookAndFeelHelper r6;
        java.lang.Boolean $r3, $r5;
        java.lang.Class $r0, $r1, $r2, $r7, $r8, $r9;
        java.lang.Object $r4;
        boolean $z0;

        r6 := @this: groovy.swing.LookAndFeelHelper;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Boolean>;

        if $r2 != null goto label5;

        $r9 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Boolean> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Boolean>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r9);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        return $z0;
    }

    public javax.swing.LookAndFeel lookAndFeel(java.lang.Object, java.util.Map, groovy.lang.Closure)
    {
        groovy.lang.Closure r53;
        java.util.Map r16, $r27, $r75, $r83;
        groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7 $r86;
        java.lang.Object[] $r14, $r18, $r24, $r26, $r48, $r61, $r76, $r85;
        java.lang.String $r10, $r45, $r71;
        groovy.swing.LookAndFeelHelper r13;
        javax.swing.LookAndFeel $r6, $r23, $r36, $r39;
        groovy.lang.Reference $r5, $r9, $r84;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Boolean $r58;
        java.lang.Class $r0, r1, $r2, $r3, $r7, $r11, $r12, $r15, $r17, $r21, $r29, $r32, $r34, $r37, $r43, $r47, $r49, $r54, $r55, $r56, $r57, $r59, $r60, $r62, $r63, $r65, $r66, $r68, $r69, $r72, $r73, $r74, $r80, $r81, $r87, $r88;
        java.lang.Object $r4, $r8, $r19, $r20, $r22, $r25, $r28, $r30, $r31, $r33, $r35, $r38, $r40, $r41, $r42, $r44, $r46, $r50, $r51, r52, $r64, $r67, $r70, $r77, $r78, $r79, $r82;

        r13 := @this: groovy.swing.LookAndFeelHelper;

        r52 := @parameter0: java.lang.Object;

        r16 := @parameter1: java.util.Map;

        r53 := @parameter2: groovy.lang.Closure;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r54 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r54;

        goto label02;

     label01:
        $r54 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label02:
        r1 = $r54;

        $r2 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r55 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r55;

        goto label04;

     label03:
        $r55 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r3 != null goto label05;

        $r56 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel> = $r56;

        goto label06;

     label05:
        $r56 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r56);

        $r6 = (javax.swing.LookAndFeel) $r4;

        $r5 = new groovy.lang.Reference;

        specialinvoke $r5.<groovy.lang.Reference: void <init>(java.lang.Object)>($r6);

        $r7 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

        if $r7 != null goto label07;

        $r57 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String> = $r57;

        goto label08;

     label07:
        $r57 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

     label08:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r57);

        $r10 = (java.lang.String) $r8;

        $r9 = new groovy.lang.Reference;

        specialinvoke $r9.<groovy.lang.Reference: void <init>(java.lang.Object)>($r10);

        $z0 = r52 instanceof groovy.lang.Closure;

        if $z0 == 0 goto label09;

        $z4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r53, null);

        if $z4 == 0 goto label09;

        $r58 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label10;

     label09:
        $r58 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label10:
        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r58);

        if $z5 == 0 goto label13;

        $r51 = r52;

        $r49 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$Closure>;

        if $r49 != null goto label11;

        $r59 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$Closure> = $r59;

        goto label12;

     label11:
        $r59 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$Closure>;

     label12:
        $r50 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r51, $r59);

        r53 = (groovy.lang.Closure) $r50;

        r52 = null;

        goto label13;

     label13:
        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r52, null);

        if $z1 == 0 goto label14;

        $r48 = newarray (java.lang.Object)[1];

        $r48[0] = "lookAndFeel";

        r52 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r16, "remove", $r48);

        goto label14;

     label14:
        $r11 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

        if $r11 != null goto label15;

        $r47 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.util.FactoryBuilderSupport");

        $r60 = $r47;

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$util$FactoryBuilderSupport> = $r47;

        goto label16;

     label15:
        $r60 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

     label16:
        $r61 = newarray (java.lang.Object)[3];

        $r61[0] = r52;

        $r61[1] = "lookAndFeel";

        $r12 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r12 != null goto label17;

        $r62 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        $r63 = $r62;

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel> = $r62;

        goto label18;

     label17:
        $r63 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

     label18:
        $r61[2] = $r63;

        $r64 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r60, "checkValueIsTypeNotString", $r61);

        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r64);

        if $z6 == 0 goto label23;

        $r46 = r52;

        $r37 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r37 != null goto label19;

        $r65 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel> = $r65;

        goto label20;

     label19:
        $r65 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

     label20:
        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r46, $r65);

        $r39 = (javax.swing.LookAndFeel) $r38;

        virtualinvoke $r5.<groovy.lang.Reference: void set(java.lang.Object)>($r39);

        $r40 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r41 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r40, "class");

        $r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r41, "name");

        $r43 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

        if $r43 != null goto label21;

        $r66 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String> = $r66;

        goto label22;

     label21:
        $r66 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

     label22:
        $r44 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r42, $r66);

        $r45 = (java.lang.String) $r44;

        virtualinvoke $r9.<groovy.lang.Reference: void set(java.lang.Object)>($r45);

        goto label32;

     label23:
        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r52, null);

        if $z2 == 0 goto label32;

        $r27 = r13.<groovy.swing.LookAndFeelHelper: java.util.Map lafCodeNames>;

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = r52;

        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r27, "getAt", $r26);

        $r67 = $r28;

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r28);

        if $z3 == 0 goto label24;

        goto label25;

     label24:
        $r67 = r52;

     label25:
        $r29 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

        if $r29 != null goto label26;

        $r68 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r69 = $r68;

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String> = $r68;

        goto label27;

     label26:
        $r69 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

     label27:
        $r70 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r67, $r69);

        $r71 = (java.lang.String) $r70;

        virtualinvoke $r9.<groovy.lang.Reference: void set(java.lang.Object)>($r71);

        $r30 = virtualinvoke $r9.<groovy.lang.Reference: java.lang.Object get()>();

        $r72 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Class>;

        if $r72 != null goto label28;

        $r73 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Class> = $r73;

        goto label29;

     label28:
        $r73 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Class>;

     label29:
        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>($r30, $r73);

        $r32 = (java.lang.Class) $r31;

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r32, "newInstance");

        $r34 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r34 != null goto label30;

        $r74 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel> = $r74;

        goto label31;

     label30:
        $r74 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

     label31:
        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r33, $r74);

        $r36 = (javax.swing.LookAndFeel) $r35;

        virtualinvoke $r5.<groovy.lang.Reference: void set(java.lang.Object)>($r36);

        goto label32;

     label32:
        $r75 = r13.<groovy.swing.LookAndFeelHelper: java.util.Map extendedAttributes>;

        $r76 = newarray (java.lang.Object)[1];

        $r77 = virtualinvoke $r9.<groovy.lang.Reference: java.lang.Object get()>();

        $r76[0] = $r77;

        $r78 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r75, "getAt", $r76);

        $r79 = $r78;

        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r78);

        if $z7 == 0 goto label33;

        goto label34;

     label33:
        $r14 = newarray (java.lang.Object)[0];

        $r79 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r14);

     label34:
        $r15 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map>;

        if $r15 != null goto label35;

        $r80 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.util.Map");

        $r81 = $r80;

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map> = $r80;

        goto label36;

     label35:
        $r81 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$util$Map>;

     label36:
        $r82 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r79, $r81);

        $r83 = (java.util.Map) $r82;

        $r84 = new groovy.lang.Reference;

        specialinvoke $r84.<groovy.lang.Reference: void <init>(java.lang.Object)>($r83);

        $r85 = newarray (java.lang.Object)[1];

        $r86 = new groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7;

        specialinvoke $r86.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>(r13, r13, $r5, $r84, $r9);

        $r85[0] = $r86;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r16, "each", $r85);

        $z8 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r53);

        if $z8 == 0 goto label37;

        $r24 = newarray (java.lang.Object)[1];

        $r25 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r24[0] = $r25;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r53, "call", $r24);

        goto label37;

     label37:
        $r17 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager>;

        if $r17 != null goto label38;

        $r87 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("javax.swing.UIManager");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager> = $r87;

        goto label39;

     label38:
        $r87 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$UIManager>;

     label39:
        $r18 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r18[0] = $r19;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r87, "setLookAndFeel", $r18);

        $r20 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r21 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r21 != null goto label40;

        $r88 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel> = $r88;

        goto label41;

     label40:
        $r88 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$javax$swing$LookAndFeel>;

     label41:
        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r20, $r88);

        $r23 = (javax.swing.LookAndFeel) $r22;

        return $r23;
    }

    public static java.lang.String getNimbusLAFName()
    {
        java.lang.Throwable $r17, $r18;
        java.lang.Object[] $r3, $r11;
        java.lang.String $r8, $r16;
        boolean $z0;
        java.util.Iterator $r24, $r25;
        java.util.List $r4;
        java.lang.Class $r0, r1, $r2, $r6, $r10, $r14, $r19, $r20, $r21, $r22, $r23;
        java.lang.Object $r5, $r7, $r9, $r12, $r13, $r15;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r19 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r19;

        goto label02;

     label01:
        $r19 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label02:
        r1 = $r19;

        $r2 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r20 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r20;

        goto label04;

     label03:
        $r20 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = "com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel";

        $r3[1] = "sun.swing.plaf.nimbus.NimbusLookAndFeel";

        $r3[2] = "org.jdesktop.swingx.plaf.nimbus.NimbusLookAndFeel";

        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r3);

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "iterator");

     label05:
        $r24 = (java.util.Iterator) $r5;

        $z0 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r25 = (java.util.Iterator) $r5;

        $r9 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

     label06:
        $r10 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Class>;

        if $r10 != null goto label07;

        $r21 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Class> = $r21;

        goto label08;

     label07:
        $r21 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$Class>;

     label08:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r9;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r21, "forName", $r11);

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r12, "getName");

        $r14 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

        if $r14 != null goto label09;

        $r22 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String> = $r22;

        goto label10;

     label09:
        $r22 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

     label10:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r22);

        $r16 = (java.lang.String) $r15;

        return $r16;

     label11:
        $r18 := @caughtexception;

        goto label12;

     label12:
        goto label14;

     label13:
        $r17 := @caughtexception;

        throw $r17;

     label14:
        goto label05;

     label15:
        $r6 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

        if $r6 != null goto label16;

        $r23 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String> = $r23;

        goto label17;

     label16:
        $r23 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$java$lang$String>;

     label17:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r23);

        $r8 = (java.lang.String) $r7;

        return $r8;

        catch java.lang.Throwable from label06 to label11 with label11;
        catch java.lang.Throwable from label06 to label12 with label13;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        java.lang.Object[] $r10;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        groovy.swing.LookAndFeelHelper r4;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;

        r4 := @this: groovy.swing.LookAndFeelHelper;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<groovy.swing.LookAndFeelHelper: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<groovy.swing.LookAndFeelHelper: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<groovy.swing.LookAndFeelHelper: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r3;
        groovy.swing.LookAndFeelHelper r2;
        java.lang.Class $r0, $r1, $r4, $r5;

        r2 := @this: groovy.swing.LookAndFeelHelper;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<groovy.swing.LookAndFeelHelper: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.LookAndFeelHelper r2;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r5, $r6;
        java.lang.String r4;

        r2 := @this: groovy.swing.LookAndFeelHelper;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.LookAndFeelHelper: groovy.lang.MetaClass getMetaClass()>();

        $r6 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return $r6;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.LookAndFeelHelper r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        java.lang.String r4;

        r2 := @this: groovy.swing.LookAndFeelHelper;

        r4 := @parameter0: java.lang.String;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.LookAndFeelHelper: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.LookAndFeelHelper r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        java.lang.String r4;

        r2 := @this: groovy.swing.LookAndFeelHelper;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.LookAndFeelHelper: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.LookAndFeelHelper: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.LookAndFeelHelper: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119696558L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.LookAndFeelHelper: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.LookAndFeelHelper: java.lang.Long __timeStamp__239_neverHappen1239119696558> = $r5;

        return;
    }

    void super$1$wait()
    {
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$1$wait(long)
    {
        long l0;
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.swing.LookAndFeelHelper r0;
        boolean $z0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    void super$1$finalize()
    {
        groovy.swing.LookAndFeelHelper r0;

        r0 := @this: groovy.swing.LookAndFeelHelper;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
