public class groovy.swing.factory.TabbedPaneFactory extends groovy.swing.factory.BeanFactory
{
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697216;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$swing$factory$BeanFactory;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$lang$Integer;

    public void <init>(java.lang.Class)
    {
        java.lang.Object[] $r15;
        int $i0, $i1, $i2;
        java.lang.Boolean $r3;
        boolean $z0;
        groovy.swing.factory.TabbedPaneFactory r5;
        java.lang.IllegalArgumentException $r11;
        java.lang.Class $r0, $r1, r2, $r4, $r7, $r10, $r13, $r14, $r16;
        java.lang.Object $r6, $r8, $r9, $r12;

        r5 := @this: groovy.swing.factory.TabbedPaneFactory;

        r2 := @parameter0: java.lang.Class;

        $r0 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r13 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0> = $r13;

        goto label02;

     label01:
        $r13 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

     label02:
        $r1 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label03;

        $r14 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label04;

     label03:
        $r14 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = r2;

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r15[1] = $r3;

        $r4 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

        if $r4 != null goto label05;

        $r16 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BeanFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory> = $r16;

        goto label06;

     label05:
        $r16 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r15, 2, $r16);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r12 = $r15[0];

        $r15 = (java.lang.Object[]) $r12;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            default: goto label10;
        };

     label08:
        $r9 = $r15[0];

        $r10 = (java.lang.Class) $r9;

        specialinvoke r5.<groovy.swing.factory.BeanFactory: void <init>(java.lang.Class)>($r10);

        goto label11;

     label09:
        $r6 = $r15[0];

        $r7 = (java.lang.Class) $r6;

        $r8 = $r15[1];

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r8);

        specialinvoke r5.<groovy.swing.factory.BeanFactory: void <init>(java.lang.Class,boolean)>($r7, $z0);

        goto label11;

     label10:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r11;

     label11:
        return;
    }

    public java.lang.Object newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1 $r14;
        java.util.Map r11;
        groovy.util.FactoryBuilderSupport r0;
        java.lang.Object[] $r7, $r18, $r22, $r26;
        groovy.swing.factory.TabbedPaneFactory r6;
        groovy.lang.Reference $r1, $r13;
        java.lang.Class $r2, r3, $r4, $r5, $r31, $r34, $r35, $r36, $r37;
        java.lang.Object $r8, r9, r10, $r12, $r15, $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r33;

        r6 := @this: groovy.swing.factory.TabbedPaneFactory;

        r0 := @parameter0: groovy.util.FactoryBuilderSupport;

        r9 := @parameter1: java.lang.Object;

        r10 := @parameter2: java.lang.Object;

        r11 := @parameter3: java.util.Map;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

        if $r2 != null goto label1;

        $r34 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0> = $r34;

        goto label2;

     label1:
        $r34 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

     label2:
        r3 = $r34;

        $r4 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label3;

        $r35 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass> = $r35;

        goto label4;

     label3:
        $r35 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r5 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

        if $r5 != null goto label5;

        $r36 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BeanFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory> = $r36;

        goto label6;

     label5:
        $r36 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

     label6:
        $r7 = newarray (java.lang.Object)[4];

        $r8 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r7[0] = $r8;

        $r7[1] = r9;

        $r7[2] = r10;

        $r7[3] = r11;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>($r36, r6, "newInstance", $r7);

        $r13 = new groovy.lang.Reference;

        specialinvoke $r13.<groovy.lang.Reference: void <init>(java.lang.Object)>($r12);

        $r14 = new groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1;

        specialinvoke $r14.<groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>(r6, r6, $r1, $r13);

        $r15 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r15, "context");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r14, r3, $r16, "tabbedPaneFactoryClosure");

        $r17 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r18 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r19, "context");

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r20, "tabbedPaneFactoryClosure");

        $r18[0] = $r21;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r3, $r17, "addAttributeDelegate", $r18);

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = "selectedIndex";

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r3, r11, "remove", $r22);

        $r24 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r24, "context");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r23, r3, $r25, "selectedIndex");

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = "selectedComponent";

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r3, r11, "remove", $r26);

        $r28 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r28, "context");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r27, r3, $r29, "selectedComponent");

        $r30 = virtualinvoke $r13.<groovy.lang.Reference: java.lang.Object get()>();

        $r31 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Object>;

        if $r31 != null goto label7;

        $r37 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Object> = $r37;

        goto label8;

     label7:
        $r37 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Object>;

     label8:
        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r30, $r37);

        $r33 = (java.lang.Object) $r32;

        return $r33;
    }

    public static void inspectChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        java.lang.Object[] $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r24, $r26;
        java.util.Map r3;
        groovy.util.FactoryBuilderSupport r22;
        java.util.List $r27;
        java.lang.Class $r0, r1, $r2, $r28, $r29;
        java.lang.Object $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, r25;

        r22 := @parameter0: groovy.util.FactoryBuilderSupport;

        r25 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $r0 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r28 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0> = $r28;

        goto label2;

     label1:
        $r28 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

     label2:
        r1 = $r28;

        $r2 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r29 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass> = $r29;

        goto label4;

     label3:
        $r29 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "title";

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r4);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "tabIcon";

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r6);

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "tabDisabledIcon";

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r8);

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "tabToolTip";

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r10);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "tabBackground";

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r12);

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = "tabForeground";

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r14);

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = "tabEnabled";

        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r16);

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = "tabMnemonic";

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r18);

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = "tabDisplayedMnemonicIndex";

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r20);

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r22, "context");

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = r25;

        $r26 = newarray (java.lang.Object)[9];

        $r26[0] = $r5;

        $r26[1] = $r7;

        $r26[2] = $r9;

        $r26[3] = $r11;

        $r26[4] = $r13;

        $r26[5] = $r15;

        $r26[6] = $r17;

        $r26[7] = $r19;

        $r26[8] = $r21;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r26);

        $r24[1] = $r27;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r23, "put", $r24);

        return;
    }

    public void setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        java.lang.Integer $r9, $r14, $r17, $r20, $r27, $r30, $r33, $r36, $r39, $r42, $r46, $r49, $r55, $r59, $r64, $r68, $r72, $r76, $r80, $r82, $r85;
        groovy.lang.MissingPropertyException $r87;
        java.lang.Throwable $r86;
        java.lang.Object[] $r6, $r7, $r8, $r12, $r13, $r16, $r19, $r22, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r45, $r48, $r51, $r57, $r58, $r66, $r67, $r70, $r71, $r74, $r75, $r78, $r79, $r84, $r88;
        groovy.swing.factory.TabbedPaneFactory r89;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        groovy.util.FactoryBuilderSupport r4;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r56, $r65;
        java.lang.Boolean $r92;
        java.lang.Class $r0, r1, $r2, $r24, $r52, $r54, $r61, $r63, $r90, $r91, $r95, $r96, $r97;
        java.lang.Object r3, $r5, $r10, r11, $r15, $r18, $r21, $r23, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r47, $r50, $r53, $r60, $r62, $r69, $r73, $r77, $r81, $r83, $r93, r94;

        r89 := @this: groovy.swing.factory.TabbedPaneFactory;

        r4 := @parameter0: groovy.util.FactoryBuilderSupport;

        r11 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r90 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0> = $r90;

        goto label02;

     label01:
        $r90 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

     label02:
        r1 = $r90;

        $r2 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r91 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass> = $r91;

        goto label04;

     label03:
        $r91 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = r3 instanceof java.awt.Component;

        if $z0 != 0 goto label05;

        $z12 = 1;

        goto label06;

     label05:
        $z12 = 0;

     label06:
        if $z12 == 0 goto label08;

     label07:
        $r92 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label09;

     label08:
        $z1 = r3 instanceof java.awt.Window;

        if $z1 != 0 goto label07;

        $r92 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label09:
        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r92);

        if $z2 == 0 goto label10;

        return;

     label10:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r4, "context");

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r3;

        $r93 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r5, "getAt", $r6);

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r93);

        if $z3 == 0 goto label11;

        goto label12;

     label11:
        $r7 = newarray (java.lang.Object)[9];

        $r7[0] = null;

        $r7[1] = null;

        $r7[2] = null;

        $r7[3] = null;

        $r7[4] = null;

        $r7[5] = null;

        $r7[6] = null;

        $r7[7] = null;

        $r7[8] = null;

        $r93 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r7);

     label12:
        r94 = $r93;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(0);

        $r8[0] = $r9;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r93, "getAt", $r8);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r10, null);

        if $z4 == 0 goto label13;

        $r83 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "name");

        $r84 = newarray (java.lang.Object)[2];

        $r85 = new java.lang.Integer;

        specialinvoke $r85.<java.lang.Integer: void <init>(int)>(0);

        $r84[0] = $r85;

        $r84[1] = $r83;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r93, "putAt", $r84);

        goto label13;

     label13:
        $r12 = newarray (java.lang.Object)[4];

        $r13 = newarray (java.lang.Object)[1];

        $r14 = new java.lang.Integer;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>(0);

        $r13[0] = $r14;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r13);

        $r12[0] = $r15;

        $r16 = newarray (java.lang.Object)[1];

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(1);

        $r16[0] = $r17;

        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r16);

        $r12[1] = $r18;

        $r12[2] = r3;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>(3);

        $r19[0] = $r20;

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r19);

        $r12[3] = $r21;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "addTab", $r12);

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r3;

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "indexOfComponent", $r22);

        $r24 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer>;

        if $r24 != null goto label14;

        $r95 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer> = $r95;

        goto label15;

     label14:
        $r95 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer>;

     label15:
        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r23, $r95);

        $r82 = (java.lang.Integer) $r25;

        $r26 = newarray (java.lang.Object)[1];

        $r27 = new java.lang.Integer;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>(2);

        $r26[0] = $r27;

        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r26);

        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r28);

        if $z5 == 0 goto label16;

        $r78 = newarray (java.lang.Object)[2];

        $r78[0] = $r82;

        $r79 = newarray (java.lang.Object)[1];

        $r80 = new java.lang.Integer;

        specialinvoke $r80.<java.lang.Integer: void <init>(int)>(2);

        $r79[0] = $r80;

        $r81 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r79);

        $r78[1] = $r81;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "setDisabledIconAt", $r78);

        goto label16;

     label16:
        $r29 = newarray (java.lang.Object)[1];

        $r30 = new java.lang.Integer;

        specialinvoke $r30.<java.lang.Integer: void <init>(int)>(4);

        $r29[0] = $r30;

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r29);

        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r31);

        if $z6 == 0 goto label17;

        $r74 = newarray (java.lang.Object)[2];

        $r74[0] = $r82;

        $r75 = newarray (java.lang.Object)[1];

        $r76 = new java.lang.Integer;

        specialinvoke $r76.<java.lang.Integer: void <init>(int)>(4);

        $r75[0] = $r76;

        $r77 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r75);

        $r74[1] = $r77;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "setBackgroundAt", $r74);

        goto label17;

     label17:
        $r32 = newarray (java.lang.Object)[1];

        $r33 = new java.lang.Integer;

        specialinvoke $r33.<java.lang.Integer: void <init>(int)>(5);

        $r32[0] = $r33;

        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r32);

        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r34);

        if $z7 == 0 goto label18;

        $r70 = newarray (java.lang.Object)[2];

        $r70[0] = $r82;

        $r71 = newarray (java.lang.Object)[1];

        $r72 = new java.lang.Integer;

        specialinvoke $r72.<java.lang.Integer: void <init>(int)>(5);

        $r71[0] = $r72;

        $r73 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r71);

        $r70[1] = $r73;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "setForegroundAt", $r70);

        goto label18;

     label18:
        $r35 = newarray (java.lang.Object)[1];

        $r36 = new java.lang.Integer;

        specialinvoke $r36.<java.lang.Integer: void <init>(int)>(6);

        $r35[0] = $r36;

        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r35);

        $z8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r37, null);

        if $z8 == 0 goto label19;

        $r66 = newarray (java.lang.Object)[2];

        $r66[0] = $r82;

        $r67 = newarray (java.lang.Object)[1];

        $r68 = new java.lang.Integer;

        specialinvoke $r68.<java.lang.Integer: void <init>(int)>(6);

        $r67[0] = $r68;

        $r69 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r67);

        $r66[1] = $r69;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "setEnabledAt", $r66);

        goto label19;

     label19:
        $r38 = newarray (java.lang.Object)[1];

        $r39 = new java.lang.Integer;

        specialinvoke $r39.<java.lang.Integer: void <init>(int)>(7);

        $r38[0] = $r39;

        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r38);

        $z9 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r40);

        if $z9 == 0 goto label26;

        $r48 = newarray (java.lang.Object)[1];

        $r49 = new java.lang.Integer;

        specialinvoke $r49.<java.lang.Integer: void <init>(int)>(7);

        $r48[0] = $r49;

        $r50 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r48);

        $z11 = $r50 instanceof java.lang.String;

        if $z11 == 0 goto label22;

        $r57 = newarray (java.lang.Object)[2];

        $r57[0] = $r82;

        $r58 = newarray (java.lang.Object)[1];

        $r59 = new java.lang.Integer;

        specialinvoke $r59.<java.lang.Integer: void <init>(int)>(0);

        $r58[0] = $r59;

        $r60 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r50, "charAt", $r58);

        $r61 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer>;

        if $r61 != null goto label20;

        $r96 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer> = $r96;

        goto label21;

     label20:
        $r96 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer>;

     label21:
        $r62 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>($r60, $r96);

        $r64 = (java.lang.Integer) $r62;

        $r63 = <java.lang.Integer: java.lang.Class TYPE>;

        $r65 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r64, $r63);

        $r57[1] = $r65;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "setMnemonicAt", $r57);

        goto label25;

     label22:
        $r51 = newarray (java.lang.Object)[2];

        $r51[0] = $r82;

        $r52 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer>;

        if $r52 != null goto label23;

        $r97 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer> = $r97;

        goto label24;

     label23:
        $r97 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$java$lang$Integer>;

     label24:
        $r53 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>($r50, $r97);

        $r55 = (java.lang.Integer) $r53;

        $r54 = <java.lang.Integer: java.lang.Class TYPE>;

        $r56 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r55, $r54);

        $r51[1] = $r56;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "setMnemonicAt", $r51);

     label25:
        goto label26;

     label26:
        $r41 = newarray (java.lang.Object)[1];

        $r42 = new java.lang.Integer;

        specialinvoke $r42.<java.lang.Integer: void <init>(int)>(8);

        $r41[0] = $r42;

        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r41);

        $z10 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r43);

        if $z10 == 0 goto label27;

        $r44 = newarray (java.lang.Object)[2];

        $r44[0] = $r82;

        $r45 = newarray (java.lang.Object)[1];

        $r46 = new java.lang.Integer;

        specialinvoke $r46.<java.lang.Integer: void <init>(int)>(8);

        $r45[0] = $r46;

        $r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r94, "getAt", $r45);

        $r44[1] = $r47;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "setDisplayedMnemonicIndexAt", $r44);

        goto label27;

     label27:
        goto label29;

     label28:
        $r87 := @caughtexception;

        $r88 = newarray (java.lang.Object)[1];

        $r88[0] = r3;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "add", $r88);

        goto label29;

     label29:
        goto label31;

     label30:
        $r86 := @caughtexception;

        throw $r86;

     label31:
        return;

        catch groovy.lang.MissingPropertyException from label10 to label28 with label28;
        catch java.lang.Throwable from label10 to label29 with label30;
    }

    public void onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r5, $r9;
        boolean $z0, $z1;
        groovy.util.FactoryBuilderSupport r6;
        groovy.swing.factory.TabbedPaneFactory r4;
        java.lang.Class $r0, r1, $r2, $r3, $r20, $r21, $r22;
        java.lang.Object r7, r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r4 := @this: groovy.swing.factory.TabbedPaneFactory;

        r6 := @parameter0: groovy.util.FactoryBuilderSupport;

        r7 := @parameter1: java.lang.Object;

        r8 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r20 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0> = $r20;

        goto label2;

     label1:
        $r20 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

     label2:
        r1 = $r20;

        $r2 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r21 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass> = $r21;

        goto label4;

     label3:
        $r21 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

        if $r3 != null goto label5;

        $r22 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BeanFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory> = $r22;

        goto label6;

     label5:
        $r22 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

     label6:
        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r6;

        $r5[1] = r7;

        $r5[2] = r8;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>($r22, r4, "onNodeCompleted", $r5);

        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "context");

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r10, "tabbedPaneFactoryClosure");

        $r9[0] = $r11;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r6, "removeAttributeDelegate", $r9);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "context");

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r12, "selectedComponent");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r13, null);

        if $z0 == 0 goto label7;

        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "context");

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r18, "selectedComponent");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r19, r1, r8, "selectedComponent");

        goto label7;

     label7:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "context");

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r14, "selectedIndex");

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r15, null);

        if $z1 == 0 goto label8;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "context");

        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r16, "selectedIndex");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r17, r1, r8, "selectedIndex");

        goto label8;

     label8:
        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.TabbedPaneFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697216L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.factory.TabbedPaneFactory: java.lang.Long __timeStamp__239_neverHappen1239119697216> = $r5;

        return;
    }

    java.lang.Object super$3$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.swing.factory.BeanFactory: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    boolean super$3$isLeaf()
    {
        groovy.swing.factory.TabbedPaneFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        $z0 = specialinvoke r0.<groovy.swing.factory.BeanFactory: boolean isLeaf()>();

        return $z0;
    }

    void super$2$setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.TabbedPaneFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$3$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.swing.factory.BeanFactory: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    java.lang.Object super$3$newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.TabbedPaneFactory r0;
        java.util.Map r4;
        java.lang.Object r2, r3, $r5;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.util.Map;

        $r5 = specialinvoke r0.<groovy.swing.factory.BeanFactory: java.lang.Object newInstance(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object,java.util.Map)>(r1, r2, r3, r4);

        return $r5;
    }

    void super$2$setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.TabbedPaneFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    void super$1$wait()
    {
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$3$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        $r1 = specialinvoke r0.<groovy.swing.factory.BeanFactory: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$3$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<groovy.swing.factory.BeanFactory: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    void super$2$onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.TabbedPaneFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void onNodeCompleted(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$2$onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.TabbedPaneFactory r0;
        java.util.Map r3;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport,java.lang.Object,java.util.Map)>(r1, r2, r3);

        return $z0;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.swing.factory.TabbedPaneFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$3$invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.swing.factory.TabbedPaneFactory r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<groovy.swing.factory.BeanFactory: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Class super$3$getBeanClass()
    {
        java.lang.Class $r1;
        groovy.swing.factory.TabbedPaneFactory r0;

        r0 := @this: groovy.swing.factory.TabbedPaneFactory;

        $r1 = specialinvoke r0.<groovy.swing.factory.BeanFactory: java.lang.Class getBeanClass()>();

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
