class com.jidesoft.swing.FastGradientPainter extends java.lang.Object
{
    private static com.jidesoft.swing.GradientCache gradientCache;

    private void <init>()
    {
        com.jidesoft.swing.FastGradientPainter r0;

        r0 := @this: com.jidesoft.swing.FastGradientPainter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void clearGradientCache()
    {
        com.jidesoft.swing.GradientCache $r0;

        $r0 = <com.jidesoft.swing.FastGradientPainter: com.jidesoft.swing.GradientCache gradientCache>;

        virtualinvoke $r0.<com.jidesoft.swing.GradientCache: void clear()>();

        return;
    }

    public static void drawGradient(java.awt.Graphics2D, java.awt.Shape, java.awt.Color, java.awt.Color, boolean)
    {
        java.awt.Color r5, r6;
        boolean z0, $z1, z2;
        java.awt.Shape r0, r12;
        java.awt.GraphicsConfiguration $r4;
        java.awt.image.BufferedImage $r8, $r9, r11;
        com.jidesoft.swing.GradientInfo $r2;
        java.awt.Rectangle $r1;
        java.awt.Graphics2D r3;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42, i43;
        com.jidesoft.swing.GradientCache $r7, $r10;

        r3 := @parameter0: java.awt.Graphics2D;

        r0 := @parameter1: java.awt.Shape;

        r5 := @parameter2: java.awt.Color;

        r6 := @parameter3: java.awt.Color;

        z0 := @parameter4: boolean;

        $r1 = interfaceinvoke r0.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $i0 = $r1.<java.awt.Rectangle: int height>;

        if $i0 <= 0 goto label01;

        $i1 = $r1.<java.awt.Rectangle: int width>;

        if $i1 > 0 goto label02;

     label01:
        return;

     label02:
        if z0 == 0 goto label03;

        $i37 = $r1.<java.awt.Rectangle: int height>;

        goto label04;

     label03:
        $i37 = $r1.<java.awt.Rectangle: int width>;

     label04:
        i2 = $i37;

        $r2 = new com.jidesoft.swing.GradientInfo;

        $r4 = virtualinvoke r3.<java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>();

        specialinvoke $r2.<com.jidesoft.swing.GradientInfo: void <init>(java.awt.GraphicsConfiguration,int,java.awt.Color,java.awt.Color,boolean)>($r4, $i37, r5, r6, z0);

        $r7 = <com.jidesoft.swing.FastGradientPainter: com.jidesoft.swing.GradientCache gradientCache>;

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.GradientCache: java.awt.image.BufferedImage retrieve(com.jidesoft.swing.GradientInfo)>($r2);

        r11 = $r8;

        if $r8 != null goto label05;

        $r9 = staticinvoke <com.jidesoft.swing.FastGradientPainter: java.awt.image.BufferedImage createGradientTile(com.jidesoft.swing.GradientInfo)>($r2);

        r11 = $r9;

        $r10 = <com.jidesoft.swing.FastGradientPainter: com.jidesoft.swing.GradientCache gradientCache>;

        virtualinvoke $r10.<com.jidesoft.swing.GradientCache: java.lang.Object store(com.jidesoft.swing.GradientInfo,java.awt.image.BufferedImage)>($r2, $r9);

     label05:
        r12 = null;

        z2 = 0;

        $z1 = virtualinvoke $r1.<java.awt.Rectangle: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label06;

        z2 = 1;

        r12 = virtualinvoke r3.<java.awt.Graphics2D: java.awt.Shape getClip()>();

        virtualinvoke r3.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r0);

     label06:
        if z0 == 0 goto label10;

        $i20 = virtualinvoke r11.<java.awt.image.BufferedImage: int getWidth()>();

        $i21 = $r1.<java.awt.Rectangle: int width>;

        i38 = $i21 / $i20;

        i39 = 0;

     label07:
        if i39 >= i38 goto label08;

        $i34 = $r1.<java.awt.Rectangle: int x>;

        $i33 = i39 * $i20;

        $i36 = $i34 + $i33;

        $i35 = $r1.<java.awt.Rectangle: int y>;

        virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r11, $i36, $i35, null);

        i39 = i39 + 1;

        goto label07;

     label08:
        $i22 = $r1.<java.awt.Rectangle: int width>;

        i40 = $i22 % $i20;

        if i40 <= 0 goto label09;

        $i24 = $r1.<java.awt.Rectangle: int x>;

        $i23 = i38 * $i20;

        $i32 = $i24 + $i23;

        $i31 = $r1.<java.awt.Rectangle: int y>;

        $i26 = $r1.<java.awt.Rectangle: int x>;

        $i25 = i38 * $i20;

        $i27 = $i26 + $i25;

        $i30 = $i27 + i40;

        $i28 = $r1.<java.awt.Rectangle: int y>;

        $i29 = $i28 + i2;

        virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(r11, $i32, $i31, $i30, $i29, 0, 0, i40, i2, null);

     label09:
        goto label13;

     label10:
        $i3 = virtualinvoke r11.<java.awt.image.BufferedImage: int getHeight()>();

        $i4 = $r1.<java.awt.Rectangle: int height>;

        i41 = $i4 / $i3;

        i42 = 0;

     label11:
        if i42 >= i41 goto label12;

        $i19 = $r1.<java.awt.Rectangle: int x>;

        $i17 = $r1.<java.awt.Rectangle: int y>;

        $i16 = i42 * $i3;

        $i18 = $i17 + $i16;

        virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r11, $i19, $i18, null);

        i42 = i42 + 1;

        goto label11;

     label12:
        $i5 = $r1.<java.awt.Rectangle: int height>;

        i43 = $i5 % $i3;

        if i43 <= 0 goto label13;

        $i15 = $r1.<java.awt.Rectangle: int x>;

        $i7 = $r1.<java.awt.Rectangle: int y>;

        $i6 = i41 * $i3;

        $i14 = $i7 + $i6;

        $i8 = $r1.<java.awt.Rectangle: int x>;

        $i13 = $i8 + i2;

        $i10 = $r1.<java.awt.Rectangle: int y>;

        $i9 = i41 * $i3;

        $i11 = $i10 + $i9;

        $i12 = $i11 + i43;

        virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(r11, $i15, $i14, $i13, $i12, 0, 0, i2, i43, null);

     label13:
        if z2 == 0 goto label14;

        virtualinvoke r3.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r12);

     label14:
        return;
    }

    private static java.awt.image.BufferedImage createGradientTile(com.jidesoft.swing.GradientInfo)
    {
        java.awt.Color $r1, $r5, $r6, $r8;
        byte $b10;
        java.awt.Graphics2D $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        boolean z0, $z1, $z2;
        java.awt.GraphicsConfiguration $r2;
        java.awt.image.BufferedImage $r3;
        com.jidesoft.swing.GradientInfo r0;
        java.awt.GradientPaint $r4;
        float $f0, $f1;

        r0 := @parameter0: com.jidesoft.swing.GradientInfo;

        $r1 = r0.<com.jidesoft.swing.GradientInfo: java.awt.Color startColor>;

        $i0 = virtualinvoke $r1.<java.awt.Color: int getTransparency()>();

        if $i0 > 1 goto label1;

        $r8 = r0.<com.jidesoft.swing.GradientInfo: java.awt.Color endColor>;

        $i5 = virtualinvoke $r8.<java.awt.Color: int getTransparency()>();

        if $i5 <= 1 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $z1 = r0.<com.jidesoft.swing.GradientInfo: boolean isVertical>;

        if $z1 == 0 goto label4;

        i6 = 0;

        $i4 = r0.<com.jidesoft.swing.GradientInfo: int length>;

        i7 = $i4;

        i8 = $i4;

        i9 = 32;

        goto label5;

     label4:
        $i1 = r0.<com.jidesoft.swing.GradientInfo: int length>;

        i6 = $i1;

        i9 = $i1;

        i7 = 0;

        i8 = 32;

     label5:
        $r2 = r0.<com.jidesoft.swing.GradientInfo: java.awt.GraphicsConfiguration gfxConfig>;

        $i2 = i9;

        $i3 = i8;

        if z0 == 0 goto label6;

        $b10 = 3;

        goto label7;

     label6:
        $b10 = 1;

     label7:
        $r3 = virtualinvoke $r2.<java.awt.GraphicsConfiguration: java.awt.image.BufferedImage createCompatibleImage(int,int,int)>($i2, $i3, $b10);

        $r4 = new java.awt.GradientPaint;

        $r6 = r0.<com.jidesoft.swing.GradientInfo: java.awt.Color startColor>;

        $f1 = (float) i6;

        $f0 = (float) i7;

        $r5 = r0.<com.jidesoft.swing.GradientInfo: java.awt.Color endColor>;

        specialinvoke $r4.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, $r6, $f1, $f0, $r5);

        $r7 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        virtualinvoke $r7.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r4);

        virtualinvoke $r7.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i9, i8);

        virtualinvoke $r7.<java.awt.Graphics2D: void dispose()>();

        return $r3;
    }

    static void <clinit>()
    {
        com.jidesoft.swing.GradientCache $r0;

        $r0 = new com.jidesoft.swing.GradientCache;

        specialinvoke $r0.<com.jidesoft.swing.GradientCache: void <init>()>();

        <com.jidesoft.swing.FastGradientPainter: com.jidesoft.swing.GradientCache gradientCache> = $r0;

        return;
    }
}
