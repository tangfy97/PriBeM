public final class org.apache.poi.hslf.record.PersistPtrHolder extends org.apache.poi.hslf.record.PositionDependentRecordAtom
{
    private byte[] _header;
    private byte[] _ptrData;
    private long _type;
    private java.util.Hashtable _slideLocations;
    private java.util.Hashtable _slideOffsetDataLocation;

    public int[] getKnownSlideIDs()
    {
        java.util.Enumeration $r4;
        org.apache.poi.hslf.record.PersistPtrHolder r0;
        java.lang.Integer r6;
        int[] r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r5;
        java.util.Hashtable $r1, $r3;

        r0 := @this: org.apache.poi.hslf.record.PersistPtrHolder;

        $r1 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations>;

        $i0 = virtualinvoke $r1.<java.util.Hashtable: int size()>();

        r2 = newarray (int)[$i0];

        $r3 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.util.Enumeration keys()>();

        i3 = 0;

     label1:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        r2[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.util.Hashtable getSlideLocationsLookup()
    {
        org.apache.poi.hslf.record.PersistPtrHolder r0;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.poi.hslf.record.PersistPtrHolder;

        $r1 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations>;

        return $r1;
    }

    public java.util.Hashtable getSlideOffsetDataLocationsLookup()
    {
        org.apache.poi.hslf.record.PersistPtrHolder r0;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.poi.hslf.record.PersistPtrHolder;

        $r1 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideOffsetDataLocation>;

        return $r1;
    }

    public void addSlideLookup(int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r10, $r12;
        org.apache.poi.hslf.record.PersistPtrHolder r0;
        java.lang.Integer $r6, $r7, $r9, $r11;
        int $i0, $i1, $i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.util.Hashtable $r5, $r8;

        r0 := @this: org.apache.poi.hslf.record.PersistPtrHolder;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 8;

        r2 = newarray (byte)[$i1];

        $r4 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $r3 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $i2 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i2);

        $r5 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r8 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideOffsetDataLocation>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r10 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $i5 = lengthof $r10;

        $i6 = $i5 + 4;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        i12 = i3 + 1048576;

        $i7 = lengthof r2;

        $i8 = $i7 - 8;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, $i8, i12);

        $i9 = lengthof r2;

        $i10 = $i9 - 4;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, $i10, i4);

        r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData> = r2;

        $r12 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _header>;

        $i11 = lengthof r2;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r12, 4, $i11);

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r7, $r8, $r9, $r10, $r11, $r18;
        java.lang.Integer $r13, $r14, $r16, $r17;
        org.apache.poi.hslf.record.PersistPtrHolder r0;
        long $l2, $l6, $l7, $l10, $l11, $l14;
        int i0, $i1, $i3, $i4, $i5, i8, $i9, i12, i13, $i15, i16, i17, $i18, i19;
        java.util.Hashtable $r5, $r6, $r12, $r15;

        r0 := @this: org.apache.poi.hslf.record.PersistPtrHolder;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i16 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.PositionDependentRecordAtom: void <init>()>();

        if i16 >= 8 goto label1;

        i16 = 8;

     label1:
        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $r4 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _header>;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r4, 2);

        $l2 = (long) $i1;

        r0.<org.apache.poi.hslf.record.PersistPtrHolder: long _type> = $l2;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations> = $r5;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideOffsetDataLocation> = $r6;

        $i3 = i16 - 8;

        $r7 = newarray (byte)[$i3];

        r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData> = $r7;

        $i5 = i0 + 8;

        $r9 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $r8 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $i4 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i5, $r9, 0, $i4);

        i17 = 0;

     label2:
        $r18 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $i18 = lengthof $r18;

        if i17 >= $i18 goto label5;

        $r10 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $l6 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>($r10, i17);

        $l7 = $l6 >> 20;

        i8 = (int) $l7;

        $i9 = i8 << 20;

        $l10 = (long) $i9;

        $l11 = $l6 - $l10;

        i12 = (int) $l11;

        i17 = i17 + 4;

        i19 = 0;

     label3:
        if i19 >= i8 goto label4;

        i13 = i12 + i19;

        $r11 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $l14 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>($r11, i17);

        $r12 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        $i15 = (int) $l14;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        $r15 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideOffsetDataLocation>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17);

        virtualinvoke $r15.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        i17 = i17 + 4;

        i19 = i19 + 1;

        goto label3;

     label4:
        goto label2;

     label5:
        return;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.PersistPtrHolder r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.PersistPtrHolder;

        $l0 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: long _type>;

        return $l0;
    }

    public void updateOtherRecordReferences(java.util.Hashtable)
    {
        byte[] $r10;
        org.apache.poi.hslf.record.PersistPtrHolder r0;
        java.lang.Integer $r2, r5, $r21, r22;
        int[] $r1;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r19;
        java.util.Hashtable $r3, r6, $r8, $r11, $r12;
        org.apache.poi.util.POILogger $r14, $r20;
        java.lang.Object $r4, $r7, $r9;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18;

        r0 := @this: org.apache.poi.hslf.record.PersistPtrHolder;

        r6 := @parameter0: java.util.Hashtable;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.record.PersistPtrHolder: int[] getKnownSlideIDs()>();

        i4 = 0;

     label1:
        $i0 = lengthof $r1;

        if i4 >= $i0 goto label3;

        $i1 = $r1[i4];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.Integer) $r4;

        $r7 = virtualinvoke r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        r22 = (java.lang.Integer) $r7;

        if r22 != null goto label2;

        $r14 = <org.apache.poi.hslf.record.PersistPtrHolder: org.apache.poi.util.POILogger logger>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find the new location of the \"slide\" with id ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that used to be at ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r19);

        $r20 = <org.apache.poi.hslf.record.PersistPtrHolder: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r20.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "Not updating the position of it, you probably won\'t be able to find it any more (if you ever could!)");

        r22 = r5;

     label2:
        $r8 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideOffsetDataLocation>;

        $r9 = virtualinvoke $r8.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r21 = (java.lang.Integer) $r9;

        $r10 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        $i2 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $i3 = virtualinvoke r22.<java.lang.Integer: int intValue()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r10, $i2, $i3);

        $r11 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r2);

        $r12 = r0.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable _slideLocations>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r22);

        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r3;
        org.apache.poi.hslf.record.PersistPtrHolder r1;

        r1 := @this: org.apache.poi.hslf.record.PersistPtrHolder;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = r1.<org.apache.poi.hslf.record.PersistPtrHolder: byte[] _ptrData>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }
}
