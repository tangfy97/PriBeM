public class ucar.nc2.ft.point.standard.Table$TableMultidimInner3D extends ucar.nc2.ft.point.standard.Table
{
    ucar.ma2.StructureMembers sm;
    ucar.nc2.Dimension dim;
    ucar.nc2.Dimension inner;
    ucar.nc2.Dimension middle;
    ucar.nc2.dataset.NetcdfDataset ds;
    static final boolean $assertionsDisabled;

    void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.TableConfig r2;
        ucar.ma2.StructureMembers $r9, $r23, $r35;
        java.lang.AssertionError $r41, $r43, $r45;
        java.lang.String $r3, $r5, $r7, $r10, $r24, $r25, $r26, $r36, $r37, $r38, $r40, $r42, $r44, r46;
        ucar.nc2.Dimension $r4, $r6, $r8, $r15, $r16, $r17, $r18, $r19, $r20;
        ucar.nc2.dataset.NetcdfDataset r1;
        int[] $r22, r33, $r34, r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.ma2.DataType $r27, $r39;
        java.util.List $r11, $r12, $r21, $r28, $r32;
        ucar.nc2.ft.point.standard.Table$TableMultidimInner3D r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.Variable $r31, r47;
        java.util.Iterator $r13, $r29;
        java.lang.Object $r14, $r30;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInner3D;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke r0.<ucar.nc2.ft.point.standard.Table: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig)>(r1, r2);

        r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.dataset.NetcdfDataset ds> = r1;

        $z0 = <ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r44 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        if $r44 != null goto label01;

        $r45 = new java.lang.AssertionError;

        specialinvoke $r45.<java.lang.AssertionError: void <init>()>();

        throw $r45;

     label01:
        $z1 = <ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r42 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        if $r42 != null goto label02;

        $r43 = new java.lang.AssertionError;

        specialinvoke $r43.<java.lang.AssertionError: void <init>()>();

        throw $r43;

     label02:
        $z2 = <ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r40 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        if $r40 != null goto label03;

        $r41 = new java.lang.AssertionError;

        specialinvoke $r41.<java.lang.AssertionError: void <init>()>();

        throw $r41;

     label03:
        $r3 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        $r4 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r3);

        r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension dim> = $r4;

        $r5 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        $r6 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r5);

        r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension inner> = $r6;

        $r7 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        $r8 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r7);

        r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension middle> = $r8;

        $r9 = new ucar.ma2.StructureMembers;

        $r10 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String name>;

        specialinvoke $r9.<ucar.ma2.StructureMembers: void <init>(java.lang.String)>($r10);

        r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.ma2.StructureMembers sm> = $r9;

        $r11 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        if $r11 == null goto label07;

        $r28 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label06;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.lang.String) $r30;

        $r31 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r46);

        if $r31 != null goto label05;

        goto label04;

     label05:
        $r32 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: java.util.List cols>;

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r31);

        $i4 = virtualinvoke $r31.<ucar.nc2.Variable: int getRank()>();

        $i5 = $i4 - 3;

        r33 = newarray (int)[$i5];

        $r34 = virtualinvoke $r31.<ucar.nc2.Variable: int[] getShape()>();

        $i6 = $i4 - 3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r34, 3, r33, 0, $i6);

        $r35 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.ma2.StructureMembers sm>;

        $r36 = virtualinvoke $r31.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r37 = virtualinvoke $r31.<ucar.nc2.Variable: java.lang.String getDescription()>();

        $r38 = virtualinvoke $r31.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r39 = virtualinvoke $r31.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        virtualinvoke $r35.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>($r36, $r37, $r38, $r39, r33);

        goto label04;

     label06:
        goto label11;

     label07:
        $r12 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z7 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label11;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r47 = (ucar.nc2.Variable) $r14;

        $i0 = virtualinvoke r47.<ucar.nc2.Variable: int getRank()>();

        if $i0 >= 3 goto label09;

        goto label08;

     label09:
        $r15 = virtualinvoke r47.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r16 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension dim>;

        $z3 = virtualinvoke $r15.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label10;

        $r17 = virtualinvoke r47.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        $r18 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension middle>;

        $z4 = virtualinvoke $r17.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r18);

        if $z4 == 0 goto label10;

        $r19 = virtualinvoke r47.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(2);

        $r20 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension inner>;

        $z5 = virtualinvoke $r19.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r20);

        if $z5 == 0 goto label10;

        $r21 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: java.util.List cols>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(r47);

        $i1 = virtualinvoke r47.<ucar.nc2.Variable: int getRank()>();

        $i2 = $i1 - 3;

        r48 = newarray (int)[$i2];

        $r22 = virtualinvoke r47.<ucar.nc2.Variable: int[] getShape()>();

        $i3 = $i1 - 3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 3, r48, 0, $i3);

        $r23 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.ma2.StructureMembers sm>;

        $r24 = virtualinvoke r47.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r25 = virtualinvoke r47.<ucar.nc2.Variable: java.lang.String getDescription()>();

        $r26 = virtualinvoke r47.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r27 = virtualinvoke r47.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        virtualinvoke $r23.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>($r24, $r25, $r26, $r27, r48);

     label10:
        goto label08;

     label11:
        return;
    }

    protected void showTableExtraInfo(java.lang.String, java.util.Formatter)
    {
        java.lang.Object[] $r1;
        java.util.Formatter r0;
        ucar.ma2.StructureMembers $r4;
        ucar.nc2.Dimension $r6;
        java.lang.String r2, $r5, $r7;
        ucar.nc2.ft.point.standard.Table$TableMultidimInner3D r3;

        r3 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInner3D;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r4 = r3.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.ma2.StructureMembers sm>;

        $r5 = virtualinvoke $r4.<ucar.ma2.StructureMembers: java.lang.String getName()>();

        $r1[1] = $r5;

        $r6 = r3.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension dim>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r1[2] = $r7;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%sStructureMembers=%s, dim=%s%n", $r1);

        return;
    }

    public java.lang.String showDimension()
    {
        ucar.nc2.Dimension $r1;
        java.lang.String $r2;
        ucar.nc2.ft.point.standard.Table$TableMultidimInner3D r0;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInner3D;

        $r1 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension dim>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        return $r2;
    }

    public ucar.nc2.dataset.VariableDS findVariable(java.lang.String)
    {
        ucar.nc2.dataset.VariableDS $r4;
        ucar.nc2.Variable $r3;
        java.lang.String r1;
        ucar.nc2.dataset.NetcdfDataset $r2;
        ucar.nc2.ft.point.standard.Table$TableMultidimInner3D r0;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInner3D;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.dataset.NetcdfDataset ds>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r1);

        $r4 = (ucar.nc2.dataset.VariableDS) $r3;

        return $r4;
    }

    public ucar.ma2.StructureDataIterator getStructureDataIterator(ucar.nc2.ft.point.standard.Cursor, int) throws java.io.IOException
    {
        ucar.ma2.StructureDataIterator $r11;
        ucar.ma2.StructureMembers$Member $r19;
        ucar.ma2.StructureData r2;
        int[] $r3, $r6;
        int i0, $i1, i2;
        java.lang.String $r14, $r18;
        boolean $z0;
        ucar.ma2.ArrayStructureMA $r4;
        ucar.ma2.StructureData[] $r1;
        java.util.Iterator $r10;
        ucar.ma2.Array $r15, $r16, $r20;
        java.util.List $r9;
        ucar.ma2.StructureMembers $r8, $r17;
        ucar.nc2.VariableSimpleIF r13;
        ucar.nc2.ft.point.standard.Cursor r0;
        ucar.nc2.Dimension $r7;
        java.lang.Object $r12;
        ucar.nc2.ft.point.standard.Table$TableMultidimInner3D r5;

        r5 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInner3D;

        r0 := @parameter0: ucar.nc2.ft.point.standard.Cursor;

        i2 := @parameter1: int;

        $r1 = r0.<ucar.nc2.ft.point.standard.Cursor: ucar.ma2.StructureData[] tableData>;

        r2 = $r1[2];

        $r3 = r0.<ucar.nc2.ft.point.standard.Cursor: int[] recnum>;

        i0 = $r3[1];

        $r4 = new ucar.ma2.ArrayStructureMA;

        $r8 = r5.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.ma2.StructureMembers sm>;

        $r6 = newarray (int)[1];

        $r7 = r5.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension inner>;

        $i1 = virtualinvoke $r7.<ucar.nc2.Dimension: int getLength()>();

        $r6[0] = $i1;

        specialinvoke $r4.<ucar.ma2.ArrayStructureMA: void <init>(ucar.ma2.StructureMembers,int[])>($r8, $r6);

        $r9 = r5.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: java.util.List cols>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r13 = (ucar.nc2.VariableSimpleIF) $r12;

        $r14 = interfaceinvoke r13.<ucar.nc2.VariableSimpleIF: java.lang.String getShortName()>();

        $r15 = virtualinvoke r2.<ucar.ma2.StructureData: ucar.ma2.Array getArray(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<ucar.ma2.Array: ucar.ma2.Array slice(int,int)>(0, i0);

        $r17 = r5.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.ma2.StructureMembers sm>;

        $r18 = interfaceinvoke r13.<ucar.nc2.VariableSimpleIF: java.lang.String getShortName()>();

        $r19 = virtualinvoke $r17.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r18);

        $r20 = virtualinvoke $r16.<ucar.ma2.Array: ucar.ma2.Array copy()>();

        virtualinvoke $r19.<ucar.ma2.StructureMembers$Member: void setDataArray(ucar.ma2.Array)>($r20);

        goto label1;

     label2:
        $r11 = virtualinvoke $r4.<ucar.ma2.ArrayStructureMA: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

        return $r11;
    }

    public java.lang.String getName()
    {
        java.lang.String $r4, $r8, $r12, $r15;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r9, $r10, $r13, $r14;
        ucar.nc2.Dimension $r3, $r7, $r11;
        ucar.nc2.ft.point.standard.Table$TableMultidimInner3D r2;

        r2 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInner3D;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multidim(");

        $r3 = r2.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension dim>;

        $r4 = virtualinvoke $r3.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = r2.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension middle>;

        $r8 = virtualinvoke $r7.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r11 = r2.<ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: ucar.nc2.Dimension inner>;

        $r12 = virtualinvoke $r11.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/ft/point/standard/Table;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.ft.point.standard.Table$TableMultidimInner3D: boolean $assertionsDisabled> = $z1;

        return;
    }
}
