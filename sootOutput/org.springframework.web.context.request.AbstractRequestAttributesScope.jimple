public abstract class org.springframework.web.context.request.AbstractRequestAttributesScope extends java.lang.Object implements org.springframework.beans.factory.config.Scope
{

    public void <init>()
    {
        org.springframework.web.context.request.AbstractRequestAttributesScope r0;

        r0 := @this: org.springframework.web.context.request.AbstractRequestAttributesScope;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object get(java.lang.String, org.springframework.beans.factory.ObjectFactory)
    {
        org.springframework.beans.factory.ObjectFactory r4;
        org.springframework.web.context.request.AbstractRequestAttributesScope r2;
        int $i0, $i1;
        org.springframework.web.context.request.RequestAttributes $r0;
        java.lang.Object $r3, $r5, r6;
        java.lang.String r1;

        r2 := @this: org.springframework.web.context.request.AbstractRequestAttributesScope;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.springframework.beans.factory.ObjectFactory;

        $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes currentRequestAttributes()>();

        $i0 = virtualinvoke r2.<org.springframework.web.context.request.AbstractRequestAttributesScope: int getScope()>();

        $r3 = interfaceinvoke $r0.<org.springframework.web.context.request.RequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>(r1, $i0);

        r6 = $r3;

        if $r3 != null goto label1;

        $r5 = interfaceinvoke r4.<org.springframework.beans.factory.ObjectFactory: java.lang.Object getObject()>();

        r6 = $r5;

        $i1 = virtualinvoke r2.<org.springframework.web.context.request.AbstractRequestAttributesScope: int getScope()>();

        interfaceinvoke $r0.<org.springframework.web.context.request.RequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>(r1, $r5, $i1);

     label1:
        return r6;
    }

    public java.lang.Object remove(java.lang.String)
    {
        org.springframework.web.context.request.AbstractRequestAttributesScope r2;
        int $i0, $i1;
        org.springframework.web.context.request.RequestAttributes $r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r2 := @this: org.springframework.web.context.request.AbstractRequestAttributesScope;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes currentRequestAttributes()>();

        $i0 = virtualinvoke r2.<org.springframework.web.context.request.AbstractRequestAttributesScope: int getScope()>();

        $r3 = interfaceinvoke $r0.<org.springframework.web.context.request.RequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>(r1, $i0);

        if $r3 == null goto label1;

        $i1 = virtualinvoke r2.<org.springframework.web.context.request.AbstractRequestAttributesScope: int getScope()>();

        interfaceinvoke $r0.<org.springframework.web.context.request.RequestAttributes: void removeAttribute(java.lang.String,int)>(r1, $i1);

        return $r3;

     label1:
        return null;
    }

    public void registerDestructionCallback(java.lang.String, java.lang.Runnable)
    {
        org.springframework.web.context.request.AbstractRequestAttributesScope r3;
        int $i0;
        org.springframework.web.context.request.RequestAttributes $r0;
        java.lang.String r1;
        java.lang.Runnable r2;

        r3 := @this: org.springframework.web.context.request.AbstractRequestAttributesScope;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Runnable;

        $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes currentRequestAttributes()>();

        $i0 = virtualinvoke r3.<org.springframework.web.context.request.AbstractRequestAttributesScope: int getScope()>();

        interfaceinvoke $r0.<org.springframework.web.context.request.RequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>(r1, r2, $i0);

        return;
    }

    public java.lang.Object resolveContextualObject(java.lang.String)
    {
        org.springframework.web.context.request.AbstractRequestAttributesScope r3;
        org.springframework.web.context.request.RequestAttributes $r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r3 := @this: org.springframework.web.context.request.AbstractRequestAttributesScope;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes currentRequestAttributes()>();

        $r2 = interfaceinvoke $r0.<org.springframework.web.context.request.RequestAttributes: java.lang.Object resolveReference(java.lang.String)>(r1);

        return $r2;
    }

    protected abstract int getScope();
}
