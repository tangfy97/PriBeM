class org.apache.lucene.search.spans.NearSpansUnordered$CellQueue extends org.apache.lucene.util.PriorityQueue
{
    final org.apache.lucene.search.spans.NearSpansUnordered this$0;

    public void <init>(org.apache.lucene.search.spans.NearSpansUnordered, int)
    {
        int i0;
        org.apache.lucene.search.spans.NearSpansUnordered$CellQueue r0;
        org.apache.lucene.search.spans.NearSpansUnordered r1;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$CellQueue;

        r1 := @parameter0: org.apache.lucene.search.spans.NearSpansUnordered;

        i0 := @parameter1: int;

        r0.<org.apache.lucene.search.spans.NearSpansUnordered$CellQueue: org.apache.lucene.search.spans.NearSpansUnordered this$0> = r1;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void <init>(int)>(i0);

        return;
    }

    protected final boolean lessThan(org.apache.lucene.search.spans.NearSpansUnordered$SpansCell, org.apache.lucene.search.spans.NearSpansUnordered$SpansCell)
    {
        org.apache.lucene.search.spans.NearSpansUnordered$CellQueue r2;
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r2 := @this: org.apache.lucene.search.spans.NearSpansUnordered$CellQueue;

        r0 := @parameter0: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        r1 := @parameter1: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int doc()>();

        $i1 = virtualinvoke r1.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int doc()>();

        if $i0 != $i1 goto label1;

        $z0 = staticinvoke <org.apache.lucene.search.spans.NearSpansOrdered: boolean docSpansOrdered(org.apache.lucene.search.spans.Spans,org.apache.lucene.search.spans.Spans)>(r0, r1);

        return $z0;

     label1:
        $i2 = virtualinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int doc()>();

        $i3 = virtualinvoke r1.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int doc()>();

        if $i2 >= $i3 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected volatile boolean lessThan(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell $r3, $r4;
        java.lang.Object r1, r2;
        org.apache.lucene.search.spans.NearSpansUnordered$CellQueue r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$CellQueue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.search.spans.NearSpansUnordered$SpansCell) r1;

        $r3 = (org.apache.lucene.search.spans.NearSpansUnordered$SpansCell) r2;

        $z0 = virtualinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$CellQueue: boolean lessThan(org.apache.lucene.search.spans.NearSpansUnordered$SpansCell,org.apache.lucene.search.spans.NearSpansUnordered$SpansCell)>($r4, $r3);

        return $z0;
    }
}
