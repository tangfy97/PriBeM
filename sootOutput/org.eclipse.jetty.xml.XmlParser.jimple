public class org.eclipse.jetty.xml.XmlParser extends java.lang.Object
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private java.util.Map _redirectMap;
    private javax.xml.parsers.SAXParser _parser;
    private java.util.Map _observerMap;
    private java.util.Stack _observers;
    private java.lang.String _xpath;
    private java.lang.Object _xpaths;
    private java.lang.String _dtd;

    public void <init>()
    {
        javax.xml.parsers.SAXParserFactory $r3;
        org.eclipse.jetty.xml.XmlParser r0;
        java.util.HashMap $r1;
        java.util.Stack $r2;
        java.lang.Boolean $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.xml.XmlParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlParser: java.util.Map _redirectMap> = $r1;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlParser: java.util.Stack _observers> = $r2;

        $r3 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String toString()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.xerces.");

        if $z0 == 0 goto label1;

        $r8 = "true";

        goto label2;

     label1:
        $r8 = "false";

     label2:
        $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("org.eclipse.jetty.xml.XmlParser.Validating", $r8);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser: void setValidating(boolean)>($z1);

        return;
    }

    public void <init>(boolean)
    {
        org.eclipse.jetty.xml.XmlParser r0;
        java.util.HashMap $r1;
        java.util.Stack $r2;
        boolean z0;

        r0 := @this: org.eclipse.jetty.xml.XmlParser;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlParser: java.util.Map _redirectMap> = $r1;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlParser: java.util.Stack _observers> = $r2;

        virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser: void setValidating(boolean)>(z0);

        return;
    }

    public void setValidating(boolean)
    {
        java.lang.Object[] $r14;
        javax.xml.parsers.SAXParserFactory $r0;
        java.lang.Error $r9;
        org.eclipse.jetty.xml.XmlParser r1;
        org.xml.sax.XMLReader $r4, $r6, $r19, $r21, $r23;
        javax.xml.parsers.SAXParser $r2, $r3, $r5, $r18, $r20, $r22;
        java.lang.String $r10, $r13;
        boolean z0;
        java.lang.Exception $r7, $r11, $r15;
        org.eclipse.jetty.util.log.Logger $r8, $r12, $r16, $r17;

        r1 := @this: org.eclipse.jetty.xml.XmlParser;

        z0 := @parameter0: boolean;

     label01:
        $r0 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(z0);

        $r2 = virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r1.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser> = $r2;

     label02:
        if z0 == 0 goto label03;

        $r5 = r1.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        $r6 = virtualinvoke $r5.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r6.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema", z0);

     label03:
        goto label06;

     label04:
        $r15 := @caughtexception;

        if z0 == 0 goto label05;

        $r17 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r17.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Schema validation may not be supported: ", $r15);

        goto label06;

     label05:
        $r16 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r15);

     label06:
        $r18 = r1.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        $r19 = virtualinvoke $r18.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r19.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/validation", z0);

        $r20 = r1.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        $r21 = virtualinvoke $r20.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r21.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        $r22 = r1.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        $r23 = virtualinvoke $r22.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r23.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 0);

     label07:
        if z0 == 0 goto label08;

        $r3 = r1.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        $r4 = virtualinvoke $r3.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/nonvalidating/load-external-dtd", z0);

     label08:
        goto label10;

     label09:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        $r13 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        $r14 = newarray (java.lang.Object)[0];

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r13, $r14);

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

        $r8 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r7);

        $r9 = new java.lang.Error;

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>($r10);

        throw $r9;

     label12:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label01 to label10 with label11;
    }

    public synchronized void redirectEntity(java.lang.String, java.net.URL)
    {
        java.net.URL r0;
        java.util.Map $r3;
        org.eclipse.jetty.xml.XmlParser r1;
        java.lang.String r2;

        r1 := @this: org.eclipse.jetty.xml.XmlParser;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.net.URL;

        if r0 == null goto label1;

        $r3 = r1.<org.eclipse.jetty.xml.XmlParser: java.util.Map _redirectMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label1:
        return;
    }

    public java.lang.String getXpath()
    {
        org.eclipse.jetty.xml.XmlParser r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.xml.XmlParser;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser: java.lang.String _xpath>;

        return $r1;
    }

    public void setXpath(java.lang.String)
    {
        java.util.StringTokenizer $r2;
        org.eclipse.jetty.xml.XmlParser r0;
        java.lang.Object $r3, $r5;
        java.lang.String r1, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.xml.XmlParser;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.xml.XmlParser: java.lang.String _xpath> = r1;

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, "| ");

     label1:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jetty.xml.XmlParser: java.lang.Object _xpaths>;

        $r4 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r5 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r3, $r4);

        r0.<org.eclipse.jetty.xml.XmlParser: java.lang.Object _xpaths> = $r5;

        goto label1;

     label2:
        return;
    }

    public java.lang.String getDTD()
    {
        org.eclipse.jetty.xml.XmlParser r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.xml.XmlParser;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser: java.lang.String _dtd>;

        return $r1;
    }

    public synchronized void addContentHandler(java.lang.String, org.xml.sax.ContentHandler)
    {
        java.util.Map $r1, $r4;
        org.eclipse.jetty.xml.XmlParser r0;
        java.util.HashMap $r5;
        java.lang.String r2;
        org.xml.sax.ContentHandler r3;

        r0 := @this: org.eclipse.jetty.xml.XmlParser;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.xml.sax.ContentHandler;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser: java.util.Map _observerMap>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlParser: java.util.Map _observerMap> = $r5;

     label1:
        $r4 = r0.<org.eclipse.jetty.xml.XmlParser: java.util.Map _observerMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public synchronized org.eclipse.jetty.xml.XmlParser$Node parse(org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.lang.Object[] $r21;
        org.eclipse.jetty.xml.XmlParser r0;
        org.xml.sax.XMLReader $r3;
        org.eclipse.jetty.xml.XmlParser$Node $r8, r10;
        javax.xml.parsers.SAXParser $r2, $r6;
        org.eclipse.jetty.xml.XmlParser$Handler $r1;
        java.lang.String $r15, $r18, $r20;
        boolean $z0;
        org.xml.sax.InputSource r5;
        org.xml.sax.SAXParseException $r7, $r11;
        java.lang.Object $r9;
        java.lang.StringBuilder $r12, $r14, $r16, $r17, $r19;
        org.eclipse.jetty.util.log.Logger $r4, $r13;

        r0 := @this: org.eclipse.jetty.xml.XmlParser;

        r5 := @parameter0: org.xml.sax.InputSource;

        r0.<org.eclipse.jetty.xml.XmlParser: java.lang.String _dtd> = null;

        $r1 = new org.eclipse.jetty.xml.XmlParser$Handler;

        specialinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Handler: void <init>(org.eclipse.jetty.xml.XmlParser)>(r0);

        $r2 = r0.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        $r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r1);

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r1);

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r1);

        $r4 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r13 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing: sid=");

        $r15 = virtualinvoke r5.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",pid=");

        $r18 = virtualinvoke r5.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = newarray (java.lang.Object)[0];

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r20, $r21);

     label1:
        $r6 = r0.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        virtualinvoke $r6.<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>(r5, $r1);

        $r7 = $r1.<org.eclipse.jetty.xml.XmlParser$Handler: org.xml.sax.SAXParseException _error>;

        if $r7 == null goto label2;

        $r11 = $r1.<org.eclipse.jetty.xml.XmlParser$Handler: org.xml.sax.SAXParseException _error>;

        throw $r11;

     label2:
        $r8 = $r1.<org.eclipse.jetty.xml.XmlParser$Handler: org.eclipse.jetty.xml.XmlParser$Node _top>;

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(0);

        r10 = (org.eclipse.jetty.xml.XmlParser$Node) $r9;

        virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Handler: void clear()>();

        return r10;
    }

    public synchronized org.eclipse.jetty.xml.XmlParser$Node parse(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r2;
        java.lang.Object[] $r10;
        org.eclipse.jetty.xml.XmlParser r1;
        org.eclipse.jetty.xml.XmlParser$Node $r4;
        java.lang.StringBuilder $r5, $r7, $r8;
        org.eclipse.jetty.util.log.Logger $r0, $r6;
        java.lang.String r3, $r9;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.xml.XmlParser;

        r3 := @parameter0: java.lang.String;

        $r0 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r9, $r10);

     label1:
        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r3);

        $r4 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.xml.XmlParser$Node parse(org.xml.sax.InputSource)>($r2);

        return $r4;
    }

    public synchronized org.eclipse.jetty.xml.XmlParser$Node parse(java.io.File) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r2;
        java.lang.Object[] $r12;
        java.net.URL $r4;
        org.eclipse.jetty.xml.XmlParser r1;
        java.io.File r3;
        org.eclipse.jetty.xml.XmlParser$Node $r6;
        java.lang.StringBuilder $r7, $r9, $r10;
        org.eclipse.jetty.util.log.Logger $r0, $r8;
        java.lang.String $r5, $r11;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.xml.XmlParser;

        r3 := @parameter0: java.io.File;

        $r0 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r11, $r12);

     label1:
        $r2 = new org.xml.sax.InputSource;

        $r4 = staticinvoke <org.eclipse.jetty.util.resource.Resource: java.net.URL toURL(java.io.File)>(r3);

        $r5 = virtualinvoke $r4.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.xml.XmlParser$Node parse(org.xml.sax.InputSource)>($r2);

        return $r6;
    }

    public synchronized org.eclipse.jetty.xml.XmlParser$Node parse(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r4;
        org.eclipse.jetty.xml.XmlParser r0;
        org.xml.sax.XMLReader $r3;
        org.eclipse.jetty.xml.XmlParser$Node $r8, r10;
        org.xml.sax.SAXParseException $r7, $r11;
        javax.xml.parsers.SAXParser $r2, $r6;
        java.lang.Object $r9;
        org.eclipse.jetty.xml.XmlParser$Handler $r1;
        java.io.InputStream r5;

        r0 := @this: org.eclipse.jetty.xml.XmlParser;

        r5 := @parameter0: java.io.InputStream;

        r0.<org.eclipse.jetty.xml.XmlParser: java.lang.String _dtd> = null;

        $r1 = new org.eclipse.jetty.xml.XmlParser$Handler;

        specialinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Handler: void <init>(org.eclipse.jetty.xml.XmlParser)>(r0);

        $r2 = r0.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        $r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r1);

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r1);

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r1);

        $r6 = r0.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        $r4 = new org.xml.sax.InputSource;

        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r5);

        virtualinvoke $r6.<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>($r4, $r1);

        $r7 = $r1.<org.eclipse.jetty.xml.XmlParser$Handler: org.xml.sax.SAXParseException _error>;

        if $r7 == null goto label1;

        $r11 = $r1.<org.eclipse.jetty.xml.XmlParser$Handler: org.xml.sax.SAXParseException _error>;

        throw $r11;

     label1:
        $r8 = $r1.<org.eclipse.jetty.xml.XmlParser$Handler: org.eclipse.jetty.xml.XmlParser$Node _top>;

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(0);

        r10 = (org.eclipse.jetty.xml.XmlParser$Node) $r9;

        virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Handler: void clear()>();

        return r10;
    }

    static javax.xml.parsers.SAXParser access$000(org.eclipse.jetty.xml.XmlParser)
    {
        javax.xml.parsers.SAXParser $r1;
        org.eclipse.jetty.xml.XmlParser r0;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser: javax.xml.parsers.SAXParser _parser>;

        return $r1;
    }

    static java.lang.Object access$100(org.eclipse.jetty.xml.XmlParser)
    {
        org.eclipse.jetty.xml.XmlParser r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser: java.lang.Object _xpaths>;

        return $r1;
    }

    static java.util.Map access$200(org.eclipse.jetty.xml.XmlParser)
    {
        org.eclipse.jetty.xml.XmlParser r0;
        java.util.Map $r1;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser: java.util.Map _observerMap>;

        return $r1;
    }

    static java.util.Stack access$300(org.eclipse.jetty.xml.XmlParser)
    {
        org.eclipse.jetty.xml.XmlParser r0;
        java.util.Stack $r1;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser: java.util.Stack _observers>;

        return $r1;
    }

    static org.eclipse.jetty.util.log.Logger access$400()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static java.lang.String access$502(org.eclipse.jetty.xml.XmlParser, java.lang.String)
    {
        org.eclipse.jetty.xml.XmlParser r0;
        java.lang.String r1;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser;

        r1 := @parameter1: java.lang.String;

        r0.<org.eclipse.jetty.xml.XmlParser: java.lang.String _dtd> = r1;

        return r1;
    }

    static java.util.Map access$600(org.eclipse.jetty.xml.XmlParser)
    {
        org.eclipse.jetty.xml.XmlParser r0;
        java.util.Map $r1;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser: java.util.Map _redirectMap>;

        return $r1;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/xml/XmlParser;");

        <org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
