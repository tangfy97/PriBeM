abstract class org.springframework.core.io.support.VfsPatternUtils extends org.springframework.core.io.VfsUtils
{

    void <init>()
    {
        org.springframework.core.io.support.VfsPatternUtils r0;

        r0 := @this: org.springframework.core.io.support.VfsPatternUtils;

        specialinvoke r0.<org.springframework.core.io.VfsUtils: void <init>()>();

        return;
    }

    static java.lang.Object getVisitorAttribute()
    {
        java.lang.Object $r0;

        $r0 = staticinvoke <org.springframework.core.io.support.VfsPatternUtils: java.lang.Object doGetVisitorAttribute()>();

        return $r0;
    }

    static java.lang.String getPath(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.springframework.core.io.support.VfsPatternUtils: java.lang.String doGetPath(java.lang.Object)>(r0);

        return $r1;
    }

    static java.lang.Object findRoot(java.net.URL) throws java.io.IOException
    {
        java.lang.Object $r1;
        java.net.URL r0;

        r0 := @parameter0: java.net.URL;

        $r1 = staticinvoke <org.springframework.core.io.support.VfsPatternUtils: java.lang.Object getRoot(java.net.URL)>(r0);

        return $r1;
    }

    static void visit(java.lang.Object, java.lang.reflect.InvocationHandler) throws java.io.IOException
    {
        java.lang.Object[] $r7;
        java.lang.Class[] $r2;
        java.lang.Class $r0, $r3;
        java.lang.Object $r5, r6;
        java.lang.ClassLoader $r1;
        java.lang.reflect.InvocationHandler r4;
        java.lang.reflect.Method $r8;

        r6 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.reflect.InvocationHandler;

        $r0 = <org.springframework.core.io.support.VfsPatternUtils: java.lang.Class VIRTUAL_FILE_VISITOR_INTERFACE>;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = newarray (java.lang.Class)[1];

        $r3 = <org.springframework.core.io.support.VfsPatternUtils: java.lang.Class VIRTUAL_FILE_VISITOR_INTERFACE>;

        $r2[0] = $r3;

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r1, $r2, r4);

        $r8 = <org.springframework.core.io.support.VfsPatternUtils: java.lang.reflect.Method VIRTUAL_FILE_METHOD_VISIT>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r5;

        staticinvoke <org.springframework.core.io.support.VfsPatternUtils: java.lang.Object invokeVfsMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r8, r6, $r7);

        return;
    }
}
