public abstract class org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator extends java.lang.Object implements org.springframework.beans.factory.xml.BeanDefinitionDecorator
{

    public void <init>()
    {
        org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator r0;

        r0 := @this: org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r26;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1;
        org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator r10;
        org.springframework.beans.factory.support.ManagedList $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r6, $r8, $r13, $r15, $r17;
        org.springframework.beans.factory.support.RootBeanDefinition $r20;
        org.springframework.beans.factory.config.BeanDefinitionHolder r2, $r5, $r19, $r25, r27;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.w3c.dom.Node r11;
        org.springframework.beans.factory.config.BeanDefinition $r4, $r12, $r28;
        java.lang.String $r3, $r7, $r9, $r14, $r16, $r18, $r21;
        org.springframework.beans.MutablePropertyValues $r22, $r23;

        r10 := @this: org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator;

        r11 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r0 := @parameter2: org.springframework.beans.factory.xml.ParserContext;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r3 = virtualinvoke r2.<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getBeanName()>();

        $r4 = virtualinvoke r2.<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()>();

        $r5 = new org.springframework.beans.factory.config.BeanDefinitionHolder;

        $r6 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".TARGET");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r4, $r9);

        $r12 = virtualinvoke r10.<org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator: org.springframework.beans.factory.config.BeanDefinition createInterceptorDefinition(org.w3c.dom.Node)>(r11);

        $r13 = new java.lang.StringBuilder;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r16 = virtualinvoke r10.<org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator: java.lang.String getInterceptorNameSuffix(org.springframework.beans.factory.config.BeanDefinition)>($r12);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new org.springframework.beans.factory.config.BeanDefinitionHolder;

        specialinvoke $r19.<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r12, $r18);

        staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: void registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)>($r19, $r1);

        r27 = r2;

        $z0 = specialinvoke r10.<org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator: boolean isProxyFactoryBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)>($r4);

        if $z0 != 0 goto label2;

        $r20 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>()>();

        virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: void setBeanClass(java.lang.Class)>(class "Lorg/springframework/aop/framework/ProxyFactoryBean;");

        $r21 = interfaceinvoke $r4.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getScope()>();

        virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: void setScope(java.lang.String)>($r21);

        $z1 = interfaceinvoke $r4.<org.springframework.beans.factory.config.BeanDefinition: boolean isLazyInit()>();

        virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: void setLazyInit(boolean)>($z1);

        virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: void setDecoratedDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder)>($r5);

        $r22 = virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r22.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("target", $r5);

        $r23 = virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r24 = new org.springframework.beans.factory.support.ManagedList;

        specialinvoke $r24.<org.springframework.beans.factory.support.ManagedList: void <init>()>();

        virtualinvoke $r23.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("interceptorNames", $r24);

        $z2 = interfaceinvoke $r4.<org.springframework.beans.factory.config.BeanDefinition: boolean isAutowireCandidate()>();

        virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: void setAutowireCandidate(boolean)>($z2);

        $z3 = interfaceinvoke $r4.<org.springframework.beans.factory.config.BeanDefinition: boolean isPrimary()>();

        virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: void setPrimary(boolean)>($z3);

        $z4 = $r4 instanceof org.springframework.beans.factory.support.AbstractBeanDefinition;

        if $z4 == 0 goto label1;

        $r26 = (org.springframework.beans.factory.support.AbstractBeanDefinition) $r4;

        virtualinvoke $r20.<org.springframework.beans.factory.support.RootBeanDefinition: void copyQualifiersFrom(org.springframework.beans.factory.support.AbstractBeanDefinition)>($r26);

     label1:
        $r25 = new org.springframework.beans.factory.config.BeanDefinitionHolder;

        specialinvoke $r25.<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r20, $r3);

        r27 = $r25;

     label2:
        $r28 = virtualinvoke r27.<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()>();

        specialinvoke r10.<org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator: void addInterceptorNameToList(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>($r18, $r28);

        return r27;
    }

    private void addInterceptorNameToList(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator r6;
        java.util.List r4;
        org.springframework.beans.PropertyValue $r2;
        org.springframework.beans.factory.config.BeanDefinition r0;
        org.springframework.beans.MutablePropertyValues $r1;
        java.lang.Object $r3;
        java.lang.String r5;

        r6 := @this: org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r2 = virtualinvoke $r1.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>("interceptorNames");

        $r3 = virtualinvoke $r2.<org.springframework.beans.PropertyValue: java.lang.Object getValue()>();

        r4 = (java.util.List) $r3;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

        return;
    }

    private boolean isProxyFactoryBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator r4;
        org.springframework.beans.factory.config.BeanDefinition r2;
        java.lang.Class $r0;
        java.lang.String $r1, $r3;
        boolean $z0;

        r4 := @this: org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator;

        r2 := @parameter0: org.springframework.beans.factory.config.BeanDefinition;

        $r0 = class "Lorg/springframework/aop/framework/ProxyFactoryBean;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r3 = interfaceinvoke r2.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    protected java.lang.String getInterceptorNameSuffix(org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator r4;
        org.springframework.beans.factory.config.BeanDefinition r0;
        java.lang.String $r1, $r2, $r3;

        r4 := @this: org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator;

        r0 := @parameter0: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>();

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.String)>($r1);

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String uncapitalize(java.lang.String)>($r2);

        return $r3;
    }

    protected abstract org.springframework.beans.factory.config.BeanDefinition createInterceptorDefinition(org.w3c.dom.Node);
}
