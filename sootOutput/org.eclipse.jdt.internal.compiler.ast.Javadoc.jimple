public class org.eclipse.jdt.internal.compiler.ast.Javadoc extends org.eclipse.jdt.internal.compiler.ast.ASTNode
{
    public org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences;
    public org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters;
    public org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences;
    public org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement;
    public org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences;
    public long inheritedPositions;
    public org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] invalidParameters;
    public long valuePositions;

    public void <init>(int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long inheritedPositions> = -1L;

        r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long valuePositions> = -1L;

        r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: int sourceStart> = i0;

        r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: int sourceEnd> = i1;

        return;
    }

    boolean canBeSeen(int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r0;
        int i0, $i1, i2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        return 1;

     label1:
        $i1 = i0 & 7;

        tableswitch($i1)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label7;
            case 3: goto label9;
            case 4: goto label3;
            default: goto label9;
        };

     label2:
        return 1;

     label3:
        if i2 == 1 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        if i2 == 0 goto label6;

        if i2 == 2 goto label6;

        return 0;

     label6:
        return 1;

     label7:
        if i2 != 2 goto label8;

        return 1;

     label8:
        return 0;

     label9:
        return 1;
    }

    public org.eclipse.jdt.internal.compiler.ast.ASTNode getNodeStartingAt(int)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r4, $r28, $r29;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r10, $r11, $r20, $r21;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r39;
        org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend r42;
        org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression r41;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] $r3, $r30, $r31;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference r36, r37;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r16, $r18, $r22, $r23, $r24, $r26;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] $r1, $r2, $r32, $r33, $r34, $r35;
        org.eclipse.jdt.internal.compiler.ast.Expression $r9, $r15, $r17, $r19, $r25, $r27, r40;
        boolean $z0, $z1, $z2, $z3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference r38;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        if $r1 == null goto label04;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        i8 = lengthof $r34;

        i9 = 0;

        goto label03;

     label01:
        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        r36 = $r35[i9];

        $i7 = r36.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: int sourceStart>;

        if $i7 != i0 goto label02;

        return r36;

     label02:
        i9 = i9 + 1;

     label03:
        if i9 < i8 goto label01;

     label04:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] invalidParameters>;

        if $r2 == null goto label08;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] invalidParameters>;

        i10 = lengthof $r32;

        i11 = 0;

        goto label07;

     label05:
        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] invalidParameters>;

        r37 = $r33[i11];

        $i6 = r37.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: int sourceStart>;

        if $i6 != i0 goto label06;

        return r37;

     label06:
        i11 = i11 + 1;

     label07:
        if i11 < i10 goto label05;

     label08:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        if $r3 == null goto label12;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        i12 = lengthof $r30;

        i13 = 0;

        goto label11;

     label09:
        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        r38 = $r31[i13];

        $i5 = r38.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int sourceStart>;

        if $i5 != i0 goto label10;

        return r38;

     label10:
        i13 = i13 + 1;

     label11:
        if i13 < i12 goto label09;

     label12:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        if $r4 == null goto label16;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        i14 = lengthof $r28;

        i15 = 0;

        goto label15;

     label13:
        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        r39 = $r29[i15];

        $i4 = r39.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        if $i4 != i0 goto label14;

        return r39;

     label14:
        i15 = i15 + 1;

     label15:
        if i15 < i14 goto label13;

     label16:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        if $r5 == null goto label28;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        i16 = lengthof $r6;

        i17 = 0;

        goto label27;

     label17:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        r40 = $r7[i17];

        $i1 = r40.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        if $i1 != i0 goto label18;

        return r40;

     label18:
        $z0 = r40 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;

        if $z0 == 0 goto label22;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r19 = $r18[i17];

        r41 = (org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression) $r19;

        $r20 = r41.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r20 == null goto label26;

        $r21 = r41.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z3 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z3 == 0 goto label26;

        $r22 = r41.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r22 == null goto label26;

        i18 = 0;

        $r23 = r41.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i19 = lengthof $r23;

        goto label21;

     label19:
        $r24 = r41.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r25 = $r24[i18];

        $i3 = $r25.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        if $i3 != i0 goto label20;

        $r26 = r41.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r27 = $r26[i18];

        return $r27;

     label20:
        i18 = i18 + 1;

     label21:
        if i18 < i19 goto label19;

        goto label26;

     label22:
        $z1 = r40 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;

        if $z1 == 0 goto label26;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r9 = $r8[i17];

        r42 = (org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend) $r9;

        $r10 = r42.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r10 == null goto label26;

        $r11 = r42.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z2 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z2 == 0 goto label26;

        $r12 = r42.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r12 == null goto label26;

        i20 = 0;

        $r13 = r42.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i21 = lengthof $r13;

        goto label25;

     label23:
        $r14 = r42.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r15 = $r14[i20];

        $i2 = $r15.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        if $i2 != i0 goto label24;

        $r16 = r42.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r17 = $r16[i20];

        return $r17;

     label24:
        i20 = i20 + 1;

     label25:
        if i20 < i21 goto label23;

     label26:
        i17 = i17 + 1;

     label27:
        if i17 < i16 goto label17;

     label28:
        return null;
    }

    public java.lang.StringBuffer print(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference $r30;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r7, $r9, $r11;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] $r3, $r27, $r29;
        org.eclipse.jdt.internal.compiler.ast.Expression $r12;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r6, $r14, $r16;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r17;
        java.lang.StringBuffer r0, $r1, $r8, $r10, $r13, $r15, $r18, $r19, $r21, $r23, $r26, $r28, $r31;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement $r5, $r20;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] $r4, $r22, $r24;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference $r25;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Javadoc: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/**\n");

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        if $r3 == null goto label03;

        i6 = 0;

        $r27 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        i7 = lengthof $r27;

        goto label02;

     label01:
        $i5 = i0 + 1;

        $r28 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Javadoc: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>($i5, r0);

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * @param ");

        $r29 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        $r30 = $r29[i6];

        $r31 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i6 = i6 + 1;

     label02:
        if i6 < i7 goto label01;

     label03:
        $r4 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        if $r4 == null goto label06;

        i8 = 0;

        $r22 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        i9 = lengthof $r22;

        goto label05;

     label04:
        $i4 = i0 + 1;

        $r23 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Javadoc: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>($i4, r0);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * @param <");

        $r24 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        $r25 = $r24[i8];

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        i8 = i8 + 1;

     label05:
        if i8 < i9 goto label04;

     label06:
        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        if $r5 == null goto label07;

        $i3 = i0 + 1;

        $r19 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Javadoc: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>($i3, r0);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * @");

        $r20 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        $r21 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label07:
        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        if $r6 == null goto label10;

        i10 = 0;

        $r14 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        i11 = lengthof $r14;

        goto label09;

     label08:
        $i2 = i0 + 1;

        $r15 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Javadoc: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>($i2, r0);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * @throws ");

        $r16 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        $r17 = $r16[i10];

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i10 = i10 + 1;

     label09:
        if i10 < i11 goto label08;

     label10:
        $r7 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        if $r7 == null goto label13;

        i12 = 0;

        $r9 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        i13 = lengthof $r9;

        goto label12;

     label11:
        $i1 = i0 + 1;

        $r10 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Javadoc: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>($i1, r0);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * @see ");

        $r11 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r12 = $r11[i12];

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i12 = i12 + 1;

     label12:
        if i12 < i13 goto label11;

     label13:
        $r8 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Javadoc: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" */\n");

        return r0;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r5, $r15, $r16, $r23;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference r19;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r10, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] $r1, $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.Expression $r13;
        byte $b4, $b6;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r7, $r8, $r9;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r20;
        org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference r22;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r14;
        long $l3, $l5, $l7, $l8, $l9;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r4;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement $r6, $r17, $r18;
        int i0, $i1, $i2, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17, i18, i19, i20, $i21, i22, i23, $i24;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference r21;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        if $r1 != null goto label01;

        $i14 = 0;

        goto label02;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        $i14 = lengthof $r2;

     label02:
        i0 = $i14;

        i15 = 0;

        goto label04;

     label03:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        r19 = $r3[i15];

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i2 = r19.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: int tagSourceStart>;

        $i1 = r19.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: int tagSourceEnd>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>($i2, $i1);

        i15 = i15 + 1;

     label04:
        if i15 < i0 goto label03;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolveTypeParameterTags(org.eclipse.jdt.internal.compiler.lookup.Scope,boolean)>(r4, 1);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        if $r6 == null goto label05;

        $r16 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        $i13 = $r17.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int sourceStart>;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        $i12 = $r18.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int sourceEnd>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>($i13, $i12);

     label05:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        if $r7 != null goto label06;

        $i16 = 0;

        goto label07;

     label06:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        $i16 = lengthof $r8;

     label07:
        i17 = $i16;

        i18 = 0;

        goto label12;

     label08:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        r20 = $r9[i18];

        $z0 = r20 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;

        if $z0 == 0 goto label09;

        r21 = (org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference) r20;

        i19 = r21.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int tagSourceStart>;

        i20 = r21.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int tagSourceEnd>;

        goto label11;

     label09:
        $z1 = r20 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;

        if $z1 == 0 goto label10;

        r22 = (org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference) r20;

        i19 = r22.<org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference: int tagSourceStart>;

        i20 = r22.<org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference: int tagSourceEnd>;

        goto label11;

     label10:
        i19 = r20.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        i20 = r20.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

     label11:
        $r23 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>(i19, i20);

        i18 = i18 + 1;

     label12:
        if i18 < i17 goto label08;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        if $r10 != null goto label13;

        $i21 = 0;

        goto label14;

     label13:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $i21 = lengthof $r11;

     label14:
        i22 = $i21;

        i23 = 0;

        goto label16;

     label15:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r13 = $r12[i23];

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolveReference(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r13, r4);

        i23 = i23 + 1;

     label16:
        if i23 < i22 goto label15;

        $r14 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l3 = $r14.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b4 = $l3 cmp 3211264L;

        $i24 = (int) $b4;

        if $i24 < 0 goto label17;

        $z2 = 1;

        goto label18;

     label17:
        $z2 = 0;

     label18:
        if $z2 != 0 goto label19;

        $l5 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long valuePositions>;

        $b6 = $l5 cmp -1L;

        if $b6 == 0 goto label19;

        $r15 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $l7 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long valuePositions>;

        $l8 = $l7 >>> 32;

        $i11 = (int) $l8;

        $l9 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long valuePositions>;

        $i10 = (int) $l9;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>($i11, $i10);

     label19:
        return;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r1;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        return;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.MethodScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r0;
        byte $b5, $b15, $b20, $b23, $b33;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r12, $r13, $r14, $r22, $r24, $r28, $r29, $r32, $r36, $r37, $r43, $r44, $r46, $r53, $r59, $r61, $r63, $r67, $r68, $r69, $r70;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r57, $r58;
        long $l4, $l6, $l7, $l8, $l14, $l16, $l17, $l18, $l19, $l21, $l22, $l32;
        org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression r74;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference $r51;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r65, $r66;
        int i0, $i1, $i2, i3, $i9, $i10, $i11, $i12, $i13, $i24, $i25, $i26, i27, i28, i29, i30, i31, $i34, i35, $i36;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r23;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r15, $r30, $r31, $r38, $r39, $r55;
        org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend r72;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r75;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement $r48, $r76;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r77;
        char[] $r34, $r35;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r52, $r56, $r60;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r3, $r4, $r6, $r8, $r10, $r17, $r18, $r20, $r26, $r40, $r41, $r71;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] $r49, $r50, $r78;
        org.eclipse.jdt.internal.compiler.ast.Expression $r5, $r7, $r9, $r11, $r27;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r19, $r21, $r25, $r42, $r45;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, $z18, $z19, z20, $z21, $z22;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r16, $r33, $r47, $r62, $r64, r73;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r54;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration referenceMethod()>();

        if $r1 == null goto label01;

        $r68 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r68 != null goto label02;

     label01:
        $z16 = 0;

        goto label04;

     label02:
        $r69 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z15 = virtualinvoke $r69.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z15 != 0 goto label03;

        $r70 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i24 = $r70.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i25 = $i24 & 805306368;

        if $i25 == 0 goto label03;

        $z16 = 1;

        goto label04;

     label03:
        $z16 = 0;

     label04:
        z0 = $z16;

        $r71 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        if $r71 != null goto label05;

        $i26 = 0;

        goto label06;

     label05:
        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $i26 = lengthof $r3;

     label06:
        i0 = $i26;

        z17 = 0;

        i27 = 0;

        goto label14;

     label07:
        $r4 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r5 = $r4[i27];

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolveReference(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r5, r0);

        if $r1 == null goto label13;

        $z1 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isConstructor()>();

        if $z1 != 0 goto label08;

        if z0 == 0 goto label13;

     label08:
        if z17 != 0 goto label13;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r7 = $r6[i27];

        $z2 = $r7 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;

        if $z2 == 0 goto label11;

        $r26 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r27 = $r26[i27];

        r72 = (org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend) $r27;

        $r28 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r28 == null goto label13;

        $r29 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z6 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z6 == 0 goto label13;

        $r30 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        $z7 = $r30 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z7 == 0 goto label13;

        $r31 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        r73 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r31;

        $r32 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r33 = $r32.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z8 = virtualinvoke r73.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isSuperclassOf(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r33);

        if $z8 != 0 goto label09;

        $z11 = virtualinvoke r73.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z11 == 0 goto label13;

        $r46 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r47 = $r46.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z12 = virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r73, 1);

        if $z12 == 0 goto label13;

     label09:
        $r35 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: char[] selector>;

        $r34 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        $z9 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r35, $r34);

        if $z9 == 0 goto label13;

        $r36 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r39 = $r36.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r37 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r38 = $r37.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z10 = virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r38);

        if $z10 == 0 goto label13;

        $r40 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r40 != null goto label10;

        $r45 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r45 != null goto label10;

        z17 = 1;

        goto label13;

     label10:
        $r41 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r41 == null goto label13;

        $r42 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r42 == null goto label13;

        $r44 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r43 = r72.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        z17 = virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean areParameterErasuresEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r43);

        goto label13;

     label11:
        $r8 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r9 = $r8[i27];

        $z3 = $r9 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;

        if $z3 == 0 goto label13;

        $r10 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r11 = $r10[i27];

        r74 = (org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression) $r11;

        $r12 = r74.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r12 == null goto label13;

        $r13 = r74.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z4 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z4 == 0 goto label13;

        $r14 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r16 = $r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r15 = r74.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z5 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r15);

        if $z5 == 0 goto label13;

        $r17 = r74.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r17 != null goto label12;

        $r25 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r25 != null goto label12;

        z17 = 1;

        goto label13;

     label12:
        $r18 = r74.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r18 == null goto label13;

        $r19 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r19 == null goto label13;

        $r20 = r74.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $i2 = lengthof $r20;

        $r21 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $i1 = lengthof $r21;

        if $i2 != $i1 goto label13;

        $r24 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r22 = r74.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r23 = $r22.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        z17 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean areParametersCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])>($r23);

     label13:
        i27 = i27 + 1;

     label14:
        if i27 < i0 goto label07;

        if z17 != 0 goto label19;

        if $r1 == null goto label19;

        $r65 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r65 == null goto label19;

        $r66 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        i28 = lengthof $r66;

        i29 = 0;

        goto label18;

     label15:
        $r67 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $l21 = $r67.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l22 = $l21 & 562949953421312L;

        $b23 = $l22 cmp 0L;

        if $b23 == 0 goto label16;

        $z18 = 1;

        goto label17;

     label16:
        $z18 = 0;

     label17:
        z17 = $z18;

        i29 = i29 + 1;

     label18:
        if i29 >= i28 goto label19;

        if z17 == 0 goto label15;

     label19:
        if $r1 == null goto label22;

        if z0 == 0 goto label20;

        $l19 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long inheritedPositions>;

        $b20 = $l19 cmp -1L;

        if $b20 != 0 goto label21;

     label20:
        if z17 != 0 goto label21;

        $r61 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r62 = $r61.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r62 == null goto label22;

        $r63 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r64 = $r63.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z14 = virtualinvoke $r64.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z14 == 0 goto label22;

     label21:
        $z19 = 0;

        goto label23;

     label22:
        $z19 = 1;

     label23:
        z20 = $z19;

        if z0 != 0 goto label24;

        $l14 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long inheritedPositions>;

        $b15 = $l14 cmp -1L;

        if $b15 == 0 goto label24;

        $l16 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long inheritedPositions>;

        $l17 = $l16 >>> 32;

        i30 = (int) $l17;

        $l18 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long inheritedPositions>;

        i31 = (int) $l18;

        $r60 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r60.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>(i30, i31);

     label24:
        $r75 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $z21 = $r75.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportUnusedParameterIncludeDocCommentReference>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolveParamTags(org.eclipse.jdt.internal.compiler.lookup.MethodScope,boolean,boolean)>(r0, z20, $z21);

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolveTypeParameterTags(org.eclipse.jdt.internal.compiler.lookup.Scope,boolean)>(r0, z20);

        $r76 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        if $r76 != null goto label25;

        if z20 == 0 goto label26;

        if $r1 == null goto label26;

        $z13 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isMethod()>();

        if $z13 == 0 goto label26;

        r77 = (org.eclipse.jdt.internal.compiler.ast.MethodDeclaration) $r1;

        $r53 = r77.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r55 = $r53.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r54 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r55 == $r54 goto label26;

        $r56 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r57 = r77.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $i13 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $r58 = r77.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $i12 = $r58.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        $r59 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i11 = $r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        virtualinvoke $r56.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissingReturnTag(int,int,int)>($i13, $i12, $i11);

        goto label26;

     label25:
        $r48 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        virtualinvoke $r48.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0);

     label26:
        specialinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolveThrowsTags(org.eclipse.jdt.internal.compiler.lookup.MethodScope,boolean)>(r0, z20);

        $l32 = $r75.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b33 = $l32 cmp 3211264L;

        $i36 = (int) $b33;

        if $i36 < 0 goto label27;

        $z22 = 1;

        goto label28;

     label27:
        $z22 = 0;

     label28:
        if $z22 != 0 goto label29;

        if $r1 == null goto label29;

        $l4 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long valuePositions>;

        $b5 = $l4 cmp -1L;

        if $b5 == 0 goto label29;

        $r52 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $l6 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long valuePositions>;

        $l7 = $l6 >>> 32;

        $i10 = (int) $l7;

        $l8 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: long valuePositions>;

        $i9 = (int) $l8;

        virtualinvoke $r52.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>($i10, $i9);

     label29:
        $r78 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] invalidParameters>;

        if $r78 != null goto label30;

        $i34 = 0;

        goto label31;

     label30:
        $r49 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] invalidParameters>;

        $i34 = lengthof $r49;

     label31:
        i3 = $i34;

        i35 = 0;

        goto label33;

     label32:
        $r50 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] invalidParameters>;

        $r51 = $r50[i35];

        virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean,boolean)>(r0, 0, 0);

        i35 = i35 + 1;

     label33:
        if i35 < i3 goto label32;

        return;
    }

    private void resolveReference(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r12;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r26, $r27, $r30, $r32, $r33, $r34;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r45;
        byte $b3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r6, $r10, $r11, $r18, $r19, $r23, $r24, $r28, $r29, $r36, $r38, $r39, $r55;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r8, $r9, $r13, $r16, $r17, $r20, $r25, $r43;
        org.eclipse.jdt.internal.compiler.CompilationResult $r2, $r47;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r14;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r5;
        org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend r51;
        long $l2;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r4;
        org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression r53;
        org.eclipse.jdt.internal.compiler.lookup.Scope r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference r48;
        char[] $r41;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r7, $r15, $r22, $r35, $r44;
        org.eclipse.jdt.internal.compiler.ast.Expression r3, $r21, $r31;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z19, $z20, $z21;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r37;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r1, $r46;
        int i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i28, $i30, $i32, $i34, $i36, $i38, $i40, $i42, $i44;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r42, r49, r50, r52, r54;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r40;

        r12 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Scope;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext()>();

        $r2 = interfaceinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.ReferenceContext: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

        i0 = $r2.<org.eclipse.jdt.internal.compiler.CompilationResult: int problemCount>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: int kind>;

        tableswitch($i1)
        {
            case 2: goto label01;
            case 3: goto label02;
            default: goto label03;
        };

     label01:
        $r45 = (org.eclipse.jdt.internal.compiler.lookup.MethodScope) r0;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r45);

        goto label03;

     label02:
        $r4 = (org.eclipse.jdt.internal.compiler.lookup.ClassScope) r0;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r4);

     label03:
        $r46 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext()>();

        $r47 = interfaceinvoke $r46.<org.eclipse.jdt.internal.compiler.impl.ReferenceContext: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

        $i24 = $r47.<org.eclipse.jdt.internal.compiler.CompilationResult: int problemCount>;

        if $i24 <= i0 goto label04;

        $z17 = 1;

        goto label05;

     label04:
        $z17 = 0;

     label05:
        z0 = $z17;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l2 = $r5.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b3 = $l2 cmp 3211264L;

        $i26 = (int) $b3;

        if $i26 < 0 goto label06;

        $z21 = 1;

        $z20 = 1;

        goto label07;

     label06:
        $z21 = 0;

        $z20 = 0;

     label07:
        z1 = $z20;

        $i28 = (int) -1;

        i25 = $i28;

        $z2 = r3 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;

        if $z2 == 0 goto label15;

        r48 = (org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference) r3;

        $r25 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding>;

        if $r25 == null goto label11;

        $i19 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: int tagValue>;

        if $i19 != 10 goto label09;

        $i30 = (int) -1;

        $i32 = (int) -1;

        if $i30 != $i32 goto label08;

        i25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

     label08:
        $r44 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i23 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: int sourceStart>;

        $i22 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: int sourceEnd>;

        virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidValueReference(int,int,int)>($i23, $i22, i25);

        goto label13;

     label09:
        $r36 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding receiverType>;

        if $r36 == null goto label13;

        $r37 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r38 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding receiverType>;

        $z16 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r38);

        if $z16 == 0 goto label10;

        $i20 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: int bits>;

        $i21 = $i20 | 16384;

        r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: int bits> = $i21;

     label10:
        $r39 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding receiverType>;

        $r42 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r39;

        $r41 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: char[] token>;

        $r40 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[0];

        $r43 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding findMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>($r42, $r41, $r40, r48);

        r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding> = $r43;

        goto label13;

     label11:
        if $z21 == 0 goto label13;

        $r32 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        if $r32 == null goto label13;

        $r33 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $z14 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isValidBinding()>();

        if $z14 == 0 goto label13;

        $i16 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: int tagValue>;

        if $i16 != 10 goto label13;

        $r34 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $z15 = virtualinvoke $r34.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z15 != 0 goto label13;

        $i34 = (int) -1;

        $i36 = (int) -1;

        if $i34 != $i36 goto label12;

        i25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

     label12:
        $r35 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i18 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: int sourceStart>;

        $i17 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: int sourceEnd>;

        virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidValueReference(int,int,int)>($i18, $i17, i25);

     label13:
        if z0 != 0 goto label14;

        $r26 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        if $r26 == null goto label14;

        $r27 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $z12 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isValidBinding()>();

        if $z12 == 0 goto label14;

        $r28 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding receiverType>;

        $z13 = $r28 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z13 == 0 goto label14;

        $r29 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding receiverType>;

        r49 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r29;

        $r31 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $r30 = r48.<org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $i15 = $r30.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int modifiers>;

        specialinvoke r12.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void verifyTypeReference(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.Scope,boolean,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>(r48, $r31, r0, z1, r49, $i15);

     label14:
        return;

     label15:
        if z0 != 0 goto label17;

        $z9 = r3 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;

        if $z9 != 0 goto label16;

        $z11 = r3 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;

        if $z11 == 0 goto label17;

     label16:
        $r23 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z10 = $r23 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z10 == 0 goto label17;

        $r24 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        r50 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r24;

        $i14 = r50.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int modifiers>;

        specialinvoke r12.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void verifyTypeReference(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.Scope,boolean,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>(r3, r3, r0, z1, r50, $i14);

     label17:
        $z19 = r3 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;

        if $z19 == 0 goto label20;

        r51 = (org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend) r3;

        if z1 == 0 goto label19;

        $i11 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: int tagValue>;

        if $i11 != 10 goto label19;

        $i38 = (int) -1;

        $i40 = (int) -1;

        if $i38 != $i40 goto label18;

        i25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

     label18:
        $r22 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i13 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: int sourceStart>;

        $i12 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: int sourceEnd>;

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidValueReference(int,int,int)>($i13, $i12, i25);

     label19:
        if z0 != 0 goto label23;

        $r16 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r16 == null goto label23;

        $r17 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z7 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z7 == 0 goto label23;

        $r18 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        $z8 = $r18 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z8 == 0 goto label23;

        $r19 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        r52 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r19;

        $r21 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $r20 = r51.<org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i10 = $r20.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        specialinvoke r12.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void verifyTypeReference(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.Scope,boolean,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>(r51, $r21, r0, z1, r52, $i10);

        goto label23;

     label20:
        $z3 = r3 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;

        if $z3 == 0 goto label23;

        r53 = (org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression) r3;

        if z1 == 0 goto label22;

        $i7 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: int tagValue>;

        if $i7 != 10 goto label22;

        $i42 = (int) -1;

        $i44 = (int) -1;

        if $i42 != $i44 goto label21;

        i25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

     label21:
        $r15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i9 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: int sourceStart>;

        $i8 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: int sourceEnd>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidValueReference(int,int,int)>($i9, $i8, i25);

     label22:
        if z0 != 0 goto label23;

        $r8 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r8 == null goto label23;

        $r9 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z5 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z5 == 0 goto label23;

        $r10 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z6 = $r10 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z6 == 0 goto label23;

        $r11 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        r54 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r11;

        $r14 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r13 = r53.<org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i6 = $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        specialinvoke r12.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void verifyTypeReference(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.Scope,boolean,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>(r53, $r14, r0, z1, r54, $i6);

     label23:
        $r55 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r55 == null goto label24;

        $r6 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z4 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isTypeVariable()>();

        if $z4 == 0 goto label24;

        $r7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i5 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i4 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidReference(int,int)>($i5, $i4);

     label24:
        return;
    }

    private void resolveParamTags(org.eclipse.jdt.internal.compiler.lookup.MethodScope, boolean, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r2;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r11, $r13, r21, $r22;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r15, $r19, $r25;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] r31;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r8, $r9, $r10, $r12;
        char[] $r16, $r20, $r26;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r14, $r18, $r24, $r28;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference r29, r32;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] $r3, $r4, $r7, $r27;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r5, $r6, $r17, $r23;
        boolean z0, $z1, z2, z3, z4, z5, z6, z7, z8;
        org.eclipse.jdt.internal.compiler.ast.Argument r30, r33;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, i16, i17, i18, i19, i20, i21, i22;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        z2 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration referenceMethod()>();

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        if $r3 != null goto label01;

        $i13 = 0;

        goto label02;

     label01:
        $r4 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        $i13 = lengthof $r4;

     label02:
        i0 = $i13;

        if $r1 != null goto label05;

        i14 = 0;

        goto label04;

     label03:
        $r27 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        r29 = $r27[i14];

        $r28 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i12 = r29.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: int tagSourceStart>;

        $i11 = r29.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: int tagSourceEnd>;

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>($i12, $i11);

        i14 = i14 + 1;

     label04:
        if i14 < i0 goto label03;

        return;

     label05:
        $r5 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r5 != null goto label06;

        $i15 = 0;

        goto label07;

     label06:
        $r6 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $i15 = lengthof $r6;

     label07:
        i16 = $i15;

        if i0 != 0 goto label10;

        if z2 == 0 goto label25;

        i17 = 0;

        goto label09;

     label08:
        $r23 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        r30 = $r23[i17];

        $r24 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r26 = r30.<org.eclipse.jdt.internal.compiler.ast.Argument: char[] name>;

        $i10 = r30.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceStart>;

        $i9 = r30.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceEnd>;

        $r25 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i8 = $r25.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissingParamTag(char[],int,int,int)>($r26, $i10, $i9, $i8);

        i17 = i17 + 1;

     label09:
        if i17 < i16 goto label08;

        goto label25;

     label10:
        r31 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[i0];

        i18 = 0;

        i19 = 0;

        goto label17;

     label11:
        $r7 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        r32 = $r7[i19];

        virtualinvoke r32.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean,boolean)>(r0, 1, z0);

        $r8 = r32.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        if $r8 == null goto label16;

        $r9 = r32.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $z1 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.Binding: boolean isValidBinding()>();

        if $z1 == 0 goto label16;

        z3 = 0;

        z8 = 0;

        z7 = 0;

        i20 = 0;

        goto label14;

     label12:
        $r13 = r31[i20];

        $r12 = r32.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        if $r13 != $r12 goto label13;

        $r14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r16 = r32.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: char[] token>;

        $i4 = r32.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: int sourceStart>;

        $i3 = r32.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: int sourceEnd>;

        $r15 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i2 = $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocDuplicatedParamTag(char[],int,int,int)>($r16, $i4, $i3, $i2);

        z3 = 1;

        z8 = 1;

        z7 = 1;

     label13:
        i20 = i20 + 1;

     label14:
        if i20 >= i18 goto label15;

        if z7 == 0 goto label12;

     label15:
        if z8 != 0 goto label16;

        $i1 = i18;

        i18 = i18 + 1;

        $r10 = r32.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r11 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r10;

        r31[$i1] = $r11;

     label16:
        i19 = i19 + 1;

     label17:
        if i19 < i0 goto label11;

        if z2 == 0 goto label25;

        i21 = 0;

        goto label24;

     label18:
        $r17 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        r33 = $r17[i21];

        z4 = 0;

        z6 = 0;

        z5 = 0;

        i22 = 0;

        goto label21;

     label19:
        r21 = r31[i22];

        $r22 = r33.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        if $r22 != r21 goto label20;

        z4 = 1;

        z6 = 1;

        z5 = 1;

     label20:
        i22 = i22 + 1;

     label21:
        if i22 >= i18 goto label22;

        if z5 == 0 goto label19;

     label22:
        if z6 != 0 goto label23;

        $r18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r20 = r33.<org.eclipse.jdt.internal.compiler.ast.Argument: char[] name>;

        $i7 = r33.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceStart>;

        $i6 = r33.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceEnd>;

        $r19 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i5 = $r19.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissingParamTag(char[],int,int,int)>($r20, $i7, $i6, $i5);

     label23:
        i21 = i21 + 1;

     label24:
        if i21 < i16 goto label18;

     label25:
        return;
    }

    private void resolveTypeParameterTags(org.eclipse.jdt.internal.compiler.lookup.Scope, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r32;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r10, $r13, $r15;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r34, $r35;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r4;
        org.eclipse.jdt.internal.compiler.lookup.Scope r3;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] $r1, $r2, $r7, $r9, $r24, $r36;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] r39, r43;
        char[] $r12, $r18, $r20, $r26, $r31;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r8, $r11, $r17, $r19, $r25, $r27, $r37;
        boolean $z0, $z1, z2, z3, z4, z5, z6, z7, z8;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r28, $r29, $r30, r45;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r41;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r5, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, $i30;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] r38;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding $r14, $r16, $r21, $r22, $r23;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r33;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference r40, r42, r44, r46;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        z2 := @parameter1: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        if $r1 != null goto label01;

        $i18 = 0;

        goto label02;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        $i18 = lengthof $r2;

     label02:
        i0 = $i18;

        r38 = (org.eclipse.jdt.internal.compiler.ast.TypeParameter[]) null;

        r39 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[]) null;

        $i30 = (int) -1;

        i19 = $i30;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: int kind>;

        tableswitch($i1)
        {
            case 2: goto label03;
            case 3: goto label07;
            default: goto label08;
        };

     label03:
        $r32 = (org.eclipse.jdt.internal.compiler.lookup.MethodScope) r3;

        $r33 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration referenceMethod()>();

        if $r33 != null goto label06;

        i20 = 0;

        goto label05;

     label04:
        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        r40 = $r36[i20];

        $r37 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i17 = r40.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int tagSourceStart>;

        $i16 = r40.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int tagSourceEnd>;

        virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>($i17, $i16);

        i20 = i20 + 1;

     label05:
        if i20 < i0 goto label04;

        return;

     label06:
        r38 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters()>();

        $r34 = $r33.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        r39 = $r34.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r35 = $r33.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        i19 = $r35.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        goto label08;

     label07:
        $r4 = (org.eclipse.jdt.internal.compiler.lookup.ClassScope) r3;

        r41 = $r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        r38 = r41.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r5 = r41.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        r39 = $r5.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r6 = r41.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        i19 = $r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int modifiers>;

     label08:
        if r39 == null goto label09;

        $i4 = lengthof r39;

        if $i4 != 0 goto label12;

     label09:
        i21 = 0;

        goto label11;

     label10:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        r42 = $r7[i21];

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i3 = r42.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int tagSourceStart>;

        $i2 = r42.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int tagSourceEnd>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>($i3, $i2);

        i21 = i21 + 1;

     label11:
        if i21 < i0 goto label10;

        return;

     label12:
        if r38 == null goto label34;

        i22 = lengthof r38;

        if i0 != 0 goto label15;

        if z2 == 0 goto label34;

        i23 = 0;

        goto label14;

     label13:
        $r27 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r28 = r38[i23];

        $r31 = $r28.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: char[] name>;

        $r29 = r38[i23];

        $i15 = $r29.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceStart>;

        $r30 = r38[i23];

        $i14 = $r30.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceEnd>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissingParamTag(char[],int,int,int)>($r31, $i15, $i14, i19);

        i23 = i23 + 1;

     label14:
        if i23 < i22 goto label13;

        goto label34;

     label15:
        $i5 = lengthof r39;

        if $i5 != i22 goto label34;

        r43 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding)[i0];

        i24 = 0;

        goto label23;

     label16:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        r44 = $r9[i24];

        $r10 = virtualinvoke r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding internalResolveType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r3);

        if $r10 == null goto label22;

        $z0 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z0 == 0 goto label22;

        $z1 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isTypeVariable()>();

        if $z1 == 0 goto label21;

        z3 = 0;

        z6 = 0;

        z5 = 0;

        i25 = 0;

        goto label19;

     label17:
        $r16 = r43[i25];

        $r15 = r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r16 != $r15 goto label18;

        $r17 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r18 = r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: char[] token>;

        $i9 = r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int sourceStart>;

        $i8 = r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int sourceEnd>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocDuplicatedParamTag(char[],int,int,int)>($r18, $i9, $i8, i19);

        z3 = 1;

        z6 = 1;

        z5 = 1;

     label18:
        i25 = i25 + 1;

     label19:
        if i25 >= i24 goto label20;

        if z5 == 0 goto label17;

     label20:
        if z6 != 0 goto label22;

        $r13 = r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r14 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) $r13;

        r43[i24] = $r14;

        goto label22;

     label21:
        $r11 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r12 = r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: char[] token>;

        $i7 = r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int sourceStart>;

        $i6 = r44.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int sourceEnd>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUndeclaredParamTagName(char[],int,int,int)>($r12, $i7, $i6, i19);

     label22:
        i24 = i24 + 1;

     label23:
        if i24 < i0 goto label16;

        i26 = 0;

        goto label30;

     label24:
        r45 = r38[i26];

        z4 = 0;

        z8 = 0;

        z7 = 0;

        i27 = 0;

        goto label27;

     label25:
        $r22 = r45.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding binding>;

        $r21 = r43[i27];

        if $r22 != $r21 goto label26;

        z4 = 1;

        z8 = 1;

        z7 = 1;

        r43[i27] = null;

     label26:
        i27 = i27 + 1;

     label27:
        if i27 >= i0 goto label28;

        if z7 == 0 goto label25;

     label28:
        if z8 != 0 goto label29;

        if z2 == 0 goto label29;

        $r19 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r20 = r45.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: char[] name>;

        $i11 = r45.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceStart>;

        $i10 = r45.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceEnd>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissingParamTag(char[],int,int,int)>($r20, $i11, $i10, i19);

     label29:
        i26 = i26 + 1;

     label30:
        if i26 < i22 goto label24;

        i28 = 0;

        goto label33;

     label31:
        $r23 = r43[i28];

        if $r23 == null goto label32;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        r46 = $r24[i28];

        $r25 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r26 = r46.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: char[] token>;

        $i13 = r46.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int sourceStart>;

        $i12 = r46.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int sourceEnd>;

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUndeclaredParamTagName(char[],int,int,int)>($r26, $i13, $i12, i19);

     label32:
        i28 = i28 + 1;

     label33:
        if i28 < i0 goto label31;

     label34:
        return;
    }

    private void resolveThrowsTags(org.eclipse.jdt.internal.compiler.lookup.MethodScope, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r2;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r19, $r22, $r23, $r28, $r37, r48, r50, r52;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r3, $r4, $r8, $r9, $r10, $r14, $r17, $r26, $r32, $r35, $r38, r46;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r5, $r6, $r11, $r15, $r25, $r29, $r33;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r16, $r18, $r20, $r21, $r27, $r34, $r36, r43, r47, r51;
        org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference $r41, $r42;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r13, $r24, $r31, $r44;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r7, $r12, $r30;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9, i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r45, r49;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference $r39, $r40;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        z2 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration referenceMethod()>();

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        if $r3 != null goto label01;

        $i5 = 0;

        goto label02;

     label01:
        $r4 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        $i5 = lengthof $r4;

     label02:
        i0 = $i5;

        if $r1 != null goto label07;

        i6 = 0;

        goto label06;

     label03:
        $r38 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        r43 = $r38[i6];

        i7 = r43.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        i8 = r43.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        $z6 = r43 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;

        if $z6 == 0 goto label04;

        $r41 = (org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference) r43;

        i7 = $r41.<org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference: int tagSourceStart>;

        $r42 = (org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference) r43;

        i8 = $r42.<org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference: int tagSourceEnd>;

        goto label05;

     label04:
        $z7 = r43 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;

        if $z7 == 0 goto label05;

        $r39 = (org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference) r43;

        i7 = $r39.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int tagSourceStart>;

        $r40 = (org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference) r43;

        i8 = $r40.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: int tagSourceEnd>;

     label05:
        $r44 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>(i7, i8);

        i6 = i6 + 1;

     label06:
        if i6 < i0 goto label03;

        return;

     label07:
        $r5 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r5 != null goto label08;

        $i9 = 0;

        goto label09;

     label08:
        $r6 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $i9 = lengthof $r7;

     label09:
        i10 = $i9;

        $r8 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        if $r8 != null goto label10;

        $i11 = 0;

        goto label11;

     label10:
        $r9 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $i11 = lengthof $r9;

     label11:
        i12 = $i11;

        if i0 != 0 goto label18;

        if z2 == 0 goto label40;

        i13 = 0;

        goto label17;

     label12:
        $r29 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r30 = $r29.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        r45 = $r30[i13];

        if r45 == null goto label16;

        $z5 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z5 == 0 goto label16;

        i14 = i13;

        goto label14;

     label13:
        i14 = i14 + 1;

     label14:
        if i14 >= i12 goto label15;

        $r35 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $r36 = $r35[i14];

        $r37 = $r36.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if r45 != $r37 goto label13;

     label15:
        if i14 >= i12 goto label16;

        $r31 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r32 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $r34 = $r32[i14];

        $r33 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i4 = $r33.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissingThrowsTag(org.eclipse.jdt.internal.compiler.ast.TypeReference,int)>($r34, $i4);

     label16:
        i13 = i13 + 1;

     label17:
        if i13 < i10 goto label12;

        goto label40;

     label18:
        i15 = 0;

        r46 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeReference)[i0];

        i16 = 0;

        goto label21;

     label19:
        $r10 = r2.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        r47 = $r10[i16];

        virtualinvoke r47.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0);

        r48 = r47.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if r48 == null goto label20;

        $z0 = virtualinvoke r48.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z0 == 0 goto label20;

        $z1 = virtualinvoke r48.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isClass()>();

        if $z1 == 0 goto label20;

        $i1 = i15;

        i15 = i15 + 1;

        r46[$i1] = r47;

     label20:
        i16 = i16 + 1;

     label21:
        if i16 < i0 goto label19;

        i17 = 0;

        goto label32;

     label22:
        $r11 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        r49 = $r12[i17];

        if r49 == null goto label23;

        $r22 = virtualinvoke r49.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        r49 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r22;

     label23:
        z8 = 0;

        z11 = 0;

        z10 = 0;

        i18 = 0;

        goto label26;

     label24:
        $r20 = r46[i18];

        if $r20 == null goto label25;

        $r21 = r46[i18];

        r50 = $r21.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if r49 != r50 goto label25;

        z8 = 1;

        z11 = 1;

        z10 = 1;

        r46[i18] = null;

     label25:
        i18 = i18 + 1;

     label26:
        if i18 >= i15 goto label27;

        if z10 == 0 goto label24;

     label27:
        if z11 != 0 goto label31;

        if z2 == 0 goto label31;

        if r49 == null goto label31;

        $z3 = virtualinvoke r49.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z3 == 0 goto label31;

        i19 = i17;

        goto label29;

     label28:
        i19 = i19 + 1;

     label29:
        if i19 >= i12 goto label30;

        $r17 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $r18 = $r17[i19];

        $r19 = $r18.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if r49 != $r19 goto label28;

     label30:
        if i19 >= i12 goto label31;

        $r13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r14 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $r16 = $r14[i19];

        $r15 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i2 = $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissingThrowsTag(org.eclipse.jdt.internal.compiler.ast.TypeReference,int)>($r16, $i2);

     label31:
        i17 = i17 + 1;

     label32:
        if i17 < i10 goto label22;

        i20 = 0;

        goto label39;

     label33:
        r51 = r46[i20];

        if r51 == null goto label38;

        z9 = 0;

        i21 = 0;

        goto label36;

     label34:
        $r26 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $r27 = $r26[i21];

        r52 = $r27.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if r52 == null goto label35;

        $r28 = r51.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        z9 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r52);

     label35:
        i21 = i21 + 1;

     label36:
        if i21 >= i12 goto label37;

        if z9 == 0 goto label34;

     label37:
        if z9 != 0 goto label38;

        $r23 = r51.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z4 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isUncheckedException(boolean)>(0);

        if $z4 != 0 goto label38;

        $r24 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r25 = $r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i3 = $r25.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidThrowsClassName(org.eclipse.jdt.internal.compiler.ast.TypeReference,int)>(r51, $i3);

     label38:
        i20 = i20 + 1;

     label39:
        if i20 < i15 goto label33;

     label40:
        return;
    }

    private void verifyTypeReference(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.Scope, boolean, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r23;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r1;
        char[][] $r8, r9, $r15, r26, $r29;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r4, $r37;
        org.eclipse.jdt.internal.compiler.lookup.ImportBinding[] r24;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r17, $r19;
        org.eclipse.jdt.internal.compiler.lookup.Scope r2, $r18;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding $r7, $r14;
        char[] $r10, $r13, $r16, $r30, $r31, $r34, $r35;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r3, $r22, $r32, $r36, $r38, $r39;
        org.eclipse.jdt.internal.compiler.ast.Expression r5, r6;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, $z7, $z8, z9;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r20, $r33;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r21;
        org.eclipse.jdt.internal.compiler.lookup.ImportBinding $r25, $r27, $r28;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, $i25, i26, i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0, $r11, $r12, r40;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.Scope;

        z4 := @parameter3: boolean;

        r0 := @parameter4: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        i0 := @parameter5: int;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z0 == 0 goto label23;

        $i29 = (int) -1;

        i22 = $i29;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r4.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: boolean canBeSeen(int,int)>($i1, i0);

        if $z1 != 0 goto label01;

        $r39 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i21 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i20 = r5.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocHiddenReference(int,int,org.eclipse.jdt.internal.compiler.lookup.Scope,int)>($i21, $i20, r2, i0);

        return;

     label01:
        if r5 == r6 goto label02;

        $r36 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r37 = $r36.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i16 = $r37.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int modifiers>;

        $z8 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: boolean canBeSeen(int,int)>($i16, $i15);

        if $z8 != 0 goto label02;

        $r38 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i19 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i18 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int modifiers>;

        virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocHiddenReference(int,int,org.eclipse.jdt.internal.compiler.lookup.Scope,int)>($i19, $i18, r2, $i17);

        return;

     label02:
        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isMemberType()>();

        if $z2 == 0 goto label23;

        r40 = r0;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding fPackage>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        i2 = lengthof $r8;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int depth()>();

        i23 = $i3 + i2;

        $i4 = i23 + 1;

        r9 = newarray (char[])[$i4];

        $r10 = r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName>;

        r9[i23] = $r10;

        goto label04;

     label03:
        $r12 = virtualinvoke r40.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        r40 = $r12;

        $i31 = (int) -1;

        i23 = i23 + $i31;

        $r13 = $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName>;

        r9[i23] = $r13;

     label04:
        $r11 = virtualinvoke r40.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        if $r11 != null goto label03;

        i24 = i2;

        goto label06;

     label05:
        $i33 = (int) -1;

        i23 = i23 + $i33;

        $r14 = r40.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding fPackage>;

        $r15 = $r14.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $r16 = $r15[i24];

        r9[i23] = $r16;

     label06:
        $i35 = (int) -1;

        i24 = i24 + $i35;

        if i24 >= 0 goto label05;

        $r17 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.ClassScope classScope()>();

        $r18 = $r17.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.Scope parent>;

        $i5 = $r18.<org.eclipse.jdt.internal.compiler.lookup.Scope: int kind>;

        if $i5 != 4 goto label07;

        $r35 = r40.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName>;

        $r33 = $r17.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        $r34 = $r33.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $z7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r35, $r34);

        if $z7 != 0 goto label23;

     label07:
        $r19 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.ClassScope outerMostClassScope()>();

        $z3 = r6 instanceof org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;

        if $z3 == 0 goto label23;

        if z4 != 0 goto label08;

        if $i3 == 1 goto label09;

     label08:
        $r20 = $r19.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        $r21 = $r20.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if r40 == $r21 goto label23;

     label09:
        z9 = 0;

        if z4 == 0 goto label21;

        $r23 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope compilationUnitScope()>();

        r24 = $r23.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.lookup.ImportBinding[] imports>;

        if r24 != null goto label10;

        $i25 = 0;

        goto label11;

     label10:
        $i25 = lengthof r24;

     label11:
        i8 = $i25;

        i26 = 0;

        goto label18;

     label12:
        $r25 = r24[i26];

        r26 = $r25.<org.eclipse.jdt.internal.compiler.lookup.ImportBinding: char[][] compoundName>;

        i9 = lengthof r26;

        $r27 = r24[i26];

        $z5 = $r27.<org.eclipse.jdt.internal.compiler.lookup.ImportBinding: boolean onDemand>;

        if $z5 == 0 goto label13;

        $i13 = lengthof r9;

        $i14 = $i13 - 1;

        if i9 == $i14 goto label14;

     label13:
        $i10 = lengthof r9;

        if i9 != $i10 goto label17;

     label14:
        i27 = i9;

        goto label16;

     label15:
        $r28 = r24[i26];

        $r29 = $r28.<org.eclipse.jdt.internal.compiler.lookup.ImportBinding: char[][] compoundName>;

        $r31 = $r29[i27];

        $r30 = r9[i27];

        $z6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r31, $r30);

        if $z6 == 0 goto label17;

        if i27 != 0 goto label16;

        z9 = 1;

        goto label19;

     label16:
        $i37 = (int) -1;

        i27 = i27 + $i37;

        if i27 >= 0 goto label15;

     label17:
        i26 = i26 + 1;

     label18:
        if i26 < i8 goto label12;

     label19:
        if z9 != 0 goto label23;

        $i39 = (int) -1;

        $i41 = (int) -1;

        if $i39 != $i41 goto label20;

        i22 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

     label20:
        $r32 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i12 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i11 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidMemberTypeQualification(int,int,int)>($i12, $i11, i22);

        goto label23;

     label21:
        $i43 = (int) -1;

        $i45 = (int) -1;

        if $i43 != $i45 goto label22;

        i22 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

     label22:
        $r22 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i7 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i6 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidMemberTypeQualification(int,int,int)>($i7, $i6, i22);

        return;

     label23:
        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r1;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference $r20;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r7, $r8, $r9;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] $r3, $r18, $r19;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r10;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement $r5, $r14;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r6, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] $r4, $r15, $r16;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r13;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference $r17;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.Javadoc,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label13;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        if $r3 == null goto label03;

        i0 = 0;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        i1 = lengthof $r18;

        goto label02;

     label01:
        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        $r20 = $r19[i0];

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i0 = i0 + 1;

     label02:
        if i0 < i1 goto label01;

     label03:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        if $r4 == null goto label06;

        i2 = 0;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        i3 = lengthof $r15;

        goto label05;

     label04:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        $r17 = $r16[i2];

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i2 = i2 + 1;

     label05:
        if i2 < i3 goto label04;

     label06:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        if $r5 == null goto label07;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label07:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        if $r6 == null goto label10;

        i4 = 0;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        i5 = lengthof $r11;

        goto label09;

     label08:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        $r13 = $r12[i4];

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i4 = i4 + 1;

     label09:
        if i4 < i5 goto label08;

     label10:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        if $r7 == null goto label13;

        i6 = 0;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        i7 = lengthof $r8;

        goto label12;

     label11:
        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r10 = $r9[i6];

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i6 = i6 + 1;

     label12:
        if i6 < i7 goto label11;

     label13:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.Javadoc,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc r1;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference $r20;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r7, $r8, $r9;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] $r3, $r18, $r19;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression $r10;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement $r5, $r14;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r6, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] $r4, $r15, $r16;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r13;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference $r17;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.Javadoc,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        if $z0 == 0 goto label13;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        if $r3 == null goto label03;

        i0 = 0;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        i1 = lengthof $r18;

        goto label02;

     label01:
        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference[] paramReferences>;

        $r20 = $r19[i0];

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, r2);

        i0 = i0 + 1;

     label02:
        if i0 < i1 goto label01;

     label03:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        if $r4 == null goto label06;

        i2 = 0;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        i3 = lengthof $r15;

        goto label05;

     label04:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference[] paramTypeParameters>;

        $r17 = $r16[i2];

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, r2);

        i2 = i2 + 1;

     label05:
        if i2 < i3 goto label04;

     label06:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        if $r5 == null goto label07;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement returnStatement>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, r2);

     label07:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        if $r6 == null goto label10;

        i4 = 0;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        i5 = lengthof $r11;

        goto label09;

     label08:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.TypeReference[] exceptionReferences>;

        $r13 = $r12[i4];

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, r2);

        i4 = i4 + 1;

     label09:
        if i4 < i5 goto label08;

     label10:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        if $r7 == null goto label13;

        i6 = 0;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        i7 = lengthof $r8;

        goto label12;

     label11:
        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.Javadoc: org.eclipse.jdt.internal.compiler.ast.Expression[] seeReferences>;

        $r10 = $r9[i6];

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, r2);

        i6 = i6 + 1;

     label12:
        if i6 < i7 goto label11;

     label13:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.Javadoc,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }
}
