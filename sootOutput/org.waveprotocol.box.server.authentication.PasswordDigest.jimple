public class org.waveprotocol.box.server.authentication.PasswordDigest extends java.lang.Object implements java.io.Serializable
{
    public static final int DEFAULT_SALT_LENGTH;
    public static final int MINIMUM_SALT_LENGTH;
    public static final java.lang.String DIGEST_HASHING_ALGORITHM;
    private final byte[] salt;
    private final byte[] digest;
    private static java.lang.ThreadLocal rng;

    public static org.waveprotocol.box.server.authentication.PasswordDigest 'from'(byte[], byte[])
    {
        byte[] r1, r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        org.waveprotocol.box.server.authentication.PasswordDigest $r0;

        r1 := @parameter0: byte[];

        r3 := @parameter1: byte[];

        $r0 = new org.waveprotocol.box.server.authentication.PasswordDigest;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r2;

        $r5 = virtualinvoke r3.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (byte[]) $r5;

        specialinvoke $r0.<org.waveprotocol.box.server.authentication.PasswordDigest: void <init>(byte[],byte[])>($r4, $r6);

        return $r0;
    }

    public void <init>(char[])
    {
        byte[] $r2, $r3, $r4;
        char[] r1;
        org.waveprotocol.box.server.authentication.PasswordDigest r0;

        r0 := @this: org.waveprotocol.box.server.authentication.PasswordDigest;

        r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Password is null");

        $r2 = staticinvoke <org.waveprotocol.box.server.authentication.PasswordDigest: byte[] generateSalt()>();

        r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] salt> = $r2;

        $r3 = r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] salt>;

        $r4 = staticinvoke <org.waveprotocol.box.server.authentication.PasswordDigest: byte[] createPasswordDigest(char[],byte[])>(r1, $r3);

        r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] digest> = $r4;

        return;
    }

    private void <init>(byte[], byte[])
    {
        byte[] r1, r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5;
        int $i0, $i1;
        org.waveprotocol.box.server.authentication.PasswordDigest r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.authentication.PasswordDigest;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Salt is null");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Digest is null");

        $i0 = lengthof r1;

        if $i0 < 10 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[2];

        $i1 = lengthof r1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r3[1] = $r5;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "Salt length %d is too short. It must be at least %d to avoid rainbow table attacks.", $r3);

        r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] salt> = r1;

        r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] digest> = r2;

        return;
    }

    private static byte[] createPasswordDigest(char[], byte[])
    {
        byte[] r1, $r6;
        java.lang.IllegalStateException $r8;
        java.nio.CharBuffer $r4;
        java.security.MessageDigest $r0;
        java.nio.ByteBuffer $r5;
        java.nio.charset.Charset $r2;
        java.security.NoSuchAlgorithmException $r7;
        char[] r3;

        r3 := @parameter0: char[];

        r1 := @parameter1: byte[];

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-512");

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Your java environment doesn\'t support the expected cryptographic hash function: SHA-512", $r7);

        throw $r8;

     label4:
        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[])>(r1);

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>(r3);

        $r5 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.nio.CharBuffer)>($r4);

        virtualinvoke $r0.<java.security.MessageDigest: void update(java.nio.ByteBuffer)>($r5);

        $r6 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>();

        return $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private static byte[] generateSalt(int)
    {
        java.security.SecureRandom $r3;
        byte[] r0;
        java.lang.ThreadLocal $r1;
        int i0;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        r0 = newarray (byte)[i0];

        $r1 = <org.waveprotocol.box.server.authentication.PasswordDigest: java.lang.ThreadLocal rng>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.security.SecureRandom) $r2;

        virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>(r0);

        return r0;
    }

    private static byte[] generateSalt()
    {
        byte[] $r0;

        $r0 = staticinvoke <org.waveprotocol.box.server.authentication.PasswordDigest: byte[] generateSalt(int)>(16);

        return $r0;
    }

    public boolean verify(char[])
    {
        byte[] $r2, $r3, $r4, $r5;
        char[] r0;
        org.waveprotocol.box.server.authentication.PasswordDigest r1;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.box.server.authentication.PasswordDigest;

        r0 := @parameter0: char[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Provided password is null");

        $r2 = r1.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] digest>;

        if $r2 == null goto label1;

        $r4 = r1.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] digest>;

        $r3 = r1.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] salt>;

        $r5 = staticinvoke <org.waveprotocol.box.server.authentication.PasswordDigest: byte[] createPasswordDigest(char[],byte[])>(r0, $r3);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r5);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public byte[] getSalt()
    {
        byte[] $r1, $r3;
        java.lang.Object $r2;
        org.waveprotocol.box.server.authentication.PasswordDigest r0;

        r0 := @this: org.waveprotocol.box.server.authentication.PasswordDigest;

        $r1 = r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] salt>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (byte[]) $r2;

        return $r3;
    }

    public byte[] getDigest()
    {
        byte[] $r1, $r3;
        java.lang.Object $r2;
        org.waveprotocol.box.server.authentication.PasswordDigest r0;

        r0 := @this: org.waveprotocol.box.server.authentication.PasswordDigest;

        $r1 = r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] digest>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (byte[]) $r2;

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r3, $r4, $r5, $r6;
        java.lang.Object r1;
        org.waveprotocol.box.server.authentication.PasswordDigest r0, r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.box.server.authentication.PasswordDigest;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.waveprotocol.box.server.authentication.PasswordDigest;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (org.waveprotocol.box.server.authentication.PasswordDigest) r1;

        $r4 = r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] salt>;

        $r3 = r2.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] salt>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r6 = r0.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] digest>;

        $r5 = r2.<org.waveprotocol.box.server.authentication.PasswordDigest: byte[] digest>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r6, $r5);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        org.waveprotocol.box.server.authentication.PasswordDigest$1 $r0;

        <org.waveprotocol.box.server.authentication.PasswordDigest: java.lang.String DIGEST_HASHING_ALGORITHM> = "SHA-512";

        <org.waveprotocol.box.server.authentication.PasswordDigest: int MINIMUM_SALT_LENGTH> = 10;

        <org.waveprotocol.box.server.authentication.PasswordDigest: int DEFAULT_SALT_LENGTH> = 16;

        $r0 = new org.waveprotocol.box.server.authentication.PasswordDigest$1;

        specialinvoke $r0.<org.waveprotocol.box.server.authentication.PasswordDigest$1: void <init>()>();

        <org.waveprotocol.box.server.authentication.PasswordDigest: java.lang.ThreadLocal rng> = $r0;

        return;
    }
}
