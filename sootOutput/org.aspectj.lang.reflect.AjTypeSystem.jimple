public class org.aspectj.lang.reflect.AjTypeSystem extends java.lang.Object
{
    private static java.util.Map ajTypes;

    public void <init>()
    {
        org.aspectj.lang.reflect.AjTypeSystem r0;

        r0 := @this: org.aspectj.lang.reflect.AjTypeSystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.aspectj.lang.reflect.AjType getAjType(java.lang.Class)
    {
        org.aspectj.lang.reflect.AjType r11;
        java.util.Map $r1, $r6, $r10;
        java.lang.Class r0;
        java.lang.Object $r2, $r7;
        java.lang.ref.WeakReference r3, $r5, $r9;
        org.aspectj.internal.lang.reflect.AjTypeImpl $r4, $r8;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.aspectj.lang.reflect.AjTypeSystem: java.util.Map ajTypes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.ref.WeakReference) $r2;

        if r3 == null goto label2;

        $r7 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r11 = (org.aspectj.lang.reflect.AjType) $r7;

        if r11 == null goto label1;

        return r11;

     label1:
        $r8 = new org.aspectj.internal.lang.reflect.AjTypeImpl;

        specialinvoke $r8.<org.aspectj.internal.lang.reflect.AjTypeImpl: void <init>(java.lang.Class)>(r0);

        $r10 = <org.aspectj.lang.reflect.AjTypeSystem: java.util.Map ajTypes>;

        $r9 = new java.lang.ref.WeakReference;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r8);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r9);

        return $r8;

     label2:
        $r4 = new org.aspectj.internal.lang.reflect.AjTypeImpl;

        specialinvoke $r4.<org.aspectj.internal.lang.reflect.AjTypeImpl: void <init>(java.lang.Class)>(r0);

        $r6 = <org.aspectj.lang.reflect.AjTypeSystem: java.util.Map ajTypes>;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r5);

        return $r4;
    }

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;
        java.util.Map $r1;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);

        <org.aspectj.lang.reflect.AjTypeSystem: java.util.Map ajTypes> = $r1;

        return;
    }
}
