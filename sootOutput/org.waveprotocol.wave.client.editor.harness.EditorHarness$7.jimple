class org.waveprotocol.wave.client.editor.harness.EditorHarness$7 extends java.lang.Object implements com.google.gwt.event.dom.client.ClickHandler
{
    final org.waveprotocol.wave.client.editor.harness.EditorHarness this$0;

    void <init>(org.waveprotocol.wave.client.editor.harness.EditorHarness)
    {
        org.waveprotocol.wave.client.editor.harness.EditorHarness$7 r0;
        org.waveprotocol.wave.client.editor.harness.EditorHarness r1;

        r0 := @this: org.waveprotocol.wave.client.editor.harness.EditorHarness$7;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.harness.EditorHarness;

        r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$7: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(com.google.gwt.event.dom.client.ClickEvent)
    {
        org.waveprotocol.wave.client.editor.Editor $r5;
        com.google.gwt.event.dom.client.ClickEvent r9;
        org.waveprotocol.wave.client.editor.harness.EditorHarness$7 r0;
        org.waveprotocol.wave.client.editor.harness.EditorHarness $r1, $r4, $r6, $r8;
        java.util.ArrayList $r7;
        int $i0;
        com.google.gwt.user.client.ui.CheckBox $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.harness.EditorHarness$7;

        r9 := @parameter0: com.google.gwt.event.dom.client.ClickEvent;

        $r1 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$7: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.harness.EditorHarness: com.google.gwt.user.client.ui.CheckBox access$700(org.waveprotocol.wave.client.editor.harness.EditorHarness)>($r1);

        $r3 = virtualinvoke $r2.<com.google.gwt.user.client.ui.CheckBox: java.lang.Boolean getValue()>();

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

     label1:
        $r6 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$7: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        $r7 = $r6.<org.waveprotocol.wave.client.editor.harness.EditorHarness: java.util.ArrayList queue>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label2;

        $r8 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$7: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.harness.EditorHarness: void access$800(org.waveprotocol.wave.client.editor.harness.EditorHarness)>($r8);

        goto label1;

     label2:
        $r4 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$7: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        $r5 = $r4.<org.waveprotocol.wave.client.editor.harness.EditorHarness: org.waveprotocol.wave.client.editor.Editor editor1>;

        interfaceinvoke $r5.<org.waveprotocol.wave.client.editor.Editor: void focus(boolean)>(1);

        return;
    }
}
