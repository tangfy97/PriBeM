public class org.cyberneko.html.HTMLTagBalancer extends java.lang.Object implements org.apache.xerces.xni.parser.XMLDocumentFilter, org.cyberneko.html.HTMLComponent
{
    protected static final java.lang.String NAMESPACES;
    protected static final java.lang.String AUGMENTATIONS;
    protected static final java.lang.String REPORT_ERRORS;
    protected static final java.lang.String DOCUMENT_FRAGMENT_DEPRECATED;
    protected static final java.lang.String DOCUMENT_FRAGMENT;
    protected static final java.lang.String IGNORE_OUTSIDE_CONTENT;
    private static final java.lang.String[] RECOGNIZED_FEATURES;
    private static final java.lang.Boolean[] RECOGNIZED_FEATURES_DEFAULTS;
    protected static final java.lang.String NAMES_ELEMS;
    protected static final java.lang.String NAMES_ATTRS;
    protected static final java.lang.String ERROR_REPORTER;
    public static final java.lang.String FRAGMENT_CONTEXT_STACK;
    private static final java.lang.String[] RECOGNIZED_PROPERTIES;
    private static final java.lang.Object[] RECOGNIZED_PROPERTIES_DEFAULTS;
    protected static final short NAMES_NO_CHANGE;
    protected static final short NAMES_MATCH;
    protected static final short NAMES_UPPERCASE;
    protected static final short NAMES_LOWERCASE;
    protected static final org.cyberneko.html.HTMLEventInfo SYNTHESIZED_ITEM;
    protected boolean fNamespaces;
    protected boolean fAugmentations;
    protected boolean fReportErrors;
    protected boolean fDocumentFragment;
    protected boolean fIgnoreOutsideContent;
    protected short fNamesElems;
    protected short fNamesAttrs;
    protected org.cyberneko.html.HTMLErrorReporter fErrorReporter;
    protected org.apache.xerces.xni.parser.XMLDocumentSource fDocumentSource;
    protected org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler;
    protected final org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack;
    protected final org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack;
    protected boolean fSeenAnything;
    protected boolean fSeenDoctype;
    protected boolean fSeenRootElement;
    protected boolean fSeenRootElementEnd;
    protected boolean fSeenHeadElement;
    protected boolean fSeenBodyElement;
    protected boolean fOpenedForm;
    private final org.apache.xerces.xni.QName fQName;
    private final org.apache.xerces.xni.XMLAttributes fEmptyAttrs;
    private final org.cyberneko.html.HTMLAugmentations fInfosetAugs;
    protected org.cyberneko.html.HTMLTagBalancingListener tagBalancingListener;
    private org.cyberneko.html.LostText lostText_;
    private boolean forcedStartElement_;
    private boolean forcedEndElement_;
    private org.apache.xerces.xni.QName[] fragmentContextStack_;
    private int fragmentContextStackSize_;
    private java.util.List endElementsBuffer_;

    public void <init>()
    {
        org.cyberneko.html.HTMLAugmentations $r5;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r1, $r2;
        java.util.ArrayList $r7;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName $r3;
        org.apache.xerces.util.XMLAttributesImpl $r4;
        org.cyberneko.html.LostText $r6;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.cyberneko.html.HTMLTagBalancer$InfoStack;

        specialinvoke $r1.<org.cyberneko.html.HTMLTagBalancer$InfoStack: void <init>()>();

        r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack> = $r1;

        $r2 = new org.cyberneko.html.HTMLTagBalancer$InfoStack;

        specialinvoke $r2.<org.cyberneko.html.HTMLTagBalancer$InfoStack: void <init>()>();

        r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack> = $r2;

        $r3 = new org.apache.xerces.xni.QName;

        specialinvoke $r3.<org.apache.xerces.xni.QName: void <init>()>();

        r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName fQName> = $r3;

        $r4 = new org.apache.xerces.util.XMLAttributesImpl;

        specialinvoke $r4.<org.apache.xerces.util.XMLAttributesImpl: void <init>()>();

        r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLAttributes fEmptyAttrs> = $r4;

        $r5 = new org.cyberneko.html.HTMLAugmentations;

        specialinvoke $r5.<org.cyberneko.html.HTMLAugmentations: void <init>()>();

        r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLAugmentations fInfosetAugs> = $r5;

        $r6 = new org.cyberneko.html.LostText;

        specialinvoke $r6.<org.cyberneko.html.LostText: void <init>()>();

        r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.LostText lostText_> = $r6;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean forcedStartElement_> = 0;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean forcedEndElement_> = 0;

        r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName[] fragmentContextStack_> = null;

        r0.<org.cyberneko.html.HTMLTagBalancer: int fragmentContextStackSize_> = 0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.cyberneko.html.HTMLTagBalancer: java.util.List endElementsBuffer_> = $r7;

        return;
    }

    public java.lang.Boolean getFeatureDefault(java.lang.String)
    {
        java.lang.String[] $r0, $r1, $r6;
        java.lang.Boolean[] $r4;
        org.cyberneko.html.HTMLTagBalancer r7;
        int i0, $i1, i2;
        java.lang.Boolean $r5;
        java.lang.String r2, $r3;
        boolean $z0;

        r7 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: java.lang.String;

        $r0 = <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_FEATURES>;

        if $r0 == null goto label1;

        $r6 = <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_FEATURES>;

        $i1 = lengthof $r6;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        i0 = $i1;

        i2 = 0;

     label3:
        if i2 >= i0 goto label5;

        $r1 = <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_FEATURES>;

        $r3 = $r1[i2];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label4;

        $r4 = <org.cyberneko.html.HTMLTagBalancer: java.lang.Boolean[] RECOGNIZED_FEATURES_DEFAULTS>;

        $r5 = $r4[i2];

        return $r5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return null;
    }

    public java.lang.Object getPropertyDefault(java.lang.String)
    {
        java.lang.Object[] $r4;
        java.lang.String[] $r0, $r1, $r6;
        org.cyberneko.html.HTMLTagBalancer r7;
        int i0, $i1, i2;
        java.lang.Object $r5;
        java.lang.String r2, $r3;
        boolean $z0;

        r7 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: java.lang.String;

        $r0 = <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_PROPERTIES>;

        if $r0 == null goto label1;

        $r6 = <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_PROPERTIES>;

        $i1 = lengthof $r6;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        i0 = $i1;

        i2 = 0;

     label3:
        if i2 >= i0 goto label5;

        $r1 = <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_PROPERTIES>;

        $r3 = $r1[i2];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label4;

        $r4 = <org.cyberneko.html.HTMLTagBalancer: java.lang.Object[] RECOGNIZED_PROPERTIES_DEFAULTS>;

        $r5 = $r4[i2];

        return $r5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return null;
    }

    public java.lang.String[] getRecognizedFeatures()
    {
        java.lang.String[] $r0;
        org.cyberneko.html.HTMLTagBalancer r1;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer;

        $r0 = <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_FEATURES>;

        return $r0;
    }

    public java.lang.String[] getRecognizedProperties()
    {
        java.lang.String[] $r0;
        org.cyberneko.html.HTMLTagBalancer r1;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer;

        $r0 = <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_PROPERTIES>;

        return $r0;
    }

    public void reset(org.apache.xerces.xni.parser.XMLComponentManager) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        org.apache.xerces.xni.QName[] $r9, $r10;
        org.cyberneko.html.HTMLErrorReporter $r7;
        short $s0, $s1;
        java.lang.String $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xerces.xni.parser.XMLComponentManager r1;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.Object $r2, $r4, $r6, $r8;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLComponentManager;

        $z0 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/namespaces");

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fNamespaces> = $z0;

        $z1 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: boolean getFeature(java.lang.String)>("http://cyberneko.org/html/features/augmentations");

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fAugmentations> = $z1;

        $z2 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: boolean getFeature(java.lang.String)>("http://cyberneko.org/html/features/report-errors");

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors> = $z2;

        $z3 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: boolean getFeature(java.lang.String)>("http://cyberneko.org/html/features/balance-tags/document-fragment");

        if $z3 != 0 goto label1;

        $z5 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: boolean getFeature(java.lang.String)>("http://cyberneko.org/html/features/document-fragment");

        if $z5 == 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fDocumentFragment> = $z6;

        $z4 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: boolean getFeature(java.lang.String)>("http://cyberneko.org/html/features/balance-tags/ignore-outside-content");

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fIgnoreOutsideContent> = $z4;

        $r2 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: java.lang.Object getProperty(java.lang.String)>("http://cyberneko.org/html/properties/names/elems");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $s0 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: short getNamesValue(java.lang.String)>($r3);

        r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems> = $s0;

        $r4 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: java.lang.Object getProperty(java.lang.String)>("http://cyberneko.org/html/properties/names/attrs");

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $s1 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: short getNamesValue(java.lang.String)>($r5);

        r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesAttrs> = $s1;

        $r6 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: java.lang.Object getProperty(java.lang.String)>("http://cyberneko.org/html/properties/error-reporter");

        $r7 = (org.cyberneko.html.HTMLErrorReporter) $r6;

        r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter> = $r7;

        $r8 = interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLComponentManager: java.lang.Object getProperty(java.lang.String)>("http://cyberneko.org/html/properties/balance-tags/fragment-context-stack");

        $r9 = (org.apache.xerces.xni.QName[]) $r8;

        $r10 = (org.apache.xerces.xni.QName[]) $r9;

        r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName[] fragmentContextStack_> = $r10;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        org.cyberneko.html.HTMLTagBalancer r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2, z3;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer;

        r0 := @parameter0: java.lang.String;

        z3 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://cyberneko.org/html/features/augmentations");

        if $z0 == 0 goto label1;

        r1.<org.cyberneko.html.HTMLTagBalancer: boolean fAugmentations> = z3;

        return;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://cyberneko.org/html/features/report-errors");

        if $z1 == 0 goto label2;

        r1.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors> = z3;

        return;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://cyberneko.org/html/features/balance-tags/ignore-outside-content");

        if $z2 == 0 goto label3;

        r1.<org.cyberneko.html.HTMLTagBalancer: boolean fIgnoreOutsideContent> = z3;

        return;

     label3:
        return;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        short $s0, $s1;
        org.cyberneko.html.HTMLTagBalancer r1;
        java.lang.Object r2;
        java.lang.String r0, $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://cyberneko.org/html/properties/names/elems");

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $s1 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: short getNamesValue(java.lang.String)>($r4);

        r1.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems> = $s1;

        return;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://cyberneko.org/html/properties/names/attrs");

        if $z1 == 0 goto label2;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $s0 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: short getNamesValue(java.lang.String)>($r3);

        r1.<org.cyberneko.html.HTMLTagBalancer: short fNamesAttrs> = $s0;

        return;

     label2:
        return;
    }

    public void setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler)
    {
        org.apache.xerces.xni.XMLDocumentHandler r1;
        org.cyberneko.html.HTMLTagBalancer r0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.XMLDocumentHandler;

        r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler> = r1;

        return;
    }

    public org.apache.xerces.xni.XMLDocumentHandler getDocumentHandler()
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1;
        org.cyberneko.html.HTMLTagBalancer r0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        return $r1;
    }

    public void startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.QName[] $r2, $r10, $r11, $r12;
        org.apache.xerces.xni.XMLDocumentHandler $r3, $r9;
        int $i0, $i1, i2;
        java.lang.String r6, $r14;
        org.cyberneko.html.HTMLTagBalancer$Info $r16;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r1, $r17;
        org.apache.xerces.xni.XMLLocator r5;
        org.apache.xerces.xni.Augmentations r8;
        org.apache.xerces.xni.NamespaceContext r7;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName r13;
        org.cyberneko.html.HTMLElements$Element $r15;
        org.cyberneko.html.xercesbridge.XercesBridge $r4;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r5 := @parameter0: org.apache.xerces.xni.XMLLocator;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: org.apache.xerces.xni.NamespaceContext;

        r8 := @parameter3: org.apache.xerces.xni.Augmentations;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r1.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top> = 0;

        $r2 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName[] fragmentContextStack_>;

        if $r2 == null goto label3;

        $r10 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName[] fragmentContextStack_>;

        $i0 = lengthof $r10;

        r0.<org.cyberneko.html.HTMLTagBalancer: int fragmentContextStackSize_> = $i0;

        i2 = 0;

     label1:
        $r11 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName[] fragmentContextStack_>;

        $i1 = lengthof $r11;

        if i2 >= $i1 goto label2;

        $r12 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName[] fragmentContextStack_>;

        r13 = $r12[i2];

        $r14 = r13.<org.apache.xerces.xni.QName: java.lang.String localpart>;

        $r15 = staticinvoke <org.cyberneko.html.HTMLElements: org.cyberneko.html.HTMLElements$Element getElement(java.lang.String)>($r14);

        $r17 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r16 = new org.cyberneko.html.HTMLTagBalancer$Info;

        specialinvoke $r16.<org.cyberneko.html.HTMLTagBalancer$Info: void <init>(org.cyberneko.html.HTMLElements$Element,org.apache.xerces.xni.QName)>($r15, r13);

        virtualinvoke $r17.<org.cyberneko.html.HTMLTagBalancer$InfoStack: void push(org.cyberneko.html.HTMLTagBalancer$Info)>($r16);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        r0.<org.cyberneko.html.HTMLTagBalancer: int fragmentContextStackSize_> = 0;

     label4:
        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything> = 0;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenDoctype> = 0;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement> = 0;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd> = 0;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenHeadElement> = 0;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenBodyElement> = 0;

        $r3 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r3 == null goto label5;

        $r4 = staticinvoke <org.cyberneko.html.xercesbridge.XercesBridge: org.cyberneko.html.xercesbridge.XercesBridge getInstance()>();

        $r9 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        virtualinvoke $r4.<org.cyberneko.html.xercesbridge.XercesBridge: void XMLDocumentHandler_startDocument(org.apache.xerces.xni.XMLDocumentHandler,org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)>($r9, r5, r6, r7, r8);

     label5:
        return;
    }

    public void xmlDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r6;
        org.apache.xerces.xni.Augmentations r5;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.String r2, r3, r4;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: org.apache.xerces.xni.Augmentations;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label1;

        $r6 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r6.<org.apache.xerces.xni.XMLDocumentHandler: void xmlDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)>(r2, r3, r4, r5);

     label1:
        return;
    }

    public void doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.cyberneko.html.HTMLErrorReporter $r7, $r8;
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r6;
        org.apache.xerces.xni.Augmentations r5;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.String r2, r3, r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything> = 1;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z0 == 0 goto label2;

        $z2 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement>;

        if $z2 == 0 goto label1;

        $r8 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        interfaceinvoke $r8.<org.cyberneko.html.HTMLErrorReporter: void reportError(java.lang.String,java.lang.Object[])>("HTML2010", null);

        goto label2;

     label1:
        $z3 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenDoctype>;

        if $z3 == 0 goto label2;

        $r7 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        interfaceinvoke $r7.<org.cyberneko.html.HTMLErrorReporter: void reportError(java.lang.String,java.lang.Object[])>("HTML2011", null);

     label2:
        $z4 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement>;

        if $z4 != 0 goto label3;

        $z1 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenDoctype>;

        if $z1 != 0 goto label3;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenDoctype> = 1;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label3;

        $r6 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r6.<org.apache.xerces.xni.XMLDocumentHandler: void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)>(r2, r3, r4, r5);

     label3:
        return;
    }

    public void endDocument(org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.cyberneko.html.HTMLErrorReporter $r12, $r22;
        boolean $z0, $z1, $z2, $z3;
        org.cyberneko.html.HTMLTagBalancer$Info $r5;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName $r7, $r9, $r15, $r16, $r19, $r20;
        java.lang.Object[] $r11;
        org.apache.xerces.xni.XMLDocumentHandler $r3, $r6, $r13, $r23;
        short $s3, $s4;
        int $i0, $i1, $i2, i5;
        java.lang.String r10, $r14, $r18;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r1, $r4;
        org.apache.xerces.xni.Augmentations r2, $r8, $r17, $r21;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fIgnoreOutsideContent> = 1;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void consumeBufferedEndElements()>();

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement>;

        if $z0 != 0 goto label2;

        $z2 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fDocumentFragment>;

        if $z2 != 0 goto label2;

        $z3 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z3 == 0 goto label1;

        $r22 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        interfaceinvoke $r22.<org.cyberneko.html.HTMLErrorReporter: void reportError(java.lang.String,java.lang.Object[])>("HTML2000", null);

     label1:
        $r13 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r13 == null goto label6;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd> = 0;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void forceStartBody()>();

        $s3 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r14 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>("body", $s3);

        $r15 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName fQName>;

        virtualinvoke $r15.<org.apache.xerces.xni.QName: void setValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r14, $r14, null);

        $r16 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName fQName>;

        $r17 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void callEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r16, $r17);

        $s4 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r18 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>("html", $s4);

        $r19 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName fQName>;

        virtualinvoke $r19.<org.apache.xerces.xni.QName: void setValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r18, $r18, null);

        $r20 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName fQName>;

        $r21 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void callEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r20, $r21);

        goto label6;

     label2:
        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i1 = $r1.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $i0 = r0.<org.cyberneko.html.HTMLTagBalancer: int fragmentContextStackSize_>;

        $i2 = $i1 - $i0;

        i5 = 0;

     label3:
        if i5 >= $i2 goto label6;

        $r4 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r5 = virtualinvoke $r4.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info pop()>();

        $z1 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z1 == 0 goto label4;

        $r9 = $r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        r10 = $r9.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r12 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r10;

        interfaceinvoke $r12.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2001", $r11);

     label4:
        $r6 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r6 == null goto label5;

        $r7 = $r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $r8 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void callEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r7, $r8);

     label5:
        i5 = i5 + 1;

        goto label3;

     label6:
        $r23 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r23 == null goto label7;

        $r3 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r3.<org.apache.xerces.xni.XMLDocumentHandler: void endDocument(org.apache.xerces.xni.Augmentations)>(r2);

     label7:
        return;
    }

    private void consumeBufferedEndElements()
    {
        java.util.ArrayList $r0;
        java.util.List $r2, $r3, $r4;
        org.apache.xerces.xni.Augmentations $r8;
        org.cyberneko.html.HTMLTagBalancer r1;
        int $i0, i1;
        java.lang.Object $r5;
        org.apache.xerces.xni.QName $r7;
        org.cyberneko.html.HTMLTagBalancer$ElementEntry r6;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.cyberneko.html.HTMLTagBalancer: java.util.List endElementsBuffer_>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r3 = r1.<org.cyberneko.html.HTMLTagBalancer: java.util.List endElementsBuffer_>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (org.cyberneko.html.HTMLTagBalancer$ElementEntry) $r5;

        r1.<org.cyberneko.html.HTMLTagBalancer: boolean forcedEndElement_> = 1;

        $r7 = staticinvoke <org.cyberneko.html.HTMLTagBalancer$ElementEntry: org.apache.xerces.xni.QName access$000(org.cyberneko.html.HTMLTagBalancer$ElementEntry)>(r6);

        $r8 = staticinvoke <org.cyberneko.html.HTMLTagBalancer$ElementEntry: org.apache.xerces.xni.Augmentations access$100(org.cyberneko.html.HTMLTagBalancer$ElementEntry)>(r6);

        virtualinvoke r1.<org.cyberneko.html.HTMLTagBalancer: void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r7, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r1.<org.cyberneko.html.HTMLTagBalancer: java.util.List endElementsBuffer_>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        return;
    }

    public void comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r4;
        org.apache.xerces.xni.Augmentations r3;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.XMLString r2;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: org.apache.xerces.xni.XMLString;

        r3 := @parameter1: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything> = 1;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void consumeEarlyTextIfNeeded()>();

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label1;

        $r4 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r4.<org.apache.xerces.xni.XMLDocumentHandler: void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)>(r2, r3);

     label1:
        return;
    }

    private void consumeEarlyTextIfNeeded()
    {
        org.cyberneko.html.HTMLTagBalancer r0;
        org.cyberneko.html.LostText $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.LostText lostText_>;

        $z0 = virtualinvoke $r1.<org.cyberneko.html.LostText: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z1 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenBodyElement>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void forceStartBody()>();

     label1:
        $r2 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.LostText lostText_>;

        virtualinvoke $r2.<org.cyberneko.html.LostText: void refeed(org.apache.xerces.xni.XMLDocumentHandler)>(r0);

     label2:
        return;
    }

    public void processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r5;
        org.apache.xerces.xni.Augmentations r4;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.XMLString r3;
        java.lang.String r2;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xerces.xni.XMLString;

        r4 := @parameter2: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything> = 1;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void consumeEarlyTextIfNeeded()>();

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label1;

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r5.<org.apache.xerces.xni.XMLDocumentHandler: void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)>(r2, r3, r4);

     label1:
        return;
    }

    public void startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.cyberneko.html.HTMLErrorReporter $r36, $r66, $r74;
        java.lang.Object[] $r35, $r65, $r73;
        org.cyberneko.html.HTMLElements$Element[] $r59, $r60, $r68, $r79;
        short s0, $s3, $s6, $s7, $s8, $s9, $s11, $s12;
        org.apache.xerces.xni.XMLAttributes $r11, r78, $r89;
        org.cyberneko.html.HTMLTagBalancer r0;
        int $i1, $i2, $i4, $i5, $i10, i13, $i14, i15, i16, $i17, i18, i19, i20, i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35, $i36, $i37, $i39, $i41, $i42, $i44, $i45;
        org.apache.xerces.xni.Augmentations $r12, r13, $r21, $r32, $r46, $r58, $r64, $r72, $r76, $r77;
        org.cyberneko.html.LostText $r7;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r18, $r24, $r39, $r54;
        org.cyberneko.html.HTMLTagBalancer$Info $r9, $r29, $r40, $r43, $r48, r83, r86, r88, $r92;
        org.apache.xerces.xni.XMLDocumentHandler $r6, $r14, $r15, $r30, $r44;
        java.lang.String r34, $r61, $r62, $r70, r80, r81, r82, r87;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        short[] $r85;
        org.apache.xerces.xni.QName r1, $r10, $r20, $r31, $r33, $r45, $r57, $r75, $r90, $r91;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r3, $r5, $r8, $r16, $r17, $r22, $r23, $r28, $r37, $r38, $r42, $r47, $r50, $r51, $r52, $r53, $r56, $r84;
        org.cyberneko.html.HTMLElements$Element $r2, $r19, $r25, $r26, $r27, $r41, $r49, $r55, $r67, $r69;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.QName;

        r78 := @parameter1: org.apache.xerces.xni.XMLAttributes;

        r13 := @parameter2: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything> = 1;

        z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean forcedStartElement_>;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean forcedStartElement_> = 0;

        $z1 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z1 == 0 goto label01;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

        return;

     label01:
        $r2 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLElements$Element getElement(org.apache.xerces.xni.QName)>(r1);

        s0 = $r2.<org.cyberneko.html.HTMLElements$Element: short code>;

        if z0 == 0 goto label03;

        $i23 = (int) s0;

        if $i23 == 101 goto label02;

        $i24 = (int) s0;

        if $i24 != 91 goto label03;

     label02:
        return;

     label03:
        $z2 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement>;

        if $z2 == 0 goto label04;

        $i25 = (int) s0;

        if $i25 != 46 goto label04;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

        return;

     label04:
        $i26 = (int) s0;

        if $i26 != 44 goto label06;

        $z23 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenHeadElement>;

        if $z23 == 0 goto label05;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

        return;

     label05:
        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenHeadElement> = 1;

        goto label13;

     label06:
        $i27 = (int) s0;

        if $i27 != 37 goto label07;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void consumeBufferedEndElements()>();

        goto label13;

     label07:
        $i28 = (int) s0;

        if $i28 != 14 goto label10;

        $z21 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenHeadElement>;

        if $z21 != 0 goto label08;

        $r75 = specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName createQName(java.lang.String)>("head");

        $r76 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: boolean forceStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>($r75, null, $r76);

        $r77 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r75, $r77);

     label08:
        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void consumeBufferedEndElements()>();

        $z22 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenBodyElement>;

        if $z22 == 0 goto label09;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

        return;

     label09:
        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenBodyElement> = 1;

        goto label13;

     label10:
        $i29 = (int) s0;

        if $i29 != 35 goto label12;

        $z20 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fOpenedForm>;

        if $z20 == 0 goto label11;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

        return;

     label11:
        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fOpenedForm> = 1;

        goto label13;

     label12:
        $i30 = (int) s0;

        if $i30 != 117 goto label13;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void consumeBufferedEndElements()>();

     label13:
        $r79 = $r2.<org.cyberneko.html.HTMLElements$Element: org.cyberneko.html.HTMLElements$Element[] parent>;

        if $r79 == null goto label21;

        $z12 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement>;

        if $z12 != 0 goto label17;

        $z17 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fDocumentFragment>;

        if $z17 != 0 goto label17;

        $r68 = $r2.<org.cyberneko.html.HTMLElements$Element: org.cyberneko.html.HTMLElements$Element[] parent>;

        $r69 = $r68[0];

        r80 = $r69.<org.cyberneko.html.HTMLElements$Element: java.lang.String name>;

        $s12 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r70 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>(r80, $s12);

        $z18 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z18 == 0 goto label14;

        r81 = r1.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r74 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r73 = newarray (java.lang.Object)[2];

        $r73[0] = r81;

        $r73[1] = $r70;

        interfaceinvoke $r74.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2002", $r73);

     label14:
        $r90 = new org.apache.xerces.xni.QName;

        specialinvoke $r90.<org.apache.xerces.xni.QName: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r70, $r70, null);

        $r72 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        $z19 = specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: boolean forceStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>($r90, null, $r72);

        if $z19 != 0 goto label16;

        if z0 != 0 goto label15;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

     label15:
        return;

     label16:
        goto label21;

     label17:
        $r59 = $r2.<org.cyberneko.html.HTMLElements$Element: org.cyberneko.html.HTMLElements$Element[] parent>;

        $r67 = $r59[0];

        $s8 = $r67.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i31 = (int) $s8;

        if $i31 != 44 goto label18;

        $z15 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenBodyElement>;

        if $z15 != 0 goto label21;

        $z16 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fDocumentFragment>;

        if $z16 != 0 goto label21;

     label18:
        $r60 = $r2.<org.cyberneko.html.HTMLElements$Element: org.cyberneko.html.HTMLElements$Element[] parent>;

        $s9 = $r2.<org.cyberneko.html.HTMLElements$Element: short bounds>;

        $i10 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: int getParentDepth(org.cyberneko.html.HTMLElements$Element[],short)>($r60, $s9);

        $i33 = (int) -1;

        if $i10 != $i33 goto label21;

        $r61 = $r67.<org.cyberneko.html.HTMLElements$Element: java.lang.String name>;

        $s11 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r62 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>($r61, $s11);

        $r91 = new org.apache.xerces.xni.QName;

        specialinvoke $r91.<org.apache.xerces.xni.QName: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r62, $r62, null);

        $z13 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z13 == 0 goto label19;

        r82 = r1.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r66 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r65 = newarray (java.lang.Object)[2];

        $r65[0] = r82;

        $r65[1] = $r62;

        interfaceinvoke $r66.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2004", $r65);

     label19:
        $r64 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        $z14 = specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: boolean forceStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>($r91, null, $r64);

        if $z14 != 0 goto label21;

        if z0 != 0 goto label20;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

     label20:
        return;

     label21:
        i13 = 0;

        $i14 = $r2.<org.cyberneko.html.HTMLElements$Element: int flags>;

        if $i14 != 0 goto label25;

        $r50 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        i15 = $r50.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $r51 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack>;

        $r51.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top> = 0;

        i16 = i15 - 1;

     label22:
        if i16 < 0 goto label24;

        $r53 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r54 = $r53.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        r83 = $r54[i16];

        $r55 = r83.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $z11 = virtualinvoke $r55.<org.cyberneko.html.HTMLElements$Element: boolean isInline()>();

        if $z11 != 0 goto label23;

        goto label24;

     label23:
        $r56 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack>;

        virtualinvoke $r56.<org.cyberneko.html.HTMLTagBalancer$InfoStack: void push(org.cyberneko.html.HTMLTagBalancer$Info)>(r83);

        $r57 = r83.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $r58 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r57, $r58);

        $i35 = (int) -1;

        i16 = i16 + $i35;

        goto label22;

     label24:
        $r52 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack>;

        i13 = $r52.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

     label25:
        $r84 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i17 = $r84.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        if $i17 <= 1 goto label26;

        $r47 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r48 = virtualinvoke $r47.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info peek()>();

        $r49 = $r48.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s7 = $r49.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i36 = (int) $s7;

        if $i36 == 90 goto label27;

     label26:
        $r3 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i1 = $r3.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        if $i1 <= 2 goto label28;

        $r37 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r39 = $r37.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        $r38 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i4 = $r38.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $i5 = $i4 - 2;

        $r40 = $r39[$i5];

        $r41 = $r40.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s6 = $r41.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i37 = (int) $s6;

        if $i37 != 44 goto label28;

     label27:
        $r42 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r43 = virtualinvoke $r42.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info pop()>();

        $r44 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r44 == null goto label28;

        $r45 = $r43.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $r46 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void callEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r45, $r46);

     label28:
        $r85 = $r2.<org.cyberneko.html.HTMLElements$Element: short[] closes>;

        if $r85 == null goto label37;

        $r22 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        i18 = $r22.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        i19 = i18 - 1;

     label29:
        if i19 < 0 goto label36;

        $r23 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r24 = $r23.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        r86 = $r24[i19];

        $r25 = r86.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s3 = $r25.<org.cyberneko.html.HTMLElements$Element: short code>;

        $z6 = virtualinvoke $r2.<org.cyberneko.html.HTMLElements$Element: boolean closes(short)>($s3);

        if $z6 == 0 goto label34;

        $z10 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z10 == 0 goto label30;

        r87 = r1.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r33 = r86.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        r34 = $r33.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r36 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r35 = newarray (java.lang.Object)[2];

        $r35[0] = r87;

        $r35[1] = r34;

        interfaceinvoke $r36.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2005", $r35);

     label30:
        i20 = i18 - 1;

     label31:
        if i20 < i19 goto label33;

        $r28 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r29 = virtualinvoke $r28.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info pop()>();

        $r30 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r30 == null goto label32;

        $r31 = $r29.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $r32 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void callEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r31, $r32);

     label32:
        $i39 = (int) -1;

        i20 = i20 + $i39;

        goto label31;

     label33:
        i18 = i19;

        goto label35;

     label34:
        $z7 = $r2.<org.cyberneko.html.HTMLElements$Element: boolean nestable>;

        if $z7 == 0 goto label35;

        $r26 = r86.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $z8 = virtualinvoke $r26.<org.cyberneko.html.HTMLElements$Element: boolean isBlock()>();

        if $z8 != 0 goto label36;

        $r27 = r86.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $z9 = virtualinvoke $r2.<org.cyberneko.html.HTMLElements$Element: boolean isParent(org.cyberneko.html.HTMLElements$Element)>($r27);

        if $z9 == 0 goto label35;

        goto label36;

     label35:
        $i41 = (int) -1;

        i19 = i19 + $i41;

        goto label29;

     label36:
        goto label40;

     label37:
        $i42 = (int) s0;

        if $i42 != 101 goto label40;

        $r16 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i2 = $r16.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        i21 = $i2 - 1;

     label38:
        if i21 < 0 goto label40;

        $r17 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r18 = $r17.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        r88 = $r18[i21];

        $r19 = r88.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $z5 = virtualinvoke $r19.<org.cyberneko.html.HTMLElements$Element: boolean isInline()>();

        if $z5 != 0 goto label39;

        goto label40;

     label39:
        $r20 = r88.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $r21 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r20, $r21);

        $i44 = (int) -1;

        i21 = i21 + $i44;

        goto label38;

     label40:
        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement> = 1;

        if $r2 == null goto label42;

        $z4 = virtualinvoke $r2.<org.cyberneko.html.HTMLElements$Element: boolean isEmpty()>();

        if $z4 == 0 goto label42;

        if r78 != null goto label41;

        r78 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLAttributes emptyAttributes()>();

     label41:
        $r14 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r14 == null goto label48;

        $r15 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r15.<org.apache.xerces.xni.XMLDocumentHandler: void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

        goto label48;

     label42:
        if $r2 == null goto label43;

        $z3 = virtualinvoke $r2.<org.cyberneko.html.HTMLElements$Element: boolean isInline()>();

        if $z3 == 0 goto label43;

        $z24 = 1;

        goto label44;

     label43:
        $z24 = 0;

     label44:
        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r92 = new org.cyberneko.html.HTMLTagBalancer$Info;

        if $z24 == 0 goto label45;

        $r89 = r78;

        goto label46;

     label45:
        $r89 = null;

     label46:
        specialinvoke $r92.<org.cyberneko.html.HTMLTagBalancer$Info: void <init>(org.cyberneko.html.HTMLElements$Element,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)>($r2, r1, $r89);

        virtualinvoke $r5.<org.cyberneko.html.HTMLTagBalancer$InfoStack: void push(org.cyberneko.html.HTMLTagBalancer$Info)>($r92);

        if r78 != null goto label47;

        r78 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLAttributes emptyAttributes()>();

     label47:
        $r6 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r6 == null goto label48;

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void callStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r78, r13);

     label48:
        i22 = 0;

     label49:
        if i22 >= i13 goto label50;

        $r8 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack>;

        $r9 = virtualinvoke $r8.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info pop()>();

        $r10 = $r9.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $r11 = $r9.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.XMLAttributes attributes>;

        $r12 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: boolean forceStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>($r10, $r11, $r12);

        i22 = i22 + 1;

        goto label49;

     label50:
        $i45 = (int) s0;

        if $i45 != 14 goto label51;

        $r7 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.LostText lostText_>;

        virtualinvoke $r7.<org.cyberneko.html.LostText: void refeed(org.apache.xerces.xni.XMLDocumentHandler)>(r0);

     label51:
        return;
    }

    private boolean forceStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.cyberneko.html.HTMLTagBalancer$Info $r6;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r4, $r5;
        org.apache.xerces.xni.XMLAttributes r2;
        org.apache.xerces.xni.Augmentations r3;
        org.cyberneko.html.HTMLTagBalancer r0;
        int $i0;
        org.apache.xerces.xni.QName r1, $r7;
        boolean $z0, $z1;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.QName;

        r2 := @parameter1: org.apache.xerces.xni.XMLAttributes;

        r3 := @parameter2: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean forcedStartElement_> = 1;

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r2, r3);

        $r4 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i0 = $r4.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        if $i0 <= 0 goto label1;

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r6 = virtualinvoke $r5.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info peek()>();

        $r7 = $r6.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $z0 = virtualinvoke r1.<org.apache.xerces.xni.QName: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private org.apache.xerces.xni.QName createQName(java.lang.String)
    {
        short $s0;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.String $r1, r3;
        org.apache.xerces.xni.QName $r2;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r3 := @parameter0: java.lang.String;

        $s0 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r1 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>(r3, $s0);

        $r2 = new org.apache.xerces.xni.QName;

        specialinvoke $r2.<org.apache.xerces.xni.QName: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r1, $r1, "http://www.w3.org/1999/xhtml");

        return $r2;
    }

    public void emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLAttributes r2;
        org.apache.xerces.xni.Augmentations r3;
        short $s0;
        org.cyberneko.html.HTMLTagBalancer r0;
        int $i1;
        org.apache.xerces.xni.QName r1;
        org.cyberneko.html.HTMLElements$Element $r4;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.QName;

        r2 := @parameter1: org.apache.xerces.xni.XMLAttributes;

        r3 := @parameter2: org.apache.xerces.xni.Augmentations;

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r2, r3);

        $r4 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLElements$Element getElement(org.apache.xerces.xni.QName)>(r1);

        $z0 = virtualinvoke $r4.<org.cyberneko.html.HTMLElements$Element: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $s0 = $r4.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i1 = (int) $s0;

        if $i1 != 117 goto label2;

     label1:
        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>(r1, r3);

     label2:
        return;
    }

    public void startGeneralEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        java.lang.Object[] $r14;
        org.cyberneko.html.HTMLErrorReporter $r15;
        org.apache.xerces.xni.XMLDocumentHandler $r5, $r17;
        short $s0, $s1, $s2, $s3;
        int $i4, $i5;
        java.lang.String r1, r3, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, z5, $z6, $z7;
        org.cyberneko.html.HTMLTagBalancer$Info $r7;
        org.apache.xerces.xni.XMLResourceIdentifier r2;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r6;
        org.apache.xerces.xni.Augmentations r4, $r13;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName $r11, $r12;
        org.cyberneko.html.HTMLElements$Element $r8, $r16;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xerces.xni.XMLResourceIdentifier;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything> = 1;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fDocumentFragment>;

        if $z1 != 0 goto label7;

        $z2 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement>;

        if $z2 != 0 goto label2;

        $z7 = 1;

        $z6 = 1;

        goto label3;

     label2:
        $z7 = 0;

        $z6 = 0;

     label3:
        z5 = $z6;

        if $z7 != 0 goto label6;

        $r6 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r7 = virtualinvoke $r6.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info peek()>();

        $r8 = $r7.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s0 = $r8.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i4 = (int) $s0;

        if $i4 == 44 goto label4;

        $r16 = $r7.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s3 = $r16.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i5 = (int) $s3;

        if $i5 != 46 goto label6;

     label4:
        $s1 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r9 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>("head", $s1);

        $s2 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r10 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>("body", $s2);

        $z3 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z3 == 0 goto label5;

        $r15 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = $r9;

        $r14[1] = $r10;

        interfaceinvoke $r15.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2009", $r14);

     label5:
        $r11 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName fQName>;

        virtualinvoke $r11.<org.apache.xerces.xni.QName: void setValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r9, $r9, null);

        $r12 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName fQName>;

        $r13 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r12, $r13);

        z5 = 1;

     label6:
        if z5 == 0 goto label7;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void forceStartBody()>();

     label7:
        $r17 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r17 == null goto label8;

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r5.<org.apache.xerces.xni.XMLDocumentHandler: void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)>(r1, r2, r3, r4);

     label8:
        return;
    }

    private void forceStartBody()
    {
        org.apache.xerces.xni.Augmentations $r2;
        java.lang.Object[] $r3;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.String $r4;
        org.apache.xerces.xni.QName $r1;
        boolean $z0;
        org.cyberneko.html.HTMLErrorReporter $r5;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        $r1 = specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.QName createQName(java.lang.String)>("body");

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = $r1.<org.apache.xerces.xni.QName: java.lang.String localpart>;

        $r3[0] = $r4;

        interfaceinvoke $r5.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2006", $r3);

     label1:
        $r2 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: boolean forceStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>($r1, null, $r2);

        return;
    }

    public void textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r5;
        org.apache.xerces.xni.Augmentations r4;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.String r2, r3;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything> = 1;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r5.<org.apache.xerces.xni.XMLDocumentHandler: void textDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)>(r2, r3, r4);

     label2:
        return;
    }

    public void endGeneralEntity(java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r4;
        org.apache.xerces.xni.Augmentations r3;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xerces.xni.Augmentations;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r4 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r4.<org.apache.xerces.xni.XMLDocumentHandler: void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)>(r2, r3);

     label2:
        return;
    }

    public void startCDATA(org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r3;
        org.apache.xerces.xni.Augmentations r2;
        org.cyberneko.html.HTMLTagBalancer r0;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: org.apache.xerces.xni.Augmentations;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenAnything> = 1;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void consumeEarlyTextIfNeeded()>();

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r3 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r3.<org.apache.xerces.xni.XMLDocumentHandler: void startCDATA(org.apache.xerces.xni.Augmentations)>(r2);

     label2:
        return;
    }

    public void endCDATA(org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r3;
        org.apache.xerces.xni.Augmentations r2;
        org.cyberneko.html.HTMLTagBalancer r0;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: org.apache.xerces.xni.Augmentations;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r3 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r3.<org.apache.xerces.xni.XMLDocumentHandler: void endCDATA(org.apache.xerces.xni.Augmentations)>(r2);

     label2:
        return;
    }

    public void characters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.cyberneko.html.HTMLErrorReporter $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8, z9;
        org.cyberneko.html.HTMLTagBalancer$Info $r6;
        java.util.List $r14;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.Object[] $r10;
        org.apache.xerces.xni.XMLString r2;
        org.apache.xerces.xni.XMLDocumentHandler $r4, $r17;
        short $s1, $s2, $s3, $s4;
        int $i0, $i5, $i6, $i7, $i8, i10, $i11, $i12, $i13;
        java.lang.String $r8, $r9;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r1, $r5, $r13;
        char $c9;
        org.apache.xerces.xni.Augmentations r3;
        char[] $r15;
        org.cyberneko.html.HTMLElements$Element $r7, $r12;
        org.cyberneko.html.LostText $r16;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: org.apache.xerces.xni.XMLString;

        r3 := @parameter1: org.apache.xerces.xni.Augmentations;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i0 = $r1.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        if $i0 != 0 goto label02;

        $z5 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fDocumentFragment>;

        if $z5 != 0 goto label02;

        $r16 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.LostText lostText_>;

        virtualinvoke $r16.<org.cyberneko.html.LostText: void add(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)>(r2, r3);

        return;

     label02:
        z6 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        i10 = 0;

     label03:
        $i11 = r2.<org.apache.xerces.xni.XMLString: int length>;

        if i10 >= $i11 goto label05;

        $r15 = r2.<org.apache.xerces.xni.XMLString: char[] ch>;

        $i7 = r2.<org.apache.xerces.xni.XMLString: int offset>;

        $i8 = $i7 + i10;

        $c9 = $r15[$i8];

        $z4 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c9);

        if $z4 != 0 goto label04;

        z6 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        goto label05;

     label04:
        i10 = i10 + 1;

        goto label03;

     label05:
        $z1 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fDocumentFragment>;

        if $z1 != 0 goto label12;

        $z2 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElement>;

        if $z2 != 0 goto label07;

        if z7 == 0 goto label06;

        return;

     label06:
        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void forceStartBody()>();

     label07:
        if z8 == 0 goto label09;

        $r13 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i5 = $r13.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        if $i5 < 2 goto label08;

        $r14 = r0.<org.cyberneko.html.HTMLTagBalancer: java.util.List endElementsBuffer_>;

        $i6 = interfaceinvoke $r14.<java.util.List: int size()>();

        if $i6 != 1 goto label09;

     label08:
        return;

     label09:
        if z9 != 0 goto label12;

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r6 = virtualinvoke $r5.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info peek()>();

        $r7 = $r6.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s1 = $r7.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i12 = (int) $s1;

        if $i12 == 44 goto label10;

        $r12 = $r6.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s4 = $r12.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i13 = (int) $s4;

        if $i13 != 46 goto label12;

     label10:
        $s2 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r8 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>("head", $s2);

        $s3 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r9 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>("body", $s3);

        $z3 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z3 == 0 goto label11;

        $r11 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r8;

        $r10[1] = $r9;

        interfaceinvoke $r11.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2009", $r10);

     label11:
        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void forceStartBody()>();

     label12:
        $r17 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r17 == null goto label13;

        $r4 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r4.<org.apache.xerces.xni.XMLDocumentHandler: void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)>(r2, r3);

     label13:
        return;
    }

    public void ignorableWhitespace(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLString r1;
        org.apache.xerces.xni.Augmentations r2;
        org.cyberneko.html.HTMLTagBalancer r0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.XMLString;

        r2 := @parameter1: org.apache.xerces.xni.Augmentations;

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)>(r1, r2);

        return;
    }

    public void endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.cyberneko.html.HTMLErrorReporter $r11, $r20;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r24;
        org.cyberneko.html.HTMLTagBalancer$ElementEntry $r38, $r39;
        org.cyberneko.html.HTMLTagBalancer$Info $r5, $r13, r32;
        java.lang.Object[] $r10, $r19;
        org.apache.xerces.xni.XMLDocumentHandler $r35;
        short $s0, $s1, $s2, $s5, $s9, $s10, $s11, $s12;
        java.lang.String r9, $r16, $r17, r34;
        org.apache.xerces.xni.XMLAttributes $r26, r37;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r29, $r31;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName r1, $r6, $r8, $r15, $r18;
        int $i3, $i4, $i6, $i7, $i8, $i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r3, $r4, $r12, $r21, $r22, $r23, $r25;
        org.apache.xerces.xni.Augmentations $r7, r14, $r27, $r36;
        org.cyberneko.html.HTMLElements$Element $r2, r33;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.QName;

        r14 := @parameter1: org.apache.xerces.xni.Augmentations;

        z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean forcedEndElement_>;

        $z1 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z1 == 0 goto label01;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>(r1, r14);

        return;

     label01:
        $r2 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLElements$Element getElement(org.apache.xerces.xni.QName)>(r1);

        $z2 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fIgnoreOutsideContent>;

        if $z2 != 0 goto label03;

        $s11 = $r2.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i19 = (int) $s11;

        if $i19 == 14 goto label02;

        $s12 = $r2.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i20 = (int) $s12;

        if $i20 != 46 goto label03;

     label02:
        $r31 = r0.<org.cyberneko.html.HTMLTagBalancer: java.util.List endElementsBuffer_>;

        $r38 = new org.cyberneko.html.HTMLTagBalancer$ElementEntry;

        specialinvoke $r38.<org.cyberneko.html.HTMLTagBalancer$ElementEntry: void <init>(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>(r1, r14);

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r38);

        return;

     label03:
        $s0 = $r2.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i21 = (int) $s0;

        if $i21 != 46 goto label04;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd> = 1;

        goto label06;

     label04:
        $s1 = $r2.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i22 = (int) $s1;

        if $i22 != 35 goto label05;

        r0.<org.cyberneko.html.HTMLTagBalancer: boolean fOpenedForm> = 0;

        goto label06;

     label05:
        $s2 = $r2.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i23 = (int) $s2;

        if $i23 != 44 goto label06;

        if z0 != 0 goto label06;

        $r29 = r0.<org.cyberneko.html.HTMLTagBalancer: java.util.List endElementsBuffer_>;

        $r39 = new org.cyberneko.html.HTMLTagBalancer$ElementEntry;

        specialinvoke $r39.<org.cyberneko.html.HTMLTagBalancer$ElementEntry: void <init>(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>(r1, r14);

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r39);

        return;

     label06:
        $i13 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: int getElementDepth(org.cyberneko.html.HTMLElements$Element)>($r2);

        $i25 = (int) -1;

        if $i13 != $i25 goto label09;

        $s10 = $r2.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i26 = (int) $s10;

        if $i26 != 77 goto label07;

        $r26 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLAttributes emptyAttributes()>();

        $r27 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: boolean forceStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, $r26, $r27);

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>(r1, r14);

        goto label08;

     label07:
        $z7 = virtualinvoke $r2.<org.cyberneko.html.HTMLElements$Element: boolean isEmpty()>();

        if $z7 != 0 goto label08;

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void notifyDiscardedEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>(r1, r14);

     label08:
        return;

     label09:
        if $i13 <= 1 goto label13;

        $z5 = virtualinvoke $r2.<org.cyberneko.html.HTMLElements$Element: boolean isInline()>();

        if $z5 == 0 goto label13;

        $r21 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        i14 = $r21.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $r22 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack>;

        $r22.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top> = 0;

        i15 = 0;

     label10:
        $i6 = $i13 - 1;

        if i15 >= $i6 goto label13;

        $r23 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r24 = $r23.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        $i7 = i14 - i15;

        $i8 = $i7 - 1;

        r32 = $r24[$i8];

        r33 = r32.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $z6 = virtualinvoke r33.<org.cyberneko.html.HTMLElements$Element: boolean isInline()>();

        if $z6 != 0 goto label11;

        $s9 = r33.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i27 = (int) $s9;

        if $i27 != 34 goto label12;

     label11:
        $r25 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack>;

        virtualinvoke $r25.<org.cyberneko.html.HTMLTagBalancer$InfoStack: void push(org.cyberneko.html.HTMLTagBalancer$Info)>(r32);

     label12:
        i15 = i15 + 1;

        goto label10;

     label13:
        i16 = 0;

     label14:
        if i16 >= $i13 goto label19;

        $r12 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r13 = virtualinvoke $r12.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info pop()>();

        $z4 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z4 == 0 goto label15;

        $i4 = $i13 - 1;

        if i16 >= $i4 goto label15;

        $r16 = r1.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $s5 = r0.<org.cyberneko.html.HTMLTagBalancer: short fNamesElems>;

        $r17 = staticinvoke <org.cyberneko.html.HTMLTagBalancer: java.lang.String modifyName(java.lang.String,short)>($r16, $s5);

        $r18 = $r13.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        r34 = $r18.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r20 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = $r17;

        $r19[1] = r34;

        interfaceinvoke $r20.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2007", $r19);

     label15:
        $r35 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r35 == null goto label18;

        $r15 = $r13.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $i3 = $i13 - 1;

        if i16 >= $i3 goto label16;

        $r36 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        goto label17;

     label16:
        $r36 = r14;

     label17:
        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void callEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>($r15, $r36);

     label18:
        i16 = i16 + 1;

        goto label14;

     label19:
        if $i13 <= 1 goto label22;

        $r3 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack>;

        i17 = $r3.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        i18 = 0;

     label20:
        if i18 >= i17 goto label22;

        $r4 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fInlineStack>;

        $r5 = virtualinvoke $r4.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info pop()>();

        r37 = $r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.XMLAttributes attributes>;

        $z3 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fReportErrors>;

        if $z3 == 0 goto label21;

        $r8 = $r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        r9 = $r8.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r11 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLErrorReporter fErrorReporter>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r9;

        interfaceinvoke $r11.<org.cyberneko.html.HTMLErrorReporter: void reportWarning(java.lang.String,java.lang.Object[])>("HTML2008", $r10);

     label21:
        $r6 = $r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.apache.xerces.xni.QName qname>;

        $r7 = virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.Augmentations synthesizedAugs()>();

        specialinvoke r0.<org.cyberneko.html.HTMLTagBalancer: boolean forceStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>($r6, r37, $r7);

        i18 = i18 + 1;

        goto label20;

     label22:
        return;
    }

    public void setDocumentSource(org.apache.xerces.xni.parser.XMLDocumentSource)
    {
        org.apache.xerces.xni.parser.XMLDocumentSource r1;
        org.cyberneko.html.HTMLTagBalancer r0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLDocumentSource;

        r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.parser.XMLDocumentSource fDocumentSource> = r1;

        return;
    }

    public org.apache.xerces.xni.parser.XMLDocumentSource getDocumentSource()
    {
        org.apache.xerces.xni.parser.XMLDocumentSource $r1;
        org.cyberneko.html.HTMLTagBalancer r0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.parser.XMLDocumentSource fDocumentSource>;

        return $r1;
    }

    public void startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.Augmentations r3;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.XMLLocator r1;
        java.lang.String r2;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.XMLLocator;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.xerces.xni.Augmentations;

        virtualinvoke r0.<org.cyberneko.html.HTMLTagBalancer: void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)>(r1, r2, null, r3);

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r6;
        org.apache.xerces.xni.Augmentations r5;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.String r3, r4;
        org.cyberneko.html.xercesbridge.XercesBridge $r2;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: org.apache.xerces.xni.Augmentations;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r2 = staticinvoke <org.cyberneko.html.xercesbridge.XercesBridge: org.cyberneko.html.xercesbridge.XercesBridge getInstance()>();

        $r6 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        virtualinvoke $r2.<org.cyberneko.html.xercesbridge.XercesBridge: void XMLDocumentHandler_startPrefixMapping(org.apache.xerces.xni.XMLDocumentHandler,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)>($r6, r3, r4, r5);

     label2:
        return;
    }

    public void endPrefixMapping(java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r1, $r5;
        org.apache.xerces.xni.Augmentations r4;
        org.cyberneko.html.HTMLTagBalancer r0;
        java.lang.String r3;
        org.cyberneko.html.xercesbridge.XercesBridge $r2;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.xerces.xni.Augmentations;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fSeenRootElementEnd>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r2 = staticinvoke <org.cyberneko.html.xercesbridge.XercesBridge: org.cyberneko.html.xercesbridge.XercesBridge getInstance()>();

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        virtualinvoke $r2.<org.cyberneko.html.xercesbridge.XercesBridge: void XMLDocumentHandler_endPrefixMapping(org.apache.xerces.xni.XMLDocumentHandler,java.lang.String,org.apache.xerces.xni.Augmentations)>($r5, r3, r4);

     label2:
        return;
    }

    protected org.cyberneko.html.HTMLElements$Element getElement(org.apache.xerces.xni.QName)
    {
        org.cyberneko.html.HTMLTagBalancer r1;
        int $i0, $i1, $i3;
        java.lang.String $r2, $r3, r4;
        org.apache.xerces.xni.QName r0;
        org.cyberneko.html.HTMLElements$Element $r5;
        boolean $z0, $z1;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer;

        r0 := @parameter0: org.apache.xerces.xni.QName;

        r4 = r0.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $z0 = r1.<org.cyberneko.html.HTMLTagBalancer: boolean fNamespaces>;

        if $z0 == 0 goto label1;

        $r3 = "http://www.w3.org/1999/xhtml";

        $r2 = r0.<org.apache.xerces.xni.QName: java.lang.String uri>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58);

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $i1 = $i0 + 1;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        $r5 = staticinvoke <org.cyberneko.html.HTMLElements: org.cyberneko.html.HTMLElements$Element getElement(java.lang.String)>(r4);

        return $r5;
    }

    protected final void callStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r4;
        org.apache.xerces.xni.Augmentations r3;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName r1;
        org.apache.xerces.xni.XMLAttributes r2;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.QName;

        r2 := @parameter1: org.apache.xerces.xni.XMLAttributes;

        r3 := @parameter2: org.apache.xerces.xni.Augmentations;

        $r4 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r4.<org.apache.xerces.xni.XMLDocumentHandler: void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r2, r3);

        return;
    }

    protected final void callEndElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLDocumentHandler $r3;
        org.apache.xerces.xni.Augmentations r2;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName r1;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.apache.xerces.xni.QName;

        r2 := @parameter1: org.apache.xerces.xni.Augmentations;

        $r3 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r3.<org.apache.xerces.xni.XMLDocumentHandler: void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>(r1, r2);

        return;
    }

    protected final int getElementDepth(org.cyberneko.html.HTMLElements$Element)
    {
        short $s2, $s3;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r4;
        int $i0, $i1, $i4, i5, i6, $i8, $i9, $i10, $i12;
        boolean $z0, $z1, $z2;
        org.cyberneko.html.HTMLTagBalancer$Info r5;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r2, $r3, $r8;
        org.cyberneko.html.HTMLTagBalancer r1;
        org.cyberneko.html.HTMLElements$Element r0, $r6, $r7;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer;

        r0 := @parameter0: org.cyberneko.html.HTMLElements$Element;

        $z0 = virtualinvoke r0.<org.cyberneko.html.HTMLElements$Element: boolean isContainer()>();

        $i8 = (int) -1;

        i5 = $i8;

        $r2 = r1.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i0 = $r2.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        i6 = $i0 - 1;

     label1:
        $i1 = r1.<org.cyberneko.html.HTMLTagBalancer: int fragmentContextStackSize_>;

        if i6 < $i1 goto label4;

        $r3 = r1.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r4 = $r3.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        r5 = $r4[i6];

        $r6 = r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s3 = $r6.<org.cyberneko.html.HTMLElements$Element: short code>;

        $s2 = r0.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i9 = (int) $s3;

        $i10 = (int) $s2;

        if $i9 != $i10 goto label2;

        $r8 = r1.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i4 = $r8.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        i5 = $i4 - i6;

        goto label4;

     label2:
        if $z0 != 0 goto label3;

        $z1 = r0.<org.cyberneko.html.HTMLElements$Element: boolean nestable>;

        if $z1 == 0 goto label3;

        $r7 = r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $z2 = virtualinvoke $r7.<org.cyberneko.html.HTMLElements$Element: boolean isBlock()>();

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        $i12 = (int) -1;

        i6 = i6 + $i12;

        goto label1;

     label4:
        return i5;
    }

    protected int getParentDepth(org.cyberneko.html.HTMLElements$Element[], short)
    {
        org.cyberneko.html.HTMLElements$Element[] r0;
        short s1, $s2, $s4, $s5;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r4;
        int $i0, $i3, $i6, $i7, i8, i9, $i10, $i11, $i12, $i13, $i15, $i17;
        org.cyberneko.html.HTMLTagBalancer$Info r5;
        org.cyberneko.html.HTMLTagBalancer$InfoStack $r2, $r3, $r9;
        org.cyberneko.html.HTMLTagBalancer r1;
        org.cyberneko.html.HTMLElements$Element $r6, $r7, $r8;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer;

        r0 := @parameter0: org.cyberneko.html.HTMLElements$Element[];

        s1 := @parameter1: short;

        if r0 == null goto label6;

        $r2 = r1.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i0 = $r2.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        i8 = $i0 - 1;

     label1:
        if i8 < 0 goto label6;

        $r3 = r1.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $r4 = $r3.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        r5 = $r4[i8];

        $r6 = r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s2 = $r6.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i10 = (int) $s2;

        $i11 = (int) s1;

        if $i10 != $i11 goto label2;

        goto label6;

     label2:
        i9 = 0;

     label3:
        $i3 = lengthof r0;

        if i9 >= $i3 goto label5;

        $r7 = r5.<org.cyberneko.html.HTMLTagBalancer$Info: org.cyberneko.html.HTMLElements$Element element>;

        $s5 = $r7.<org.cyberneko.html.HTMLElements$Element: short code>;

        $r8 = r0[i9];

        $s4 = $r8.<org.cyberneko.html.HTMLElements$Element: short code>;

        $i12 = (int) $s5;

        $i13 = (int) $s4;

        if $i12 != $i13 goto label4;

        $r9 = r1.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancer$InfoStack fElementStack>;

        $i6 = $r9.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $i7 = $i6 - i8;

        return $i7;

     label4:
        i9 = i9 + 1;

        goto label3;

     label5:
        $i15 = (int) -1;

        i8 = i8 + $i15;

        goto label1;

     label6:
        $i17 = (int) -1;

        return $i17;
    }

    protected final org.apache.xerces.xni.XMLAttributes emptyAttributes()
    {
        org.apache.xerces.xni.XMLAttributes $r1, $r2;
        org.cyberneko.html.HTMLTagBalancer r0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLAttributes fEmptyAttrs>;

        interfaceinvoke $r1.<org.apache.xerces.xni.XMLAttributes: void removeAllAttributes()>();

        $r2 = r0.<org.cyberneko.html.HTMLTagBalancer: org.apache.xerces.xni.XMLAttributes fEmptyAttrs>;

        return $r2;
    }

    protected final org.apache.xerces.xni.Augmentations synthesizedAugs()
    {
        org.apache.xerces.xni.Augmentations $r3;
        org.cyberneko.html.HTMLAugmentations r2;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.cyberneko.html.HTMLEventInfo $r1;
        boolean $z0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 = null;

        $z0 = r0.<org.cyberneko.html.HTMLTagBalancer: boolean fAugmentations>;

        if $z0 == 0 goto label1;

        r2 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLAugmentations fInfosetAugs>;

        virtualinvoke r2.<org.cyberneko.html.HTMLAugmentations: void removeAllItems()>();

        $r1 = <org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLEventInfo SYNTHESIZED_ITEM>;

        virtualinvoke r2.<org.cyberneko.html.HTMLAugmentations: java.lang.Object putItem(java.lang.String,java.lang.Object)>("http://cyberneko.org/html/features/augmentations", $r1);

     label1:
        $r3 = (org.apache.xerces.xni.Augmentations) r2;

        return $r3;
    }

    protected static final java.lang.String modifyName(java.lang.String, short)
    {
        short s0;
        int $i1;
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        $i1 = (int) s0;

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        return $r2;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        return $r1;

     label3:
        return r0;
    }

    protected static final short getNamesValue(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("lower");

        if $z0 == 0 goto label1;

        return 2;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("upper");

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    void setTagBalancingListener(org.cyberneko.html.HTMLTagBalancingListener)
    {
        org.cyberneko.html.HTMLTagBalancingListener r1;
        org.cyberneko.html.HTMLTagBalancer r0;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r1 := @parameter0: org.cyberneko.html.HTMLTagBalancingListener;

        r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancingListener tagBalancingListener> = r1;

        return;
    }

    private void notifyDiscardedStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations)
    {
        org.cyberneko.html.HTMLTagBalancingListener $r1, $r5;
        org.apache.xerces.xni.Augmentations r4;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName r2;
        org.apache.xerces.xni.XMLAttributes r3;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: org.apache.xerces.xni.QName;

        r3 := @parameter1: org.apache.xerces.xni.XMLAttributes;

        r4 := @parameter2: org.apache.xerces.xni.Augmentations;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancingListener tagBalancingListener>;

        if $r1 == null goto label1;

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancingListener tagBalancingListener>;

        interfaceinvoke $r5.<org.cyberneko.html.HTMLTagBalancingListener: void ignoredStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r2, r3, r4);

     label1:
        return;
    }

    private void notifyDiscardedEndElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations)
    {
        org.cyberneko.html.HTMLTagBalancingListener $r1, $r4;
        org.apache.xerces.xni.Augmentations r3;
        org.cyberneko.html.HTMLTagBalancer r0;
        org.apache.xerces.xni.QName r2;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer;

        r2 := @parameter0: org.apache.xerces.xni.QName;

        r3 := @parameter1: org.apache.xerces.xni.Augmentations;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancingListener tagBalancingListener>;

        if $r1 == null goto label1;

        $r4 = r0.<org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLTagBalancingListener tagBalancingListener>;

        interfaceinvoke $r4.<org.cyberneko.html.HTMLTagBalancingListener: void ignoredEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)>(r2, r3);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r5;
        org.cyberneko.html.HTMLEventInfo $r8;
        java.lang.String[] $r0, $r4;
        java.lang.Boolean[] $r1;
        org.cyberneko.html.HTMLEventInfo$SynthesizedItem $r7;
        java.lang.Boolean $r2, $r3;

        <org.cyberneko.html.HTMLTagBalancer: short NAMES_LOWERCASE> = 2;

        <org.cyberneko.html.HTMLTagBalancer: short NAMES_UPPERCASE> = 1;

        <org.cyberneko.html.HTMLTagBalancer: short NAMES_MATCH> = 0;

        <org.cyberneko.html.HTMLTagBalancer: short NAMES_NO_CHANGE> = 0;

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String FRAGMENT_CONTEXT_STACK> = "http://cyberneko.org/html/properties/balance-tags/fragment-context-stack";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String ERROR_REPORTER> = "http://cyberneko.org/html/properties/error-reporter";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String NAMES_ATTRS> = "http://cyberneko.org/html/properties/names/attrs";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String NAMES_ELEMS> = "http://cyberneko.org/html/properties/names/elems";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String IGNORE_OUTSIDE_CONTENT> = "http://cyberneko.org/html/features/balance-tags/ignore-outside-content";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String DOCUMENT_FRAGMENT> = "http://cyberneko.org/html/features/balance-tags/document-fragment";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String DOCUMENT_FRAGMENT_DEPRECATED> = "http://cyberneko.org/html/features/document-fragment";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String REPORT_ERRORS> = "http://cyberneko.org/html/features/report-errors";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String AUGMENTATIONS> = "http://cyberneko.org/html/features/augmentations";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String NAMESPACES> = "http://xml.org/sax/features/namespaces";

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = "http://xml.org/sax/features/namespaces";

        $r0[1] = "http://cyberneko.org/html/features/augmentations";

        $r0[2] = "http://cyberneko.org/html/features/report-errors";

        $r0[3] = "http://cyberneko.org/html/features/document-fragment";

        $r0[4] = "http://cyberneko.org/html/features/balance-tags/document-fragment";

        $r0[5] = "http://cyberneko.org/html/features/balance-tags/ignore-outside-content";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_FEATURES> = $r0;

        $r1 = newarray (java.lang.Boolean)[6];

        $r1[0] = null;

        $r1[1] = null;

        $r1[2] = null;

        $r1[3] = null;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r1[4] = $r2;

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r1[5] = $r3;

        <org.cyberneko.html.HTMLTagBalancer: java.lang.Boolean[] RECOGNIZED_FEATURES_DEFAULTS> = $r1;

        $r4 = newarray (java.lang.String)[4];

        $r4[0] = "http://cyberneko.org/html/properties/names/elems";

        $r4[1] = "http://cyberneko.org/html/properties/names/attrs";

        $r4[2] = "http://cyberneko.org/html/properties/error-reporter";

        $r4[3] = "http://cyberneko.org/html/properties/balance-tags/fragment-context-stack";

        <org.cyberneko.html.HTMLTagBalancer: java.lang.String[] RECOGNIZED_PROPERTIES> = $r4;

        $r5 = newarray (java.lang.Object)[4];

        $r5[0] = null;

        $r5[1] = null;

        $r5[2] = null;

        $r5[3] = null;

        <org.cyberneko.html.HTMLTagBalancer: java.lang.Object[] RECOGNIZED_PROPERTIES_DEFAULTS> = $r5;

        $r7 = new org.cyberneko.html.HTMLEventInfo$SynthesizedItem;

        specialinvoke $r7.<org.cyberneko.html.HTMLEventInfo$SynthesizedItem: void <init>()>();

        $r8 = (org.cyberneko.html.HTMLEventInfo) $r7;

        <org.cyberneko.html.HTMLTagBalancer: org.cyberneko.html.HTMLEventInfo SYNTHESIZED_ITEM> = $r8;

        return;
    }
}
