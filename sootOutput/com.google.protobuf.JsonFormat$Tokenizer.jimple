final class com.google.protobuf.JsonFormat$Tokenizer extends java.lang.Object
{
    private final java.lang.CharSequence text;
    private final java.util.regex.Matcher matcher;
    private java.lang.String currentToken;
    private int pos;
    private int line;
    private int column;
    private int previousLine;
    private int previousColumn;
    private static java.util.regex.Pattern WHITESPACE;
    private static java.util.regex.Pattern TOKEN;
    private static java.util.regex.Pattern DOUBLE_INFINITY;
    private static java.util.regex.Pattern FLOAT_INFINITY;
    private static java.util.regex.Pattern FLOAT_NAN;

    public void <init>(java.lang.CharSequence)
    {
        java.util.regex.Matcher $r3;
        java.lang.CharSequence r1;
        java.util.regex.Pattern $r2;
        com.google.protobuf.JsonFormat$Tokenizer r0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int pos> = 0;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int line> = 0;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int column> = 0;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int previousLine> = 0;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int previousColumn> = 0;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.CharSequence text> = r1;

        $r2 = <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern WHITESPACE>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher> = $r3;

        specialinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void skipWhitespace()>();

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        return;
    }

    public boolean atEnd()
    {
        int $i0;
        java.lang.String $r1;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void nextToken()
    {
        com.google.protobuf.JsonFormat$Tokenizer r0;
        java.util.regex.Matcher $r1, $r2, $r3, $r5, $r6, $r9, $r10, $r11, $r13, $r14, $r15;
        boolean $z0;
        java.lang.CharSequence $r7, $r16;
        java.util.regex.Pattern $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.lang.String $r8, $r12;
        char $c7, $c14;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $i0 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int line>;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int previousLine> = $i0;

        $i1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int column>;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int previousColumn> = $i1;

     label1:
        $i2 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int pos>;

        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i3 = virtualinvoke $r1.<java.util.regex.Matcher: int regionStart()>();

        if $i2 >= $i3 goto label4;

        $r16 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.CharSequence text>;

        $i13 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int pos>;

        $c14 = interfaceinvoke $r16.<java.lang.CharSequence: char charAt(int)>($i13);

        $i21 = (int) $c14;

        if $i21 != 10 goto label2;

        $i19 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int line>;

        $i20 = $i19 + 1;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int line> = $i20;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int column> = 0;

        goto label3;

     label2:
        $i15 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int column>;

        $i16 = $i15 + 1;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int column> = $i16;

     label3:
        $i17 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int pos>;

        $i18 = $i17 + 1;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: int pos> = $i18;

        goto label1;

     label4:
        $r2 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i4 = virtualinvoke $r2.<java.util.regex.Matcher: int regionStart()>();

        $r3 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i5 = virtualinvoke $r3.<java.util.regex.Matcher: int regionEnd()>();

        if $i4 != $i5 goto label5;

        r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken> = "";

        goto label8;

     label5:
        $r5 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $r4 = <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern TOKEN>;

        virtualinvoke $r5.<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>($r4);

        $r6 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean lookingAt()>();

        if $z0 == 0 goto label6;

        $r11 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $r12 = virtualinvoke $r11.<java.util.regex.Matcher: java.lang.String group()>();

        r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken> = $r12;

        $r14 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $r13 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i11 = virtualinvoke $r13.<java.util.regex.Matcher: int end()>();

        $r15 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i12 = virtualinvoke $r15.<java.util.regex.Matcher: int regionEnd()>();

        virtualinvoke $r14.<java.util.regex.Matcher: java.util.regex.Matcher region(int,int)>($i11, $i12);

        goto label7;

     label6:
        $r7 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.CharSequence text>;

        $i6 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int pos>;

        $c7 = interfaceinvoke $r7.<java.lang.CharSequence: char charAt(int)>($i6);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c7);

        r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken> = $r8;

        $r10 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i8 = r0.<com.google.protobuf.JsonFormat$Tokenizer: int pos>;

        $i9 = $i8 + 1;

        $r9 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i10 = virtualinvoke $r9.<java.util.regex.Matcher: int regionEnd()>();

        virtualinvoke $r10.<java.util.regex.Matcher: java.util.regex.Matcher region(int,int)>($i9, $i10);

     label7:
        specialinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void skipWhitespace()>();

     label8:
        return;
    }

    private void skipWhitespace()
    {
        com.google.protobuf.JsonFormat$Tokenizer r0;
        java.util.regex.Matcher $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.util.regex.Pattern $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $r2 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $r1 = <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern WHITESPACE>;

        virtualinvoke $r2.<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>($r1);

        $r3 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean lookingAt()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $r4 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i0 = virtualinvoke $r4.<java.util.regex.Matcher: int end()>();

        $r6 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Matcher matcher>;

        $i1 = virtualinvoke $r6.<java.util.regex.Matcher: int regionEnd()>();

        virtualinvoke $r5.<java.util.regex.Matcher: java.util.regex.Matcher region(int,int)>($i0, $i1);

     label1:
        return;
    }

    public boolean tryConsume(java.lang.String)
    {
        java.lang.String r1, $r2;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        return 1;

     label1:
        return 0;
    }

    public void consume(java.lang.String) throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r7;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String r1, $r6;
        boolean $z0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: boolean tryConsume(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \"");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)>($r6);

        throw $r7;

     label1:
        return;
    }

    public boolean lookingAtInteger()
    {
        char $c1;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        int $i0, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        if 48 > $i2 goto label2;

        $i3 = (int) $c1;

        if $i3 <= 57 goto label3;

     label2:
        $i4 = (int) $c1;

        if $i4 == 45 goto label3;

        $i5 = (int) $c1;

        if $i5 != 43 goto label4;

     label3:
        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public java.lang.String consumeIdentifier() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r8;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r1, $r2, $r3, $r7, r9;
        char $c1;
        java.lang.StringBuilder $r5, $r6, $r10;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        i2 = 0;

     label1:
        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label7;

        $r3 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if 97 > $i3 goto label2;

        $i4 = (int) $c1;

        if $i4 <= 122 goto label6;

     label2:
        $i5 = (int) $c1;

        if 65 > $i5 goto label3;

        $i6 = (int) $c1;

        if $i6 <= 90 goto label6;

     label3:
        $i7 = (int) $c1;

        if 48 > $i7 goto label4;

        $i8 = (int) $c1;

        if $i8 <= 57 goto label6;

     label4:
        $i9 = (int) $c1;

        if $i9 == 95 goto label6;

        $i10 = (int) $c1;

        if $i10 == 46 goto label6;

        $i11 = (int) $c1;

        if $i11 != 34 goto label5;

        goto label6;

     label5:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected identifier. -");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)>($r7);

        throw $r8;

     label6:
        i2 = i2 + 1;

        goto label1;

     label7:
        r9 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $r2 = virtualinvoke r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\"|\'", "");

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        return $r2;
    }

    public int consumeInt32() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r3;
        int $i0;
        java.lang.NumberFormatException $r2;
        java.lang.String $r1;
        com.google.protobuf.JsonFormat$Tokenizer r0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

     label1:
        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i0 = staticinvoke <com.google.protobuf.JsonFormat: int parseInt32(java.lang.String)>($r1);

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r3 = specialinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException integerParseException(java.lang.NumberFormatException)>($r2);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int consumeUInt32() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r3;
        int $i0;
        java.lang.NumberFormatException $r2;
        java.lang.String $r1;
        com.google.protobuf.JsonFormat$Tokenizer r0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

     label1:
        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i0 = staticinvoke <com.google.protobuf.JsonFormat: int parseUInt32(java.lang.String)>($r1);

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r3 = specialinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException integerParseException(java.lang.NumberFormatException)>($r2);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public long consumeInt64() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r3;
        long $l0;
        java.lang.NumberFormatException $r2;
        java.lang.String $r1;
        com.google.protobuf.JsonFormat$Tokenizer r0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

     label1:
        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $l0 = staticinvoke <com.google.protobuf.JsonFormat: long parseInt64(java.lang.String)>($r1);

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        $r3 = specialinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException integerParseException(java.lang.NumberFormatException)>($r2);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public long consumeUInt64() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r3;
        long $l0;
        java.lang.NumberFormatException $r2;
        java.lang.String $r1;
        com.google.protobuf.JsonFormat$Tokenizer r0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

     label1:
        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $l0 = staticinvoke <com.google.protobuf.JsonFormat: long parseUInt64(java.lang.String)>($r1);

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        $r3 = specialinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException integerParseException(java.lang.NumberFormatException)>($r2);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public double consumeDouble() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r8;
        java.lang.NumberFormatException $r7;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        java.util.regex.Matcher $r3;
        java.lang.String $r1, $r4, $r5, $r6;
        java.util.regex.Pattern $r2;
        boolean $z0, $z1, $z2;
        double $d0, $d1;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $r2 = <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern DOUBLE_INFINITY>;

        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label3;

        $r6 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        if $z2 == 0 goto label1;

        $d1 = #-Infinity;

        goto label2;

     label1:
        $d1 = #Infinity;

     label2:
        return $d1;

     label3:
        $r4 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("nan");

        if $z1 == 0 goto label4;

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        return #NaN;

     label4:
        $r5 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

     label5:
        return $d0;

     label6:
        $r7 := @caughtexception;

        $r8 = specialinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException floatParseException(java.lang.NumberFormatException)>($r7);

        throw $r8;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public float consumeFloat() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r10;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        java.util.regex.Matcher $r3, $r6;
        java.lang.String $r1, $r4, $r7, $r8;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r9;
        float $f0, $f1;
        java.util.regex.Pattern $r2, $r5;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $r2 = <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern FLOAT_INFINITY>;

        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        if $z2 == 0 goto label1;

        $f1 = #-InfinityF;

        goto label2;

     label1:
        $f1 = #InfinityF;

     label2:
        return $f1;

     label3:
        $r5 = <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern FLOAT_NAN>;

        $r4 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $z1 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label4;

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        return #NaNF;

     label4:
        $r7 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r7);

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

     label5:
        return $f0;

     label6:
        $r9 := @caughtexception;

        $r10 = specialinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException floatParseException(java.lang.NumberFormatException)>($r9);

        throw $r10;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public boolean consumeBoolean() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r3;
        java.lang.String $r1, $r2;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        boolean $z0, $z1;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        return 1;

     label1:
        $r2 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

        return 0;

     label2:
        $r3 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)>("Expected \"true\" or \"false\".");

        throw $r3;
    }

    public java.lang.String consumeString() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.ByteString $r1;
        java.lang.String $r2;
        com.google.protobuf.JsonFormat$Tokenizer r0;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $r1 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.ByteString consumeByteString()>();

        $r2 = virtualinvoke $r1.<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>();

        return $r2;
    }

    public com.google.protobuf.ByteString consumeByteString() throws com.google.protobuf.JsonFormat$ParseException
    {
        com.google.protobuf.JsonFormat$ParseException $r3, $r10, $r14;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        int $i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        java.lang.String $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r11, $r13;
        char $c5;
        com.google.protobuf.ByteString $r9;
        com.google.protobuf.JsonFormat$InvalidEscapeSequence $r12;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        $r1 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r11 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i8 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(0);

        goto label2;

     label1:
        $i8 = 0;

     label2:
        i1 = $i8;

        if $i8 == 34 goto label3;

        if $i8 == 39 goto label3;

        $r10 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)>("Expected string.");

        throw $r10;

     label3:
        $r2 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 < 2 goto label4;

        $r5 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $r4 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $c5 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i4);

        $i9 = (int) $c5;

        if $i9 == i1 goto label5;

     label4:
        $r3 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)>("String missing ending quote.");

        throw $r3;

     label5:
        $r7 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $r6 = r0.<com.google.protobuf.JsonFormat$Tokenizer: java.lang.String currentToken>;

        $i6 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i7 = $i6 - 1;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(1, $i7);

        $r9 = staticinvoke <com.google.protobuf.JsonFormat: com.google.protobuf.ByteString unescapeBytes(java.lang.CharSequence)>($r8);

        virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: void nextToken()>();

     label6:
        return $r9;

     label7:
        $r12 := @caughtexception;

        $r13 = virtualinvoke $r12.<com.google.protobuf.JsonFormat$InvalidEscapeSequence: java.lang.String getMessage()>();

        $r14 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)>($r13);

        throw $r14;

        catch com.google.protobuf.JsonFormat$InvalidEscapeSequence from label5 to label6 with label7;
    }

    public com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)
    {
        com.google.protobuf.JsonFormat$ParseException $r0;
        com.google.protobuf.JsonFormat$Tokenizer r2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r8;
        java.lang.String r7, $r9;

        r2 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        r7 := @parameter0: java.lang.String;

        $r0 = new com.google.protobuf.JsonFormat$ParseException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = r2.<com.google.protobuf.JsonFormat$Tokenizer: int line>;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i2 = r2.<com.google.protobuf.JsonFormat$Tokenizer: int column>;

        $i3 = $i2 + 1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.google.protobuf.JsonFormat$ParseException: void <init>(java.lang.String)>($r9);

        return $r0;
    }

    public com.google.protobuf.JsonFormat$ParseException parseExceptionPreviousToken(java.lang.String)
    {
        com.google.protobuf.JsonFormat$ParseException $r0;
        com.google.protobuf.JsonFormat$Tokenizer r2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r8;
        java.lang.String r7, $r9;

        r2 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        r7 := @parameter0: java.lang.String;

        $r0 = new com.google.protobuf.JsonFormat$ParseException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = r2.<com.google.protobuf.JsonFormat$Tokenizer: int previousLine>;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i2 = r2.<com.google.protobuf.JsonFormat$Tokenizer: int previousColumn>;

        $i3 = $i2 + 1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.google.protobuf.JsonFormat$ParseException: void <init>(java.lang.String)>($r9);

        return $r0;
    }

    private com.google.protobuf.JsonFormat$ParseException integerParseException(java.lang.NumberFormatException)
    {
        com.google.protobuf.JsonFormat$ParseException $r7;
        java.lang.NumberFormatException r3;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        r3 := @parameter0: java.lang.NumberFormatException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t parse integer: ");

        $r4 = virtualinvoke r3.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)>($r6);

        return $r7;
    }

    private com.google.protobuf.JsonFormat$ParseException floatParseException(java.lang.NumberFormatException)
    {
        com.google.protobuf.JsonFormat$ParseException $r7;
        java.lang.NumberFormatException r3;
        com.google.protobuf.JsonFormat$Tokenizer r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.google.protobuf.JsonFormat$Tokenizer;

        r3 := @parameter0: java.lang.NumberFormatException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t parse number: ");

        $r4 = virtualinvoke r3.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.google.protobuf.JsonFormat$Tokenizer: com.google.protobuf.JsonFormat$ParseException parseException(java.lang.String)>($r6);

        return $r7;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2, $r3, $r4;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(\\s|(#.*$))+", 8);

        <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern WHITESPACE> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|\"([^\"\n\\\\]|\\\\.)*(\"|\\\\?$)|\'([^\"\n\\\\]|\\\\.)*(\'|\\\\?$)", 8);

        <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern TOKEN> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("-?inf(inity)?", 2);

        <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern DOUBLE_INFINITY> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("-?inf(inity)?f?", 2);

        <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern FLOAT_INFINITY> = $r3;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("nanf?", 2);

        <com.google.protobuf.JsonFormat$Tokenizer: java.util.regex.Pattern FLOAT_NAN> = $r4;

        return;
    }
}
