public interface  org.waveprotocol.wave.model.supplement.ReadableSupplementedWave extends java.lang.Object
{

    public abstract org.waveprotocol.wave.model.supplement.ThreadState getThreadState(org.waveprotocol.wave.model.conversation.ConversationThread);

    public abstract boolean isUnread(org.waveprotocol.wave.model.conversation.ConversationBlip);

    public abstract boolean isParticipantsUnread(org.waveprotocol.wave.model.wave.Wavelet);

    public abstract boolean haveParticipantsEverBeenRead(org.waveprotocol.wave.model.wave.Wavelet);

    public abstract boolean isTagsUnread(org.waveprotocol.wave.model.wave.Wavelet);

    public abstract java.util.Set getFolders();

    public abstract boolean isInbox();

    public abstract org.waveprotocol.wave.model.supplement.WantedEvaluationSet getWantedEvaluationSet(org.waveprotocol.wave.model.wave.Wavelet);

    public abstract boolean isMute();

    public abstract boolean isArchived();

    public abstract boolean isFollowed();

    public abstract boolean isTrashed();

    public abstract org.waveprotocol.wave.model.version.HashedVersion getSeenVersion(org.waveprotocol.wave.model.id.WaveletId);

    public abstract boolean hasBeenSeen();

    public abstract boolean hasPendingNotification();

    public abstract java.lang.String getGadgetStateValue(java.lang.String, java.lang.String);

    public abstract org.waveprotocol.wave.model.util.ReadableStringMap getGadgetState(java.lang.String);
}
