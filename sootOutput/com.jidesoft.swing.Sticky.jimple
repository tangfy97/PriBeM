public class com.jidesoft.swing.Sticky extends java.lang.Object
{
    private javax.swing.JComponent _target;
    private static final com.jidesoft.swing.Sticky$StickyMouseMotionListener STICKY_MOUSE_MOTION_LISTENER;

    public void <init>(javax.swing.JList)
    {
        javax.swing.JList r1;
        com.jidesoft.swing.Sticky r0;

        r0 := @this: com.jidesoft.swing.Sticky;

        r1 := @parameter0: javax.swing.JList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.swing.Sticky: javax.swing.JComponent _target> = r1;

        virtualinvoke r0.<com.jidesoft.swing.Sticky: void install()>();

        return;
    }

    public void <init>(javax.swing.JTree)
    {
        com.jidesoft.swing.Sticky r0;
        javax.swing.JTree r1;

        r0 := @this: com.jidesoft.swing.Sticky;

        r1 := @parameter0: javax.swing.JTree;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.swing.Sticky: javax.swing.JComponent _target> = r1;

        virtualinvoke r0.<com.jidesoft.swing.Sticky: void install()>();

        return;
    }

    public void <init>(javax.swing.JTable)
    {
        com.jidesoft.swing.Sticky r0;
        javax.swing.JTable r1;

        r0 := @this: com.jidesoft.swing.Sticky;

        r1 := @parameter0: javax.swing.JTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.swing.Sticky: javax.swing.JComponent _target> = r1;

        virtualinvoke r0.<com.jidesoft.swing.Sticky: void install()>();

        return;
    }

    public void install()
    {
        javax.swing.JComponent $r2;
        com.jidesoft.swing.Sticky r0;
        com.jidesoft.swing.Sticky$StickyMouseMotionListener $r1;

        r0 := @this: com.jidesoft.swing.Sticky;

        $r2 = r0.<com.jidesoft.swing.Sticky: javax.swing.JComponent _target>;

        $r1 = <com.jidesoft.swing.Sticky: com.jidesoft.swing.Sticky$StickyMouseMotionListener STICKY_MOUSE_MOTION_LISTENER>;

        virtualinvoke $r2.<javax.swing.JComponent: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r1);

        return;
    }

    public void uninstall()
    {
        javax.swing.JComponent $r2;
        com.jidesoft.swing.Sticky r0;
        com.jidesoft.swing.Sticky$StickyMouseMotionListener $r1;

        r0 := @this: com.jidesoft.swing.Sticky;

        $r2 = r0.<com.jidesoft.swing.Sticky: javax.swing.JComponent _target>;

        $r1 = <com.jidesoft.swing.Sticky: com.jidesoft.swing.Sticky$StickyMouseMotionListener STICKY_MOUSE_MOTION_LISTENER>;

        virtualinvoke $r2.<javax.swing.JComponent: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r1);

        return;
    }

    private static void updateListSelectionForEvent(java.awt.event.MouseEvent, javax.swing.JList, boolean)
    {
        javax.swing.JList r2;
        java.awt.Point $r1;
        java.awt.event.MouseEvent r0;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i8;
        javax.swing.ListModel $r3, $r4, $r5;
        boolean z0;

        r0 := @parameter0: java.awt.event.MouseEvent;

        r2 := @parameter1: javax.swing.JList;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        if r2 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r2.<javax.swing.JList: int locationToIndex(java.awt.Point)>($r1);

        i4 = $i0;

        $i8 = (int) -1;

        if $i0 != $i8 goto label5;

        $i2 = $r1.<java.awt.Point: int y>;

        if $i2 >= 0 goto label2;

        i4 = 0;

        goto label5;

     label2:
        $r4 = virtualinvoke r2.<javax.swing.JList: javax.swing.ListModel getModel()>();

        if $r4 != null goto label3;

        $i5 = 0;

        goto label4;

     label3:
        $r5 = virtualinvoke r2.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $i3 = interfaceinvoke $r5.<javax.swing.ListModel: int getSize()>();

        $i5 = $i3 - 1;

     label4:
        i4 = $i5;

     label5:
        $i6 = virtualinvoke r2.<javax.swing.JList: int getSelectedIndex()>();

        if $i6 == i4 goto label6;

        if i4 < 0 goto label6;

        $r3 = virtualinvoke r2.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $i1 = interfaceinvoke $r3.<javax.swing.ListModel: int getSize()>();

        if i4 >= $i1 goto label6;

        virtualinvoke r2.<javax.swing.JList: void setSelectedIndex(int)>(i4);

        if z0 == 0 goto label6;

        virtualinvoke r2.<javax.swing.JList: void ensureIndexIsVisible(int)>(i4);

     label6:
        return;
    }

    private static void updateTreeSelectionForEvent(java.awt.event.MouseEvent, javax.swing.JTree, boolean)
    {
        javax.swing.tree.TreePath $r3, $r4;
        java.awt.Point $r1;
        javax.swing.JTree r2;
        java.awt.event.MouseEvent r0;
        int $i0, $i1, $i2, $i4;
        boolean z0;

        r0 := @parameter0: java.awt.event.MouseEvent;

        r2 := @parameter1: javax.swing.JTree;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        if r2 != null goto label1;

        return;

     label1:
        $i1 = $r1.<java.awt.Point: int x>;

        $i0 = $r1.<java.awt.Point: int y>;

        $i2 = virtualinvoke r2.<javax.swing.JTree: int getRowForLocation(int,int)>($i1, $i0);

        $i4 = (int) -1;

        if $i2 == $i4 goto label2;

        $r3 = virtualinvoke r2.<javax.swing.JTree: javax.swing.tree.TreePath getPathForRow(int)>($i2);

        $r4 = virtualinvoke r2.<javax.swing.JTree: javax.swing.tree.TreePath getSelectionPath()>();

        if $r4 == $r3 goto label2;

        virtualinvoke r2.<javax.swing.JTree: void setSelectionRow(int)>($i2);

        if z0 == 0 goto label2;

        virtualinvoke r2.<javax.swing.JTree: void makeVisible(javax.swing.tree.TreePath)>($r3);

     label2:
        return;
    }

    private static void updateTableSelectionForEvent(java.awt.event.MouseEvent, javax.swing.JTable, boolean)
    {
        javax.swing.ListSelectionModel $r3;
        java.awt.Point $r1;
        java.awt.event.MouseEvent r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i7;
        javax.swing.JTable r2;
        boolean z0;
        javax.swing.table.TableModel $r4, $r5;

        r0 := @parameter0: java.awt.event.MouseEvent;

        r2 := @parameter1: javax.swing.JTable;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        if r2 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r2.<javax.swing.JTable: int rowAtPoint(java.awt.Point)>($r1);

        i3 = $i0;

        $i7 = (int) -1;

        if $i0 != $i7 goto label5;

        $i1 = $r1.<java.awt.Point: int y>;

        if $i1 >= 0 goto label2;

        i3 = 0;

        goto label5;

     label2:
        $r4 = virtualinvoke r2.<javax.swing.JTable: javax.swing.table.TableModel getModel()>();

        if $r4 != null goto label3;

        $i4 = 0;

        goto label4;

     label3:
        $r5 = virtualinvoke r2.<javax.swing.JTable: javax.swing.table.TableModel getModel()>();

        $i2 = interfaceinvoke $r5.<javax.swing.table.TableModel: int getRowCount()>();

        $i4 = $i2 - 1;

     label4:
        i3 = $i4;

     label5:
        $i5 = virtualinvoke r2.<javax.swing.JTable: int getSelectedRow()>();

        if $i5 == i3 goto label6;

        $r3 = virtualinvoke r2.<javax.swing.JTable: javax.swing.ListSelectionModel getSelectionModel()>();

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void setSelectionInterval(int,int)>(i3, i3);

        if z0 == 0 goto label6;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void ensureRowVisible(javax.swing.JTable,int)>(r2, i3);

     label6:
        return;
    }

    static void access$100(java.awt.event.MouseEvent, javax.swing.JList, boolean)
    {
        javax.swing.JList r1;
        java.awt.event.MouseEvent r0;
        boolean z0;

        r0 := @parameter0: java.awt.event.MouseEvent;

        r1 := @parameter1: javax.swing.JList;

        z0 := @parameter2: boolean;

        staticinvoke <com.jidesoft.swing.Sticky: void updateListSelectionForEvent(java.awt.event.MouseEvent,javax.swing.JList,boolean)>(r0, r1, z0);

        return;
    }

    static void access$200(java.awt.event.MouseEvent, javax.swing.JTree, boolean)
    {
        javax.swing.JTree r1;
        java.awt.event.MouseEvent r0;
        boolean z0;

        r0 := @parameter0: java.awt.event.MouseEvent;

        r1 := @parameter1: javax.swing.JTree;

        z0 := @parameter2: boolean;

        staticinvoke <com.jidesoft.swing.Sticky: void updateTreeSelectionForEvent(java.awt.event.MouseEvent,javax.swing.JTree,boolean)>(r0, r1, z0);

        return;
    }

    static void access$300(java.awt.event.MouseEvent, javax.swing.JTable, boolean)
    {
        javax.swing.JTable r1;
        java.awt.event.MouseEvent r0;
        boolean z0;

        r0 := @parameter0: java.awt.event.MouseEvent;

        r1 := @parameter1: javax.swing.JTable;

        z0 := @parameter2: boolean;

        staticinvoke <com.jidesoft.swing.Sticky: void updateTableSelectionForEvent(java.awt.event.MouseEvent,javax.swing.JTable,boolean)>(r0, r1, z0);

        return;
    }

    static void <clinit>()
    {
        com.jidesoft.swing.Sticky$StickyMouseMotionListener $r0;

        $r0 = new com.jidesoft.swing.Sticky$StickyMouseMotionListener;

        specialinvoke $r0.<com.jidesoft.swing.Sticky$StickyMouseMotionListener: void <init>(com.jidesoft.swing.Sticky$1)>(null);

        <com.jidesoft.swing.Sticky: com.jidesoft.swing.Sticky$StickyMouseMotionListener STICKY_MOUSE_MOTION_LISTENER> = $r0;

        return;
    }
}
