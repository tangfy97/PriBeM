public class org.apache.lucene.analysis.sinks.TokenRangeSinkFilter extends org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter
{
    private int lower;
    private int upper;
    private int count;

    public void <init>(int, int)
    {
        int i0, i1;
        org.apache.lucene.analysis.sinks.TokenRangeSinkFilter r0;

        r0 := @this: org.apache.lucene.analysis.sinks.TokenRangeSinkFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter: void <init>()>();

        r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int lower> = i0;

        r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int upper> = i1;

        return;
    }

    public boolean accept(org.apache.lucene.util.AttributeSource)
    {
        java.lang.Throwable $r1;
        org.apache.lucene.analysis.sinks.TokenRangeSinkFilter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.lucene.util.AttributeSource r2;

        r0 := @this: org.apache.lucene.analysis.sinks.TokenRangeSinkFilter;

        r2 := @parameter0: org.apache.lucene.util.AttributeSource;

     label1:
        $i1 = r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count>;

        $i0 = r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int lower>;

        if $i1 < $i0 goto label3;

        $i5 = r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count>;

        $i4 = r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int upper>;

        if $i5 >= $i4 goto label3;

     label2:
        $i6 = r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count>;

        $i7 = $i6 + 1;

        r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count> = $i7;

        return 1;

     label3:
        $i2 = r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count> = $i3;

        return 0;

     label4:
        $r1 := @caughtexception;

     label5:
        $i8 = r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count>;

        $i9 = $i8 + 1;

        r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count> = $i9;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.sinks.TokenRangeSinkFilter r0;

        r0 := @this: org.apache.lucene.analysis.sinks.TokenRangeSinkFilter;

        r0.<org.apache.lucene.analysis.sinks.TokenRangeSinkFilter: int count> = 0;

        return;
    }
}
