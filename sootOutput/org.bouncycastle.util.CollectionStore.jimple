public class org.bouncycastle.util.CollectionStore extends java.lang.Object implements org.bouncycastle.util.Store
{
    private java.util.Collection _local;

    public void <init>(java.util.Collection)
    {
        org.bouncycastle.util.CollectionStore r0;
        java.util.ArrayList $r1;
        java.util.Collection r2;

        r0 := @this: org.bouncycastle.util.CollectionStore;

        r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<org.bouncycastle.util.CollectionStore: java.util.Collection _local> = $r1;

        return;
    }

    public java.util.Collection getMatches(org.bouncycastle.util.Selector)
    {
        org.bouncycastle.util.Selector r0;
        org.bouncycastle.util.CollectionStore r2;
        java.util.Iterator $r4;
        java.util.Collection $r3, $r7;
        java.util.ArrayList $r1, $r6;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r2 := @this: org.bouncycastle.util.CollectionStore;

        r0 := @parameter0: org.bouncycastle.util.Selector;

        if r0 != null goto label1;

        $r6 = new java.util.ArrayList;

        $r7 = r2.<org.bouncycastle.util.CollectionStore: java.util.Collection _local>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        return $r6;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<org.bouncycastle.util.CollectionStore: java.util.Collection _local>;

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r0.<org.bouncycastle.util.Selector: boolean match(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        goto label2;

     label4:
        return $r1;
    }
}
