public class org.apache.tika.parser.external.ExternalParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    public static final java.lang.String INPUT_FILE_TOKEN;
    public static final java.lang.String OUTPUT_FILE_TOKEN;
    private java.util.Set supportedTypes;
    private java.util.Map metadataPatterns;
    private java.lang.String[] command;

    public void <init>()
    {
        java.util.Set $r1;
        org.apache.tika.parser.external.ExternalParser r0;
        java.lang.String[] $r2;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<org.apache.tika.parser.external.ExternalParser: java.util.Set supportedTypes> = $r1;

        r0.<org.apache.tika.parser.external.ExternalParser: java.util.Map metadataPatterns> = null;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "cat";

        r0.<org.apache.tika.parser.external.ExternalParser: java.lang.String[] command> = $r2;

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r1;
        org.apache.tika.parser.external.ExternalParser r0;
        org.apache.tika.parser.ParseContext r2;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r1 = virtualinvoke r0.<org.apache.tika.parser.external.ExternalParser: java.util.Set getSupportedTypes()>();

        return $r1;
    }

    public java.util.Set getSupportedTypes()
    {
        java.util.Set $r1;
        org.apache.tika.parser.external.ExternalParser r0;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        $r1 = r0.<org.apache.tika.parser.external.ExternalParser: java.util.Set supportedTypes>;

        return $r1;
    }

    public void setSupportedTypes(java.util.Set)
    {
        java.util.HashSet $r1;
        org.apache.tika.parser.external.ExternalParser r0;
        java.util.Set r2, $r3;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        r2 := @parameter0: java.util.Set;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>(r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        r0.<org.apache.tika.parser.external.ExternalParser: java.util.Set supportedTypes> = $r3;

        return;
    }

    public java.lang.String[] getCommand()
    {
        org.apache.tika.parser.external.ExternalParser r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        $r1 = r0.<org.apache.tika.parser.external.ExternalParser: java.lang.String[] command>;

        return $r1;
    }

    public transient void setCommand(java.lang.String[])
    {
        org.apache.tika.parser.external.ExternalParser r0;
        java.lang.String[] r1;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        r1 := @parameter0: java.lang.String[];

        r0.<org.apache.tika.parser.external.ExternalParser: java.lang.String[] command> = r1;

        return;
    }

    public java.util.Map getMetadataExtractionPatterns()
    {
        org.apache.tika.parser.external.ExternalParser r0;
        java.util.Map $r1;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        $r1 = r0.<org.apache.tika.parser.external.ExternalParser: java.util.Map metadataPatterns>;

        return $r1;
    }

    public void setMetadataExtractionPatterns(java.util.Map)
    {
        org.apache.tika.parser.external.ExternalParser r0;
        java.util.Map r1;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.tika.parser.external.ExternalParser: java.util.Map metadataPatterns> = r1;

        return;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r7;
        org.apache.tika.io.TemporaryResources $r3;
        org.apache.tika.parser.external.ExternalParser r4;
        org.apache.tika.sax.XHTMLContentHandler $r0;
        org.apache.tika.metadata.Metadata r2;
        org.apache.tika.parser.ParseContext r8;
        org.apache.tika.io.TikaInputStream $r6;
        org.xml.sax.ContentHandler r1;
        java.io.InputStream r5;

        r4 := @this: org.apache.tika.parser.external.ExternalParser;

        r5 := @parameter0: java.io.InputStream;

        r1 := @parameter1: org.xml.sax.ContentHandler;

        r2 := @parameter2: org.apache.tika.metadata.Metadata;

        r8 := @parameter3: org.apache.tika.parser.ParseContext;

        $r0 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r0.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r1, r2);

        $r3 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r3.<org.apache.tika.io.TemporaryResources: void <init>()>();

     label1:
        $r6 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream,org.apache.tika.io.TemporaryResources)>(r5, $r3);

        specialinvoke r4.<org.apache.tika.parser.external.ExternalParser: void parse(org.apache.tika.io.TikaInputStream,org.apache.tika.sax.XHTMLContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.io.TemporaryResources)>($r6, $r0, r2, $r3);

     label2:
        virtualinvoke $r3.<org.apache.tika.io.TemporaryResources: void dispose()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        virtualinvoke $r3.<org.apache.tika.io.TemporaryResources: void dispose()>();

        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void parse(org.apache.tika.io.TikaInputStream, org.apache.tika.sax.XHTMLContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.io.TemporaryResources) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Metadata r8;
        java.util.Map $r1, $r19;
        boolean z0, $z1, z2, z3, $z4, z5, z6, z7;
        org.apache.tika.io.TemporaryResources r14;
        java.lang.Process r28;
        java.lang.Runtime $r2, $r10;
        java.lang.Throwable $r21;
        org.apache.tika.parser.external.ExternalParser r0;
        java.lang.String[] $r24, $r25, $r26, $r27;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i8, $i10;
        org.apache.tika.io.TikaInputStream r9;
        java.lang.String $r11, $r12, $r13, $r15, $r17, $r18;
        java.io.OutputStream $r3;
        org.apache.tika.sax.XHTMLContentHandler r7;
        java.io.FileInputStream $r29;
        java.io.File $r16, r23;
        java.lang.InterruptedException $r20, $r22;
        java.io.InputStream $r4, $r5;

        r0 := @this: org.apache.tika.parser.external.ExternalParser;

        r9 := @parameter0: org.apache.tika.io.TikaInputStream;

        r7 := @parameter1: org.apache.tika.sax.XHTMLContentHandler;

        r8 := @parameter2: org.apache.tika.metadata.Metadata;

        r14 := @parameter3: org.apache.tika.io.TemporaryResources;

        z2 = 1;

        z3 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

        $r1 = r0.<org.apache.tika.parser.external.ExternalParser: java.util.Map metadataPatterns>;

        if $r1 == null goto label01;

        $r19 = r0.<org.apache.tika.parser.external.ExternalParser: java.util.Map metadataPatterns>;

        $z1 = interfaceinvoke $r19.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        r23 = null;

        $r24 = r0.<org.apache.tika.parser.external.ExternalParser: java.lang.String[] command>;

        $i3 = lengthof $r24;

        $r25 = newarray (java.lang.String)[$i3];

        $r26 = r0.<org.apache.tika.parser.external.ExternalParser: java.lang.String[] command>;

        $r27 = r0.<org.apache.tika.parser.external.ExternalParser: java.lang.String[] command>;

        $i4 = lengthof $r27;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r26, 0, $r25, 0, $i4);

        i5 = 0;

     label03:
        $i6 = lengthof $r25;

        if i5 >= $i6 goto label06;

        $r12 = $r25[i5];

        $i1 = virtualinvoke $r12.<java.lang.String: int indexOf(java.lang.String)>("${INPUT}");

        $i8 = (int) -1;

        if $i1 == $i8 goto label04;

        $r15 = $r25[i5];

        $r16 = virtualinvoke r9.<org.apache.tika.io.TikaInputStream: java.io.File getFile()>();

        $r17 = virtualinvoke $r16.<java.io.File: java.lang.String getPath()>();

        $r18 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("${INPUT}", $r17);

        $r25[i5] = $r18;

        z2 = 0;

     label04:
        $r13 = $r25[i5];

        $i2 = virtualinvoke $r13.<java.lang.String: int indexOf(java.lang.String)>("${OUTPUT}");

        $i10 = (int) -1;

        if $i2 == $i10 goto label05;

        r23 = virtualinvoke r14.<org.apache.tika.io.TemporaryResources: java.io.File createTemporaryFile()>();

        z3 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

     label05:
        i5 = i5 + 1;

        goto label03;

     label06:
        $i0 = lengthof $r25;

        if $i0 != 1 goto label07;

        $r10 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r11 = $r25[0];

        r28 = virtualinvoke $r10.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r11);

        goto label08;

     label07:
        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        r28 = virtualinvoke $r2.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>($r25);

     label08:
        if z2 == 0 goto label09;

        specialinvoke r0.<org.apache.tika.parser.external.ExternalParser: void sendInput(java.lang.Process,java.io.InputStream)>(r28, r9);

        goto label10;

     label09:
        $r3 = virtualinvoke r28.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label10:
        $r4 = virtualinvoke r28.<java.lang.Process: java.io.InputStream getInputStream()>();

        $r5 = virtualinvoke r28.<java.lang.Process: java.io.InputStream getErrorStream()>();

        if z0 == 0 goto label12;

        specialinvoke r0.<org.apache.tika.parser.external.ExternalParser: void extractMetadata(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r5, r8);

        if z5 == 0 goto label11;

        specialinvoke r0.<org.apache.tika.parser.external.ExternalParser: void extractOutput(java.io.InputStream,org.apache.tika.sax.XHTMLContentHandler)>($r4, r7);

        goto label14;

     label11:
        specialinvoke r0.<org.apache.tika.parser.external.ExternalParser: void extractMetadata(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r4, r8);

        goto label14;

     label12:
        specialinvoke r0.<org.apache.tika.parser.external.ExternalParser: void ignoreStream(java.io.InputStream)>($r5);

        if z6 == 0 goto label13;

        specialinvoke r0.<org.apache.tika.parser.external.ExternalParser: void extractOutput(java.io.InputStream,org.apache.tika.sax.XHTMLContentHandler)>($r4, r7);

        goto label14;

     label13:
        specialinvoke r0.<org.apache.tika.parser.external.ExternalParser: void ignoreStream(java.io.InputStream)>($r4);

     label14:
        virtualinvoke r28.<java.lang.Process: int waitFor()>();

     label15:
        goto label22;

     label16:
        $r22 := @caughtexception;

        goto label22;

     label17:
        $r21 := @caughtexception;

     label18:
        virtualinvoke r28.<java.lang.Process: int waitFor()>();

     label19:
        goto label21;

     label20:
        $r20 := @caughtexception;

     label21:
        throw $r21;

     label22:
        if z7 != 0 goto label23;

        $r29 = new java.io.FileInputStream;

        specialinvoke $r29.<java.io.FileInputStream: void <init>(java.io.File)>(r23);

        specialinvoke r0.<org.apache.tika.parser.external.ExternalParser: void extractOutput(java.io.InputStream,org.apache.tika.sax.XHTMLContentHandler)>($r29, r7);

     label23:
        return;

        catch java.lang.InterruptedException from label14 to label15 with label16;
        catch java.lang.Throwable from label08 to label14 with label17;
        catch java.lang.InterruptedException from label18 to label19 with label20;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void extractOutput(java.io.InputStream, org.apache.tika.sax.XHTMLContentHandler) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.Throwable $r4;
        org.apache.tika.parser.external.ExternalParser r5;
        org.apache.tika.sax.XHTMLContentHandler r2;
        java.io.InputStreamReader $r6;
        int i0, $i2;
        char[] r3;
        java.io.InputStream r1;

        r5 := @this: org.apache.tika.parser.external.ExternalParser;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.tika.sax.XHTMLContentHandler;

        $r6 = new java.io.InputStreamReader;

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF-8");

     label1:
        virtualinvoke r2.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

        virtualinvoke r2.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("p");

        r3 = newarray (char)[1024];

        i0 = virtualinvoke $r6.<java.io.Reader: int read(char[])>(r3);

     label2:
        $i2 = (int) -1;

        if i0 == $i2 goto label3;

        virtualinvoke r2.<org.apache.tika.sax.XHTMLContentHandler: void characters(char[],int,int)>(r3, 0, i0);

        i0 = virtualinvoke $r6.<java.io.Reader: int read(char[])>(r3);

        goto label2;

     label3:
        virtualinvoke r2.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("p");

        virtualinvoke r2.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

     label4:
        virtualinvoke $r6.<java.io.Reader: void close()>();

        goto label7;

     label5:
        $r4 := @caughtexception;

     label6:
        virtualinvoke $r6.<java.io.Reader: void close()>();

        throw $r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void sendInput(java.lang.Process, java.io.InputStream)
    {
        org.apache.tika.parser.external.ExternalParser$1 $r0;
        org.apache.tika.parser.external.ExternalParser r1;
        java.lang.Process r2;
        java.io.InputStream r3;

        r1 := @this: org.apache.tika.parser.external.ExternalParser;

        r2 := @parameter0: java.lang.Process;

        r3 := @parameter1: java.io.InputStream;

        $r0 = new org.apache.tika.parser.external.ExternalParser$1;

        specialinvoke $r0.<org.apache.tika.parser.external.ExternalParser$1: void <init>(org.apache.tika.parser.external.ExternalParser,java.lang.Process,java.io.InputStream)>(r1, r2, r3);

        virtualinvoke $r0.<org.apache.tika.parser.external.ExternalParser$1: void start()>();

        return;
    }

    private void ignoreStream(java.io.InputStream)
    {
        org.apache.tika.parser.external.ExternalParser$2 $r0;
        org.apache.tika.parser.external.ExternalParser r1;
        java.io.InputStream r2;

        r1 := @this: org.apache.tika.parser.external.ExternalParser;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new org.apache.tika.parser.external.ExternalParser$2;

        specialinvoke $r0.<org.apache.tika.parser.external.ExternalParser$2: void <init>(org.apache.tika.parser.external.ExternalParser,java.io.InputStream)>(r1, r2);

        virtualinvoke $r0.<org.apache.tika.parser.external.ExternalParser$2: void start()>();

        return;
    }

    private void extractMetadata(java.io.InputStream, org.apache.tika.metadata.Metadata)
    {
        org.apache.tika.parser.external.ExternalParser$3 $r0;
        org.apache.tika.parser.external.ExternalParser r1;
        org.apache.tika.metadata.Metadata r3;
        java.io.InputStream r2;

        r1 := @this: org.apache.tika.parser.external.ExternalParser;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.apache.tika.metadata.Metadata;

        $r0 = new org.apache.tika.parser.external.ExternalParser$3;

        specialinvoke $r0.<org.apache.tika.parser.external.ExternalParser$3: void <init>(org.apache.tika.parser.external.ExternalParser,java.io.InputStream,org.apache.tika.metadata.Metadata)>(r1, r2, r3);

        virtualinvoke $r0.<org.apache.tika.parser.external.ExternalParser$3: void start()>();

        return;
    }

    public static transient boolean check(java.lang.String, int[])
    {
        int[] r2;
        java.lang.String[] $r0;
        java.lang.String r1;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = r1;

        $z0 = staticinvoke <org.apache.tika.parser.external.ExternalParser: boolean check(java.lang.String[],int[])>($r0, r2);

        return $z0;
    }

    public static transient boolean check(java.lang.String[], int[])
    {
        java.lang.String[] r0;
        int[] r2, $r5, r8;
        int $i0, $i1, $i2, i3, $i4, i5;
        java.lang.String $r4;
        java.lang.Process r9;
        java.lang.Runtime $r1, $r3;
        java.io.IOException $r7;
        java.lang.InterruptedException $r6;

        r0 := @parameter0: java.lang.String[];

        r8 := @parameter1: int[];

        $i0 = lengthof r8;

        if $i0 != 0 goto label1;

        $r5 = newarray (int)[1];

        $r5[0] = 127;

        r8 = $r5;

     label1:
        $i1 = lengthof r0;

        if $i1 != 1 goto label2;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r4 = r0[0];

        r9 = virtualinvoke $r3.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r4);

        goto label3;

     label2:
        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        r9 = virtualinvoke $r1.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>(r0);

     label3:
        $i2 = virtualinvoke r9.<java.lang.Process: int waitFor()>();

        r2 = r8;

        $i4 = lengthof r8;

        i5 = 0;

     label4:
        if i5 >= $i4 goto label7;

        i3 = r2[i5];

        if $i2 != i3 goto label6;

     label5:
        return 0;

     label6:
        i5 = i5 + 1;

        goto label4;

     label7:
        return 1;

     label8:
        $r7 := @caughtexception;

        return 0;

     label9:
        $r6 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
        catch java.lang.InterruptedException from label1 to label5 with label9;
        catch java.lang.InterruptedException from label6 to label7 with label9;
    }

    static java.util.Map access$000(org.apache.tika.parser.external.ExternalParser)
    {
        org.apache.tika.parser.external.ExternalParser r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.tika.parser.external.ExternalParser;

        $r1 = r0.<org.apache.tika.parser.external.ExternalParser: java.util.Map metadataPatterns>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.external.ExternalParser: java.lang.String OUTPUT_FILE_TOKEN> = "${OUTPUT}";

        <org.apache.tika.parser.external.ExternalParser: java.lang.String INPUT_FILE_TOKEN> = "${INPUT}";

        <org.apache.tika.parser.external.ExternalParser: long serialVersionUID> = -1079128990650687037L;

        return;
    }
}
