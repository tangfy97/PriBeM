public class org.apache.jena.riot.lang.LangNQuads extends org.apache.jena.riot.lang.LangNTuple
{
    private com.hp.hpl.jena.graph.Node currentGraph;

    public void <init>(org.apache.jena.riot.tokens.Tokenizer, org.apache.jena.riot.system.ParserProfile, org.apache.jena.riot.system.StreamRDF)
    {
        org.apache.jena.riot.lang.LangNQuads r0;
        org.apache.jena.riot.tokens.Tokenizer r1;
        org.apache.jena.riot.system.ParserProfile r2;
        org.apache.jena.riot.system.StreamRDF r3;

        r0 := @this: org.apache.jena.riot.lang.LangNQuads;

        r1 := @parameter0: org.apache.jena.riot.tokens.Tokenizer;

        r2 := @parameter1: org.apache.jena.riot.system.ParserProfile;

        r3 := @parameter2: org.apache.jena.riot.system.StreamRDF;

        specialinvoke r0.<org.apache.jena.riot.lang.LangNTuple: void <init>(org.apache.jena.riot.tokens.Tokenizer,org.apache.jena.riot.system.ParserProfile,org.apache.jena.riot.system.StreamRDF)>(r1, r2, r3);

        r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.graph.Node currentGraph> = null;

        return;
    }

    public org.apache.jena.riot.Lang getLang()
    {
        org.apache.jena.riot.lang.LangNQuads r1;
        org.apache.jena.riot.Lang $r0;

        r1 := @this: org.apache.jena.riot.lang.LangNQuads;

        $r0 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang NQUADS>;

        return $r0;
    }

    protected final void runParser()
    {
        org.apache.jena.riot.lang.LangNQuads r0;
        org.apache.jena.riot.system.StreamRDF $r2;
        boolean $z0;
        com.hp.hpl.jena.sparql.core.Quad $r1;

        r0 := @this: org.apache.jena.riot.lang.LangNQuads;

     label1:
        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.sparql.core.Quad parseOne()>();

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.jena.riot.lang.LangNQuads: org.apache.jena.riot.system.StreamRDF dest>;

        interfaceinvoke $r2.<org.apache.jena.riot.system.StreamRDF: void quad(com.hp.hpl.jena.sparql.core.Quad)>($r1);

     label2:
        goto label1;

     label3:
        return;
    }

    protected final com.hp.hpl.jena.sparql.core.Quad parseOne()
    {
        com.hp.hpl.jena.graph.Node $r15, $r16, $r17, $r23, r29;
        org.apache.jena.riot.system.ParserProfile $r20;
        com.hp.hpl.jena.sparql.core.Quad $r21;
        java.lang.Object[] $r22, $r24, $r25, $r26, $r27;
        long $l0, $l1;
        org.apache.jena.riot.tokens.Token $r1, $r4, $r7, $r10, r28;
        org.apache.jena.riot.lang.LangNQuads r0;
        org.apache.jena.riot.tokens.TokenType $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r18, $r19;

        r0 := @this: org.apache.jena.riot.lang.LangNQuads;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: org.apache.jena.riot.tokens.Token nextToken()>();

        $r2 = virtualinvoke $r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $r3 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType EOF>;

        if $r2 != $r3 goto label1;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = $r1;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r1, "Premature end of file: %s", $r27);

     label1:
        $r4 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: org.apache.jena.riot.tokens.Token nextToken()>();

        $r5 = virtualinvoke $r4.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $r6 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType EOF>;

        if $r5 != $r6 goto label2;

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = $r4;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r4, "Premature end of file: %s", $r26);

     label2:
        $r7 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: org.apache.jena.riot.tokens.Token nextToken()>();

        $r8 = virtualinvoke $r7.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $r9 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType EOF>;

        if $r8 != $r9 goto label3;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = $r7;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r7, "Premature end of file: %s", $r25);

     label3:
        $r10 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: org.apache.jena.riot.tokens.Token nextToken()>();

        r28 = $r10;

        $r11 = virtualinvoke $r10.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $r12 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType EOF>;

        if $r11 != $r12 goto label4;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = $r10;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r10, "Premature end of file: Quad not terminated by DOT: %s", $r24);

     label4:
        $r13 = virtualinvoke $r10.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $r14 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOT>;

        if $r13 == $r14 goto label5;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void checkIRIOrBNode(org.apache.jena.riot.tokens.Token)>($r10);

        $r23 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)>($r10);

        r29 = $r23;

        r28 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: org.apache.jena.riot.tokens.Token nextToken()>();

        r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.graph.Node currentGraph> = $r23;

        goto label6;

     label5:
        r29 = <com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node defaultGraphNodeGenerated>;

        r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.graph.Node currentGraph> = null;

     label6:
        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void checkIRIOrBNode(org.apache.jena.riot.tokens.Token)>($r1);

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void checkIRI(org.apache.jena.riot.tokens.Token)>($r4);

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void checkRDFTerm(org.apache.jena.riot.tokens.Token)>($r7);

        $r15 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)>($r1);

        $r16 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)>($r4);

        $r17 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)>($r7);

        $r18 = virtualinvoke r28.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $r19 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOT>;

        if $r18 == $r19 goto label7;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r28;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>(r28, "Quad not terminated by DOT: %s", $r22);

     label7:
        $r20 = r0.<org.apache.jena.riot.lang.LangNQuads: org.apache.jena.riot.system.ParserProfile profile>;

        $l0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.Token: long getLine()>();

        $l1 = virtualinvoke $r1.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        $r21 = interfaceinvoke $r20.<org.apache.jena.riot.system.ParserProfile: com.hp.hpl.jena.sparql.core.Quad createQuad(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,long,long)>(r29, $r15, $r16, $r17, $l0, $l1);

        return $r21;
    }

    protected final com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)
    {
        org.apache.jena.riot.lang.LangNQuads r0;
        org.apache.jena.riot.system.ParserProfile $r3;
        com.hp.hpl.jena.graph.Node $r2, $r4;
        org.apache.jena.riot.tokens.Token r1;

        r0 := @this: org.apache.jena.riot.lang.LangNQuads;

        r1 := @parameter0: org.apache.jena.riot.tokens.Token;

        $r3 = r0.<org.apache.jena.riot.lang.LangNQuads: org.apache.jena.riot.system.ParserProfile profile>;

        $r2 = r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.graph.Node currentGraph>;

        $r4 = interfaceinvoke $r3.<org.apache.jena.riot.system.ParserProfile: com.hp.hpl.jena.graph.Node create(com.hp.hpl.jena.graph.Node,org.apache.jena.riot.tokens.Token)>($r2, r1);

        return $r4;
    }

    protected volatile java.lang.Object parseOne()
    {
        org.apache.jena.riot.lang.LangNQuads r0;
        com.hp.hpl.jena.sparql.core.Quad $r1;

        r0 := @this: org.apache.jena.riot.lang.LangNQuads;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNQuads: com.hp.hpl.jena.sparql.core.Quad parseOne()>();

        return $r1;
    }
}
