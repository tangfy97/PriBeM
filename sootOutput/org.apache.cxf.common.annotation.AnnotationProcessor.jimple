public class org.apache.cxf.common.'annotation'.AnnotationProcessor extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;
    private final java.lang.Object target;
    private java.util.List annotationTypes;

    public void <init>(java.lang.Object)
    {
        java.lang.Object[] $r4;
        org.apache.cxf.common.'annotation'.AnnotationProcessor r0;
        java.lang.Object r1;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r2;
        org.apache.cxf.common.i18n.Message $r3;
        java.util.logging.Logger $r5;

        r0 := @this: org.apache.cxf.common.'annotation'.AnnotationProcessor;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new org.apache.cxf.common.i18n.Message;

        $r5 = <org.apache.cxf.common.'annotation'.AnnotationProcessor: java.util.logging.Logger LOG>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r3.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("INVALID_CTOR_ARGS", $r5, $r4);

        $r6 = virtualinvoke $r3.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r0.<org.apache.cxf.common.'annotation'.AnnotationProcessor: java.lang.Object target> = r1;

        return;
    }

    public void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor, java.lang.Class)
    {
        org.apache.cxf.common.'annotation'.AnnotationVisitor r0;
        java.util.List $r2;
        org.apache.cxf.common.'annotation'.AnnotationProcessor r1;
        java.lang.Object $r3;
        java.lang.Class r4;
        java.lang.IllegalArgumentException $r5;

        r1 := @this: org.apache.cxf.common.'annotation'.AnnotationProcessor;

        r0 := @parameter0: org.apache.cxf.common.'annotation'.AnnotationVisitor;

        r4 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.cxf.common.'annotation'.AnnotationVisitor: java.util.List getTargetAnnotations()>();

        r1.<org.apache.cxf.common.'annotation'.AnnotationProcessor: java.util.List annotationTypes> = $r2;

        $r3 = r1.<org.apache.cxf.common.'annotation'.AnnotationProcessor: java.lang.Object target>;

        interfaceinvoke r0.<org.apache.cxf.common.'annotation'.AnnotationVisitor: void setTarget(java.lang.Object)>($r3);

        specialinvoke r1.<org.apache.cxf.common.'annotation'.AnnotationProcessor: void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)>(r0, r4);

        specialinvoke r1.<org.apache.cxf.common.'annotation'.AnnotationProcessor: void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)>(r0, r4);

        specialinvoke r1.<org.apache.cxf.common.'annotation'.AnnotationProcessor: void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)>(r0, r4);

        return;
    }

    public void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)
    {
        org.apache.cxf.common.'annotation'.AnnotationVisitor r1;
        org.apache.cxf.common.'annotation'.AnnotationProcessor r0;
        java.lang.Object $r2;
        java.lang.Class $r3;

        r0 := @this: org.apache.cxf.common.'annotation'.AnnotationProcessor;

        r1 := @parameter0: org.apache.cxf.common.'annotation'.AnnotationVisitor;

        $r2 = r0.<org.apache.cxf.common.'annotation'.AnnotationProcessor: java.lang.Object target>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r0.<org.apache.cxf.common.'annotation'.AnnotationProcessor: void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)>(r1, $r3);

        return;
    }

    private void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor, java.lang.Class)
    {
        java.util.Iterator $r6;
        java.lang.reflect.Method[] $r2;
        java.util.List $r5;
        org.apache.cxf.common.'annotation'.AnnotationVisitor r10;
        org.apache.cxf.common.'annotation'.AnnotationProcessor r4;
        java.lang.'annotation'.Annotation $r9;
        int $i0, i1;
        java.lang.Class r0, $r1, r8, $r11;
        java.lang.Object $r7;
        java.lang.reflect.Method r3;
        boolean $z0;

        r4 := @this: org.apache.cxf.common.'annotation'.AnnotationProcessor;

        r10 := @parameter0: org.apache.cxf.common.'annotation'.AnnotationVisitor;

        r0 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r1 == null goto label1;

        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        specialinvoke r4.<org.apache.cxf.common.'annotation'.AnnotationProcessor: void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)>(r10, $r11);

     label1:
        $r2 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>(r0);

        $i0 = lengthof $r2;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label6;

        r3 = $r2[i1];

        $r5 = r4.<org.apache.cxf.common.'annotation'.AnnotationProcessor: java.util.List annotationTypes>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Class) $r7;

        $r9 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r8);

        if $r9 == null goto label4;

        interfaceinvoke r10.<org.apache.cxf.common.'annotation'.AnnotationVisitor: void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)>(r3, $r9);

     label4:
        goto label3;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return;
    }

    private void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor, java.lang.Class)
    {
        java.util.Iterator $r6;
        java.lang.reflect.Field r3;
        java.lang.reflect.Field[] $r2;
        java.util.List $r5;
        org.apache.cxf.common.'annotation'.AnnotationVisitor r10;
        org.apache.cxf.common.'annotation'.AnnotationProcessor r4;
        java.lang.'annotation'.Annotation $r9;
        int $i0, i1;
        java.lang.Class r0, $r1, r8, $r11;
        java.lang.Object $r7;
        boolean $z0;

        r4 := @this: org.apache.cxf.common.'annotation'.AnnotationProcessor;

        r10 := @parameter0: org.apache.cxf.common.'annotation'.AnnotationVisitor;

        r0 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r1 == null goto label1;

        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        specialinvoke r4.<org.apache.cxf.common.'annotation'.AnnotationProcessor: void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)>(r10, $r11);

     label1:
        $r2 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Field[] getDeclaredFields(java.lang.Class)>(r0);

        $i0 = lengthof $r2;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label6;

        r3 = $r2[i1];

        $r5 = r4.<org.apache.cxf.common.'annotation'.AnnotationProcessor: java.util.List annotationTypes>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Class) $r7;

        $r9 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r8);

        if $r9 == null goto label4;

        interfaceinvoke r10.<org.apache.cxf.common.'annotation'.AnnotationVisitor: void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)>(r3, $r9);

     label4:
        goto label3;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return;
    }

    private void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor, java.lang.Class)
    {
        java.util.Iterator $r4;
        java.util.List $r3;
        org.apache.cxf.common.'annotation'.AnnotationVisitor r8;
        org.apache.cxf.common.'annotation'.AnnotationProcessor r2;
        java.lang.'annotation'.Annotation $r7;
        java.lang.Class r0, $r1, r6, $r9;
        java.lang.Object $r5;
        boolean $z0;

        r2 := @this: org.apache.cxf.common.'annotation'.AnnotationProcessor;

        r8 := @parameter0: org.apache.cxf.common.'annotation'.AnnotationVisitor;

        r0 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r1 == null goto label1;

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        specialinvoke r2.<org.apache.cxf.common.'annotation'.AnnotationProcessor: void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)>(r8, $r9);

     label1:
        $r3 = r2.<org.apache.cxf.common.'annotation'.AnnotationProcessor: java.util.List annotationTypes>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Class) $r5;

        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r6);

        if $r7 == null goto label3;

        interfaceinvoke r8.<org.apache.cxf.common.'annotation'.AnnotationVisitor: void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)>(r0, $r7);

     label3:
        goto label2;

     label4:
        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/common/annotation/AnnotationProcessor;");

        <org.apache.cxf.common.'annotation'.AnnotationProcessor: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
