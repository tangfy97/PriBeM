public abstract class org.apache.lucene.store.Lock$With extends java.lang.Object
{
    private org.apache.lucene.store.Lock lock;
    private long lockWaitTimeout;

    public void <init>(org.apache.lucene.store.Lock, long)
    {
        long l0;
        org.apache.lucene.store.Lock r1;
        org.apache.lucene.store.Lock$With r0;

        r0 := @this: org.apache.lucene.store.Lock$With;

        r1 := @parameter0: org.apache.lucene.store.Lock;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.store.Lock$With: org.apache.lucene.store.Lock lock> = r1;

        r0.<org.apache.lucene.store.Lock$With: long lockWaitTimeout> = l0;

        return;
    }

    protected abstract java.lang.Object doBody() throws java.io.IOException;

    public java.lang.Object run() throws java.io.IOException
    {
        java.lang.Throwable $r4;
        long $l0;
        org.apache.lucene.store.Lock $r1, $r3, $r5;
        java.lang.Object $r2;
        org.apache.lucene.store.Lock$With r0;
        boolean $z0, z1;

        r0 := @this: org.apache.lucene.store.Lock$With;

        z1 = 0;

     label1:
        $r1 = r0.<org.apache.lucene.store.Lock$With: org.apache.lucene.store.Lock lock>;

        $l0 = r0.<org.apache.lucene.store.Lock$With: long lockWaitTimeout>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.store.Lock: boolean obtain(long)>($l0);

        z1 = $z0;

        $r2 = virtualinvoke r0.<org.apache.lucene.store.Lock$With: java.lang.Object doBody()>();

     label2:
        if $z0 == 0 goto label3;

        $r3 = r0.<org.apache.lucene.store.Lock$With: org.apache.lucene.store.Lock lock>;

        virtualinvoke $r3.<org.apache.lucene.store.Lock: void release()>();

     label3:
        return $r2;

     label4:
        $r4 := @caughtexception;

     label5:
        if z1 == 0 goto label6;

        $r5 = r0.<org.apache.lucene.store.Lock$With: org.apache.lucene.store.Lock lock>;

        virtualinvoke $r5.<org.apache.lucene.store.Lock: void release()>();

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
