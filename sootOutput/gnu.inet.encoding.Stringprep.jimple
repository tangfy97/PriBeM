public class gnu.inet.encoding.Stringprep extends java.lang.Object
{
    private static final char[] RFC3920_NODEPREP_PROHIBIT;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[8];

        $r0[0] = 34;

        $r0[1] = 38;

        $r0[2] = 39;

        $r0[3] = 47;

        $r0[4] = 58;

        $r0[5] = 60;

        $r0[6] = 62;

        $r0[7] = 64;

        <gnu.inet.encoding.Stringprep: char[] RFC3920_NODEPREP_PROHIBIT> = $r0;

        return;
    }

    public void <init>()
    {
        gnu.inet.encoding.Stringprep r0;

        r0 := @this: gnu.inet.encoding.Stringprep;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String nameprep(java.lang.String) throws gnu.inet.encoding.StringprepException, java.lang.NullPointerException
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <gnu.inet.encoding.Stringprep: java.lang.String nameprep(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    public static java.lang.String nameprep(java.lang.String, boolean) throws gnu.inet.encoding.StringprepException, java.lang.NullPointerException
    {
        char[][] $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r22, $r25;
        java.lang.NullPointerException $r28;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        gnu.inet.encoding.StringprepException $r20, $r23, $r26, $r29;
        java.lang.String[] $r3;
        java.lang.StringBuffer $r1, $r5;
        int $i1, $i2;
        java.lang.String r0, $r6, $r7, $r18, $r21, $r24, $r27, $r30;
        char $c0, $c3;
        char[] $r2, $r4, $r8;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r28 = new java.lang.NullPointerException;

        specialinvoke $r28.<java.lang.NullPointerException: void <init>()>();

        throw $r28;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        if z0 != 0 goto label2;

        $r25 = <gnu.inet.encoding.RFC3454: char[][] A1>;

        $z13 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r1, $r25);

        if $z13 == 0 goto label2;

        $r26 = new gnu.inet.encoding.StringprepException;

        $r27 = <gnu.inet.encoding.StringprepException: java.lang.String CONTAINS_UNASSIGNED>;

        specialinvoke $r26.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label2:
        $r2 = <gnu.inet.encoding.RFC3454: char[] B1>;

        staticinvoke <gnu.inet.encoding.Stringprep: void filter(java.lang.StringBuffer,char[])>($r1, $r2);

        $r4 = <gnu.inet.encoding.RFC3454: char[] B2search>;

        $r3 = <gnu.inet.encoding.RFC3454: java.lang.String[] B2replace>;

        staticinvoke <gnu.inet.encoding.Stringprep: void map(java.lang.StringBuffer,char[],java.lang.String[])>($r1, $r4, $r3);

        $r5 = new java.lang.StringBuffer;

        $r6 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <gnu.inet.encoding.NFKC: java.lang.String normalizeNFKC(java.lang.String)>($r6);

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        $r8 = <gnu.inet.encoding.RFC3454: char[] C12>;

        $z1 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[])>($r5, $r8);

        if $z1 != 0 goto label3;

        $r9 = <gnu.inet.encoding.RFC3454: char[][] C22>;

        $z2 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r9);

        if $z2 != 0 goto label3;

        $r10 = <gnu.inet.encoding.RFC3454: char[][] C3>;

        $z3 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r10);

        if $z3 != 0 goto label3;

        $r11 = <gnu.inet.encoding.RFC3454: char[][] C4>;

        $z4 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r11);

        if $z4 != 0 goto label3;

        $r12 = <gnu.inet.encoding.RFC3454: char[][] C5>;

        $z5 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r12);

        if $z5 != 0 goto label3;

        $r13 = <gnu.inet.encoding.RFC3454: char[][] C6>;

        $z6 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r13);

        if $z6 != 0 goto label3;

        $r14 = <gnu.inet.encoding.RFC3454: char[][] C7>;

        $z7 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r14);

        if $z7 != 0 goto label3;

        $r15 = <gnu.inet.encoding.RFC3454: char[][] C8>;

        $z8 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r15);

        if $z8 == 0 goto label4;

     label3:
        $r29 = new gnu.inet.encoding.StringprepException;

        $r30 = <gnu.inet.encoding.StringprepException: java.lang.String CONTAINS_PROHIBITED>;

        specialinvoke $r29.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label4:
        $r16 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z9 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r16);

        $r17 = <gnu.inet.encoding.RFC3454: char[][] D2>;

        $z10 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r17);

        if $z9 == 0 goto label5;

        if $z10 == 0 goto label5;

        $r23 = new gnu.inet.encoding.StringprepException;

        $r24 = <gnu.inet.encoding.StringprepException: java.lang.String BIDI_BOTHRAL>;

        specialinvoke $r23.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label5:
        if $z9 == 0 goto label7;

        $c0 = virtualinvoke $r5.<java.lang.StringBuffer: char charAt(int)>(0);

        $r19 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z11 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(char,char[][])>($c0, $r19);

        if $z11 == 0 goto label6;

        $i1 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke $r5.<java.lang.StringBuffer: char charAt(int)>($i2);

        $r22 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z12 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(char,char[][])>($c3, $r22);

        if $z12 != 0 goto label7;

     label6:
        $r20 = new gnu.inet.encoding.StringprepException;

        $r21 = <gnu.inet.encoding.StringprepException: java.lang.String BIDI_LTRAL>;

        specialinvoke $r20.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label7:
        $r18 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;
    }

    public static java.lang.String nodeprep(java.lang.String) throws gnu.inet.encoding.StringprepException, java.lang.NullPointerException
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <gnu.inet.encoding.Stringprep: java.lang.String nodeprep(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    public static java.lang.String nodeprep(java.lang.String, boolean) throws gnu.inet.encoding.StringprepException, java.lang.NullPointerException
    {
        char[][] $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r22, $r25, $r28;
        java.lang.NullPointerException $r31;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        gnu.inet.encoding.StringprepException $r23, $r26, $r29, $r32;
        java.lang.String[] $r3;
        java.lang.StringBuffer $r1, $r5;
        int $i1, $i2;
        java.lang.String r0, $r6, $r7, $r21, $r24, $r27, $r30, $r33;
        char $c0, $c3;
        char[] $r2, $r4, $r8, $r9, $r18;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r31 = new java.lang.NullPointerException;

        specialinvoke $r31.<java.lang.NullPointerException: void <init>()>();

        throw $r31;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        if z0 != 0 goto label2;

        $r28 = <gnu.inet.encoding.RFC3454: char[][] A1>;

        $z16 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r1, $r28);

        if $z16 == 0 goto label2;

        $r29 = new gnu.inet.encoding.StringprepException;

        $r30 = <gnu.inet.encoding.StringprepException: java.lang.String CONTAINS_UNASSIGNED>;

        specialinvoke $r29.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label2:
        $r2 = <gnu.inet.encoding.RFC3454: char[] B1>;

        staticinvoke <gnu.inet.encoding.Stringprep: void filter(java.lang.StringBuffer,char[])>($r1, $r2);

        $r4 = <gnu.inet.encoding.RFC3454: char[] B2search>;

        $r3 = <gnu.inet.encoding.RFC3454: java.lang.String[] B2replace>;

        staticinvoke <gnu.inet.encoding.Stringprep: void map(java.lang.StringBuffer,char[],java.lang.String[])>($r1, $r4, $r3);

        $r5 = new java.lang.StringBuffer;

        $r6 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <gnu.inet.encoding.NFKC: java.lang.String normalizeNFKC(java.lang.String)>($r6);

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        $r8 = <gnu.inet.encoding.RFC3454: char[] C11>;

        $z1 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[])>($r5, $r8);

        if $z1 != 0 goto label3;

        $r9 = <gnu.inet.encoding.RFC3454: char[] C12>;

        $z2 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[])>($r5, $r9);

        if $z2 != 0 goto label3;

        $r10 = <gnu.inet.encoding.RFC3454: char[][] C21>;

        $z3 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r10);

        if $z3 != 0 goto label3;

        $r11 = <gnu.inet.encoding.RFC3454: char[][] C22>;

        $z4 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r11);

        if $z4 != 0 goto label3;

        $r12 = <gnu.inet.encoding.RFC3454: char[][] C3>;

        $z5 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r12);

        if $z5 != 0 goto label3;

        $r13 = <gnu.inet.encoding.RFC3454: char[][] C4>;

        $z6 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r13);

        if $z6 != 0 goto label3;

        $r14 = <gnu.inet.encoding.RFC3454: char[][] C5>;

        $z7 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r14);

        if $z7 != 0 goto label3;

        $r15 = <gnu.inet.encoding.RFC3454: char[][] C6>;

        $z8 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r15);

        if $z8 != 0 goto label3;

        $r16 = <gnu.inet.encoding.RFC3454: char[][] C7>;

        $z9 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r16);

        if $z9 != 0 goto label3;

        $r17 = <gnu.inet.encoding.RFC3454: char[][] C8>;

        $z10 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r17);

        if $z10 != 0 goto label3;

        $r18 = <gnu.inet.encoding.Stringprep: char[] RFC3920_NODEPREP_PROHIBIT>;

        $z11 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[])>($r5, $r18);

        if $z11 == 0 goto label4;

     label3:
        $r32 = new gnu.inet.encoding.StringprepException;

        $r33 = <gnu.inet.encoding.StringprepException: java.lang.String CONTAINS_PROHIBITED>;

        specialinvoke $r32.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label4:
        $r19 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z12 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r19);

        $r20 = <gnu.inet.encoding.RFC3454: char[][] D2>;

        $z13 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r5, $r20);

        if $z12 == 0 goto label5;

        if $z13 == 0 goto label5;

        $r26 = new gnu.inet.encoding.StringprepException;

        $r27 = <gnu.inet.encoding.StringprepException: java.lang.String BIDI_BOTHRAL>;

        specialinvoke $r26.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label5:
        if $z12 == 0 goto label7;

        $c0 = virtualinvoke $r5.<java.lang.StringBuffer: char charAt(int)>(0);

        $r22 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z14 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(char,char[][])>($c0, $r22);

        if $z14 == 0 goto label6;

        $i1 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke $r5.<java.lang.StringBuffer: char charAt(int)>($i2);

        $r25 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z15 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(char,char[][])>($c3, $r25);

        if $z15 != 0 goto label7;

     label6:
        $r23 = new gnu.inet.encoding.StringprepException;

        $r24 = <gnu.inet.encoding.StringprepException: java.lang.String BIDI_LTRAL>;

        specialinvoke $r23.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label7:
        $r21 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r21;
    }

    public static java.lang.String resourceprep(java.lang.String) throws gnu.inet.encoding.StringprepException, java.lang.NullPointerException
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <gnu.inet.encoding.Stringprep: java.lang.String resourceprep(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    public static java.lang.String resourceprep(java.lang.String, boolean) throws gnu.inet.encoding.StringprepException, java.lang.NullPointerException
    {
        char[][] $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r21, $r24;
        java.lang.NullPointerException $r27;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        gnu.inet.encoding.StringprepException $r19, $r22, $r25, $r28;
        java.lang.StringBuffer $r1, $r3;
        int $i1, $i2;
        java.lang.String r0, $r4, $r5, $r17, $r20, $r23, $r26, $r29;
        char $c0, $c3;
        char[] $r2, $r6;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r27 = new java.lang.NullPointerException;

        specialinvoke $r27.<java.lang.NullPointerException: void <init>()>();

        throw $r27;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        if z0 != 0 goto label2;

        $r24 = <gnu.inet.encoding.RFC3454: char[][] A1>;

        $z14 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r1, $r24);

        if $z14 == 0 goto label2;

        $r25 = new gnu.inet.encoding.StringprepException;

        $r26 = <gnu.inet.encoding.StringprepException: java.lang.String CONTAINS_UNASSIGNED>;

        specialinvoke $r25.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label2:
        $r2 = <gnu.inet.encoding.RFC3454: char[] B1>;

        staticinvoke <gnu.inet.encoding.Stringprep: void filter(java.lang.StringBuffer,char[])>($r1, $r2);

        $r3 = new java.lang.StringBuffer;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = staticinvoke <gnu.inet.encoding.NFKC: java.lang.String normalizeNFKC(java.lang.String)>($r4);

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = <gnu.inet.encoding.RFC3454: char[] C12>;

        $z1 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[])>($r3, $r6);

        if $z1 != 0 goto label3;

        $r7 = <gnu.inet.encoding.RFC3454: char[][] C21>;

        $z2 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r7);

        if $z2 != 0 goto label3;

        $r8 = <gnu.inet.encoding.RFC3454: char[][] C22>;

        $z3 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r8);

        if $z3 != 0 goto label3;

        $r9 = <gnu.inet.encoding.RFC3454: char[][] C3>;

        $z4 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r9);

        if $z4 != 0 goto label3;

        $r10 = <gnu.inet.encoding.RFC3454: char[][] C4>;

        $z5 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r10);

        if $z5 != 0 goto label3;

        $r11 = <gnu.inet.encoding.RFC3454: char[][] C5>;

        $z6 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r11);

        if $z6 != 0 goto label3;

        $r12 = <gnu.inet.encoding.RFC3454: char[][] C6>;

        $z7 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r12);

        if $z7 != 0 goto label3;

        $r13 = <gnu.inet.encoding.RFC3454: char[][] C7>;

        $z8 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r13);

        if $z8 != 0 goto label3;

        $r14 = <gnu.inet.encoding.RFC3454: char[][] C8>;

        $z9 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r14);

        if $z9 == 0 goto label4;

     label3:
        $r28 = new gnu.inet.encoding.StringprepException;

        $r29 = <gnu.inet.encoding.StringprepException: java.lang.String CONTAINS_PROHIBITED>;

        specialinvoke $r28.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label4:
        $r15 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z10 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r15);

        $r16 = <gnu.inet.encoding.RFC3454: char[][] D2>;

        $z11 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(java.lang.StringBuffer,char[][])>($r3, $r16);

        if $z10 == 0 goto label5;

        if $z11 == 0 goto label5;

        $r22 = new gnu.inet.encoding.StringprepException;

        $r23 = <gnu.inet.encoding.StringprepException: java.lang.String BIDI_BOTHRAL>;

        specialinvoke $r22.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label5:
        if $z10 == 0 goto label7;

        $c0 = virtualinvoke $r3.<java.lang.StringBuffer: char charAt(int)>(0);

        $r18 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z12 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(char,char[][])>($c0, $r18);

        if $z12 == 0 goto label6;

        $i1 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke $r3.<java.lang.StringBuffer: char charAt(int)>($i2);

        $r21 = <gnu.inet.encoding.RFC3454: char[][] D1>;

        $z13 = staticinvoke <gnu.inet.encoding.Stringprep: boolean contains(char,char[][])>($c3, $r21);

        if $z13 != 0 goto label7;

     label6:
        $r19 = new gnu.inet.encoding.StringprepException;

        $r20 = <gnu.inet.encoding.StringprepException: java.lang.String BIDI_LTRAL>;

        specialinvoke $r19.<gnu.inet.encoding.StringprepException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label7:
        $r17 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }

    static boolean contains(java.lang.StringBuffer, char[])
    {
        char c1, $c3;
        java.lang.StringBuffer r1;
        int $i0, $i2, i4, i5, $i6, $i7;
        char[] r0;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: char[];

        i4 = 0;

        goto label5;

     label1:
        c1 = r0[i4];

        i5 = 0;

        goto label4;

     label2:
        $c3 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i5);

        $i6 = (int) c1;

        $i7 = (int) $c3;

        if $i6 != $i7 goto label3;

        return 1;

     label3:
        i5 = i5 + 1;

     label4:
        $i2 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i5 < $i2 goto label2;

        i4 = i4 + 1;

     label5:
        $i0 = lengthof r0;

        if i4 < $i0 goto label1;

        return 0;
    }

    static boolean contains(java.lang.StringBuffer, char[][])
    {
        char[][] r0;
        java.lang.StringBuffer r2;
        int $i0, $i1, $i4, i6, i8, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        char $c2, $c3, $c5, c7, c9, c10;
        char[] r1;

        r2 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: char[][];

        i6 = 0;

        goto label10;

     label01:
        r1 = r0[i6];

        $i0 = lengthof r1;

        if 1 != $i0 goto label05;

        c7 = r1[0];

        i8 = 0;

        goto label04;

     label02:
        $c5 = virtualinvoke r2.<java.lang.StringBuffer: char charAt(int)>(i8);

        $i14 = (int) c7;

        $i15 = (int) $c5;

        if $i14 != $i15 goto label03;

        return 1;

     label03:
        i8 = i8 + 1;

     label04:
        $i4 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if i8 < $i4 goto label02;

        goto label09;

     label05:
        $i1 = lengthof r1;

        if 2 != $i1 goto label09;

        c9 = r1[0];

        c10 = r1[1];

        i11 = 0;

        goto label08;

     label06:
        $c2 = virtualinvoke r2.<java.lang.StringBuffer: char charAt(int)>(i11);

        $i16 = (int) c9;

        $i17 = (int) $c2;

        if $i16 > $i17 goto label07;

        $c3 = virtualinvoke r2.<java.lang.StringBuffer: char charAt(int)>(i11);

        $i18 = (int) c10;

        $i19 = (int) $c3;

        if $i18 < $i19 goto label07;

        return 1;

     label07:
        i11 = i11 + 1;

     label08:
        $i12 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if i11 < $i12 goto label06;

     label09:
        i6 = i6 + 1;

     label10:
        $i13 = lengthof r0;

        if i6 < $i13 goto label01;

        return 0;
    }

    static boolean contains(char, char[][])
    {
        char[][] r0;
        int $i0, $i1, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        char c2, c3, c4, $c5;
        char[] r1;

        c4 := @parameter0: char;

        r0 := @parameter1: char[][];

        i6 = 0;

        goto label4;

     label1:
        r1 = r0[i6];

        $i0 = lengthof r1;

        if 1 != $i0 goto label2;

        $c5 = r1[0];

        $i8 = (int) c4;

        $i9 = (int) $c5;

        if $i8 != $i9 goto label3;

        return 1;

     label2:
        $i1 = lengthof r1;

        if 2 != $i1 goto label3;

        c2 = r1[0];

        c3 = r1[1];

        $i10 = (int) c2;

        $i11 = (int) c4;

        if $i10 > $i11 goto label3;

        $i12 = (int) c3;

        $i13 = (int) c4;

        if $i12 < $i13 goto label3;

        return 1;

     label3:
        i6 = i6 + 1;

     label4:
        $i7 = lengthof r0;

        if i6 < $i7 goto label1;

        return 0;
    }

    static void filter(java.lang.StringBuffer, char[])
    {
        char c1, $c2;
        java.lang.StringBuffer r1;
        int $i0, i3, i4, $i5, $i6, $i7;
        char[] r0;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: char[];

        i3 = 0;

        goto label5;

     label1:
        c1 = r0[i3];

        i4 = 0;

        goto label4;

     label2:
        $c2 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i4);

        $i6 = (int) c1;

        $i7 = (int) $c2;

        if $i6 != $i7 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i4);

        goto label4;

     label3:
        i4 = i4 + 1;

     label4:
        $i5 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i4 < $i5 goto label2;

        i3 = i3 + 1;

     label5:
        $i0 = lengthof r0;

        if i3 < $i0 goto label1;

        return;
    }

    static void filter(java.lang.StringBuffer, char[][])
    {
        char[][] r0;
        java.lang.StringBuffer r2;
        int $i0, $i1, i5, i7, $i8, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        char $c2, $c3, $c4, c6, c9, c10;
        char[] r1;

        r2 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: char[][];

        i5 = 0;

        goto label10;

     label01:
        r1 = r0[i5];

        $i0 = lengthof r1;

        if 1 != $i0 goto label05;

        c6 = r1[0];

        i7 = 0;

        goto label04;

     label02:
        $c4 = virtualinvoke r2.<java.lang.StringBuffer: char charAt(int)>(i7);

        $i14 = (int) c6;

        $i15 = (int) $c4;

        if $i14 != $i15 goto label03;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i7);

        goto label04;

     label03:
        i7 = i7 + 1;

     label04:
        $i8 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if i7 < $i8 goto label02;

        goto label09;

     label05:
        $i1 = lengthof r1;

        if 2 != $i1 goto label09;

        c9 = r1[0];

        c10 = r1[1];

        i11 = 0;

        goto label08;

     label06:
        $c2 = virtualinvoke r2.<java.lang.StringBuffer: char charAt(int)>(i11);

        $i16 = (int) c9;

        $i17 = (int) $c2;

        if $i16 > $i17 goto label07;

        $c3 = virtualinvoke r2.<java.lang.StringBuffer: char charAt(int)>(i11);

        $i18 = (int) c10;

        $i19 = (int) $c3;

        if $i18 < $i19 goto label07;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i11);

        goto label08;

     label07:
        i11 = i11 + 1;

     label08:
        $i12 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if i11 < $i12 goto label06;

     label09:
        i5 = i5 + 1;

     label10:
        $i13 = lengthof r0;

        if i5 < $i13 goto label01;

        return;
    }

    static void map(java.lang.StringBuffer, char[], java.lang.String[])
    {
        java.lang.String[] r2;
        java.lang.StringBuffer r1;
        int $i0, $i3, $i4, i5, i6, $i7, $i8, $i9;
        java.lang.String $r3, $r4, $r5;
        char c1, $c2;
        char[] r0;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: char[];

        r2 := @parameter2: java.lang.String[];

        i5 = 0;

        goto label5;

     label1:
        c1 = r0[i5];

        i6 = 0;

        goto label4;

     label2:
        $c2 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i6);

        $i8 = (int) c1;

        $i9 = (int) $c2;

        if $i8 != $i9 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i6);

        $r3 = r2[i5];

        if $r3 == null goto label4;

        $r4 = r2[i5];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(i6, $r4);

        $r5 = r2[i5];

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        i6 = i6 + $i4;

        goto label4;

     label3:
        i6 = i6 + 1;

     label4:
        $i7 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i6 < $i7 goto label2;

        i5 = i5 + 1;

     label5:
        $i0 = lengthof r0;

        if i5 < $i0 goto label1;

        return;
    }
}
