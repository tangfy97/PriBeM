public class org.bouncycastle.crypto.engines.DESedeWrapEngine extends java.lang.Object implements org.bouncycastle.crypto.Wrapper
{
    private org.bouncycastle.crypto.modes.CBCBlockCipher engine;
    private org.bouncycastle.crypto.params.KeyParameter param;
    private org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV;
    private byte[] iv;
    private boolean forWrapping;
    private static final byte[] IV2;
    org.bouncycastle.crypto.Digest sha1;
    byte[] digest;

    public void <init>()
    {
        byte[] $r2;
        org.bouncycastle.crypto.engines.DESedeWrapEngine r0;
        org.bouncycastle.crypto.digests.SHA1Digest $r1;

        r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r1.<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.Digest sha1> = $r1;

        $r2 = newarray (byte)[20];

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] digest> = $r2;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r6, $r11, $r13, $r15, $r16, $r18;
        org.bouncycastle.crypto.params.ParametersWithIV $r4, $r5, $r7, $r17;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r1;
        org.bouncycastle.crypto.engines.DESedeEngine $r2;
        java.security.SecureRandom $r3, r22;
        org.bouncycastle.crypto.params.ParametersWithRandom r20;
        int $i0;
        org.bouncycastle.crypto.params.KeyParameter $r9, $r14, $r19;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.bouncycastle.crypto.CipherParameters $r8, r21;
        org.bouncycastle.crypto.engines.DESedeWrapEngine r0;
        java.lang.IllegalArgumentException $r10, $r12;

        r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        z0 := @parameter0: boolean;

        r21 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping> = z0;

        $r1 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r2 = new org.bouncycastle.crypto.engines.DESedeEngine;

        specialinvoke $r2.<org.bouncycastle.crypto.engines.DESedeEngine: void <init>()>();

        specialinvoke $r1.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r2);

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine> = $r1;

        $z1 = r21 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r20 = (org.bouncycastle.crypto.params.ParametersWithRandom) r21;

        r21 = virtualinvoke r20.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r22 = virtualinvoke r20.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        goto label2;

     label1:
        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        r22 = $r3;

     label2:
        $z2 = r21 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z2 == 0 goto label3;

        $r14 = (org.bouncycastle.crypto.params.KeyParameter) r21;

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param> = $r14;

        $z5 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping>;

        if $z5 == 0 goto label6;

        $r15 = newarray (byte)[8];

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv> = $r15;

        $r16 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        virtualinvoke r22.<java.security.SecureRandom: void nextBytes(byte[])>($r16);

        $r17 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r19 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        $r18 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        specialinvoke $r17.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r19, $r18);

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r17;

        goto label6;

     label3:
        $z3 = r21 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z3 == 0 goto label6;

        $r4 = (org.bouncycastle.crypto.params.ParametersWithIV) r21;

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r4;

        $r5 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv> = $r6;

        $r7 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r9 = (org.bouncycastle.crypto.params.KeyParameter) $r8;

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param> = $r9;

        $z4 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping>;

        if $z4 == 0 goto label5;

        $r11 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        if $r11 == null goto label4;

        $r13 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $i0 = lengthof $r13;

        if $i0 == 8 goto label6;

     label4:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV is not 8 octets");

        throw $r12;

     label5:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You should not supply an IV for unwrapping");

        throw $r10;

     label6:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.DESedeWrapEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        return "DESede";
    }

    public byte[] wrap(byte[], int, int)
    {
        byte[] r1, r2, $r3, r4, r8, $r9, $r10, $r11, $r12, $r13, $r15, r22;
        java.lang.IllegalStateException $r20, $r21;
        org.bouncycastle.crypto.params.ParametersWithIV $r6, $r14;
        boolean $z0;
        org.bouncycastle.crypto.engines.DESedeWrapEngine r0;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r5, $r7, $r17, $r18, $r19;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21;
        org.bouncycastle.crypto.params.KeyParameter $r16;

        r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        r2 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping>;

        if $z0 != 0 goto label1;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not initialized for wrapping");

        throw $r21;

     label1:
        r1 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i1, r1, 0, i0);

        $r3 = specialinvoke r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] calculateCMSKeyChecksum(byte[])>(r1);

        $i3 = lengthof r1;

        $i2 = lengthof $r3;

        $i4 = $i3 + $i2;

        r4 = newarray (byte)[$i4];

        $i5 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r4, 0, $i5);

        $i7 = lengthof r1;

        $i6 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r4, $i7, $i6);

        $r5 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i8 = virtualinvoke $r5.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i9 = lengthof r4;

        $i10 = $i9 % $i8;

        if $i10 == 0 goto label2;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not multiple of block length");

        throw $r20;

     label2:
        $r7 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r6 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r6);

        $i11 = lengthof r4;

        r8 = newarray (byte)[$i11];

        i20 = 0;

     label3:
        $i12 = lengthof r4;

        if i20 == $i12 goto label4;

        $r19 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r19.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r4, i20, r8, i20);

        i20 = i20 + $i8;

        goto label3;

     label4:
        $r9 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $i14 = lengthof $r9;

        $i13 = lengthof r8;

        $i15 = $i14 + $i13;

        r22 = newarray (byte)[$i15];

        $r11 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $r10 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $i16 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r22, 0, $i16);

        $r12 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $i18 = lengthof $r12;

        $i17 = lengthof r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r22, $i18, $i17);

        $r13 = staticinvoke <org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] reverse(byte[])>(r22);

        $r14 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r16 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        $r15 = <org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] IV2>;

        specialinvoke $r14.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r16, $r15);

        $r17 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r17.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r14);

        i21 = 0;

     label5:
        $i19 = lengthof $r13;

        if i21 == $i19 goto label6;

        $r18 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r18.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>($r13, i21, $r13, i21);

        i21 = i21 + $i8;

        goto label5;

     label6:
        return $r13;
    }

    public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r4, r7, $r8, $r9, r10, $r11, $r13, r17, r18, r29;
        java.lang.IllegalStateException $r28;
        org.bouncycastle.crypto.params.ParametersWithIV $r3, $r12, $r15;
        boolean $z0, $z1;
        org.bouncycastle.crypto.engines.DESedeWrapEngine r0;
        java.lang.StringBuilder $r23, $r24, $r25;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r2, $r6, $r16, $r20, $r21;
        org.bouncycastle.crypto.InvalidCipherTextException $r19, $r22, $r27;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17, i18;
        java.lang.String $r26;
        org.bouncycastle.crypto.params.KeyParameter $r5, $r14;

        r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        r1 := @parameter0: byte[];

        i15 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label1;

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not set for unwrapping");

        throw $r28;

     label1:
        if r1 != null goto label2;

        $r27 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r27.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Null pointer as ciphertext");

        throw $r27;

     label2:
        $r2 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i0 = virtualinvoke $r2.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i2 = i1 % $i0;

        if $i2 == 0 goto label3;

        $r22 = new org.bouncycastle.crypto.InvalidCipherTextException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ciphertext not multiple of ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label3:
        $r3 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r5 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        $r4 = <org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] IV2>;

        specialinvoke $r3.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r5, $r4);

        $r6 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r3);

        r7 = newarray (byte)[i1];

        i17 = 0;

     label4:
        if i17 == i1 goto label5;

        $r21 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i16 = i15 + i17;

        virtualinvoke $r21.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r1, $i16, r7, i17);

        i17 = i17 + $i0;

        goto label4;

     label5:
        $r8 = staticinvoke <org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] reverse(byte[])>(r7);

        $r9 = newarray (byte)[8];

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv> = $r9;

        $i3 = lengthof $r8;

        $i4 = $i3 - 8;

        r10 = newarray (byte)[$i4];

        $r11 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r11, 0, 8);

        $i5 = lengthof $r8;

        $i6 = $i5 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 8, r10, 0, $i6);

        $r12 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r14 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        $r13 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        specialinvoke $r12.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r14, $r13);

        r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r12;

        $r16 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r15 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        virtualinvoke $r16.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r15);

        $i7 = lengthof r10;

        r17 = newarray (byte)[$i7];

        i18 = 0;

     label6:
        $i8 = lengthof r17;

        if i18 == $i8 goto label7;

        $r20 = r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r20.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r10, i18, r17, i18);

        i18 = i18 + $i0;

        goto label6;

     label7:
        $i9 = lengthof r17;

        $i10 = $i9 - 8;

        r29 = newarray (byte)[$i10];

        r18 = newarray (byte)[8];

        $i11 = lengthof r17;

        $i12 = $i11 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r17, 0, r29, 0, $i12);

        $i13 = lengthof r17;

        $i14 = $i13 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r17, $i14, r18, 0, 8);

        $z1 = specialinvoke r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean checkCMSKeyChecksum(byte[],byte[])>(r29, r18);

        if $z1 != 0 goto label8;

        $r19 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r19.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Checksum inside ciphertext is corrupted");

        throw $r19;

     label8:
        return r29;
    }

    private byte[] calculateCMSKeyChecksum(byte[])
    {
        byte[] r0, r2, $r4, $r6;
        org.bouncycastle.crypto.engines.DESedeWrapEngine r1;
        org.bouncycastle.crypto.Digest $r3, $r5;
        int $i0;

        r1 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        r2 := @parameter0: byte[];

        r0 = newarray (byte)[8];

        $r3 = r1.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.Digest sha1>;

        $i0 = lengthof r2;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r2, 0, $i0);

        $r5 = r1.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.Digest sha1>;

        $r4 = r1.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] digest>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r4, 0);

        $r6 = r1.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] digest>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r0, 0, 8);

        return r0;
    }

    private boolean checkCMSKeyChecksum(byte[], byte[])
    {
        byte[] r1, $r2, r3;
        org.bouncycastle.crypto.engines.DESedeWrapEngine r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        r1 := @parameter0: byte[];

        r3 := @parameter1: byte[];

        $r2 = specialinvoke r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] calculateCMSKeyChecksum(byte[])>(r1);

        $z0 = staticinvoke <org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r2, r3);

        return $z0;
    }

    private static byte[] reverse(byte[])
    {
        byte[] r0, r1;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, i6;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        r1 = newarray (byte)[$i0];

        i6 = 0;

     label1:
        $i1 = lengthof r0;

        if i6 >= $i1 goto label2;

        $i3 = lengthof r0;

        $i2 = i6 + 1;

        $i4 = $i3 - $i2;

        $b5 = r0[$i4];

        r1[i6] = $b5;

        i6 = i6 + 1;

        goto label1;

     label2:
        return r1;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[8];

        $r0[0] = 74;

        $r0[1] = -35;

        $r0[2] = -94;

        $r0[3] = 44;

        $r0[4] = 121;

        $r0[5] = -24;

        $r0[6] = 33;

        $r0[7] = 5;

        <org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] IV2> = $r0;

        return;
    }
}
