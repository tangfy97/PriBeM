public abstract class org.springframework.util.PatternMatchUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.util.PatternMatchUtils r0;

        r0 := @this: org.springframework.util.PatternMatchUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean simpleMatch(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i10, $i12, $i14;
        java.lang.String r0, r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return 0;

     label02:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(42);

        $i10 = (int) -1;

        if $i0 != $i10 goto label03;

        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z4;

     label03:
        if $i0 != 0 goto label09;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 1 goto label04;

        return 1;

     label04:
        $i3 = $i0 + 1;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(42, $i3);

        $i12 = (int) -1;

        if $i4 != $i12 goto label05;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $z3 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>($r9);

        return $z3;

     label05:
        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

        i8 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>($r6);

        goto label08;

     label06:
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i6 = i8 + $i5;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i6);

        $z2 = staticinvoke <org.springframework.util.PatternMatchUtils: boolean simpleMatch(java.lang.String,java.lang.String)>($r7, $r8);

        if $z2 == 0 goto label07;

        return 1;

     label07:
        $i7 = i8 + 1;

        i8 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>($r6, $i7);

     label08:
        $i14 = (int) -1;

        if i8 != $i14 goto label06;

        return 0;

     label09:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 < $i0 goto label10;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label10;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $z1 = staticinvoke <org.springframework.util.PatternMatchUtils: boolean simpleMatch(java.lang.String,java.lang.String)>($r4, $r5);

        if $z1 == 0 goto label10;

        return 1;

     label10:
        return 0;
    }

    public static boolean simpleMatch(java.lang.String[], java.lang.String)
    {
        int $i0, i1;
        java.lang.String[] r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label4;

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0[i1];

        $z0 = staticinvoke <org.springframework.util.PatternMatchUtils: boolean simpleMatch(java.lang.String,java.lang.String)>($r2, r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        $i0 = lengthof r0;

        if i1 < $i0 goto label1;

     label4:
        return 0;
    }
}
