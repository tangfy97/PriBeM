class org.apache.jute.CsvInputArchive extends java.lang.Object implements org.apache.jute.InputArchive
{
    private java.io.PushbackReader stream;

    private void throwExceptionOnError(java.lang.String) throws java.io.IOException
    {
        java.io.IOException $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        org.apache.jute.CsvInputArchive r6;
        java.lang.String r3, $r5;

        r6 := @this: org.apache.jute.CsvInputArchive;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.io.IOException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    private java.lang.String readField(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r1;
        int $i0, $i2, $i3;
        java.lang.String $r3, $r5, r10, $r12;
        char $c1;
        java.io.IOException $r6, $r15;
        java.io.PushbackReader $r2, $r4;
        java.lang.StringBuilder $r9, $r11, $r13, $r14;

        r1 := @this: org.apache.jute.CsvInputArchive;

        r10 := @parameter0: java.lang.String;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

     label2:
        $r2 = r1.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i0 = virtualinvoke $r2.<java.io.PushbackReader: int read()>();

        $c1 = (char) $i0;

        $i2 = (int) $c1;

        lookupswitch($i2)
        {
            case 10: goto label5;
            case 13: goto label5;
            case 44: goto label3;
            case 125: goto label5;
            default: goto label7;
        };

     label3:
        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r3;

     label5:
        $r4 = r1.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i3 = (int) $c1;

        virtualinvoke $r4.<java.io.PushbackReader: void unread(int)>($i3);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        return $r5;

     label7:
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label2;

     label8:
        $r6 := @caughtexception;

        $r15 = new java.io.IOException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r15;

        catch java.io.IOException from label1 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
        catch java.io.IOException from label7 to label8 with label8;
    }

    static org.apache.jute.CsvInputArchive getArchive(java.io.InputStream) throws java.io.UnsupportedEncodingException
    {
        org.apache.jute.CsvInputArchive $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.apache.jute.CsvInputArchive;

        specialinvoke $r0.<org.apache.jute.CsvInputArchive: void <init>(java.io.InputStream)>(r1);

        return $r0;
    }

    public void <init>(java.io.InputStream) throws java.io.UnsupportedEncodingException
    {
        java.io.PushbackReader $r1;
        org.apache.jute.CsvInputArchive r0;
        java.io.InputStreamReader $r2;
        java.io.InputStream r3;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r3 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.io.PushbackReader;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r3, "UTF-8");

        specialinvoke $r1.<java.io.PushbackReader: void <init>(java.io.Reader)>($r2);

        r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream> = $r1;

        return;
    }

    public byte readByte(java.lang.String) throws java.io.IOException
    {
        byte $b2;
        int $i1;
        org.apache.jute.CsvInputArchive r0;
        long $l0;
        java.lang.String r1;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r1 := @parameter0: java.lang.String;

        $l0 = virtualinvoke r0.<org.apache.jute.CsvInputArchive: long readLong(java.lang.String)>(r1);

        $i1 = (int) $l0;

        $b2 = (byte) $i1;

        return $b2;
    }

    public boolean readBool(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.jute.CsvInputArchive: java.lang.String readField(java.lang.String)>(r1);

        $r3 = "T";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int readInt(java.lang.String) throws java.io.IOException
    {
        int $i1;
        org.apache.jute.CsvInputArchive r0;
        long $l0;
        java.lang.String r1;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r1 := @parameter0: java.lang.String;

        $l0 = virtualinvoke r0.<org.apache.jute.CsvInputArchive: long readLong(java.lang.String)>(r1);

        $i1 = (int) $l0;

        return $i1;
    }

    public long readLong(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        long $l0;
        java.lang.NumberFormatException $r3;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r2, $r8;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.jute.CsvInputArchive: java.lang.String readField(java.lang.String)>(r1);

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public float readFloat(java.lang.String) throws java.io.IOException
    {
        float $f0;
        org.apache.jute.CsvInputArchive r0;
        java.lang.String r1;
        double $d0;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r1 := @parameter0: java.lang.String;

        $d0 = virtualinvoke r0.<org.apache.jute.CsvInputArchive: double readDouble(java.lang.String)>(r1);

        $f0 = (float) $d0;

        return $f0;
    }

    public double readDouble(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        java.lang.NumberFormatException $r3;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r2, $r8;
        double $d0;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.jute.CsvInputArchive: java.lang.String readField(java.lang.String)>(r1);

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String readString(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        java.lang.String r1, $r2, $r3;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.jute.CsvInputArchive: java.lang.String readField(java.lang.String)>(r1);

        $r3 = staticinvoke <org.apache.jute.Utils: java.lang.String fromCSVString(java.lang.String)>($r2);

        return $r3;
    }

    public byte[] readBuffer(java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        org.apache.jute.CsvInputArchive r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.jute.CsvInputArchive: java.lang.String readField(java.lang.String)>(r1);

        $r3 = staticinvoke <org.apache.jute.Utils: byte[] fromCSVBuffer(java.lang.String)>($r2);

        return $r3;
    }

    public void readRecord(org.apache.jute.Record, java.lang.String) throws java.io.IOException
    {
        org.apache.jute.Record r0;
        org.apache.jute.CsvInputArchive r1;
        java.lang.String r2;

        r1 := @this: org.apache.jute.CsvInputArchive;

        r0 := @parameter0: org.apache.jute.Record;

        r2 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.Record: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r1, r2);

        return;
    }

    public void startRecord(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r2;
        int $i0, $i2, $i4, $i5;
        java.lang.String r0, $r1, $r9;
        boolean $z0;
        char c1, c3;
        java.io.IOException $r11;
        java.io.PushbackReader $r3, $r4;
        java.lang.StringBuilder $r7, $r8, $r10;

        r2 := @this: org.apache.jute.CsvInputArchive;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r3 = r2.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i0 = virtualinvoke $r3.<java.io.PushbackReader: int read()>();

        c1 = (char) $i0;

        $r4 = r2.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i2 = virtualinvoke $r4.<java.io.PushbackReader: int read()>();

        c3 = (char) $i2;

        $i4 = (int) c1;

        if $i4 != 115 goto label1;

        $i5 = (int) c3;

        if $i5 == 123 goto label2;

     label1:
        $r11 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label2:
        return;
    }

    public void endRecord(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r2, $r4, $r11;
        boolean $z0;
        char c2, c3;
        java.io.IOException $r12, $r14;
        java.io.PushbackReader $r1, $r5, $r6;
        java.lang.StringBuilder $r9, $r10, $r13;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i0 = virtualinvoke $r1.<java.io.PushbackReader: int read()>();

        c2 = (char) $i0;

        if r2 == null goto label1;

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

     label1:
        $i4 = (int) c2;

        if $i4 == 10 goto label2;

        $i5 = (int) c2;

        if $i5 == 13 goto label2;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Error deserializing record.");

        throw $r12;

     label2:
        return;

     label3:
        $i6 = (int) c2;

        if $i6 == 125 goto label4;

        $r14 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r14;

     label4:
        $r5 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i1 = virtualinvoke $r5.<java.io.PushbackReader: int read()>();

        c3 = (char) $i1;

        $i7 = (int) c3;

        if $i7 == 44 goto label5;

        $r6 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i8 = (int) c3;

        virtualinvoke $r6.<java.io.PushbackReader: void unread(int)>($i8);

     label5:
        return;
    }

    public org.apache.jute.Index startVector(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        int $i0, $i2, $i4, $i5;
        java.lang.String r6, $r8;
        char c1, c3;
        java.io.IOException $r11;
        org.apache.jute.CsvInputArchive$CsvIndex $r12;
        java.io.PushbackReader $r1, $r2;
        java.lang.StringBuilder $r5, $r7, $r10;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i0 = virtualinvoke $r1.<java.io.PushbackReader: int read()>();

        c1 = (char) $i0;

        $r2 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i2 = virtualinvoke $r2.<java.io.PushbackReader: int read()>();

        c3 = (char) $i2;

        $i4 = (int) c1;

        if $i4 != 118 goto label1;

        $i5 = (int) c3;

        if $i5 == 123 goto label2;

     label1:
        $r11 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r11;

     label2:
        $r12 = new org.apache.jute.CsvInputArchive$CsvIndex;

        specialinvoke $r12.<org.apache.jute.CsvInputArchive$CsvIndex: void <init>(org.apache.jute.CsvInputArchive,org.apache.jute.CsvInputArchive$1)>(r0, null);

        return $r12;
    }

    public void endVector(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        int $i0, $i1, $i4, $i5, $i6;
        java.lang.String r7, $r9;
        char c2, c3;
        java.io.IOException $r11;
        java.io.PushbackReader $r1, $r2, $r3;
        java.lang.StringBuilder $r6, $r8, $r10;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r7 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i0 = virtualinvoke $r1.<java.io.PushbackReader: int read()>();

        c2 = (char) $i0;

        $i4 = (int) c2;

        if $i4 == 125 goto label1;

        $r11 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label1:
        $r2 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i1 = virtualinvoke $r2.<java.io.PushbackReader: int read()>();

        c3 = (char) $i1;

        $i5 = (int) c3;

        if $i5 == 44 goto label2;

        $r3 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i6 = (int) c3;

        virtualinvoke $r3.<java.io.PushbackReader: void unread(int)>($i6);

     label2:
        return;
    }

    public org.apache.jute.Index startMap(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        int $i0, $i2, $i4, $i5;
        java.lang.String r6, $r8;
        char c1, c3;
        java.io.IOException $r11;
        org.apache.jute.CsvInputArchive$CsvIndex $r12;
        java.io.PushbackReader $r1, $r2;
        java.lang.StringBuilder $r5, $r7, $r10;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i0 = virtualinvoke $r1.<java.io.PushbackReader: int read()>();

        c1 = (char) $i0;

        $r2 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i2 = virtualinvoke $r2.<java.io.PushbackReader: int read()>();

        c3 = (char) $i2;

        $i4 = (int) c1;

        if $i4 != 109 goto label1;

        $i5 = (int) c3;

        if $i5 == 123 goto label2;

     label1:
        $r11 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r11;

     label2:
        $r12 = new org.apache.jute.CsvInputArchive$CsvIndex;

        specialinvoke $r12.<org.apache.jute.CsvInputArchive$CsvIndex: void <init>(org.apache.jute.CsvInputArchive,org.apache.jute.CsvInputArchive$1)>(r0, null);

        return $r12;
    }

    public void endMap(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.CsvInputArchive r0;
        int $i0, $i1, $i4, $i5, $i6;
        java.lang.String r7, $r9;
        char c2, c3;
        java.io.IOException $r11;
        java.io.PushbackReader $r1, $r2, $r3;
        java.lang.StringBuilder $r6, $r8, $r10;

        r0 := @this: org.apache.jute.CsvInputArchive;

        r7 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i0 = virtualinvoke $r1.<java.io.PushbackReader: int read()>();

        c2 = (char) $i0;

        $i4 = (int) c2;

        if $i4 == 125 goto label1;

        $r11 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label1:
        $r2 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i1 = virtualinvoke $r2.<java.io.PushbackReader: int read()>();

        c3 = (char) $i1;

        $i5 = (int) c3;

        if $i5 == 44 goto label2;

        $r3 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        $i6 = (int) c3;

        virtualinvoke $r3.<java.io.PushbackReader: void unread(int)>($i6);

     label2:
        return;
    }

    static java.io.PushbackReader access$000(org.apache.jute.CsvInputArchive)
    {
        org.apache.jute.CsvInputArchive r0;
        java.io.PushbackReader $r1;

        r0 := @parameter0: org.apache.jute.CsvInputArchive;

        $r1 = r0.<org.apache.jute.CsvInputArchive: java.io.PushbackReader stream>;

        return $r1;
    }
}
