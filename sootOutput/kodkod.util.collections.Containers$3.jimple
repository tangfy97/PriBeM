final class kodkod.util.collections.Containers$3 extends java.util.AbstractSet
{
    private final java.lang.Object[] val$array;

    void <init>(java.lang.Object[])
    {
        java.lang.Object[] r1;
        kodkod.util.collections.Containers$3 r0;

        r0 := @this: kodkod.util.collections.Containers$3;

        r1 := @parameter0: java.lang.Object[];

        r0.<kodkod.util.collections.Containers$3: java.lang.Object[] val$array> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object[] $r2;
        kodkod.util.collections.Containers$3 r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: kodkod.util.collections.Containers$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<kodkod.util.collections.Containers$3: java.lang.Object[] val$array>;

        $i0 = staticinvoke <kodkod.util.collections.Containers: int identityBinarySearch(java.lang.Object[],java.lang.Object)>($r2, r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        java.lang.Object[] $r1;
        kodkod.util.collections.Containers$3 r0;
        java.util.Iterator $r2;

        r0 := @this: kodkod.util.collections.Containers$3;

        $r1 = r0.<kodkod.util.collections.Containers$3: java.lang.Object[] val$array>;

        $r2 = staticinvoke <kodkod.util.collections.Containers: java.util.Iterator iterate(java.lang.Object[])>($r1);

        return $r2;
    }

    public int size()
    {
        int $i0;
        java.lang.Object[] $r1;
        kodkod.util.collections.Containers$3 r0;

        r0 := @this: kodkod.util.collections.Containers$3;

        $r1 = r0.<kodkod.util.collections.Containers$3: java.lang.Object[] val$array>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int hashCode()
    {
        java.lang.Object[] r1;
        kodkod.util.collections.Containers$3 r0;
        int i0, $i1, i2, i3;
        java.lang.Object r2;

        r0 := @this: kodkod.util.collections.Containers$3;

        i2 = 0;

        r1 = r0.<kodkod.util.collections.Containers$3: java.lang.Object[] val$array>;

        i3 = 0;

        i0 = lengthof r1;

        goto label2;

     label1:
        r2 = r1[i3];

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        i2 = i2 + $i1;

        i3 = i3 + 1;

     label2:
        if i3 < i0 goto label1;

        return i2;
    }
}
