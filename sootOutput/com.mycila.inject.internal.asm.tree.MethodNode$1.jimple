class com.mycila.inject.internal.asm.tree.MethodNode$1 extends java.util.ArrayList
{
    private final com.mycila.inject.internal.asm.tree.MethodNode this$0;

    void <init>(com.mycila.inject.internal.asm.tree.MethodNode, int)
    {
        int i0;
        com.mycila.inject.internal.asm.tree.MethodNode r1;
        com.mycila.inject.internal.asm.tree.MethodNode$1 r0;

        r0 := @this: com.mycila.inject.internal.asm.tree.MethodNode$1;

        r1 := @parameter0: com.mycila.inject.internal.asm.tree.MethodNode;

        i0 := @parameter1: int;

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<com.mycila.inject.internal.asm.tree.MethodNode$1: com.mycila.inject.internal.asm.tree.MethodNode this$0> = r1;

        return;
    }

    public boolean add(java.lang.Object)
    {
        com.mycila.inject.internal.asm.tree.MethodNode $r2;
        com.mycila.inject.internal.asm.tree.MethodNode$1 r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.asm.tree.MethodNode$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.asm.tree.MethodNode$1: com.mycila.inject.internal.asm.tree.MethodNode this$0>;

        $r2.<com.mycila.inject.internal.asm.tree.MethodNode: java.lang.Object annotationDefault> = r1;

        $z0 = specialinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return $z0;
    }
}
