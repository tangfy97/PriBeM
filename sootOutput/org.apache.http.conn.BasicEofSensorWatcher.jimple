public class org.apache.http.conn.BasicEofSensorWatcher extends java.lang.Object implements org.apache.http.conn.EofSensorWatcher
{
    protected final org.apache.http.conn.ManagedClientConnection managedConn;
    protected final boolean attemptReuse;

    public void <init>(org.apache.http.conn.ManagedClientConnection, boolean)
    {
        org.apache.http.conn.BasicEofSensorWatcher r0;
        org.apache.http.conn.ManagedClientConnection r1;
        java.lang.IllegalArgumentException $r2;
        boolean z0;

        r0 := @this: org.apache.http.conn.BasicEofSensorWatcher;

        r1 := @parameter0: org.apache.http.conn.ManagedClientConnection;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null.");

        throw $r2;

     label1:
        r0.<org.apache.http.conn.BasicEofSensorWatcher: org.apache.http.conn.ManagedClientConnection managedConn> = r1;

        r0.<org.apache.http.conn.BasicEofSensorWatcher: boolean attemptReuse> = z0;

        return;
    }

    public boolean eofDetected(java.io.InputStream) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        org.apache.http.conn.BasicEofSensorWatcher r0;
        org.apache.http.conn.ManagedClientConnection $r1, $r3, $r5;
        boolean $z0;
        java.io.InputStream r2;

        r0 := @this: org.apache.http.conn.BasicEofSensorWatcher;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $z0 = r0.<org.apache.http.conn.BasicEofSensorWatcher: boolean attemptReuse>;

        if $z0 == 0 goto label2;

        virtualinvoke r2.<java.io.InputStream: void close()>();

        $r3 = r0.<org.apache.http.conn.BasicEofSensorWatcher: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r3.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label2:
        $r1 = r0.<org.apache.http.conn.BasicEofSensorWatcher: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r1.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = r0.<org.apache.http.conn.BasicEofSensorWatcher: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r5.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

        throw $r4;

     label5:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean streamClosed(java.io.InputStream) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        org.apache.http.conn.BasicEofSensorWatcher r0;
        org.apache.http.conn.ManagedClientConnection $r1, $r3, $r5;
        boolean $z0;
        java.io.InputStream r2;

        r0 := @this: org.apache.http.conn.BasicEofSensorWatcher;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $z0 = r0.<org.apache.http.conn.BasicEofSensorWatcher: boolean attemptReuse>;

        if $z0 == 0 goto label2;

        virtualinvoke r2.<java.io.InputStream: void close()>();

        $r3 = r0.<org.apache.http.conn.BasicEofSensorWatcher: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r3.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label2:
        $r1 = r0.<org.apache.http.conn.BasicEofSensorWatcher: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r1.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = r0.<org.apache.http.conn.BasicEofSensorWatcher: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r5.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

        throw $r4;

     label5:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean streamAbort(java.io.InputStream) throws java.io.IOException
    {
        org.apache.http.conn.ManagedClientConnection $r1;
        org.apache.http.conn.BasicEofSensorWatcher r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.http.conn.BasicEofSensorWatcher;

        r2 := @parameter0: java.io.InputStream;

        $r1 = r0.<org.apache.http.conn.BasicEofSensorWatcher: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r1.<org.apache.http.conn.ManagedClientConnection: void abortConnection()>();

        return 0;
    }
}
