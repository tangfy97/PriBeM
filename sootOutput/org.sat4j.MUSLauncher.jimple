public class org.sat4j.MUSLauncher extends org.sat4j.AbstractLauncher
{
    private static final long serialVersionUID;
    private int[] mus;
    private org.sat4j.tools.xplain.Explainer xplain;
    private boolean highLevel;

    public void <init>()
    {
        org.sat4j.MUSLauncher r0;

        r0 := @this: org.sat4j.MUSLauncher;

        specialinvoke r0.<org.sat4j.AbstractLauncher: void <init>()>();

        r0.<org.sat4j.MUSLauncher: boolean highLevel> = 0;

        return;
    }

    public void usage()
    {
        org.sat4j.MUSLauncher r0;

        r0 := @this: org.sat4j.MUSLauncher;

        virtualinvoke r0.<org.sat4j.MUSLauncher: void log(java.lang.String)>("java -jar sat4j-mus.jar [Insertion|Deletion|QuickXplain] <cnffile>|<gcnffile>");

        return;
    }

    protected org.sat4j.reader.Reader createReader(org.sat4j.specs.ISolver, java.lang.String)
    {
        org.sat4j.reader.GroupedCNFReader $r3;
        org.sat4j.specs.ISolver r2;
        org.sat4j.MUSLauncher r0;
        java.lang.String r5;
        org.sat4j.tools.xplain.HighLevelXplain $r4;
        boolean $z0;
        org.sat4j.reader.LecteurDimacs $r1;

        r0 := @this: org.sat4j.MUSLauncher;

        r2 := @parameter0: org.sat4j.specs.ISolver;

        r5 := @parameter1: java.lang.String;

        $z0 = r0.<org.sat4j.MUSLauncher: boolean highLevel>;

        if $z0 == 0 goto label1;

        $r3 = new org.sat4j.reader.GroupedCNFReader;

        $r4 = (org.sat4j.tools.xplain.HighLevelXplain) r2;

        specialinvoke $r3.<org.sat4j.reader.GroupedCNFReader: void <init>(org.sat4j.tools.xplain.HighLevelXplain)>($r4);

        return $r3;

     label1:
        $r1 = new org.sat4j.reader.LecteurDimacs;

        specialinvoke $r1.<org.sat4j.reader.LecteurDimacs: void <init>(org.sat4j.specs.ISolver)>(r2);

        return $r1;
    }

    protected java.lang.String getInstanceName(java.lang.String[])
    {
        int $i0, $i1, $i2;
        org.sat4j.MUSLauncher r2;
        java.lang.String[] r0;
        java.lang.String $r1;

        r2 := @this: org.sat4j.MUSLauncher;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        $r1 = r0[$i2];

        return $r1;
    }

    protected org.sat4j.specs.ISolver configureSolver(java.lang.String[])
    {
        org.sat4j.specs.ISolver $r4, $r16;
        java.lang.String[] r0;
        org.sat4j.tools.SolverDecorator r19;
        int $i0, $i1, $i2;
        java.lang.String r1, $r7, $r10, $r18, $r21;
        boolean $z0, $z1;
        java.io.PrintWriter $r20;
        org.sat4j.tools.xplain.Xplain $r3;
        org.sat4j.tools.xplain.MinimizationStrategy $r14;
        org.sat4j.tools.xplain.Explainer $r11;
        java.lang.Exception $r17;
        org.sat4j.MUSLauncher r2;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.Class $r12;
        java.lang.Object $r13;
        org.sat4j.tools.xplain.HighLevelXplain $r15;

        r2 := @this: org.sat4j.MUSLauncher;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        r1 = r0[$i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".gcnf");

        if $z0 == 0 goto label1;

        r2.<org.sat4j.MUSLauncher: boolean highLevel> = 1;

     label1:
        $z1 = r2.<org.sat4j.MUSLauncher: boolean highLevel>;

        if $z1 == 0 goto label2;

        $r15 = new org.sat4j.tools.xplain.HighLevelXplain;

        $r16 = staticinvoke <org.sat4j.minisat.SolverFactory: org.sat4j.specs.ISolver newDefault()>();

        specialinvoke $r15.<org.sat4j.tools.xplain.HighLevelXplain: void <init>(org.sat4j.specs.ISolver)>($r16);

        r2.<org.sat4j.MUSLauncher: org.sat4j.tools.xplain.Explainer xplain> = $r15;

        r19 = $r15;

        goto label3;

     label2:
        $r3 = new org.sat4j.tools.xplain.Xplain;

        $r4 = staticinvoke <org.sat4j.minisat.SolverFactory: org.sat4j.specs.ISolver newDefault()>();

        specialinvoke $r3.<org.sat4j.tools.xplain.Xplain: void <init>(org.sat4j.specs.ISolver,boolean)>($r4, 0);

        r2.<org.sat4j.MUSLauncher: org.sat4j.tools.xplain.Explainer xplain> = $r3;

        r19 = $r3;

     label3:
        $i2 = lengthof r0;

        if $i2 != 2 goto label7;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.sat4j.tools.xplain.");

        $r7 = r0[0];

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Strategy");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r11 = r2.<org.sat4j.MUSLauncher: org.sat4j.tools.xplain.Explainer xplain>;

        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r10);

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>();

        $r14 = (org.sat4j.tools.xplain.MinimizationStrategy) $r13;

        interfaceinvoke $r11.<org.sat4j.tools.xplain.Explainer: void setMinimizationStrategy(org.sat4j.tools.xplain.MinimizationStrategy)>($r14);

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r2.<org.sat4j.MUSLauncher: void log(java.lang.String)>($r18);

     label7:
        interfaceinvoke r19.<org.sat4j.specs.ISolver: void setTimeout(int)>(2147483647);

        interfaceinvoke r19.<org.sat4j.specs.ISolver: void setDBSimplificationAllowed(boolean)>(1);

        $r20 = virtualinvoke r2.<org.sat4j.MUSLauncher: java.io.PrintWriter getLogWriter()>();

        $r21 = interfaceinvoke r19.<org.sat4j.specs.ISolver: java.lang.String toString(java.lang.String)>("c ");

        virtualinvoke $r20.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        return r19;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected void displayResult()
    {
        int[] $r16, $r19, $r23;
        org.sat4j.ExitCode $r9, $r12, $r13, $r14, $r15;
        java.io.PrintWriter $r2, $r4, $r7, $r17, $r18, $r21, $r24, $r25, $r27;
        org.sat4j.MUSLauncher r0;
        java.lang.StringBuilder $r6, $r8, $r10, $r28, $r29, $r30;
        org.sat4j.specs.ISolver $r1, $r3, $r5, $r22;
        long $l0, $l1, $l2;
        java.lang.String $r11, $r31;
        double $d0, d1;
        org.sat4j.reader.Reader $r20, $r26;

        r0 := @this: org.sat4j.MUSLauncher;

        $r1 = r0.<org.sat4j.MUSLauncher: org.sat4j.specs.ISolver solver>;

        if $r1 == null goto label3;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<org.sat4j.MUSLauncher: long beginTime>;

        $l2 = $l0 - $l1;

        $d0 = (double) $l2;

        d1 = $d0 / 1000.0;

        $r3 = r0.<org.sat4j.MUSLauncher: org.sat4j.specs.ISolver solver>;

        $r2 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        interfaceinvoke $r3.<org.sat4j.specs.ISolver: void printStat(java.io.PrintWriter,java.lang.String)>($r2, "c ");

        $r5 = r0.<org.sat4j.MUSLauncher: org.sat4j.specs.ISolver solver>;

        $r4 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        interfaceinvoke $r5.<org.sat4j.specs.ISolver: void printInfos(java.io.PrintWriter,java.lang.String)>($r4, "c ");

        $r7 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s ");

        $r9 = r0.<org.sat4j.MUSLauncher: org.sat4j.ExitCode exitCode>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r13 = r0.<org.sat4j.MUSLauncher: org.sat4j.ExitCode exitCode>;

        $r12 = <org.sat4j.ExitCode: org.sat4j.ExitCode SATISFIABLE>;

        if $r13 != $r12 goto label1;

        $r22 = r0.<org.sat4j.MUSLauncher: org.sat4j.specs.ISolver solver>;

        $r23 = interfaceinvoke $r22.<org.sat4j.specs.ISolver: int[] model()>();

        $r24 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        virtualinvoke $r24.<java.io.PrintWriter: void print(java.lang.String)>("v ");

        $r26 = r0.<org.sat4j.MUSLauncher: org.sat4j.reader.Reader reader>;

        $r25 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        virtualinvoke $r26.<org.sat4j.reader.Reader: void decode(int[],java.io.PrintWriter)>($r23, $r25);

        $r27 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        virtualinvoke $r27.<java.io.PrintWriter: void println()>();

        goto label2;

     label1:
        $r15 = r0.<org.sat4j.MUSLauncher: org.sat4j.ExitCode exitCode>;

        $r14 = <org.sat4j.ExitCode: org.sat4j.ExitCode UNSATISFIABLE>;

        if $r15 != $r14 goto label2;

        $r16 = r0.<org.sat4j.MUSLauncher: int[] mus>;

        if $r16 == null goto label2;

        $r17 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        virtualinvoke $r17.<java.io.PrintWriter: void print(java.lang.String)>("v ");

        $r20 = r0.<org.sat4j.MUSLauncher: org.sat4j.reader.Reader reader>;

        $r19 = r0.<org.sat4j.MUSLauncher: int[] mus>;

        $r18 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        virtualinvoke $r20.<org.sat4j.reader.Reader: void decode(int[],java.io.PrintWriter)>($r19, $r18);

        $r21 = r0.<org.sat4j.MUSLauncher: java.io.PrintWriter out>;

        virtualinvoke $r21.<java.io.PrintWriter: void println()>();

     label2:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total wall clock time (in seconds) : ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.MUSLauncher: void log(java.lang.String)>($r31);

     label3:
        return;
    }

    public void run(java.lang.String[])
    {
        int[] $r22, $r27;
        org.sat4j.ExitCode $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        org.sat4j.MUSLauncher r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r14, $r16, $r17, $r18, $r19, $r23, $r24, $r25, $r26, $r28, $r30, $r31, $r32, $r35, $r36, $r37, $r38;
        org.sat4j.specs.TimeoutException $r34;
        org.sat4j.specs.ISolver $r12;
        java.lang.String[] r1;
        long $l0, $l1, $l2, $l4, $l6;
        int $i3, $i5;
        java.lang.String $r7, $r15, $r20, $r29, $r33, $r39, $r40, $r41, $r42, $r43;
        double $d0, d1, $d2, $d3, $d4, $d5;
        org.sat4j.specs.IVecInt $r13;
        org.sat4j.tools.xplain.Explainer $r21;

        r0 := @this: org.sat4j.MUSLauncher;

        r1 := @parameter0: java.lang.String[];

        r0.<org.sat4j.MUSLauncher: int[] mus> = null;

        specialinvoke r0.<org.sat4j.AbstractLauncher: void run(java.lang.String[])>(r1);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<org.sat4j.MUSLauncher: long beginTime>;

        $l2 = $l0 - $l1;

        $d0 = (double) $l2;

        d1 = $d0 / 1000.0;

        $r3 = r0.<org.sat4j.MUSLauncher: org.sat4j.ExitCode exitCode>;

        $r2 = <org.sat4j.ExitCode: org.sat4j.ExitCode UNSATISFIABLE>;

        if $r3 != $r2 goto label12;

     label01:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsat detection wall clock time (in seconds) : ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.MUSLauncher: void log(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size of initial ");

        $z0 = r0.<org.sat4j.MUSLauncher: boolean highLevel>;

        if $z0 == 0 goto label02;

        $r40 = "high level ";

        goto label03;

     label02:
        $r40 = "";

     label03:
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsat subformula: ");

        $r12 = r0.<org.sat4j.MUSLauncher: org.sat4j.specs.ISolver solver>;

        $r13 = interfaceinvoke $r12.<org.sat4j.specs.ISolver: org.sat4j.specs.IVecInt unsatExplanation()>();

        $i3 = interfaceinvoke $r13.<org.sat4j.specs.IVecInt: int size()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.MUSLauncher: void log(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Computing ");

        $z1 = r0.<org.sat4j.MUSLauncher: boolean highLevel>;

        if $z1 == 0 goto label04;

        $r41 = "high level ";

        goto label05;

     label04:
        $r41 = "";

     label05:
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MUS ...");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.MUSLauncher: void log(java.lang.String)>($r20);

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $d5 = (double) $l4;

        $r21 = r0.<org.sat4j.MUSLauncher: org.sat4j.tools.xplain.Explainer xplain>;

        $r22 = interfaceinvoke $r21.<org.sat4j.tools.xplain.Explainer: int[] minimalExplanation()>();

        r0.<org.sat4j.MUSLauncher: int[] mus> = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size of the ");

        $z2 = r0.<org.sat4j.MUSLauncher: boolean highLevel>;

        if $z2 == 0 goto label06;

        $r42 = "high level ";

        goto label07;

     label06:
        $r42 = "";

     label07:
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MUS: ");

        $r27 = r0.<org.sat4j.MUSLauncher: int[] mus>;

        $i5 = lengthof $r27;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.MUSLauncher: void log(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsat core  computation wall clock time (in seconds) : ");

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $d2 = (double) $l6;

        $d3 = $d2 - $d5;

        $d4 = $d3 / 1000.0;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.MUSLauncher: void log(java.lang.String)>($r33);

     label08:
        goto label12;

     label09:
        $r34 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot compute ");

        $z3 = r0.<org.sat4j.MUSLauncher: boolean highLevel>;

        if $z3 == 0 goto label10;

        $r43 = "high level ";

        goto label11;

     label10:
        $r43 = "";

     label11:
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MUS within the timeout.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.MUSLauncher: void log(java.lang.String)>($r39);

     label12:
        return;

        catch org.sat4j.specs.TimeoutException from label01 to label08 with label09;
    }

    public static void main(java.lang.String[])
    {
        int $i0, $i1, $i2;
        org.sat4j.MUSLauncher $r0;
        org.sat4j.ExitCode $r2;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.sat4j.MUSLauncher;

        specialinvoke $r0.<org.sat4j.MUSLauncher: void <init>()>();

        $i0 = lengthof r1;

        if $i0 < 1 goto label1;

        $i1 = lengthof r1;

        if $i1 <= 2 goto label2;

     label1:
        virtualinvoke $r0.<org.sat4j.MUSLauncher: void usage()>();

        return;

     label2:
        virtualinvoke $r0.<org.sat4j.MUSLauncher: void run(java.lang.String[])>(r1);

        $r2 = virtualinvoke $r0.<org.sat4j.MUSLauncher: org.sat4j.ExitCode getExitCode()>();

        $i2 = virtualinvoke $r2.<org.sat4j.ExitCode: int value()>();

        staticinvoke <java.lang.System: void exit(int)>($i2);

        return;
    }

    public static void <clinit>()
    {
        <org.sat4j.MUSLauncher: long serialVersionUID> = 1L;

        return;
    }
}
