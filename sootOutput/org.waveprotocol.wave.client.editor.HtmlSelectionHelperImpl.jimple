public final class org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl extends java.lang.Object implements org.waveprotocol.wave.client.editor.selection.html.HtmlSelectionHelper
{
    private final com.google.gwt.dom.client.Element doc;

    public void <init>(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r1;
        org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl r0;

        r0 := @this: org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl;

        r1 := @parameter0: com.google.gwt.dom.client.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: com.google.gwt.dom.client.Element doc> = r1;

        return;
    }

    public org.waveprotocol.wave.model.document.util.FocusedPointRange getHtmlSelection()
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange $r0;
        org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl r1;
        com.google.gwt.dom.client.Element $r2;
        com.google.gwt.dom.client.Node $r3;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl;

        $r0 = staticinvoke <org.waveprotocol.wave.client.editor.selection.html.NativeSelectionUtil: org.waveprotocol.wave.model.document.util.FocusedPointRange get()>();

        if $r0 == null goto label1;

        $r2 = r1.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: com.google.gwt.dom.client.Element doc>;

        $r3 = (com.google.gwt.dom.client.Node) $r2;

        $z0 = specialinvoke r1.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: boolean isFullyInside(org.waveprotocol.wave.model.document.util.FocusedPointRange,com.google.gwt.dom.client.Node)>($r0, $r3);

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r1.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: boolean isInChildEditor(org.waveprotocol.wave.model.document.util.FocusedPointRange)>($r0);

        if $z1 == 0 goto label2;

     label1:
        return null;

     label2:
        return $r0;
    }

    private boolean isInChildEditor(org.waveprotocol.wave.model.document.util.FocusedPointRange)
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r0;
        org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl r1;
        org.waveprotocol.wave.model.document.util.Point $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: boolean isCollapsed()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point getAnchor()>();

        $z3 = specialinvoke r1.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: boolean isInChildEditor(org.waveprotocol.wave.model.document.util.Point)>($r4);

        goto label4;

     label1:
        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point getAnchor()>();

        $z1 = specialinvoke r1.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: boolean isInChildEditor(org.waveprotocol.wave.model.document.util.Point)>($r2);

        if $z1 != 0 goto label2;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point getFocus()>();

        $z2 = specialinvoke r1.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: boolean isInChildEditor(org.waveprotocol.wave.model.document.util.Point)>($r3);

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    private boolean isInChildEditor(org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl r3;
        com.google.gwt.dom.client.Element $r4, $r5, r6;
        java.lang.Object $r1;
        com.google.gwt.dom.client.Node r2;
        org.waveprotocol.wave.model.document.util.Point r0;
        boolean $z0, $z1;

        r3 := @this: org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.Point: java.lang.Object getContainer()>();

        r2 = (com.google.gwt.dom.client.Node) $r1;

        $z0 = staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: boolean isTextNode(com.google.gwt.dom.client.Node)>(r2);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r2.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Element getParentElement()>();

        goto label2;

     label1:
        $r5 = (com.google.gwt.dom.client.Element) r2;

     label2:
        r6 = $r5;

     label3:
        if r6 == null goto label5;

        $r4 = r3.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: com.google.gwt.dom.client.Element doc>;

        if r6 == $r4 goto label5;

        $z1 = virtualinvoke r6.<com.google.gwt.dom.client.Element: boolean hasAttribute(java.lang.String)>("editableDocMarker");

        if $z1 == 0 goto label4;

        return 1;

     label4:
        r6 = virtualinvoke r6.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Element getParentElement()>();

        goto label3;

     label5:
        return 0;
    }

    private boolean isFullyInside(org.waveprotocol.wave.model.document.util.FocusedPointRange, com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r1;
        org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl r8;
        java.lang.Object $r3, $r6;
        com.google.gwt.dom.client.Node r0, $r4, $r7;
        org.waveprotocol.wave.model.document.util.Point $r2, $r5;
        boolean $z0, $z1, $z2;

        r8 := @this: org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        r0 := @parameter1: com.google.gwt.dom.client.Node;

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point getAnchor()>();

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.util.Point: java.lang.Object getContainer()>();

        $r4 = (com.google.gwt.dom.client.Node) $r3;

        $z0 = virtualinvoke r0.<com.google.gwt.dom.client.Node: boolean isOrHasChild(com.google.gwt.dom.client.Node)>($r4);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point getFocus()>();

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.util.Point: java.lang.Object getContainer()>();

        $r7 = (com.google.gwt.dom.client.Node) $r6;

        $z1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: boolean isOrHasChild(com.google.gwt.dom.client.Node)>($r7);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public org.waveprotocol.wave.model.document.util.PointRange getOrderedHtmlSelection()
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange $r1;
        org.waveprotocol.wave.model.document.util.PointRange $r2;
        org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl r0;

        r0 := @this: org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.HtmlSelectionHelperImpl: org.waveprotocol.wave.model.document.util.FocusedPointRange getHtmlSelection()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.selection.html.NativeSelectionUtil: org.waveprotocol.wave.model.document.util.PointRange getOrdered()>();

        return $r2;
    }
}
