public final class com.ctc.wstx.stax.WstxOutputFactory extends org.codehaus.stax2.XMLOutputFactory2 implements com.ctc.wstx.cfg.OutputConfigFlags
{
    protected final com.ctc.wstx.api.WriterConfig mConfig;

    public void <init>()
    {
        com.ctc.wstx.api.WriterConfig $r1;
        com.ctc.wstx.stax.WstxOutputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        specialinvoke r0.<org.codehaus.stax2.XMLOutputFactory2: void <init>()>();

        $r1 = staticinvoke <com.ctc.wstx.api.WriterConfig: com.ctc.wstx.api.WriterConfig createFullDefaults()>();

        r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig> = $r1;

        return;
    }

    public javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream) throws javax.xml.stream.XMLStreamException
    {
        java.io.OutputStream r1;
        javax.xml.stream.XMLEventWriter $r2;
        com.ctc.wstx.stax.WstxOutputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<com.ctc.wstx.stax.WstxOutputFactory: javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream,java.lang.String)>(r1, null);

        return $r2;
    }

    public javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.io.OutputStream r0;
        com.ctc.wstx.sw.BaseStreamWriter $r4;
        com.ctc.wstx.evt.WstxEventWriter $r1;
        com.ctc.wstx.stax.WstxOutputFactory r2;
        java.lang.String r3;
        java.lang.IllegalArgumentException $r5;

        r2 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r0 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null OutputStream is not a valid argument");

        throw $r5;

     label1:
        $r1 = new com.ctc.wstx.evt.WstxEventWriter;

        $r4 = specialinvoke r2.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream,java.io.Writer,java.lang.String,boolean)>(r0, null, r3, 0);

        specialinvoke $r1.<com.ctc.wstx.evt.WstxEventWriter: void <init>(javax.xml.stream.XMLStreamWriter)>($r4);

        return $r1;
    }

    public javax.xml.stream.XMLEventWriter createXMLEventWriter(javax.xml.transform.Result) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter $r0;
        com.ctc.wstx.stax.WstxOutputFactory r1;
        javax.xml.transform.Result r2;
        javax.xml.stream.XMLStreamWriter $r3;

        r1 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r2 := @parameter0: javax.xml.transform.Result;

        $r0 = new com.ctc.wstx.evt.WstxEventWriter;

        $r3 = specialinvoke r1.<com.ctc.wstx.stax.WstxOutputFactory: javax.xml.stream.XMLStreamWriter createSW(javax.xml.transform.Result)>(r2);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventWriter: void <init>(javax.xml.stream.XMLStreamWriter)>($r3);

        return $r0;
    }

    public javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.Writer) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.BaseStreamWriter $r3;
        com.ctc.wstx.evt.WstxEventWriter $r1;
        com.ctc.wstx.stax.WstxOutputFactory r2;
        java.io.Writer r0;
        java.lang.IllegalArgumentException $r4;

        r2 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r0 := @parameter0: java.io.Writer;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null Writer is not a valid argument");

        throw $r4;

     label1:
        $r1 = new com.ctc.wstx.evt.WstxEventWriter;

        $r3 = specialinvoke r2.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream,java.io.Writer,java.lang.String,boolean)>(null, r0, null, 0);

        specialinvoke $r1.<com.ctc.wstx.evt.WstxEventWriter: void <init>(javax.xml.stream.XMLStreamWriter)>($r3);

        return $r1;
    }

    public javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream) throws javax.xml.stream.XMLStreamException
    {
        java.io.OutputStream r1;
        javax.xml.stream.XMLStreamWriter $r2;
        com.ctc.wstx.stax.WstxOutputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<com.ctc.wstx.stax.WstxOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)>(r1, null);

        return $r2;
    }

    public javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.io.OutputStream r0;
        com.ctc.wstx.sw.BaseStreamWriter $r3;
        com.ctc.wstx.stax.WstxOutputFactory r1;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r0 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null OutputStream is not a valid argument");

        throw $r4;

     label1:
        $r3 = specialinvoke r1.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream,java.io.Writer,java.lang.String,boolean)>(r0, null, r2, 0);

        return $r3;
    }

    public javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.transform.Result r1;
        javax.xml.stream.XMLStreamWriter $r2;
        com.ctc.wstx.stax.WstxOutputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r1 := @parameter0: javax.xml.transform.Result;

        $r2 = specialinvoke r0.<com.ctc.wstx.stax.WstxOutputFactory: javax.xml.stream.XMLStreamWriter createSW(javax.xml.transform.Result)>(r1);

        return $r2;
    }

    public javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.BaseStreamWriter $r2;
        com.ctc.wstx.stax.WstxOutputFactory r1;
        java.io.Writer r0;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r0 := @parameter0: java.io.Writer;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null Writer is not a valid argument");

        throw $r3;

     label1:
        $r2 = specialinvoke r1.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream,java.io.Writer,java.lang.String,boolean)>(null, r0, null, 0);

        return $r2;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        com.ctc.wstx.api.WriterConfig $r2;
        com.ctc.wstx.stax.WstxOutputFactory r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.api.WriterConfig: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public boolean isPropertySupported(java.lang.String)
    {
        com.ctc.wstx.api.WriterConfig $r2;
        com.ctc.wstx.stax.WstxOutputFactory r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        $z0 = virtualinvoke $r2.<com.ctc.wstx.api.WriterConfig: boolean isPropertySupported(java.lang.String)>(r1);

        return $z0;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        com.ctc.wstx.api.WriterConfig $r3;
        com.ctc.wstx.stax.WstxOutputFactory r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        virtualinvoke $r3.<com.ctc.wstx.api.WriterConfig: boolean setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.Writer, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.BaseStreamWriter $r4;
        com.ctc.wstx.evt.WstxEventWriter $r0;
        com.ctc.wstx.stax.WstxOutputFactory r1;
        java.io.Writer r2;
        java.lang.String r3;

        r1 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r2 := @parameter0: java.io.Writer;

        r3 := @parameter1: java.lang.String;

        $r0 = new com.ctc.wstx.evt.WstxEventWriter;

        $r4 = specialinvoke r1.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream,java.io.Writer,java.lang.String,boolean)>(null, r2, r3, 0);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventWriter: void <init>(javax.xml.stream.XMLStreamWriter)>($r4);

        return $r0;
    }

    public javax.xml.stream.XMLEventWriter createXMLEventWriter(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter $r0;
        javax.xml.stream.XMLStreamWriter r1;
        com.ctc.wstx.stax.WstxOutputFactory r2;

        r2 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r1 := @parameter0: javax.xml.stream.XMLStreamWriter;

        $r0 = new com.ctc.wstx.evt.WstxEventWriter;

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventWriter: void <init>(javax.xml.stream.XMLStreamWriter)>(r1);

        return $r0;
    }

    public org.codehaus.stax2.XMLStreamWriter2 createXMLStreamWriter(java.io.Writer, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.BaseStreamWriter $r3;
        com.ctc.wstx.stax.WstxOutputFactory r0;
        java.io.Writer r1;
        java.lang.String r2;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream,java.io.Writer,java.lang.String,boolean)>(null, r1, r2, 0);

        return $r3;
    }

    public void configureForXmlConformance()
    {
        com.ctc.wstx.api.WriterConfig $r1;
        com.ctc.wstx.stax.WstxOutputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        virtualinvoke $r1.<com.ctc.wstx.api.WriterConfig: void configureForXmlConformance()>();

        return;
    }

    public void configureForRobustness()
    {
        com.ctc.wstx.api.WriterConfig $r1;
        com.ctc.wstx.stax.WstxOutputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        virtualinvoke $r1.<com.ctc.wstx.api.WriterConfig: void configureForRobustness()>();

        return;
    }

    public void configureForSpeed()
    {
        com.ctc.wstx.api.WriterConfig $r1;
        com.ctc.wstx.stax.WstxOutputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        virtualinvoke $r1.<com.ctc.wstx.api.WriterConfig: void configureForSpeed()>();

        return;
    }

    public com.ctc.wstx.api.WriterConfig getConfig()
    {
        com.ctc.wstx.api.WriterConfig $r1;
        com.ctc.wstx.stax.WstxOutputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        return $r1;
    }

    private com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream, java.io.Writer, java.lang.String, boolean) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.XmlWriter r20;
        com.ctc.wstx.io.UTF8Writer $r12;
        com.ctc.wstx.sw.ISOLatin1XmlWriter $r11;
        com.ctc.wstx.sw.NonNsStreamWriter $r5;
        javax.xml.stream.XMLStreamException $r15, $r17;
        java.io.OutputStreamWriter $r8;
        java.lang.String r19;
        com.ctc.wstx.sw.RepairingNsStreamWriter $r7;
        boolean z0, $z1, $z2;
        com.ctc.wstx.sw.AsciiXmlWriter $r10;
        java.io.OutputStream r4;
        com.ctc.wstx.sw.SimpleNsStreamWriter $r6;
        java.io.IOException $r14, $r16;
        com.ctc.wstx.sw.BufferingXmlWriter $r3, $r9, $r13;
        com.ctc.wstx.api.WriterConfig $r1, $r2;
        com.ctc.wstx.stax.WstxOutputFactory r0;
        java.io.Writer r18;

        r0 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r4 := @parameter0: java.io.OutputStream;

        r18 := @parameter1: java.io.Writer;

        r19 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r1 = r0.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.api.WriterConfig createNonShared()>();

        if r18 != null goto label08;

        if r19 != null goto label01;

        r19 = "UTF-8";

        goto label02;

     label01:
        r19 = staticinvoke <com.ctc.wstx.io.CharsetNames: java.lang.String normalize(java.lang.String)>(r19);

     label02:
        if r19 != "UTF-8" goto label03;

        $r12 = new com.ctc.wstx.io.UTF8Writer;

        specialinvoke $r12.<com.ctc.wstx.io.UTF8Writer: void <init>(com.ctc.wstx.api.WriterConfig,java.io.OutputStream,boolean)>($r2, r4, z0);

        $r13 = new com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke $r13.<com.ctc.wstx.sw.BufferingXmlWriter: void <init>(java.io.Writer,com.ctc.wstx.api.WriterConfig,java.lang.String,boolean,java.io.OutputStream)>($r12, $r2, r19, 1, r4);

        r20 = $r13;

        goto label06;

     label03:
        if r19 != "ISO-8859-1" goto label04;

        $r11 = new com.ctc.wstx.sw.ISOLatin1XmlWriter;

        specialinvoke $r11.<com.ctc.wstx.sw.ISOLatin1XmlWriter: void <init>(java.io.OutputStream,com.ctc.wstx.api.WriterConfig,boolean)>(r4, $r2, z0);

        r20 = $r11;

        goto label06;

     label04:
        if r19 != "US-ASCII" goto label05;

        $r10 = new com.ctc.wstx.sw.AsciiXmlWriter;

        specialinvoke $r10.<com.ctc.wstx.sw.AsciiXmlWriter: void <init>(java.io.OutputStream,com.ctc.wstx.api.WriterConfig,boolean)>(r4, $r2, z0);

        r20 = $r10;

        goto label06;

     label05:
        $r8 = new java.io.OutputStreamWriter;

        specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r4, r19);

        $r9 = new com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke $r9.<com.ctc.wstx.sw.BufferingXmlWriter: void <init>(java.io.Writer,com.ctc.wstx.api.WriterConfig,java.lang.String,boolean,java.io.OutputStream)>($r8, $r2, r19, z0, r4);

        r20 = $r9;

     label06:
        goto label12;

     label07:
        $r16 := @caughtexception;

        $r17 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r17.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label08:
        if r19 != null goto label09;

        r19 = staticinvoke <com.ctc.wstx.io.CharsetNames: java.lang.String findEncodingFor(java.io.Writer)>(r18);

     label09:
        $r3 = new com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke $r3.<com.ctc.wstx.sw.BufferingXmlWriter: void <init>(java.io.Writer,com.ctc.wstx.api.WriterConfig,java.lang.String,boolean,java.io.OutputStream)>(r18, $r2, r19, z0, r4);

        r20 = $r3;

     label10:
        goto label12;

     label11:
        $r14 := @caughtexception;

        $r15 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r15.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label12:
        $z1 = virtualinvoke $r2.<com.ctc.wstx.api.WriterConfig: boolean willSupportNamespaces()>();

        if $z1 == 0 goto label14;

        $z2 = virtualinvoke $r2.<com.ctc.wstx.api.WriterConfig: boolean automaticNamespacesEnabled()>();

        if $z2 == 0 goto label13;

        $r7 = new com.ctc.wstx.sw.RepairingNsStreamWriter;

        specialinvoke $r7.<com.ctc.wstx.sw.RepairingNsStreamWriter: void <init>(com.ctc.wstx.sw.XmlWriter,java.lang.String,com.ctc.wstx.api.WriterConfig)>(r20, r19, $r2);

        return $r7;

     label13:
        $r6 = new com.ctc.wstx.sw.SimpleNsStreamWriter;

        specialinvoke $r6.<com.ctc.wstx.sw.SimpleNsStreamWriter: void <init>(com.ctc.wstx.sw.XmlWriter,java.lang.String,com.ctc.wstx.api.WriterConfig)>(r20, r19, $r2);

        return $r6;

     label14:
        $r5 = new com.ctc.wstx.sw.NonNsStreamWriter;

        specialinvoke $r5.<com.ctc.wstx.sw.NonNsStreamWriter: void <init>(com.ctc.wstx.sw.XmlWriter,java.lang.String,com.ctc.wstx.api.WriterConfig)>(r20, r19, $r2);

        return $r5;

        catch java.io.IOException from label02 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
    }

    private javax.xml.stream.XMLStreamWriter createSW(javax.xml.transform.Result) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.transform.stream.StreamResult r24;
        javax.xml.transform.Result r0;
        javax.xml.stream.XMLStreamException $r13, $r15;
        com.ctc.wstx.exc.WstxIOException $r20;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6;
        org.codehaus.stax2.io.Stax2Result r22;
        java.io.Writer r21;
        com.ctc.wstx.sw.BaseStreamWriter $r16, $r17;
        java.lang.StringBuffer $r2, $r3, $r5, $r6;
        java.lang.String $r7;
        java.io.OutputStream $r14, $r18, r23;
        java.io.IOException $r19;
        java.lang.IllegalArgumentException $r1;
        com.ctc.wstx.dom.DOMWrappingWriter $r12;
        com.ctc.wstx.api.WriterConfig $r9, $r10;
        com.ctc.wstx.stax.WstxOutputFactory r8;
        java.lang.Class $r4;
        javax.xml.transform.dom.DOMResult $r11;

        r8 := @this: com.ctc.wstx.stax.WstxOutputFactory;

        r0 := @parameter0: javax.xml.transform.Result;

        r21 = null;

        $z0 = r0 instanceof org.codehaus.stax2.io.Stax2Result;

        if $z0 == 0 goto label05;

        r22 = (org.codehaus.stax2.io.Stax2Result) r0;

     label01:
        $r18 = virtualinvoke r22.<org.codehaus.stax2.io.Stax2Result: java.io.OutputStream constructOutputStream()>();

        r23 = $r18;

        if $r18 != null goto label02;

        r21 = virtualinvoke r22.<org.codehaus.stax2.io.Stax2Result: java.io.Writer constructWriter()>();

     label02:
        goto label04;

     label03:
        $r19 := @caughtexception;

        $r20 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r20.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r19);

        throw $r20;

     label04:
        z4 = 1;

        z6 = 1;

        z5 = 1;

        goto label10;

     label05:
        $z1 = r0 instanceof javax.xml.transform.stream.StreamResult;

        if $z1 == 0 goto label07;

        r24 = (javax.xml.transform.stream.StreamResult) r0;

        $r14 = virtualinvoke r24.<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>();

        r23 = $r14;

        if $r14 != null goto label06;

        r21 = virtualinvoke r24.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

     label06:
        z4 = 0;

        z6 = 0;

        z5 = 0;

        goto label10;

     label07:
        $z2 = r0 instanceof javax.xml.transform.sax.SAXResult;

        if $z2 == 0 goto label08;

        $r13 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r13.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>("Can not create a STaX writer for a SAXResult -- not implemented.");

        throw $r13;

     label08:
        $z3 = r0 instanceof javax.xml.transform.dom.DOMResult;

        if $z3 == 0 goto label09;

        $r9 = r8.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.api.WriterConfig mConfig>;

        $r10 = virtualinvoke $r9.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.api.WriterConfig createNonShared()>();

        $r11 = (javax.xml.transform.dom.DOMResult) r0;

        $r12 = staticinvoke <com.ctc.wstx.dom.DOMWrappingWriter: com.ctc.wstx.dom.DOMWrappingWriter createFrom(com.ctc.wstx.api.WriterConfig,javax.xml.transform.dom.DOMResult)>($r10, $r11);

        return $r12;

     label09:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not instantiate a writer for XML result type ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (unrecognized type)");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label10:
        if r23 == null goto label11;

        $r17 = specialinvoke r8.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream,java.io.Writer,java.lang.String,boolean)>(r23, null, null, z5);

        return $r17;

     label11:
        if r21 == null goto label12;

        $r16 = specialinvoke r8.<com.ctc.wstx.stax.WstxOutputFactory: com.ctc.wstx.sw.BaseStreamWriter createSW(java.io.OutputStream,java.io.Writer,java.lang.String,boolean)>(null, r21, null, z6);

        return $r16;

     label12:
        $r15 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r15.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>("Can not create StAX writer for passed-in Result -- neither writer nor output stream was accessible");

        throw $r15;

        catch java.io.IOException from label01 to label02 with label03;
    }
}
