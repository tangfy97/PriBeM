public class org.apache.pdfbox.PdfDecompressor extends java.lang.Object
{

    public void <init>()
    {
        org.apache.pdfbox.PdfDecompressor r0;

        r0 := @this: org.apache.pdfbox.PdfDecompressor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        org.apache.pdfbox.pdfparser.PDFObjectStreamParser $r8;
        boolean $z0, $z1, $z2;
        org.apache.pdfbox.pdmodel.PDDocument r33, $r34;
        org.apache.pdfbox.persistence.util.COSObjectKey $r13, $r16;
        java.lang.Exception $r21, $r23, $r24, $r31;
        java.util.List $r10, $r36;
        org.apache.pdfbox.cos.COSBase $r6, $r19;
        java.lang.StringBuilder $r1, $r2, $r3, $r25, $r27, $r29;
        java.lang.Throwable $r22;
        org.apache.pdfbox.cos.COSObject r5, r15, $r18;
        java.lang.String[] r0;
        int $i0, $i1;
        java.lang.String $r20, $r28, $r30, r32;
        org.apache.pdfbox.cos.COSStream r7;
        java.io.PrintStream $r26;
        org.apache.pdfbox.cos.COSDocument $r9, $r12, $r17, $r35;
        java.util.Iterator $r11, $r37;
        java.lang.Object $r4, $r14;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label01;

        staticinvoke <org.apache.pdfbox.PdfDecompressor: void usage()>();

     label01:
        $r20 = r0[0];

        $i1 = lengthof r0;

        if $i1 <= 1 goto label02;

        r32 = r0[1];

        goto label04;

     label02:
        $z0 = virtualinvoke $r20.<java.lang.String: boolean matches(java.lang.String)>(".*\\.[pP][dD][fF]$");

        if $z0 == 0 goto label03;

        r32 = virtualinvoke $r20.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.[pP][dD][fF]$", ".unc.pdf");

        goto label04;

     label03:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".unc.pdf");

        r32 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        r33 = null;

     label05:
        $r34 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String)>($r20);

        r33 = $r34;

        $r35 = virtualinvoke $r34.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r36 = virtualinvoke $r35.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjectsByType(java.lang.String)>("ObjStm");

        $r37 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r4 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.pdfbox.cos.COSObject) $r4;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        r7 = (org.apache.pdfbox.cos.COSStream) $r6;

        $r8 = new org.apache.pdfbox.pdfparser.PDFObjectStreamParser;

        $r9 = virtualinvoke $r34.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        specialinvoke $r8.<org.apache.pdfbox.pdfparser.PDFObjectStreamParser: void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)>(r7, $r9);

        virtualinvoke $r8.<org.apache.pdfbox.pdfparser.PDFObjectStreamParser: void parse()>();

        $r10 = virtualinvoke $r8.<org.apache.pdfbox.pdfparser.PDFObjectStreamParser: java.util.List getObjects()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r14 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.pdfbox.cos.COSObject) $r14;

        $r16 = new org.apache.pdfbox.persistence.util.COSObjectKey;

        specialinvoke $r16.<org.apache.pdfbox.persistence.util.COSObjectKey: void <init>(org.apache.pdfbox.cos.COSObject)>(r15);

        $r17 = virtualinvoke $r34.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r18 = virtualinvoke $r17.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.persistence.util.COSObjectKey)>($r16);

        $r19 = virtualinvoke r15.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        virtualinvoke $r18.<org.apache.pdfbox.cos.COSObject: void setObject(org.apache.pdfbox.cos.COSBase)>($r19);

        goto label07;

     label08:
        $r12 = virtualinvoke $r34.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r13 = new org.apache.pdfbox.persistence.util.COSObjectKey;

        specialinvoke $r13.<org.apache.pdfbox.persistence.util.COSObjectKey: void <init>(org.apache.pdfbox.cos.COSObject)>(r5);

        virtualinvoke $r12.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSObject removeObject(org.apache.pdfbox.persistence.util.COSObjectKey)>($r13);

        goto label06;

     label09:
        virtualinvoke $r34.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.lang.String)>(r32);

     label10:
        if $r34 == null goto label25;

     label11:
        virtualinvoke $r34.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label12:
        goto label25;

     label13:
        $r31 := @caughtexception;

        goto label25;

     label14:
        $r24 := @caughtexception;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing file: ");

        $r28 = virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label15:
        if r33 == null goto label25;

     label16:
        virtualinvoke r33.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label17:
        goto label25;

     label18:
        $r23 := @caughtexception;

        goto label25;

     label19:
        $r22 := @caughtexception;

     label20:
        if r33 == null goto label24;

     label21:
        virtualinvoke r33.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label22:
        goto label24;

     label23:
        $r21 := @caughtexception;

     label24:
        throw $r22;

     label25:
        return;

        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label05 to label10 with label14;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Throwable from label05 to label10 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    private static void usage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Usage: java -cp /path/to/pdfbox.jar;/path/to/commons-logging-api.jar org.apache.pdfbox.PdfDecompressor <input PDF File> [<Output PDF File>]\n  <input PDF File>       The PDF document to decompress\n  <output PDF File>      The output filename (default is to replace .pdf with .unc.pdf)");

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }
}
