class org.apache.commons.collections.FastArrayList$SubList$SubListIter extends java.lang.Object implements java.util.ListIterator
{
    private java.util.List expected;
    private java.util.ListIterator iter;
    private int lastReturnedIndex;
    private final org.apache.commons.collections.FastArrayList$SubList this$1;

    public void <init>(org.apache.commons.collections.FastArrayList$SubList, int)
    {
        java.util.ListIterator $r6;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5;
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        int i0, $i2;
        org.apache.commons.collections.FastArrayList $r2;
        org.apache.commons.collections.FastArrayList$SubList r1;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        r1 := @parameter0: org.apache.commons.collections.FastArrayList$SubList;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: org.apache.commons.collections.FastArrayList$SubList this$1> = r1;

        $i2 = (int) -1;

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex> = $i2;

        $r2 = staticinvoke <org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList access$000(org.apache.commons.collections.FastArrayList$SubList)>(r1);

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List expected> = $r3;

        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List expected>;

        $r5 = staticinvoke <org.apache.commons.collections.FastArrayList$SubList: java.util.List access$100(org.apache.commons.collections.FastArrayList$SubList,java.util.List)>(r1, $r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.ListIterator listIterator(int)>(i0);

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter> = $r6;

        return;
    }

    private void checkMod()
    {
        java.util.List $r3;
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        org.apache.commons.collections.FastArrayList $r2;
        org.apache.commons.collections.FastArrayList$SubList $r1;
        java.util.ConcurrentModificationException $r5;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: org.apache.commons.collections.FastArrayList$SubList this$1>;

        $r2 = staticinvoke <org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList access$000(org.apache.commons.collections.FastArrayList$SubList)>($r1);

        $r4 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r3 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List expected>;

        if $r4 == $r3 goto label1;

        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label1:
        return;
    }

    java.util.List get()
    {
        java.util.List $r1, $r3;
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        org.apache.commons.collections.FastArrayList$SubList $r2;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: org.apache.commons.collections.FastArrayList$SubList this$1>;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List expected>;

        $r3 = staticinvoke <org.apache.commons.collections.FastArrayList$SubList: java.util.List access$100(org.apache.commons.collections.FastArrayList$SubList,java.util.List)>($r2, $r1);

        return $r3;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.ListIterator $r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter>;

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int nextIndex()>();

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex> = $i0;

        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter>;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        return $r3;
    }

    public boolean hasPrevious()
    {
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasPrevious()>();

        return $z0;
    }

    public java.lang.Object previous()
    {
        java.util.ListIterator $r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter>;

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int previousIndex()>();

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex> = $i0;

        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter>;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        return $r3;
    }

    public int previousIndex()
    {
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        int $i0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter>;

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int previousIndex()>();

        return $i0;
    }

    public int nextIndex()
    {
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        int $i0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter>;

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int nextIndex()>();

        return $i0;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r9;
        java.util.ListIterator $r7;
        java.util.ArrayList $r5;
        java.util.List $r1, $r6;
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        int $i0, $i1, $i2, $i4;
        org.apache.commons.collections.FastArrayList $r4;
        org.apache.commons.collections.FastArrayList$SubList $r2, $r3;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex>;

        if $i0 >= 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List get()>();

        $i1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: org.apache.commons.collections.FastArrayList$SubList this$1>;

        staticinvoke <org.apache.commons.collections.FastArrayList$SubList: int access$210(org.apache.commons.collections.FastArrayList$SubList)>($r2);

        $r3 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: org.apache.commons.collections.FastArrayList$SubList this$1>;

        $r4 = staticinvoke <org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList access$000(org.apache.commons.collections.FastArrayList$SubList)>($r3);

        $r5 = $r4.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List expected> = $r5;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List get()>();

        $i2 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.ListIterator listIterator(int)>($i2);

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter> = $r7;

        $i4 = (int) -1;

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex> = $i4;

        return;
    }

    public void set(java.lang.Object)
    {
        java.lang.IllegalStateException $r8;
        java.util.ListIterator $r7;
        java.util.ArrayList $r5;
        java.util.List $r1, $r6;
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.collections.FastArrayList $r4;
        java.lang.Object r2;
        org.apache.commons.collections.FastArrayList$SubList $r3;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex>;

        if $i0 >= 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List get()>();

        $i1 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r2);

        $r3 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: org.apache.commons.collections.FastArrayList$SubList this$1>;

        $r4 = staticinvoke <org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList access$000(org.apache.commons.collections.FastArrayList$SubList)>($r3);

        $r5 = $r4.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List expected> = $r5;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List get()>();

        $i2 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int previousIndex()>();

        $i3 = $i2 + 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.ListIterator listIterator(int)>($i3);

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter> = $r7;

        return;
    }

    public void add(java.lang.Object)
    {
        java.util.ListIterator $r8;
        java.util.ArrayList $r6;
        java.util.List $r1, $r7;
        org.apache.commons.collections.FastArrayList$SubList$SubListIter r0;
        int $i0, $i1, $i3;
        org.apache.commons.collections.FastArrayList $r5;
        java.lang.Object r2;
        org.apache.commons.collections.FastArrayList$SubList $r3, $r4;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void checkMod()>();

        $i0 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int nextIndex()>();

        $r1 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List get()>();

        interfaceinvoke $r1.<java.util.List: void add(int,java.lang.Object)>($i0, r2);

        $r3 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: org.apache.commons.collections.FastArrayList$SubList this$1>;

        staticinvoke <org.apache.commons.collections.FastArrayList$SubList: int access$208(org.apache.commons.collections.FastArrayList$SubList)>($r3);

        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: org.apache.commons.collections.FastArrayList$SubList this$1>;

        $r5 = staticinvoke <org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList access$000(org.apache.commons.collections.FastArrayList$SubList)>($r4);

        $r6 = $r5.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List expected> = $r6;

        $r7 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.List get()>();

        $i1 = $i0 + 1;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.ListIterator listIterator(int)>($i1);

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: java.util.ListIterator iter> = $r8;

        $i3 = (int) -1;

        r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: int lastReturnedIndex> = $i3;

        return;
    }
}
