public class ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered extends java.lang.Object implements ucar.nc2.ft.NestedPointFeatureCollectionIterator
{
    private ucar.nc2.ft.NestedPointFeatureCollectionIterator npfciter;
    private ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter filter;
    private ucar.nc2.ft.NestedPointFeatureCollection pointFeatureCollection;
    private boolean done;

    void <init>(ucar.nc2.ft.NestedPointFeatureCollectionIterator, ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter)
    {
        ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered r0;
        ucar.nc2.ft.NestedPointFeatureCollectionIterator r1;
        ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter r2;

        r0 := @this: ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered;

        r1 := @parameter0: ucar.nc2.ft.NestedPointFeatureCollectionIterator;

        r2 := @parameter1: ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: boolean done> = 0;

        r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator npfciter> = r1;

        r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter filter> = r2;

        return;
    }

    public void setBufferSize(int)
    {
        int i0;
        ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered r0;
        ucar.nc2.ft.NestedPointFeatureCollectionIterator $r1;

        r0 := @this: ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator npfciter>;

        interfaceinvoke $r1.<ucar.nc2.ft.NestedPointFeatureCollectionIterator: void setBufferSize(int)>(i0);

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered r0;
        ucar.nc2.ft.NestedPointFeatureCollection $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered;

        $z0 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: boolean done>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = specialinvoke r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollection nextFilteredPointFeatureCollection()>();

        r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollection pointFeatureCollection> = $r1;

        $r2 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollection pointFeatureCollection>;

        if $r2 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public ucar.nc2.ft.NestedPointFeatureCollection next() throws java.io.IOException
    {
        ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered r0;
        ucar.nc2.ft.NestedPointFeatureCollection $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered;

        $z0 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: boolean done>;

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollection pointFeatureCollection>;

     label2:
        return $r1;
    }

    private boolean filter(ucar.nc2.ft.NestedPointFeatureCollection)
    {
        ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered r0;
        ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter $r1, $r3;
        ucar.nc2.ft.NestedPointFeatureCollection r2;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered;

        r2 := @parameter0: ucar.nc2.ft.NestedPointFeatureCollection;

        $r1 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter filter>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter filter>;

        $z0 = interfaceinvoke $r3.<ucar.nc2.ft.NestedPointFeatureCollectionIterator$Filter: boolean filter(ucar.nc2.ft.NestedPointFeatureCollection)>(r2);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private ucar.nc2.ft.NestedPointFeatureCollection nextFilteredPointFeatureCollection() throws java.io.IOException
    {
        ucar.nc2.ft.NestedPointFeatureCollectionIterator $r1, $r2, $r3, $r5, $r6;
        ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered r0;
        ucar.nc2.ft.NestedPointFeatureCollection $r4, r7;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered;

        $r1 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator npfciter>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator npfciter>;

        $z0 = interfaceinvoke $r2.<ucar.nc2.ft.NestedPointFeatureCollectionIterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r3 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator npfciter>;

        $r4 = interfaceinvoke $r3.<ucar.nc2.ft.NestedPointFeatureCollectionIterator: ucar.nc2.ft.NestedPointFeatureCollection next()>();

        r7 = $r4;

        $z1 = specialinvoke r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: boolean filter(ucar.nc2.ft.NestedPointFeatureCollection)>($r4);

        if $z1 != 0 goto label4;

        $r5 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator npfciter>;

        $z2 = interfaceinvoke $r5.<ucar.nc2.ft.NestedPointFeatureCollectionIterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        return null;

     label3:
        $r6 = r0.<ucar.nc2.ft.point.NestedPointCollectionIteratorFiltered: ucar.nc2.ft.NestedPointFeatureCollectionIterator npfciter>;

        r7 = interfaceinvoke $r6.<ucar.nc2.ft.NestedPointFeatureCollectionIterator: ucar.nc2.ft.NestedPointFeatureCollection next()>();

     label4:
        return r7;
    }
}
