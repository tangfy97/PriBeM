public class jena.spatialindexer extends arq.cmdline.CmdARQ
{
    private static org.slf4j.Logger log;
    public static final arq.cmdline.ArgDecl assemblerDescDecl;
    protected org.apache.jena.query.spatial.DatasetGraphSpatial dataset;
    protected org.apache.jena.query.spatial.SpatialIndex spatialIndex;
    protected org.apache.jena.query.spatial.SpatialIndexContext context;
    protected jena.spatialindexer$ProgressMonitor progressMonitor;

    public static transient void main(java.lang.String[])
    {
        java.lang.String[] r1;
        jena.spatialindexer $r0;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <org.apache.jena.query.spatial.SpatialQuery: void init()>();

        $r0 = new jena.spatialindexer;

        specialinvoke $r0.<jena.spatialindexer: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<jena.spatialindexer: void mainRun()>();

        return;
    }

    public static transient void testMain(java.lang.String[])
    {
        java.lang.String[] r1;
        jena.spatialindexer $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new jena.spatialindexer;

        specialinvoke $r0.<jena.spatialindexer: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<jena.spatialindexer: void mainMethod()>();

        return;
    }

    protected void <init>(java.lang.String[])
    {
        jena.spatialindexer r0;
        arq.cmdline.ArgDecl $r2;
        jena.spatialindexer$ProgressMonitor $r3;
        java.lang.String[] r1;

        r0 := @this: jena.spatialindexer;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<arq.cmdline.CmdARQ: void <init>(java.lang.String[])>(r1);

        r0.<jena.spatialindexer: org.apache.jena.query.spatial.DatasetGraphSpatial dataset> = null;

        r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndex spatialIndex> = null;

        r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndexContext context> = null;

        $r2 = <jena.spatialindexer: arq.cmdline.ArgDecl assemblerDescDecl>;

        specialinvoke r0.<arq.cmdline.CmdARQ: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r2, "--desc=", "Assembler description file");

        $r3 = new jena.spatialindexer$ProgressMonitor;

        specialinvoke $r3.<jena.spatialindexer$ProgressMonitor: void <init>(java.lang.String)>("properties indexed");

        r0.<jena.spatialindexer: jena.spatialindexer$ProgressMonitor progressMonitor> = $r3;

        return;
    }

    protected void processModulesAndArgs()
    {
        org.apache.jena.query.spatial.SpatialIndex $r7, $r8, $r10;
        arq.cmdline.ArgDecl $r1, $r15, $r18;
        org.apache.jena.query.spatial.DatasetGraphSpatial $r4, $r5, $r6;
        int $i0, $i1, $i2;
        java.lang.String r21;
        boolean $z0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r3;
        org.apache.jena.query.spatial.SpatialIndexContext $r9;
        java.util.List $r16, $r17;
        jena.spatialindexer r0;
        arq.cmd.CmdException $r11, $r12, $r13, $r14, $r19, $r20;
        com.hp.hpl.jena.query.Dataset $r2;

        r0 := @this: jena.spatialindexer;

        specialinvoke r0.<arq.cmdline.CmdARQ: void processModulesAndArgs()>();

        $r1 = <jena.spatialindexer: arq.cmdline.ArgDecl assemblerDescDecl>;

        $z0 = specialinvoke r0.<arq.cmdline.CmdARQ: boolean contains(arq.cmdline.ArgDecl)>($r1);

        if $z0 == 0 goto label3;

        $r15 = <jena.spatialindexer: arq.cmdline.ArgDecl assemblerDescDecl>;

        $r16 = virtualinvoke r0.<jena.spatialindexer: java.util.List getValues(arq.cmdline.ArgDecl)>($r15);

        $i1 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i1 == 1 goto label1;

        $r20 = new arq.cmd.CmdException;

        specialinvoke $r20.<arq.cmd.CmdException: void <init>(java.lang.String)>("Multiple assembler descriptions given");

        throw $r20;

     label1:
        $r17 = virtualinvoke r0.<jena.spatialindexer: java.util.List getPositional()>();

        $i2 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i2 == 0 goto label2;

        $r19 = new arq.cmd.CmdException;

        specialinvoke $r19.<arq.cmd.CmdException: void <init>(java.lang.String)>("Additional assembler descriptions given");

        throw $r19;

     label2:
        $r18 = <jena.spatialindexer: arq.cmdline.ArgDecl assemblerDescDecl>;

        r21 = virtualinvoke r0.<jena.spatialindexer: java.lang.String getValue(arq.cmdline.ArgDecl)>($r18);

        goto label5;

     label3:
        $i0 = virtualinvoke r0.<jena.spatialindexer: int getNumPositional()>();

        if $i0 == 1 goto label4;

        $r14 = new arq.cmd.CmdException;

        specialinvoke $r14.<arq.cmd.CmdException: void <init>(java.lang.String)>("Multiple assembler descriptions given");

        throw $r14;

     label4:
        r21 = virtualinvoke r0.<jena.spatialindexer: java.lang.String getPositionalArg(int)>(0);

     label5:
        if r21 != null goto label6;

        $r13 = new arq.cmd.CmdException;

        specialinvoke $r13.<arq.cmd.CmdException: void <init>(java.lang.String)>("No dataset specified");

        throw $r13;

     label6:
        $r2 = staticinvoke <org.apache.jena.query.spatial.SpatialDatasetFactory: com.hp.hpl.jena.query.Dataset create(java.lang.String)>(r21);

        if $r2 != null goto label7;

        $r12 = new arq.cmd.CmdException;

        specialinvoke $r12.<arq.cmd.CmdException: void <init>(java.lang.String)>("No dataset description found");

        throw $r12;

     label7:
        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

        $r4 = (org.apache.jena.query.spatial.DatasetGraphSpatial) $r3;

        $r5 = (org.apache.jena.query.spatial.DatasetGraphSpatial) $r4;

        r0.<jena.spatialindexer: org.apache.jena.query.spatial.DatasetGraphSpatial dataset> = $r5;

        $r6 = r0.<jena.spatialindexer: org.apache.jena.query.spatial.DatasetGraphSpatial dataset>;

        $r7 = virtualinvoke $r6.<org.apache.jena.query.spatial.DatasetGraphSpatial: org.apache.jena.query.spatial.SpatialIndex getSpatialIndex()>();

        r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndex spatialIndex> = $r7;

        $r8 = r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndex spatialIndex>;

        if $r8 != null goto label8;

        $r11 = new arq.cmd.CmdException;

        specialinvoke $r11.<arq.cmd.CmdException: void <init>(java.lang.String)>("Dataset has no text index");

        throw $r11;

     label8:
        $r9 = new org.apache.jena.query.spatial.SpatialIndexContext;

        $r10 = r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndex spatialIndex>;

        specialinvoke $r9.<org.apache.jena.query.spatial.SpatialIndexContext: void <init>(org.apache.jena.query.spatial.SpatialIndex)>($r10);

        r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndexContext context> = $r9;

        return;
    }

    protected java.lang.String getSummary()
    {
        jena.spatialindexer r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: jena.spatialindexer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<jena.spatialindexer: java.lang.String getCommandName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" assemblerFile");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void exec()
    {
        org.apache.jena.query.spatial.SpatialIndex $r1, $r8;
        org.apache.jena.query.spatial.DatasetGraphSpatial $r6;
        com.hp.hpl.jena.graph.Node $r2, $r3, $r4, $r5, $r13, $r14, $r15, $r16;
        boolean $z0;
        java.util.Iterator $r7;
        org.apache.jena.query.spatial.SpatialIndexContext $r12;
        com.hp.hpl.jena.sparql.core.Quad r11;
        jena.spatialindexer r0;
        jena.spatialindexer$ProgressMonitor $r9, $r17;
        java.lang.Object $r10;

        r0 := @this: jena.spatialindexer;

        $r1 = r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndex spatialIndex>;

        interfaceinvoke $r1.<org.apache.jena.query.spatial.SpatialIndex: void startIndexing()>();

        $r6 = r0.<jena.spatialindexer: org.apache.jena.query.spatial.DatasetGraphSpatial dataset>;

        $r5 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r4 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r3 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r2 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r7 = virtualinvoke $r6.<org.apache.jena.query.spatial.DatasetGraphSpatial: java.util.Iterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r5, $r4, $r3, $r2);

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.hp.hpl.jena.sparql.core.Quad) $r10;

        $r12 = r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndexContext context>;

        $r13 = virtualinvoke r11.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $r14 = virtualinvoke r11.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getSubject()>();

        $r15 = virtualinvoke r11.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r16 = virtualinvoke r11.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getObject()>();

        virtualinvoke $r12.<org.apache.jena.query.spatial.SpatialIndexContext: void index(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r13, $r14, $r15, $r16);

        $r17 = r0.<jena.spatialindexer: jena.spatialindexer$ProgressMonitor progressMonitor>;

        virtualinvoke $r17.<jena.spatialindexer$ProgressMonitor: void progressByOne()>();

        goto label1;

     label2:
        $r8 = r0.<jena.spatialindexer: org.apache.jena.query.spatial.SpatialIndex spatialIndex>;

        interfaceinvoke $r8.<org.apache.jena.query.spatial.SpatialIndex: void finishIndexing()>();

        $r9 = r0.<jena.spatialindexer: jena.spatialindexer$ProgressMonitor progressMonitor>;

        virtualinvoke $r9.<jena.spatialindexer$ProgressMonitor: void close()>();

        return;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <jena.spatialindexer: org.slf4j.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        arq.cmdline.ArgDecl $r1;
        java.lang.String[] $r2;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Ljena/spatialindexer;");

        <jena.spatialindexer: org.slf4j.Logger log> = $r0;

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "dataset";

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "desc", $r2);

        <jena.spatialindexer: arq.cmdline.ArgDecl assemblerDescDecl> = $r1;

        return;
    }
}
