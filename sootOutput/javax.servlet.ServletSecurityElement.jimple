public class javax.servlet.ServletSecurityElement extends javax.servlet.HttpConstraintElement
{
    private java.util.Collection methodNames;
    private java.util.Collection methodConstraints;

    public void <init>()
    {
        java.util.HashSet $r1;
        java.util.Set $r2;
        javax.servlet.ServletSecurityElement r0;

        r0 := @this: javax.servlet.ServletSecurityElement;

        specialinvoke r0.<javax.servlet.HttpConstraintElement: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints> = $r1;

        $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodNames> = $r2;

        return;
    }

    public void <init>(javax.servlet.HttpConstraintElement)
    {
        java.util.HashSet $r5;
        javax.servlet.HttpConstraintElement r1;
        java.util.Set $r6;
        javax.servlet.ServletSecurityElement r0;
        java.lang.String[] $r4;
        javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic $r2;
        javax.servlet.'annotation'.ServletSecurity$TransportGuarantee $r3;

        r0 := @this: javax.servlet.ServletSecurityElement;

        r1 := @parameter0: javax.servlet.HttpConstraintElement;

        $r2 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic getEmptyRoleSemantic()>();

        $r3 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: javax.servlet.'annotation'.ServletSecurity$TransportGuarantee getTransportGuarantee()>();

        $r4 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: java.lang.String[] getRolesAllowed()>();

        specialinvoke r0.<javax.servlet.HttpConstraintElement: void <init>(javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic,javax.servlet.'annotation'.ServletSecurity$TransportGuarantee,java.lang.String[])>($r2, $r3, $r4);

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodNames> = $r6;

        return;
    }

    public void <init>(java.util.Collection)
    {
        java.util.HashSet $r5;
        java.util.Collection r1, $r2, $r3, $r4;
        javax.servlet.ServletSecurityElement r0;

        r0 := @this: javax.servlet.ServletSecurityElement;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<javax.servlet.HttpConstraintElement: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.util.HashSet;

        $r4 = $r5;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        goto label2;

     label1:
        $r4 = r1;

     label2:
        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints> = $r4;

        $r2 = r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints>;

        $r3 = specialinvoke r0.<javax.servlet.ServletSecurityElement: java.util.Collection checkMethodNames(java.util.Collection)>($r2);

        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodNames> = $r3;

        return;
    }

    public void <init>(javax.servlet.HttpConstraintElement, java.util.Collection)
    {
        javax.servlet.HttpConstraintElement r1;
        java.util.Collection r5, $r6, $r7, $r8;
        java.lang.String[] $r4;
        javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic $r2;
        javax.servlet.'annotation'.ServletSecurity$TransportGuarantee $r3;
        java.util.HashSet $r9;
        javax.servlet.ServletSecurityElement r0;

        r0 := @this: javax.servlet.ServletSecurityElement;

        r1 := @parameter0: javax.servlet.HttpConstraintElement;

        r5 := @parameter1: java.util.Collection;

        $r2 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic getEmptyRoleSemantic()>();

        $r3 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: javax.servlet.'annotation'.ServletSecurity$TransportGuarantee getTransportGuarantee()>();

        $r4 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: java.lang.String[] getRolesAllowed()>();

        specialinvoke r0.<javax.servlet.HttpConstraintElement: void <init>(javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic,javax.servlet.'annotation'.ServletSecurity$TransportGuarantee,java.lang.String[])>($r2, $r3, $r4);

        if r5 != null goto label1;

        $r9 = new java.util.HashSet;

        $r8 = $r9;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        goto label2;

     label1:
        $r8 = r5;

     label2:
        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints> = $r8;

        $r6 = r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints>;

        $r7 = specialinvoke r0.<javax.servlet.ServletSecurityElement: java.util.Collection checkMethodNames(java.util.Collection)>($r6);

        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodNames> = $r7;

        return;
    }

    public void <init>(javax.servlet.'annotation'.ServletSecurity)
    {
        javax.servlet.HttpConstraintElement $r16;
        java.lang.String[] $r7, $r19;
        javax.servlet.'annotation'.ServletSecurity$TransportGuarantee $r5, $r18;
        java.util.HashSet $r8;
        int i0, i1;
        javax.servlet.ServletSecurityElement r0;
        java.lang.String $r15;
        javax.servlet.'annotation'.HttpMethodConstraint[] $r9;
        java.util.Collection $r10, $r11, $r14;
        javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic $r3, $r17;
        javax.servlet.HttpMethodConstraintElement $r13;
        javax.servlet.'annotation'.ServletSecurity r1;
        javax.servlet.'annotation'.HttpConstraint $r2, $r4, $r6;
        javax.servlet.'annotation'.HttpMethodConstraint r12;

        r0 := @this: javax.servlet.ServletSecurityElement;

        r1 := @parameter0: javax.servlet.'annotation'.ServletSecurity;

        $r2 = interfaceinvoke r1.<javax.servlet.'annotation'.ServletSecurity: javax.servlet.'annotation'.HttpConstraint value()>();

        $r3 = interfaceinvoke $r2.<javax.servlet.'annotation'.HttpConstraint: javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic value()>();

        $r4 = interfaceinvoke r1.<javax.servlet.'annotation'.ServletSecurity: javax.servlet.'annotation'.HttpConstraint value()>();

        $r5 = interfaceinvoke $r4.<javax.servlet.'annotation'.HttpConstraint: javax.servlet.'annotation'.ServletSecurity$TransportGuarantee transportGuarantee()>();

        $r6 = interfaceinvoke r1.<javax.servlet.'annotation'.ServletSecurity: javax.servlet.'annotation'.HttpConstraint value()>();

        $r7 = interfaceinvoke $r6.<javax.servlet.'annotation'.HttpConstraint: java.lang.String[] rolesAllowed()>();

        specialinvoke r0.<javax.servlet.HttpConstraintElement: void <init>(javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic,javax.servlet.'annotation'.ServletSecurity$TransportGuarantee,java.lang.String[])>($r3, $r5, $r7);

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints> = $r8;

        $r9 = interfaceinvoke r1.<javax.servlet.'annotation'.ServletSecurity: javax.servlet.'annotation'.HttpMethodConstraint[] httpMethodConstraints()>();

        i0 = lengthof $r9;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r12 = $r9[i1];

        $r14 = r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints>;

        $r13 = new javax.servlet.HttpMethodConstraintElement;

        $r15 = interfaceinvoke r12.<javax.servlet.'annotation'.HttpMethodConstraint: java.lang.String value()>();

        $r16 = new javax.servlet.HttpConstraintElement;

        $r17 = interfaceinvoke r12.<javax.servlet.'annotation'.HttpMethodConstraint: javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic emptyRoleSemantic()>();

        $r18 = interfaceinvoke r12.<javax.servlet.'annotation'.HttpMethodConstraint: javax.servlet.'annotation'.ServletSecurity$TransportGuarantee transportGuarantee()>();

        $r19 = interfaceinvoke r12.<javax.servlet.'annotation'.HttpMethodConstraint: java.lang.String[] rolesAllowed()>();

        specialinvoke $r16.<javax.servlet.HttpConstraintElement: void <init>(javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic,javax.servlet.'annotation'.ServletSecurity$TransportGuarantee,java.lang.String[])>($r17, $r18, $r19);

        specialinvoke $r13.<javax.servlet.HttpMethodConstraintElement: void <init>(java.lang.String,javax.servlet.HttpConstraintElement)>($r15, $r16);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r13);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r10 = r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints>;

        $r11 = specialinvoke r0.<javax.servlet.ServletSecurityElement: java.util.Collection checkMethodNames(java.util.Collection)>($r10);

        r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodNames> = $r11;

        return;
    }

    public java.util.Collection getHttpMethodConstraints()
    {
        javax.servlet.ServletSecurityElement r0;
        java.util.Collection $r1, $r2;

        r0 := @this: javax.servlet.ServletSecurityElement;

        $r1 = r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodConstraints>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public java.util.Collection getMethodNames()
    {
        javax.servlet.ServletSecurityElement r0;
        java.util.Collection $r1, $r2;

        r0 := @this: javax.servlet.ServletSecurityElement;

        $r1 = r0.<javax.servlet.ServletSecurityElement: java.util.Collection methodNames>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    private java.util.Collection checkMethodNames(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection r1;
        java.lang.IllegalArgumentException $r6;
        javax.servlet.HttpMethodConstraintElement r4;
        java.util.HashSet $r0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r9;
        javax.servlet.ServletSecurityElement r11;
        java.lang.String $r5, $r10;
        boolean $z0, $z1;

        r11 := @this: javax.servlet.ServletSecurityElement;

        r1 := @parameter0: java.util.Collection;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javax.servlet.HttpMethodConstraintElement) $r3;

        $r5 = virtualinvoke r4.<javax.servlet.HttpMethodConstraintElement: java.lang.String getMethodName()>();

        $z1 = interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate HTTP method name: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        goto label1;

     label3:
        return $r0;
    }
}
