public class ucar.unidata.geoloc.projection.Mercator extends ucar.unidata.geoloc.ProjectionImpl
{
    private double lon0;
    private double par;
    private double par_r;
    private double A;
    private double falseEasting;
    private double falseNorthing;
    private ucar.unidata.geoloc.LatLonPointImpl origin;

    public ucar.unidata.geoloc.ProjectionImpl constructCopy()
    {
        ucar.unidata.geoloc.projection.Mercator $r0, r1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: ucar.unidata.geoloc.projection.Mercator;

        $r0 = new ucar.unidata.geoloc.projection.Mercator;

        $d0 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Mercator: double getOriginLon()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Mercator: double getParallel()>();

        $d2 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Mercator: double getFalseEasting()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Mercator: double getFalseNorthing()>();

        specialinvoke $r0.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        return $r0;
    }

    public void <init>()
    {
        ucar.unidata.geoloc.projection.Mercator r0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double)>(-105.0, 20.0);

        return;
    }

    public void <init>(double, double, double)
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double d0, d1, d2;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        d2 := @parameter0: double;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double)>(d0, d1);

        return;
    }

    public void <init>(double, double)
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double d0, d1;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double,double,double)>(d0, d1, 0.0, 0.0);

        return;
    }

    public void <init>(double, double, double, double)
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        byte $b0, $b1;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double d0, d1, d2, d3, $d4;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        $r1 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, d0);

        r0.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.LatLonPointImpl origin> = $r1;

        r0.<ucar.unidata.geoloc.projection.Mercator: double lon0> = d0;

        r0.<ucar.unidata.geoloc.projection.Mercator: double par> = d1;

        r0.<ucar.unidata.geoloc.projection.Mercator: double falseEasting> = d2;

        r0.<ucar.unidata.geoloc.projection.Mercator: double falseNorthing> = d3;

        $d4 = staticinvoke <java.lang.Math: double toRadians(double)>(d1);

        r0.<ucar.unidata.geoloc.projection.Mercator: double par_r> = $d4;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void precalculate()>();

        virtualinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", "mercator");

        virtualinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void addParameter(java.lang.String,double)>("longitude_of_projection_origin", d0);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void addParameter(java.lang.String,double)>("standard_parallel", d1);

        $b0 = d2 cmpl 0.0;

        if $b0 == 0 goto label1;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void addParameter(java.lang.String,double)>("false_easting", d2);

     label1:
        $b1 = d3 cmpl 0.0;

        if $b1 == 0 goto label2;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void addParameter(java.lang.String,double)>("false_northing", d3);

     label2:
        return;
    }

    private void precalculate()
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        $d1 = <ucar.unidata.geoloc.projection.Mercator: double EARTH_RADIUS>;

        $d0 = r0.<ucar.unidata.geoloc.projection.Mercator: double par_r>;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d3 = $d1 * $d2;

        r0.<ucar.unidata.geoloc.projection.Mercator: double A> = $d3;

        return;
    }

    public double getParallel()
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        $d0 = r0.<ucar.unidata.geoloc.projection.Mercator: double par>;

        return $d0;
    }

    public void setParallel(double)
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.Mercator: double par> = d0;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void precalculate()>();

        return;
    }

    public double getOriginLon()
    {
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.Mercator r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        $r1 = r0.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        return $d0;
    }

    public void setOriginLon(double)
    {
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.Mercator r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.LatLonPointImpl origin>;

        virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.Mercator: double lon0> = d0;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Mercator: void precalculate()>();

        return;
    }

    public void setOriginLat(double)
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        d0 := @parameter0: double;

        return;
    }

    public double getFalseEasting()
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        $d0 = r0.<ucar.unidata.geoloc.projection.Mercator: double falseEasting>;

        return $d0;
    }

    public void setFalseEasting(double)
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.Mercator: double falseEasting> = d0;

        return;
    }

    public double getFalseNorthing()
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        $d0 = r0.<ucar.unidata.geoloc.projection.Mercator: double falseNorthing>;

        return $d0;
    }

    public void setFalseNorthing(double)
    {
        ucar.unidata.geoloc.projection.Mercator r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.Mercator: double falseNorthing> = d0;

        return;
    }

    public java.lang.String paramsToString()
    {
        ucar.unidata.geoloc.projection.Mercator r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        java.lang.String $r4, $r7, $r9;
        double $d0;

        r2 := @this: ucar.unidata.geoloc.projection.Mercator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" origin ");

        $r3 = r2.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $r4 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parellel: ");

        $d0 = virtualinvoke r2.<ucar.unidata.geoloc.projection.Mercator: double getParallel()>();

        $r7 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>($d0, 6);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint)
    {
        byte $b0;
        ucar.unidata.geoloc.projection.Mercator r2;
        int $i1;
        ucar.unidata.geoloc.ProjectionPoint r0, r1;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2;

        r2 := @this: ucar.unidata.geoloc.projection.Mercator;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r1 := @parameter1: ucar.unidata.geoloc.ProjectionPoint;

        $z0 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d2 = $d0 * $d1;

        $b0 = $d2 cmpg 0.0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public java.lang.Object clone()
    {
        ucar.unidata.geoloc.projection.Mercator r0, r2;
        java.lang.Object $r1;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.Mercator;

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.Object clone()>();

        r2 = (ucar.unidata.geoloc.projection.Mercator) $r1;

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = virtualinvoke r0.<ucar.unidata.geoloc.projection.Mercator: double getOriginLon()>();

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, $d0);

        r2.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.LatLonPointImpl origin> = $r3;

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.unidata.geoloc.ProjectionRect $r3, $r4;
        ucar.unidata.geoloc.projection.Mercator r1, r2;
        byte $b0, $b1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3;

        r2 := @this: ucar.unidata.geoloc.projection.Mercator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ucar.unidata.geoloc.projection.Mercator;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (ucar.unidata.geoloc.projection.Mercator) r0;

        $d0 = virtualinvoke r2.<ucar.unidata.geoloc.projection.Mercator: double getParallel()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Mercator: double getParallel()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label2;

        $d2 = virtualinvoke r2.<ucar.unidata.geoloc.projection.Mercator: double getOriginLon()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Mercator: double getOriginLon()>();

        $b1 = $d2 cmpl $d3;

        if $b1 != 0 goto label2;

        $r4 = r2.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $r3 = r1.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $z1 = virtualinvoke $r4.<ucar.unidata.geoloc.ProjectionRect: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl)
    {
        byte $b0;
        ucar.unidata.geoloc.projection.Mercator r1;
        ucar.unidata.geoloc.ProjectionPointImpl r2;
        int $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18, d19;
        ucar.unidata.geoloc.LatLonPoint r0;

        r1 := @this: ucar.unidata.geoloc.projection.Mercator;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        $d4 = 90.0 - $d3;

        $d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $b0 = $d5 cmpg 1.0E-6;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        d18 = #Infinity;

        d19 = #Infinity;

        goto label2;

     label1:
        $d8 = r1.<ucar.unidata.geoloc.projection.Mercator: double A>;

        $d6 = r1.<ucar.unidata.geoloc.projection.Mercator: double lon0>;

        $d7 = $d1 - $d6;

        $d9 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double range180(double)>($d7);

        $d10 = staticinvoke <java.lang.Math: double toRadians(double)>($d9);

        d18 = $d8 * $d10;

        $d11 = r1.<ucar.unidata.geoloc.projection.Mercator: double A>;

        $d12 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d13 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double atanh(double)>($d12);

        d19 = $d11 * $d13;

     label2:
        $d14 = r1.<ucar.unidata.geoloc.projection.Mercator: double falseEasting>;

        $d17 = d18 + $d14;

        $d15 = r1.<ucar.unidata.geoloc.projection.Mercator: double falseNorthing>;

        $d16 = d19 + $d15;

        virtualinvoke r2.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d17, $d16);

        return r2;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl)
    {
        ucar.unidata.geoloc.projection.Mercator r1;
        ucar.unidata.geoloc.ProjectionPoint r0;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        ucar.unidata.geoloc.LatLonPointImpl r2;

        r1 := @this: ucar.unidata.geoloc.projection.Mercator;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r2 := @parameter1: ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = r1.<ucar.unidata.geoloc.projection.Mercator: double falseEasting>;

        d2 = $d0 - $d1;

        $d3 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d4 = r1.<ucar.unidata.geoloc.projection.Mercator: double falseNorthing>;

        d5 = $d3 - $d4;

        $d6 = r1.<ucar.unidata.geoloc.projection.Mercator: double A>;

        $d7 = d2 / $d6;

        $d8 = staticinvoke <java.lang.Math: double toDegrees(double)>($d7);

        $d9 = r1.<ucar.unidata.geoloc.projection.Mercator: double lon0>;

        d10 = $d8 + $d9;

        $d12 = neg d5;

        $d11 = r1.<ucar.unidata.geoloc.projection.Mercator: double A>;

        $d13 = $d12 / $d11;

        $d14 = staticinvoke <java.lang.Math: double exp(double)>($d13);

        $d15 = staticinvoke <java.lang.Math: double atan(double)>($d14);

        $d16 = 2.0 * $d15;

        $d17 = 1.5707963267948966 - $d16;

        $d18 = staticinvoke <java.lang.Math: double toDegrees(double)>($d17);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d18);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>(d10);

        return r2;
    }
}
