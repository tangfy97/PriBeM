class org.springframework.context.'annotation'.ConfigurationClassParser$CircularImportProblem extends org.springframework.beans.factory.parsing.Problem
{

    public void <init>(org.springframework.context.'annotation'.ConfigurationClass, java.util.Stack, org.springframework.core.type.AnnotationMetadata)
    {
        java.lang.Object[] $r1;
        org.springframework.beans.factory.parsing.Location $r10;
        org.springframework.core.type.AnnotationMetadata r14;
        java.util.Stack r2;
        org.springframework.context.'annotation'.ConfigurationClass $r4, r6, $r12;
        org.springframework.context.'annotation'.ConfigurationClassParser$CircularImportProblem r0;
        java.lang.Object $r3, $r11;
        java.lang.String $r5, $r7, $r8, $r9;
        org.springframework.core.io.Resource $r13;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassParser$CircularImportProblem;

        r6 := @parameter0: org.springframework.context.'annotation'.ConfigurationClass;

        r2 := @parameter1: java.util.Stack;

        r14 := @parameter2: org.springframework.core.type.AnnotationMetadata;

        $r1 = newarray (java.lang.Object)[4];

        $r3 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.springframework.context.'annotation'.ConfigurationClass) $r3;

        $r5 = virtualinvoke $r4.<org.springframework.context.'annotation'.ConfigurationClass: java.lang.String getSimpleName()>();

        $r1[0] = $r5;

        $r7 = virtualinvoke r6.<org.springframework.context.'annotation'.ConfigurationClass: java.lang.String getSimpleName()>();

        $r1[1] = $r7;

        $r8 = virtualinvoke r6.<org.springframework.context.'annotation'.ConfigurationClass: java.lang.String getSimpleName()>();

        $r1[2] = $r8;

        $r1[3] = r2;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("A circular @Import has been detected: Illegal attempt by @Configuration class \'%s\' to import class \'%s\' as \'%s\' is already present in the current import stack [%s]", $r1);

        $r10 = new org.springframework.beans.factory.parsing.Location;

        $r11 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();

        $r12 = (org.springframework.context.'annotation'.ConfigurationClass) $r11;

        $r13 = virtualinvoke $r12.<org.springframework.context.'annotation'.ConfigurationClass: org.springframework.core.io.Resource getResource()>();

        specialinvoke $r10.<org.springframework.beans.factory.parsing.Location: void <init>(org.springframework.core.io.Resource,java.lang.Object)>($r13, r14);

        specialinvoke r0.<org.springframework.beans.factory.parsing.Problem: void <init>(java.lang.String,org.springframework.beans.factory.parsing.Location)>($r9, $r10);

        return;
    }
}
