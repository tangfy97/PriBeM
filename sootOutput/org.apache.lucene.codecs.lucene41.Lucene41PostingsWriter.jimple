public final class org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter extends org.apache.lucene.codecs.PostingsWriterBase
{
    static final int maxSkipLevels;
    static final java.lang.String TERMS_CODEC;
    static final java.lang.String DOC_CODEC;
    static final java.lang.String POS_CODEC;
    static final java.lang.String PAY_CODEC;
    static final int VERSION_START;
    static final int VERSION_CURRENT;
    final org.apache.lucene.store.IndexOutput docOut;
    final org.apache.lucene.store.IndexOutput posOut;
    final org.apache.lucene.store.IndexOutput payOut;
    private org.apache.lucene.store.IndexOutput termsOut;
    private boolean fieldHasFreqs;
    private boolean fieldHasPositions;
    private boolean fieldHasOffsets;
    private boolean fieldHasPayloads;
    private long docTermStartFP;
    private long posTermStartFP;
    private long payTermStartFP;
    final int[] docDeltaBuffer;
    final int[] freqBuffer;
    private int docBufferUpto;
    final int[] posDeltaBuffer;
    final int[] payloadLengthBuffer;
    final int[] offsetStartDeltaBuffer;
    final int[] offsetLengthBuffer;
    private int posBufferUpto;
    private byte[] payloadBytes;
    private int payloadByteUpto;
    private int lastBlockDocID;
    private long lastBlockPosFP;
    private long lastBlockPayFP;
    private int lastBlockPosBufferUpto;
    private int lastBlockPayloadByteUpto;
    private int lastDocID;
    private int lastPosition;
    private int lastStartOffset;
    private int docCount;
    final byte[] encoded;
    private final org.apache.lucene.codecs.lucene41.ForUtil forUtil;
    private final org.apache.lucene.codecs.lucene41.Lucene41SkipWriter skipWriter;
    private final java.util.List pendingTerms;
    private final org.apache.lucene.store.RAMOutputStream bytesWriter;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.SegmentWriteState, float) throws java.io.IOException
    {
        byte[] $r20, $r44;
        org.apache.lucene.codecs.lucene41.Lucene41SkipWriter $r17;
        org.apache.lucene.index.FieldInfos $r14, $r31, $r32, $r33, $r41;
        org.apache.lucene.store.IOContext $r9, $r29, $r39;
        org.apache.lucene.index.SegmentInfo $r4, $r18, $r24, $r34;
        java.lang.Throwable $r46;
        java.util.ArrayList $r1;
        java.lang.String $r5, $r6, $r8, $r25, $r26, $r28, $r35, $r36, $r38;
        org.apache.lucene.store.RAMOutputStream $r2;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r0;
        org.apache.lucene.codecs.lucene41.ForUtil $r12;
        int[] $r15, $r16, $r23, $r42, $r43, $r45;
        org.apache.lucene.store.Directory $r7, $r27, $r37;
        java.io.Closeable[] $r21, $r47;
        boolean $z0, $z1, $z2, $z3, $z4;
        float f0;
        org.apache.lucene.index.SegmentWriteState r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.lucene.store.IndexOutput $r10, $r11, $r13, $r19, $r22, $r30, $r40, $r48, r49, r50;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        r3 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        f0 := @parameter1: float;

        specialinvoke r0.<org.apache.lucene.codecs.PostingsWriterBase: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.util.List pendingTerms> = $r1;

        $r2 = new org.apache.lucene.store.RAMOutputStream;

        specialinvoke $r2.<org.apache.lucene.store.RAMOutputStream: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter> = $r2;

        $r7 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.Directory directory>;

        $r4 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r6 = $r4.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r5 = r3.<org.apache.lucene.index.SegmentWriteState: java.lang.String segmentSuffix>;

        $r8 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r6, $r5, "doc");

        $r9 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.IOContext context>;

        $r10 = virtualinvoke $r7.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r8, $r9);

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut> = $r10;

        r49 = null;

        r50 = null;

     label01:
        $r11 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r11, "Lucene41PostingsWriterDoc", 0);

        $r12 = new org.apache.lucene.codecs.lucene41.ForUtil;

        $r13 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        specialinvoke $r12.<org.apache.lucene.codecs.lucene41.ForUtil: void <init>(float,org.apache.lucene.store.DataOutput)>(f0, $r13);

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.ForUtil forUtil> = $r12;

        $r14 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z0 = virtualinvoke $r14.<org.apache.lucene.index.FieldInfos: boolean hasProx()>();

        if $z0 == 0 goto label07;

        $i3 = <org.apache.lucene.codecs.lucene41.ForUtil: int MAX_DATA_SIZE>;

        $r23 = newarray (int)[$i3];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] posDeltaBuffer> = $r23;

        $r27 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.Directory directory>;

        $r24 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r26 = $r24.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r25 = r3.<org.apache.lucene.index.SegmentWriteState: java.lang.String segmentSuffix>;

        $r28 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r26, $r25, "pos");

        $r29 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.IOContext context>;

        $r30 = virtualinvoke $r27.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r28, $r29);

        r49 = $r30;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r30, "Lucene41PostingsWriterPos", 0);

        $r31 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z1 = virtualinvoke $r31.<org.apache.lucene.index.FieldInfos: boolean hasPayloads()>();

        if $z1 == 0 goto label02;

        $r44 = newarray (byte)[128];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes> = $r44;

        $i6 = <org.apache.lucene.codecs.lucene41.ForUtil: int MAX_DATA_SIZE>;

        $r45 = newarray (int)[$i6];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] payloadLengthBuffer> = $r45;

        goto label03;

     label02:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes> = null;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] payloadLengthBuffer> = null;

     label03:
        $r32 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z2 = virtualinvoke $r32.<org.apache.lucene.index.FieldInfos: boolean hasOffsets()>();

        if $z2 == 0 goto label04;

        $i4 = <org.apache.lucene.codecs.lucene41.ForUtil: int MAX_DATA_SIZE>;

        $r42 = newarray (int)[$i4];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetStartDeltaBuffer> = $r42;

        $i5 = <org.apache.lucene.codecs.lucene41.ForUtil: int MAX_DATA_SIZE>;

        $r43 = newarray (int)[$i5];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetLengthBuffer> = $r43;

        goto label05;

     label04:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetStartDeltaBuffer> = null;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetLengthBuffer> = null;

     label05:
        $r33 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z3 = virtualinvoke $r33.<org.apache.lucene.index.FieldInfos: boolean hasPayloads()>();

        if $z3 != 0 goto label06;

        $r41 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z4 = virtualinvoke $r41.<org.apache.lucene.index.FieldInfos: boolean hasOffsets()>();

        if $z4 == 0 goto label08;

     label06:
        $r37 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.Directory directory>;

        $r34 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r36 = $r34.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r35 = r3.<org.apache.lucene.index.SegmentWriteState: java.lang.String segmentSuffix>;

        $r38 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r36, $r35, "pay");

        $r39 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.IOContext context>;

        $r40 = virtualinvoke $r37.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r38, $r39);

        r50 = $r40;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r40, "Lucene41PostingsWriterPay", 0);

        goto label08;

     label07:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] posDeltaBuffer> = null;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] payloadLengthBuffer> = null;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetStartDeltaBuffer> = null;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetLengthBuffer> = null;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes> = null;

     label08:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut> = r50;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut> = r49;

     label09:
        if 1 != 0 goto label13;

        $r21 = newarray (java.io.Closeable)[3];

        $r22 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        $r21[0] = $r22;

        $r21[1] = r49;

        $r21[2] = r50;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r21);

        goto label13;

     label10:
        $r46 := @caughtexception;

     label11:
        if 0 != 0 goto label12;

        $r47 = newarray (java.io.Closeable)[3];

        $r48 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        $r47[0] = $r48;

        $r47[1] = r49;

        $r47[2] = r50;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r47);

     label12:
        throw $r46;

     label13:
        $i0 = <org.apache.lucene.codecs.lucene41.ForUtil: int MAX_DATA_SIZE>;

        $r15 = newarray (int)[$i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] docDeltaBuffer> = $r15;

        $i1 = <org.apache.lucene.codecs.lucene41.ForUtil: int MAX_DATA_SIZE>;

        $r16 = newarray (int)[$i1];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] freqBuffer> = $r16;

        $r17 = new org.apache.lucene.codecs.lucene41.Lucene41SkipWriter;

        $r18 = r3.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i2 = virtualinvoke $r18.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r19 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        specialinvoke $r17.<org.apache.lucene.codecs.lucene41.Lucene41SkipWriter: void <init>(int,int,int,org.apache.lucene.store.IndexOutput,org.apache.lucene.store.IndexOutput,org.apache.lucene.store.IndexOutput)>(10, 128, $i2, $r19, r49, r50);

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.Lucene41SkipWriter skipWriter> = $r17;

        $r20 = newarray (byte)[512];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] encoded> = $r20;

        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void <init>(org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentWriteState r1;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        r1 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        specialinvoke r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: void <init>(org.apache.lucene.index.SegmentWriteState,float)>(r1, 0.0F);

        return;
    }

    public void start(org.apache.lucene.store.IndexOutput) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r0;
        org.apache.lucene.store.IndexOutput r1;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        r1 := @parameter0: org.apache.lucene.store.IndexOutput;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput termsOut> = r1;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>(r1, "Lucene41PostingsWriterTerms", 0);

        virtualinvoke r1.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(128);

        return;
    }

    public void setField(org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r2;
        org.apache.lucene.codecs.lucene41.Lucene41SkipWriter $r6;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.index.FieldInfo$IndexOptions $r1, $r3, $r4, $r5;
        org.apache.lucene.index.FieldInfo r0;

        r2 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        r0 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r3 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r3);

        if $i0 < 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasFreqs> = $z4;

        $r4 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r4);

        if $i1 < 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPositions> = $z5;

        $r5 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r5);

        if $i2 < 0 goto label5;

        $z6 = 1;

        goto label6;

     label5:
        $z6 = 0;

     label6:
        r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasOffsets> = $z6;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPayloads> = $z0;

        $r6 = r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.Lucene41SkipWriter skipWriter>;

        $z3 = r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPositions>;

        $z2 = r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasOffsets>;

        $z1 = r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPayloads>;

        virtualinvoke $r6.<org.apache.lucene.codecs.lucene41.Lucene41SkipWriter: void setField(boolean,boolean,boolean)>($z3, $z2, $z1);

        return;
    }

    public void startTerm()
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r0;
        long $l0, $l1, $l2;
        org.apache.lucene.codecs.lucene41.Lucene41SkipWriter $r4;
        int $i4;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long docTermStartFP> = $l0;

        $z0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPositions>;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $l1 = virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long posTermStartFP> = $l1;

        $z1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPayloads>;

        if $z1 != 0 goto label1;

        $z2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasOffsets>;

        if $z2 == 0 goto label2;

     label1:
        $r3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        $l2 = virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long payTermStartFP> = $l2;

     label2:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastDocID> = 0;

        $i4 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastBlockDocID> = $i4;

        $r4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.Lucene41SkipWriter skipWriter>;

        virtualinvoke $r4.<org.apache.lucene.codecs.lucene41.Lucene41SkipWriter: void resetSkip()>();

        return;
    }

    public void startDoc(int, int) throws java.io.IOException
    {
        byte[] $r14, $r18;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r0;
        org.apache.lucene.codecs.lucene41.Lucene41SkipWriter $r22;
        org.apache.lucene.index.CorruptIndexException $r24;
        org.apache.lucene.codecs.lucene41.ForUtil $r16, $r20;
        int[] $r12, $r15, $r19, $r21;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r23;
        long $l15, $l16;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i22;
        java.lang.String $r11;
        org.apache.lucene.store.IndexOutput $r8, $r13, $r17;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        i1 := @parameter0: int;

        i10 := @parameter1: int;

        $i0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastBlockDocID>;

        $i22 = (int) -1;

        if $i0 == $i22 goto label1;

        $i12 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto>;

        if $i12 != 0 goto label1;

        $r22 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.Lucene41SkipWriter skipWriter>;

        $i18 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastBlockDocID>;

        $i17 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docCount>;

        $l16 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long lastBlockPosFP>;

        $l15 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long lastBlockPayFP>;

        $i14 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastBlockPosBufferUpto>;

        $i13 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastBlockPayloadByteUpto>;

        virtualinvoke $r22.<org.apache.lucene.codecs.lucene41.Lucene41SkipWriter: void bufferSkip(int,int,long,long,int,int)>($i18, $i17, $l16, $l15, $i14, $i13);

     label1:
        $i19 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastDocID>;

        $i20 = i1 - $i19;

        if i1 < 0 goto label2;

        $i3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docCount>;

        if $i3 <= 0 goto label3;

        if $i20 > 0 goto label3;

     label2:
        $r24 = new org.apache.lucene.index.CorruptIndexException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("docs out of order (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <= ");

        $i2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastDocID>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ) (docOut: ");

        $r8 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r11);

        throw $r24;

     label3:
        $r12 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] docDeltaBuffer>;

        $i4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto>;

        $r12[$i4] = $i20;

        $z0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasFreqs>;

        if $z0 == 0 goto label4;

        $r21 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] freqBuffer>;

        $i11 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto>;

        $r21[$i11] = i10;

     label4:
        $i5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto>;

        $i6 = $i5 + 1;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto> = $i6;

        $i7 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docCount>;

        $i8 = $i7 + 1;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docCount> = $i8;

        $i9 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto>;

        if $i9 != 128 goto label5;

        $r16 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.ForUtil forUtil>;

        $r15 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] docDeltaBuffer>;

        $r14 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] encoded>;

        $r13 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        virtualinvoke $r16.<org.apache.lucene.codecs.lucene41.ForUtil: void writeBlock(int[],byte[],org.apache.lucene.store.IndexOutput)>($r15, $r14, $r13);

        $z1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasFreqs>;

        if $z1 == 0 goto label5;

        $r20 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.ForUtil forUtil>;

        $r19 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] freqBuffer>;

        $r18 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] encoded>;

        $r17 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        virtualinvoke $r20.<org.apache.lucene.codecs.lucene41.ForUtil: void writeBlock(int[],byte[],org.apache.lucene.store.IndexOutput)>($r19, $r18, $r17);

     label5:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastDocID> = i1;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastPosition> = 0;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastStartOffset> = 0;

        return;
    }

    public void addPosition(int, org.apache.lucene.util.BytesRef, int, int) throws java.io.IOException
    {
        byte[] $r3, $r7, $r11, $r15, $r19, $r28, $r29, $r30, $r31, $r32;
        java.lang.AssertionError $r23, $r24;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r0;
        org.apache.lucene.codecs.lucene41.ForUtil $r5, $r9, $r13, $r17;
        int[] $r1, $r4, $r8, $r12, $r16, $r21, $r22, $r26, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.util.BytesRef r25;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        org.apache.lucene.store.IndexOutput $r2, $r6, $r10, $r14, $r18, $r20;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        i0 := @parameter0: int;

        r25 := @parameter1: org.apache.lucene.util.BytesRef;

        i6 := @parameter2: int;

        i10 := @parameter3: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] posDeltaBuffer>;

        $i3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        $i1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastPosition>;

        $i2 = i0 - $i1;

        $r1[$i3] = $i2;

        $z0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPayloads>;

        if $z0 == 0 goto label04;

        if r25 == null goto label01;

        $i15 = r25.<org.apache.lucene.util.BytesRef: int length>;

        if $i15 != 0 goto label02;

     label01:
        $r26 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] payloadLengthBuffer>;

        $i14 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        $r26[$i14] = 0;

        goto label04;

     label02:
        $r27 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] payloadLengthBuffer>;

        $i17 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        $i16 = r25.<org.apache.lucene.util.BytesRef: int length>;

        $r27[$i17] = $i16;

        $i19 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto>;

        $i18 = r25.<org.apache.lucene.util.BytesRef: int length>;

        $i21 = $i19 + $i18;

        $r28 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes>;

        $i20 = lengthof $r28;

        if $i21 <= $i20 goto label03;

        $r31 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes>;

        $i29 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto>;

        $i28 = r25.<org.apache.lucene.util.BytesRef: int length>;

        $i30 = $i29 + $i28;

        $r32 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r31, $i30);

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes> = $r32;

     label03:
        $r30 = r25.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i24 = r25.<org.apache.lucene.util.BytesRef: int offset>;

        $r29 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes>;

        $i23 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto>;

        $i22 = r25.<org.apache.lucene.util.BytesRef: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r30, $i24, $r29, $i23, $i22);

        $i26 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto>;

        $i25 = r25.<org.apache.lucene.util.BytesRef: int length>;

        $i27 = $i26 + $i25;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto> = $i27;

     label04:
        $z5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasOffsets>;

        if $z5 == 0 goto label07;

        $z3 = <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled>;

        if $z3 != 0 goto label05;

        $i13 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastStartOffset>;

        if i6 >= $i13 goto label05;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label05:
        $z4 = <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled>;

        if $z4 != 0 goto label06;

        if i10 >= i6 goto label06;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label06:
        $r21 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetStartDeltaBuffer>;

        $i9 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        $i7 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastStartOffset>;

        $i8 = i6 - $i7;

        $r21[$i9] = $i8;

        $r22 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetLengthBuffer>;

        $i12 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        $i11 = i10 - i6;

        $r22[$i12] = $i11;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastStartOffset> = i6;

     label07:
        $i31 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        $i32 = $i31 + 1;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto> = $i32;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastPosition> = i0;

        $i33 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        if $i33 != 128 goto label10;

        $r5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.ForUtil forUtil>;

        $r4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] posDeltaBuffer>;

        $r3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] encoded>;

        $r2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        virtualinvoke $r5.<org.apache.lucene.codecs.lucene41.ForUtil: void writeBlock(int[],byte[],org.apache.lucene.store.IndexOutput)>($r4, $r3, $r2);

        $z1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPayloads>;

        if $z1 == 0 goto label08;

        $r17 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.ForUtil forUtil>;

        $r16 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] payloadLengthBuffer>;

        $r15 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] encoded>;

        $r14 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        virtualinvoke $r17.<org.apache.lucene.codecs.lucene41.ForUtil: void writeBlock(int[],byte[],org.apache.lucene.store.IndexOutput)>($r16, $r15, $r14);

        $r18 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        $i4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto>;

        virtualinvoke $r18.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i4);

        $r20 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        $r19 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes>;

        $i5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto>;

        virtualinvoke $r20.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>($r19, 0, $i5);

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto> = 0;

     label08:
        $z2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasOffsets>;

        if $z2 == 0 goto label09;

        $r9 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.ForUtil forUtil>;

        $r8 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetStartDeltaBuffer>;

        $r7 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] encoded>;

        $r6 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        virtualinvoke $r9.<org.apache.lucene.codecs.lucene41.ForUtil: void writeBlock(int[],byte[],org.apache.lucene.store.IndexOutput)>($r8, $r7, $r6);

        $r13 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.ForUtil forUtil>;

        $r12 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetLengthBuffer>;

        $r11 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] encoded>;

        $r10 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        virtualinvoke $r13.<org.apache.lucene.codecs.lucene41.ForUtil: void writeBlock(int[],byte[],org.apache.lucene.store.IndexOutput)>($r12, $r11, $r10);

     label09:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto> = 0;

     label10:
        return;
    }

    public void finishDoc() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r0;
        long $l2, $l5;
        int $i0, $i1, $i3, $i4;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        $i0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto>;

        if $i0 != 128 goto label3;

        $i1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastDocID>;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastBlockDocID> = $i1;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        $l5 = virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long lastBlockPayFP> = $l5;

     label1:
        $r3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $l2 = virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long lastBlockPosFP> = $l2;

        $i3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastBlockPosBufferUpto> = $i3;

        $i4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto>;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastBlockPayloadByteUpto> = $i4;

     label2:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto> = 0;

     label3:
        return;
    }

    public void finishTerm(org.apache.lucene.codecs.TermStats) throws java.io.IOException
    {
        byte[] $r16;
        org.apache.lucene.codecs.lucene41.Lucene41SkipWriter $r5;
        byte $b3, $b9, $b24;
        java.lang.StringBuilder $r32, $r33, $r34, $r38;
        long $l2, $l4, $l5, $l6, $l7, $l8, $l21, $l22, $l23, l38, l46, l47;
        java.lang.AssertionError $r37, $r39, $r40, $r41;
        org.apache.lucene.codecs.TermStats r0;
        java.lang.String $r35;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r1;
        int[] $r7, $r9, $r10, $r14, $r22, $r23, $r24, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm $r42;
        java.util.List $r3;
        int $i0, $i1, $i10, $i11, $i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i39, i40, i41, i42, i43, i44, $i45, $i49, $i50, $i52, $i54, $i55;
        org.apache.lucene.store.IndexOutput $r4, $r8, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r25, $r26, $r27, $r28;

        r1 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        r0 := @parameter0: org.apache.lucene.codecs.TermStats;

        $z0 = <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i34 = r0.<org.apache.lucene.codecs.TermStats: int docFreq>;

        if $i34 > 0 goto label01;

        $r37 = new java.lang.AssertionError;

        specialinvoke $r37.<java.lang.AssertionError: void <init>()>();

        throw $r37;

     label01:
        $z1 = <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $i31 = r0.<org.apache.lucene.codecs.TermStats: int docFreq>;

        $i30 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docCount>;

        if $i31 == $i30 goto label02;

        $r39 = new java.lang.AssertionError;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $i32 = r0.<org.apache.lucene.codecs.TermStats: int docFreq>;

        $r32 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i32);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $i33 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docCount>;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.AssertionError: void <init>(java.lang.Object)>($r35);

        throw $r39;

     label02:
        $i0 = r0.<org.apache.lucene.codecs.TermStats: int docFreq>;

        if $i0 != 1 goto label03;

        $r29 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] docDeltaBuffer>;

        i35 = $r29[0];

        goto label08;

     label03:
        $i49 = (int) -1;

        i35 = $i49;

        i36 = 0;

     label04:
        $i1 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto>;

        if i36 >= $i1 goto label08;

        $r22 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] docDeltaBuffer>;

        i25 = $r22[i36];

        $r23 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] freqBuffer>;

        i37 = $r23[i36];

        $z8 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasFreqs>;

        if $z8 != 0 goto label05;

        $r28 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        virtualinvoke $r28.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i25);

        goto label07;

     label05:
        $r24 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] freqBuffer>;

        $i26 = $r24[i36];

        if $i26 != 1 goto label06;

        $r27 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        $i28 = i25 << 1;

        $i29 = $i28 | 1;

        virtualinvoke $r27.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i29);

        goto label07;

     label06:
        $r25 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        $i27 = i25 << 1;

        virtualinvoke $r25.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i27);

        $r26 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        virtualinvoke $r26.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i37);

     label07:
        i36 = i36 + 1;

        goto label04;

     label08:
        $z2 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPositions>;

        if $z2 == 0 goto label23;

        $z3 = <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled>;

        if $z3 != 0 goto label09;

        $l23 = r0.<org.apache.lucene.codecs.TermStats: long totalTermFreq>;

        $b24 = $l23 cmp -1L;

        if $b24 != 0 goto label09;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label09:
        $l8 = r0.<org.apache.lucene.codecs.TermStats: long totalTermFreq>;

        $b9 = $l8 cmp 128L;

        $i50 = (int) $b9;

        if $i50 <= 0 goto label10;

        $r20 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $l21 = virtualinvoke $r20.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $l22 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long posTermStartFP>;

        l38 = $l21 - $l22;

        goto label11;

     label10:
        l38 = -1L;

     label11:
        $i10 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        if $i10 <= 0 goto label24;

        $i52 = (int) -1;

        i39 = $i52;

        $i54 = (int) -1;

        i40 = $i54;

        i41 = 0;

        i42 = 0;

     label12:
        $i11 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto>;

        if i42 >= $i11 goto label20;

        $r7 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] posDeltaBuffer>;

        i13 = $r7[i42];

        $z6 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPayloads>;

        if $z6 == 0 goto label16;

        $r14 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] payloadLengthBuffer>;

        i43 = $r14[i42];

        if i43 == i39 goto label13;

        i39 = i43;

        $r18 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $i19 = i13 << 1;

        $i20 = $i19 | 1;

        virtualinvoke $r18.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i20);

        $r19 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        virtualinvoke $r19.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i43);

        goto label14;

     label13:
        $r15 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $i18 = i13 << 1;

        virtualinvoke $r15.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i18);

     label14:
        if i43 == 0 goto label15;

        $r17 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $r16 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: byte[] payloadBytes>;

        virtualinvoke $r17.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>($r16, i41, i43);

        i41 = i41 + i43;

     label15:
        goto label17;

     label16:
        $r8 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        virtualinvoke $r8.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i13);

     label17:
        $z7 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasOffsets>;

        if $z7 == 0 goto label19;

        $r9 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetStartDeltaBuffer>;

        i44 = $r9[i42];

        $r10 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int[] offsetLengthBuffer>;

        i14 = $r10[i42];

        if i14 != i40 goto label18;

        $r13 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $i17 = i44 << 1;

        virtualinvoke $r13.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i17);

        goto label19;

     label18:
        $r11 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $i15 = i44 << 1;

        $i16 = $i15 | 1;

        virtualinvoke $r11.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i16);

        $r12 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        virtualinvoke $r12.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i14);

        i40 = i14;

     label19:
        i42 = i42 + 1;

        goto label12;

     label20:
        $z4 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPayloads>;

        if $z4 == 0 goto label22;

        $z5 = <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled>;

        if $z5 != 0 goto label21;

        $i12 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto>;

        if i41 == $i12 goto label21;

        $r41 = new java.lang.AssertionError;

        specialinvoke $r41.<java.lang.AssertionError: void <init>()>();

        throw $r41;

     label21:
        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int payloadByteUpto> = 0;

     label22:
        goto label24;

     label23:
        l38 = -1L;

     label24:
        $i45 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docCount>;

        if $i45 <= 128 goto label25;

        $r5 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.codecs.lucene41.Lucene41SkipWriter skipWriter>;

        $r4 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        $l6 = virtualinvoke $r5.<org.apache.lucene.codecs.lucene41.Lucene41SkipWriter: long writeSkip(org.apache.lucene.store.IndexOutput)>($r4);

        $l7 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long docTermStartFP>;

        l46 = $l6 - $l7;

        goto label26;

     label25:
        l46 = -1L;

     label26:
        $l2 = r0.<org.apache.lucene.codecs.TermStats: long totalTermFreq>;

        $b3 = $l2 cmp 128L;

        $i55 = (int) $b3;

        if $i55 < 0 goto label27;

        l47 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long payTermStartFP>;

        goto label28;

     label27:
        l47 = -1L;

     label28:
        $r3 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.util.List pendingTerms>;

        $r42 = new org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm;

        $l5 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long docTermStartFP>;

        $l4 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: long posTermStartFP>;

        specialinvoke $r42.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: void <init>(long,long,long,long,long,int)>($l5, $l4, l47, l46, l38, i35);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r42);

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docBufferUpto> = 0;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int posBufferUpto> = 0;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int lastDocID> = 0;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int docCount> = 0;

        return;
    }

    public void flushTermsBlock(int, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r0;
        byte $b13, $b15, $b28;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm r11;
        java.util.List $r1, $r7, $r8, $r9, $r19;
        long $l4, $l9, $l10, $l11, $l12, $l14, $l16, $l17, $l18, $l19, $l20, l23, l24, l25, $l27;
        java.lang.AssertionError $r22, $r23;
        int i0, $i1, i2, $i3, $i5, $i6, $i7, $i8, $i21, $i22, i26, $i30;
        org.apache.lucene.store.IndexOutput $r3, $r4, $r21;
        org.apache.lucene.store.RAMOutputStream $r2, $r5, $r6, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Object $r10;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 != 0 goto label01;

        $r21 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput termsOut>;

        virtualinvoke $r21.<org.apache.lucene.store.IndexOutput: void writeByte(byte)>(0);

        return;

     label01:
        $z0 = <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $r19 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.util.List pendingTerms>;

        $i22 = interfaceinvoke $r19.<java.util.List: int size()>();

        if i2 <= $i22 goto label02;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label02:
        $z1 = <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        if i0 <= i2 goto label03;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label03:
        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.util.List pendingTerms>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i3 = $i1 - i2;

        $i21 = $i3 + i0;

        l23 = 0L;

        l24 = 0L;

        l25 = 0L;

        i26 = $i21 - i0;

     label04:
        if i26 >= $i21 goto label11;

        $r9 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.util.List pendingTerms>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i26);

        r11 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm) $r10;

        $i7 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: int singletonDocID>;

        $i30 = (int) -1;

        if $i7 != $i30 goto label05;

        $r17 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        $l19 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long docStartFP>;

        $l20 = $l19 - l23;

        virtualinvoke $r17.<org.apache.lucene.store.RAMOutputStream: void writeVLong(long)>($l20);

        l23 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long docStartFP>;

        goto label06;

     label05:
        $r12 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        $i8 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: int singletonDocID>;

        virtualinvoke $r12.<org.apache.lucene.store.RAMOutputStream: void writeVInt(int)>($i8);

     label06:
        $z2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPositions>;

        if $z2 == 0 goto label09;

        $r14 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        $l10 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long posStartFP>;

        $l11 = $l10 - l24;

        virtualinvoke $r14.<org.apache.lucene.store.RAMOutputStream: void writeVLong(long)>($l11);

        l24 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long posStartFP>;

        $l12 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long lastPosBlockOffset>;

        $b13 = $l12 cmp -1L;

        if $b13 == 0 goto label07;

        $r16 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        $l18 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long lastPosBlockOffset>;

        virtualinvoke $r16.<org.apache.lucene.store.RAMOutputStream: void writeVLong(long)>($l18);

     label07:
        $z3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasPayloads>;

        if $z3 != 0 goto label08;

        $z4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean fieldHasOffsets>;

        if $z4 == 0 goto label09;

     label08:
        $l14 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long payStartFP>;

        $b15 = $l14 cmp -1L;

        if $b15 == 0 goto label09;

        $r15 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        $l16 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long payStartFP>;

        $l17 = $l16 - l25;

        virtualinvoke $r15.<org.apache.lucene.store.RAMOutputStream: void writeVLong(long)>($l17);

        l25 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long payStartFP>;

     label09:
        $l27 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long skipOffset>;

        $b28 = $l27 cmp -1L;

        if $b28 == 0 goto label10;

        $r13 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        $l9 = r11.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter$PendingTerm: long skipOffset>;

        virtualinvoke $r13.<org.apache.lucene.store.RAMOutputStream: void writeVLong(long)>($l9);

     label10:
        i26 = i26 + 1;

        goto label04;

     label11:
        $r3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput termsOut>;

        $r2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        $l4 = virtualinvoke $r2.<org.apache.lucene.store.RAMOutputStream: long getFilePointer()>();

        $i5 = (int) $l4;

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i5);

        $r5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        $r4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput termsOut>;

        virtualinvoke $r5.<org.apache.lucene.store.RAMOutputStream: void writeTo(org.apache.lucene.store.IndexOutput)>($r4);

        $r6 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.RAMOutputStream bytesWriter>;

        virtualinvoke $r6.<org.apache.lucene.store.RAMOutputStream: void reset()>();

        $r7 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.util.List pendingTerms>;

        $i6 = $i21 - i0;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>($i6, $i21);

        interfaceinvoke $r8.<java.util.List: void clear()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter r1;
        java.io.Closeable[] $r0;
        org.apache.lucene.store.IndexOutput $r2, $r3, $r4;

        r1 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter;

        $r0 = newarray (java.io.Closeable)[3];

        $r2 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput docOut>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput posOut>;

        $r0[1] = $r3;

        $r4 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: org.apache.lucene.store.IndexOutput payOut>;

        $r0[2] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int VERSION_CURRENT> = 0;

        <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int VERSION_START> = 0;

        <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.lang.String PAY_CODEC> = "Lucene41PostingsWriterPay";

        <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.lang.String POS_CODEC> = "Lucene41PostingsWriterPos";

        <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.lang.String DOC_CODEC> = "Lucene41PostingsWriterDoc";

        <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: java.lang.String TERMS_CODEC> = "Lucene41PostingsWriterTerms";

        <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: int maxSkipLevels> = 10;

        $r0 = class "Lorg/apache/lucene/codecs/lucene41/Lucene41PostingsWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene41.Lucene41PostingsWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
