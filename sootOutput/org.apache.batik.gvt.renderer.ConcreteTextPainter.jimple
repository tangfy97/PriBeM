public abstract class org.apache.batik.gvt.renderer.ConcreteTextPainter extends org.apache.batik.gvt.renderer.BasicTextPainter
{

    public void <init>()
    {
        org.apache.batik.gvt.renderer.ConcreteTextPainter r0;

        r0 := @this: org.apache.batik.gvt.renderer.ConcreteTextPainter;

        specialinvoke r0.<org.apache.batik.gvt.renderer.BasicTextPainter: void <init>()>();

        return;
    }

    public void paint(java.text.AttributedCharacterIterator, java.awt.geom.Point2D, org.apache.batik.gvt.TextNode$Anchor, java.awt.Graphics2D)
    {
        java.awt.font.TextLayout $r0;
        java.awt.geom.Point2D r6;
        org.apache.batik.gvt.renderer.ConcreteTextPainter r2;
        java.awt.Graphics2D r5;
        int $i0;
        org.apache.batik.gvt.TextNode$Anchor r4;
        double $d0, $d1, $d2, $d3;
        java.awt.font.FontRenderContext $r3;
        java.text.AttributedCharacterIterator r1;
        float $f0, $f1, f2, $f3, $f4;

        r2 := @this: org.apache.batik.gvt.renderer.ConcreteTextPainter;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        r6 := @parameter1: java.awt.geom.Point2D;

        r4 := @parameter2: org.apache.batik.gvt.TextNode$Anchor;

        r5 := @parameter3: java.awt.Graphics2D;

        $r0 = new java.awt.font.TextLayout;

        $r3 = r2.<org.apache.batik.gvt.renderer.BasicTextPainter: java.awt.font.FontRenderContext fontRenderContext>;

        specialinvoke $r0.<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>(r1, $r3);

        $f0 = virtualinvoke $r0.<java.awt.font.TextLayout: float getAdvance()>();

        f2 = 0.0F;

        $i0 = virtualinvoke r4.<org.apache.batik.gvt.TextNode$Anchor: int getType()>();

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $f1 = neg $f0;

        f2 = $f1 / 2.0F;

        goto label3;

     label2:
        f2 = neg $f0;

     label3:
        $d0 = virtualinvoke r6.<java.awt.geom.Point2D: double getX()>();

        $d1 = (double) f2;

        $d2 = $d0 + $d1;

        $f3 = (float) $d2;

        $d3 = virtualinvoke r6.<java.awt.geom.Point2D: double getY()>();

        $f4 = (float) $d3;

        virtualinvoke $r0.<java.awt.font.TextLayout: void draw(java.awt.Graphics2D,float,float)>(r5, $f3, $f4);

        return;
    }
}
