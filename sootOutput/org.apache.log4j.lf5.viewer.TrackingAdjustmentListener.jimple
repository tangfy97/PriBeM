public class org.apache.log4j.lf5.viewer.TrackingAdjustmentListener extends java.lang.Object implements java.awt.event.AdjustmentListener
{
    protected int _lastMaximum;

    public void <init>()
    {
        int $i1;
        org.apache.log4j.lf5.viewer.TrackingAdjustmentListener r0;

        r0 := @this: org.apache.log4j.lf5.viewer.TrackingAdjustmentListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: int _lastMaximum> = $i1;

        return;
    }

    public void adjustmentValueChanged(java.awt.event.AdjustmentEvent)
    {
        java.awt.event.AdjustmentEvent r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9;
        java.awt.Adjustable $r1;
        org.apache.log4j.lf5.viewer.TrackingAdjustmentListener r2;

        r2 := @this: org.apache.log4j.lf5.viewer.TrackingAdjustmentListener;

        r0 := @parameter0: java.awt.event.AdjustmentEvent;

        $r1 = virtualinvoke r0.<java.awt.event.AdjustmentEvent: java.awt.Adjustable getAdjustable()>();

        $i0 = interfaceinvoke $r1.<java.awt.Adjustable: int getMaximum()>();

        $i1 = interfaceinvoke $r1.<java.awt.Adjustable: int getMaximum()>();

        $i2 = r2.<org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: int _lastMaximum>;

        if $i1 != $i2 goto label1;

        return;

     label1:
        $i3 = interfaceinvoke $r1.<java.awt.Adjustable: int getValue()>();

        $i4 = interfaceinvoke $r1.<java.awt.Adjustable: int getVisibleAmount()>();

        i5 = $i3 + $i4;

        $i6 = interfaceinvoke $r1.<java.awt.Adjustable: int getUnitIncrement()>();

        $i8 = i5 + $i6;

        $i7 = r2.<org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: int _lastMaximum>;

        if $i8 < $i7 goto label2;

        $i9 = interfaceinvoke $r1.<java.awt.Adjustable: int getMaximum()>();

        interfaceinvoke $r1.<java.awt.Adjustable: void setValue(int)>($i9);

     label2:
        r2.<org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: int _lastMaximum> = $i0;

        return;
    }
}
