abstract class org.apache.commons.compress.compressors.pack200.StreamBridge extends java.io.FilterOutputStream
{
    private java.io.InputStream input;
    private final java.lang.Object INPUT_LOCK;

    protected void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.commons.compress.compressors.pack200.StreamBridge r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.compress.compressors.pack200.StreamBridge;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.lang.Object INPUT_LOCK> = $r2;

        return;
    }

    protected void <init>()
    {
        org.apache.commons.compress.compressors.pack200.StreamBridge r0;

        r0 := @this: org.apache.commons.compress.compressors.pack200.StreamBridge;

        specialinvoke r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: void <init>(java.io.OutputStream)>(null);

        return;
    }

    java.io.InputStream getInput() throws java.io.IOException
    {
        java.lang.Throwable $r5;
        org.apache.commons.compress.compressors.pack200.StreamBridge r0;
        java.lang.Object $r1;
        java.io.InputStream $r2, $r3, $r4;

        r0 := @this: org.apache.commons.compress.compressors.pack200.StreamBridge;

        $r1 = r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.lang.Object INPUT_LOCK>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.io.InputStream input>;

        if $r2 != null goto label2;

        $r4 = virtualinvoke r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.io.InputStream getInputView()>();

        r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.io.InputStream input> = $r4;

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

     label6:
        $r3 = r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.io.InputStream input>;

        return $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    abstract java.io.InputStream getInputView() throws java.io.IOException;

    void stop() throws java.io.IOException
    {
        java.lang.Throwable $r4;
        org.apache.commons.compress.compressors.pack200.StreamBridge r0;
        java.lang.Object $r1;
        java.io.InputStream $r2, $r3;

        r0 := @this: org.apache.commons.compress.compressors.pack200.StreamBridge;

        virtualinvoke r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: void close()>();

        $r1 = r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.lang.Object INPUT_LOCK>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.io.InputStream input>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.io.InputStream input>;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        r0.<org.apache.commons.compress.compressors.pack200.StreamBridge: java.io.InputStream input> = null;

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
