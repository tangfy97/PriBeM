public class com.hp.hpl.jena.xmloutput.impl.Basic extends com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter
{
    private java.lang.String space;
    private boolean blockLiterals;

    public void <init>()
    {
        com.hp.hpl.jena.xmloutput.impl.Basic r0;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        specialinvoke r0.<com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter: void <init>()>();

        r0.<com.hp.hpl.jena.xmloutput.impl.Basic: boolean blockLiterals> = 0;

        return;
    }

    protected void writeBody(com.hp.hpl.jena.rdf.model.Model, java.io.PrintWriter, java.lang.String, boolean)
    {
        java.io.PrintWriter r2;
        com.hp.hpl.jena.xmloutput.impl.Basic r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.String r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Basic: void setSpaceFromTabCount()>();

        specialinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeRDFHeader(com.hp.hpl.jena.rdf.model.Model,java.io.PrintWriter)>(r1, r2);

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeRDFStatements(com.hp.hpl.jena.rdf.model.Model,java.io.PrintWriter)>(r1, r2);

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeRDFTrailer(java.io.PrintWriter,java.lang.String)>(r2, r3);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        return;
    }

    private void setSpaceFromTabCount()
    {
        com.hp.hpl.jena.xmloutput.impl.Basic r0;
        int $i0, i1;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String space> = "";

        i1 = 0;

     label1:
        $i0 = r0.<com.hp.hpl.jena.xmloutput.impl.Basic: int tabSize>;

        if i1 >= $i0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String space>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String space> = $r5;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void writeSpace(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        java.lang.String $r2;
        com.hp.hpl.jena.xmloutput.impl.Basic r1;

        r1 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: java.io.PrintWriter;

        $r2 = r1.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String space>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        return;
    }

    private void writeRDFHeader(com.hp.hpl.jena.rdf.model.Model, java.io.PrintWriter)
    {
        int $i0;
        java.lang.String $r1, $r5, $r8, $r9, $r10, $r13, $r14, $r16;
        java.io.PrintWriter r2;
        com.hp.hpl.jena.xmloutput.impl.Basic r0;
        com.hp.hpl.jena.rdf.model.Model r17;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r11, $r12, $r15;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r17 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: java.io.PrintWriter;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String xmlnsDecl()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfEl(java.lang.String)>("RDF");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        $r9 = r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String xmlBase>;

        if null == $r9 goto label1;

        $r10 = r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String xmlBase>;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  xml:base=");

        $r13 = r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String xmlBase>;

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String substitutedAttribute(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r16);

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" > ");

        return;
    }

    protected void writeRDFStatements(com.hp.hpl.jena.rdf.model.Model, java.io.PrintWriter)
    {
        java.io.PrintWriter r4;
        com.hp.hpl.jena.xmloutput.impl.Basic r2;
        com.hp.hpl.jena.rdf.model.Model r0;
        com.hp.hpl.jena.rdf.model.ResIterator $r1;
        com.hp.hpl.jena.rdf.model.Resource $r3;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter1: java.io.PrintWriter;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.ResIterator listSubjects()>();

     label1:
        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.ResIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.ResIterator: com.hp.hpl.jena.rdf.model.Resource nextResource()>();

        virtualinvoke r2.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeRDFStatements(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>(r0, $r3, r4);

        goto label1;

     label2:
        return;
    }

    protected void writeRDFTrailer(java.io.PrintWriter, java.lang.String)
    {
        java.io.PrintWriter r0;
        com.hp.hpl.jena.xmloutput.impl.Basic r3;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r4, $r7, r8;

        r3 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: java.io.PrintWriter;

        r8 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfEl(java.lang.String)>("RDF");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return;
    }

    protected void writeRDFStatements(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.Resource, java.io.PrintWriter)
    {
        java.io.PrintWriter r4;
        com.hp.hpl.jena.xmloutput.impl.Basic r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Model r0;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter2: java.io.PrintWriter;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, null, null);

        virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeDescriptionHeader(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>(r1, r4);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: void writePredicate(com.hp.hpl.jena.rdf.model.Statement,java.io.PrintWriter)>($r5, r4);

        goto label1;

     label2:
        virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeDescriptionTrailer(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>(r1, r4);

        return;
    }

    protected void writeDescriptionHeader(com.hp.hpl.jena.rdf.model.Resource, java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        com.hp.hpl.jena.xmloutput.impl.Basic r2;
        com.hp.hpl.jena.rdf.model.Resource r10;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r6, $r9;

        r2 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r10 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter1: java.io.PrintWriter;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String space>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfEl(java.lang.String)>("Description");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r2.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeResourceId(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>(r10, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(">");

        return;
    }

    protected void writePredicate(com.hp.hpl.jena.rdf.model.Statement, java.io.PrintWriter)
    {
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.String $r6, $r8, $r11, $r12, $r13, $r15, $r19, $r20, $r21, $r24;
        boolean $z0;
        java.io.PrintWriter r3;
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.xmloutput.impl.Basic r5;
        com.hp.hpl.jena.rdf.model.Statement r0;
        com.hp.hpl.jena.rdf.model.Resource $r25;
        java.lang.StringBuilder $r4, $r7, $r9, $r10, $r14, $r17, $r18, $r22, $r23;
        com.hp.hpl.jena.rdf.model.Literal $r16;

        r5 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        r3 := @parameter1: java.io.PrintWriter;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = r5.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String space>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = r5.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String space>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r11 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getNameSpace()>();

        $r12 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getLocalName()>();

        $r13 = virtualinvoke r5.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String startElementTag(java.lang.String,java.lang.String)>($r11, $r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        $z0 = $r2 instanceof com.hp.hpl.jena.rdf.model.Resource;

        if $z0 == 0 goto label1;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r25 = (com.hp.hpl.jena.rdf.model.Resource) $r2;

        virtualinvoke r5.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeResourceReference(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>($r25, r3);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("/>");

        goto label2;

     label1:
        $r16 = (com.hp.hpl.jena.rdf.model.Literal) $r2;

        virtualinvoke r5.<com.hp.hpl.jena.xmloutput.impl.Basic: void writeLiteral(com.hp.hpl.jena.rdf.model.Literal,java.io.PrintWriter)>($r16, r3);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r19 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getNameSpace()>();

        $r20 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getLocalName()>();

        $r21 = virtualinvoke r5.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String endElementTag(java.lang.String,java.lang.String)>($r19, $r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r24);

     label2:
        return;
    }

    protected void unblockAll()
    {
        com.hp.hpl.jena.xmloutput.impl.Basic r0;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0.<com.hp.hpl.jena.xmloutput.impl.Basic: boolean blockLiterals> = 0;

        return;
    }

    protected void blockRule(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.xmloutput.impl.Basic r9;
        com.hp.hpl.jena.rdf.model.Resource r0, $r1;
        com.hp.hpl.jena.xmloutput.impl.SimpleLogger $r3;
        java.lang.StringBuilder $r2, $r4, $r6, $r7;
        java.lang.String $r5, $r8;
        boolean $z0;

        r9 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource parseTypeLiteralPropertyElt>;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        r9.<com.hp.hpl.jena.xmloutput.impl.Basic: boolean blockLiterals> = 1;

        goto label2;

     label1:
        $r3 = <com.hp.hpl.jena.xmloutput.impl.Basic: com.hp.hpl.jena.xmloutput.impl.SimpleLogger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot block rule <");

        $r5 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.xmloutput.impl.SimpleLogger: void warn(java.lang.String)>($r8);

     label2:
        return;
    }

    protected void writeDescriptionTrailer(com.hp.hpl.jena.rdf.model.Resource, java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        com.hp.hpl.jena.xmloutput.impl.Basic r2;
        com.hp.hpl.jena.rdf.model.Resource r10;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r6, $r9;

        r2 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r10 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter1: java.io.PrintWriter;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String space>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfEl(java.lang.String)>("Description");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return;
    }

    protected void writeResourceId(com.hp.hpl.jena.rdf.model.Resource, java.io.PrintWriter)
    {
        java.lang.String $r4, $r7, $r8, $r9, $r11, $r13, $r16, $r17, $r19;
        boolean $z0;
        java.io.PrintWriter r1;
        com.hp.hpl.jena.xmloutput.impl.Basic r3;
        com.hp.hpl.jena.rdf.model.Resource r0;
        java.lang.StringBuilder $r2, $r5, $r6, $r10, $r12, $r14, $r15, $r18;

        r3 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: java.io.PrintWriter;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfAt(java.lang.String)>("nodeID");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r16 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String anonId(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        $r17 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String attributeQuoted(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r19);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfAt(java.lang.String)>("about");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r8 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String relativize(java.lang.String)>($r7);

        $r9 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String substitutedAttribute(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

     label2:
        return;
    }

    protected void writeResourceReference(com.hp.hpl.jena.rdf.model.Resource, java.io.PrintWriter)
    {
        java.lang.String $r4, $r7, $r8, $r9, $r11, $r13, $r16, $r17, $r19;
        boolean $z0;
        java.io.PrintWriter r1;
        com.hp.hpl.jena.xmloutput.impl.Basic r3;
        com.hp.hpl.jena.rdf.model.Resource r0;
        java.lang.StringBuilder $r2, $r5, $r6, $r10, $r12, $r14, $r15, $r18;

        r3 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: java.io.PrintWriter;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfAt(java.lang.String)>("nodeID");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r16 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String anonId(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        $r17 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String attributeQuoted(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r19);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfAt(java.lang.String)>("resource");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r8 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String relativize(java.lang.String)>($r7);

        $r9 = virtualinvoke r3.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String substitutedAttribute(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

     label2:
        return;
    }

    protected void writeLiteral(com.hp.hpl.jena.rdf.model.Literal, java.io.PrintWriter)
    {
        boolean $z0, $z1, $z2;
        java.io.PrintWriter r4;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25, $r27;
        com.hp.hpl.jena.rdf.model.Literal r0;
        java.lang.String $r1, $r2, $r3, $r5, $r9, $r12, $r14, $r17, $r20, $r23, $r26, $r28;
        com.hp.hpl.jena.xmloutput.impl.Basic r8;

        r8 := @this: com.hp.hpl.jena.xmloutput.impl.Basic;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Literal;

        r4 := @parameter1: java.io.PrintWriter;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLanguage()>();

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLexicalForm()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" xml:lang=");

        $r26 = virtualinvoke r8.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String attributeQuoted(java.lang.String)>($r1);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r28);

     label1:
        $z1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Literal: boolean isWellFormedXML()>();

        if $z1 == 0 goto label2;

        $z2 = r8.<com.hp.hpl.jena.xmloutput.impl.Basic: boolean blockLiterals>;

        if $z2 != 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke r8.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfAt(java.lang.String)>("parseType");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r20 = virtualinvoke r8.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String attributeQuoted(java.lang.String)>("Literal");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r23);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        goto label4;

     label2:
        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getDatatypeURI()>();

        if $r3 == null goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke r8.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String rdfAt(java.lang.String)>("datatype");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r12 = virtualinvoke r8.<com.hp.hpl.jena.xmloutput.impl.Basic: java.lang.String substitutedAttribute(java.lang.String)>($r3);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r14);

     label3:
        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(">");

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.Util: java.lang.String substituteEntitiesInElementContent(java.lang.String)>($r2);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r5);

     label4:
        return;
    }
}
