class org.apache.cxf.common.util.CglibProxyHelper extends org.apache.cxf.common.util.ProxyHelper
{

    void <init>() throws java.lang.Exception
    {
        org.apache.cxf.common.util.CglibProxyHelper r0;

        r0 := @this: org.apache.cxf.common.util.CglibProxyHelper;

        specialinvoke r0.<org.apache.cxf.common.util.ProxyHelper: void <init>()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("net.sf.cglib.proxy.Enhancer");

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("net.sf.cglib.proxy.MethodInterceptor");

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("net.sf.cglib.proxy.MethodProxy");

        return;
    }

    protected java.lang.Object getProxyInternal(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)
    {
        java.lang.Object[] $r8;
        org.apache.cxf.common.util.CglibProxyHelper r2;
        java.util.ArrayList $r15;
        int i0, $i1, i2;
        net.sf.cglib.proxy.Enhancer $r17;
        boolean $z0;
        net.sf.cglib.proxy.Callback $r19;
        java.lang.Class[] r1, $r7, $r9;
        java.lang.IllegalArgumentException $r16;
        java.lang.Object $r5, $r11;
        java.lang.Class r12, r14;
        java.lang.ClassLoader r3;
        java.lang.reflect.InvocationHandler r4;
        org.apache.cxf.common.util.CglibProxyHelper$1 $r18;

        r2 := @this: org.apache.cxf.common.util.CglibProxyHelper;

        r3 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Class[];

        r4 := @parameter2: java.lang.reflect.InvocationHandler;

        r14 = null;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r12 = r1[i2];

        $z0 = virtualinvoke r12.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label3;

        if r14 == null goto label2;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only a single superclass is supported");

        throw $r16;

     label2:
        r14 = r12;

        goto label4;

     label3:
        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r12);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        if r14 == null goto label6;

        $r17 = new net.sf.cglib.proxy.Enhancer;

        specialinvoke $r17.<net.sf.cglib.proxy.Enhancer: void <init>()>();

        virtualinvoke $r17.<net.sf.cglib.proxy.Enhancer: void setClassLoader(java.lang.ClassLoader)>(r3);

        virtualinvoke $r17.<net.sf.cglib.proxy.Enhancer: void setSuperclass(java.lang.Class)>(r14);

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        $r7 = newarray (java.lang.Class)[$i1];

        $r8 = interfaceinvoke $r15.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.lang.Class[]) $r8;

        virtualinvoke $r17.<net.sf.cglib.proxy.Enhancer: void setInterfaces(java.lang.Class[])>($r9);

        $r18 = new org.apache.cxf.common.util.CglibProxyHelper$1;

        specialinvoke $r18.<org.apache.cxf.common.util.CglibProxyHelper$1: void <init>(org.apache.cxf.common.util.CglibProxyHelper,java.lang.reflect.InvocationHandler)>(r2, r4);

        $r19 = (net.sf.cglib.proxy.Callback) $r18;

        virtualinvoke $r17.<net.sf.cglib.proxy.Enhancer: void setCallback(net.sf.cglib.proxy.Callback)>($r19);

        $r11 = virtualinvoke $r17.<net.sf.cglib.proxy.Enhancer: java.lang.Object create()>();

        return $r11;

     label6:
        $r5 = specialinvoke r2.<org.apache.cxf.common.util.ProxyHelper: java.lang.Object getProxyInternal(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(r3, r1, r4);

        return $r5;
    }
}
