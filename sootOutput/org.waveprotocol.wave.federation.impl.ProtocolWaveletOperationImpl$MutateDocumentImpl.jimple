public class org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument
{
    private java.lang.String documentId;
    private org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl documentOperation;

    public void <init>()
    {
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)
    {
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>(r1);

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)
    {
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation $r3;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument: java.lang.String getDocumentId()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: void setDocumentId(java.lang.String)>($r2);

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument: org.waveprotocol.wave.federation.ProtocolDocumentOperation getDocumentOperation()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: void setDocumentOperation(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r3);

        return;
    }

    public java.lang.String getDocumentId()
    {
        java.lang.String $r1;
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: java.lang.String documentId>;

        return $r1;
    }

    public void setDocumentId(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: java.lang.String documentId> = r1;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl getDocumentOperation()
    {
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r0, $r2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl;

        $r2 = r1.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl documentOperation>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r2);

        return $r0;
    }

    public void setDocumentOperation(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r2;
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>(r2);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl documentOperation> = $r1;

        return;
    }

    protected void reset()
    {
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: java.lang.String documentId> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl documentOperation> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r1;
        java.lang.Object r0;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument $r2;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument) r0;

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil$MutateDocumentUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument,org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        $i0 = staticinvoke <org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil$MutateDocumentUtil: int getHashCode(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>(r0);

        return $i0;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation getDocumentOperation()
    {
        org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolWaveletOperationImpl$MutateDocumentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl getDocumentOperation()>();

        return $r1;
    }
}
