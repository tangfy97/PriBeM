public class org.apache.poi.hslf.record.ExOleObjAtom extends org.apache.poi.hslf.record.RecordAtom
{
    public static final int DRAW_ASPECT_VISIBLE;
    public static final int DRAW_ASPECT_THUMBNAIL;
    public static final int DRAW_ASPECT_ICON;
    public static final int DRAW_ASPECT_DOCPRINT;
    public static final int TYPE_EMBEDDED;
    public static final int TYPE_LINKED;
    public static final int TYPE_CONTROL;
    public static final int SUBTYPE_DEFAULT;
    public static final int SUBTYPE_CLIPART_GALLERY;
    public static final int SUBTYPE_WORD_TABLE;
    public static final int SUBTYPE_EXCEL;
    public static final int SUBTYPE_GRAPH;
    public static final int SUBTYPE_ORGANIZATION_CHART;
    public static final int SUBTYPE_EQUATION;
    public static final int SUBTYPE_WORDART;
    public static final int SUBTYPE_SOUND;
    public static final int SUBTYPE_IMAGE;
    public static final int SUBTYPE_POWERPOINT_PRESENTATION;
    public static final int SUBTYPE_POWERPOINT_SLIDE;
    public static final int SUBTYPE_PROJECT;
    public static final int SUBTYPE_NOTEIT;
    public static final int SUBTYPE_EXCEL_CHART;
    public static final int SUBTYPE_MEDIA_PLAYER;
    private byte[] _header;
    private byte[] _data;

    public void <init>()
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        long $l0;
        short $s2;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _header> = $r1;

        $r2 = newarray (byte)[24];

        r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data> = $r2;

        $r3 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r3, 0, 1);

        $r4 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _header>;

        $l0 = virtualinvoke r0.<org.apache.poi.hslf.record.ExOleObjAtom: long getRecordType()>();

        $i1 = (int) $l0;

        $s2 = (short) $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r4, 2, $s2);

        $r6 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _header>;

        $r5 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i3 = lengthof $r5;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r6, 4, $i3);

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r5, $r6, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r12;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i2 = i1 - 8;

        $r4 = newarray (byte)[$i2];

        r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data> = $r4;

        $i4 = i0 + 8;

        $r5 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i3 = i1 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i4, $r5, 0, $i3);

        $r6 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i5 = lengthof $r6;

        if $i5 >= 24 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The length of the data for a ExOleObjAtom must be at least 24 bytes, but was only ");

        $r10 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i6 = lengthof $r10;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label1:
        return;
    }

    public int getDrawAspect()
    {
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 0);

        return $i0;
    }

    public void setDrawAspect(int)
    {
        int i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 0, i0);

        return;
    }

    public int getType()
    {
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 4);

        return $i0;
    }

    public void setType(int)
    {
        int i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 4, i0);

        return;
    }

    public int getObjID()
    {
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 8);

        return $i0;
    }

    public void setObjID(int)
    {
        int i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 8, i0);

        return;
    }

    public int getSubType()
    {
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 12);

        return $i0;
    }

    public void setSubType(int)
    {
        int i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 12, i0);

        return;
    }

    public int getObjStgDataRef()
    {
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 16);

        return $i0;
    }

    public void setObjStgDataRef(int)
    {
        int i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 16, i0);

        return;
    }

    public boolean getIsBlank()
    {
        byte[] $r1;
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 20);

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getOptions()
    {
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 20);

        return $i0;
    }

    public void setOptions(int)
    {
        int i0;
        org.apache.poi.hslf.record.ExOleObjAtom r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 20, i0);

        return;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.RecordTypes$Type $r0;
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom r1;
        long $l1;

        r1 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r0 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type ExOleObjAtom>;

        $i0 = $r0.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $l1 = (long) $i0;

        return $l1;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r3;
        org.apache.poi.hslf.record.ExOleObjAtom r1;

        r1 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = r1.<org.apache.poi.hslf.record.ExOleObjAtom: byte[] _data>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hslf.record.ExOleObjAtom r3;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r6, $r11, $r16, $r21, $r26, $r31, $r32;

        r3 := @this: org.apache.poi.hslf.record.ExOleObjAtom;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ExOleObjAtom\n");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  drawAspect: ");

        $i0 = virtualinvoke r3.<org.apache.poi.hslf.record.ExOleObjAtom: int getDrawAspect()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  type: ");

        $i1 = virtualinvoke r3.<org.apache.poi.hslf.record.ExOleObjAtom: int getType()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  objID: ");

        $i2 = virtualinvoke r3.<org.apache.poi.hslf.record.ExOleObjAtom: int getObjID()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  subType: ");

        $i3 = virtualinvoke r3.<org.apache.poi.hslf.record.ExOleObjAtom: int getSubType()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  objStgDataRef: ");

        $i4 = virtualinvoke r3.<org.apache.poi.hslf.record.ExOleObjAtom: int getObjStgDataRef()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  options: ");

        $i5 = virtualinvoke r3.<org.apache.poi.hslf.record.ExOleObjAtom: int getOptions()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r32 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r32;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_MEDIA_PLAYER> = 15;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_EXCEL_CHART> = 14;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_NOTEIT> = 13;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_PROJECT> = 12;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_POWERPOINT_SLIDE> = 11;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_POWERPOINT_PRESENTATION> = 10;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_IMAGE> = 9;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_SOUND> = 8;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_WORDART> = 7;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_EQUATION> = 6;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_ORGANIZATION_CHART> = 5;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_GRAPH> = 4;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_EXCEL> = 3;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_WORD_TABLE> = 2;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_CLIPART_GALLERY> = 1;

        <org.apache.poi.hslf.record.ExOleObjAtom: int SUBTYPE_DEFAULT> = 0;

        <org.apache.poi.hslf.record.ExOleObjAtom: int TYPE_CONTROL> = 2;

        <org.apache.poi.hslf.record.ExOleObjAtom: int TYPE_LINKED> = 1;

        <org.apache.poi.hslf.record.ExOleObjAtom: int TYPE_EMBEDDED> = 0;

        <org.apache.poi.hslf.record.ExOleObjAtom: int DRAW_ASPECT_DOCPRINT> = 8;

        <org.apache.poi.hslf.record.ExOleObjAtom: int DRAW_ASPECT_ICON> = 4;

        <org.apache.poi.hslf.record.ExOleObjAtom: int DRAW_ASPECT_THUMBNAIL> = 2;

        <org.apache.poi.hslf.record.ExOleObjAtom: int DRAW_ASPECT_VISIBLE> = 1;

        return;
    }
}
