public class com.ibm.wsdl.util.ObjectRegistry extends java.lang.Object
{
    java.util.Hashtable reg;
    com.ibm.wsdl.util.ObjectRegistry parent;

    public void <init>()
    {
        java.util.Hashtable $r1;
        com.ibm.wsdl.util.ObjectRegistry r0;

        r0 := @this: com.ibm.wsdl.util.ObjectRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<com.ibm.wsdl.util.ObjectRegistry: java.util.Hashtable reg> = $r1;

        r0.<com.ibm.wsdl.util.ObjectRegistry: com.ibm.wsdl.util.ObjectRegistry parent> = null;

        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.ibm.wsdl.util.ObjectRegistry r0;
        java.util.Map r2;
        java.lang.Object $r5, $r7;
        java.lang.String r6;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: com.ibm.wsdl.util.ObjectRegistry;

        r2 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<com.ibm.wsdl.util.ObjectRegistry: java.util.Hashtable reg> = $r1;

        r0.<com.ibm.wsdl.util.ObjectRegistry: com.ibm.wsdl.util.ObjectRegistry parent> = null;

        if r2 == null goto label2;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        virtualinvoke r0.<com.ibm.wsdl.util.ObjectRegistry: void register(java.lang.String,java.lang.Object)>(r6, $r7);

        goto label1;

     label2:
        return;
    }

    public void <init>(com.ibm.wsdl.util.ObjectRegistry)
    {
        java.util.Hashtable $r1;
        com.ibm.wsdl.util.ObjectRegistry r0, r2;

        r0 := @this: com.ibm.wsdl.util.ObjectRegistry;

        r2 := @parameter0: com.ibm.wsdl.util.ObjectRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<com.ibm.wsdl.util.ObjectRegistry: java.util.Hashtable reg> = $r1;

        r0.<com.ibm.wsdl.util.ObjectRegistry: com.ibm.wsdl.util.ObjectRegistry parent> = null;

        r0.<com.ibm.wsdl.util.ObjectRegistry: com.ibm.wsdl.util.ObjectRegistry parent> = r2;

        return;
    }

    public void register(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        java.util.Hashtable $r3;
        com.ibm.wsdl.util.ObjectRegistry r0;

        r0 := @this: com.ibm.wsdl.util.ObjectRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.ibm.wsdl.util.ObjectRegistry: java.util.Hashtable reg>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void unregister(java.lang.String)
    {
        java.lang.String r1;
        java.util.Hashtable $r2;
        com.ibm.wsdl.util.ObjectRegistry r0;

        r0 := @this: com.ibm.wsdl.util.ObjectRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ibm.wsdl.util.ObjectRegistry: java.util.Hashtable reg>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.Object lookup(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.IllegalArgumentException $r4;
        com.ibm.wsdl.util.ObjectRegistry r0, $r10, $r11;
        java.lang.Object $r3, r12;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String r1, $r9;
        java.util.Hashtable $r2;

        r0 := @this: com.ibm.wsdl.util.ObjectRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ibm.wsdl.util.ObjectRegistry: java.util.Hashtable reg>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r12 = $r3;

        if $r3 != null goto label1;

        $r10 = r0.<com.ibm.wsdl.util.ObjectRegistry: com.ibm.wsdl.util.ObjectRegistry parent>;

        if $r10 == null goto label1;

        $r11 = r0.<com.ibm.wsdl.util.ObjectRegistry: com.ibm.wsdl.util.ObjectRegistry parent>;

        r12 = virtualinvoke $r11.<com.ibm.wsdl.util.ObjectRegistry: java.lang.Object lookup(java.lang.String)>(r1);

     label1:
        if r12 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("object \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not in registry");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        return r12;
    }
}
