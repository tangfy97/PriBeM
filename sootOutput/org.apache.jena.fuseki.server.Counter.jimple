public class org.apache.jena.fuseki.server.Counter extends java.lang.Object
{
    private java.util.concurrent.atomic.AtomicLong counter;

    public void <init>()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.jena.fuseki.server.Counter r0;

        r0 := @this: org.apache.jena.fuseki.server.Counter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<org.apache.jena.fuseki.server.Counter: java.util.concurrent.atomic.AtomicLong counter> = $r1;

        return;
    }

    public void inc()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.jena.fuseki.server.Counter r0;

        r0 := @this: org.apache.jena.fuseki.server.Counter;

        $r1 = r0.<org.apache.jena.fuseki.server.Counter: java.util.concurrent.atomic.AtomicLong counter>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        return;
    }

    public void dec()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.jena.fuseki.server.Counter r0;

        r0 := @this: org.apache.jena.fuseki.server.Counter;

        $r1 = r0.<org.apache.jena.fuseki.server.Counter: java.util.concurrent.atomic.AtomicLong counter>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long decrementAndGet()>();

        return;
    }

    public long value()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;
        org.apache.jena.fuseki.server.Counter r0;

        r0 := @this: org.apache.jena.fuseki.server.Counter;

        $r1 = r0.<org.apache.jena.fuseki.server.Counter: java.util.concurrent.atomic.AtomicLong counter>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }
}
