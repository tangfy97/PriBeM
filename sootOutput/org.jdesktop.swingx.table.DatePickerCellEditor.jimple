public class org.jdesktop.swingx.table.DatePickerCellEditor extends javax.swing.AbstractCellEditor implements javax.swing.table.TableCellEditor, javax.swing.tree.TreeCellEditor
{
    protected org.jdesktop.swingx.JXDatePicker datePicker;
    protected java.text.DateFormat dateFormat;
    protected int clickCountToStart;
    private java.awt.event.ActionListener pickerActionListener;
    protected boolean ignoreAction;
    private static java.util.logging.Logger logger;
    private static final long serialVersionUID;

    public void <init>()
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r0;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        specialinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: void <init>(java.text.DateFormat)>(null);

        return;
    }

    public void <init>(java.text.DateFormat)
    {
        javax.swing.JFormattedTextField $r4;
        java.awt.event.ActionListener $r10;
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        org.jdesktop.swingx.JXDatePicker $r2, $r3, $r6, $r9, $r12;
        java.awt.Font $r8;
        javax.swing.UIDefaults $r7;
        java.text.DateFormat[] $r11;
        javax.swing.border.Border $r5;
        java.text.DateFormat r1, $r13;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r1 := @parameter0: java.text.DateFormat;

        specialinvoke r0.<javax.swing.AbstractCellEditor: void <init>()>();

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: int clickCountToStart> = 2;

        if r1 == null goto label1;

        $r13 = r1;

        goto label2;

     label1:
        $r13 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance()>();

     label2:
        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.text.DateFormat dateFormat> = $r13;

        $r2 = new org.jdesktop.swingx.JXDatePicker;

        specialinvoke $r2.<org.jdesktop.swingx.JXDatePicker: void <init>()>();

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker> = $r2;

        $r3 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r5 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 1, 0, 1);

        virtualinvoke $r4.<javax.swing.JFormattedTextField: void setBorder(javax.swing.border.Border)>($r5);

        $r6 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r7 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getDefaults()>();

        $r8 = virtualinvoke $r7.<javax.swing.UIDefaults: java.awt.Font getFont(java.lang.Object)>("TextField.font");

        virtualinvoke $r6.<org.jdesktop.swingx.JXDatePicker: void setFont(java.awt.Font)>($r8);

        if r1 == null goto label3;

        $r12 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r11 = newarray (java.text.DateFormat)[1];

        $r11[0] = r1;

        virtualinvoke $r12.<org.jdesktop.swingx.JXDatePicker: void setFormats(java.text.DateFormat[])>($r11);

     label3:
        $r9 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r10 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.awt.event.ActionListener getPickerActionListener()>();

        virtualinvoke $r9.<org.jdesktop.swingx.JXDatePicker: void addActionListener(java.awt.event.ActionListener)>($r10);

        return;
    }

    public java.util.Date getCellEditorValue()
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.util.Date $r2;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        $r1 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: java.util.Date getDate()>();

        return $r2;
    }

    public boolean isCellEditable(java.util.EventObject)
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r1;
        java.awt.event.MouseEvent $r2;
        java.util.EventObject r0;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r0 := @parameter0: java.util.EventObject;

        $z0 = r0 instanceof java.awt.event.MouseEvent;

        if $z0 == 0 goto label3;

        $r2 = (java.awt.event.MouseEvent) r0;

        $i0 = virtualinvoke $r2.<java.awt.event.MouseEvent: int getClickCount()>();

        $i1 = virtualinvoke r1.<org.jdesktop.swingx.table.DatePickerCellEditor: int getClickCountToStart()>();

        if $i0 < $i1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        $z1 = specialinvoke r1.<javax.swing.AbstractCellEditor: boolean isCellEditable(java.util.EventObject)>(r0);

        return $z1;
    }

    public boolean stopCellEditing()
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: boolean ignoreAction> = 1;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: boolean commitChange()>();

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: boolean ignoreAction> = 0;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<javax.swing.AbstractCellEditor: boolean stopCellEditing()>();

        return $z1;

     label1:
        return 0;
    }

    public void setClickCountToStart(int)
    {
        int i0;
        org.jdesktop.swingx.table.DatePickerCellEditor r0;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        i0 := @parameter0: int;

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: int clickCountToStart> = i0;

        return;
    }

    public int getClickCountToStart()
    {
        int $i0;
        org.jdesktop.swingx.table.DatePickerCellEditor r0;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        $i0 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: int clickCountToStart>;

        return $i0;
    }

    public java.awt.Component getTableCellEditorComponent(javax.swing.JTable, java.lang.Object, boolean, int, int)
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        org.jdesktop.swingx.JXDatePicker $r2, $r4;
        java.util.Date $r3;
        int i0, i1;
        javax.swing.JTable r5;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r5 := @parameter0: javax.swing.JTable;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: boolean ignoreAction> = 1;

        $r2 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.util.Date getValueAsDate(java.lang.Object)>(r1);

        virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: void setDate(java.util.Date)>($r3);

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: boolean ignoreAction> = 0;

        $r4 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        return $r4;
    }

    public java.awt.Component getTreeCellEditorComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int)
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        org.jdesktop.swingx.JXDatePicker $r2, $r4;
        java.util.Date $r3;
        javax.swing.JTree r5;
        int i0;
        java.lang.Object r1;
        boolean z0, z1, z2;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r5 := @parameter0: javax.swing.JTree;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: boolean ignoreAction> = 1;

        $r2 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.util.Date getValueAsDate(java.lang.Object)>(r1);

        virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: void setDate(java.util.Date)>($r3);

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: boolean ignoreAction> = 0;

        $r4 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        return $r4;
    }

    protected java.util.Date getValueAsDate(java.lang.Object)
    {
        org.jdesktop.swingx.treetable.AbstractMutableTreeTableNode $r2;
        java.util.Date $r4, $r7, $r10, $r11, $r13;
        long $l0;
        java.lang.Long $r12;
        java.lang.String $r8;
        java.text.ParseException $r14;
        java.text.DateFormat $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        javax.swing.tree.DefaultMutableTreeNode $r5;
        java.lang.Object r1, $r3, $r6;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: boolean isEmpty(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = r1 instanceof java.util.Date;

        if $z1 == 0 goto label2;

        $r13 = (java.util.Date) r1;

        return $r13;

     label2:
        $z2 = r1 instanceof java.lang.Long;

        if $z2 == 0 goto label3;

        $r11 = new java.util.Date;

        $r12 = (java.lang.Long) r1;

        $l0 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        specialinvoke $r11.<java.util.Date: void <init>(long)>($l0);

        return $r11;

     label3:
        $z3 = r1 instanceof java.lang.String;

        if $z3 == 0 goto label7;

     label4:
        $r9 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.text.DateFormat dateFormat>;

        $r8 = (java.lang.String) r1;

        $r10 = virtualinvoke $r9.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r8);

     label5:
        return $r10;

     label6:
        $r14 := @caughtexception;

        virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: void handleParseException(java.text.ParseException)>($r14);

     label7:
        $z4 = r1 instanceof javax.swing.tree.DefaultMutableTreeNode;

        if $z4 == 0 goto label8;

        $r5 = (javax.swing.tree.DefaultMutableTreeNode) r1;

        $r6 = virtualinvoke $r5.<javax.swing.tree.DefaultMutableTreeNode: java.lang.Object getUserObject()>();

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.util.Date getValueAsDate(java.lang.Object)>($r6);

        return $r7;

     label8:
        $z5 = r1 instanceof org.jdesktop.swingx.treetable.AbstractMutableTreeTableNode;

        if $z5 == 0 goto label9;

        $r2 = (org.jdesktop.swingx.treetable.AbstractMutableTreeTableNode) r1;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.treetable.AbstractMutableTreeTableNode: java.lang.Object getUserObject()>();

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.util.Date getValueAsDate(java.lang.Object)>($r3);

        return $r4;

     label9:
        return null;

        catch java.text.ParseException from label4 to label5 with label6;
    }

    protected void handleParseException(java.text.ParseException)
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r5;
        java.lang.String $r3, $r4;
        java.text.ParseException r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;

        r5 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r0 := @parameter0: java.text.ParseException;

        $r1 = <org.jdesktop.swingx.table.DatePickerCellEditor: java.util.logging.Logger logger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r3 = virtualinvoke r0.<java.text.ParseException: java.lang.String getMessage()>();

        $r4 = virtualinvoke r0.<java.text.ParseException: java.lang.String getMessage()>();

        virtualinvoke $r1.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r2, $r3, $r4);

        return;
    }

    protected boolean isEmpty(java.lang.Object)
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r2;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r2 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r1 = (java.lang.String) r0;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected boolean commitChange()
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.text.ParseException $r2;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

     label1:
        $r1 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: void commitEdit()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public java.text.DateFormat[] getFormats()
    {
        java.text.DateFormat[] $r2;
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        org.jdesktop.swingx.JXDatePicker $r1;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        $r1 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: java.text.DateFormat[] getFormats()>();

        return $r2;
    }

    public transient void setFormats(java.text.DateFormat[])
    {
        java.text.DateFormat[] r1;
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        org.jdesktop.swingx.JXDatePicker $r2;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        r1 := @parameter0: java.text.DateFormat[];

        $r2 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: void setFormats(java.text.DateFormat[])>(r1);

        return;
    }

    protected java.awt.event.ActionListener getPickerActionListener()
    {
        java.awt.event.ActionListener $r1, $r2, $r3;
        org.jdesktop.swingx.table.DatePickerCellEditor r0;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        $r1 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.awt.event.ActionListener pickerActionListener>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.awt.event.ActionListener createPickerActionListener()>();

        r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.awt.event.ActionListener pickerActionListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.awt.event.ActionListener pickerActionListener>;

        return $r2;
    }

    protected java.awt.event.ActionListener createPickerActionListener()
    {
        org.jdesktop.swingx.table.DatePickerCellEditor$1 $r0;
        org.jdesktop.swingx.table.DatePickerCellEditor r1;

        r1 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        $r0 = new org.jdesktop.swingx.table.DatePickerCellEditor$1;

        specialinvoke $r0.<org.jdesktop.swingx.table.DatePickerCellEditor$1: void <init>(org.jdesktop.swingx.table.DatePickerCellEditor)>(r1);

        return $r0;
    }

    public volatile java.lang.Object getCellEditorValue()
    {
        org.jdesktop.swingx.table.DatePickerCellEditor r0;
        java.util.Date $r1;

        r0 := @this: org.jdesktop.swingx.table.DatePickerCellEditor;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.DatePickerCellEditor: java.util.Date getCellEditorValue()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <org.jdesktop.swingx.table.DatePickerCellEditor: long serialVersionUID> = -1L;

        $r0 = class "Lorg/jdesktop/swingx/table/DatePickerCellEditor;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.table.DatePickerCellEditor: java.util.logging.Logger logger> = $r2;

        return;
    }
}
