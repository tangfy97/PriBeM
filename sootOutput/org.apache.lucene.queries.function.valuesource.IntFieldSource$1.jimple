class org.apache.lucene.queries.function.valuesource.IntFieldSource$1 extends org.apache.lucene.queries.function.docvalues.IntDocValues
{
    final org.apache.lucene.util.mutable.MutableValueInt val;
    final org.apache.lucene.search.FieldCache$Ints val$arr;
    final org.apache.lucene.util.Bits val$valid;
    final org.apache.lucene.queries.function.valuesource.IntFieldSource this$0;

    void <init>(org.apache.lucene.queries.function.valuesource.IntFieldSource, org.apache.lucene.queries.function.ValueSource, org.apache.lucene.search.FieldCache$Ints, org.apache.lucene.util.Bits)
    {
        org.apache.lucene.queries.function.ValueSource r4;
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r0;
        org.apache.lucene.queries.function.valuesource.IntFieldSource r1;
        org.apache.lucene.util.mutable.MutableValueInt $r5;
        org.apache.lucene.search.FieldCache$Ints r2;
        org.apache.lucene.util.Bits r3;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.IntFieldSource;

        r4 := @parameter1: org.apache.lucene.queries.function.ValueSource;

        r2 := @parameter2: org.apache.lucene.search.FieldCache$Ints;

        r3 := @parameter3: org.apache.lucene.util.Bits;

        r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.queries.function.valuesource.IntFieldSource this$0> = r1;

        r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.search.FieldCache$Ints val$arr> = r2;

        r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.util.Bits val$valid> = r3;

        specialinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: void <init>(org.apache.lucene.queries.function.ValueSource)>(r4);

        $r5 = new org.apache.lucene.util.mutable.MutableValueInt;

        specialinvoke $r5.<org.apache.lucene.util.mutable.MutableValueInt: void <init>()>();

        r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.util.mutable.MutableValueInt val> = $r5;

        return;
    }

    public float floatVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r0;
        int i0, $i1;
        float $f0;
        org.apache.lucene.search.FieldCache$Ints $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.search.FieldCache$Ints val$arr>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.search.FieldCache$Ints: int get(int)>(i0);

        $f0 = (float) $i1;

        return $f0;
    }

    public int intVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r0;
        int i0, $i1;
        org.apache.lucene.search.FieldCache$Ints $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.search.FieldCache$Ints val$arr>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.search.FieldCache$Ints: int get(int)>(i0);

        return $i1;
    }

    public long longVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r0;
        int i0, $i1;
        long $l2;
        org.apache.lucene.search.FieldCache$Ints $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.search.FieldCache$Ints val$arr>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.search.FieldCache$Ints: int get(int)>(i0);

        $l2 = (long) $i1;

        return $l2;
    }

    public double doubleVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r0;
        int i0, $i1;
        org.apache.lucene.search.FieldCache$Ints $r1;
        double $d0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.search.FieldCache$Ints val$arr>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.search.FieldCache$Ints: int get(int)>(i0);

        $d0 = (double) $i1;

        return $d0;
    }

    public java.lang.String strVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r0;
        int i0, $i1;
        java.lang.String $r2;
        org.apache.lucene.search.FieldCache$Ints $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.search.FieldCache$Ints val$arr>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.search.FieldCache$Ints: int get(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        return $r2;
    }

    public java.lang.Object objectVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r0;
        int i0, $i1;
        org.apache.lucene.search.FieldCache$Ints $r2;
        org.apache.lucene.util.Bits $r1;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.util.Bits val$valid>;

        $z0 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.search.FieldCache$Ints val$arr>;

        $i1 = virtualinvoke $r2.<org.apache.lucene.search.FieldCache$Ints: int get(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public boolean exists(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r0;
        int i0;
        org.apache.lucene.util.Bits $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.util.Bits val$valid>;

        $z0 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i0);

        return $z0;
    }

    public java.lang.String toString(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r1;
        org.apache.lucene.queries.function.valuesource.IntFieldSource $r2;
        int i0, $i1;
        java.lang.StringBuilder $r0, $r4, $r5, $r6;
        java.lang.String $r3, $r7;

        r1 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.queries.function.valuesource.IntFieldSource this$0>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.queries.function.valuesource.IntFieldSource: java.lang.String description()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $i1 = virtualinvoke r1.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: int intVal(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public org.apache.lucene.queries.function.ValueSourceScorer getRangeScorer(org.apache.lucene.index.IndexReader, java.lang.String, java.lang.String, boolean, boolean)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1 $r5;
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r2;
        int $i0, $i1, i2, i3, $i5;
        java.lang.String r0, r1;
        org.apache.lucene.index.IndexReader r3;
        boolean z0, z1;

        r2 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        r3 := @parameter0: org.apache.lucene.index.IndexReader;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r0 != null goto label1;

        i2 = -2147483648;

        goto label2;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        i2 = $i0;

        if z0 != 0 goto label2;

        if $i0 >= 2147483647 goto label2;

        i2 = $i0 + 1;

     label2:
        if r1 != null goto label3;

        i3 = 2147483647;

        goto label4;

     label3:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        i3 = $i1;

        if z1 != 0 goto label4;

        if $i1 <= -2147483648 goto label4;

        $i5 = (int) -1;

        i3 = $i1 + $i5;

     label4:
        $r5 = new org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1;

        specialinvoke $r5.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1: void <init>(org.apache.lucene.queries.function.valuesource.IntFieldSource$1,org.apache.lucene.index.IndexReader,org.apache.lucene.queries.function.FunctionValues,int,int)>(r2, r3, r2, i2, i3);

        return $r5;
    }

    public org.apache.lucene.queries.function.FunctionValues$ValueFiller getValueFiller()
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1$2 $r0;
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r1;

        r1 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        $r0 = new org.apache.lucene.queries.function.valuesource.IntFieldSource$1$2;

        specialinvoke $r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1$2: void <init>(org.apache.lucene.queries.function.valuesource.IntFieldSource$1)>(r1);

        return $r0;
    }
}
