public class org.xmpp.forms.FormField extends java.lang.Object
{
    private org.dom4j.Element element;

    void <init>(org.dom4j.Element)
    {
        org.dom4j.Element r1;
        org.xmpp.forms.FormField r0;

        r0 := @this: org.xmpp.forms.FormField;

        r1 := @parameter0: org.dom4j.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmpp.forms.FormField: org.dom4j.Element element> = r1;

        return;
    }

    public void addValue(java.lang.Object)
    {
        org.xmpp.forms.FormField r0;
        org.dom4j.Element $r1, $r2;
        java.lang.Object r3;
        java.lang.String $r4;

        r0 := @this: org.xmpp.forms.FormField;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("value");

        $r4 = staticinvoke <org.xmpp.forms.DataForm: java.lang.String encode(java.lang.Object)>(r3);

        interfaceinvoke $r2.<org.dom4j.Element: void setText(java.lang.String)>($r4);

        return;
    }

    public void clearValues()
    {
        org.xmpp.forms.FormField r0;
        java.util.Iterator $r2;
        org.dom4j.Element $r1;
        boolean $z0;

        r0 := @this: org.xmpp.forms.FormField;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: java.util.Iterator elementIterator(java.lang.String)>("value");

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public void addOption(java.lang.String, java.lang.String)
    {
        org.xmpp.forms.FormField r0;
        org.dom4j.Element $r1, $r2, $r4;
        java.lang.String r3, r5;

        r0 := @this: org.xmpp.forms.FormField;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("option");

        interfaceinvoke $r2.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("label", r3);

        $r4 = interfaceinvoke $r2.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("value");

        interfaceinvoke $r4.<org.dom4j.Element: void setText(java.lang.String)>(r5);

        return;
    }

    public java.util.List getOptions()
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r0;
        org.xmpp.forms.FormField$Option $r4;
        org.xmpp.forms.FormField r1;
        org.dom4j.Element $r2, $r6;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.xmpp.forms.FormField;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r3 = interfaceinvoke $r2.<org.dom4j.Element: java.util.Iterator elementIterator(java.lang.String)>("option");

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = new org.xmpp.forms.FormField$Option;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.dom4j.Element) $r5;

        specialinvoke $r4.<org.xmpp.forms.FormField$Option: void <init>(org.dom4j.Element,org.xmpp.forms.FormField$1)>($r6, null);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r0;
    }

    public void setType(org.xmpp.forms.FormField$Type)
    {
        org.xmpp.forms.FormField r0;
        org.xmpp.forms.FormField$Type r1;
        org.dom4j.Element $r2;
        java.lang.String $r3;

        r0 := @this: org.xmpp.forms.FormField;

        r1 := @parameter0: org.xmpp.forms.FormField$Type;

        $r2 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

     label2:
        interfaceinvoke $r2.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("type", $r3);

        return;
    }

    public void setVariable(java.lang.String)
    {
        org.dom4j.Element $r2;
        java.lang.String r1;
        org.xmpp.forms.FormField r0;

        r0 := @this: org.xmpp.forms.FormField;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        interfaceinvoke $r2.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("var", r1);

        return;
    }

    public void setLabel(java.lang.String)
    {
        org.dom4j.Element $r2;
        java.lang.String r1;
        org.xmpp.forms.FormField r0;

        r0 := @this: org.xmpp.forms.FormField;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        interfaceinvoke $r2.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("label", r1);

        return;
    }

    public void setRequired(boolean)
    {
        org.xmpp.forms.FormField r0;
        org.dom4j.Element $r1, $r2, $r3, $r4, $r5, $r6;
        boolean z0;

        r0 := @this: org.xmpp.forms.FormField;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element element(java.lang.String)>("required");

        if $r2 == null goto label1;

        $r5 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r4 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r6 = interfaceinvoke $r4.<org.dom4j.Element: org.dom4j.Element element(java.lang.String)>("required");

        interfaceinvoke $r5.<org.dom4j.Element: boolean remove(org.dom4j.Element)>($r6);

     label1:
        if z0 == 0 goto label2;

        $r3 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        interfaceinvoke $r3.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("required");

     label2:
        return;
    }

    public void setDescription(java.lang.String)
    {
        org.xmpp.forms.FormField r0;
        org.dom4j.Element $r1, $r2, $r3, $r4, $r6, $r7, $r8;
        java.lang.String r5;

        r0 := @this: org.xmpp.forms.FormField;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element element(java.lang.String)>("desc");

        if $r2 == null goto label1;

        $r7 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r6 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r8 = interfaceinvoke $r6.<org.dom4j.Element: org.dom4j.Element element(java.lang.String)>("desc");

        interfaceinvoke $r7.<org.dom4j.Element: boolean remove(org.dom4j.Element)>($r8);

     label1:
        $r3 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r4 = interfaceinvoke $r3.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("desc");

        interfaceinvoke $r4.<org.dom4j.Element: void setText(java.lang.String)>(r5);

        return;
    }

    public boolean isRequired()
    {
        org.xmpp.forms.FormField r0;
        org.dom4j.Element $r1, $r2;
        boolean $z0;

        r0 := @this: org.xmpp.forms.FormField;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element element(java.lang.String)>("required");

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getVariable()
    {
        org.dom4j.Element $r1;
        java.lang.String $r2;
        org.xmpp.forms.FormField r0;

        r0 := @this: org.xmpp.forms.FormField;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: java.lang.String attributeValue(java.lang.String)>("var");

        return $r2;
    }

    public java.util.List getValues()
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r0;
        org.xmpp.forms.FormField r1;
        org.dom4j.Element $r2, $r5;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;

        r1 := @this: org.xmpp.forms.FormField;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r3 = interfaceinvoke $r2.<org.dom4j.Element: java.util.Iterator elementIterator(java.lang.String)>("value");

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.dom4j.Element) $r4;

        $r6 = interfaceinvoke $r5.<org.dom4j.Element: java.lang.String getTextTrim()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r0;
    }

    public org.xmpp.forms.FormField$Type getType()
    {
        org.dom4j.Element $r1;
        java.lang.String $r2;
        org.xmpp.forms.FormField r0;

        r0 := @this: org.xmpp.forms.FormField;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: java.lang.String attributeValue(java.lang.String)>("type");

        if $r2 == null goto label1;

        staticinvoke <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type fromXMPP(java.lang.String)>($r2);

     label1:
        return null;
    }

    public java.lang.String getLabel()
    {
        org.dom4j.Element $r1;
        java.lang.String $r2;
        org.xmpp.forms.FormField r0;

        r0 := @this: org.xmpp.forms.FormField;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: java.lang.String attributeValue(java.lang.String)>("label");

        return $r2;
    }

    public java.lang.String getDescription()
    {
        org.dom4j.Element $r1;
        java.lang.String $r2;
        org.xmpp.forms.FormField r0;

        r0 := @this: org.xmpp.forms.FormField;

        $r1 = r0.<org.xmpp.forms.FormField: org.dom4j.Element element>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: java.lang.String elementTextTrim(java.lang.String)>("desc");

        return $r2;
    }
}
