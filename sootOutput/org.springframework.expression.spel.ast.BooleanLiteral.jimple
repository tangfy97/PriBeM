public class org.springframework.expression.spel.ast.BooleanLiteral extends org.springframework.expression.spel.ast.Literal
{
    private final org.springframework.expression.spel.support.BooleanTypedValue value;

    public void <init>(java.lang.String, int, boolean)
    {
        org.springframework.expression.spel.ast.BooleanLiteral r0;
        org.springframework.expression.spel.support.BooleanTypedValue $r2;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.springframework.expression.spel.ast.BooleanLiteral;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.springframework.expression.spel.ast.Literal: void <init>(java.lang.String,int)>(r1, i0);

        $r2 = staticinvoke <org.springframework.expression.spel.support.BooleanTypedValue: org.springframework.expression.spel.support.BooleanTypedValue forValue(boolean)>(z0);

        r0.<org.springframework.expression.spel.ast.BooleanLiteral: org.springframework.expression.spel.support.BooleanTypedValue value> = $r2;

        return;
    }

    public org.springframework.expression.spel.support.BooleanTypedValue getLiteralValue()
    {
        org.springframework.expression.spel.ast.BooleanLiteral r0;
        org.springframework.expression.spel.support.BooleanTypedValue $r1;

        r0 := @this: org.springframework.expression.spel.ast.BooleanLiteral;

        $r1 = r0.<org.springframework.expression.spel.ast.BooleanLiteral: org.springframework.expression.spel.support.BooleanTypedValue value>;

        return $r1;
    }

    public volatile org.springframework.expression.TypedValue getLiteralValue()
    {
        org.springframework.expression.spel.ast.BooleanLiteral r0;
        org.springframework.expression.spel.support.BooleanTypedValue $r1;

        r0 := @this: org.springframework.expression.spel.ast.BooleanLiteral;

        $r1 = virtualinvoke r0.<org.springframework.expression.spel.ast.BooleanLiteral: org.springframework.expression.spel.support.BooleanTypedValue getLiteralValue()>();

        return $r1;
    }
}
