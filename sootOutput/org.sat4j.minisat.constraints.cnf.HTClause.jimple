public abstract class org.sat4j.minisat.constraints.cnf.HTClause extends java.lang.Object implements org.sat4j.minisat.core.Propagatable, org.sat4j.minisat.core.Constr, java.io.Serializable
{
    private static final long serialVersionUID;
    protected double activity;
    protected final int[] middleLits;
    protected final org.sat4j.minisat.core.ILits voc;
    protected int head;
    protected int tail;
    static final boolean $assertionsDisabled;

    public void <init>(org.sat4j.specs.IVecInt, org.sat4j.minisat.core.ILits)
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        java.lang.AssertionError $r6, $r7, $r8;
        int[] $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.sat4j.minisat.core.ILits r5;
        boolean $z0, $z1, $z2;
        org.sat4j.specs.IVecInt r1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        r5 := @parameter1: org.sat4j.minisat.core.ILits;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i4 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if $i4 > 1 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $i0 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int get(int)>(0);

        r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head> = $i0;

        $i1 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int last()>();

        r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail> = $i1;

        $i2 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        $i5 = $i2 - 2;

        $z1 = <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if $i5 > 0 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r2 = newarray (int)[$i5];

        r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits> = $r2;

        $r3 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int[] toArray()>();

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 1, $r4, 0, $i5);

        interfaceinvoke r1.<org.sat4j.specs.IVecInt: void clear()>();

        $z2 = <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $i3 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if $i3 == 0 goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label3:
        r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc> = r5;

        r0.<org.sat4j.minisat.constraints.cnf.HTClause: double activity> = 0.0;

        return;
    }

    public void calcReason(int, org.sat4j.specs.IVecInt)
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        int[] $r5;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9, i10;
        org.sat4j.minisat.core.ILits $r1, $r2, $r4;
        boolean $z0, $z1, $z2;
        org.sat4j.specs.IVecInt r3;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        i9 := @parameter0: int;

        r3 := @parameter1: org.sat4j.specs.IVecInt;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $z0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i0);

        if $z0 == 0 goto label1;

        $i6 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $i7 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i6);

        interfaceinvoke r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i7);

     label1:
        $r5 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i8 = lengthof $r5;

        i10 = 0;

     label2:
        if i10 >= $i8 goto label4;

        i4 = $r5[i10];

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $z2 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>(i4);

        if $z2 == 0 goto label3;

        $i5 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>(i4);

        interfaceinvoke r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

     label3:
        i10 = i10 + 1;

        goto label2;

     label4:
        $r2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $z1 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i1);

        if $z1 == 0 goto label5;

        $i2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $i3 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i2);

        interfaceinvoke r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

     label5:
        return;
    }

    public void remove(org.sat4j.minisat.core.UnitPropagationListener)
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        int $i0, $i1, $i2, $i3;
        org.sat4j.minisat.core.UnitPropagationListener r5;
        org.sat4j.specs.IVec $r2, $r4;
        org.sat4j.minisat.core.ILits $r1, $r3;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        r5 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $i1 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i0);

        $r2 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec watches(int)>($i1);

        interfaceinvoke $r2.<org.sat4j.specs.IVec: void remove(java.lang.Object)>(r0);

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $i3 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i2);

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec watches(int)>($i3);

        interfaceinvoke $r4.<org.sat4j.specs.IVec: void remove(java.lang.Object)>(r0);

        return;
    }

    public boolean simplify()
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        int[] r3;
        int $i0, $i1, i2, i3, i4;
        org.sat4j.minisat.core.ILits $r1, $r2, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $z0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $z1 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        r3 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        i2 = lengthof r3;

        i4 = 0;

     label3:
        if i4 >= i2 goto label5;

        i3 = r3[i4];

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $z2 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>(i3);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return 0;
    }

    public boolean propagate(org.sat4j.minisat.core.UnitPropagationListener, int)
    {
        int[] $r6, r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.sat4j.minisat.core.UnitPropagationListener r3;
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        java.lang.AssertionError $r13, $r14, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, $i24, $i26, $i28;
        org.sat4j.minisat.core.ILits $r1, $r2, $r5, $r8, $r9, $r11;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        r3 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        i0 := @parameter1: int;

        $i1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $i2 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>(i0);

        if $i1 != $i2 goto label05;

        r12 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        i21 = 0;

     label01:
        $i12 = lengthof r12;

        if i21 >= $i12 goto label02;

        $r11 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i20 = r12[i21];

        $z6 = interfaceinvoke $r11.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i20);

        if $z6 == 0 goto label02;

        i21 = i21 + 1;

        goto label01;

     label02:
        $z4 = <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled>;

        if $z4 != 0 goto label03;

        $i19 = lengthof r12;

        if i21 <= $i19 goto label03;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label03:
        $i13 = lengthof r12;

        if i21 != $i13 goto label04;

        $r9 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r9.<org.sat4j.minisat.core.ILits: void watch(int,org.sat4j.minisat.core.Propagatable)>(i0, r0);

        $i18 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $z5 = interfaceinvoke r3.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i18, r0);

        return $z5;

     label04:
        $i14 = r12[i21];

        r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head> = $i14;

        $i15 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>(i0);

        r12[i21] = $i15;

        $r8 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i16 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $i17 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i16);

        interfaceinvoke $r8.<org.sat4j.minisat.core.ILits: void watch(int,org.sat4j.minisat.core.Propagatable)>($i17, r0);

        return 1;

     label05:
        $z0 = <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled>;

        if $z0 != 0 goto label06;

        $i10 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $i11 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>(i0);

        if $i10 == $i11 goto label06;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label06:
        $r6 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i3 = lengthof $r6;

        i22 = $i3 - 1;

     label07:
        if i22 < 0 goto label08;

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i9 = $r6[i22];

        $z3 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i9);

        if $z3 == 0 goto label08;

        $i24 = (int) -1;

        i22 = i22 + $i24;

        goto label07;

     label08:
        $z1 = <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled>;

        if $z1 != 0 goto label09;

        $i26 = (int) -1;

        if $i26 <= i22 goto label09;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label09:
        $i28 = (int) -1;

        if $i28 != i22 goto label10;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: void watch(int,org.sat4j.minisat.core.Propagatable)>(i0, r0);

        $i8 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $z2 = interfaceinvoke r3.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i8, r0);

        return $z2;

     label10:
        $i4 = $r6[i22];

        r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail> = $i4;

        $i5 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>(i0);

        $r6[i22] = $i5;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i6 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $i7 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i6);

        interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: void watch(int,org.sat4j.minisat.core.Propagatable)>($i7, r0);

        return 1;
    }

    public boolean locked()
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        org.sat4j.minisat.core.Constr $r2, $r4;
        int $i0, $i1;
        org.sat4j.minisat.core.ILits $r1, $r3;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $r2 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i0);

        if $r2 == r0 goto label1;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i1);

        if $r4 != r0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public double getActivity()
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        double $d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        $d0 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: double activity>;

        return $d0;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.constraints.cnf.HTClause r1;
        int[] r5;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2, $i3, $i4, i5, i6;
        java.lang.String $r2, $r4, $r6, $r8, $r9, $r10, $r12;
        org.sat4j.minisat.core.ILits $r3, $r7, $r11;

        r1 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $r2 = staticinvoke <org.sat4j.minisat.constraints.cnf.Lits: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r3 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i1 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: java.lang.String valueToString(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r5 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        i2 = lengthof r5;

        i6 = 0;

     label1:
        if i6 >= i2 goto label2;

        i5 = r5[i6];

        $r10 = staticinvoke <org.sat4j.minisat.constraints.cnf.Lits: java.lang.String toString(int)>(i5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r11 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $r12 = interfaceinvoke $r11.<org.sat4j.minisat.core.ILits: java.lang.String valueToString(int)>(i5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i6 = i6 + 1;

        goto label1;

     label2:
        $i3 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $r6 = staticinvoke <org.sat4j.minisat.constraints.cnf.Lits: java.lang.String toString(int)>($i3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r7 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i4 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $r8 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: java.lang.String valueToString(int)>($i4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public int get(int)
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        int[] $r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i6 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        return $i6;

     label1:
        $r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i1 = lengthof $r1;

        $i2 = $i1 + 1;

        if i0 != $i2 goto label2;

        $i5 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        return $i5;

     label2:
        $r2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i3 = i0 - 1;

        $i4 = $r2[$i3];

        return $i4;
    }

    public void rescaleBy(double)
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        double d0, $d1, $d2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        d0 := @parameter0: double;

        $d1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: double activity>;

        $d2 = $d1 * d0;

        r0.<org.sat4j.minisat.constraints.cnf.HTClause: double activity> = $d2;

        return;
    }

    public int size()
    {
        int[] $r1;
        int $i0, $i1;
        org.sat4j.minisat.constraints.cnf.HTClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 2;

        return $i1;
    }

    public void assertConstraint(org.sat4j.minisat.core.UnitPropagationListener)
    {
        org.sat4j.minisat.constraints.cnf.HTClause r1;
        java.lang.AssertionError $r2, $r4;
        org.sat4j.minisat.core.UnitPropagationListener r0;
        int $i0, $i1;
        org.sat4j.minisat.core.ILits $r3;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        r0 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        $z0 = <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        $i1 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $z3 = interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: boolean isUnassigned(int)>($i1);

        if $z3 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $i0 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $z1 = interfaceinvoke r0.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i0, r1);

        $z2 = <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled>;

        if $z2 != 0 goto label2;

        if $z1 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        return;
    }

    public org.sat4j.minisat.core.ILits getVocabulary()
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: org.sat4j.minisat.core.ILits voc>;

        return $r1;
    }

    public int[] getLits()
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        int[] r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        $i0 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.HTClause: int size()>();

        r1 = newarray (int)[$i0];

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i1 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 1, $i1);

        $i2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        r1[0] = $i2;

        $i3 = lengthof r1;

        $i5 = $i3 - 1;

        $i4 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        r1[$i5] = $i4;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.sat4j.minisat.constraints.cnf.HTClause r1, r7;
        java.lang.ClassCastException $r6;
        int[] $r2, $r3, r4, r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        boolean z0;
        java.lang.Object r0;

        r1 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        return 0;

     label01:
        r7 = (org.sat4j.minisat.constraints.cnf.HTClause) r0;

        $i1 = r7.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $i0 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        if $i1 != $i0 goto label02;

        $i3 = r7.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $i2 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        if $i3 == $i2 goto label03;

     label02:
        return 0;

     label03:
        $r2 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i5 = lengthof $r2;

        $r3 = r7.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i4 = lengthof $r3;

        if $i5 == $i4 goto label05;

     label04:
        return 0;

     label05:
        r4 = r1.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        i6 = lengthof r4;

        i10 = 0;

     label06:
        if i10 >= i6 goto label12;

        i7 = r4[i10];

        z0 = 0;

        r5 = r7.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        i8 = lengthof r5;

        i11 = 0;

     label07:
        if i11 >= i8 goto label09;

        i9 = r5[i11];

        if i7 != i9 goto label08;

        z0 = 1;

        goto label09;

     label08:
        i11 = i11 + 1;

        goto label07;

     label09:
        if z0 != 0 goto label11;

     label10:
        return 0;

     label11:
        i10 = i10 + 1;

        goto label06;

     label12:
        return 1;

     label13:
        $r6 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label01 to label02 with label13;
        catch java.lang.ClassCastException from label03 to label04 with label13;
        catch java.lang.ClassCastException from label05 to label10 with label13;
        catch java.lang.ClassCastException from label11 to label12 with label13;
    }

    public int hashCode()
    {
        long $l8, l9;
        org.sat4j.minisat.constraints.cnf.HTClause r0;
        int[] r1, $r2;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, i7, i10;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        $i1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int head>;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int tail>;

        $i2 = $i1 + $i0;

        l9 = (long) $i2;

        r1 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        i3 = lengthof r1;

        i10 = 0;

     label1:
        if i10 >= i3 goto label2;

        i7 = r1[i10];

        $l8 = (long) i7;

        l9 = l9 + $l8;

        i10 = i10 + 1;

        goto label1;

     label2:
        $i5 = (int) l9;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.HTClause: int[] middleLits>;

        $i4 = lengthof $r2;

        $i6 = $i5 / $i4;

        return $i6;
    }

    public boolean canBePropagatedMultipleTimes()
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        return 0;
    }

    public org.sat4j.minisat.core.Constr toConstraint()
    {
        org.sat4j.minisat.constraints.cnf.HTClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.HTClause;

        return r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.constraints.cnf.HTClause: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/constraints/cnf/HTClause;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.constraints.cnf.HTClause: boolean $assertionsDisabled> = $z1;

        return;
    }
}
