public class br.usp.ime.RESTServer extends java.lang.Object implements java.lang.Runnable
{
    private org.apache.log4j.Logger logger;
    private java.lang.String name;
    private java.lang.String url;
    private java.lang.Class[] classes;
    private boolean running;

    public void <init>(java.lang.String, java.lang.String, java.lang.Class[])
    {
        org.apache.log4j.Logger $r1;
        java.lang.Class[] r4;
        java.lang.String r2, r3;
        br.usp.ime.RESTServer r0;

        r0 := @this: br.usp.ime.RESTServer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Lbr/usp/ime/RESTServer;");

        r0.<br.usp.ime.RESTServer: org.apache.log4j.Logger logger> = $r1;

        r0.<br.usp.ime.RESTServer: boolean running> = 0;

        r0.<br.usp.ime.RESTServer: java.lang.String name> = r2;

        r0.<br.usp.ime.RESTServer: java.lang.String url> = r3;

        r0.<br.usp.ime.RESTServer: java.lang.Class[] classes> = r4;

        return;
    }

    public void start()
    {
        org.apache.log4j.Logger $r3;
        java.lang.InterruptedException $r2;
        java.lang.Thread $r0;
        br.usp.ime.RESTServer r1;
        boolean $z0;

        r1 := @this: br.usp.ime.RESTServer;

        $r0 = new java.lang.Thread;

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>(r1);

        virtualinvoke $r0.<java.lang.Thread: void start()>();

     label1:
        $z0 = r1.<br.usp.ime.RESTServer: boolean running>;

        if $z0 != 0 goto label5;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(1L);

     label3:
        goto label1;

     label4:
        $r2 := @caughtexception;

        $r3 = r1.<br.usp.ime.RESTServer: org.apache.log4j.Logger logger>;

        virtualinvoke $r3.<org.apache.log4j.Logger: void error(java.lang.Object)>($r2);

        goto label1;

     label5:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public void stop()
    {
        br.usp.ime.RESTServer r0;

        r0 := @this: br.usp.ime.RESTServer;

        r0.<br.usp.ime.RESTServer: boolean running> = 0;

        return;
    }

    public void run()
    {
        org.apache.log4j.Logger $r4, $r13;
        int i0, i1;
        java.lang.String $r2, $r5, $r8, $r11, $r14, $r17;
        boolean $z0;
        org.apache.cxf.jaxrs.JAXRSServerFactoryBean $r0;
        java.lang.Class[] $r19, r21;
        br.usp.ime.RESTServer r1;
        java.lang.InterruptedException $r20;
        java.lang.StringBuilder $r3, $r6, $r7, $r9, $r10, $r12, $r15, $r16;
        java.lang.Class r18;

        r1 := @this: br.usp.ime.RESTServer;

        $r0 = new org.apache.cxf.jaxrs.JAXRSServerFactoryBean;

        specialinvoke $r0.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void <init>()>();

        r21 = r1.<br.usp.ime.RESTServer: java.lang.Class[] classes>;

        i0 = lengthof r21;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r18 = r21[i1];

        $r19 = newarray (java.lang.Class)[1];

        $r19[0] = r18;

        virtualinvoke $r0.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setResourceClasses(java.lang.Class[])>($r19);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r1.<br.usp.ime.RESTServer: java.lang.String url>;

        virtualinvoke $r0.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setAddress(java.lang.String)>($r2);

        virtualinvoke $r0.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: org.apache.cxf.endpoint.Server create()>();

        $r4 = r1.<br.usp.ime.RESTServer: org.apache.log4j.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r1.<br.usp.ime.RESTServer: java.lang.String name>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has started [");

        $r8 = r1.<br.usp.ime.RESTServer: java.lang.String url>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.log4j.Logger: void info(java.lang.Object)>($r11);

        r1.<br.usp.ime.RESTServer: boolean running> = 1;

     label3:
        $z0 = r1.<br.usp.ime.RESTServer: boolean running>;

        if $z0 == 0 goto label7;

     label4:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label5:
        goto label3;

     label6:
        $r20 := @caughtexception;

        virtualinvoke $r20.<java.lang.InterruptedException: void printStackTrace()>();

        goto label3;

     label7:
        $r13 = r1.<br.usp.ime.RESTServer: org.apache.log4j.Logger logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = r1.<br.usp.ime.RESTServer: java.lang.String name>;

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has stopped");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<org.apache.log4j.Logger: void info(java.lang.Object)>($r17);

        return;

        catch java.lang.InterruptedException from label4 to label5 with label6;
    }
}
