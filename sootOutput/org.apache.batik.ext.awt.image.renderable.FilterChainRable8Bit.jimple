public class org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit extends org.apache.batik.ext.awt.image.renderable.AbstractRable implements org.apache.batik.ext.awt.image.renderable.FilterChainRable, org.apache.batik.ext.awt.image.renderable.PaintRable
{
    private int filterResolutionX;
    private int filterResolutionY;
    private org.apache.batik.ext.awt.image.renderable.Filter chainSource;
    private org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes;
    private org.apache.batik.ext.awt.image.renderable.PadRable crop;
    private java.awt.geom.Rectangle2D filterRegion;

    public void <init>(org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D r2, r4;
        org.apache.batik.ext.awt.image.renderable.PadRable $r7;
        java.lang.IllegalArgumentException $r8, $r9;
        org.apache.batik.ext.awt.image.renderable.Filter r1;
        org.apache.batik.ext.awt.image.PadMode $r6;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r5;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        r2 := @parameter1: java.awt.geom.Rectangle2D;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label1:
        if r2 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label2:
        $r3 = virtualinvoke r2.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        r4 = (java.awt.geom.Rectangle2D) $r3;

        $r5 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r6 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r5.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>(r1, r4, $r6);

        r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.PadRable crop> = $r5;

        r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter chainSource> = r1;

        r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: java.awt.geom.Rectangle2D filterRegion> = r2;

        $r7 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.PadRable crop>;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void init(org.apache.batik.ext.awt.image.renderable.Filter)>($r7);

        return;
    }

    public int getFilterResolutionX()
    {
        int $i0;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        $i0 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: int filterResolutionX>;

        return $i0;
    }

    public void setFilterResolutionX(int)
    {
        int i0;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: int filterResolutionX> = i0;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: void setupFilterRes()>();

        return;
    }

    public int getFilterResolutionY()
    {
        int $i0;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        $i0 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: int filterResolutionY>;

        return $i0;
    }

    public void setFilterResolutionY(int)
    {
        int i0;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: int filterResolutionY> = i0;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: void setupFilterRes()>();

        return;
    }

    private void setupFilterRes()
    {
        org.apache.batik.ext.awt.image.renderable.FilterResRable8Bit $r9;
        org.apache.batik.ext.awt.image.renderable.PadRable $r3, $r5;
        org.apache.batik.ext.awt.image.renderable.FilterResRable $r1, $r4, $r6, $r7, $r8, $r11;
        org.apache.batik.ext.awt.image.renderable.Filter $r2, $r10;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        $i0 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: int filterResolutionX>;

        if $i0 < 0 goto label2;

        $r6 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes>;

        if $r6 != null goto label1;

        $r9 = new org.apache.batik.ext.awt.image.renderable.FilterResRable8Bit;

        specialinvoke $r9.<org.apache.batik.ext.awt.image.renderable.FilterResRable8Bit: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes> = $r9;

        $r11 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes>;

        $r10 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter chainSource>;

        interfaceinvoke $r11.<org.apache.batik.ext.awt.image.renderable.FilterResRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>($r10);

     label1:
        $r7 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes>;

        $i1 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: int filterResolutionX>;

        interfaceinvoke $r7.<org.apache.batik.ext.awt.image.renderable.FilterResRable: void setFilterResolutionX(int)>($i1);

        $r8 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes>;

        $i2 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: int filterResolutionY>;

        interfaceinvoke $r8.<org.apache.batik.ext.awt.image.renderable.FilterResRable: void setFilterResolutionY(int)>($i2);

        goto label3;

     label2:
        r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes> = null;

     label3:
        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes>;

        if $r1 == null goto label4;

        $r5 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.PadRable crop>;

        $r4 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes>;

        interfaceinvoke $r5.<org.apache.batik.ext.awt.image.renderable.PadRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>($r4);

        goto label5;

     label4:
        $r3 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.PadRable crop>;

        $r2 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter chainSource>;

        interfaceinvoke $r3.<org.apache.batik.ext.awt.image.renderable.PadRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>($r2);

     label5:
        return;
    }

    public void setFilterRegion(java.awt.geom.Rectangle2D)
    {
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r1;
        java.lang.IllegalArgumentException $r2;
        java.awt.geom.Rectangle2D r0;

        r1 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        r0 := @parameter0: java.awt.geom.Rectangle2D;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke r1.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r1.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: java.awt.geom.Rectangle2D filterRegion> = r0;

        return;
    }

    public java.awt.geom.Rectangle2D getFilterRegion()
    {
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;
        java.awt.geom.Rectangle2D $r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: java.awt.geom.Rectangle2D filterRegion>;

        return $r1;
    }

    public org.apache.batik.ext.awt.image.renderable.Filter getSource()
    {
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;
        org.apache.batik.ext.awt.image.renderable.PadRable $r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.PadRable crop>;

        return $r1;
    }

    public void setSource(org.apache.batik.ext.awt.image.renderable.Filter)
    {
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r1;
        org.apache.batik.ext.awt.image.renderable.PadRable $r4;
        java.lang.IllegalArgumentException $r5;
        org.apache.batik.ext.awt.image.renderable.Filter r0;
        org.apache.batik.ext.awt.image.renderable.FilterResRable $r2, $r3;

        r1 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        r0 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null Source for Filter Chain");

        throw $r5;

     label1:
        virtualinvoke r1.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r1.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter chainSource> = r0;

        $r2 = r1.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes>;

        if $r2 != null goto label2;

        $r4 = r1.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.PadRable crop>;

        interfaceinvoke $r4.<org.apache.batik.ext.awt.image.renderable.PadRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>(r0);

        goto label3;

     label2:
        $r3 = r1.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.FilterResRable filterRes>;

        interfaceinvoke $r3.<org.apache.batik.ext.awt.image.renderable.FilterResRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>(r0);

     label3:
        return;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;
        java.awt.geom.Rectangle2D $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: java.awt.geom.Rectangle2D filterRegion>;

        $r2 = virtualinvoke $r1.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r3 = (java.awt.geom.Rectangle2D) $r2;

        return $r3;
    }

    public boolean paintRable(java.awt.Graphics2D)
    {
        org.apache.batik.ext.awt.image.SVGComposite $r2;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r3;
        java.awt.Graphics2D r0;
        java.awt.Composite $r1;
        org.apache.batik.ext.awt.image.renderable.Filter $r4;
        boolean $z0;

        r3 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        r0 := @parameter0: java.awt.Graphics2D;

        $r1 = virtualinvoke r0.<java.awt.Graphics2D: java.awt.Composite getComposite()>();

        $r2 = <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite OVER>;

        $z0 = virtualinvoke $r2.<org.apache.batik.ext.awt.image.SVGComposite: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r3.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter getSource()>();

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: void drawImage(java.awt.Graphics2D,java.awt.image.renderable.RenderableImage)>(r0, $r4);

        return 1;
    }

    public java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)
    {
        java.awt.image.renderable.RenderContext r1;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit r0;
        org.apache.batik.ext.awt.image.renderable.PadRable $r2;
        java.awt.image.RenderedImage $r3;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        r1 := @parameter0: java.awt.image.renderable.RenderContext;

        $r2 = r0.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: org.apache.batik.ext.awt.image.renderable.PadRable crop>;

        $r3 = interfaceinvoke $r2.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)>(r1);

        return $r3;
    }
}
