public class org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta
{
    private org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl signedOriginalDelta;
    private org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAppliedAt;
    private java.lang.Integer operationsApplied;
    private java.lang.Double applicationTimestamp;

    public void <init>()
    {
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)>(r1);

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)
    {
        int $i0;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta r1;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r3;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignedDelta $r2;
        boolean $z0;
        double $d0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: org.waveprotocol.wave.federation.ProtocolSignedDelta getSignedOriginalDelta()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: void setSignedOriginalDelta(org.waveprotocol.wave.federation.ProtocolSignedDelta)>($r2);

        $z0 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: boolean hasHashedVersionAppliedAt()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAppliedAt()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: void setHashedVersionAppliedAt(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r3);

        goto label2;

     label1:
        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: void clearHashedVersionAppliedAt()>();

     label2:
        $i0 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: int getOperationsApplied()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: void setOperationsApplied(int)>($i0);

        $d0 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: double getApplicationTimestamp()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: void setApplicationTimestamp(double)>($d0);

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl getSignedOriginalDelta()
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl $r0, $r2;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r1;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl;

        $r2 = r1.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl signedOriginalDelta>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl: void <init>(org.waveprotocol.wave.federation.ProtocolSignedDelta)>($r2);

        return $r0;
    }

    public void setSignedOriginalDelta(org.waveprotocol.wave.federation.ProtocolSignedDelta)
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl $r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignedDelta r2;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignedDelta;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl: void <init>(org.waveprotocol.wave.federation.ProtocolSignedDelta)>(r2);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl signedOriginalDelta> = $r1;

        return;
    }

    public boolean hasHashedVersionAppliedAt()
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAppliedAt>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearHashedVersionAppliedAt()
    {
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAppliedAt> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl getHashedVersionAppliedAt()
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r0, $r2;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r1;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl;

        $r2 = r1.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAppliedAt>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r2);

        return $r0;
    }

    public void setHashedVersionAppliedAt(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r1;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r2;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r2);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAppliedAt> = $r1;

        return;
    }

    public int getOperationsApplied()
    {
        int $i0;
        java.lang.Integer $r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: java.lang.Integer operationsApplied>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void setOperationsApplied(int)
    {
        int i0;
        java.lang.Integer $r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: java.lang.Integer operationsApplied> = $r1;

        return;
    }

    public double getApplicationTimestamp()
    {
        java.lang.Double $r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;
        double $d0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: java.lang.Double applicationTimestamp>;

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public void setApplicationTimestamp(double)
    {
        java.lang.Double $r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;
        double d0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: java.lang.Double applicationTimestamp> = $r1;

        return;
    }

    protected void reset()
    {
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl signedOriginalDelta> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAppliedAt> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: java.lang.Integer operationsApplied> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: java.lang.Double applicationTimestamp> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta $r2;
        java.lang.Object r0;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r1;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta) r0;

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta,org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        $i0 = staticinvoke <org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaUtil: int getHashCode(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)>(r0);

        return $i0;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAppliedAt()
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl getHashedVersionAppliedAt()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolSignedDelta getSignedOriginalDelta()
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl $r1;
        org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolAppliedWaveletDeltaImpl: org.waveprotocol.wave.federation.impl.ProtocolSignedDeltaImpl getSignedOriginalDelta()>();

        return $r1;
    }
}
