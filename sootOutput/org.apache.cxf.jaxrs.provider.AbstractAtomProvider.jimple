public abstract class org.apache.cxf.jaxrs.provider.AbstractAtomProvider extends java.lang.Object implements javax.ws.rs.ext.MessageBodyWriter, javax.ws.rs.ext.MessageBodyReader
{
    private static final org.apache.abdera.Abdera ATOM_ENGINE;
    private boolean formattedOutput;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.AbstractAtomProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractAtomProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long getSize(org.apache.abdera.model.Element, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.AbstractAtomProvider r0;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation[] r4;
        org.apache.abdera.model.Element r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractAtomProvider;

        r1 := @parameter0: org.apache.abdera.model.Element;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    public void writeTo(org.apache.abdera.model.Element, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.abdera.writer.WriterFactory $r6, $r9;
        java.lang.'annotation'.Annotation[] r13;
        javax.ws.rs.core.MediaType r0, $r1;
        org.apache.cxf.jaxrs.provider.AbstractAtomProvider r2;
        boolean $z0, $z1;
        java.io.OutputStream r4;
        org.apache.abdera.writer.Writer $r7, $r10;
        javax.ws.rs.core.MultivaluedMap r14;
        java.lang.reflect.Type r12;
        org.apache.abdera.Abdera $r5, $r8;
        java.lang.Class r11;
        org.apache.abdera.model.Element r3;

        r2 := @this: org.apache.cxf.jaxrs.provider.AbstractAtomProvider;

        r3 := @parameter0: org.apache.abdera.model.Element;

        r11 := @parameter1: java.lang.Class;

        r12 := @parameter2: java.lang.reflect.Type;

        r13 := @parameter3: java.lang.'annotation'.Annotation[];

        r0 := @parameter4: javax.ws.rs.core.MediaType;

        r14 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter6: java.io.OutputStream;

        $r1 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_JSON_TYPE>;

        $z0 = virtualinvoke $r1.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>(r0);

        if $z0 == 0 goto label1;

        $r8 = <org.apache.cxf.jaxrs.provider.AbstractAtomProvider: org.apache.abdera.Abdera ATOM_ENGINE>;

        $r9 = virtualinvoke $r8.<org.apache.abdera.Abdera: org.apache.abdera.writer.WriterFactory getWriterFactory()>();

        $r10 = interfaceinvoke $r9.<org.apache.abdera.writer.WriterFactory: org.apache.abdera.writer.Writer getWriter(java.lang.String)>("json");

        interfaceinvoke r3.<org.apache.abdera.model.Element: void writeTo(org.apache.abdera.writer.Writer,java.io.OutputStream)>($r10, r4);

        goto label3;

     label1:
        $z1 = r2.<org.apache.cxf.jaxrs.provider.AbstractAtomProvider: boolean formattedOutput>;

        if $z1 == 0 goto label2;

        $r5 = <org.apache.cxf.jaxrs.provider.AbstractAtomProvider: org.apache.abdera.Abdera ATOM_ENGINE>;

        $r6 = virtualinvoke $r5.<org.apache.abdera.Abdera: org.apache.abdera.writer.WriterFactory getWriterFactory()>();

        $r7 = interfaceinvoke $r6.<org.apache.abdera.writer.WriterFactory: org.apache.abdera.writer.Writer getWriter(java.lang.String)>("prettyxml");

        interfaceinvoke r3.<org.apache.abdera.model.Element: void writeTo(org.apache.abdera.writer.Writer,java.io.OutputStream)>($r7, r4);

        goto label3;

     label2:
        interfaceinvoke r3.<org.apache.abdera.model.Element: void writeTo(java.io.OutputStream)>(r4);

     label3:
        return;
    }

    public org.apache.abdera.model.Element readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException
    {
        org.apache.abdera.model.Document $r3;
        java.lang.'annotation'.Annotation[] r8;
        org.apache.abdera.parser.Parser $r1;
        javax.ws.rs.core.MultivaluedMap r10;
        javax.ws.rs.core.MediaType r9;
        java.lang.reflect.Type r7;
        org.apache.abdera.Abdera $r0;
        org.apache.cxf.jaxrs.provider.AbstractAtomProvider r5;
        java.lang.Class r6;
        java.io.InputStream r2;
        org.apache.abdera.model.Element $r4;

        r5 := @this: org.apache.cxf.jaxrs.provider.AbstractAtomProvider;

        r6 := @parameter0: java.lang.Class;

        r7 := @parameter1: java.lang.reflect.Type;

        r8 := @parameter2: java.lang.'annotation'.Annotation[];

        r9 := @parameter3: javax.ws.rs.core.MediaType;

        r10 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r2 := @parameter5: java.io.InputStream;

        $r0 = <org.apache.cxf.jaxrs.provider.AbstractAtomProvider: org.apache.abdera.Abdera ATOM_ENGINE>;

        $r1 = virtualinvoke $r0.<org.apache.abdera.Abdera: org.apache.abdera.parser.Parser getParser()>();

        $r3 = interfaceinvoke $r1.<org.apache.abdera.parser.Parser: org.apache.abdera.model.Document parse(java.io.InputStream)>(r2);

        $r4 = interfaceinvoke $r3.<org.apache.abdera.model.Document: org.apache.abdera.model.Element getRoot()>();

        return $r4;
    }

    public void setFormattedOutput(boolean)
    {
        org.apache.cxf.jaxrs.provider.AbstractAtomProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractAtomProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.AbstractAtomProvider: boolean formattedOutput> = z0;

        return;
    }

    public volatile void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.io.OutputStream r7;
        java.lang.'annotation'.Annotation[] r4;
        javax.ws.rs.core.MultivaluedMap r6;
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.AbstractAtomProvider r0;
        java.lang.Object r1;
        java.lang.Class r2;
        org.apache.abdera.model.Element $r8;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractAtomProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        r6 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r7 := @parameter6: java.io.OutputStream;

        $r8 = (org.apache.abdera.model.Element) r1;

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractAtomProvider: void writeTo(org.apache.abdera.model.Element,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)>($r8, r2, r3, r4, r5, r6, r7);

        return;
    }

    public volatile long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        long $l0;
        java.lang.'annotation'.Annotation[] r4;
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.AbstractAtomProvider r0;
        java.lang.Object r1;
        java.lang.Class r2;
        org.apache.abdera.model.Element $r6;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractAtomProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        $r6 = (org.apache.abdera.model.Element) r1;

        $l0 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractAtomProvider: long getSize(org.apache.abdera.model.Element,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>($r6, r2, r3, r4, r5);

        return $l0;
    }

    public volatile java.lang.Object readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.lang.'annotation'.Annotation[] r3;
        javax.ws.rs.core.MultivaluedMap r5;
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        org.apache.cxf.jaxrs.provider.AbstractAtomProvider r0;
        java.lang.Class r1;
        java.io.InputStream r6;
        org.apache.abdera.model.Element $r7;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractAtomProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        r5 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r6 := @parameter5: java.io.InputStream;

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractAtomProvider: org.apache.abdera.model.Element readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(r1, r2, r3, r4, r5, r6);

        return $r7;
    }

    static void <clinit>()
    {
        org.apache.abdera.Abdera $r0;

        $r0 = new org.apache.abdera.Abdera;

        specialinvoke $r0.<org.apache.abdera.Abdera: void <init>()>();

        <org.apache.cxf.jaxrs.provider.AbstractAtomProvider: org.apache.abdera.Abdera ATOM_ENGINE> = $r0;

        return;
    }
}
