public final class org.apache.poi.xslf.usermodel.XSLFSlide extends org.apache.poi.xslf.usermodel.XSLFSheet
{
    private final org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide;
    private org.apache.poi.xslf.usermodel.XSLFSlideLayout _layout;
    private org.apache.poi.xslf.usermodel.XSLFComments _comments;
    private org.apache.poi.xslf.usermodel.XSLFNotes _notes;

    void <init>()
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData $r3;
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlide $r1, $r2;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSheet: void <init>()>();

        $r1 = staticinvoke <org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide prototype()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide> = $r1;

        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData getCSld()>();

        virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: void setCommonSlideData(org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData)>($r3);

        return;
    }

    void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException, org.apache.xmlbeans.XmlException
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlide $r6, $r7;
        org.openxmlformats.schemas.presentationml.x2006.main.SldDocument $r5;
        org.apache.poi.openxml4j.opc.PackageRelationship r2;
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData $r8;
        org.apache.poi.openxml4j.opc.PackagePart r1, $r3;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        java.io.InputStream $r4;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSheet: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        $r3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r5 = staticinvoke <org.openxmlformats.schemas.presentationml.x2006.main.SldDocument$Factory: org.openxmlformats.schemas.presentationml.x2006.main.SldDocument parse(java.io.InputStream)>($r4);

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.presentationml.x2006.main.SldDocument: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide getSld()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide> = $r6;

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData getCSld()>();

        virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: void setCommonSlideData(org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData)>($r8);

        return;
    }

    private static org.openxmlformats.schemas.presentationml.x2006.main.CTSlide prototype()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTGroupShapeProperties $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGroupTransform2D $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTColorMappingOverride $r11;
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlide $r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r7, $r9;
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData $r1;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r4;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShapeNonVisual $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r8, $r10;

        $r0 = staticinvoke <org.openxmlformats.schemas.presentationml.x2006.main.CTSlide$Factory: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide newInstance()>();

        $r1 = interfaceinvoke $r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData addNewCSld()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData: org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape addNewSpTree()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape: org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShapeNonVisual addNewNvGrpSpPr()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShapeNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps addNewCNvPr()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setId(long)>(1L);

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setName(java.lang.String)>("");

        interfaceinvoke $r3.<org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShapeNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualGroupDrawingShapeProps addNewCNvGrpSpPr()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShapeNonVisual: org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps addNewNvPr()>();

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape: org.openxmlformats.schemas.drawingml.x2006.main.CTGroupShapeProperties addNewGrpSpPr()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTGroupShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTGroupTransform2D addNewXfrm()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTGroupTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D addNewOff()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setX(long)>(0L);

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setY(long)>(0L);

        $r8 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTGroupTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewExt()>();

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>(0L);

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>(0L);

        $r9 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTGroupTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D addNewChOff()>();

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setX(long)>(0L);

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setY(long)>(0L);

        $r10 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTGroupTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewChExt()>();

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>(0L);

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>(0L);

        $r11 = interfaceinvoke $r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlide: org.openxmlformats.schemas.drawingml.x2006.main.CTColorMappingOverride addNewClrMapOvr()>();

        interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTColorMappingOverride: org.openxmlformats.schemas.drawingml.x2006.main.CTEmptyElement addNewMasterClrMapping()>();

        return $r0;
    }

    public org.openxmlformats.schemas.presentationml.x2006.main.CTSlide getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlide $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide>;

        return $r1;
    }

    protected java.lang.String getRootElementName()
    {
        org.apache.poi.xslf.usermodel.XSLFSlide r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        return "sld";
    }

    public org.apache.poi.xslf.usermodel.XSLFSlideLayout getMasterSheet()
    {
        org.apache.poi.xslf.usermodel.XSLFSlideLayout $r1;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout getSlideLayout()>();

        return $r1;
    }

    public org.apache.poi.xslf.usermodel.XSLFSlideLayout getSlideLayout()
    {
        org.apache.poi.POIXMLDocumentPart r13;
        org.apache.poi.xslf.usermodel.XSLFSlideLayout $r1, $r2, $r3, $r14;
        java.lang.String $r7, $r9;
        boolean $z0, $z1;
        java.util.Iterator $r11;
        java.lang.IllegalArgumentException $r4;
        java.util.List $r10;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.Object $r12;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout _layout>;

        if $r1 != null goto label3;

        $r10 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: java.util.List getRelations()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.poi.POIXMLDocumentPart) $r12;

        $z1 = r13 instanceof org.apache.poi.xslf.usermodel.XSLFSlideLayout;

        if $z1 == 0 goto label2;

        $r14 = (org.apache.poi.xslf.usermodel.XSLFSlideLayout) r13;

        r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout _layout> = $r14;

     label2:
        goto label1;

     label3:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout _layout>;

        if $r2 != null goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SlideLayout was not found for ");

        $r7 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label4:
        $r3 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout _layout>;

        return $r3;
    }

    public org.apache.poi.xslf.usermodel.XSLFSlideMaster getSlideMaster()
    {
        org.apache.poi.xslf.usermodel.XSLFSlideLayout $r1;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        org.apache.poi.xslf.usermodel.XSLFSlideMaster $r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout getSlideLayout()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFSlideLayout: org.apache.poi.xslf.usermodel.XSLFSlideMaster getSlideMaster()>();

        return $r2;
    }

    public org.apache.poi.xslf.usermodel.XSLFComments getComments()
    {
        org.apache.poi.xslf.usermodel.XSLFComments $r1, $r2, $r3, $r8;
        java.util.Iterator $r5;
        java.util.List $r4;
        org.apache.poi.POIXMLDocumentPart r7;
        java.lang.Object $r6;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFComments _comments>;

        if $r1 != null goto label3;

        $r4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: java.util.List getRelations()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.POIXMLDocumentPart) $r6;

        $z1 = r7 instanceof org.apache.poi.xslf.usermodel.XSLFComments;

        if $z1 == 0 goto label2;

        $r8 = (org.apache.poi.xslf.usermodel.XSLFComments) r7;

        r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFComments _comments> = $r8;

     label2:
        goto label1;

     label3:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFComments _comments>;

        if $r2 != null goto label4;

        return null;

     label4:
        $r3 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFComments _comments>;

        return $r3;
    }

    public org.apache.poi.xslf.usermodel.XSLFNotes getNotes()
    {
        java.util.Iterator $r5;
        org.apache.poi.xslf.usermodel.XSLFNotes $r1, $r2, $r3, $r8;
        java.util.List $r4;
        org.apache.poi.POIXMLDocumentPart r7;
        java.lang.Object $r6;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFNotes _notes>;

        if $r1 != null goto label3;

        $r4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: java.util.List getRelations()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.POIXMLDocumentPart) $r6;

        $z1 = r7 instanceof org.apache.poi.xslf.usermodel.XSLFNotes;

        if $z1 == 0 goto label2;

        $r8 = (org.apache.poi.xslf.usermodel.XSLFNotes) r7;

        r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFNotes _notes> = $r8;

     label2:
        goto label1;

     label3:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFNotes _notes>;

        if $r2 != null goto label4;

        return null;

     label4:
        $r3 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFNotes _notes>;

        return $r3;
    }

    public java.lang.String getTitle()
    {
        org.apache.poi.xslf.usermodel.Placeholder $r1;
        java.lang.String $r3;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        org.apache.poi.xslf.usermodel.XSLFTextShape $r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = <org.apache.poi.xslf.usermodel.Placeholder: org.apache.poi.xslf.usermodel.Placeholder TITLE>;

        $r2 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFTextShape getTextShapeByType(org.apache.poi.xslf.usermodel.Placeholder)>($r1);

        if $r2 != null goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XSLFTextShape: java.lang.String getText()>();

     label2:
        return $r3;
    }

    public org.apache.poi.xslf.usermodel.XSLFTheme getTheme()
    {
        org.apache.poi.xslf.usermodel.XSLFTheme $r3;
        org.apache.poi.xslf.usermodel.XSLFSlideLayout $r1;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        org.apache.poi.xslf.usermodel.XSLFSlideMaster $r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout getSlideLayout()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFSlideLayout: org.apache.poi.xslf.usermodel.XSLFSlideMaster getSlideMaster()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XSLFSlideMaster: org.apache.poi.xslf.usermodel.XSLFTheme getTheme()>();

        return $r3;
    }

    public org.apache.poi.xslf.usermodel.XSLFBackground getBackground()
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData $r2;
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlide $r1;
        org.openxmlformats.schemas.presentationml.x2006.main.CTBackground $r3;
        org.apache.poi.xslf.usermodel.XSLFSlideLayout $r4;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        org.apache.poi.xslf.usermodel.XSLFBackground $r5, $r6;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData getCSld()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData: org.openxmlformats.schemas.presentationml.x2006.main.CTBackground getBg()>();

        if $r3 == null goto label1;

        $r6 = new org.apache.poi.xslf.usermodel.XSLFBackground;

        specialinvoke $r6.<org.apache.poi.xslf.usermodel.XSLFBackground: void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTBackground,org.apache.poi.xslf.usermodel.XSLFSheet)>($r3, r0);

        return $r6;

     label1:
        $r4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout getMasterSheet()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.xslf.usermodel.XSLFSlideLayout: org.apache.poi.xslf.usermodel.XSLFBackground getBackground()>();

        return $r5;
    }

    public boolean getFollowMasterGraphics()
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlide $r1, $r2;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlide: boolean isSetShowMasterSp()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide>;

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlide: boolean getShowMasterSp()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void setFollowMasterGraphics(boolean)
    {
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        boolean z0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlide $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide _slide>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlide: void setShowMasterSp(boolean)>(z0);

        return;
    }

    public void draw(java.awt.Graphics2D)
    {
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        java.awt.Graphics2D r2;
        org.apache.poi.xslf.usermodel.XSLFBackground $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        r2 := @parameter0: java.awt.Graphics2D;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFBackground getBackground()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFBackground: void draw(java.awt.Graphics2D)>(r2);

     label1:
        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSheet: void draw(java.awt.Graphics2D)>(r2);

        return;
    }

    public org.apache.poi.xslf.usermodel.XSLFSlide importContent(org.apache.poi.xslf.usermodel.XSLFSheet)
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTBackground r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r7;
        org.apache.poi.xslf.usermodel.XSLFSheet r1;
        org.openxmlformats.schemas.presentationml.x2006.main.CTBackgroundProperties $r5, $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r8;
        org.apache.poi.openxml4j.opc.PackagePart $r10;
        org.apache.xmlbeans.XmlObject $r3;
        java.lang.String $r9, $r11;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        org.apache.poi.xslf.usermodel.XSLFBackground $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        r1 := @parameter0: org.apache.poi.xslf.usermodel.XSLFSheet;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFSheet importContent(org.apache.poi.xslf.usermodel.XSLFSheet)>(r1);

        $r2 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFBackground getBackground()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XSLFBackground: org.apache.xmlbeans.XmlObject getXmlObject()>();

        r4 = (org.openxmlformats.schemas.presentationml.x2006.main.CTBackground) $r3;

        $z0 = interfaceinvoke r4.<org.openxmlformats.schemas.presentationml.x2006.main.CTBackground: boolean isSetBgPr()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r4.<org.openxmlformats.schemas.presentationml.x2006.main.CTBackground: org.openxmlformats.schemas.presentationml.x2006.main.CTBackgroundProperties getBgPr()>();

        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.presentationml.x2006.main.CTBackgroundProperties: boolean isSetBlipFill()>();

        if $z1 == 0 goto label1;

        $r6 = interfaceinvoke r4.<org.openxmlformats.schemas.presentationml.x2006.main.CTBackground: org.openxmlformats.schemas.presentationml.x2006.main.CTBackgroundProperties getBgPr()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.presentationml.x2006.main.CTBackgroundProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties getBlipFill()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: java.lang.String getEmbed()>();

        $r10 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r11 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: java.lang.String importBlip(java.lang.String,org.apache.poi.openxml4j.opc.PackagePart)>($r9, $r10);

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: void setEmbed(java.lang.String)>($r11);

     label1:
        return r0;
    }

    public volatile org.apache.poi.xslf.usermodel.XSLFSheet getMasterSheet()
    {
        org.apache.poi.xslf.usermodel.XSLFSlideLayout $r1;
        org.apache.poi.xslf.usermodel.XSLFSlide r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout getMasterSheet()>();

        return $r1;
    }

    public volatile org.apache.poi.xslf.usermodel.XSLFSheet importContent(org.apache.poi.xslf.usermodel.XSLFSheet)
    {
        org.apache.poi.xslf.usermodel.XSLFSlide r0, $r2;
        org.apache.poi.xslf.usermodel.XSLFSheet r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        r1 := @parameter0: org.apache.poi.xslf.usermodel.XSLFSheet;

        $r2 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlide importContent(org.apache.poi.xslf.usermodel.XSLFSheet)>(r1);

        return $r2;
    }

    public volatile org.apache.xmlbeans.XmlObject getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFSlide r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlide $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFSlide;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTSlide getXmlObject()>();

        return $r1;
    }
}
