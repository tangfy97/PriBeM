public abstract class com.ctc.wstx.sw.XmlWriterWrapper extends java.io.Writer
{
    protected final com.ctc.wstx.sw.XmlWriter mWriter;
    private char[] mBuffer;

    public static com.ctc.wstx.sw.XmlWriterWrapper wrapWriteRaw(com.ctc.wstx.sw.XmlWriter)
    {
        com.ctc.wstx.sw.XmlWriter r1;
        com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper $r0;

        r1 := @parameter0: com.ctc.wstx.sw.XmlWriter;

        $r0 = new com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper;

        specialinvoke $r0.<com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper: void <init>(com.ctc.wstx.sw.XmlWriter)>(r1);

        return $r0;
    }

    public static com.ctc.wstx.sw.XmlWriterWrapper wrapWriteCharacters(com.ctc.wstx.sw.XmlWriter)
    {
        com.ctc.wstx.sw.XmlWriter r1;
        com.ctc.wstx.sw.XmlWriterWrapper$TextWrapper $r0;

        r1 := @parameter0: com.ctc.wstx.sw.XmlWriter;

        $r0 = new com.ctc.wstx.sw.XmlWriterWrapper$TextWrapper;

        specialinvoke $r0.<com.ctc.wstx.sw.XmlWriterWrapper$TextWrapper: void <init>(com.ctc.wstx.sw.XmlWriter)>(r1);

        return $r0;
    }

    protected void <init>(com.ctc.wstx.sw.XmlWriter)
    {
        com.ctc.wstx.sw.XmlWriter r1;
        com.ctc.wstx.sw.XmlWriterWrapper r0;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper;

        r1 := @parameter0: com.ctc.wstx.sw.XmlWriter;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<com.ctc.wstx.sw.XmlWriterWrapper: char[] mBuffer> = null;

        r0.<com.ctc.wstx.sw.XmlWriterWrapper: com.ctc.wstx.sw.XmlWriter mWriter> = r1;

        return;
    }

    public final void close() throws java.io.IOException
    {
        com.ctc.wstx.sw.XmlWriter $r1;
        com.ctc.wstx.sw.XmlWriterWrapper r0;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper;

        $r1 = r0.<com.ctc.wstx.sw.XmlWriterWrapper: com.ctc.wstx.sw.XmlWriter mWriter>;

        virtualinvoke $r1.<com.ctc.wstx.sw.XmlWriter: void close()>();

        return;
    }

    public final void flush() throws java.io.IOException
    {
        com.ctc.wstx.sw.XmlWriter $r1;
        com.ctc.wstx.sw.XmlWriterWrapper r0;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper;

        $r1 = r0.<com.ctc.wstx.sw.XmlWriterWrapper: com.ctc.wstx.sw.XmlWriter mWriter>;

        virtualinvoke $r1.<com.ctc.wstx.sw.XmlWriter: void close()>();

        return;
    }

    public final void write(char[]) throws java.io.IOException
    {
        int $i0;
        char[] r1;
        com.ctc.wstx.sw.XmlWriterWrapper r0;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.ctc.wstx.sw.XmlWriterWrapper: void write(char[],int,int)>(r1, 0, $i0);

        return;
    }

    public abstract void write(char[], int, int) throws java.io.IOException;

    public final void write(int) throws java.io.IOException
    {
        int i0;
        char[] $r1, $r2, $r3, $r4;
        com.ctc.wstx.sw.XmlWriterWrapper r0;
        char $c1;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.sw.XmlWriterWrapper: char[] mBuffer>;

        if $r1 != null goto label1;

        $r4 = newarray (char)[1];

        r0.<com.ctc.wstx.sw.XmlWriterWrapper: char[] mBuffer> = $r4;

     label1:
        $r2 = r0.<com.ctc.wstx.sw.XmlWriterWrapper: char[] mBuffer>;

        $c1 = (char) i0;

        $r2[0] = $c1;

        $r3 = r0.<com.ctc.wstx.sw.XmlWriterWrapper: char[] mBuffer>;

        virtualinvoke r0.<com.ctc.wstx.sw.XmlWriterWrapper: void write(char[],int,int)>($r3, 0, 1);

        return;
    }

    public abstract void write(java.lang.String) throws java.io.IOException;

    public abstract void write(java.lang.String, int, int) throws java.io.IOException;
}
