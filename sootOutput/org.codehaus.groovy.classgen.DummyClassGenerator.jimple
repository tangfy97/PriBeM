public class org.codehaus.groovy.classgen.DummyClassGenerator extends org.codehaus.groovy.classgen.ClassGenerator
{
    private groovyjarjarasm.asm.ClassVisitor cv;
    private groovyjarjarasm.asm.MethodVisitor mv;
    private org.codehaus.groovy.classgen.GeneratorContext context;
    private java.lang.String sourceFile;
    private org.codehaus.groovy.ast.ClassNode classNode;
    private java.lang.String internalClassName;
    private java.lang.String internalBaseClassName;

    public void <init>(org.codehaus.groovy.classgen.GeneratorContext, groovyjarjarasm.asm.ClassVisitor, java.lang.ClassLoader, java.lang.String)
    {
        groovyjarjarasm.asm.ClassVisitor r3;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;
        java.lang.ClassLoader r1;
        java.lang.String r4;
        org.codehaus.groovy.classgen.GeneratorContext r2;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r2 := @parameter0: org.codehaus.groovy.classgen.GeneratorContext;

        r3 := @parameter1: groovyjarjarasm.asm.ClassVisitor;

        r1 := @parameter2: java.lang.ClassLoader;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.classgen.ClassGenerator: void <init>(java.lang.ClassLoader)>(r1);

        r0.<org.codehaus.groovy.classgen.DummyClassGenerator: org.codehaus.groovy.classgen.GeneratorContext context> = r2;

        r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.ClassVisitor cv> = r3;

        r0.<org.codehaus.groovy.classgen.DummyClassGenerator: java.lang.String sourceFile> = r4;

        return;
    }

    public void visitClass(org.codehaus.groovy.ast.ClassNode)
    {
        java.lang.String[] $r9;
        org.codehaus.groovy.ast.ModuleNode $r20;
        groovyjarjarasm.asm.ClassVisitor $r5, $r12, $r17;
        org.codehaus.groovy.ast.MethodNode $r16;
        int $i0, $i1;
        org.codehaus.groovy.ast.ClassNode[] $r8;
        java.lang.String $r2, $r4, $r6, $r7, $r15, $r18, r21;
        java.util.LinkedList $r10;
        boolean $z0;
        java.util.Iterator $r11;
        groovy.lang.GroovyRuntimeException $r19;
        org.codehaus.groovy.ast.ClassNode r1, $r3, r14;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;
        java.lang.Object $r13;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

     label1:
        r0.<org.codehaus.groovy.classgen.DummyClassGenerator: org.codehaus.groovy.ast.ClassNode classNode> = r1;

        $r2 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getClassInternalName(org.codehaus.groovy.ast.ClassNode)>(r1);

        r0.<org.codehaus.groovy.classgen.DummyClassGenerator: java.lang.String internalClassName> = $r2;

        $r3 = virtualinvoke r1.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ClassNode getSuperClass()>();

        $r4 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getClassInternalName(org.codehaus.groovy.ast.ClassNode)>($r3);

        r0.<org.codehaus.groovy.classgen.DummyClassGenerator: java.lang.String internalBaseClassName> = $r4;

        $r5 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.ClassVisitor cv>;

        $i0 = virtualinvoke r1.<org.codehaus.groovy.ast.ClassNode: int getModifiers()>();

        $r6 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: java.lang.String internalClassName>;

        $r7 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: java.lang.String internalBaseClassName>;

        $r8 = virtualinvoke r1.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ClassNode[] getInterfaces()>();

        $r9 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String[] getClassInternalNames(org.codehaus.groovy.ast.ClassNode[])>($r8);

        interfaceinvoke $r5.<groovyjarjarasm.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(47, $i0, $r6, null, $r7, $r9);

        virtualinvoke r1.<org.codehaus.groovy.ast.ClassNode: void visitContents(org.codehaus.groovy.ast.GroovyClassVisitor)>(r0);

        $r10 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: java.util.LinkedList innerClasses>;

        $r11 = virtualinvoke $r10.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.codehaus.groovy.ast.ClassNode) $r13;

        $r15 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getClassInternalName(org.codehaus.groovy.ast.ClassNode)>(r14);

        r21 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: java.lang.String internalClassName>;

        $r16 = virtualinvoke r14.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.MethodNode getEnclosingMethod()>();

        if $r16 == null goto label3;

        r21 = null;

     label3:
        $r17 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.ClassVisitor cv>;

        $r18 = virtualinvoke r14.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        $i1 = virtualinvoke r14.<org.codehaus.groovy.ast.ClassNode: int getModifiers()>();

        interfaceinvoke $r17.<groovyjarjarasm.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>($r15, r21, $r18, $i1);

        goto label2;

     label4:
        $r12 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.ClassVisitor cv>;

        interfaceinvoke $r12.<groovyjarjarasm.asm.ClassVisitor: void visitEnd()>();

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        $r20 = virtualinvoke r1.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ModuleNode getModule()>();

        virtualinvoke $r19.<groovy.lang.GroovyRuntimeException: void setModule(org.codehaus.groovy.ast.ModuleNode)>($r20);

        throw $r19;

     label7:
        return;

        catch groovy.lang.GroovyRuntimeException from label1 to label5 with label6;
    }

    public void visitConstructor(org.codehaus.groovy.ast.ConstructorNode)
    {
        org.codehaus.groovy.ast.ClassNode $r3;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;
        groovyjarjarasm.asm.MethodVisitor $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.codehaus.groovy.ast.Parameter[] $r2, $r4;
        groovyjarjarasm.asm.ClassVisitor $r6;
        int $i0;
        java.lang.String $r5;
        org.codehaus.groovy.ast.ConstructorNode r1;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r1 := @parameter0: org.codehaus.groovy.ast.ConstructorNode;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.ast.ConstructorNode: org.codehaus.groovy.ast.Parameter[] getParameters()>();

        virtualinvoke r0.<org.codehaus.groovy.classgen.DummyClassGenerator: void visitParameters(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.Parameter[])>(r1, $r2);

        $r3 = <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode VOID_TYPE>;

        $r4 = virtualinvoke r1.<org.codehaus.groovy.ast.ConstructorNode: org.codehaus.groovy.ast.Parameter[] getParameters()>();

        $r5 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getMethodDescriptor(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.Parameter[])>($r3, $r4);

        $r6 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.ClassVisitor cv>;

        $i0 = virtualinvoke r1.<org.codehaus.groovy.ast.ConstructorNode: int getModifiers()>();

        $r7 = interfaceinvoke $r6.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($i0, "<init>", $r5, null, null);

        r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv> = $r7;

        $r8 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>(187, "java/lang/RuntimeException");

        $r9 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r9.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(89);

        $r10 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r10.<groovyjarjarasm.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>("not intended for execution");

        $r11 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r11.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(183, "java/lang/RuntimeException", "<init>", "(Ljava/lang/String;)V");

        $r12 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r12.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(191);

        $r13 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r13.<groovyjarjarasm.asm.MethodVisitor: void visitMaxs(int,int)>(0, 0);

        return;
    }

    public void visitMethod(org.codehaus.groovy.ast.MethodNode)
    {
        groovyjarjarasm.asm.MethodVisitor $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        groovyjarjarasm.asm.ClassVisitor $r6;
        org.codehaus.groovy.ast.MethodNode r1;
        int $i0;
        java.lang.String $r5, $r7;
        org.codehaus.groovy.ast.ClassNode $r3;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;
        org.codehaus.groovy.ast.Parameter[] $r2, $r4;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r1 := @parameter0: org.codehaus.groovy.ast.MethodNode;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: org.codehaus.groovy.ast.Parameter[] getParameters()>();

        virtualinvoke r0.<org.codehaus.groovy.classgen.DummyClassGenerator: void visitParameters(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.Parameter[])>(r1, $r2);

        $r3 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: org.codehaus.groovy.ast.ClassNode getReturnType()>();

        $r4 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: org.codehaus.groovy.ast.Parameter[] getParameters()>();

        $r5 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getMethodDescriptor(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.Parameter[])>($r3, $r4);

        $r6 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.ClassVisitor cv>;

        $i0 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: int getModifiers()>();

        $r7 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: java.lang.String getName()>();

        $r8 = interfaceinvoke $r6.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($i0, $r7, $r5, null, null);

        r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv> = $r8;

        $r9 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r9.<groovyjarjarasm.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>(187, "java/lang/RuntimeException");

        $r10 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r10.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(89);

        $r11 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r11.<groovyjarjarasm.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>("not intended for execution");

        $r12 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r12.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(183, "java/lang/RuntimeException", "<init>", "(Ljava/lang/String;)V");

        $r13 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r13.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(191);

        $r14 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.MethodVisitor mv>;

        interfaceinvoke $r14.<groovyjarjarasm.asm.MethodVisitor: void visitMaxs(int,int)>(0, 0);

        return;
    }

    public void visitField(org.codehaus.groovy.ast.FieldNode)
    {
        groovyjarjarasm.asm.ClassVisitor $r2;
        org.codehaus.groovy.ast.FieldNode r1;
        org.codehaus.groovy.ast.ClassNode $r4;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;
        int $i0;
        java.lang.String $r3, $r5;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r1 := @parameter0: org.codehaus.groovy.ast.FieldNode;

        $r2 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: groovyjarjarasm.asm.ClassVisitor cv>;

        $i0 = virtualinvoke r1.<org.codehaus.groovy.ast.FieldNode: int getModifiers()>();

        $r3 = virtualinvoke r1.<org.codehaus.groovy.ast.FieldNode: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<org.codehaus.groovy.ast.FieldNode: org.codehaus.groovy.ast.ClassNode getType()>();

        $r5 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getTypeDescription(org.codehaus.groovy.ast.ClassNode)>($r4);

        interfaceinvoke $r2.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($i0, $r3, $r5, null, null);

        return;
    }

    public void visitProperty(org.codehaus.groovy.ast.PropertyNode)
    {
        org.codehaus.groovy.ast.PropertyNode r1;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r1 := @parameter0: org.codehaus.groovy.ast.PropertyNode;

        return;
    }

    protected org.codehaus.groovy.ast.CompileUnit getCompileUnit()
    {
        org.codehaus.groovy.ast.ClassNode $r1;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;
        org.codehaus.groovy.ast.CompileUnit $r2, r4;
        org.codehaus.groovy.classgen.GeneratorContext $r3;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        $r1 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: org.codehaus.groovy.ast.ClassNode classNode>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.CompileUnit getCompileUnit()>();

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = r0.<org.codehaus.groovy.classgen.DummyClassGenerator: org.codehaus.groovy.classgen.GeneratorContext context>;

        r4 = virtualinvoke $r3.<org.codehaus.groovy.classgen.GeneratorContext: org.codehaus.groovy.ast.CompileUnit getCompileUnit()>();

     label1:
        return r4;
    }

    protected void visitParameters(org.codehaus.groovy.ast.ASTNode, org.codehaus.groovy.ast.Parameter[])
    {
        org.codehaus.groovy.ast.Parameter[] r0;
        org.codehaus.groovy.ast.ASTNode r2;
        org.codehaus.groovy.ast.Parameter $r3;
        org.codehaus.groovy.classgen.DummyClassGenerator r1;
        int i0, i1;

        r1 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r2 := @parameter0: org.codehaus.groovy.ast.ASTNode;

        r0 := @parameter1: org.codehaus.groovy.ast.Parameter[];

        i1 = 0;

        i0 = lengthof r0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0[i1];

        virtualinvoke r1.<org.codehaus.groovy.classgen.DummyClassGenerator: void visitParameter(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.Parameter)>(r2, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void visitParameter(org.codehaus.groovy.ast.ASTNode, org.codehaus.groovy.ast.Parameter)
    {
        org.codehaus.groovy.ast.ASTNode r1;
        org.codehaus.groovy.ast.Parameter r2;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r1 := @parameter0: org.codehaus.groovy.ast.ASTNode;

        r2 := @parameter1: org.codehaus.groovy.ast.Parameter;

        return;
    }

    public void visitAnnotations(org.codehaus.groovy.ast.AnnotatedNode)
    {
        org.codehaus.groovy.ast.AnnotatedNode r1;
        org.codehaus.groovy.classgen.DummyClassGenerator r0;

        r0 := @this: org.codehaus.groovy.classgen.DummyClassGenerator;

        r1 := @parameter0: org.codehaus.groovy.ast.AnnotatedNode;

        return;
    }
}
