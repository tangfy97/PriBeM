public class org.apache.http.impl.client.AutoRetryHttpClient extends java.lang.Object implements org.apache.http.client.HttpClient
{
    private final org.apache.http.client.HttpClient backend;
    private final org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy;
    private final org.apache.commons.logging.Log log;

    public void <init>(org.apache.http.client.HttpClient, org.apache.http.client.ServiceUnavailableRetryStrategy)
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.client.HttpClient r3;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.apache.http.client.ServiceUnavailableRetryStrategy r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r3 := @parameter0: org.apache.http.client.HttpClient;

        r4 := @parameter1: org.apache.http.client.ServiceUnavailableRetryStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.commons.logging.Log log> = $r2;

        if r3 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HttpClient may not be null");

        throw $r6;

     label1:
        if r4 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ServiceUnavailableRetryStrategy may not be null");

        throw $r5;

     label2:
        r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.client.HttpClient backend> = r3;

        r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy> = r4;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.client.DefaultHttpClient $r1;
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy $r2;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        $r1 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r2 = new org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy;

        specialinvoke $r2.<org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: void <init>()>();

        specialinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: void <init>(org.apache.http.client.HttpClient,org.apache.http.client.ServiceUnavailableRetryStrategy)>($r1, $r2);

        return;
    }

    public void <init>(org.apache.http.client.ServiceUnavailableRetryStrategy)
    {
        org.apache.http.impl.client.DefaultHttpClient $r1;
        org.apache.http.client.ServiceUnavailableRetryStrategy r2;
        org.apache.http.impl.client.AutoRetryHttpClient r0;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r2 := @parameter0: org.apache.http.client.ServiceUnavailableRetryStrategy;

        $r1 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        specialinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: void <init>(org.apache.http.client.HttpClient,org.apache.http.client.ServiceUnavailableRetryStrategy)>($r1, r2);

        return;
    }

    public void <init>(org.apache.http.client.HttpClient)
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.client.HttpClient r1;
        org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy $r2;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r1 := @parameter0: org.apache.http.client.HttpClient;

        $r2 = new org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy;

        specialinvoke $r2.<org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: void <init>()>();

        specialinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: void <init>(org.apache.http.client.HttpClient,org.apache.http.client.ServiceUnavailableRetryStrategy)>(r1, $r2);

        return;
    }

    public org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest) throws java.io.IOException
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.HttpResponse $r3;
        org.apache.http.HttpHost r1;
        org.apache.http.HttpRequest r2;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: org.apache.http.HttpRequest;

        $r3 = virtualinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r1, r2, null);

        return $r3;
    }

    public java.lang.Object execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.ResponseHandler) throws java.io.IOException
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        java.lang.Object $r4;
        org.apache.http.client.ResponseHandler r3;
        org.apache.http.HttpHost r1;
        org.apache.http.HttpRequest r2;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: org.apache.http.HttpRequest;

        r3 := @parameter2: org.apache.http.client.ResponseHandler;

        $r4 = virtualinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>(r1, r2, r3, null);

        return $r4;
    }

    public java.lang.Object execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.ResponseHandler, org.apache.http.protocol.HttpContext) throws java.io.IOException
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.HttpResponse $r4;
        java.lang.Object $r6;
        org.apache.http.client.ResponseHandler r5;
        org.apache.http.HttpHost r1;
        org.apache.http.HttpRequest r2;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: org.apache.http.HttpRequest;

        r5 := @parameter2: org.apache.http.client.ResponseHandler;

        r3 := @parameter3: org.apache.http.protocol.HttpContext;

        $r4 = virtualinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r1, r2, r3);

        $r6 = interfaceinvoke r5.<org.apache.http.client.ResponseHandler: java.lang.Object handleResponse(org.apache.http.HttpResponse)>($r4);

        return $r6;
    }

    public org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) throws java.io.IOException
    {
        org.apache.http.HttpResponse $r2;
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.client.methods.HttpUriRequest r1;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r1 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        $r2 = virtualinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>(r1, null);

        return $r2;
    }

    public org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest, org.apache.http.protocol.HttpContext) throws java.io.IOException
    {
        org.apache.http.impl.client.AutoRetryHttpClient r5;
        org.apache.http.client.methods.HttpUriRequest r0;
        org.apache.http.protocol.HttpContext r6;
        int $i0;
        org.apache.http.HttpResponse $r7;
        java.net.URI $r1;
        java.lang.String $r3, $r4;
        org.apache.http.HttpHost $r2;

        r5 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r0 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        r6 := @parameter1: org.apache.http.protocol.HttpContext;

        $r1 = interfaceinvoke r0.<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>();

        $r2 = new org.apache.http.HttpHost;

        $r3 = virtualinvoke $r1.<java.net.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke $r1.<java.net.URI: int getPort()>();

        $r4 = virtualinvoke $r1.<java.net.URI: java.lang.String getScheme()>();

        specialinvoke $r2.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r3, $i0, $r4);

        $r7 = virtualinvoke r5.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>($r2, r0, r6);

        return $r7;
    }

    public java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest, org.apache.http.client.ResponseHandler) throws java.io.IOException
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        java.lang.Object $r3;
        org.apache.http.client.methods.HttpUriRequest r1;
        org.apache.http.client.ResponseHandler r2;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r1 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        r2 := @parameter1: org.apache.http.client.ResponseHandler;

        $r3 = virtualinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>(r1, r2, null);

        return $r3;
    }

    public java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest, org.apache.http.client.ResponseHandler, org.apache.http.protocol.HttpContext) throws java.io.IOException
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.HttpResponse $r3;
        java.lang.Object $r5;
        org.apache.http.client.methods.HttpUriRequest r1;
        org.apache.http.client.ResponseHandler r4;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r1 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        r4 := @parameter1: org.apache.http.client.ResponseHandler;

        r2 := @parameter2: org.apache.http.protocol.HttpContext;

        $r3 = virtualinvoke r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>(r1, r2);

        $r5 = interfaceinvoke r4.<org.apache.http.client.ResponseHandler: java.lang.Object handleResponse(org.apache.http.HttpResponse)>($r3);

        return $r5;
    }

    public org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws java.io.IOException
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        long $l0;
        java.io.InterruptedIOException $r19;
        org.apache.http.client.HttpClient $r4;
        int i1;
        java.lang.String $r13, $r20;
        boolean $z0;
        org.apache.http.HttpEntity $r7, $r17;
        org.apache.http.client.ServiceUnavailableRetryStrategy $r6, $r8;
        java.io.IOException $r14;
        java.lang.RuntimeException $r16;
        org.apache.http.HttpRequest r2;
        java.lang.InterruptedException $r18;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.HttpResponse $r5;
        java.lang.StringBuilder $r9, $r11, $r12;
        org.apache.commons.logging.Log $r10, $r15;
        org.apache.http.HttpHost r1;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: org.apache.http.HttpRequest;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        i1 = 1;

     label01:
        $r4 = r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.client.HttpClient backend>;

        $r5 = interfaceinvoke $r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r1, r2, r3);

     label02:
        $r6 = r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy>;

        $z0 = interfaceinvoke $r6.<org.apache.http.client.ServiceUnavailableRetryStrategy: boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext)>($r5, i1, r3);

        if $z0 == 0 goto label07;

        $r7 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        staticinvoke <org.apache.http.util.EntityUtils: void consume(org.apache.http.HttpEntity)>($r7);

        $r8 = r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy>;

        $l0 = interfaceinvoke $r8.<org.apache.http.client.ServiceUnavailableRetryStrategy: long getRetryInterval()>();

     label03:
        $r10 = r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.commons.logging.Log log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wait for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r13);

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label04:
        goto label06;

     label05:
        $r18 := @caughtexception;

        $r19 = new java.io.InterruptedIOException;

        $r20 = virtualinvoke $r18.<java.lang.InterruptedException: java.lang.String getMessage()>();

        specialinvoke $r19.<java.io.InterruptedIOException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label06:
        goto label08;

     label07:
        return $r5;

     label08:
        goto label14;

     label09:
        $r16 := @caughtexception;

     label10:
        $r17 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        staticinvoke <org.apache.http.util.EntityUtils: void consume(org.apache.http.HttpEntity)>($r17);

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;

        $r15 = r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.commons.logging.Log log>;

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("I/O error consuming response content", $r14);

     label13:
        throw $r16;

     label14:
        i1 = i1 + 1;

        goto label01;

        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.RuntimeException from label02 to label07 with label09;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public org.apache.http.conn.ClientConnectionManager getConnectionManager()
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.client.HttpClient $r1;
        org.apache.http.conn.ClientConnectionManager $r2;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        $r1 = r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.client.HttpClient backend>;

        $r2 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        return $r2;
    }

    public org.apache.http.params.HttpParams getParams()
    {
        org.apache.http.impl.client.AutoRetryHttpClient r0;
        org.apache.http.client.HttpClient $r1;
        org.apache.http.params.HttpParams $r2;

        r0 := @this: org.apache.http.impl.client.AutoRetryHttpClient;

        $r1 = r0.<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.client.HttpClient backend>;

        $r2 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        return $r2;
    }
}
