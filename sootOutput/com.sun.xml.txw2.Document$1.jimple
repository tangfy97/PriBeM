class com.sun.xml.txw2.Document$1 extends java.lang.Object implements com.sun.xml.txw2.ContentVisitor
{
    static final boolean $assertionsDisabled;
    final com.sun.xml.txw2.Document this$0;

    void <init>(com.sun.xml.txw2.Document)
    {
        com.sun.xml.txw2.Document r1;
        com.sun.xml.txw2.Document$1 r0;

        r0 := @this: com.sun.xml.txw2.Document$1;

        r1 := @parameter0: com.sun.xml.txw2.Document;

        r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStartDocument()
    {
        java.lang.IllegalStateException $r0;
        com.sun.xml.txw2.Document$1 r1;

        r1 := @this: com.sun.xml.txw2.Document$1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>()>();

        throw $r0;
    }

    public void onEndDocument()
    {
        com.sun.xml.txw2.Document $r1;
        com.sun.xml.txw2.output.XmlSerializer $r2;
        com.sun.xml.txw2.Document$1 r0;

        r0 := @this: com.sun.xml.txw2.Document$1;

        $r1 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r2 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r1);

        interfaceinvoke $r2.<com.sun.xml.txw2.output.XmlSerializer: void endDocument()>();

        return;
    }

    public void onEndTag()
    {
        com.sun.xml.txw2.NamespaceSupport $r4;
        com.sun.xml.txw2.Document $r1, $r3, $r5;
        com.sun.xml.txw2.output.XmlSerializer $r2;
        com.sun.xml.txw2.Document$1 r0;

        r0 := @this: com.sun.xml.txw2.Document$1;

        $r1 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r2 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r1);

        interfaceinvoke $r2.<com.sun.xml.txw2.output.XmlSerializer: void endTag()>();

        $r3 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r4 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r3);

        virtualinvoke $r4.<com.sun.xml.txw2.NamespaceSupport: void popContext()>();

        $r5 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceDecl access$202(com.sun.xml.txw2.Document,com.sun.xml.txw2.NamespaceDecl)>($r5, null);

        return;
    }

    public void onPcdata(java.lang.StringBuilder)
    {
        com.sun.xml.txw2.NamespaceDecl $r2;
        java.lang.StringBuilder r6;
        com.sun.xml.txw2.Document $r1, $r3, $r5;
        com.sun.xml.txw2.output.XmlSerializer $r4;
        com.sun.xml.txw2.Document$1 r0;

        r0 := @this: com.sun.xml.txw2.Document$1;

        r6 := @parameter0: java.lang.StringBuilder;

        $r1 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r2 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceDecl access$200(com.sun.xml.txw2.Document)>($r1);

        if $r2 == null goto label1;

        $r5 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        r6 = staticinvoke <com.sun.xml.txw2.Document: java.lang.StringBuilder access$300(com.sun.xml.txw2.Document,java.lang.StringBuilder)>($r5, r6);

     label1:
        $r3 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r4 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r3);

        interfaceinvoke $r4.<com.sun.xml.txw2.output.XmlSerializer: void text(java.lang.StringBuilder)>(r6);

        return;
    }

    public void onCdata(java.lang.StringBuilder)
    {
        com.sun.xml.txw2.NamespaceDecl $r2;
        java.lang.StringBuilder r6;
        com.sun.xml.txw2.Document $r1, $r3, $r5;
        com.sun.xml.txw2.output.XmlSerializer $r4;
        com.sun.xml.txw2.Document$1 r0;

        r0 := @this: com.sun.xml.txw2.Document$1;

        r6 := @parameter0: java.lang.StringBuilder;

        $r1 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r2 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceDecl access$200(com.sun.xml.txw2.Document)>($r1);

        if $r2 == null goto label1;

        $r5 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        r6 = staticinvoke <com.sun.xml.txw2.Document: java.lang.StringBuilder access$300(com.sun.xml.txw2.Document,java.lang.StringBuilder)>($r5, r6);

     label1:
        $r3 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r4 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r3);

        interfaceinvoke $r4.<com.sun.xml.txw2.output.XmlSerializer: void cdata(java.lang.StringBuilder)>(r6);

        return;
    }

    public void onComment(java.lang.StringBuilder)
    {
        com.sun.xml.txw2.NamespaceDecl $r2;
        java.lang.StringBuilder r6;
        com.sun.xml.txw2.Document $r1, $r3, $r5;
        com.sun.xml.txw2.output.XmlSerializer $r4;
        com.sun.xml.txw2.Document$1 r0;

        r0 := @this: com.sun.xml.txw2.Document$1;

        r6 := @parameter0: java.lang.StringBuilder;

        $r1 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r2 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceDecl access$200(com.sun.xml.txw2.Document)>($r1);

        if $r2 == null goto label1;

        $r5 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        r6 = staticinvoke <com.sun.xml.txw2.Document: java.lang.StringBuilder access$300(com.sun.xml.txw2.Document,java.lang.StringBuilder)>($r5, r6);

     label1:
        $r3 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r4 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r3);

        interfaceinvoke $r4.<com.sun.xml.txw2.output.XmlSerializer: void comment(java.lang.StringBuilder)>(r6);

        return;
    }

    public void onStartTag(java.lang.String, java.lang.String, com.sun.xml.txw2.Attribute, com.sun.xml.txw2.NamespaceDecl)
    {
        java.lang.StringBuilder $r21, $r25;
        com.sun.xml.txw2.Document $r2, $r3, $r4, $r6, $r12, $r16, $r19, $r22, $r26, $r35, $r39, $r43, $r45, $r48, $r52, $r56, $r61, $r62;
        java.lang.AssertionError $r31, $r33, $r64, $r65;
        com.sun.xml.txw2.NamespaceSupport $r5, $r17, $r36, $r40, $r44, $r49, $r53, $r57;
        java.lang.String r8, r9, $r10, $r14, $r15, $r18, $r23, $r24, $r28, $r29, $r30, $r32, $r34, $r37, $r38, $r41, $r42, $r46, $r47, $r50, $r51, $r54, $r55, $r58, $r59, $r60, r68, r71;
        com.sun.xml.txw2.NamespaceDecl r1, r66, r67, r69;
        com.sun.xml.txw2.Document$1 r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.sun.xml.txw2.output.XmlSerializer $r7, $r13, $r20, $r27, $r63;
        int $i0;
        com.sun.xml.txw2.Attribute r11, r70;

        r0 := @this: com.sun.xml.txw2.Document$1;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        r11 := @parameter2: com.sun.xml.txw2.Attribute;

        r1 := @parameter3: com.sun.xml.txw2.NamespaceDecl;

        $z0 = <com.sun.xml.txw2.Document$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r8 != null goto label01;

        $r65 = new java.lang.AssertionError;

        specialinvoke $r65.<java.lang.AssertionError: void <init>()>();

        throw $r65;

     label01:
        $z1 = <com.sun.xml.txw2.Document$1: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if r9 != null goto label02;

        $r64 = new java.lang.AssertionError;

        specialinvoke $r64.<java.lang.AssertionError: void <init>()>();

        throw $r64;

     label02:
        $r2 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceDecl access$202(com.sun.xml.txw2.Document,com.sun.xml.txw2.NamespaceDecl)>($r2, r1);

        $r3 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $z2 = staticinvoke <com.sun.xml.txw2.Document: boolean access$400(com.sun.xml.txw2.Document)>($r3);

        if $z2 != 0 goto label03;

        $r61 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        staticinvoke <com.sun.xml.txw2.Document: boolean access$402(com.sun.xml.txw2.Document,boolean)>($r61, 1);

        $r62 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r63 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r62);

        interfaceinvoke $r63.<com.sun.xml.txw2.output.XmlSerializer: void startDocument()>();

     label03:
        $r4 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r5 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r4);

        virtualinvoke $r5.<com.sun.xml.txw2.NamespaceSupport: void pushContext()>();

        r66 = r1;

     label04:
        if r66 == null goto label07;

        r66.<com.sun.xml.txw2.NamespaceDecl: boolean declared> = 0;

        $r51 = r66.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix>;

        if $r51 == null goto label06;

        $r52 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r53 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r52);

        $r54 = r66.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix>;

        $r55 = virtualinvoke $r53.<com.sun.xml.txw2.NamespaceSupport: java.lang.String getURI(java.lang.String)>($r54);

        if $r55 == null goto label05;

        $r60 = r66.<com.sun.xml.txw2.NamespaceDecl: java.lang.String uri>;

        $z8 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>($r60);

        if $z8 == 0 goto label05;

        goto label06;

     label05:
        $r56 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r57 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r56);

        $r59 = r66.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix>;

        $r58 = r66.<com.sun.xml.txw2.NamespaceDecl: java.lang.String uri>;

        virtualinvoke $r57.<com.sun.xml.txw2.NamespaceSupport: boolean declarePrefix(java.lang.String,java.lang.String)>($r59, $r58);

        r66.<com.sun.xml.txw2.NamespaceDecl: boolean declared> = 1;

     label06:
        r66 = r66.<com.sun.xml.txw2.NamespaceDecl: com.sun.xml.txw2.NamespaceDecl next>;

        goto label04;

     label07:
        r67 = r1;

     label08:
        if r67 == null goto label14;

        $r34 = r67.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix>;

        if $r34 != null goto label13;

        $r35 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r36 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r35);

        $r37 = virtualinvoke $r36.<com.sun.xml.txw2.NamespaceSupport: java.lang.String getURI(java.lang.String)>("");

        $r38 = r67.<com.sun.xml.txw2.NamespaceDecl: java.lang.String uri>;

        $z7 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z7 == 0 goto label09;

        r67.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix> = "";

        goto label13;

     label09:
        $r39 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r40 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r39);

        $r41 = r67.<com.sun.xml.txw2.NamespaceDecl: java.lang.String uri>;

        $r42 = virtualinvoke $r40.<com.sun.xml.txw2.NamespaceSupport: java.lang.String getPrefix(java.lang.String)>($r41);

        r68 = $r42;

        if $r42 != null goto label12;

     label10:
        $r43 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r44 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r43);

        $r45 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r46 = staticinvoke <com.sun.xml.txw2.Document: java.lang.String access$500(com.sun.xml.txw2.Document)>($r45);

        r68 = $r46;

        $r47 = virtualinvoke $r44.<com.sun.xml.txw2.NamespaceSupport: java.lang.String getURI(java.lang.String)>($r46);

        if $r47 == null goto label11;

        goto label10;

     label11:
        r67.<com.sun.xml.txw2.NamespaceDecl: boolean declared> = 1;

        $r48 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r49 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r48);

        $r50 = r67.<com.sun.xml.txw2.NamespaceDecl: java.lang.String uri>;

        virtualinvoke $r49.<com.sun.xml.txw2.NamespaceSupport: boolean declarePrefix(java.lang.String,java.lang.String)>($r46, $r50);

     label12:
        r67.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix> = r68;

     label13:
        r67 = r67.<com.sun.xml.txw2.NamespaceDecl: com.sun.xml.txw2.NamespaceDecl next>;

        goto label08;

     label14:
        $z3 = <com.sun.xml.txw2.Document$1: boolean $assertionsDisabled>;

        if $z3 != 0 goto label15;

        $r32 = r1.<com.sun.xml.txw2.NamespaceDecl: java.lang.String uri>;

        $z6 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z6 != 0 goto label15;

        $r33 = new java.lang.AssertionError;

        specialinvoke $r33.<java.lang.AssertionError: void <init>()>();

        throw $r33;

     label15:
        $z4 = <com.sun.xml.txw2.Document$1: boolean $assertionsDisabled>;

        if $z4 != 0 goto label16;

        $r30 = r1.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix>;

        if $r30 != null goto label16;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>("a prefix must have been all allocated");

        throw $r31;

     label16:
        $r6 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r7 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r6);

        $r10 = r1.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix>;

        interfaceinvoke $r7.<com.sun.xml.txw2.output.XmlSerializer: void beginStartTag(java.lang.String,java.lang.String,java.lang.String)>(r8, r9, $r10);

        r69 = r1;

     label17:
        if r69 == null goto label19;

        $z5 = r69.<com.sun.xml.txw2.NamespaceDecl: boolean declared>;

        if $z5 == 0 goto label18;

        $r26 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r27 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r26);

        $r29 = r69.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix>;

        $r28 = r69.<com.sun.xml.txw2.NamespaceDecl: java.lang.String uri>;

        interfaceinvoke $r27.<com.sun.xml.txw2.output.XmlSerializer: void writeXmlns(java.lang.String,java.lang.String)>($r29, $r28);

     label18:
        r69 = r69.<com.sun.xml.txw2.NamespaceDecl: com.sun.xml.txw2.NamespaceDecl next>;

        goto label17;

     label19:
        r70 = r11;

     label20:
        if r70 == null goto label23;

        $r15 = r70.<com.sun.xml.txw2.Attribute: java.lang.String nsUri>;

        $i0 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i0 != 0 goto label21;

        r71 = "";

        goto label22;

     label21:
        $r16 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r17 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.NamespaceSupport access$100(com.sun.xml.txw2.Document)>($r16);

        $r18 = r70.<com.sun.xml.txw2.Attribute: java.lang.String nsUri>;

        r71 = virtualinvoke $r17.<com.sun.xml.txw2.NamespaceSupport: java.lang.String getPrefix(java.lang.String)>($r18);

     label22:
        $r19 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r20 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r19);

        $r23 = r70.<com.sun.xml.txw2.Attribute: java.lang.String nsUri>;

        $r24 = r70.<com.sun.xml.txw2.Attribute: java.lang.String localName>;

        $r22 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r21 = r70.<com.sun.xml.txw2.Attribute: java.lang.StringBuilder value>;

        $r25 = staticinvoke <com.sun.xml.txw2.Document: java.lang.StringBuilder access$300(com.sun.xml.txw2.Document,java.lang.StringBuilder)>($r22, $r21);

        interfaceinvoke $r20.<com.sun.xml.txw2.output.XmlSerializer: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.StringBuilder)>($r23, $r24, r71, $r25);

        r70 = r70.<com.sun.xml.txw2.Attribute: com.sun.xml.txw2.Attribute next>;

        goto label20;

     label23:
        $r12 = r0.<com.sun.xml.txw2.Document$1: com.sun.xml.txw2.Document this$0>;

        $r13 = staticinvoke <com.sun.xml.txw2.Document: com.sun.xml.txw2.output.XmlSerializer access$000(com.sun.xml.txw2.Document)>($r12);

        $r14 = r1.<com.sun.xml.txw2.NamespaceDecl: java.lang.String prefix>;

        interfaceinvoke $r13.<com.sun.xml.txw2.output.XmlSerializer: void endStartTag(java.lang.String,java.lang.String,java.lang.String)>(r8, r9, $r14);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/txw2/Document;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.txw2.Document$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
