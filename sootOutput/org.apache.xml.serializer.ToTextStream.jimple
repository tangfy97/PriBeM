public class org.apache.xml.serializer.ToTextStream extends org.apache.xml.serializer.ToStream
{

    public void <init>()
    {
        org.apache.xml.serializer.ToTextStream r0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void <init>()>();

        return;
    }

    protected void startDocumentInternal() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument> = 0;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializerTrace $r1;
        org.apache.xml.serializer.ToTextStream r0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushPending()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void flushWriter()>();

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEndDoc()>();

     label1:
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializerTrace $r1;
        org.xml.sax.Attributes r5;
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r2, r3, r4;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: org.xml.sax.Attributes;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireStartElem(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void firePseudoAttributes()>();

     label1:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializerTrace $r1;
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r2, r3, r4;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEndElem(java.lang.String)>(r2);

     label1:
        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        java.io.IOException $r3;
        org.xml.sax.SAXException $r4;
        int i0, i1;
        org.apache.xml.serializer.SerializerTrace $r2;
        char[] r1;
        org.apache.xml.serializer.ToTextStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushPending()>();

     label1:
        $z0 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean,boolean)>(r1, i0, i1, 0, $z0);

        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label2;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireCharEvent(char[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void charactersRaw(char[], int, int) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r3;
        int i0, i1;
        char[] r1;
        org.apache.xml.serializer.ToTextStream r0;
        java.io.IOException $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $z0 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean,boolean)>(r1, i0, i1, 0, $z0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void writeNormalizedChars(char[], int, int, boolean, boolean) throws java.io.IOException, org.xml.sax.SAXException
    {
        boolean z0, $z1, z2, $z3, $z4;
        org.xml.sax.SAXException $r15, $r16;
        java.io.Writer r1;
        java.lang.Object[] $r6, $r12;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8, $i10, $i11, i12, i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String $r3, $r4, $r7, $r9, $r10, $r13;
        char $c7, $c9, c13, c15;
        char[] r2, $r8, $r14;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r1 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        i2 = i0 + i1;

        i3 = r0.<org.apache.xml.serializer.ToStream: int m_maxCharacter>;

        if z0 == 0 goto label13;

        i12 = i0;

        goto label12;

     label01:
        c13 = r2[i12];

        $i16 = (int) c13;

        if 10 != $i16 goto label02;

        if z2 == 0 goto label02;

        $r14 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i11 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r14, 0, $i11);

        goto label11;

     label02:
        $i17 = (int) c13;

        if $i17 <= i3 goto label06;

        if i12 == 0 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label03:
        $z4 = staticinvoke <org.apache.xml.serializer.ToStream: boolean isUTF16Surrogate(char)>(c13);

        if $z4 == 0 goto label04;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeUTF16Surrogate(char,char[],int,int)>(c13, r2, i12, i2);

        i12 = i12 + 1;

        goto label05;

     label04:
        $i18 = (int) c13;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i18);

     label05:
        if i12 == 0 goto label11;

        $i10 = i2 - 1;

        if i12 >= $i10 goto label11;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("<![CDATA[");

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen> = 1;

        goto label11;

     label06:
        $i5 = i2 - 2;

        if i12 >= $i5 goto label07;

        $i19 = (int) c13;

        if 93 != $i19 goto label07;

        $i6 = i12 + 1;

        $c7 = r2[$i6];

        $i20 = (int) $c7;

        if 93 != $i20 goto label07;

        $i8 = i12 + 2;

        $c9 = r2[$i8];

        $i21 = (int) $c9;

        if 62 != $i21 goto label07;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("]]]]><![CDATA[>");

        i12 = i12 + 2;

        goto label11;

     label07:
        $i22 = (int) c13;

        if $i22 > i3 goto label08;

        $i23 = (int) c13;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i23);

        goto label11;

     label08:
        $z3 = staticinvoke <org.apache.xml.serializer.ToStream: boolean isUTF16Surrogate(char)>(c13);

        if $z3 == 0 goto label09;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeUTF16Surrogate(char,char[],int,int)>(c13, r2, i12, i2);

        i12 = i12 + 1;

        goto label11;

     label09:
        $r9 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        if $r9 == null goto label10;

        $i24 = (int) c13;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i24);

        $r15 = new org.xml.sax.SAXException;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = $r10;

        $r12[1] = $r9;

        $r13 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_CHARACTER", $r12);

        specialinvoke $r15.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r13);

        throw $r15;

     label10:
        $i25 = (int) c13;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i25);

     label11:
        i12 = i12 + 1;

     label12:
        if i12 < i2 goto label01;

        goto label21;

     label13:
        i14 = i0;

        goto label20;

     label14:
        c15 = r2[i14];

        $i26 = (int) c15;

        if 10 != $i26 goto label15;

        if z2 == 0 goto label15;

        $r8 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i4 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r8, 0, $i4);

        goto label19;

     label15:
        $i27 = (int) c15;

        if $i27 > i3 goto label16;

        $i28 = (int) c15;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i28);

        goto label19;

     label16:
        $z1 = staticinvoke <org.apache.xml.serializer.ToStream: boolean isUTF16Surrogate(char)>(c15);

        if $z1 == 0 goto label17;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeUTF16Surrogate(char,char[],int,int)>(c15, r2, i14, i2);

        i14 = i14 + 1;

        goto label19;

     label17:
        $r3 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        if $r3 == null goto label18;

        $i29 = (int) c15;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i29);

        $r16 = new org.xml.sax.SAXException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r4;

        $r6[1] = $r3;

        $r7 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_CHARACTER", $r6);

        specialinvoke $r16.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r7);

        throw $r16;

     label18:
        $i30 = (int) c15;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i30);

     label19:
        i14 = i14 + 1;

     label20:
        if i14 < i2 goto label14;

     label21:
        return;
    }

    public void cdata(char[], int, int) throws org.xml.sax.SAXException
    {
        java.io.IOException $r3;
        org.xml.sax.SAXException $r4;
        int i0, i1;
        org.apache.xml.serializer.SerializerTrace $r2;
        char[] r1;
        org.apache.xml.serializer.ToTextStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $z0 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean,boolean)>(r1, i0, i1, 0, $z0);

        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label2;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireCDATAEvent(char[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r3;
        int i0, i1;
        char[] r1;
        org.apache.xml.serializer.ToTextStream r0;
        java.io.IOException $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $z0 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean,boolean)>(r1, i0, i1, 0, $z0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializerTrace $r1;
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r2, r3;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushPending()>();

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEscapingEvent(java.lang.String,java.lang.String)>(r2, r3);

     label1:
        return;
    }

    public void comment(java.lang.String) throws org.xml.sax.SAXException
    {
        int $i0, $i1, $i2, $i3;
        char[] $r2, $r3, $r4, $r5;
        org.apache.xml.serializer.ToTextStream r1;
        java.lang.String r0;

        r1 := @this: org.apache.xml.serializer.ToTextStream;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label1;

        $i2 = $i0 * 2;

        $i3 = $i2 + 1;

        $r5 = newarray (char)[$i3];

        r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff> = $r5;

     label1:
        $r3 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r3, 0);

        $r4 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        virtualinvoke r1.<org.apache.xml.serializer.ToTextStream: void comment(char[],int,int)>($r4, 0, $i0);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializerTrace $r1;
        int i0, i1;
        char[] r2;
        org.apache.xml.serializer.ToTextStream r0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushPending()>();

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireCommentEvent(char[],int,int)>(r2, i0, i1);

     label1:
        return;
    }

    public void entityReference(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializerTrace $r1;
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEntityReference(java.lang.String)>(r2);

     label1:
        return;
    }

    public void addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        return;
    }

    public void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializerTrace $r1;
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEndElem(java.lang.String)>(r2);

     label1:
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializerTrace $r1;
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r2, r3, r4;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void startDocumentInternal()>();

     label1:
        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label2;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireStartElem(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void firePseudoAttributes()>();

     label2:
        return;
    }

    public void characters(java.lang.String) throws org.xml.sax.SAXException
    {
        int $i0, $i1, $i2, $i3;
        char[] $r2, $r3, $r4, $r5;
        org.apache.xml.serializer.ToTextStream r1;
        java.lang.String r0;

        r1 := @this: org.apache.xml.serializer.ToTextStream;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label1;

        $i2 = $i0 * 2;

        $i3 = $i2 + 1;

        $r5 = newarray (char)[$i3];

        r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff> = $r5;

     label1:
        $r3 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r3, 0);

        $r4 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        virtualinvoke r1.<org.apache.xml.serializer.ToTextStream: void characters(char[],int,int)>($r4, 0, $i0);

        return;
    }

    public void addAttribute(java.lang.String, java.lang.String)
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void addUniqueAttribute(java.lang.String, java.lang.String, int) throws org.xml.sax.SAXException
    {
        int i0;
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public boolean startPrefixMapping(java.lang.String, java.lang.String, boolean) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return 0;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void namespaceAfterStartElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void flushPending() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument> = 0;

     label1:
        return;
    }
}
