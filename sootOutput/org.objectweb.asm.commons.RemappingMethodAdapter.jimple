public class org.objectweb.asm.commons.RemappingMethodAdapter extends org.objectweb.asm.commons.LocalVariablesSorter
{
    protected final org.objectweb.asm.commons.Remapper remapper;

    public void <init>(int, java.lang.String, org.objectweb.asm.MethodVisitor, org.objectweb.asm.commons.Remapper)
    {
        org.objectweb.asm.MethodVisitor r2;
        org.objectweb.asm.commons.Remapper r3;
        int i0;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        java.lang.String r1;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.objectweb.asm.MethodVisitor;

        r3 := @parameter3: org.objectweb.asm.commons.Remapper;

        specialinvoke r0.<org.objectweb.asm.commons.RemappingMethodAdapter: void <init>(int,int,java.lang.String,org.objectweb.asm.MethodVisitor,org.objectweb.asm.commons.Remapper)>(262144, i0, r1, r2, r3);

        return;
    }

    protected void <init>(int, int, java.lang.String, org.objectweb.asm.MethodVisitor, org.objectweb.asm.commons.Remapper)
    {
        org.objectweb.asm.MethodVisitor r2;
        org.objectweb.asm.commons.Remapper r3;
        int i0, i1;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        java.lang.String r1;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: org.objectweb.asm.MethodVisitor;

        r3 := @parameter4: org.objectweb.asm.commons.Remapper;

        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void <init>(int,int,java.lang.String,org.objectweb.asm.MethodVisitor)>(i0, i1, r1, r2);

        r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper> = r3;

        return;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()
    {
        org.objectweb.asm.AnnotationVisitor $r2, $r4;
        org.objectweb.asm.MethodVisitor $r1;
        org.objectweb.asm.commons.Remapper $r3;
        org.objectweb.asm.commons.RemappingAnnotationAdapter $r5;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        $r1 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.MethodVisitor mv>;

        $r2 = virtualinvoke $r1.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>();

        if $r2 != null goto label1;

        $r4 = $r2;

        goto label2;

     label1:
        $r5 = new org.objectweb.asm.commons.RemappingAnnotationAdapter;

        $r4 = $r5;

        $r3 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        specialinvoke $r5.<org.objectweb.asm.commons.RemappingAnnotationAdapter: void <init>(org.objectweb.asm.AnnotationVisitor,org.objectweb.asm.commons.Remapper)>($r2, $r3);

     label2:
        return $r4;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.AnnotationVisitor $r5, $r7;
        org.objectweb.asm.commons.Remapper $r2, $r6;
        org.objectweb.asm.MethodVisitor $r3;
        org.objectweb.asm.commons.RemappingAnnotationAdapter $r8;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        java.lang.String r1, $r4;
        boolean z0;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.MethodVisitor mv>;

        $r2 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r4 = virtualinvoke $r2.<org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r1);

        $r5 = virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r4, z0);

        if $r5 != null goto label1;

        $r7 = $r5;

        goto label2;

     label1:
        $r8 = new org.objectweb.asm.commons.RemappingAnnotationAdapter;

        $r7 = $r8;

        $r6 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        specialinvoke $r8.<org.objectweb.asm.commons.RemappingAnnotationAdapter: void <init>(org.objectweb.asm.AnnotationVisitor,org.objectweb.asm.commons.Remapper)>($r5, $r6);

     label2:
        return $r7;
    }

    public org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        org.objectweb.asm.AnnotationVisitor $r5, $r7;
        org.objectweb.asm.commons.Remapper $r2, $r6;
        org.objectweb.asm.MethodVisitor $r3;
        org.objectweb.asm.commons.RemappingAnnotationAdapter $r8;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        int i0;
        java.lang.String r1, $r4;
        boolean z0;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.MethodVisitor mv>;

        $r2 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r4 = virtualinvoke $r2.<org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r1);

        $r5 = virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i0, $r4, z0);

        if $r5 != null goto label1;

        $r7 = $r5;

        goto label2;

     label1:
        $r8 = new org.objectweb.asm.commons.RemappingAnnotationAdapter;

        $r7 = $r8;

        $r6 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        specialinvoke $r8.<org.objectweb.asm.commons.RemappingAnnotationAdapter: void <init>(org.objectweb.asm.AnnotationVisitor,org.objectweb.asm.commons.Remapper)>($r5, $r6);

     label2:
        return $r7;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        java.lang.Object[] r1, $r2, r3, $r4;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        int i0, i1, i2;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        i2 := @parameter3: int;

        r3 := @parameter4: java.lang.Object[];

        $r2 = specialinvoke r0.<org.objectweb.asm.commons.RemappingMethodAdapter: java.lang.Object[] remapEntries(int,java.lang.Object[])>(i1, r1);

        $r4 = specialinvoke r0.<org.objectweb.asm.commons.RemappingMethodAdapter: java.lang.Object[] remapEntries(int,java.lang.Object[])>(i2, r3);

        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>(i0, i1, $r2, i2, $r4);

        return;
    }

    private java.lang.Object[] remapEntries(int, java.lang.Object[])
    {
        java.lang.Object[] r0, r2;
        org.objectweb.asm.commons.Remapper $r5;
        org.objectweb.asm.commons.RemappingMethodAdapter r3;
        int i0, $i1, i2;
        java.lang.Object $r1, $r6, $r7;
        java.lang.String $r4;
        boolean $z0, $z1;

        r3 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        $r1 = r0[i2];

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label5;

        r2 = newarray (java.lang.Object)[i0];

        if i2 <= 0 goto label2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, i2);

     label2:
        $r6 = r0[i2];

        $i1 = i2;

        i2 = i2 + 1;

        $z1 = $r6 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r5 = r3.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r4 = (java.lang.String) $r6;

        $r7 = virtualinvoke $r5.<org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>($r4);

        goto label4;

     label3:
        $r7 = $r6;

     label4:
        r2[$i1] = $r7;

        if i2 < i0 goto label2;

        return r2;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return r0;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.commons.Remapper $r2, $r6, $r8;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        int i0;
        java.lang.String r1, $r3, r4, r5, $r7, $r9;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r2 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        $r6 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r7 = virtualinvoke $r6.<org.objectweb.asm.commons.Remapper: java.lang.String mapFieldName(java.lang.String,java.lang.String,java.lang.String)>(r1, r4, r5);

        $r8 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r9 = virtualinvoke $r8.<org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r5);

        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, $r3, $r7, $r9);

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.commons.Remapper $r2, $r6, $r8;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        int i0;
        java.lang.String r1, $r3, r4, r5, $r7, $r9;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r2 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        $r6 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r7 = virtualinvoke $r6.<org.objectweb.asm.commons.Remapper: java.lang.String mapMethodName(java.lang.String,java.lang.String,java.lang.String)>(r1, r4, r5);

        $r8 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r9 = virtualinvoke $r8.<org.objectweb.asm.commons.Remapper: java.lang.String mapMethodDesc(java.lang.String)>(r5);

        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, $r3, $r7, $r9);

        return;
    }

    public transient void visitInvokeDynamicInsn(java.lang.String, java.lang.String, org.objectweb.asm.Handle, java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.objectweb.asm.commons.Remapper $r4, $r6, $r9, $r13;
        int $i0, i1;
        java.lang.String r2, r3, $r5, $r7;
        org.objectweb.asm.commons.RemappingMethodAdapter r1;
        org.objectweb.asm.Handle r8, $r11;
        java.lang.Object $r10, $r12, $r14;

        r1 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r8 := @parameter2: org.objectweb.asm.Handle;

        r0 := @parameter3: java.lang.Object[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r13 = r1.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r12 = r0[i1];

        $r14 = virtualinvoke $r13.<org.objectweb.asm.commons.Remapper: java.lang.Object mapValue(java.lang.Object)>($r12);

        r0[i1] = $r14;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r1.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r5 = virtualinvoke $r4.<org.objectweb.asm.commons.Remapper: java.lang.String mapInvokeDynamicMethodName(java.lang.String,java.lang.String)>(r2, r3);

        $r6 = r1.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r7 = virtualinvoke $r6.<org.objectweb.asm.commons.Remapper: java.lang.String mapMethodDesc(java.lang.String)>(r3);

        $r9 = r1.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r10 = virtualinvoke $r9.<org.objectweb.asm.commons.Remapper: java.lang.Object mapValue(java.lang.Object)>(r8);

        $r11 = (org.objectweb.asm.Handle) $r10;

        specialinvoke r1.<org.objectweb.asm.commons.LocalVariablesSorter: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>($r5, $r7, $r11, r0);

        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        org.objectweb.asm.commons.Remapper $r2;
        int i0;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        java.lang.String r1, $r3;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void visitTypeInsn(int,java.lang.String)>(i0, $r3);

        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        org.objectweb.asm.commons.Remapper $r2;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        java.lang.Object r1, $r3;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<org.objectweb.asm.commons.Remapper: java.lang.Object mapValue(java.lang.Object)>(r1);

        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void visitLdcInsn(java.lang.Object)>($r3);

        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        org.objectweb.asm.commons.Remapper $r2;
        int i0;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        java.lang.String r1, $r3;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r1);

        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void visitMultiANewArrayInsn(java.lang.String,int)>($r3, i0);

        return;
    }

    public void visitTryCatchBlock(org.objectweb.asm.Label, org.objectweb.asm.Label, org.objectweb.asm.Label, java.lang.String)
    {
        org.objectweb.asm.commons.Remapper $r5;
        org.objectweb.asm.Label r1, r2, r3;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        java.lang.String r4, $r6;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        r1 := @parameter0: org.objectweb.asm.Label;

        r2 := @parameter1: org.objectweb.asm.Label;

        r3 := @parameter2: org.objectweb.asm.Label;

        r4 := @parameter3: java.lang.String;

        if r4 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r5 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r6 = virtualinvoke $r5.<org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r4);

     label2:
        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>(r1, r2, r3, $r6);

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.objectweb.asm.Label, org.objectweb.asm.Label, int)
    {
        org.objectweb.asm.commons.Remapper $r3, $r6;
        org.objectweb.asm.Label r8, r9;
        org.objectweb.asm.commons.RemappingMethodAdapter r0;
        int i0;
        java.lang.String r1, r2, $r4, r5, $r7;

        r0 := @this: org.objectweb.asm.commons.RemappingMethodAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r8 := @parameter3: org.objectweb.asm.Label;

        r9 := @parameter4: org.objectweb.asm.Label;

        i0 := @parameter5: int;

        $r3 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r4 = virtualinvoke $r3.<org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r2);

        $r6 = r0.<org.objectweb.asm.commons.RemappingMethodAdapter: org.objectweb.asm.commons.Remapper remapper>;

        $r7 = virtualinvoke $r6.<org.objectweb.asm.commons.Remapper: java.lang.String mapSignature(java.lang.String,boolean)>(r5, 1);

        specialinvoke r0.<org.objectweb.asm.commons.LocalVariablesSorter: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>(r1, $r4, $r7, r8, r9, i0);

        return;
    }
}
