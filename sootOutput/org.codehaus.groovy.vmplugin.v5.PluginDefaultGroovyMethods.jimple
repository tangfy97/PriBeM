public class org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods extends org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport
{
    private static final java.lang.Object[] NO_ARGS;

    public void <init>()
    {
        org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods r0;

        r0 := @this: org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods;

        specialinvoke r0.<org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport: void <init>()>();

        return;
    }

    public static java.lang.Object next(java.lang.Enum)
    {
        java.lang.Object[] $r4, $r6, $r11, r14;
        java.lang.reflect.Method[] $r2;
        java.lang.Enum r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        java.lang.String $r9;
        java.lang.reflect.Method r13;
        boolean $z0;
        java.lang.Class[] $r10;
        java.util.List $r7;
        java.lang.Class $r1, $r3;
        java.lang.Object $r5, $r8, $r12;

        r0 := @parameter0: java.lang.Enum;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i5 = 0;

     label1:
        $i0 = lengthof $r2;

        if i5 >= $i0 goto label3;

        r13 = $r2[i5];

        $r9 = virtualinvoke r13.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("next");

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke r13.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i4 = lengthof $r10;

        if $i4 != 0 goto label2;

        $r11 = <org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods: java.lang.Object[] NO_ARGS>;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "next", $r11);

        return $r12;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = <org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods: java.lang.Object[] NO_ARGS>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object)>($r3, "values", $r4);

        $r6 = (java.lang.Object[]) $r5;

        r14 = (java.lang.Object[]) $r6;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r14);

        $i1 = interfaceinvoke $r7.<java.util.List: int indexOf(java.lang.Object)>(r0);

        $i2 = lengthof r14;

        $i3 = $i2 - 1;

        if $i1 >= $i3 goto label4;

        $i6 = $i1 + 1;

        goto label5;

     label4:
        $i6 = 0;

     label5:
        $r8 = r14[$i6];

        return $r8;
    }

    public static java.lang.Object previous(java.lang.Enum)
    {
        java.lang.Object[] $r4, $r6, $r11, r14;
        java.lang.reflect.Method[] $r2;
        java.lang.Enum r0;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.lang.String $r9;
        java.lang.reflect.Method r13;
        boolean $z0;
        java.lang.Class[] $r10;
        java.util.List $r7;
        java.lang.Class $r1, $r3;
        java.lang.Object $r5, $r8, $r12;

        r0 := @parameter0: java.lang.Enum;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i4 = 0;

     label1:
        $i0 = lengthof $r2;

        if i4 >= $i0 goto label3;

        r13 = $r2[i4];

        $r9 = virtualinvoke r13.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("previous");

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke r13.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r10;

        if $i3 != 0 goto label2;

        $r11 = <org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods: java.lang.Object[] NO_ARGS>;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "previous", $r11);

        return $r12;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = <org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods: java.lang.Object[] NO_ARGS>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object)>($r3, "values", $r4);

        $r6 = (java.lang.Object[]) $r5;

        r14 = (java.lang.Object[]) $r6;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r14);

        $i1 = interfaceinvoke $r7.<java.util.List: int indexOf(java.lang.Object)>(r0);

        if $i1 <= 0 goto label4;

        $i5 = $i1 - 1;

        goto label5;

     label4:
        $i2 = lengthof r14;

        $i5 = $i2 - 1;

     label5:
        $r8 = r14[$i5];

        return $r8;
    }

    public static int size(java.lang.StringBuilder)
    {
        int $i0;
        java.lang.StringBuilder r0;

        r0 := @parameter0: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        return $i0;
    }

    public static java.lang.StringBuilder leftShift(java.lang.StringBuilder, java.lang.Object)
    {
        java.lang.StringBuilder r0;
        java.lang.Object r1;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        return r0;
    }

    public static void putAt(java.lang.StringBuilder, groovy.lang.IntRange, java.lang.Object)
    {
        groovy.lang.IntRange r1;
        org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport$RangeInfo $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder r0;
        java.lang.Object r3;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: groovy.lang.IntRange;

        r3 := @parameter2: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        $r2 = staticinvoke <org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods: org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport$RangeInfo subListBorders(int,groovy.lang.IntRange)>($i0, r1);

        $i1 = $r2.<org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport$RangeInfo: int 'from'>;

        $i2 = $r2.<org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport$RangeInfo: int 'to'>;

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>($i1, $i2, $r4);

        return;
    }

    public static void putAt(java.lang.StringBuilder, groovy.lang.EmptyRange, java.lang.Object)
    {
        groovy.lang.EmptyRange r1;
        org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport$RangeInfo $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder r0;
        java.lang.Object r3;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: groovy.lang.EmptyRange;

        r3 := @parameter2: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        $r2 = staticinvoke <org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods: org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport$RangeInfo subListBorders(int,groovy.lang.EmptyRange)>($i0, r1);

        $i1 = $r2.<org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport$RangeInfo: int 'from'>;

        $i2 = $r2.<org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport$RangeInfo: int 'to'>;

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>($i1, $i2, $r4);

        return;
    }

    public static java.lang.String plus(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.StringBuilder r1;
        java.lang.String r3, $r5;

        r1 := @parameter0: java.lang.StringBuilder;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods: java.lang.Object[] NO_ARGS> = $r0;

        return;
    }
}
