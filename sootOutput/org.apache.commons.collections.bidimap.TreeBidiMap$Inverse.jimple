class org.apache.commons.collections.bidimap.TreeBidiMap$Inverse extends java.lang.Object implements org.apache.commons.collections.OrderedBidiMap
{
    private final org.apache.commons.collections.bidimap.TreeBidiMap main;
    private java.util.Set keySet;
    private java.util.Set valuesSet;
    private java.util.Set entrySet;

    void <init>(org.apache.commons.collections.bidimap.TreeBidiMap)
    {
        org.apache.commons.collections.bidimap.TreeBidiMap r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r1 := @parameter0: org.apache.commons.collections.bidimap.TreeBidiMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main> = r1;

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.commons.collections.bidimap.TreeBidiMap $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections.bidimap.TreeBidiMap: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections.bidimap.TreeBidiMap $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections.bidimap.TreeBidiMap: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Object r1, $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.bidimap.TreeBidiMap: java.lang.Object getKey(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object getKey(java.lang.Object)
    {
        java.lang.Object r1, $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.bidimap.TreeBidiMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections.bidimap.TreeBidiMap: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections.bidimap.TreeBidiMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object firstKey()
    {
        org.apache.commons.collections.bidimap.TreeBidiMap$Node[] $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;
        org.apache.commons.collections.bidimap.TreeBidiMap$Node $r4, $r5;
        int $i0;
        java.lang.Object $r6;
        org.apache.commons.collections.bidimap.TreeBidiMap $r1, $r2;
        java.util.NoSuchElementException $r7;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $i0 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: int access$2400(org.apache.commons.collections.bidimap.TreeBidiMap)>($r1);

        if $i0 != 0 goto label1;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Map is empty");

        throw $r7;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r3 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: org.apache.commons.collections.bidimap.TreeBidiMap$Node[] access$1700(org.apache.commons.collections.bidimap.TreeBidiMap)>($r2);

        $r4 = $r3[1];

        $r5 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: org.apache.commons.collections.bidimap.TreeBidiMap$Node access$1800(org.apache.commons.collections.bidimap.TreeBidiMap$Node,int)>($r4, 1);

        $r6 = virtualinvoke $r5.<org.apache.commons.collections.bidimap.TreeBidiMap$Node: java.lang.Object getValue()>();

        return $r6;
    }

    public java.lang.Object lastKey()
    {
        org.apache.commons.collections.bidimap.TreeBidiMap$Node[] $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;
        org.apache.commons.collections.bidimap.TreeBidiMap$Node $r4, $r5;
        int $i0;
        java.lang.Object $r6;
        org.apache.commons.collections.bidimap.TreeBidiMap $r1, $r2;
        java.util.NoSuchElementException $r7;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $i0 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: int access$2400(org.apache.commons.collections.bidimap.TreeBidiMap)>($r1);

        if $i0 != 0 goto label1;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Map is empty");

        throw $r7;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r3 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: org.apache.commons.collections.bidimap.TreeBidiMap$Node[] access$1700(org.apache.commons.collections.bidimap.TreeBidiMap)>($r2);

        $r4 = $r3[1];

        $r5 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: org.apache.commons.collections.bidimap.TreeBidiMap$Node access$2200(org.apache.commons.collections.bidimap.TreeBidiMap$Node,int)>($r4, 1);

        $r6 = virtualinvoke $r5.<org.apache.commons.collections.bidimap.TreeBidiMap$Node: java.lang.Object getValue()>();

        return $r6;
    }

    public java.lang.Object nextKey(java.lang.Object)
    {
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Node $r5, $r6;
        java.lang.Object r0, $r7;
        java.lang.Comparable $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap $r3, $r4;

        r1 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: void access$2500(java.lang.Object)>(r0);

        $r4 = r1.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r3 = r1.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r2 = (java.lang.Comparable) r0;

        $r5 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: org.apache.commons.collections.bidimap.TreeBidiMap$Node access$1400(org.apache.commons.collections.bidimap.TreeBidiMap,java.lang.Comparable,int)>($r3, $r2, 1);

        $r6 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: org.apache.commons.collections.bidimap.TreeBidiMap$Node access$1900(org.apache.commons.collections.bidimap.TreeBidiMap,org.apache.commons.collections.bidimap.TreeBidiMap$Node,int)>($r4, $r5, 1);

        if $r6 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r7 = virtualinvoke $r6.<org.apache.commons.collections.bidimap.TreeBidiMap$Node: java.lang.Object getValue()>();

     label2:
        return $r7;
    }

    public java.lang.Object previousKey(java.lang.Object)
    {
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Node $r5, $r6;
        java.lang.Object r0, $r7;
        java.lang.Comparable $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap $r3, $r4;

        r1 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: void access$2500(java.lang.Object)>(r0);

        $r4 = r1.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r3 = r1.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r2 = (java.lang.Comparable) r0;

        $r5 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: org.apache.commons.collections.bidimap.TreeBidiMap$Node access$1400(org.apache.commons.collections.bidimap.TreeBidiMap,java.lang.Comparable,int)>($r3, $r2, 1);

        $r6 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: org.apache.commons.collections.bidimap.TreeBidiMap$Node access$2000(org.apache.commons.collections.bidimap.TreeBidiMap,org.apache.commons.collections.bidimap.TreeBidiMap$Node,int)>($r4, $r5, 1);

        if $r6 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r7 = virtualinvoke $r6.<org.apache.commons.collections.bidimap.TreeBidiMap$Node: java.lang.Object getValue()>();

     label2:
        return $r7;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2, $r6;
        java.lang.Comparable $r3, $r4;
        org.apache.commons.collections.bidimap.TreeBidiMap $r5;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r5 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r4 = (java.lang.Comparable) r1;

        $r3 = (java.lang.Comparable) r2;

        $r6 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: java.lang.Object access$2600(org.apache.commons.collections.bidimap.TreeBidiMap,java.lang.Comparable,java.lang.Comparable,int)>($r5, $r4, $r3, 1);

        return $r6;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r5;
        java.util.Map r0;
        java.lang.Object $r3, $r6, $r7;
        boolean $z0;

        r5 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r5.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.lang.Object r1, $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.bidimap.TreeBidiMap: java.lang.Object removeValue(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object removeValue(java.lang.Object)
    {
        java.lang.Object r1, $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.bidimap.TreeBidiMap: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public void clear()
    {
        org.apache.commons.collections.bidimap.TreeBidiMap $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        virtualinvoke $r1.<org.apache.commons.collections.bidimap.TreeBidiMap: void clear()>();

        return;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r1, $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap $r4;
        org.apache.commons.collections.bidimap.TreeBidiMap$View $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.util.Set keySet>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections.bidimap.TreeBidiMap$View;

        $r4 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        specialinvoke $r3.<org.apache.commons.collections.bidimap.TreeBidiMap$View: void <init>(org.apache.commons.collections.bidimap.TreeBidiMap,int,int)>($r4, 1, 1);

        r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.util.Set keySet> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.util.Set keySet>;

        return $r2;
    }

    public java.util.Collection values()
    {
        java.util.Set $r1, $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap $r4;
        org.apache.commons.collections.bidimap.TreeBidiMap$View $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.util.Set valuesSet>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections.bidimap.TreeBidiMap$View;

        $r4 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        specialinvoke $r3.<org.apache.commons.collections.bidimap.TreeBidiMap$View: void <init>(org.apache.commons.collections.bidimap.TreeBidiMap,int,int)>($r4, 1, 0);

        r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.util.Set valuesSet> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.util.Set valuesSet>;

        return $r2;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r1, $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$EntryView $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap $r4;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.util.Set entrySet>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections.bidimap.TreeBidiMap$EntryView;

        $r4 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        specialinvoke $r3.<org.apache.commons.collections.bidimap.TreeBidiMap$EntryView: void <init>(org.apache.commons.collections.bidimap.TreeBidiMap,int,int)>($r4, 1, 3);

        return $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: java.util.Set entrySet>;

        return $r2;
    }

    public org.apache.commons.collections.MapIterator mapIterator()
    {
        org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.OrderedMapIterator $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.commons.collections.iterators.EmptyOrderedMapIterator: org.apache.commons.collections.OrderedMapIterator INSTANCE>;

        return $r3;

     label1:
        $r1 = new org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        specialinvoke $r1.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: void <init>(org.apache.commons.collections.bidimap.TreeBidiMap,int)>($r2, 1);

        return $r1;
    }

    public org.apache.commons.collections.OrderedMapIterator orderedMapIterator()
    {
        org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.OrderedMapIterator $r3;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.commons.collections.iterators.EmptyOrderedMapIterator: org.apache.commons.collections.OrderedMapIterator INSTANCE>;

        return $r3;

     label1:
        $r1 = new org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        specialinvoke $r1.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: void <init>(org.apache.commons.collections.bidimap.TreeBidiMap,int)>($r2, 1);

        return $r1;
    }

    public org.apache.commons.collections.BidiMap inverseBidiMap()
    {
        org.apache.commons.collections.bidimap.TreeBidiMap $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        return $r1;
    }

    public org.apache.commons.collections.OrderedBidiMap inverseOrderedBidiMap()
    {
        org.apache.commons.collections.bidimap.TreeBidiMap $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.commons.collections.bidimap.TreeBidiMap $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $z0 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: boolean access$2700(org.apache.commons.collections.bidimap.TreeBidiMap,java.lang.Object,int)>($r2, r1, 1);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.commons.collections.bidimap.TreeBidiMap $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $i0 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: int access$2800(org.apache.commons.collections.bidimap.TreeBidiMap,int)>($r1, 1);

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap $r1;
        org.apache.commons.collections.bidimap.TreeBidiMap$Inverse r0;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$Inverse;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$Inverse: org.apache.commons.collections.bidimap.TreeBidiMap main>;

        $r2 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: java.lang.String access$2900(org.apache.commons.collections.bidimap.TreeBidiMap,int)>($r1, 1);

        return $r2;
    }
}
