public class org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator extends java.lang.Object implements org.bouncycastle.crypto.DerivationFunction
{
    private final org.bouncycastle.crypto.Digest digest;
    private org.bouncycastle.asn1.DERObjectIdentifier algorithm;
    private int keySize;
    private byte[] z;
    private byte[] partyAInfo;

    public void <init>(org.bouncycastle.crypto.Digest)
    {
        org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator r0;
        org.bouncycastle.crypto.Digest r1;

        r0 := @this: org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator;

        r1 := @parameter0: org.bouncycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.crypto.Digest digest> = r1;

        return;
    }

    public void init(org.bouncycastle.crypto.DerivationParameters)
    {
        byte[] $r4, $r5;
        org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator r2;
        org.bouncycastle.crypto.agreement.kdf.DHKDFParameters r1;
        int $i0;
        org.bouncycastle.crypto.DerivationParameters r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r3;

        r2 := @this: org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator;

        r0 := @parameter0: org.bouncycastle.crypto.DerivationParameters;

        r1 = (org.bouncycastle.crypto.agreement.kdf.DHKDFParameters) r0;

        $r3 = virtualinvoke r1.<org.bouncycastle.crypto.agreement.kdf.DHKDFParameters: org.bouncycastle.asn1.DERObjectIdentifier getAlgorithm()>();

        r2.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.asn1.DERObjectIdentifier algorithm> = $r3;

        $i0 = virtualinvoke r1.<org.bouncycastle.crypto.agreement.kdf.DHKDFParameters: int getKeySize()>();

        r2.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: int keySize> = $i0;

        $r4 = virtualinvoke r1.<org.bouncycastle.crypto.agreement.kdf.DHKDFParameters: byte[] getZ()>();

        r2.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: byte[] z> = $r4;

        $r5 = virtualinvoke r1.<org.bouncycastle.crypto.agreement.kdf.DHKDFParameters: byte[] getExtraInfo()>();

        r2.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: byte[] partyAInfo> = $r5;

        return;
    }

    public org.bouncycastle.crypto.Digest getDigest()
    {
        org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator r0;
        org.bouncycastle.crypto.Digest $r1;

        r0 := @this: org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator;

        $r1 = r0.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.crypto.Digest digest>;

        return $r1;
    }

    public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException
    {
        byte[] r0, r4, $r6, $r7, $r13, $r15, $r18, $r20, $r25;
        org.bouncycastle.crypto.DataLengthException $r28;
        byte $b4;
        org.bouncycastle.asn1.DERObjectIdentifier $r11;
        org.bouncycastle.asn1.DERSequence $r33, $r38;
        long l2, $l5, $l6, $l7, $l8, $l9;
        org.bouncycastle.crypto.Digest $r2, $r3, $r5, $r8, $r21, $r22;
        org.bouncycastle.asn1.DEROctetString $r32, $r34, $r36;
        org.bouncycastle.asn1.DERTaggedObject $r35, $r37;
        int $i0, $i1, $i3, i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, $i19;
        org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator r1;
        org.bouncycastle.asn1.ASN1EncodableVector $r30, $r31;
        java.lang.IllegalArgumentException $r29;

        r1 := @this: org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator;

        r0 := @parameter0: byte[];

        i15 := @parameter1: int;

        i16 := @parameter2: int;

        $i0 = lengthof r0;

        $i1 = $i0 - i16;

        if $i1 >= i15 goto label1;

        $r28 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r28.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too small");

        throw $r28;

     label1:
        l2 = (long) i16;

        $r2 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.crypto.Digest digest>;

        $i3 = interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $b4 = l2 cmp 8589934591L;

        $i19 = (int) $b4;

        if $i19 <= 0 goto label2;

        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output length too large");

        throw $r29;

     label2:
        $l5 = (long) $i3;

        $l6 = l2 + $l5;

        $l8 = $l6 - 1L;

        $l7 = (long) $i3;

        $l9 = $l8 / $l7;

        i10 = (int) $l9;

        $r3 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.crypto.Digest digest>;

        $i11 = interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r4 = newarray (byte)[$i11];

        i17 = 1;

        i18 = 0;

     label3:
        if i18 >= i10 goto label7;

        $r8 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.crypto.Digest digest>;

        $r7 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: byte[] z>;

        $r6 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: byte[] z>;

        $i12 = lengthof $r6;

        interfaceinvoke $r8.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r7, 0, $i12);

        $r30 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r30.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r31 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r31.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r11 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.asn1.DERObjectIdentifier algorithm>;

        virtualinvoke $r31.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r11);

        $r32 = new org.bouncycastle.asn1.DEROctetString;

        $r13 = specialinvoke r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: byte[] integerToBytes(int)>(i17);

        specialinvoke $r32.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r13);

        virtualinvoke $r31.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r32);

        $r33 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r33.<org.bouncycastle.asn1.DERSequence: void <init>(org.bouncycastle.asn1.DEREncodableVector)>($r31);

        virtualinvoke $r30.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r33);

        $r15 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: byte[] partyAInfo>;

        if $r15 == null goto label4;

        $r35 = new org.bouncycastle.asn1.DERTaggedObject;

        $r34 = new org.bouncycastle.asn1.DEROctetString;

        $r25 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: byte[] partyAInfo>;

        specialinvoke $r34.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r25);

        specialinvoke $r35.<org.bouncycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.bouncycastle.asn1.DEREncodable)>(1, 0, $r34);

        virtualinvoke $r30.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r35);

     label4:
        $r37 = new org.bouncycastle.asn1.DERTaggedObject;

        $r36 = new org.bouncycastle.asn1.DEROctetString;

        $i13 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: int keySize>;

        $r18 = specialinvoke r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: byte[] integerToBytes(int)>($i13);

        specialinvoke $r36.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r18);

        specialinvoke $r37.<org.bouncycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.bouncycastle.asn1.DEREncodable)>(1, 2, $r36);

        virtualinvoke $r30.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r37);

        $r38 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r38.<org.bouncycastle.asn1.DERSequence: void <init>(org.bouncycastle.asn1.DEREncodableVector)>($r30);

        $r20 = virtualinvoke $r38.<org.bouncycastle.asn1.DERSequence: byte[] getDEREncoded()>();

        $r21 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.crypto.Digest digest>;

        $i14 = lengthof $r20;

        interfaceinvoke $r21.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r20, 0, $i14);

        $r22 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r22.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r4, 0);

        if i16 <= $i3 goto label5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r0, i15, $i3);

        i15 = i15 + $i3;

        i16 = i16 - $i3;

        goto label6;

     label5:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r0, i15, i16);

     label6:
        i17 = i17 + 1;

        i18 = i18 + 1;

        goto label3;

     label7:
        $r5 = r1.<org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: void reset()>();

        return i16;
    }

    private byte[] integerToBytes(int)
    {
        byte[] r0;
        org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator r1;
        byte $b2, $b4, $b6, $b7;
        int i0, $i1, $i3, $i5;

        r1 := @this: org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator;

        i0 := @parameter0: int;

        r0 = newarray (byte)[4];

        $i1 = i0 >> 24;

        $b2 = (byte) $i1;

        r0[0] = $b2;

        $i3 = i0 >> 16;

        $b4 = (byte) $i3;

        r0[1] = $b4;

        $i5 = i0 >> 8;

        $b6 = (byte) $i5;

        r0[2] = $b6;

        $b7 = (byte) i0;

        r0[3] = $b7;

        return r0;
    }
}
