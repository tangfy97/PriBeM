public class org.apache.poi.xssf.model.MapInfo extends org.apache.poi.POIXMLDocumentPart
{
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo mapInfo;
    private java.util.Map maps;

    public void <init>()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo $r1;
        org.apache.poi.xssf.model.MapInfo r0;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>()>();

        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo newInstance()>();

        r0.<org.apache.poi.xssf.model.MapInfo: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo mapInfo> = $r1;

        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackagePart r1;
        org.apache.poi.openxml4j.opc.PackageRelationship r2;
        org.apache.poi.xssf.model.MapInfo r0;
        java.io.InputStream $r3;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        $r3 = virtualinvoke r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        virtualinvoke r0.<org.apache.poi.xssf.model.MapInfo: void readFrom(java.io.InputStream)>($r3);

        return;
    }

    public void readFrom(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.xssf.usermodel.XSSFMap $r12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument $r1;
        java.util.HashMap $r4;
        long $l0;
        java.lang.Integer $r11;
        java.util.Map $r10;
        int $i1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap r9;
        java.lang.String $r15;
        boolean $z0;
        java.util.Iterator $r7;
        java.io.IOException $r14;
        org.apache.poi.xssf.model.MapInfo r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo $r3, $r5;
        java.util.List $r6;
        org.apache.xmlbeans.XmlException $r13;
        java.lang.Object $r8;
        java.io.InputStream r0;

        r2 := @this: org.apache.poi.xssf.model.MapInfo;

        r0 := @parameter0: java.io.InputStream;

     label1:
        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument parse(java.io.InputStream)>(r0);

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo getMapInfo()>();

        r2.<org.apache.poi.xssf.model.MapInfo: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo mapInfo> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r2.<org.apache.poi.xssf.model.MapInfo: java.util.Map maps> = $r4;

        $r5 = r2.<org.apache.poi.xssf.model.MapInfo: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo mapInfo>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo: java.util.List getMapList()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap) $r8;

        $r10 = r2.<org.apache.poi.xssf.model.MapInfo: java.util.Map maps>;

        $l0 = interfaceinvoke r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap: long getID()>();

        $i1 = (int) $l0;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r12 = new org.apache.poi.xssf.usermodel.XSSFMap;

        specialinvoke $r12.<org.apache.poi.xssf.usermodel.XSSFMap: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap,org.apache.poi.xssf.model.MapInfo)>(r9, r2);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        goto label2;

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.io.IOException;

        $r15 = virtualinvoke $r13.<org.apache.xmlbeans.XmlException: java.lang.String getLocalizedMessage()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label5:
        return;

        catch org.apache.xmlbeans.XmlException from label1 to label3 with label4;
    }

    public org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        org.apache.poi.POIXMLDocumentPart $r1;
        org.apache.poi.xssf.model.MapInfo r0;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.model.MapInfo: org.apache.poi.POIXMLDocumentPart getParent()>();

        $r2 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) $r1;

        return $r2;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo getCTMapInfo()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo $r1;
        org.apache.poi.xssf.model.MapInfo r0;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        $r1 = r0.<org.apache.poi.xssf.model.MapInfo: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo mapInfo>;

        return $r1;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSchema getCTSchemaById(java.lang.String)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSchema r5, r8;
        java.util.Iterator $r3;
        org.apache.poi.xssf.model.MapInfo r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo $r1;
        java.util.List $r2;
        java.lang.Object $r4;
        java.lang.String $r6, r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        r7 := @parameter0: java.lang.String;

        r8 = null;

        $r1 = r0.<org.apache.poi.xssf.model.MapInfo: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo mapInfo>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo: java.util.List getSchemaList()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSchema) $r4;

        $r6 = interfaceinvoke r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSchema: java.lang.String getID()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        r8 = r5;

        goto label3;

     label2:
        goto label1;

     label3:
        return r8;
    }

    public org.apache.poi.xssf.usermodel.XSSFMap getXSSFMapById(int)
    {
        org.apache.poi.xssf.usermodel.XSSFMap $r4;
        java.util.Map $r1;
        int i0;
        java.lang.Object $r3;
        java.lang.Integer $r2;
        org.apache.poi.xssf.model.MapInfo r0;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.MapInfo: java.util.Map maps>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (org.apache.poi.xssf.usermodel.XSSFMap) $r3;

        return $r4;
    }

    public org.apache.poi.xssf.usermodel.XSSFMap getXSSFMapByName(java.lang.String)
    {
        org.apache.poi.xssf.usermodel.XSSFMap r5, r11;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.poi.xssf.model.MapInfo r0;
        java.util.Map $r1;
        java.lang.Object $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap $r6, $r8;
        java.lang.String $r7, $r9, r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        r10 := @parameter0: java.lang.String;

        r11 = null;

        $r1 = r0.<org.apache.poi.xssf.model.MapInfo: java.util.Map maps>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.poi.xssf.usermodel.XSSFMap) $r4;

        $r6 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.XSSFMap: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap getCtMap()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap: java.lang.String getName()>();

        if $r7 == null goto label2;

        $r8 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.XSSFMap: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap getCtMap()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMap: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label2;

        r11 = r5;

     label2:
        goto label1;

     label3:
        return r11;
    }

    public java.util.Collection getAllXSSFMaps()
    {
        org.apache.poi.xssf.model.MapInfo r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        $r1 = r0.<org.apache.poi.xssf.model.MapInfo: java.util.Map maps>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    protected void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo $r2;
        org.apache.xmlbeans.XmlOptions $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument $r0;
        org.apache.poi.xssf.model.MapInfo r1;

        r1 := @this: org.apache.poi.xssf.model.MapInfo;

        r3 := @parameter0: java.io.OutputStream;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument newInstance()>();

        $r2 = r1.<org.apache.poi.xssf.model.MapInfo: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo mapInfo>;

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument: void setMapInfo(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTMapInfo)>($r2);

        $r4 = <org.apache.poi.xssf.model.MapInfo: org.apache.xmlbeans.XmlOptions DEFAULT_XML_OPTIONS>;

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.MapInfoDocument: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>(r3, $r4);

        return;
    }

    protected void commit() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        org.apache.poi.openxml4j.opc.PackagePart $r1;
        org.apache.poi.xssf.model.MapInfo r0;

        r0 := @this: org.apache.poi.xssf.model.MapInfo;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.model.MapInfo: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        virtualinvoke r0.<org.apache.poi.xssf.model.MapInfo: void writeTo(java.io.OutputStream)>($r2);

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        return;
    }
}
