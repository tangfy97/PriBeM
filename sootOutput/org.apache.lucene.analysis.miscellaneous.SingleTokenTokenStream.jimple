public final class org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream extends org.apache.lucene.analysis.TokenStream
{
    private boolean exhausted;
    private org.apache.lucene.analysis.Token singleToken;
    private final org.apache.lucene.util.AttributeImpl tokenAtt;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.analysis.Token)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory $r1;
        java.lang.AssertionError $r7, $r8;
        org.apache.lucene.analysis.Token r2, $r3;
        org.apache.lucene.util.AttributeImpl $r5, $r6;
        org.apache.lucene.util.Attribute $r4;
        org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream;

        r2 := @parameter0: org.apache.lucene.analysis.Token;

        $r1 = <org.apache.lucene.analysis.Token: org.apache.lucene.util.AttributeSource$AttributeFactory TOKEN_ATTRIBUTE_FACTORY>;

        specialinvoke r0.<org.apache.lucene.analysis.TokenStream: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory)>($r1);

        r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: boolean exhausted> = 0;

        $z0 = <org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r3 = virtualinvoke r2.<org.apache.lucene.analysis.Token: org.apache.lucene.analysis.Token clone()>();

        r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: org.apache.lucene.analysis.Token singleToken> = $r3;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r5 = (org.apache.lucene.util.AttributeImpl) $r4;

        r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: org.apache.lucene.util.AttributeImpl tokenAtt> = $r5;

        $z1 = <org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r6 = r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: org.apache.lucene.util.AttributeImpl tokenAtt>;

        $z2 = $r6 instanceof org.apache.lucene.analysis.Token;

        if $z2 != 0 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        return;
    }

    public final boolean incrementToken()
    {
        org.apache.lucene.analysis.Token $r2;
        org.apache.lucene.util.AttributeImpl $r1;
        org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream;

        $z0 = r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: boolean exhausted>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: void clearAttributes()>();

        $r2 = r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: org.apache.lucene.analysis.Token singleToken>;

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: org.apache.lucene.util.AttributeImpl tokenAtt>;

        virtualinvoke $r2.<org.apache.lucene.analysis.Token: void copyTo(org.apache.lucene.util.AttributeImpl)>($r1);

        r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: boolean exhausted> = 1;

        return 1;
    }

    public void reset()
    {
        org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream r0;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream;

        r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: boolean exhausted> = 0;

        return;
    }

    public org.apache.lucene.analysis.Token getToken()
    {
        org.apache.lucene.analysis.Token $r1, $r2;
        org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream r0;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream;

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: org.apache.lucene.analysis.Token singleToken>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.analysis.Token: org.apache.lucene.analysis.Token clone()>();

        return $r2;
    }

    public void setToken(org.apache.lucene.analysis.Token)
    {
        org.apache.lucene.analysis.Token r1, $r2;
        org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream r0;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream;

        r1 := @parameter0: org.apache.lucene.analysis.Token;

        $r2 = virtualinvoke r1.<org.apache.lucene.analysis.Token: org.apache.lucene.analysis.Token clone()>();

        r0.<org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: org.apache.lucene.analysis.Token singleToken> = $r2;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.miscellaneous.SingleTokenTokenStream: boolean $assertionsDisabled> = $z1;

        return;
    }
}
